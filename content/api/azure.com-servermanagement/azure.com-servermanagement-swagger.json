{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ServerManagement",
    "description" : "REST API for Azure Server Management Service.",
    "version" : "2016-07-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServerManagement/gateways" : {
      "get" : {
        "tags" : [ "Gateways" ],
        "description" : "Returns gateways in a subscription.",
        "operationId" : "Gateway_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResources"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResources"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServerManagement/nodes" : {
      "get" : {
        "tags" : [ "Nodes" ],
        "description" : "Lists nodes in a subscription.",
        "operationId" : "Node_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResources"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResources"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways" : {
      "get" : {
        "tags" : [ "Gateways" ],
        "description" : "Returns gateways in a resource group.",
        "operationId" : "Gateway_ListForResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResources"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResources"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}" : {
      "get" : {
        "tags" : [ "Gateways" ],
        "description" : "Gets a gateway.",
        "operationId" : "Gateway_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The gateway name (256 characters maximum)",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "schema" : {
            "type" : "string",
            "enum" : [ "status", "download" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Gateways" ],
        "description" : "Creates or updates a ManagementService gateway.",
        "operationId" : "Gateway_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The gateway name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GatewayParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GatewayParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              }
            }
          },
          "201" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Gateways" ],
        "description" : "Deletes a gateway from a resource group.",
        "operationId" : "Gateway_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The gateway name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The object exists and was deleted successfully."
          },
          "204" : {
            "description" : "The request is well formed but the resource does not exist."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "Updates a gateway belonging to a resource group.",
        "operationId" : "Gateway_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The gateway name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Update operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GatewayParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GatewayParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Update completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: The location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/profile" : {
      "post" : {
        "tags" : [ "Gateways" ],
        "description" : "Gets a gateway profile.",
        "operationId" : "Gateway_GetProfile",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The gateway name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayProfile"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayProfile"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/regenerateprofile" : {
      "post" : {
        "tags" : [ "Gateways" ],
        "description" : "Regenerate a gateway's profile",
        "operationId" : "Gateway_RegenerateProfile",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The gateway name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully."
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/gateways/{gatewayName}/upgradetolatest" : {
      "post" : {
        "tags" : [ "Gateways" ],
        "description" : "Upgrades a gateway.",
        "operationId" : "Gateway_Upgrade",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "gatewayName",
          "in" : "path",
          "description" : "The gateway name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully."
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes" : {
      "get" : {
        "tags" : [ "Nodes" ],
        "description" : "Lists nodes in a resource group.",
        "operationId" : "Node_ListForResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResources"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResources"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}" : {
      "get" : {
        "tags" : [ "Nodes" ],
        "description" : "Gets a management node.",
        "operationId" : "Node_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The object exists and was deleted successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Nodes" ],
        "description" : "Creates or updates a management node.",
        "operationId" : "Node_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodeParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodeParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              }
            }
          },
          "201" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Nodes" ],
        "description" : "deletes a management node",
        "operationId" : "Node_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The object exists and was deleted successfully."
          },
          "204" : {
            "description" : "The request is well formed but the resource does not exist."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Nodes" ],
        "description" : "Updates a management node.",
        "operationId" : "Node_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodeParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodeParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}" : {
      "get" : {
        "tags" : [ "Sessions" ],
        "description" : "Gets a session for a node.",
        "operationId" : "Session_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Sessions" ],
        "description" : "Creates a session for a node.",
        "operationId" : "Session_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SessionParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SessionParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created: the session was created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Sessions" ],
        "description" : "Deletes a session for a node.",
        "operationId" : "Session_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully."
          },
          "204" : {
            "description" : "The request is well formed but the resource does not exist."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions" : {
      "get" : {
        "tags" : [ "PowerShell" ],
        "description" : "Gets a list of the active sessions.",
        "operationId" : "PowerShell_ListSession",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellSessionResources"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellSessionResources"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}" : {
      "get" : {
        "tags" : [ "PowerShell" ],
        "description" : "Gets the status of a command.",
        "operationId" : "PowerShell_GetCommandStatus",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pssession",
          "in" : "path",
          "description" : "The PowerShell sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Gets current output from an ongoing call.",
          "schema" : {
            "type" : "string",
            "enum" : [ "output" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandStatus"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PowerShell" ],
        "description" : "Creates a PowerShell session.",
        "operationId" : "PowerShell_CreateSession",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pssession",
          "in" : "path",
          "description" : "The PowerShell sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed succesfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellSessionResource"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellSessionResource"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PowerShell" ],
        "description" : "Updates a running PowerShell command with more data.",
        "operationId" : "PowerShell_UpdateCommand",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pssession",
          "in" : "path",
          "description" : "The PowerShell sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandResults"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandResults"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/cancel" : {
      "post" : {
        "tags" : [ "PowerShell" ],
        "description" : "Cancels a PowerShell command.",
        "operationId" : "PowerShell_CancelCommand",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pssession",
          "in" : "path",
          "description" : "The PowerShell sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The cancellation was completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandResults"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandResults"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/invokeCommand" : {
      "post" : {
        "tags" : [ "PowerShell" ],
        "description" : "Creates a PowerShell script and invokes it.",
        "operationId" : "PowerShell_InvokeCommand",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pssession",
          "in" : "path",
          "description" : "The PowerShell sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Invoke PowerShell Command operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PowerShellCommandParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PowerShellCommandParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandResults"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellCommandResults"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServerManagement/nodes/{nodeName}/sessions/{session}/features/powerShellConsole/pssessions/{pssession}/tab" : {
      "post" : {
        "tags" : [ "PowerShell" ],
        "description" : "Gets tab completion values for a command.",
        "operationId" : "PowerShell_TabCompletion",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name uniquely identifies the resource group within the user subscriptionId.",
          "required" : true,
          "schema" : {
            "minLength" : 3,
            "pattern" : "[a-zA-Z0-9]+",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The node name (256 characters maximum).",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "session",
          "in" : "path",
          "description" : "The sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pssession",
          "in" : "path",
          "description" : "The PowerShell sessionId from the user.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the tab completion call.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PowerShellTabCompletionParameters"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PowerShellTabCompletionParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was succesfully completed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellTabCompletionResults"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PowerShellTabCompletionResults"
                }
              }
            }
          },
          "default" : {
            "description" : "Default Response. It will be deserialized as per the error definition specified in the schema, and an exception will be thrown.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "EncryptionJwkResource" : {
        "type" : "object",
        "properties" : {
          "alg" : {
            "type" : "string"
          },
          "e" : {
            "type" : "string"
          },
          "kty" : {
            "type" : "string"
          },
          "n" : {
            "type" : "string"
          }
        },
        "description" : "The public key of the gateway."
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fields" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "description" : "Error message."
      },
      "GatewayParameters" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Location of the resource."
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "upgradeMode" : {
                "type" : "string",
                "description" : "The upgradeMode property gives the flexibility to gateway to auto upgrade itself. If properties value not specified, then we assume upgradeMode = Automatic.",
                "enum" : [ "Manual", "Automatic" ]
              }
            },
            "description" : "Collection of properties."
          },
          "tags" : {
            "type" : "object",
            "description" : "Resource tags."
          }
        },
        "description" : "Collection of parameters for operations on a gateway resource."
      },
      "GatewayProfile" : {
        "type" : "object",
        "properties" : {
          "dataPlaneServiceBaseAddress" : {
            "type" : "string",
            "description" : "The Dataplane connection URL."
          },
          "environment" : {
            "type" : "string",
            "description" : "The environment for the gateway (DEV, DogFood, or Production)."
          },
          "gatewayId" : {
            "type" : "string",
            "description" : "The ID of the gateway."
          },
          "messagingAccount" : {
            "type" : "string",
            "description" : "Messaging Account."
          },
          "messagingKey" : {
            "type" : "string",
            "description" : "Messaging Key."
          },
          "messagingNamespace" : {
            "type" : "string",
            "description" : "Messaging namespace."
          },
          "requestQueue" : {
            "type" : "string",
            "description" : "Request queue name."
          },
          "responseTopic" : {
            "type" : "string",
            "description" : "Response topic name."
          },
          "statusBlobSignature" : {
            "type" : "string",
            "description" : "The gateway status blob SAS URL."
          },
          "upgradeManifestUrl" : {
            "type" : "string",
            "description" : "Gateway upgrade manifest URL."
          }
        },
        "description" : "JSON properties that the gateway service uses know how to communicate with the resource."
      },
      "GatewayResource" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "activeMessageCount" : {
                "type" : "integer",
                "description" : "Number of active messages."
              },
              "created" : {
                "type" : "string",
                "description" : "UTC date and time when gateway was first added to management service.",
                "format" : "date-time"
              },
              "desiredVersion" : {
                "type" : "string",
                "description" : "Latest available MSI version."
              },
              "installerDownload" : {
                "type" : "string",
                "description" : "Installer download uri.",
                "readOnly" : true
              },
              "instances" : {
                "type" : "array",
                "description" : "Names of the nodes in the gateway.",
                "items" : {
                  "$ref" : "#/components/schemas/GatewayStatus"
                }
              },
              "latestPublishedMsiVersion" : {
                "type" : "string",
                "description" : "Last published MSI version."
              },
              "minimumVersion" : {
                "type" : "string",
                "description" : "Minimum gateway version.",
                "readOnly" : true
              },
              "publishedTimeUtc" : {
                "type" : "string",
                "description" : "The date/time of the last published gateway.",
                "format" : "date-time"
              },
              "updated" : {
                "type" : "string",
                "description" : "UTC date and time when node was last updated.",
                "format" : "date-time"
              },
              "upgradeMode" : {
                "type" : "string",
                "description" : "The upgradeMode property gives the flexibility to gateway to auto upgrade itself. If properties value not specified, then we assume upgradeMode = Automatic.",
                "enum" : [ "Manual", "Automatic" ]
              }
            },
            "description" : "Collection of properties."
          }
        },
        "description" : "Data model for an arm gateway resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "GatewayResources" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Gateway Resources.",
            "items" : {
              "$ref" : "#/components/schemas/GatewayResource"
            }
          }
        },
        "description" : "Collection of Gateway Resources."
      },
      "GatewayStatus" : {
        "type" : "object",
        "properties" : {
          "activeMessageCount" : {
            "type" : "integer",
            "description" : "Active message count."
          },
          "allowGatewayGroupPolicyStatus" : {
            "type" : "boolean",
            "description" : "Status of the allowGatewayGroupPolicy setting."
          },
          "availableMemoryMByte" : {
            "type" : "number",
            "description" : "The available memory on the gateway host machine in megabytes."
          },
          "encryptionCertificateThumbprint" : {
            "type" : "string",
            "description" : "Thumbprint of the encryption certificate."
          },
          "encryptionJwk" : {
            "$ref" : "#/components/schemas/EncryptionJwkResource"
          },
          "friendlyOsName" : {
            "type" : "string",
            "description" : "The Plaintext description of the OS on the gateway."
          },
          "gatewayCpuUtilizationPercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "number",
            "description" : "The CPU utilization of the gateway process (numeric value between 0 and 100).",
            "format" : "float"
          },
          "gatewayId" : {
            "type" : "string",
            "description" : "The gateway resource ID."
          },
          "gatewayVersion" : {
            "type" : "string",
            "description" : "The version of the gateway that is installed on the system."
          },
          "gatewayWorkingSetMByte" : {
            "type" : "number",
            "description" : "The working set size of the gateway process in megabytes."
          },
          "groupPolicyError" : {
            "type" : "string",
            "description" : "The group policy error."
          },
          "installedDate" : {
            "type" : "string",
            "description" : "The date the gateway was installed.",
            "format" : "date-time"
          },
          "latestPublishedMsiVersion" : {
            "type" : "string",
            "description" : "Latest published version of the gateway install MSI."
          },
          "logicalProcessorCount" : {
            "type" : "integer",
            "description" : "Number of logical processors in the gateway system."
          },
          "name" : {
            "type" : "string",
            "description" : "The computer name of the gateway system."
          },
          "publishedTimeUtc" : {
            "type" : "string",
            "description" : "Gateway install MSI published time.",
            "format" : "date-time"
          },
          "requireMfaGroupPolicyStatus" : {
            "type" : "boolean",
            "description" : "Status of the requireMfaGroupPolicy setting."
          },
          "secondaryEncryptionCertificateThumbprint" : {
            "type" : "string",
            "description" : "Secondary thumbprint of the encryption certificate."
          },
          "secondaryEncryptionJwk" : {
            "$ref" : "#/components/schemas/EncryptionJwkResource"
          },
          "statusUpdated" : {
            "type" : "string",
            "description" : "UTC date and time when gateway status was last updated.",
            "format" : "date-time"
          },
          "totalCpuUtilizationPercent" : {
            "type" : "number",
            "description" : "CPU Utilization of the whole system."
          }
        },
        "description" : "Expanded gateway status information."
      },
      "NodeParameters" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Location of the resource."
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "connectionName" : {
                "type" : "string",
                "description" : "myhost.domain.com"
              },
              "gatewayId" : {
                "type" : "string",
                "description" : "Gateway ID which will manage this node."
              },
              "password" : {
                "type" : "string",
                "description" : "Password associated with user name.",
                "format" : "password"
              },
              "userName" : {
                "type" : "string",
                "description" : "User name to be used to connect to node."
              }
            },
            "description" : "Collection of properties."
          },
          "tags" : {
            "type" : "object",
            "description" : "Resource tags."
          }
        },
        "description" : "Parameter collection for operations on arm node resource."
      },
      "NodeResource" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "connectionName" : {
                "type" : "string",
                "description" : "myhost.domain.com"
              },
              "created" : {
                "type" : "string",
                "description" : "UTC date and time when node was first added to management service.",
                "format" : "date-time"
              },
              "gatewayId" : {
                "type" : "string",
                "description" : "ID of the gateway."
              },
              "updated" : {
                "type" : "string",
                "description" : "UTC date and time when node was last updated.",
                "format" : "date-time"
              }
            },
            "description" : "Collection of properties."
          }
        },
        "description" : "A Node Resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "NodeResources" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Node Resources.",
            "items" : {
              "$ref" : "#/components/schemas/NodeResource"
            }
          }
        },
        "description" : "A collection of node resource objects."
      },
      "PowerShellCommandParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "command" : {
                "type" : "string",
                "description" : "Script to execute."
              }
            },
            "description" : "Collection of properties."
          }
        },
        "description" : "The parameters to a PowerShell script execution command."
      },
      "PowerShellCommandResult" : {
        "type" : "object",
        "properties" : {
          "backgroundColor" : {
            "type" : "string",
            "description" : "The HTML color string representing the background color."
          },
          "caption" : {
            "type" : "string",
            "description" : "Text that precedes the prompt."
          },
          "descriptions" : {
            "type" : "array",
            "description" : "Collection of PromptFieldDescription objects that contains the user input.",
            "items" : {
              "$ref" : "#/components/schemas/PromptFieldDescription"
            }
          },
          "exitCode" : {
            "type" : "integer",
            "description" : "The exit code from a executable that was called from PowerShell."
          },
          "foregroundColor" : {
            "type" : "string",
            "description" : "The HTML color string representing the foreground color."
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of the prompt message."
          },
          "message" : {
            "type" : "string",
            "description" : "Text of the prompt."
          },
          "messageType" : {
            "type" : "integer",
            "description" : "The type of message."
          },
          "prompt" : {
            "type" : "string",
            "description" : "The interactive prompt message."
          },
          "value" : {
            "type" : "string",
            "description" : "Actual result text from the PowerShell Command."
          }
        },
        "description" : "Results from invoking a PowerShell command."
      },
      "PowerShellCommandResults" : {
        "type" : "object",
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "completed" : {
            "type" : "boolean"
          },
          "pssession" : {
            "type" : "string"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PowerShellCommandResult"
            }
          }
        },
        "description" : "A collection of results from a PowerShell command."
      },
      "PowerShellCommandStatus" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PowerShellCommandResults"
          }
        },
        "description" : "Result status from invoking a PowerShell command.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "PowerShellSessionResource" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "disconnectedOn" : {
                "type" : "string",
                "description" : "Timestamp of last time the service disconnected from the runspace.",
                "format" : "date-time"
              },
              "expiresOn" : {
                "type" : "string",
                "description" : "Timestamp when the runspace expires.",
                "format" : "date-time"
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the runspace."
              },
              "runspaceAvailability" : {
                "type" : "string",
                "description" : "The availability of the runspace."
              },
              "sessionId" : {
                "type" : "string",
                "description" : "The PowerShell Session ID."
              },
              "state" : {
                "type" : "string",
                "description" : "The runspace state."
              },
              "version" : {
                "$ref" : "#/components/schemas/Version"
              }
            },
            "description" : "Collection of properties."
          }
        },
        "description" : "A PowerShell session resource (practically equivalent to a runspace instance).",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "PowerShellSessionResources" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to the next set of resources."
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of PowerShell session resources.",
            "items" : {
              "$ref" : "#/components/schemas/PowerShellSessionResource"
            }
          }
        },
        "description" : "A collection of PowerShell session resources"
      },
      "PowerShellTabCompletionParameters" : {
        "type" : "object",
        "properties" : {
          "command" : {
            "type" : "string",
            "description" : "Command to get tab completion for."
          }
        },
        "description" : "Collection of parameters for PowerShell tab completion."
      },
      "PowerShellTabCompletionResults" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "An array of strings representing the different values that can be selected through."
      },
      "PromptFieldDescription" : {
        "type" : "object",
        "properties" : {
          "helpMessage" : {
            "type" : "string",
            "description" : "The help message of the prompt."
          },
          "label" : {
            "type" : "string",
            "description" : "The label text of the prompt."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the prompt."
          },
          "promptFieldType" : {
            "type" : "string",
            "enum" : [ "String", "SecureString", "Credential" ]
          },
          "promptFieldTypeIsList" : {
            "type" : "boolean",
            "description" : "When set to 'true' the prompt field type is a list of values."
          }
        },
        "description" : "Field description for the implementation of PSHostUserInterface.Prompt"
      },
      "PromptMessageResponse" : {
        "type" : "object",
        "properties" : {
          "response" : {
            "type" : "array",
            "description" : "The list of responses a cmdlet expects.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The response to a prompt message."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource Manager Resource ID.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Resource Manager Resource Location.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource Manager Resource Name.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource Manager Resource Tags."
          },
          "type" : {
            "type" : "string",
            "description" : "Resource Manager Resource Type.",
            "readOnly" : true
          }
        },
        "description" : "Resource Manager Resource Information."
      },
      "SessionParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "EncryptionCertificateThumbprint" : {
                "type" : "string",
                "description" : "Encryption certificate thumbprint."
              },
              "credentialDataFormat" : {
                "type" : "string",
                "description" : "Credential data format.",
                "enum" : [ "RsaEncrypted" ]
              },
              "password" : {
                "type" : "string",
                "description" : "Encrypted Password associated with user name."
              },
              "retentionPeriod" : {
                "type" : "string",
                "description" : "Session retention period.",
                "enum" : [ "Session", "Persistent" ]
              },
              "userName" : {
                "type" : "string",
                "description" : "Encrypted User name to be used to connect to node."
              }
            },
            "description" : "Collection of properties"
          }
        },
        "description" : "Parameter collection for creation and other operations on sessions."
      },
      "SessionResource" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "created" : {
                "type" : "string",
                "description" : "UTC date and time when node was first added to management service.",
                "format" : "date-time"
              },
              "updated" : {
                "type" : "string",
                "description" : "UTC date and time when node was last updated.",
                "format" : "date-time"
              },
              "userName" : {
                "type" : "string",
                "description" : "The username connecting to the session."
              }
            },
            "description" : "Collection of properties."
          }
        },
        "description" : "The session object.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Version" : {
        "type" : "object",
        "properties" : {
          "build" : {
            "type" : "integer",
            "description" : "The third number of the version."
          },
          "major" : {
            "type" : "integer",
            "description" : "The leftmost number of the version."
          },
          "majorRevision" : {
            "type" : "integer",
            "description" : "The MSW of the fourth part."
          },
          "minor" : {
            "type" : "integer",
            "description" : "The second leftmost number of the version."
          },
          "minorRevision" : {
            "type" : "integer",
            "description" : "The LSW of the fourth part."
          },
          "revision" : {
            "type" : "integer",
            "description" : "The fourth number of the version."
          }
        },
        "description" : "A multipart-numeric version number."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client API Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}