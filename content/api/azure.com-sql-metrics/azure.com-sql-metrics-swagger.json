{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure SQL Database",
    "description" : "Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.",
    "version" : "2014-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metricDefinitions" : {
      "get" : {
        "tags" : [ "Databases" ],
        "description" : "Returns database metric definitions.",
        "operationId" : "Databases_ListMetricDefinitions",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metrics" : {
      "get" : {
        "tags" : [ "Databases" ],
        "description" : "Returns database metrics.",
        "operationId" : "Databases_ListMetrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "An OData filter expression that describes a subset of metrics to return.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metricDefinitions" : {
      "get" : {
        "tags" : [ "ElasticPools" ],
        "description" : "Returns elastic pool metric definitions.",
        "operationId" : "ElasticPools_ListMetricDefinitions",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elasticPoolName",
          "in" : "path",
          "description" : "The name of the elastic pool.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDefinitionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metrics" : {
      "get" : {
        "tags" : [ "ElasticPools" ],
        "description" : "Returns elastic pool  metrics.",
        "operationId" : "ElasticPools_ListMetrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "elasticPoolName",
          "in" : "path",
          "description" : "The name of the elastic pool.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "An OData filter expression that describes a subset of metrics to return.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricListResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Metric" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "The end time for the metric (ISO-8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "metricValues" : {
            "type" : "array",
            "description" : "The metric values for the specified time window and timestep.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MetricValue"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/MetricName"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time for the metric (ISO-8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "The time step to be used to summarize the metric values.",
            "readOnly" : true
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "readOnly" : true,
            "enum" : [ "count", "bytes", "seconds", "percent", "countPerSecond", "bytesPerSecond" ]
          }
        },
        "description" : "Database metrics."
      },
      "MetricAvailability" : {
        "type" : "object",
        "properties" : {
          "retention" : {
            "type" : "string",
            "description" : "The length of retention for the database metric.",
            "readOnly" : true
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "The granularity of the database metric.",
            "readOnly" : true
          }
        },
        "description" : "A metric availability value."
      },
      "MetricDefinition" : {
        "type" : "object",
        "properties" : {
          "metricAvailabilities" : {
            "type" : "array",
            "description" : "The list of database metric availabilities for the metric.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MetricAvailability"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/MetricName"
          },
          "primaryAggregationType" : {
            "type" : "string",
            "description" : "The primary aggregation type defining how metric values are displayed.",
            "readOnly" : true,
            "enum" : [ "None", "Average", "Count", "Minimum", "Maximum", "Total" ]
          },
          "resourceUri" : {
            "type" : "string",
            "description" : "The resource uri of the database.",
            "readOnly" : true
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of the metric.",
            "readOnly" : true,
            "enum" : [ "Count", "Bytes", "Seconds", "Percent", "CountPerSecond", "BytesPerSecond" ]
          }
        },
        "description" : "A database metric definition."
      },
      "MetricDefinitionListResult" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of metric definitions for the database.",
            "items" : {
              "$ref" : "#/components/schemas/MetricDefinition"
            }
          }
        },
        "description" : "The response to a list database metric definitions request."
      },
      "MetricListResult" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of metrics for the database.",
            "items" : {
              "$ref" : "#/components/schemas/Metric"
            }
          }
        },
        "description" : "The response to a list database metrics request."
      },
      "MetricName" : {
        "type" : "object",
        "properties" : {
          "localizedValue" : {
            "type" : "string",
            "description" : "The friendly name of the database metric.",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The name of the database metric.",
            "readOnly" : true
          }
        },
        "description" : "A database metric name."
      },
      "MetricValue" : {
        "type" : "object",
        "properties" : {
          "average" : {
            "type" : "number",
            "description" : "The average value of the metric.",
            "format" : "double",
            "readOnly" : true
          },
          "count" : {
            "type" : "number",
            "description" : "The number of values for the metric.",
            "format" : "int32",
            "readOnly" : true
          },
          "maximum" : {
            "type" : "number",
            "description" : "The max value of the metric.",
            "format" : "double",
            "readOnly" : true
          },
          "minimum" : {
            "type" : "number",
            "description" : "The min value of the metric.",
            "format" : "double",
            "readOnly" : true
          },
          "timestamp" : {
            "type" : "string",
            "description" : "The metric timestamp (ISO-8601 format).",
            "format" : "date-time",
            "readOnly" : true
          },
          "total" : {
            "type" : "number",
            "description" : "The total value of the metric.",
            "format" : "double",
            "readOnly" : true
          }
        },
        "description" : "Represents database metrics."
      }
    },
    "parameters" : {
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}