{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SqlManagementClient",
    "description" : "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "version" : "2018-06-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections" : {
      "get" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Gets all private endpoint connections on a server.",
        "operationId" : "PrivateEndpointConnections_ListByServer",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved private endpoint connections.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateEndpointConnectionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 PrivateEndpointConnectionDoesNotExist - Private Endpoint Connection does not exist\n\n * 400 PrivateEndpointConnectionStatusNotPending - Private Endpoint Connection Status is not Pending\n\n * 400 NullRemotePrivateLinkServiceConnectionState - Remote Private Link Service Connection State is Null\n\n * 400 NullPrivateEndpointConnectionProperties - Private Endpoint Connection Properties is Null\n\n * 400 NullRemotePrivateLinkServiceConnectionStateStatus - Remote Private Link Service Connection State Status is Null\n\n * 400 IncorrectPrivateLinkServiceConnectionStateStatus - Private Link Service Connection State Status must be \"Approved\" or \"Rejected\"\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}" : {
      "get" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Gets a private endpoint connection.",
        "operationId" : "PrivateEndpointConnections_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "privateEndpointConnectionName",
          "in" : "path",
          "description" : "The name of the private endpoint connection.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a specified private endpoint connection.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateEndpointConnection"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 PrivateEndpointConnectionDoesNotExist - Private Endpoint Connection does not exist\n\n * 400 PrivateEndpointConnectionStatusNotPending - Private Endpoint Connection Status is not Pending\n\n * 400 NullRemotePrivateLinkServiceConnectionState - Remote Private Link Service Connection State is Null\n\n * 400 NullPrivateEndpointConnectionProperties - Private Endpoint Connection Properties is Null\n\n * 400 NullRemotePrivateLinkServiceConnectionStateStatus - Remote Private Link Service Connection State Status is Null\n\n * 400 IncorrectPrivateLinkServiceConnectionStateStatus - Private Link Service Connection State Status must be \"Approved\" or \"Rejected\"\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      },
      "put" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Approve or reject a private endpoint connection with a given name.",
        "operationId" : "PrivateEndpointConnections_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "privateEndpointConnectionName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateEndpointConnection"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully approved or rejected private endpoint connection.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateEndpointConnection"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 PrivateEndpointConnectionDoesNotExist - Private Endpoint Connection does not exist\n\n * 400 PrivateEndpointConnectionStatusNotPending - Private Endpoint Connection Status is not Pending\n\n * 400 NullRemotePrivateLinkServiceConnectionState - Remote Private Link Service Connection State is Null\n\n * 400 NullPrivateEndpointConnectionProperties - Private Endpoint Connection Properties is Null\n\n * 400 NullRemotePrivateLinkServiceConnectionStateStatus - Remote Private Link Service Connection State Status is Null\n\n * 400 IncorrectPrivateLinkServiceConnectionStateStatus - Private Link Service Connection State Status must be \"Approved\" or \"Rejected\"\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        }
      },
      "delete" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Deletes a private endpoint connection with a given name.",
        "operationId" : "PrivateEndpointConnections_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "privateEndpointConnectionName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted private endpoint connection."
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "Private endpoint connection does not exist."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 PrivateEndpointConnectionDoesNotExist - Private Endpoint Connection does not exist\n\n * 400 PrivateEndpointConnectionStatusNotPending - Private Endpoint Connection Status is not Pending\n\n * 400 NullRemotePrivateLinkServiceConnectionState - Remote Private Link Service Connection State is Null\n\n * 400 NullPrivateEndpointConnectionProperties - Private Endpoint Connection Properties is Null\n\n * 400 NullRemotePrivateLinkServiceConnectionStateStatus - Remote Private Link Service Connection State Status is Null\n\n * 400 IncorrectPrivateLinkServiceConnectionStateStatus - Private Link Service Connection State Status must be \"Approved\" or \"Rejected\"\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "PrivateEndpointConnection" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PrivateEndpointConnectionProperties"
          }
        },
        "description" : "A private endpoint connection",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "PrivateEndpointConnectionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/PrivateEndpointConnection"
            }
          }
        },
        "description" : "A list of private endpoint connections."
      },
      "PrivateEndpointConnectionProperties" : {
        "type" : "object",
        "properties" : {
          "privateEndpoint" : {
            "$ref" : "#/components/schemas/PrivateEndpointProperty"
          },
          "privateLinkServiceConnectionState" : {
            "$ref" : "#/components/schemas/PrivateLinkServiceConnectionStateProperty"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "State of the private endpoint connection.",
            "readOnly" : true
          }
        },
        "description" : "Properties of a private endpoint connection."
      },
      "PrivateEndpointProperty" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource id of the private endpoint."
          }
        }
      },
      "PrivateLinkServiceConnectionStateProperty" : {
        "required" : [ "description", "status" ],
        "type" : "object",
        "properties" : {
          "actionsRequired" : {
            "type" : "string",
            "description" : "The actions required for private link service connection.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The private link service connection description."
          },
          "status" : {
            "type" : "string",
            "description" : "The private link service connection status."
          }
        }
      },
      "ProxyResource" : {
        "description" : "ARM proxy resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "ARM resource."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for the request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "BlobAuditingPolicyNameParameter" : {
        "name" : "blobAuditingPolicyName",
        "in" : "path",
        "description" : "The name of the blob auditing policy.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "default" ]
        }
      },
      "DatabaseNameParameter" : {
        "name" : "databaseName",
        "in" : "path",
        "description" : "The name of the database.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ManagedInstanceNameParameter" : {
        "name" : "managedInstanceName",
        "in" : "path",
        "description" : "The name of the managed instance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineContainerNameParameter" : {
        "name" : "sqlVirtualMachineContainerName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineContainer.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineInstanceNameParameter" : {
        "name" : "sqlVirtualMachineInstanceName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineInstance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID that identifies an Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "VirtualClusterNameParameter" : {
        "name" : "virtualClusterName",
        "in" : "path",
        "description" : "The name of the virtual cluster.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}