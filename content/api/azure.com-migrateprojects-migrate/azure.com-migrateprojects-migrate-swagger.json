{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Migrate Hub",
    "description" : "Migrate your workloads to Azure.",
    "contact" : {
      "name" : "Microsoft",
      "email" : "azuremigratehub@microsoft.com"
    },
    "version" : "2018-09-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Migrate/operations" : {
      "get" : {
        "summary" : "Get list of operations supported in the API.",
        "description" : "Get a list of REST API supported by Microsoft.Migrate provider.",
        "operationId" : "Operations_List",
        "responses" : {
          "200" : {
            "description" : "OK. Returns list of operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResultList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}" : {
      "get" : {
        "tags" : [ "MigrateProjects" ],
        "summary" : "Method to get a migrate project.",
        "operationId" : "MigrateProjects_GetMigrateProject",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrateProject"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "MigrateProjects" ],
        "summary" : "Method to create or update a migrate project.",
        "operationId" : "MigrateProjects_PutMigrateProject",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body with migrate project details.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MigrateProject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrateProject"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrateProject"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "MigrateProjects" ],
        "summary" : "Delete the migrate project",
        "description" : "Delete the migrate project. Deleting non-existent project is a no-operation.",
        "operationId" : "MigrateProjects_DeleteMigrateProject",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "MigrateProjects" ],
        "summary" : "Update migrate project.",
        "description" : "Update a migrate project with specified name. Supports partial updates, for example only tags can be provided.",
        "operationId" : "MigrateProjects_PatchMigrateProject",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body with migrate project details.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MigrateProject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrateProject"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databaseInstances" : {
      "get" : {
        "tags" : [ "DatabaseInstances" ],
        "summary" : "Gets a list of database instances in the migrate project.",
        "operationId" : "DatabaseInstances_EnumerateDatabaseInstances",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "continuationToken",
          "in" : "query",
          "description" : "The continuation token.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of items to be returned in a single page. This value is honored only if it is less than the 100.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseInstanceCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databaseInstances/{databaseInstanceName}" : {
      "get" : {
        "tags" : [ "DatabaseInstances" ],
        "summary" : "Gets a database instance in the migrate project.",
        "operationId" : "DatabaseInstances_GetDatabaseInstance",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseInstanceName",
          "in" : "path",
          "description" : "Unique name of a database instance in Azure migration hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseInstance"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databases" : {
      "get" : {
        "tags" : [ "Databases" ],
        "summary" : "Gets a list of databases in the migrate project.",
        "operationId" : "Databases_EnumerateDatabases",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "continuationToken",
          "in" : "query",
          "description" : "The continuation token.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of items to be returned in a single page. This value is honored only if it is less than the 100.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatabaseCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/databases/{databaseName}" : {
      "get" : {
        "tags" : [ "Databases" ],
        "summary" : "Gets a database in the migrate project.",
        "operationId" : "Databases_GetDatabase",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "Unique name of a database in Azure migration hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Database"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines" : {
      "get" : {
        "tags" : [ "Machines" ],
        "summary" : "Gets a list of machines in the migrate project.",
        "operationId" : "Machines_EnumerateMachines",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "continuationToken",
          "in" : "query",
          "description" : "The continuation token.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of items to be returned in a single page. This value is honored only if it is less than the 100.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MachineCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/machines/{machineName}" : {
      "get" : {
        "tags" : [ "Machines" ],
        "summary" : "Gets a machine in the migrate project.",
        "operationId" : "Machines_GetMachine",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "machineName",
          "in" : "path",
          "description" : "Unique name of a machine in Azure migration hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Machine"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Gets a list of events in the migrate project.",
        "operationId" : "Events_EnumerateEvents",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "continuationToken",
          "in" : "query",
          "description" : "The continuation token.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The number of items to be returned in a single page. This value is honored only if it is less than the 100.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents/{eventName}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Gets an event in the migrate project.",
        "operationId" : "Events_GetEvent",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "eventName",
          "in" : "path",
          "description" : "Unique name of an event within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrateEvent"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Events" ],
        "summary" : "Delete the migrate event",
        "description" : "Delete the migrate event. Deleting non-existent migrate event is a no-operation.",
        "operationId" : "Events_DeleteEvent",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "eventName",
          "in" : "path",
          "description" : "Unique name of an event within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/refreshSummary" : {
      "post" : {
        "tags" : [ "MigrateProjects" ],
        "summary" : "Refresh the summary of the migrate project.",
        "operationId" : "MigrateProjects_RefreshMigrateProjectSummary",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "requestBody" : {
          "description" : "The goal input which needs to be refreshed.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RefreshSummaryInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RefreshSummaryResult"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/registerTool" : {
      "post" : {
        "tags" : [ "MigrateProjects" ],
        "summary" : "Registers a tool with the migrate project.",
        "operationId" : "MigrateProjects_RegisterTool",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Input containing the name of the tool to be registered.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisterToolInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegistrationResult"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions" : {
      "get" : {
        "tags" : [ "Solutions" ],
        "summary" : "Gets the list of solutions in the migrate project.",
        "operationId" : "Solutions_EnumerateSolutions",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SolutionsCollection"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}" : {
      "get" : {
        "tags" : [ "Solutions" ],
        "summary" : "Gets a solution in the migrate project.",
        "operationId" : "Solutions_GetSolution",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "solutionName",
          "in" : "path",
          "description" : "Unique name of a migration solution within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "Solutions" ],
        "summary" : "Creates a solution in the migrate project.",
        "operationId" : "Solutions_PutSolution",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "solutionName",
          "in" : "path",
          "description" : "Unique name of a migration solution within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "requestBody" : {
          "description" : "The input for the solution.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Solution"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Solution"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "Solutions" ],
        "summary" : "Delete the solution",
        "description" : "Delete the solution. Deleting non-existent project is a no-operation.",
        "operationId" : "Solutions_DeleteSolution",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "solutionName",
          "in" : "path",
          "description" : "Unique name of a migration solution within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "Standard request header. Used by service to respond to client in appropriate language.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "deprecated" : false
      },
      "patch" : {
        "tags" : [ "Solutions" ],
        "summary" : "Update solution.",
        "description" : "Update a solution with specified name. Supports partial updates, for example only tags can be provided.",
        "operationId" : "Solutions_PatchSolution",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "solutionName",
          "in" : "path",
          "description" : "Unique name of a migration solution within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "requestBody" : {
          "description" : "The input for the solution.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Solution"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}/cleanupData" : {
      "post" : {
        "tags" : [ "Solutions" ],
        "summary" : "Cleanup the solution data in the migrate project.",
        "operationId" : "Solutions_CleanupSolutionData",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "solutionName",
          "in" : "path",
          "description" : "Unique name of a migration solution within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/solutions/{solutionName}/getConfig" : {
      "post" : {
        "tags" : [ "Solutions" ],
        "summary" : "Gets the config for the solution in the migrate project.",
        "operationId" : "Solutions_GetConfig",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription Id in which migrate project was created.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the Azure Resource Group that migrate project is part of.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrateProjectName",
          "in" : "path",
          "description" : "Name of the Azure Migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "solutionName",
          "in" : "path",
          "description" : "Unique name of a migration solution within a migrate project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Standard request header. Used by service to identify API version used by client.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SolutionConfig"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApplyClause" : {
        "type" : "object",
        "properties" : {
          "transformations" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/TransformationNode"
            }
          }
        }
      },
      "AssessmentDetails" : {
        "type" : "object",
        "properties" : {
          "assessmentId" : {
            "type" : "string",
            "description" : "Gets or sets the id of the assessment done on the machine."
          },
          "biosId" : {
            "type" : "string",
            "description" : "Gets or sets the BIOS ID of the machine."
          },
          "enqueueTime" : {
            "type" : "string",
            "description" : "Gets or sets the time the message was enqueued."
          },
          "extendedInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the ISV specific extended information."
          },
          "fabricType" : {
            "type" : "string",
            "description" : "Gets or sets the fabric type."
          },
          "fqdn" : {
            "type" : "string",
            "description" : "Gets or sets the FQDN of the machine."
          },
          "ipAddresses" : {
            "type" : "array",
            "description" : "Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.",
            "items" : {
              "type" : "string"
            }
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the machine details.",
            "format" : "date-time"
          },
          "macAddresses" : {
            "type" : "array",
            "description" : "Gets or sets the list of MAC addresses of the machine.",
            "items" : {
              "type" : "string"
            }
          },
          "machineId" : {
            "type" : "string",
            "description" : "Gets or sets the unique identifier of the machine."
          },
          "machineManagerId" : {
            "type" : "string",
            "description" : "Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM)."
          },
          "machineName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the machine."
          },
          "solutionName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the solution that sent the data."
          },
          "targetStorageType" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the target storage type."
          },
          "targetVMLocation" : {
            "type" : "string",
            "description" : "Gets or sets the target VM location."
          },
          "targetVMSize" : {
            "type" : "string",
            "description" : "Gets or sets the target VM size."
          }
        },
        "description" : "Assessment properties that can be shared by various publishers."
      },
      "Database" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets or sets the relative URL to get to this REST resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name of this REST resource."
          },
          "properties" : {
            "$ref" : "#/components/schemas/DatabaseProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the type of this REST resource.",
            "readOnly" : true
          }
        },
        "description" : "Database REST resource."
      },
      "DatabaseAssessmentDetails" : {
        "type" : "object",
        "properties" : {
          "assessmentId" : {
            "type" : "string",
            "description" : "Gets or sets the database assessment scope/Id."
          },
          "assessmentTargetType" : {
            "type" : "string",
            "description" : "Gets or sets the assessed target database type."
          },
          "breakingChangesCount" : {
            "type" : "integer",
            "description" : "Gets or sets the number of breaking changes found.",
            "format" : "int32"
          },
          "compatibilityLevel" : {
            "type" : "string",
            "description" : "Gets or sets the compatibility level of the database."
          },
          "databaseName" : {
            "type" : "string",
            "description" : "Gets or sets the database name."
          },
          "databaseSizeInMB" : {
            "type" : "string",
            "description" : "Gets or sets the database size."
          },
          "enqueueTime" : {
            "type" : "string",
            "description" : "Gets or sets the time the message was enqueued."
          },
          "extendedInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the extended properties of the database."
          },
          "instanceId" : {
            "type" : "string",
            "description" : "Gets or sets the database server instance Id."
          },
          "isReadyForMigration" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the database is ready for migration."
          },
          "lastAssessedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time when the database was last assessed.",
            "format" : "date-time"
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the database details.",
            "format" : "date-time"
          },
          "migrationBlockersCount" : {
            "type" : "integer",
            "description" : "Gets or sets the number of blocking changes found.",
            "format" : "int32"
          },
          "solutionName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the solution that sent the data."
          }
        },
        "description" : "Assessment properties that can be shared by various publishers."
      },
      "DatabaseCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the value of nextLink."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets or sets the databases.",
            "items" : {
              "$ref" : "#/components/schemas/Database"
            }
          }
        },
        "description" : "Collection of databases."
      },
      "DatabaseInstance" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets or sets the relative URL to get to this REST resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name of this REST resource."
          },
          "properties" : {
            "$ref" : "#/components/schemas/DatabaseInstanceProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the type of this REST resource.",
            "readOnly" : true
          }
        },
        "description" : "DatabaseInstance REST resource."
      },
      "DatabaseInstanceCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the value of nextLink."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets or sets the database instances.",
            "items" : {
              "$ref" : "#/components/schemas/DatabaseInstance"
            }
          }
        },
        "description" : "Collection of database instances."
      },
      "DatabaseInstanceDiscoveryDetails" : {
        "type" : "object",
        "properties" : {
          "enqueueTime" : {
            "type" : "string",
            "description" : "Gets or sets the time the message was enqueued."
          },
          "extendedInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the extended properties of the database server."
          },
          "hostName" : {
            "type" : "string",
            "description" : "Gets or sets the host name of the database server."
          },
          "instanceId" : {
            "type" : "string",
            "description" : "Gets or sets the database instance Id."
          },
          "instanceName" : {
            "type" : "string",
            "description" : "Gets or sets the database instance name."
          },
          "instanceType" : {
            "type" : "string",
            "description" : "Gets or sets the database instance type."
          },
          "instanceVersion" : {
            "type" : "string",
            "description" : "Gets or sets the database instance version."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "Gets or sets the IP addresses of the database server. IP addresses could be IP V4 or IP V6."
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the database instance details.",
            "format" : "date-time"
          },
          "portNumber" : {
            "type" : "integer",
            "description" : "Gets or sets the port number of the database server.",
            "format" : "int32"
          },
          "solutionName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the solution that sent the data."
          }
        },
        "description" : "Discovery properties that can be shared by various publishers."
      },
      "DatabaseInstanceProperties" : {
        "type" : "object",
        "properties" : {
          "discoveryData" : {
            "type" : "array",
            "description" : "Gets or sets the assessment details of the database instance published by various sources.",
            "items" : {
              "$ref" : "#/components/schemas/DatabaseInstanceDiscoveryDetails"
            }
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the database.",
            "format" : "date-time"
          },
          "summary" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DatabaseInstanceSummary"
            },
            "description" : "Gets or sets the database instances summary per solution. The key of dictionary is the solution name and value is the corresponding database instance summary object."
          }
        },
        "description" : "Properties of the database instance resource."
      },
      "DatabaseInstanceSummary" : {
        "type" : "object",
        "properties" : {
          "databasesAssessedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of databases assessed.",
            "format" : "int32"
          },
          "migrationReadyCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of databases ready for migration.",
            "format" : "int32"
          }
        },
        "description" : "Class representing the database instance summary object."
      },
      "DatabaseMigrateEventProperties" : {
        "properties" : {
          "database" : {
            "type" : "string",
            "description" : "Gets or sets the database for which the error is being reported."
          },
          "databaseInstanceId" : {
            "type" : "string",
            "description" : "Gets or sets the database instance for which the error is being reported."
          }
        },
        "description" : "Properties of the database error resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MigrateEventProperties"
        } ]
      },
      "DatabaseProjectSummary" : {
        "description" : "The database project summary class.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectSummary"
        } ]
      },
      "DatabaseProperties" : {
        "type" : "object",
        "properties" : {
          "assessmentData" : {
            "type" : "array",
            "description" : "Gets or sets the assessment details of the database published by various sources.",
            "items" : {
              "$ref" : "#/components/schemas/DatabaseAssessmentDetails"
            }
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the database.",
            "format" : "date-time"
          }
        },
        "description" : "Properties of the database resource."
      },
      "DatabasesSolutionSummary" : {
        "properties" : {
          "databaseInstancesAssessedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of database instances assessed.",
            "format" : "int32"
          },
          "databasesAssessedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of databases assessed.",
            "format" : "int32"
          },
          "migrationReadyCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of databases ready for migration.",
            "format" : "int32"
          }
        },
        "description" : "Class representing the databases solution summary.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SolutionSummary"
        } ]
      },
      "DefaultQuerySettings" : {
        "type" : "object",
        "properties" : {
          "enableCount" : {
            "type" : "boolean"
          },
          "enableExpand" : {
            "type" : "boolean"
          },
          "enableFilter" : {
            "type" : "boolean"
          },
          "enableOrderBy" : {
            "type" : "boolean"
          },
          "enableSelect" : {
            "type" : "boolean"
          },
          "maxTop" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DiscoveryDetails" : {
        "type" : "object",
        "properties" : {
          "biosId" : {
            "type" : "string",
            "description" : "Gets or sets the BIOS ID of the machine."
          },
          "enqueueTime" : {
            "type" : "string",
            "description" : "Gets or sets the time the message was enqueued."
          },
          "extendedInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the ISV specific extended information."
          },
          "fabricType" : {
            "type" : "string",
            "description" : "Gets or sets the fabric type."
          },
          "fqdn" : {
            "type" : "string",
            "description" : "Gets or sets the FQDN of the machine."
          },
          "ipAddresses" : {
            "type" : "array",
            "description" : "Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.",
            "items" : {
              "type" : "string"
            }
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the machine details.",
            "format" : "date-time"
          },
          "macAddresses" : {
            "type" : "array",
            "description" : "Gets or sets the list of MAC addresses of the machine.",
            "items" : {
              "type" : "string"
            }
          },
          "machineId" : {
            "type" : "string",
            "description" : "Gets or sets the unique identifier of the machine."
          },
          "machineManagerId" : {
            "type" : "string",
            "description" : "Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM)."
          },
          "machineName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the machine."
          },
          "osName" : {
            "type" : "string",
            "description" : "Gets or sets the OS name."
          },
          "osType" : {
            "type" : "string",
            "description" : "Gets or sets the OS type."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "Gets or sets the OS version."
          },
          "solutionName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the solution that sent the data."
          }
        },
        "description" : "Discovery properties that can be published by various ISVs."
      },
      "EdmReferentialConstraintPropertyPair" : {
        "type" : "object",
        "properties" : {
          "dependentProperty" : {
            "$ref" : "#/components/schemas/IEdmStructuralProperty"
          },
          "principalProperty" : {
            "$ref" : "#/components/schemas/IEdmStructuralProperty"
          }
        }
      },
      "EventCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the value of nextLink."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets or sets the machines.",
            "items" : {
              "$ref" : "#/components/schemas/MigrateEvent"
            }
          }
        },
        "description" : "Collection of events."
      },
      "FilterClause" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "$ref" : "#/components/schemas/SingleValueNode"
          },
          "itemType" : {
            "$ref" : "#/components/schemas/IEdmTypeReference"
          },
          "rangeVariable" : {
            "$ref" : "#/components/schemas/RangeVariable"
          }
        }
      },
      "FilterQueryOption" : {
        "type" : "object",
        "properties" : {
          "context" : {
            "$ref" : "#/components/schemas/ODataQueryContext"
          },
          "filterClause" : {
            "$ref" : "#/components/schemas/FilterClause"
          },
          "rawValue" : {
            "type" : "string",
            "readOnly" : true
          },
          "validator" : {
            "$ref" : "#/components/schemas/FilterQueryValidator"
          }
        }
      },
      "FilterQueryValidator" : {
        "type" : "object"
      },
      "IEdmDirectValueAnnotationsManager" : {
        "type" : "object"
      },
      "IEdmEntityContainer" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IEdmEntityContainerElement"
            }
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "namespace" : {
            "type" : "string",
            "readOnly" : true
          },
          "schemaElementKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "TypeDefinition", "Term", "Action", "EntityContainer", "Function" ]
          }
        }
      },
      "IEdmEntityContainerElement" : {
        "type" : "object",
        "properties" : {
          "container" : {
            "$ref" : "#/components/schemas/IEdmEntityContainer"
          },
          "containerElementKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "EntitySet", "ActionImport", "FunctionImport", "Singleton" ]
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IEdmExpression" : {
        "type" : "object",
        "properties" : {
          "expressionKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "BinaryConstant", "BooleanConstant", "DateTimeOffsetConstant", "DecimalConstant", "FloatingConstant", "GuidConstant", "IntegerConstant", "StringConstant", "DurationConstant", "Null", "Record", "Collection", "Path", "If", "Cast", "IsType", "FunctionApplication", "LabeledExpressionReference", "Labeled", "PropertyPath", "NavigationPropertyPath", "DateConstant", "TimeOfDayConstant", "EnumMember", "AnnotationPath" ]
          }
        }
      },
      "IEdmModel" : {
        "type" : "object",
        "properties" : {
          "declaredNamespaces" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "directValueAnnotationsManager" : {
            "$ref" : "#/components/schemas/IEdmDirectValueAnnotationsManager"
          },
          "entityContainer" : {
            "$ref" : "#/components/schemas/IEdmEntityContainer"
          },
          "referencedModels" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IEdmModel"
            }
          },
          "schemaElements" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IEdmSchemaElement"
            }
          },
          "vocabularyAnnotations" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IEdmVocabularyAnnotation"
            }
          }
        }
      },
      "IEdmNavigationProperty" : {
        "type" : "object",
        "properties" : {
          "containsTarget" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "declaringType" : {
            "$ref" : "#/components/schemas/IEdmStructuredType"
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "onDelete" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "Cascade" ]
          },
          "partner" : {
            "$ref" : "#/components/schemas/IEdmNavigationProperty"
          },
          "propertyKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "Structural", "Navigation" ]
          },
          "referentialConstraint" : {
            "$ref" : "#/components/schemas/IEdmReferentialConstraint"
          },
          "type" : {
            "$ref" : "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "IEdmNavigationPropertyBinding" : {
        "type" : "object",
        "properties" : {
          "navigationProperty" : {
            "$ref" : "#/components/schemas/IEdmNavigationProperty"
          },
          "path" : {
            "$ref" : "#/components/schemas/IEdmPathExpression"
          },
          "target" : {
            "$ref" : "#/components/schemas/IEdmNavigationSource"
          }
        }
      },
      "IEdmNavigationSource" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "navigationPropertyBindings" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IEdmNavigationPropertyBinding"
            }
          },
          "path" : {
            "$ref" : "#/components/schemas/IEdmPathExpression"
          },
          "type" : {
            "$ref" : "#/components/schemas/IEdmType"
          }
        }
      },
      "IEdmPathExpression" : {
        "type" : "object",
        "properties" : {
          "expressionKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "BinaryConstant", "BooleanConstant", "DateTimeOffsetConstant", "DecimalConstant", "FloatingConstant", "GuidConstant", "IntegerConstant", "StringConstant", "DurationConstant", "Null", "Record", "Collection", "Path", "If", "Cast", "IsType", "FunctionApplication", "LabeledExpressionReference", "Labeled", "PropertyPath", "NavigationPropertyPath", "DateConstant", "TimeOfDayConstant", "EnumMember", "AnnotationPath" ]
          },
          "path" : {
            "type" : "string",
            "readOnly" : true
          },
          "pathSegments" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "IEdmProperty" : {
        "type" : "object",
        "properties" : {
          "declaringType" : {
            "$ref" : "#/components/schemas/IEdmStructuredType"
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "propertyKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "Structural", "Navigation" ]
          },
          "type" : {
            "$ref" : "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "IEdmReferentialConstraint" : {
        "type" : "object",
        "properties" : {
          "propertyPairs" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/EdmReferentialConstraintPropertyPair"
            }
          }
        }
      },
      "IEdmSchemaElement" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "namespace" : {
            "type" : "string",
            "readOnly" : true
          },
          "schemaElementKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "TypeDefinition", "Term", "Action", "EntityContainer", "Function" ]
          }
        }
      },
      "IEdmStructuralProperty" : {
        "type" : "object",
        "properties" : {
          "declaringType" : {
            "$ref" : "#/components/schemas/IEdmStructuredType"
          },
          "defaultValueString" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "propertyKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "Structural", "Navigation" ]
          },
          "type" : {
            "$ref" : "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "IEdmStructuredType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/IEdmStructuredType"
          },
          "declaredProperties" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IEdmProperty"
            }
          },
          "isAbstract" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isOpen" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "typeKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "Primitive", "Entity", "Complex", "Collection", "EntityReference", "Enum", "TypeDefinition", "Untyped", "Path" ]
          }
        }
      },
      "IEdmTerm" : {
        "type" : "object",
        "properties" : {
          "appliesTo" : {
            "type" : "string",
            "readOnly" : true
          },
          "defaultValue" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "namespace" : {
            "type" : "string",
            "readOnly" : true
          },
          "schemaElementKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "TypeDefinition", "Term", "Action", "EntityContainer", "Function" ]
          },
          "type" : {
            "$ref" : "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "IEdmType" : {
        "type" : "object",
        "properties" : {
          "typeKind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "Primitive", "Entity", "Complex", "Collection", "EntityReference", "Enum", "TypeDefinition", "Untyped", "Path" ]
          }
        }
      },
      "IEdmTypeReference" : {
        "type" : "object",
        "properties" : {
          "definition" : {
            "$ref" : "#/components/schemas/IEdmType"
          },
          "isNullable" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "IEdmVocabularyAnnotatable" : {
        "type" : "object"
      },
      "IEdmVocabularyAnnotation" : {
        "type" : "object",
        "properties" : {
          "qualifier" : {
            "type" : "string",
            "readOnly" : true
          },
          "target" : {
            "$ref" : "#/components/schemas/IEdmVocabularyAnnotatable"
          },
          "term" : {
            "$ref" : "#/components/schemas/IEdmTerm"
          },
          "value" : {
            "$ref" : "#/components/schemas/IEdmExpression"
          }
        }
      },
      "IServiceProvider" : {
        "type" : "object"
      },
      "Machine" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets or sets the relative URL to get to this REST resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name of this REST resource."
          },
          "properties" : {
            "$ref" : "#/components/schemas/MachineProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the type of this REST resource.",
            "readOnly" : true
          }
        },
        "description" : "Machine REST resource."
      },
      "MachineCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the value of nextLink."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets or sets the machines.",
            "items" : {
              "$ref" : "#/components/schemas/Machine"
            }
          }
        },
        "description" : "Collection of machines."
      },
      "MachineMigrateEventProperties" : {
        "properties" : {
          "machine" : {
            "type" : "string",
            "description" : "Gets or sets the machine for which the error is being reported."
          }
        },
        "description" : "Properties of the machine error resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MigrateEventProperties"
        } ]
      },
      "MachineProperties" : {
        "type" : "object",
        "properties" : {
          "assessmentData" : {
            "type" : "array",
            "description" : "Gets or sets the assessment details of the machine published by various sources.",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentDetails"
            }
          },
          "discoveryData" : {
            "type" : "array",
            "description" : "Gets or sets the discovery details of the machine published by various sources.",
            "items" : {
              "$ref" : "#/components/schemas/DiscoveryDetails"
            }
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the machine.",
            "format" : "date-time"
          },
          "migrationData" : {
            "type" : "array",
            "description" : "Gets or sets the migration details of the machine published by various sources.",
            "items" : {
              "$ref" : "#/components/schemas/MigrationDetails"
            }
          }
        },
        "description" : "Properties of the machine resource."
      },
      "MigrateEvent" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets or sets the relative URL to get to this REST resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name of this REST resource."
          },
          "properties" : {
            "$ref" : "#/components/schemas/MigrateEventProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the type of this REST resource.",
            "readOnly" : true
          }
        },
        "description" : "MigrateEvent REST resource."
      },
      "MigrateEventProperties" : {
        "type" : "object",
        "properties" : {
          "clientRequestId" : {
            "type" : "string",
            "description" : "Gets or sets the client request Id of the payload for which the event is being reported."
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Gets or sets the error code."
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Gets or sets the error message."
          },
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the Instance type.",
            "readOnly" : true
          },
          "possibleCauses" : {
            "type" : "string",
            "description" : "Gets or sets the possible causes for the error."
          },
          "recommendation" : {
            "type" : "string",
            "description" : "Gets or sets the recommendation for the error."
          },
          "solution" : {
            "type" : "string",
            "description" : "Gets or sets the solution for which the error is being reported."
          }
        },
        "description" : "Properties of the error resource.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "MigrateProject" : {
        "type" : "object",
        "properties" : {
          "eTag" : {
            "type" : "string",
            "description" : "Gets or sets the eTag for concurrency control."
          },
          "id" : {
            "type" : "string",
            "description" : "Gets the relative URL to get this migrate project.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Gets or sets the Azure location in which migrate project is created."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the name of the migrate project.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/MigrateProjectProperties"
          },
          "tags" : {
            "type" : "object",
            "properties" : {
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "description" : "Gets or sets the tags."
          },
          "type" : {
            "type" : "string",
            "description" : "Handled by resource provider. Type = Microsoft.Migrate/MigrateProject.",
            "readOnly" : true
          }
        },
        "description" : "Migrate Project REST Resource."
      },
      "MigrateProjectProperties" : {
        "type" : "object",
        "properties" : {
          "lastSummaryRefreshedTime" : {
            "type" : "string",
            "description" : "Gets the last time the project summary was refreshed.",
            "format" : "date-time",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Provisioning state of the migrate project.",
            "enum" : [ "Accepted", "Creating", "Deleting", "Failed", "Moving", "Succeeded" ]
          },
          "refreshSummaryState" : {
            "type" : "string",
            "description" : "Gets the refresh summary state.",
            "readOnly" : true,
            "enum" : [ "Started", "InProgress", "Completed", "Failed" ]
          },
          "registeredTools" : {
            "type" : "array",
            "description" : "Gets or sets the list of tools registered with the migrate project.",
            "items" : {
              "type" : "string",
              "enum" : [ "ServerDiscovery", "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto", "CorentTech", "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite", "DataMigrationAssistant", "DatabaseMigrationService" ]
            }
          },
          "summary" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ProjectSummary"
            },
            "description" : "Gets the summary of the migrate project.",
            "readOnly" : true
          }
        },
        "description" : "Class for migrate project properties."
      },
      "MigrationDetails" : {
        "type" : "object",
        "properties" : {
          "biosId" : {
            "type" : "string",
            "description" : "Gets or sets the BIOS ID of the machine."
          },
          "enqueueTime" : {
            "type" : "string",
            "description" : "Gets or sets the time the message was enqueued."
          },
          "extendedInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the ISV specific extended information."
          },
          "fabricType" : {
            "type" : "string",
            "description" : "Gets or sets the fabric type."
          },
          "fqdn" : {
            "type" : "string",
            "description" : "Gets or sets the FQDN of the machine."
          },
          "ipAddresses" : {
            "type" : "array",
            "description" : "Gets or sets the list of IP addresses of the machine. IP addresses could be IP V4 or IP V6.",
            "items" : {
              "type" : "string"
            }
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time of the last modification of the machine details.",
            "format" : "date-time"
          },
          "macAddresses" : {
            "type" : "array",
            "description" : "Gets or sets the list of MAC addresses of the machine.",
            "items" : {
              "type" : "string"
            }
          },
          "machineId" : {
            "type" : "string",
            "description" : "Gets or sets the unique identifier of the machine."
          },
          "machineManagerId" : {
            "type" : "string",
            "description" : "Gets or sets the unique identifier of the virtual machine manager(vCenter/VMM)."
          },
          "machineName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the machine."
          },
          "migrationPhase" : {
            "type" : "string",
            "description" : "Gets or sets the phase of migration of the machine."
          },
          "migrationTested" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether migration was tested on the machine."
          },
          "replicationProgressPercentage" : {
            "type" : "integer",
            "description" : "Gets or sets the progress percentage of migration on the machine.",
            "format" : "int32"
          },
          "solutionName" : {
            "type" : "string",
            "description" : "Gets or sets the name of the solution that sent the data."
          },
          "targetVMArmId" : {
            "type" : "string",
            "description" : "Gets or sets the ARM id the migrated VM."
          }
        },
        "description" : "Migration properties that can be shared by various publishers."
      },
      "ODataPath" : {
        "type" : "object",
        "properties" : {
          "edmType" : {
            "$ref" : "#/components/schemas/IEdmType"
          },
          "navigationSource" : {
            "$ref" : "#/components/schemas/IEdmNavigationSource"
          },
          "path" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ODataPathSegment"
            }
          },
          "pathTemplate" : {
            "type" : "string",
            "readOnly" : true
          },
          "segments" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ODataPathSegment"
            }
          }
        }
      },
      "ODataPathSegment" : {
        "type" : "object",
        "properties" : {
          "edmType" : {
            "$ref" : "#/components/schemas/IEdmType"
          },
          "identifier" : {
            "type" : "string"
          }
        }
      },
      "ODataQueryContext" : {
        "type" : "object",
        "properties" : {
          "defaultQuerySettings" : {
            "$ref" : "#/components/schemas/DefaultQuerySettings"
          },
          "elementClrType" : {
            "type" : "string",
            "readOnly" : true
          },
          "elementType" : {
            "$ref" : "#/components/schemas/IEdmType"
          },
          "model" : {
            "$ref" : "#/components/schemas/IEdmModel"
          },
          "navigationSource" : {
            "$ref" : "#/components/schemas/IEdmNavigationSource"
          },
          "path" : {
            "$ref" : "#/components/schemas/ODataPath"
          },
          "requestContainer" : {
            "$ref" : "#/components/schemas/IServiceProvider"
          }
        }
      },
      "ODataQueryValidator" : {
        "type" : "object"
      },
      "ODataRawQueryOptions" : {
        "type" : "object",
        "properties" : {
          "filter" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "Object" : {
        "type" : "object"
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the operation.",
            "readOnly" : true
          },
          "origin" : {
            "type" : "string",
            "description" : "Origin of the operation.",
            "readOnly" : true
          }
        },
        "description" : "A REST API operation supported by the provider."
      },
      "OperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the operation.",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "description" : "Operation Type.",
            "readOnly" : true
          },
          "provider" : {
            "type" : "string",
            "description" : "Provider of the operation.",
            "readOnly" : true
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource operated on by the operation.",
            "readOnly" : true
          }
        },
        "description" : "Displayable properties of the operation."
      },
      "OperationResultList" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "List of operations.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "List of API operations."
      },
      "ProjectSummary" : {
        "type" : "object",
        "properties" : {
          "extendedSummary" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the extended summary."
          },
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the Instance type.",
            "readOnly" : true
          },
          "lastSummaryRefreshedTime" : {
            "type" : "string",
            "description" : "Gets or sets the time when summary was last refreshed.",
            "format" : "date-time"
          },
          "refreshSummaryState" : {
            "type" : "string",
            "description" : "Gets or sets the state of refresh summary.",
            "enum" : [ "Started", "InProgress", "Completed", "Failed" ]
          }
        },
        "description" : "The project summary class.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "RangeVariable" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "typeReference" : {
            "$ref" : "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "RefreshSummaryInput" : {
        "type" : "object",
        "properties" : {
          "goal" : {
            "type" : "string",
            "description" : "Gets or sets the goal for which summary needs to be refreshed.",
            "enum" : [ "Servers", "Databases" ]
          }
        },
        "description" : "Class representing the refresh summary input."
      },
      "RefreshSummaryResult" : {
        "type" : "object",
        "properties" : {
          "isRefreshed" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the migrate project summary is refreshed."
          }
        },
        "description" : "Class representing the refresh summary status of the migrate project."
      },
      "RegisterToolInput" : {
        "type" : "object",
        "properties" : {
          "tool" : {
            "type" : "string",
            "description" : "Gets or sets the tool to be registered.",
            "enum" : [ "ServerDiscovery", "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto", "CorentTech", "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite", "DataMigrationAssistant", "DatabaseMigrationService" ]
          }
        },
        "description" : "Class representing the register tool input."
      },
      "RegistrationResult" : {
        "type" : "object",
        "properties" : {
          "isRegistered" : {
            "type" : "boolean",
            "description" : "Gets or sets a value indicating whether the tool is registered or not."
          }
        },
        "description" : "Class representing the registration status of a tool with the migrate project."
      },
      "SelectExpandClause" : {
        "type" : "object",
        "properties" : {
          "allSelected" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "selectedItems" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/SelectItem"
            }
          }
        }
      },
      "SelectExpandQueryValidator" : {
        "type" : "object"
      },
      "SelectItem" : {
        "type" : "object"
      },
      "ServersProjectSummary" : {
        "properties" : {
          "assessedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of entities assessed.",
            "format" : "int32"
          },
          "discoveredCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of entities discovered.",
            "format" : "int32"
          },
          "migratedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of entities migrated.",
            "format" : "int32"
          },
          "replicatingCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of entities being replicated.",
            "format" : "int32"
          },
          "testMigratedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of entities test migrated.",
            "format" : "int32"
          }
        },
        "description" : "Class representing the servers project summary.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectSummary"
        } ]
      },
      "ServersSolutionSummary" : {
        "properties" : {
          "assessedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of servers assessed.",
            "format" : "int32"
          },
          "discoveredCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of servers discovered.",
            "format" : "int32"
          },
          "migratedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of servers migrated.",
            "format" : "int32"
          },
          "replicatingCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of servers being replicated.",
            "format" : "int32"
          },
          "testMigratedCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of servers test migrated.",
            "format" : "int32"
          }
        },
        "description" : "Class representing the servers solution summary.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SolutionSummary"
        } ]
      },
      "SingleValueNode" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "None", "Constant", "Convert", "NonResourceRangeVariableReference", "BinaryOperator", "UnaryOperator", "SingleValuePropertyAccess", "CollectionPropertyAccess", "SingleValueFunctionCall", "Any", "CollectionNavigationNode", "SingleNavigationNode", "SingleValueOpenPropertyAccess", "SingleResourceCast", "All", "CollectionResourceCast", "ResourceRangeVariableReference", "SingleResourceFunctionCall", "CollectionFunctionCall", "CollectionResourceFunctionCall", "NamedFunctionParameter", "ParameterAlias", "EntitySet", "KeyLookup", "SearchTerm", "CollectionOpenPropertyAccess", "CollectionComplexNode", "SingleComplexNode", "Count", "SingleValueCast", "CollectionPropertyNode", "AggregatedCollectionPropertyNode", "In", "CollectionConstant" ]
          },
          "typeReference" : {
            "$ref" : "#/components/schemas/IEdmTypeReference"
          }
        }
      },
      "Solution" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Gets or sets the ETAG for optimistic concurrency control."
          },
          "id" : {
            "type" : "string",
            "description" : "Gets the relative URL to get to this REST resource.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the name of this REST resource.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/SolutionProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the type of this REST resource.",
            "readOnly" : true
          }
        },
        "description" : "Solution REST Resource."
      },
      "SolutionConfig" : {
        "type" : "object",
        "properties" : {
          "publisherSasUri" : {
            "type" : "string",
            "description" : "Gets or sets the publisher sas uri for the solution."
          }
        },
        "description" : "Class representing the config for the solution in the migrate project."
      },
      "SolutionDetails" : {
        "type" : "object",
        "properties" : {
          "assessmentCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of assessments reported by the solution.",
            "format" : "int32"
          },
          "extendedDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the extended details reported by the solution."
          },
          "groupCount" : {
            "type" : "integer",
            "description" : "Gets or sets the count of groups reported by the solution.",
            "format" : "int32"
          }
        },
        "description" : "Class representing the details of the solution."
      },
      "SolutionProperties" : {
        "type" : "object",
        "properties" : {
          "cleanupState" : {
            "type" : "string",
            "description" : "Gets or sets the cleanup state of the solution.",
            "enum" : [ "None", "Started", "InProgress", "Completed", "Failed" ]
          },
          "details" : {
            "$ref" : "#/components/schemas/SolutionDetails"
          },
          "goal" : {
            "type" : "string",
            "description" : "Gets or sets the goal of the solution.",
            "enum" : [ "Servers", "Databases" ]
          },
          "purpose" : {
            "type" : "string",
            "description" : "Gets or sets the purpose of the solution.",
            "enum" : [ "Discovery", "Assessment", "Migration" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Gets or sets the current status of the solution.",
            "enum" : [ "Inactive", "Active" ]
          },
          "summary" : {
            "$ref" : "#/components/schemas/SolutionSummary"
          },
          "tool" : {
            "type" : "string",
            "description" : "Gets or sets the tool being used in the solution.",
            "enum" : [ "ServerDiscovery", "ServerAssessment", "ServerMigration", "Cloudamize", "Turbonomic", "Zerto", "CorentTech", "ServerAssessmentV1", "ServerMigration_Replication", "Carbonite", "DataMigrationAssistant", "DatabaseMigrationService" ]
          }
        },
        "description" : "Class for solution properties."
      },
      "SolutionSummary" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the Instance type.",
            "readOnly" : true
          }
        },
        "description" : "The solution summary class.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "SolutionsCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets or sets the list of solutions.",
            "items" : {
              "$ref" : "#/components/schemas/Solution"
            }
          }
        },
        "description" : "Collection of solutions."
      },
      "TransformationNode" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Aggregate", "GroupBy", "Filter", "Compute" ]
          }
        }
      }
    },
    "parameters" : {
      "acceptLanguage" : {
        "name" : "Accept-Language",
        "in" : "header",
        "description" : "Standard request header. Used by service to respond to client in appropriate language.",
        "schema" : {
          "type" : "string"
        }
      },
      "api-version" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Standard request header. Used by service to identify API version used by client.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "2018-09-01-preview" ]
        }
      },
      "continuationToken" : {
        "name" : "continuationToken",
        "in" : "query",
        "description" : "The continuation token.",
        "schema" : {
          "type" : "string"
        }
      },
      "databaseInstanceName" : {
        "name" : "databaseInstanceName",
        "in" : "path",
        "description" : "Unique name of a database instance in Azure migration hub.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "databaseName" : {
        "name" : "databaseName",
        "in" : "path",
        "description" : "Unique name of a database in Azure migration hub.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "eventName" : {
        "name" : "eventName",
        "in" : "path",
        "description" : "Unique name of an event within a migrate project.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "machineName" : {
        "name" : "machineName",
        "in" : "path",
        "description" : "Unique name of a machine in Azure migration hub.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "migrateProjectName" : {
        "name" : "migrateProjectName",
        "in" : "path",
        "description" : "Name of the Azure Migrate project.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "pageSize" : {
        "name" : "pageSize",
        "in" : "query",
        "description" : "The number of items to be returned in a single page. This value is honored only if it is less than the 100.",
        "schema" : {
          "type" : "integer"
        }
      },
      "resourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Name of the Azure Resource Group that migrate project is part of.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "solutionName" : {
        "name" : "solutionName",
        "in" : "path",
        "description" : "Unique name of a migration solution within a migrate project.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Azure Subscription Id in which migrate project was created.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}