{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Media Services",
    "description" : "This Swagger was generated by the API Framework.",
    "version" : "2018-07-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies" : {
      "get" : {
        "summary" : "List Content Key Policies",
        "description" : "Lists the Content Key Policies in the account",
        "operationId" : "ContentKeyPolicies_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Restricts the set of items returned.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Specifies the key by which the result collection should be ordered.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentKeyPolicyCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}" : {
      "get" : {
        "summary" : "Get a Content Key Policy",
        "description" : "Get the details of a Content Key Policy in the Media Services account",
        "operationId" : "ContentKeyPolicies_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentKeyPolicyName",
          "in" : "path",
          "description" : "The Content Key Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentKeyPolicy"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Create or update an Content Key Policy",
        "description" : "Create or update a Content Key Policy in the Media Services account",
        "operationId" : "ContentKeyPolicies_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentKeyPolicyName",
          "in" : "path",
          "description" : "The Content Key Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentKeyPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentKeyPolicy"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentKeyPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a Content Key Policy",
        "description" : "Deletes a Content Key Policy in the Media Services account",
        "operationId" : "ContentKeyPolicies_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentKeyPolicyName",
          "in" : "path",
          "description" : "The Content Key Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "NoContent"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a Content Key Policy",
        "description" : "Updates an existing Content Key Policy in the Media Services account",
        "operationId" : "ContentKeyPolicies_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentKeyPolicyName",
          "in" : "path",
          "description" : "The Content Key Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentKeyPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentKeyPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}/getPolicyPropertiesWithSecrets" : {
      "post" : {
        "summary" : "Get a Content Key Policy with secrets",
        "description" : "Get a Content Key Policy including secret values",
        "operationId" : "ContentKeyPolicies_GetPolicyPropertiesWithSecrets",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contentKeyPolicyName",
          "in" : "path",
          "description" : "The Content Key Policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentKeyPolicyProperties"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ODataError"
          }
        },
        "description" : "The API error."
      },
      "ContentKeyPolicy" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ContentKeyPolicyProperties"
          }
        },
        "description" : "A Content Key Policy resource.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "ContentKeyPolicyClearKeyConfiguration" : {
        "description" : "Represents a configuration for non-DRM keys.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyConfiguration"
        } ]
      },
      "ContentKeyPolicyCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of ContentKeyPolicy items.",
            "items" : {
              "$ref" : "#/components/schemas/ContentKeyPolicy"
            }
          }
        },
        "description" : "A collection of ContentKeyPolicy items."
      },
      "ContentKeyPolicyConfiguration" : {
        "required" : [ "@odata.type" ],
        "type" : "object",
        "properties" : {
          "@odata.type" : {
            "type" : "string",
            "description" : "The discriminator for derived types."
          }
        },
        "description" : "Base class for Content Key Policy configuration. A derived class must be used to create a configuration.",
        "discriminator" : {
          "propertyName" : "@odata.type"
        }
      },
      "ContentKeyPolicyFairPlayConfiguration" : {
        "required" : [ "ask", "fairPlayPfx", "fairPlayPfxPassword", "rentalAndLeaseKeyType", "rentalDuration" ],
        "properties" : {
          "ask" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The key that must be used as FairPlay Application Secret key.",
            "format" : "byte"
          },
          "fairPlayPfx" : {
            "type" : "string",
            "description" : "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
          },
          "fairPlayPfxPassword" : {
            "type" : "string",
            "description" : "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
          },
          "rentalAndLeaseKeyType" : {
            "type" : "string",
            "description" : "The rental and lease key type.",
            "enum" : [ "Unknown", "Undefined", "PersistentUnlimited", "PersistentLimited" ]
          },
          "rentalDuration" : {
            "type" : "integer",
            "description" : "The rental duration. Must be greater than or equal to 0.",
            "format" : "int64"
          }
        },
        "description" : "Specifies a configuration for FairPlay licenses.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyConfiguration"
        } ]
      },
      "ContentKeyPolicyOpenRestriction" : {
        "description" : "Represents an open restriction. License or key will be delivered on every request.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyRestriction"
        } ]
      },
      "ContentKeyPolicyOption" : {
        "required" : [ "configuration", "restriction" ],
        "type" : "object",
        "properties" : {
          "configuration" : {
            "$ref" : "#/components/schemas/ContentKeyPolicyConfiguration"
          },
          "name" : {
            "type" : "string",
            "description" : "The Policy Option description."
          },
          "policyOptionId" : {
            "type" : "string",
            "description" : "The legacy Policy Option ID.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          },
          "restriction" : {
            "$ref" : "#/components/schemas/ContentKeyPolicyRestriction"
          }
        },
        "description" : "Represents a policy option."
      },
      "ContentKeyPolicyPlayReadyConfiguration" : {
        "required" : [ "licenses" ],
        "properties" : {
          "licenses" : {
            "type" : "array",
            "description" : "The PlayReady licenses.",
            "items" : {
              "$ref" : "#/components/schemas/ContentKeyPolicyPlayReadyLicense"
            }
          },
          "responseCustomData" : {
            "type" : "string",
            "description" : "The custom response data."
          }
        },
        "description" : "Specifies a configuration for PlayReady licenses.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyConfiguration"
        } ]
      },
      "ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader" : {
        "description" : "Specifies that the content key ID is in the PlayReady header.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyPlayReadyContentKeyLocation"
        } ]
      },
      "ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier" : {
        "required" : [ "keyId" ],
        "properties" : {
          "keyId" : {
            "type" : "string",
            "description" : "The content key ID.",
            "format" : "uuid"
          }
        },
        "description" : "Specifies that the content key ID is specified in the PlayReady configuration.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyPlayReadyContentKeyLocation"
        } ]
      },
      "ContentKeyPolicyPlayReadyContentKeyLocation" : {
        "required" : [ "@odata.type" ],
        "type" : "object",
        "properties" : {
          "@odata.type" : {
            "type" : "string",
            "description" : "The discriminator for derived types."
          }
        },
        "description" : "Base class for content key ID location. A derived class must be used to represent the location.",
        "discriminator" : {
          "propertyName" : "@odata.type"
        }
      },
      "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction" : {
        "required" : [ "bestEffort", "configurationData" ],
        "type" : "object",
        "properties" : {
          "bestEffort" : {
            "type" : "boolean",
            "description" : "Indicates whether this restriction is enforced on a Best Effort basis."
          },
          "configurationData" : {
            "type" : "integer",
            "description" : "Configures the restriction control bits. Must be between 0 and 3 inclusive.",
            "format" : "int32"
          }
        },
        "description" : "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules."
      },
      "ContentKeyPolicyPlayReadyLicense" : {
        "required" : [ "allowTestDevices", "contentKeyLocation", "contentType", "licenseType" ],
        "type" : "object",
        "properties" : {
          "allowTestDevices" : {
            "type" : "boolean",
            "description" : "A flag indicating whether test devices can use the license."
          },
          "beginDate" : {
            "type" : "string",
            "description" : "The begin date of license",
            "format" : "date-time"
          },
          "contentKeyLocation" : {
            "$ref" : "#/components/schemas/ContentKeyPolicyPlayReadyContentKeyLocation"
          },
          "contentType" : {
            "type" : "string",
            "description" : "The PlayReady content type.",
            "enum" : [ "Unknown", "Unspecified", "UltraVioletDownload", "UltraVioletStreaming" ]
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The expiration date of license.",
            "format" : "date-time"
          },
          "gracePeriod" : {
            "type" : "string",
            "description" : "The grace period of license.",
            "format" : "duration"
          },
          "licenseType" : {
            "type" : "string",
            "description" : "The license type.",
            "enum" : [ "Unknown", "NonPersistent", "Persistent" ]
          },
          "playRight" : {
            "$ref" : "#/components/schemas/ContentKeyPolicyPlayReadyPlayRight"
          },
          "relativeBeginDate" : {
            "type" : "string",
            "description" : "The relative begin date of license.",
            "format" : "duration"
          },
          "relativeExpirationDate" : {
            "type" : "string",
            "description" : "The relative expiration date of license.",
            "format" : "duration"
          }
        },
        "description" : "The PlayReady license"
      },
      "ContentKeyPolicyPlayReadyPlayRight" : {
        "required" : [ "allowPassingVideoContentToUnknownOutput", "digitalVideoOnlyContentRestriction", "imageConstraintForAnalogComponentVideoRestriction", "imageConstraintForAnalogComputerMonitorRestriction" ],
        "type" : "object",
        "properties" : {
          "agcAndColorStripeRestriction" : {
            "type" : "integer",
            "description" : "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
            "format" : "int32"
          },
          "allowPassingVideoContentToUnknownOutput" : {
            "type" : "string",
            "description" : "Configures Unknown output handling settings of the license.",
            "enum" : [ "Unknown", "NotAllowed", "Allowed", "AllowedWithVideoConstriction" ]
          },
          "analogVideoOpl" : {
            "type" : "integer",
            "description" : "Specifies the output protection level for compressed digital audio.",
            "format" : "int32"
          },
          "compressedDigitalAudioOpl" : {
            "type" : "integer",
            "description" : "Specifies the output protection level for compressed digital audio.",
            "format" : "int32"
          },
          "compressedDigitalVideoOpl" : {
            "type" : "integer",
            "description" : "Specifies the output protection level for compressed digital video.",
            "format" : "int32"
          },
          "digitalVideoOnlyContentRestriction" : {
            "type" : "boolean",
            "description" : "Enables the Image Constraint For Analog Component Video Restriction in the license."
          },
          "explicitAnalogTelevisionOutputRestriction" : {
            "$ref" : "#/components/schemas/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
          },
          "firstPlayExpiration" : {
            "type" : "string",
            "description" : "The amount of time that the license is valid after the license is first used to play content.",
            "format" : "duration"
          },
          "imageConstraintForAnalogComponentVideoRestriction" : {
            "type" : "boolean",
            "description" : "Enables the Image Constraint For Analog Component Video Restriction in the license."
          },
          "imageConstraintForAnalogComputerMonitorRestriction" : {
            "type" : "boolean",
            "description" : "Enables the Image Constraint For Analog Component Video Restriction in the license."
          },
          "scmsRestriction" : {
            "type" : "integer",
            "description" : "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
            "format" : "int32"
          },
          "uncompressedDigitalAudioOpl" : {
            "type" : "integer",
            "description" : "Specifies the output protection level for uncompressed digital audio.",
            "format" : "int32"
          },
          "uncompressedDigitalVideoOpl" : {
            "type" : "integer",
            "description" : "Specifies the output protection level for uncompressed digital video.",
            "format" : "int32"
          }
        },
        "description" : "Configures the Play Right in the PlayReady license."
      },
      "ContentKeyPolicyProperties" : {
        "required" : [ "options" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "The creation date of the Policy",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "A description for the Policy."
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The last modified date of the Policy",
            "format" : "date-time",
            "nullable" : false,
            "readOnly" : true
          },
          "options" : {
            "type" : "array",
            "description" : "The Key Policy options.",
            "items" : {
              "$ref" : "#/components/schemas/ContentKeyPolicyOption"
            }
          },
          "policyId" : {
            "type" : "string",
            "description" : "The legacy Policy ID.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          }
        },
        "description" : "The properties of the Content Key Policy."
      },
      "ContentKeyPolicyRestriction" : {
        "required" : [ "@odata.type" ],
        "type" : "object",
        "properties" : {
          "@odata.type" : {
            "type" : "string",
            "description" : "The discriminator for derived types."
          }
        },
        "description" : "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.",
        "discriminator" : {
          "propertyName" : "@odata.type"
        }
      },
      "ContentKeyPolicyRestrictionTokenKey" : {
        "required" : [ "@odata.type" ],
        "type" : "object",
        "properties" : {
          "@odata.type" : {
            "type" : "string",
            "description" : "The discriminator for derived types."
          }
        },
        "description" : "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key.",
        "discriminator" : {
          "propertyName" : "@odata.type"
        }
      },
      "ContentKeyPolicyRsaTokenKey" : {
        "required" : [ "exponent", "modulus" ],
        "properties" : {
          "exponent" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The RSA Parameter exponent",
            "format" : "byte"
          },
          "modulus" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The RSA Parameter modulus",
            "format" : "byte"
          }
        },
        "description" : "Specifies a RSA key for token validation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyRestrictionTokenKey"
        } ]
      },
      "ContentKeyPolicySymmetricTokenKey" : {
        "required" : [ "keyValue" ],
        "properties" : {
          "keyValue" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The key value of the key",
            "format" : "byte"
          }
        },
        "description" : "Specifies a symmetric key for token validation.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyRestrictionTokenKey"
        } ]
      },
      "ContentKeyPolicyTokenClaim" : {
        "type" : "object",
        "properties" : {
          "claimType" : {
            "type" : "string",
            "description" : "Token claim type."
          },
          "claimValue" : {
            "type" : "string",
            "description" : "Token claim value."
          }
        },
        "description" : "Represents a token claim."
      },
      "ContentKeyPolicyTokenRestriction" : {
        "required" : [ "audience", "issuer", "primaryVerificationKey", "restrictionTokenType" ],
        "properties" : {
          "alternateVerificationKeys" : {
            "type" : "array",
            "description" : "A list of alternative verification keys.",
            "items" : {
              "$ref" : "#/components/schemas/ContentKeyPolicyRestrictionTokenKey"
            }
          },
          "audience" : {
            "type" : "string",
            "description" : "The audience for the token."
          },
          "issuer" : {
            "type" : "string",
            "description" : "The token issuer."
          },
          "openIdConnectDiscoveryDocument" : {
            "type" : "string",
            "description" : "The OpenID connect discovery document."
          },
          "primaryVerificationKey" : {
            "$ref" : "#/components/schemas/ContentKeyPolicyRestrictionTokenKey"
          },
          "requiredClaims" : {
            "type" : "array",
            "description" : "A list of required token claims.",
            "items" : {
              "$ref" : "#/components/schemas/ContentKeyPolicyTokenClaim"
            }
          },
          "restrictionTokenType" : {
            "type" : "string",
            "description" : "The type of token.",
            "enum" : [ "Unknown", "Swt", "Jwt" ]
          }
        },
        "description" : "Represents a token restriction. Provided token must match these requirements for successful license or key delivery.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyRestriction"
        } ]
      },
      "ContentKeyPolicyUnknownConfiguration" : {
        "description" : "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyConfiguration"
        } ]
      },
      "ContentKeyPolicyUnknownRestriction" : {
        "description" : "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyRestriction"
        } ]
      },
      "ContentKeyPolicyWidevineConfiguration" : {
        "required" : [ "widevineTemplate" ],
        "properties" : {
          "widevineTemplate" : {
            "type" : "string",
            "description" : "The Widevine template."
          }
        },
        "description" : "Specifies a configuration for Widevine licenses.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyConfiguration"
        } ]
      },
      "ContentKeyPolicyX509CertificateTokenKey" : {
        "required" : [ "rawBody" ],
        "properties" : {
          "rawBody" : {
            "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type" : "string",
            "description" : "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)",
            "format" : "byte"
          }
        },
        "description" : "Specifies a certificate for token validation.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ContentKeyPolicyRestrictionTokenKey"
        } ]
      },
      "ODataError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A language-independent error name."
          },
          "details" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/ODataError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error (for example, the name of the property in error)."
          }
        },
        "description" : "Information about an error."
      }
    },
    "parameters" : {
      "ApiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The Version of the API to be used with the client request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "MediaServicesAccountName" : {
        "name" : "accountName",
        "in" : "path",
        "description" : "The Media Services account name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The unique identifier for a Microsoft Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}