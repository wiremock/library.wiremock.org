{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ApiManagementClient",
    "description" : "Use these REST APIs for performing operations on Email Templates associated with your Azure API Management deployment.",
    "version" : "2018-06-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates" : {
      "get" : {
        "tags" : [ "EmailTemplate" ],
        "description" : "Lists a collection of properties defined within a service instance.",
        "operationId" : "EmailTemplate_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A Collection of the Email Template for the specified API Management service instance.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailTemplateCollection"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}" : {
      "get" : {
        "tags" : [ "EmailTemplates" ],
        "description" : "Gets the details of the email template specified by its identifier.",
        "operationId" : "EmailTemplate_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Email Template Name Identifier.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "applicationApprovedNotificationMessage", "accountClosedDeveloper", "quotaLimitApproachingDeveloperNotificationMessage", "newDeveloperNotificationMessage", "emailChangeIdentityDefault", "inviteUserNotificationMessage", "newCommentNotificationMessage", "confirmSignUpIdentityDefault", "newIssueNotificationMessage", "purchaseDeveloperNotificationMessage", "passwordResetIdentityDefault", "passwordResetByAdminNotificationMessage", "rejectDeveloperNotificationMessage", "requestDeveloperNotificationMessage" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified Email template.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailTemplateContract"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "EmailTemplates" ],
        "description" : "Updates an Email Template.",
        "operationId" : "EmailTemplate_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Email Template Name Identifier.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "applicationApprovedNotificationMessage", "accountClosedDeveloper", "quotaLimitApproachingDeveloperNotificationMessage", "newDeveloperNotificationMessage", "emailChangeIdentityDefault", "inviteUserNotificationMessage", "newCommentNotificationMessage", "confirmSignUpIdentityDefault", "newIssueNotificationMessage", "purchaseDeveloperNotificationMessage", "passwordResetIdentityDefault", "passwordResetByAdminNotificationMessage", "rejectDeveloperNotificationMessage", "requestDeveloperNotificationMessage" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Email Template update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailTemplateUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Email Template was successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailTemplateContract"
                }
              }
            }
          },
          "201" : {
            "description" : "Email Template was successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailTemplateContract"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EmailTemplates" ],
        "description" : "Reset the Email Template to default template provided by the API Management service instance.",
        "operationId" : "EmailTemplate_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Email Template Name Identifier.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "applicationApprovedNotificationMessage", "accountClosedDeveloper", "quotaLimitApproachingDeveloperNotificationMessage", "newDeveloperNotificationMessage", "emailChangeIdentityDefault", "inviteUserNotificationMessage", "newCommentNotificationMessage", "confirmSignUpIdentityDefault", "newIssueNotificationMessage", "purchaseDeveloperNotificationMessage", "passwordResetIdentityDefault", "passwordResetByAdminNotificationMessage", "rejectDeveloperNotificationMessage", "requestDeveloperNotificationMessage" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Email Template was successfully reset to default."
          },
          "204" : {
            "description" : "Email Template was successfully reset to default."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "EmailTemplates" ],
        "description" : "Gets the entity state (Etag) version of the email template specified by its identifier.",
        "operationId" : "EmailTemplate_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Email Template Name Identifier.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "applicationApprovedNotificationMessage", "accountClosedDeveloper", "quotaLimitApproachingDeveloperNotificationMessage", "newDeveloperNotificationMessage", "emailChangeIdentityDefault", "inviteUserNotificationMessage", "newCommentNotificationMessage", "confirmSignUpIdentityDefault", "newIssueNotificationMessage", "purchaseDeveloperNotificationMessage", "passwordResetIdentityDefault", "passwordResetByAdminNotificationMessage", "rejectDeveloperNotificationMessage", "requestDeveloperNotificationMessage" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified email template entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "EmailTemplates" ],
        "description" : "Updates the specific Email Template.",
        "operationId" : "EmailTemplate_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "templateName",
          "in" : "path",
          "description" : "Email Template Name Identifier.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "applicationApprovedNotificationMessage", "accountClosedDeveloper", "quotaLimitApproachingDeveloperNotificationMessage", "newDeveloperNotificationMessage", "emailChangeIdentityDefault", "inviteUserNotificationMessage", "newCommentNotificationMessage", "confirmSignUpIdentityDefault", "newIssueNotificationMessage", "purchaseDeveloperNotificationMessage", "passwordResetIdentityDefault", "passwordResetByAdminNotificationMessage", "rejectDeveloperNotificationMessage", "requestDeveloperNotificationMessage" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailTemplateUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Email Template was successfully updated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "EmailTemplateCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Next page link if any."
          },
          "value" : {
            "type" : "array",
            "description" : "Page values.",
            "items" : {
              "$ref" : "#/components/schemas/EmailTemplateContract"
            }
          }
        },
        "description" : "Paged email template list representation."
      },
      "EmailTemplateContract" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EmailTemplateContractProperties"
          }
        },
        "description" : "Email Template details.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Resource ID.",
              "readOnly" : true
            },
            "name" : {
              "type" : "string",
              "description" : "Resource name.",
              "readOnly" : true
            },
            "type" : {
              "type" : "string",
              "description" : "Resource type for API Management resource.",
              "readOnly" : true
            }
          },
          "description" : "The Resource definition."
        } ]
      },
      "EmailTemplateContractProperties" : {
        "required" : [ "body", "subject" ],
        "type" : "object",
        "properties" : {
          "body" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Email Template Body. This should be a valid XDocument"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the Email Template."
          },
          "isDefault" : {
            "type" : "boolean",
            "description" : "Whether the template is the default template provided by Api Management or has been edited.",
            "readOnly" : true
          },
          "parameters" : {
            "type" : "array",
            "description" : "Email Template Parameter values.",
            "items" : {
              "$ref" : "#/components/schemas/EmailTemplateParametersContractProperties"
            }
          },
          "subject" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "type" : "string",
            "description" : "Subject of the Template."
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the Template."
          }
        },
        "description" : "Email Template Contract properties."
      },
      "EmailTemplateParametersContractProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9-._]+$",
            "type" : "string",
            "description" : "Template parameter description."
          },
          "name" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9-._]+$",
            "type" : "string",
            "description" : "Template parameter name."
          },
          "title" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "description" : "Template parameter title."
          }
        },
        "description" : "Email Template Parameter contract."
      },
      "EmailTemplateUpdateParameterProperties" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Email Template Body. This should be a valid XDocument"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the Email Template."
          },
          "parameters" : {
            "type" : "array",
            "description" : "Email Template Parameter values.",
            "items" : {
              "$ref" : "#/components/schemas/EmailTemplateParametersContractProperties"
            }
          },
          "subject" : {
            "maxLength" : 1000,
            "minLength" : 1,
            "type" : "string",
            "description" : "Subject of the Template."
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the Template."
          }
        },
        "description" : "Email Template Update Contract properties."
      },
      "EmailTemplateUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EmailTemplateUpdateParameterProperties"
          }
        },
        "description" : "Email Template update Parameters."
      }
    },
    "parameters" : {
      "TemplateNameParameter" : {
        "name" : "templateName",
        "in" : "path",
        "description" : "Email Template Name Identifier.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "applicationApprovedNotificationMessage", "accountClosedDeveloper", "quotaLimitApproachingDeveloperNotificationMessage", "newDeveloperNotificationMessage", "emailChangeIdentityDefault", "inviteUserNotificationMessage", "newCommentNotificationMessage", "confirmSignUpIdentityDefault", "newIssueNotificationMessage", "purchaseDeveloperNotificationMessage", "passwordResetIdentityDefault", "passwordResetByAdminNotificationMessage", "rejectDeveloperNotificationMessage", "requestDeveloperNotificationMessage" ]
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}