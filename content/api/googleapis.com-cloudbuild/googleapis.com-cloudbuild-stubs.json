{
  "mappings" : [ {
    "id" : "2fc9d621-be7b-4b98-bb6e-97b76436a704",
    "name" : "Creates a `WorkerPool` to run the builds, and returns the new worker pool.",
    "request" : {
      "urlPath" : "/v1alpha2/kciofj0qa6u833we4mg12fwm2rfh0pvz0w9xrbcb68tc3q14t1pxfoa3w7do0jay7wp34m2nzni6ckvrcfhgdy8k5yeu0vqk34qg97tqp4pxj2910ntqy42uhhkb7hy3/workerPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-11-18T06:59:12.125594Z\",\n  \"deleteTime\" : \"2022-04-03T09:08:12.125618Z\",\n  \"name\" : \"Francisco Lubowitz\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"qob9ct6mp25nklh9v0ih02s3b4nlr57sf2d3p\"\n  },\n  \"updateTime\" : \"2022-10-26T08:30:12.12569Z\",\n  \"state\" : \"DELETING\",\n  \"region\" : \"8jx77jsd30x4w7ovqto25seafonk64r91grfvmqwzh0j2djd22oi3ljq4hyvt\",\n  \"workerConfig\" : {\n    \"machineType\" : \"sq5o4z4v5kuooz4ta8bpqthncwldjhft7cuw0faf05m9x5rfkennzpqmchvwv8vvo2a0vvyr7aejxh1xjecarr6jy1z6w\",\n    \"diskSizeGb\" : \"qocnbycm2ytqu8lhosl5jvju8f9k66\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fc9d621-be7b-4b98-bb6e-97b76436a704",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:12.125816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.create",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "8691a04b-ab6d-4d1a-9814-74220bf5d907",
    "name" : "Lists `WorkerPool`s by project.",
    "request" : {
      "urlPath" : "/v1alpha2/hw9lofzswsfub1hq2rndg5rgwztloypwkgcmwuyfvar1q1i2wzgbavxtcefpgx8yzqlymgpy62m0kpp4lbhrthufzexj5urfu9o9rwxwuul2ihhlv3vr9sqm9a5rwxdj9q5sy2tej0fpz7jk7roo1rkvq8i90/workerPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"createTime\" : \"2022-12-31T07:16:12.124987Z\",\n    \"deleteTime\" : \"2022-05-07T06:01:12.125014Z\",\n    \"name\" : \"Dulcie Ondricka Sr.\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"o6tj239jrn9jg50061w1x76mr0zacspgpgrooi6cczttagc1wtzmydlsn8yth4amhzxjlawggy93uhjt14kggc4zrwfqkwcq5oz5io5r6sdoyt1m233v9ycc0kglipo8r1kyzb35v8m5vs3i6kgqn831d03d3mstvc1p05o79\"\n    },\n    \"updateTime\" : \"2022-10-20T07:49:12.125095Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"gg3n6xeku4p4tiuthn6398996c9e1zft10d6uoflg1t6ubv0qjg2dxi0h8e2v90kz412r5d783de4bhwm4c14i8dq\",\n    \"workerConfig\" : {\n      \"machineType\" : \"n3iyyxipyuurp5poxxhhbi6o63tojn5006pn8x57gbbnowpliedxgi2sdwf51tb6ujbbcrr5e63uzgqdu36h1x4iq3jcde4kmar17pt86pfh9r0n7t0u2j37v39wmuz60zbtkn6w5jor6ntm73rv87bz0kpxwecgovyw7ez\",\n      \"diskSizeGb\" : \"9u3kzhvqd1ar84sk1qua0yc7quqd20ixqnkd8hulvzn5xrig4mzqgaqrlrlj8baqog9dv98fgh179ncb6ceul7ekf7wiwk49fkc7id2xqb1wuc3beod3rvjut2ari1cyy0wchtvp9nfanhujx16putlujjse7\"\n    }\n  }, {\n    \"createTime\" : \"2022-08-17T08:38:12.125171Z\",\n    \"deleteTime\" : \"2023-02-26T09:08:12.125196Z\",\n    \"name\" : \"Eboni Douglas\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"7db0qewcsdtk1gew552y6hr1q8w6w0r3isqtth4iks9zgtml1pjr73zcoy6f977741pmss\"\n    },\n    \"updateTime\" : \"2022-12-02T06:20:12.125273Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"hyttycaz34bcgnqgev0inm1y5ocmrph055k9nujefos0w1uf20ecf4\",\n    \"workerConfig\" : {\n      \"machineType\" : \"s22okeri0olyyrqfw8y1i0cz5oild2dmnxwcnh1g62ae51j5emezbtjstzx2bci6o37xglhu6\",\n      \"diskSizeGb\" : \"wm4zpvapk46drk80vtwnd803rpjlzsa6ziuo7jz086ky5vr7gdym234joqb6vunjj22vk\"\n    }\n  }, {\n    \"createTime\" : \"2023-02-21T06:59:12.125345Z\",\n    \"deleteTime\" : \"2022-06-30T07:57:12.125369Z\",\n    \"name\" : \"Garry Heidenreich\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"z2h0fjrixq7wvqifgowk8tb6vtgtd95uj2gr274n80mzds34fa52eibar6frksnjiu0kvto3jk3lyh8p2q97kmlf67ymkvtpbreruccdm6xy1or6r5xgkllnif6yfnpdg580uls2kmm3m5eidzja5bep8zln73gqs8grb689uod62lttn0tb4h\"\n    },\n    \"updateTime\" : \"2022-06-11T06:12:12.12545Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"hs7rgj5ajyqe0j2lwvboz1nsnggsjirkrfhn75tah6ak5sbaliq0qzf3eog6zcmosnq8nhhzbgl41gih7gubkqmwbdlk332o0hm5gjjuhkx9a78jtizox0shyuw27re8a08n73nam0l4e6gvhs9kijadz\",\n    \"workerConfig\" : {\n      \"machineType\" : \"ff1b6f3onupcqesh53jfmtosshezxd0fh1n9d1iyrfzfp7lkpk58tvqbcajyhavjn1rtn34zk6vykdrrne7lsr9vfaj64qs2jifp5ttwiwh1w8xyc1745o6xilbwls0azdcj6k6oe\",\n      \"diskSizeGb\" : \"86zkkbwq1czeec5he1pr4z36bwvgjo3j7f5y4522k33q5xzxs8v39h6ze3c4gqdaqd8gkrm1gq6841qphd4phjg9f8hcvxc79qzrs7gnw3u7555s8criv2m4whqzzzfe0owntun7e5l7sx280h21\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8691a04b-ab6d-4d1a-9814-74220bf5d907",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:12.125563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.list",
          "schema" : {
            "description" : "Response containing existing `WorkerPools`.",
            "properties" : {
              "workerPools" : {
                "description" : "`WorkerPools` for the specified project.",
                "items" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "396e3633-bc0a-4edc-87fa-b9f29f27c525",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1alpha2/Tammera+Kuvalis:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "396e3633-bc0a-4edc-87fa-b9f29f27c525",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:12.124939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "25354700-76f0-443e-9830-fac0a08587c4",
    "name" : "Updates a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Shaina+Reichert",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-05-17T07:52:12.124587Z\",\n  \"deleteTime\" : \"2022-07-13T07:12:12.124615Z\",\n  \"name\" : \"Damion Wolf\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"wsgaexvo519odkcumv95p4wkm7oge3axxpzl1t9m7si70j9vxm3q8bt4ma8jlzmyrs\"\n  },\n  \"updateTime\" : \"2022-06-03T06:17:12.124699Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"region\" : \"l5p63ujo9l5cboj4u4tcaewhszveycn7j8533y6w0npp9hu4knjuv2rkkwpb5jup21bfabq368bru8gv6mx9hw\",\n  \"workerConfig\" : {\n    \"machineType\" : \"9ekex69o5a6\",\n    \"diskSizeGb\" : \"ng2t55ks40ayh0eino\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25354700-76f0-443e-9830-fac0a08587c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:12.124861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.patch",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2d064361-68d8-432a-8d1d-4278fa6c7a43",
    "name" : "Returns details of a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Ginger+Legros",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-06-14T07:12:12.124188Z\",\n  \"deleteTime\" : \"2022-08-15T08:15:12.124222Z\",\n  \"name\" : \"Ronny Labadie\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"3v174jfktqxh3982p4tgdwp9gs\"\n  },\n  \"updateTime\" : \"2022-09-07T07:50:12.124324Z\",\n  \"state\" : \"RUNNING\",\n  \"region\" : \"so9zy1ttw7cqdrfswf53icsmlvrl2z34a0h0y6a1c4iovymw46xplgmw3mci7k9ctshozlrm6akmw64yv\",\n  \"workerConfig\" : {\n    \"machineType\" : \"mdajugsfhr1ky95dc4qnka7o9l5dr3ye8q44y5yiqp6l7sjjrkfj6oag0wi0lmqbxe9xvmn07rjbvdd5jphe1yu5glou2a7bp4squpje8c3flwrz4me4emu8zz3kx5ytwdllas5mhort6spiub84h9c34qkm68kdao9oxcmang6sp7f\",\n    \"diskSizeGb\" : \"obhunn9cpsxyrywgez90tdfic9dnqi4whxc6rtr6xj9j6wtb9e1vlptjnk3r713coqmaw5ji7ztt1haqgn2tdmx4i6qlh9fqf02uj0vlwjhou1nbeeb84z1966r\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d064361-68d8-432a-8d1d-4278fa6c7a43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:12.124541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.get",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d30c82ee-7c7c-4507-bdcf-bb7a4cc4d76a",
    "name" : "Deletes a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Asley+Feest",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d30c82ee-7c7c-4507-bdcf-bb7a4cc4d76a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:12.124101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}