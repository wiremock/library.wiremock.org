{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "HybridDataManagementClient",
    "version" : "2016-06-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.HybridData/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "summary" : "This method gets all the operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This method gets all the operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableProviderOperations"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridData/dataManagers" : {
      "get" : {
        "tags" : [ "DataManagers" ],
        "description" : "Lists all the data manager resources available under the subscription.",
        "operationId" : "DataManagers_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of data manager resources available under the subscription.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataManagerList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers" : {
      "get" : {
        "tags" : [ "DataManagers" ],
        "description" : "Lists all the data manager resources available under the given resource group.",
        "operationId" : "DataManagers_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of data manager resources by resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataManagerList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}" : {
      "get" : {
        "tags" : [ "DataManagers" ],
        "description" : "Gets information about the specified data manager resource.",
        "operationId" : "DataManagers_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data Manager Resource object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataManager"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DataManagers" ],
        "description" : "Creates a new data manager resource with the specified parameters. Existing resources cannot be updated with this API\r\nand should instead be updated with the Update data manager resource API.",
        "operationId" : "DataManagers_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data manager resource details from request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataManager"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Data Manager Resource object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataManager"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted request for create/update."
          }
        }
      },
      "delete" : {
        "tags" : [ "DataManagers" ],
        "description" : "Deletes a data manager resource in Microsoft Azure.",
        "operationId" : "DataManagers_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Data Manager Resource deleted."
          },
          "204" : {
            "description" : "Data Manager Resource deleted."
          }
        }
      },
      "patch" : {
        "tags" : [ "DataManagers" ],
        "description" : "Updates the properties of an existing data manager resource.",
        "operationId" : "DataManagers_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "Defines the If-Match condition. The patch will be performed only if the ETag of the data manager resource on the server matches this value.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data manager resource details from request body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataManagerUpdateParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Data Manager Resource object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataManager"
                }
              }
            }
          },
          "202" : {
            "description" : "Data Manager Resource updated."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices" : {
      "get" : {
        "tags" : [ "DataServices" ],
        "description" : "This method gets all the data services.",
        "operationId" : "DataServices_ListByDataManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of data services.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataServiceList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}" : {
      "get" : {
        "tags" : [ "DataServices" ],
        "description" : "Gets the data service that match the data service name given.",
        "operationId" : "DataServices_Get",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The name of the data service that is being queried.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The data service that matches the name.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataService"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions" : {
      "get" : {
        "tags" : [ "JobDefinitions" ],
        "description" : "This method gets all the job definitions of the given data service name.",
        "operationId" : "JobDefinitions_ListByDataService",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The data service type of interest.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of job definitions of the given data service type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinitionList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}" : {
      "get" : {
        "tags" : [ "JobDefinitions" ],
        "description" : "This method gets job definition object by name.",
        "operationId" : "JobDefinitions_Get",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The data service name of the job definition",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "The job definition name that is being queried.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job definition that matches the criteria.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "JobDefinitions" ],
        "description" : "Creates or updates a job definition.",
        "operationId" : "JobDefinitions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The data service type of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "The job definition name to be created or updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Job Definition object to be created or updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "JobDefinition object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted request for create/update."
          }
        }
      },
      "delete" : {
        "tags" : [ "JobDefinitions" ],
        "description" : "This method deletes the given job definition.",
        "operationId" : "JobDefinitions_Delete",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The data service type of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "The job definition name to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted request for JobDefinition deletion."
          },
          "204" : {
            "description" : "JobDefinition deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "This method gets all the jobs of a given job definition.",
        "operationId" : "Jobs_ListByJobDefinition",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The name of the data service of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "The name of the job definition for which jobs are needed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of jobs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "This method gets a data manager job given the jobId.",
        "operationId" : "Jobs_Get",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The name of the data service of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "The name of the job definition of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The job id of the job queried.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "$expand is supported on details parameter for job, which provides details on the job stages.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job that matches the given criteria.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/cancel" : {
      "post" : {
        "tags" : [ "Jobs" ],
        "description" : "Cancels the given job.",
        "operationId" : "Jobs_Cancel",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The name of the data service of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "The name of the job definition of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The job id of the job queried.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted job cancellation request."
          },
          "204" : {
            "description" : "Job cancelled."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/resume" : {
      "post" : {
        "tags" : [ "Jobs" ],
        "description" : "Resumes the given job.",
        "operationId" : "Jobs_Resume",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The name of the data service of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "The name of the job definition of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "The job id of the job queried.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted job resume request."
          },
          "204" : {
            "description" : "Job resumed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/run" : {
      "post" : {
        "tags" : [ "JobDefinitions" ],
        "description" : "This method runs a job instance of the given job definition.",
        "operationId" : "JobDefinitions_Run",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The data service type of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobDefinitionName",
          "in" : "path",
          "description" : "Name of the job definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Run time parameters for the job definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RunParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Job run accepted."
          },
          "204" : {
            "description" : "Job run started."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "This method gets all the jobs of a data service type in a given resource.",
        "operationId" : "Jobs_ListByDataService",
        "parameters" : [ {
          "name" : "dataServiceName",
          "in" : "path",
          "description" : "The name of the data service of interest.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of jobs that match the service and resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes" : {
      "get" : {
        "tags" : [ "DataStoreTypes" ],
        "description" : "Gets all the data store/repository types that the resource supports.",
        "operationId" : "DataStoreTypes_ListByDataManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of data store types that are supported.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataStoreTypeList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes/{dataStoreTypeName}" : {
      "get" : {
        "tags" : [ "DataStoreTypes" ],
        "description" : "Gets the data store/repository type given its name.",
        "operationId" : "DataStoreTypes_Get",
        "parameters" : [ {
          "name" : "dataStoreTypeName",
          "in" : "path",
          "description" : "The data store/repository type name for which details are needed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The data store/repository type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataStoreType"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores" : {
      "get" : {
        "tags" : [ "DataStores" ],
        "description" : "Gets all the data stores/repositories in the given resource.",
        "operationId" : "DataStores_ListByDataManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of data stores/repositories in the given resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataStoreList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/{dataStoreName}" : {
      "get" : {
        "tags" : [ "DataStores" ],
        "description" : "This method gets the data store/repository by name.",
        "operationId" : "DataStores_Get",
        "parameters" : [ {
          "name" : "dataStoreName",
          "in" : "path",
          "description" : "The data store/repository name queried.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The data store/repository which matches the name given.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataStore"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DataStores" ],
        "description" : "Creates or updates the data store/repository in the data manager.",
        "operationId" : "DataStores_CreateOrUpdate",
        "parameters" : [ {
          "name" : "dataStoreName",
          "in" : "path",
          "description" : "The data store/repository name to be created or updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The data store/repository object to be created or updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataStore"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The data store/repository object.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataStore"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted request for create/update."
          }
        }
      },
      "delete" : {
        "tags" : [ "DataStores" ],
        "description" : "This method deletes the given data store/repository.",
        "operationId" : "DataStores_Delete",
        "parameters" : [ {
          "name" : "dataStoreName",
          "in" : "path",
          "description" : "The data store/repository name to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted request for DataStore deletion."
          },
          "204" : {
            "description" : "DataStore deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobDefinitions" : {
      "get" : {
        "tags" : [ "JobDefinitions" ],
        "description" : "This method gets all the job definitions of the given data manager resource.",
        "operationId" : "JobDefinitions_ListByDataManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of job definitions in that resource.OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinitionList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "This method gets all the jobs at the data manager resource level.",
        "operationId" : "Jobs_ListByDataManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData Filter options",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of jobs in the resource specified.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys" : {
      "get" : {
        "tags" : [ "PublicKeys" ],
        "description" : "This method gets the list view of public keys, however it will only have one element.",
        "operationId" : "PublicKeys_ListByDataManager",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of public keys.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicKeyList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys/{publicKeyName}" : {
      "get" : {
        "tags" : [ "PublicKeys" ],
        "description" : "This method gets the public keys.",
        "operationId" : "PublicKeys_Get",
        "parameters" : [ {
          "name" : "publicKeyName",
          "in" : "path",
          "description" : "Name of the public key.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Subscription Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The Resource Group Name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dataManagerName",
          "in" : "path",
          "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\.]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API Version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The public keys.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicKey"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AvailableProviderOperation" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/AvailableProviderOperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or Sets Name of the operations"
          },
          "origin" : {
            "type" : "string",
            "description" : "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is “user,system”"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AvailableProviderOperationProperties"
          }
        },
        "description" : "Class represents provider operation"
      },
      "AvailableProviderOperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views."
          },
          "operation" : {
            "type" : "string",
            "description" : "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies."
          },
          "provider" : {
            "type" : "string",
            "description" : "Gets or sets Provider\r\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with “Microsoft” for 1st party services."
          },
          "resource" : {
            "type" : "string",
            "description" : "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \r\nIt should use Title Casing – for examples, please refer to the “name” section."
          }
        },
        "description" : "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations."
      },
      "AvailableProviderOperationProperties" : {
        "type" : "object",
        "description" : "Class represents Properties in AvailableProviderOperations"
      },
      "AvailableProviderOperations" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of operations."
          },
          "value" : {
            "type" : "array",
            "description" : "List of operations.",
            "items" : {
              "$ref" : "#/components/schemas/AvailableProviderOperation"
            }
          }
        },
        "description" : "Class for set of operations used for discovery of available provider operations."
      },
      "CustomerSecret" : {
        "required" : [ "algorithm", "keyIdentifier", "keyValue" ],
        "type" : "object",
        "properties" : {
          "algorithm" : {
            "type" : "string",
            "description" : "The encryption algorithm used to encrypt data.",
            "enum" : [ "None", "RSA1_5", "RSA_OAEP", "PlainText" ]
          },
          "keyIdentifier" : {
            "type" : "string",
            "description" : "The identifier to the data service input object which this secret corresponds to."
          },
          "keyValue" : {
            "type" : "string",
            "description" : "It contains the encrypted customer secret."
          }
        },
        "description" : "The pair of customer secret."
      },
      "DataManager" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Etag of the Resource."
          }
        },
        "description" : "The DataManager resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DataManagerList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of data stores."
          },
          "value" : {
            "type" : "array",
            "description" : "List of data manager resources.",
            "items" : {
              "$ref" : "#/components/schemas/DataManager"
            }
          }
        },
        "description" : "DataManager resources Collection."
      },
      "DataManagerUpdateParameter" : {
        "type" : "object",
        "properties" : {
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\r\n(across resource groups)."
          }
        },
        "description" : "The DataManagerUpdateParameter."
      },
      "DataService" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DataServiceProperties"
          }
        },
        "description" : "Data Service.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DmsBaseObject"
        } ]
      },
      "DataServiceList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of data services."
          },
          "value" : {
            "type" : "array",
            "description" : "List of data services.",
            "items" : {
              "$ref" : "#/components/schemas/DataService"
            }
          }
        },
        "description" : "Data Service Collection."
      },
      "DataServiceProperties" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "description" : "State of the data service.",
            "enum" : [ "Disabled", "Enabled", "Supported" ]
          },
          "supportedDataSinkTypes" : {
            "type" : "array",
            "description" : "Supported data store types which can be used as a sink.",
            "items" : {
              "type" : "string"
            }
          },
          "supportedDataSourceTypes" : {
            "type" : "array",
            "description" : "Supported data store types which can be used as a source.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Data Service properties."
      },
      "DataStore" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DataStoreProperties"
          }
        },
        "description" : "Data store.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DmsBaseObject"
        } ]
      },
      "DataStoreFilter" : {
        "type" : "object",
        "properties" : {
          "dataStoreTypeId" : {
            "type" : "string",
            "description" : "The data store type id."
          }
        },
        "description" : "Contains the information about the filters for the DataStore."
      },
      "DataStoreList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of data stores."
          },
          "value" : {
            "type" : "array",
            "description" : "List of data stores.",
            "items" : {
              "$ref" : "#/components/schemas/DataStore"
            }
          }
        },
        "description" : "Data Store Collection."
      },
      "DataStoreProperties" : {
        "required" : [ "dataStoreTypeId", "state" ],
        "type" : "object",
        "properties" : {
          "customerSecrets" : {
            "type" : "array",
            "description" : "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
            "items" : {
              "$ref" : "#/components/schemas/CustomerSecret"
            }
          },
          "dataStoreTypeId" : {
            "type" : "string",
            "description" : "The arm id of the data store type."
          },
          "extendedProperties" : {
            "type" : "object",
            "description" : "A generic json used differently by each data source type."
          },
          "repositoryId" : {
            "type" : "string",
            "description" : "Arm Id for the manager resource to which the data source is associated. This is optional."
          },
          "state" : {
            "type" : "string",
            "description" : "State of the data source.",
            "enum" : [ "Disabled", "Enabled", "Supported" ]
          }
        },
        "description" : "Data Store for sources and sinks"
      },
      "DataStoreType" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DataStoreTypeProperties"
          }
        },
        "description" : "Data Store Type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DmsBaseObject"
        } ]
      },
      "DataStoreTypeList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of data store types."
          },
          "value" : {
            "type" : "array",
            "description" : "List of DataStoreType.",
            "items" : {
              "$ref" : "#/components/schemas/DataStoreType"
            }
          }
        },
        "description" : "Data Store Type Collection."
      },
      "DataStoreTypeProperties" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "repositoryType" : {
            "type" : "string",
            "description" : "Arm type for the manager resource to which the data source type is associated. This is optional."
          },
          "state" : {
            "type" : "string",
            "description" : "State of the data store type.",
            "enum" : [ "Disabled", "Enabled", "Supported" ]
          },
          "supportedDataServicesAsSink" : {
            "type" : "array",
            "description" : "Supported data services where it can be used as a sink.",
            "items" : {
              "type" : "string"
            }
          },
          "supportedDataServicesAsSource" : {
            "type" : "array",
            "description" : "Supported data services where it can be used as a source.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Data Store Type properties."
      },
      "DmsBaseObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id of the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the object.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of the object.",
            "readOnly" : true
          }
        },
        "description" : "Base class for all objects under DataManager Service"
      },
      "Error" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code that can be used to programmatically identify the error."
          },
          "message" : {
            "type" : "string",
            "description" : "Describes the error in detail and provides debugging information."
          }
        },
        "description" : "Top level error for the job."
      },
      "ErrorDetails" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "integer",
            "description" : "Error code.",
            "format" : "int32"
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Error message."
          },
          "exceptionMessage" : {
            "type" : "string",
            "description" : "Contains the non localized exception message"
          },
          "recommendedAction" : {
            "type" : "string",
            "description" : "Recommended action for the error."
          }
        },
        "description" : "Error Details"
      },
      "Job" : {
        "required" : [ "properties", "startTime", "status" ],
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "Time at which the job ended in UTC ISO 8601 format.",
            "format" : "date-time"
          },
          "error" : {
            "$ref" : "#/components/schemas/Error"
          },
          "properties" : {
            "$ref" : "#/components/schemas/JobProperties"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Time at which the job was started in UTC ISO 8601 format.",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the job.",
            "enum" : [ "None", "InProgress", "Succeeded", "WaitingForAction", "Failed", "Cancelled", "Cancelling" ]
          }
        },
        "description" : "Data service job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DmsBaseObject"
        } ]
      },
      "JobDefinition" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobDefinitionProperties"
          }
        },
        "description" : "Job Definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DmsBaseObject"
        } ]
      },
      "JobDefinitionFilter" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "dataSource" : {
            "type" : "string",
            "description" : "The data source associated with the job definition"
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The last modified date time of the data source.",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the job definition.",
            "enum" : [ "Disabled", "Enabled", "Supported" ]
          }
        },
        "description" : "Contains the supported job definition filters."
      },
      "JobDefinitionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of job definitions."
          },
          "value" : {
            "type" : "array",
            "description" : "List of job definitions.",
            "items" : {
              "$ref" : "#/components/schemas/JobDefinition"
            }
          }
        },
        "description" : "Job Definition Collection."
      },
      "JobDefinitionProperties" : {
        "required" : [ "dataSinkId", "dataSourceId", "state" ],
        "type" : "object",
        "properties" : {
          "customerSecrets" : {
            "type" : "array",
            "description" : "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
            "items" : {
              "$ref" : "#/components/schemas/CustomerSecret"
            }
          },
          "dataServiceInput" : {
            "type" : "object",
            "description" : "A generic json used differently by each data service type."
          },
          "dataSinkId" : {
            "type" : "string",
            "description" : "Data Sink Id associated to the job definition."
          },
          "dataSourceId" : {
            "type" : "string",
            "description" : "Data Source Id associated to the job definition."
          },
          "lastModifiedTime" : {
            "type" : "string",
            "description" : "Last modified time of the job definition.",
            "format" : "date-time"
          },
          "runLocation" : {
            "type" : "string",
            "description" : "This is the preferred geo location for the job to run.",
            "enum" : [ "none", "australiaeast", "australiasoutheast", "brazilsouth", "canadacentral", "canadaeast", "centralindia", "centralus", "eastasia", "eastus", "eastus2", "japaneast", "japanwest", "koreacentral", "koreasouth", "southeastasia", "southcentralus", "southindia", "northcentralus", "northeurope", "uksouth", "ukwest", "westcentralus", "westeurope", "westindia", "westus", "westus2" ]
          },
          "schedules" : {
            "type" : "array",
            "description" : "Schedule for running the job definition",
            "items" : {
              "$ref" : "#/components/schemas/Schedule"
            }
          },
          "state" : {
            "type" : "string",
            "description" : "State of the job definition.",
            "enum" : [ "Disabled", "Enabled", "Supported" ]
          },
          "userConfirmation" : {
            "type" : "string",
            "description" : "Enum to detect if user confirmation is required. If not passed will default to NotRequired.",
            "default" : "NotRequired",
            "enum" : [ "NotRequired", "Required" ]
          }
        },
        "description" : "Job Definition"
      },
      "JobDetails" : {
        "type" : "object",
        "properties" : {
          "errorDetails" : {
            "type" : "array",
            "description" : "Error details for failure. This is optional.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetails"
            }
          },
          "itemDetailsLink" : {
            "type" : "string",
            "description" : "Item Details Link to download files or see details"
          },
          "jobDefinition" : {
            "$ref" : "#/components/schemas/JobDefinition"
          },
          "jobStages" : {
            "type" : "array",
            "description" : "List of stages that ran in the job",
            "items" : {
              "$ref" : "#/components/schemas/JobStages"
            }
          }
        },
        "description" : "Job details."
      },
      "JobFilter" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the job.",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the job.",
            "enum" : [ "None", "InProgress", "Succeeded", "WaitingForAction", "Failed", "Cancelled", "Cancelling" ]
          }
        },
        "description" : "Contains the information about the filters for the job."
      },
      "JobList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of jobs."
          },
          "value" : {
            "type" : "array",
            "description" : "List of jobs.",
            "items" : {
              "$ref" : "#/components/schemas/Job"
            }
          }
        },
        "description" : "Job Collection."
      },
      "JobProperties" : {
        "required" : [ "isCancellable" ],
        "type" : "object",
        "properties" : {
          "bytesProcessed" : {
            "type" : "integer",
            "description" : "Number of bytes processed by the job as of now.",
            "format" : "int64"
          },
          "dataSinkName" : {
            "type" : "string",
            "description" : "Name of the data sink on which the job was triggered."
          },
          "dataSourceName" : {
            "type" : "string",
            "description" : "Name of the data source on which the job was triggered."
          },
          "details" : {
            "$ref" : "#/components/schemas/JobDetails"
          },
          "isCancellable" : {
            "type" : "string",
            "description" : "Describes whether the job is cancellable.",
            "enum" : [ "NotCancellable", "Cancellable" ]
          },
          "itemsProcessed" : {
            "type" : "integer",
            "description" : "Number of items processed by the job as of now",
            "format" : "int64"
          },
          "totalBytesToProcess" : {
            "type" : "integer",
            "description" : "Number of bytes to be processed by the job in total.",
            "format" : "int64"
          },
          "totalItemsToProcess" : {
            "type" : "integer",
            "description" : "Number of items to be processed by the job in total",
            "format" : "int64"
          }
        },
        "description" : "Job Properties"
      },
      "JobStages" : {
        "required" : [ "stageStatus" ],
        "type" : "object",
        "properties" : {
          "errorDetails" : {
            "type" : "array",
            "description" : "Error details for the stage. This is optional",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetails"
            }
          },
          "jobStageDetails" : {
            "type" : "object",
            "description" : "Job Stage Details"
          },
          "stageName" : {
            "type" : "string",
            "description" : "Name of the job stage."
          },
          "stageStatus" : {
            "type" : "string",
            "description" : "Status of the job stage.",
            "enum" : [ "None", "InProgress", "Succeeded", "WaitingForAction", "Failed", "Cancelled", "Cancelling" ]
          }
        },
        "description" : "Job stages."
      },
      "Key" : {
        "required" : [ "encryptionChunkSizeInBytes", "keyExponent", "keyModulus" ],
        "type" : "object",
        "properties" : {
          "encryptionChunkSizeInBytes" : {
            "type" : "integer",
            "description" : "The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.",
            "format" : "int32"
          },
          "keyExponent" : {
            "type" : "string",
            "description" : "Exponent of the encryption key."
          },
          "keyModulus" : {
            "type" : "string",
            "description" : "Modulus of the encryption key."
          }
        },
        "description" : "Encryption Key."
      },
      "PublicKey" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PublicKeyProperties"
          }
        },
        "description" : "Public key",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DmsBaseObject"
        } ]
      },
      "PublicKeyList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for the next set of public keys."
          },
          "value" : {
            "type" : "array",
            "description" : "List of public keys.",
            "items" : {
              "$ref" : "#/components/schemas/PublicKey"
            }
          }
        },
        "description" : "PublicKey Collection"
      },
      "PublicKeyProperties" : {
        "required" : [ "dataServiceLevel1Key", "dataServiceLevel2Key" ],
        "type" : "object",
        "properties" : {
          "dataServiceLevel1Key" : {
            "$ref" : "#/components/schemas/Key"
          },
          "dataServiceLevel2Key" : {
            "$ref" : "#/components/schemas/Key"
          }
        },
        "description" : "PublicKey Properties"
      },
      "Resource" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Resource Id.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East\r\nUS, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo\r\nregion is specified on update the request will succeed."
          },
          "name" : {
            "type" : "string",
            "description" : "The Resource Name.",
            "readOnly" : true
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\r\n(across resource groups)."
          },
          "type" : {
            "type" : "string",
            "description" : "The Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Model of the Resource."
      },
      "RunParameters" : {
        "type" : "object",
        "properties" : {
          "customerSecrets" : {
            "type" : "array",
            "description" : "List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.",
            "items" : {
              "$ref" : "#/components/schemas/CustomerSecret"
            }
          },
          "dataServiceInput" : {
            "type" : "object",
            "description" : "A generic json used differently by each data service type."
          },
          "userConfirmation" : {
            "type" : "string",
            "description" : "Enum to detect if user confirmation is required. If not passed will default to NotRequired.",
            "default" : "NotRequired",
            "enum" : [ "NotRequired", "Required" ]
          }
        },
        "description" : "Run parameters for a job."
      },
      "Schedule" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the schedule."
          },
          "policyList" : {
            "type" : "array",
            "description" : "A list of repetition intervals in ISO 8601 format.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Schedule for the job run."
      },
      "Sku" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The sku name. Required for data manager creation, optional for update."
          },
          "tier" : {
            "type" : "string",
            "description" : "The sku tier. This is based on the SKU name."
          }
        },
        "description" : "The sku type."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API Version",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "dataManagerNameParameter" : {
        "name" : "dataManagerName",
        "in" : "path",
        "description" : "The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
        "required" : true,
        "schema" : {
          "maxLength" : 24,
          "minLength" : 3,
          "pattern" : "^[-\\w\\.]+$",
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The Resource Group Name",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The Subscription Id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}