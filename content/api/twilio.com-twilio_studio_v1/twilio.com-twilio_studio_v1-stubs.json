{
  "mappings" : [ {
    "id" : "c4641d07-8e50-435b-8ee4-22a5ae513e75",
    "name" : "Retrieve a specific Flow.",
    "request" : {
      "urlPath" : "/v1/Flows/FWB6efEFa0Df87C63Da600bAA3F2de6cdC",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Herschel Schaden\",\n  \"date_updated\" : \"2022-09-29T12:32:10.257Z\",\n  \"date_created\" : \"2023-06-19T18:11:29.257Z\",\n  \"account_sid\" : \"ACdBfFbdB3dD81eE62a7BBCD4aF0c7f62B\",\n  \"links\" : { },\n  \"version\" : 7403891939935517311,\n  \"url\" : \"https://web.example.mocklab.io/056533\",\n  \"sid\" : \"FW3fCbEBbB0C54EbBA51634a9b7F9DC83c\",\n  \"status\" : \"published\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4641d07-8e50-435b-8ee4-22a5ae513e75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.258211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchFlow",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the Flow.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of the Flow's nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/flow_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "version" : {
                "description" : "The latest version number of the Flow's definition.",
                "nullable" : true,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "591420e6-78db-4b18-a941-7ea7e751d92f",
    "name" : "Delete a specific Flow. - 204",
    "request" : {
      "urlPath" : "/v1/Flows/FWdCF36d074c18ceD1cd33fA6240EAeF34",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "591420e6-78db-4b18-a941-7ea7e751d92f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.257898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteFlow"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "68d1bcd7-0a82-4691-9284-901e94d75319",
    "name" : "Update the status of an Execution to `ended`.",
    "request" : {
      "urlPath" : "/v1/Flows/FWEC5C284Cdbb02747820A0f2F90a15B7D/Executions/FNAADcAe9B6AEf762c0Cc68B16c8DDA5eB",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FW8c8d5C1D0C017CD083Aba455a3Fbe79a\",\n  \"date_updated\" : \"2023-08-23T19:37:54.257Z\",\n  \"contact_channel_address\" : \"4csgy5no4mjs2h32q4im0ma8aotuad521j3pujj8awybzlwonhwmoj76ekywqpp733pkithxiby9mt0c7sdtzvcgk3ymhr3w6200wbeo27r1azgbfpv33py56ltpwtuygqgp9tmo88d3s2gp0sobjppauigjxarscojzf8lmym9mvv3h4\",\n  \"date_created\" : \"2023-08-23T19:44:22.257Z\",\n  \"context\" : { },\n  \"account_sid\" : \"AC5dDdDc1b7Ed7E8A1dFd12D591C7EABEF\",\n  \"contact_sid\" : \"FC7dC15AF185AfAAcAaBBA0Ff064F8BD8B\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/031697\",\n  \"sid\" : \"FN1E38AF92FB3fa89fcFBC2A816b5EEBd9\",\n  \"status\" : \"ended\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68d1bcd7-0a82-4691-9284-901e94d75319",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.257856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateExecution",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "contact_sid" : {
                "description" : "The SID of the Contact.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/execution_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b944ab4d-617c-406e-8f89-315a6a2fea35",
    "name" : "Retrieve an Execution",
    "request" : {
      "urlPath" : "/v1/Flows/FWE3b1Bd775f91A5C411CcF7c376DB82d1/Executions/FN84ae4E575cE2Ec7A56cdFbdFeaFAe112",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FW8279F5cD4dAcb7e9AbDe0dC9c5d3e8Af\",\n  \"date_updated\" : \"2023-06-24T14:44:56.257Z\",\n  \"contact_channel_address\" : \"tg4fdknx40gjwepkc7umyvbal1nruafba8f5qyr70zzrgnpejhnaf76dfkgw6hbkog785mer9r0autu0th3epp95x86drv146qx9eb4cxn4omzt3ll0p9tmn6nen0voft99zbfkpu04386l6ggxjpjy0sri6xyo8hl3nq36e8fept27fae5ho2wqdj8wm\",\n  \"date_created\" : \"2023-04-28T08:03:26.257Z\",\n  \"context\" : { },\n  \"account_sid\" : \"ACBd69cC7D1De79be572d0F6a7a4275fd1\",\n  \"contact_sid\" : \"FC9E4a683Df7cAa3a0F6d77D3D079ddA21\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/949495\",\n  \"sid\" : \"FNAFcDc1A2a63f8BE01Bd1B0FE659bBEd6\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b944ab4d-617c-406e-8f89-315a6a2fea35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.257444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecution",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "contact_sid" : {
                "description" : "The SID of the Contact.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/execution_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "dbf61196-58d8-4232-82d2-56af27b9af80",
    "name" : "Delete the Execution and all Steps relating to it. - 204",
    "request" : {
      "urlPath" : "/v1/Flows/FWEbEDC08A76f9A5aD7dAdBdab6bBdBeca/Executions/FNFddBFd118bDd948aBe6bB3dDAf9dac93",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "dbf61196-58d8-4232-82d2-56af27b9af80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.257155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteExecution"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "3e1da4be-91f4-4c5f-b643-b1ab711dc119",
    "name" : "Retrieve the context for an Execution Step.",
    "request" : {
      "urlPath" : "/v1/Flows/FWeA91226faDfa95E6e1a9a8c42112cEcc/Executions/FNb8BE6BFd3e143Fd94B956f0f77B3c23D/Steps/FTCDc999EaebFAAEc09Ac157C2ad74FDf4/Context",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWE71baaEEbdcb6CB1cC8CB2FDaB36fA20\",\n  \"step_sid\" : \"FTb9B1bF9A2d9EFBC43f711CCeBCdB99eF\",\n  \"context\" : { },\n  \"account_sid\" : \"AC3A43FaFD915fB31Af00C319c58bEBBd5\",\n  \"execution_sid\" : \"FN6deCB4AeAefdfD179C18d95267B6f5Fc\",\n  \"url\" : \"https://web.example.mocklab.io/589857\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e1da4be-91f4-4c5f-b643-b1ab711dc119",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.257112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecutionStepContext",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStepContext resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "execution_sid" : {
                "description" : "The SID of the context's Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "step_sid" : {
                "description" : "The SID of the Step that the context is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FT[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "77d158df-eb46-4712-ae12-cc426290d0da",
    "name" : "Retrieve a Step.",
    "request" : {
      "urlPath" : "/v1/Flows/FW80DCABad9D792fAAe260E0f72EEb5BCF/Executions/FN87Cdb9d0E89B9A2AA83f3B211eE6d9a3/Steps/FT2C94096CFbE7bdC86ab50768Afa9552f",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWccdad2d628A5d5c085AdaaCC2bAe7eCA\",\n  \"date_updated\" : \"2023-01-04T02:40:44.256Z\",\n  \"date_created\" : \"2022-12-09T18:16:02.256Z\",\n  \"context\" : { },\n  \"name\" : \"Makeda Mueller\",\n  \"account_sid\" : \"AC1bA8fEbf7DABcA4A6De9B75d9fbabE5c\",\n  \"links\" : { },\n  \"transitioned_to\" : \"njeo2ov19ou5wrcfbe3c0fobk2on7wr8ikhnv0hoo7mv3tinmzj8hxajfi\",\n  \"execution_sid\" : \"FNb7bA9F0DE7777aAE99F86F23a40cBF8C\",\n  \"transitioned_from\" : \"jdfslhv510vx1hq1xdeepgkrshg78tn6gee\",\n  \"url\" : \"https://web.example.mocklab.io/659355\",\n  \"sid\" : \"FT2E2fDAadaf8ab21FdBd8FaeFf2C42e19\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77d158df-eb46-4712-ae12-cc426290d0da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.256856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecutionStep",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStep resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "execution_sid" : {
                "description" : "The SID of the Step's Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "name" : {
                "description" : "The event that caused the Flow to transition to the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the ExecutionStep resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FT[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "transitioned_from" : {
                "description" : "The Widget that preceded the Widget for the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "transitioned_to" : {
                "description" : "The Widget that will follow the Widget for the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "c01d9122-1d50-42b6-9be6-3a87fbc6a6c3",
    "name" : "Retrieve a list of all Steps for an Execution.",
    "request" : {
      "urlPath" : "/v1/Flows/FW00c9795601EA36CBebBd6853bD87EAEC/Executions/FN27DbdFA650F44B9dEf90555656962a8a/Steps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/728230\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/333443\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/795809\",\n    \"page\" : 2626550276229667856,\n    \"key\" : \"h0szlj3be37t669tamg003loul37qqkp98ajl854juizzh0khnu80uatgayfwv1krgxyaefuzvkq0q0g6jgz68m4j8lxipuaqdn42563yhhtblmlwaej6ucxmo5bmr6jji63baxtftt67y5cx7ohc69wflhjmkhsxwry0vkjbzwb06uwiymtgps2z8rexm\",\n    \"url\" : \"https://web.example.mocklab.io/975788\",\n    \"page_size\" : 2573212602163488442\n  },\n  \"steps\" : [ {\n    \"flow_sid\" : \"FWeBE5DA628fa6eBb4875AaF4bc41d876A\",\n    \"date_updated\" : \"2023-12-09T23:36:10.255Z\",\n    \"date_created\" : \"2022-08-26T23:03:34.255Z\",\n    \"context\" : { },\n    \"name\" : \"Daren Nitzsche II\",\n    \"account_sid\" : \"AC2Ebc6dCFAE229ED603Fd7d0eadF85D09\",\n    \"links\" : { },\n    \"transitioned_to\" : \"lzg7jeb442pm6dy7l43b5w95nmrk7y9lq4rebzadj0lzihwl5iil3p664kdpxlbg5c4dwl5cnxvm1hreeddqp\",\n    \"execution_sid\" : \"FNc32ACB8E8EeC359E4be5956cDBbc73F3\",\n    \"transitioned_from\" : \"7urm2ihkur15qi90dluhfiwkyug1p9q3j7pad6x29i4tg9ml11k48vhs5vjkgu3g233hsvfewxkm6qt086woivc9tdgwug534nmcabgk80do9umj14ti1ephkyt8eb9u1tk\",\n    \"url\" : \"https://web.example.mocklab.io/026878\",\n    \"sid\" : \"FT881CA6EbE5c6ac31adef5fbcaf6AA6bC\"\n  }, {\n    \"flow_sid\" : \"FW58fF5EddbBCef74ecF02b5aEaE6AFC87\",\n    \"date_updated\" : \"2022-10-12T10:38:25.255Z\",\n    \"date_created\" : \"2022-08-15T02:00:11.255Z\",\n    \"context\" : { },\n    \"name\" : \"Shad Hammes\",\n    \"account_sid\" : \"AC76eDE10F7587bFB96dA3cB4EDc6cadBA\",\n    \"links\" : { },\n    \"transitioned_to\" : \"z08egdb31mx83q0v1cow3rk2a09q273rnwri71fdwaazukcpnyd8ru2shlwsv3uneezvtx48gko9i350k5hc5zz9maj3bekvlhfinl6o8t9u3jp5xbjgs\",\n    \"execution_sid\" : \"FNb7C3f969fA0Ab3FFDD1Df7445dCCDbdd\",\n    \"transitioned_from\" : \"yp596twrr5ryc41vvy7dta0qslo9ojwwdqpo956rqiuvb1bp8hqkzu3r7tortvl1agw5wt4f2qsz3umqhw5rve042dslw1ezr\",\n    \"url\" : \"https://web.example.mocklab.io/135581\",\n    \"sid\" : \"FT1e8fa513E92FCCFC9EE8FaBe52CFeDdC\"\n  }, {\n    \"flow_sid\" : \"FW33127aa38CF2bfDFDD33D86cd4fBAeB3\",\n    \"date_updated\" : \"2023-02-11T13:15:49.255Z\",\n    \"date_created\" : \"2023-10-22T00:36:11.255Z\",\n    \"context\" : { },\n    \"name\" : \"Miss Magen Abbott\",\n    \"account_sid\" : \"AC9d23B1d403acA3639DF3F86e47Ef2A7C\",\n    \"links\" : { },\n    \"transitioned_to\" : \"nr0svlkg0jsfhtp83yvx1rwx6hy11v99w24sgkmchcpwzkjjdvgday16dhj3qjo232j2h9uj5s64auwmq3jy8xlshmuztk4djnfvus9xiykc6f8peiwos8izyywwnpltpxq6ukp\",\n    \"execution_sid\" : \"FNbcdBf8b7112e229aFB5d2CE1DDf6d7E2\",\n    \"transitioned_from\" : \"kjvn3hoyo04qhdbmn1y355ir0nfyrqyhyhvo33zxwbz7s7qi05ebqev4ms83ijfgw13hqy8hdc4hrndf05w24th8satf6o1pyeojzn9x4ii1tyxj6c9cm15moflnzye7d4h1760rjztt\",\n    \"url\" : \"https://web.example.mocklab.io/743823\",\n    \"sid\" : \"FT2CC0ee022ADA16bF5ADcEc98a760c1b1\"\n  }, {\n    \"flow_sid\" : \"FW4ebd98CDDfa1BeCDA58DF79c520aB6a2\",\n    \"date_updated\" : \"2024-01-20T21:41:57.255Z\",\n    \"date_created\" : \"2022-09-07T13:45:32.255Z\",\n    \"context\" : { },\n    \"name\" : \"Coral Rohan\",\n    \"account_sid\" : \"AC8E0cf9eEBFDd3a8eCb89c100CdcAbb8D\",\n    \"links\" : { },\n    \"transitioned_to\" : \"ab4v6imqrv1nqpw2dkyim\",\n    \"execution_sid\" : \"FNc0dC42CB8f81c8Cf62142ABe300B7dBf\",\n    \"transitioned_from\" : \"eoye3w7qaew6qejcsy6yw60ewwlf4ilrfxd39f38y9a2wnn2lkjyd8h6b9iriis3ed801fu9qgozcy6loohs18l38ceadh8q5irfawurxcu4jj0tsntr5mu2g2o3lgws37hyuu085uxy99ka9zqbgf\",\n    \"url\" : \"https://web.example.mocklab.io/400809\",\n    \"sid\" : \"FTDdB06F0dB2E0Fedb33Dc9fbe8db98e6c\"\n  }, {\n    \"flow_sid\" : \"FW47eD2385cBb6E0207324dACc0d6a3aF4\",\n    \"date_updated\" : \"2022-05-01T08:47:35.255Z\",\n    \"date_created\" : \"2024-01-10T15:07:30.255Z\",\n    \"context\" : { },\n    \"name\" : \"Lou Buckridge\",\n    \"account_sid\" : \"ACFdCd32D40026A12Df70F2DC1aaaaF8ED\",\n    \"links\" : { },\n    \"transitioned_to\" : \"0b2e8wbl2cv6jb3ug72eob0g8v5se1ob89y13kfj8sg8i1a9mne01vu2s0p2mnrun0o8gc8i7bjv4zyinwa564e3zj1vnvu5598kuw0imn1bivoc8rmpz7kjkp6kayksr2t5vfh7une52r75fvyn8cwabs009soso6w1pudhmshhtrz0nkxolnvg\",\n    \"execution_sid\" : \"FN5104fC480aCC4AE2BD8a7A5F120cd1Eb\",\n    \"transitioned_from\" : \"1pwq58hi18seshyan6h3rix64fdak2fv37s7t6v26zqlbqmfyoj5k434atayl9w97yqkw8f4r1yuepdot2ap93qje0uozjipmnmg9roky1s3tc74bfj2jdkyq2bhzhguehyrdlkq974lzs73yzgxik29cqosg58kpcsnf7tffg\",\n    \"url\" : \"https://web.example.mocklab.io/018855\",\n    \"sid\" : \"FT9d2e11DA75bBCA8B5E2cBBFafcBDbc02\"\n  }, {\n    \"flow_sid\" : \"FWa8Ebfdd5db64602ecE7617C41dbB94cA\",\n    \"date_updated\" : \"2023-04-21T07:44:14.256Z\",\n    \"date_created\" : \"2023-09-02T04:21:46.256Z\",\n    \"context\" : { },\n    \"name\" : \"Sherry Tromp\",\n    \"account_sid\" : \"ACEEDd7c7241e5BbbeF007c9BfEff695F5\",\n    \"links\" : { },\n    \"transitioned_to\" : \"zcn0t7egkhxjnt4y5s3m0arruem5qswwtdnnzbjhoanlvuwlaq7ble3biul7msokl1dzwjriwe8d\",\n    \"execution_sid\" : \"FNf1b71E43E97bddad45eFaD45182ddbC1\",\n    \"transitioned_from\" : \"w5e6y19gzjzb7ds4fe47cbhepc533a1r1bbi8ia35o7cr8q6w47dz0rn8pwk7uce86eypgpjjgemhrega5i56j5d51v\",\n    \"url\" : \"https://web.example.mocklab.io/419900\",\n    \"sid\" : \"FTFcB6AeAA19fFe3425947C5CBaaFe0f92\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c01d9122-1d50-42b6-9be6-3a87fbc6a6c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.256482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListExecutionStep",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "steps" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v1.flow.execution.execution_step"
                },
                "type" : "array"
              }
            },
            "title" : "ListExecutionStepResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "56304edb-8ea3-4531-8123-a13565cab9f9",
    "name" : "Retrieve the most recent context for an Execution.",
    "request" : {
      "urlPath" : "/v1/Flows/FW96492211EbDc83a0Dec2f8159FA1c3Ea/Executions/FN2DdEaB50B823994F4F60Dc5c0f19bB2F/Context",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWfB0fDc7f3BA6b5b46347C6Cd06299b57\",\n  \"context\" : { },\n  \"account_sid\" : \"AC79df0cBefD4fD6FDEf18368b9F0Fc79A\",\n  \"execution_sid\" : \"FND04bf3eE33cb1EA0B4EBD79974D5D9C2\",\n  \"url\" : \"https://web.example.mocklab.io/460861\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56304edb-8ea3-4531-8123-a13565cab9f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.254802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecutionContext",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionContext resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "execution_sid" : {
                "description" : "The SID of the context's Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "a3e81339-87c9-47bb-9776-ff396128a22a",
    "name" : "Triggers a new Execution for the Flow",
    "request" : {
      "urlPath" : "/v1/Flows/FW1DdfeF2FC5cee7aCBfe1EfcDeaAEDef4/Executions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"flow_sid\" : \"FW3c9E4b7B03deeE4DEFA51ddbfC4D9aEc\",\n  \"date_updated\" : \"2023-10-13T21:14:54.254Z\",\n  \"contact_channel_address\" : \"iishgvxnlbafnzjk2d208gm31ofkwy85u53xpvkdembjqcdnrnalnk94dffhbadnwi5bcjg6mqw2at9qgiuepp72q\",\n  \"date_created\" : \"2023-01-15T03:38:04.254Z\",\n  \"context\" : { },\n  \"account_sid\" : \"ACC4d5EFDD1971E1aaDBABCDEed8FaA946\",\n  \"contact_sid\" : \"FC0BcDbdC438FDf1bF55a3Ae7bd3CE7417\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/083934\",\n  \"sid\" : \"FN0Ab97D6Cef60f9B64CBc630Bfaa6e3c4\",\n  \"status\" : \"ended\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3e81339-87c9-47bb-9776-ff396128a22a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.254593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateExecution",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "contact_sid" : {
                "description" : "The SID of the Contact.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/execution_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c8e18a45-fc5e-478f-8353-fb6fd0ae2100",
    "name" : "Retrieve a list of all Executions for the Flow.",
    "request" : {
      "urlPath" : "/v1/Flows/FWe9ECFea1AedA5ACb728BCE8F30Cfa3b6/Executions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"executions\" : [ {\n    \"flow_sid\" : \"FWCD8d77D1DB06769537fCBD44c6bD8383\",\n    \"date_updated\" : \"2023-06-30T20:08:17.253Z\",\n    \"contact_channel_address\" : \"ledyeqznlnbrxokt2g9nodqbdukwvlqzkueiupk2kr99yns7hma0shpfidpvq9zjgcydj66g8lj21k0tf0mii4d00j93lyxhmbhjn0bxrxpng9y3p97opjoqi\",\n    \"date_created\" : \"2024-03-20T00:59:03.253Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACa7c115ef5D18B3A365dAe29e9f8EB6FE\",\n    \"contact_sid\" : \"FC3Af9c3A20F586E8d1ae341acCbfCFBc7\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/180706\",\n    \"sid\" : \"FNcCBd1cE7E692F2bBfC06dda5FECd93c0\",\n    \"status\" : \"active\"\n  }, {\n    \"flow_sid\" : \"FW7AD6D3A9eEbD3888b8C26dfB888D4f5C\",\n    \"date_updated\" : \"2024-02-13T15:08:13.253Z\",\n    \"contact_channel_address\" : \"yt20ncfmwcghx7z16rh42xktkcmhmxay9mdwrv3pkpn1fut54b7podtydvrr11b4qy0skwdky0vpepv7x7wcsdu8ngcfb73al\",\n    \"date_created\" : \"2023-03-24T06:01:01.253Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACEFD7097F88f2A5304b027C56d1d2A3bB\",\n    \"contact_sid\" : \"FCD8Ec342Eec857bbf6FC6A4aCeAFC480a\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/321131\",\n    \"sid\" : \"FNffb8839f1bcFbE6523F541D4Ba842b1F\",\n    \"status\" : \"active\"\n  }, {\n    \"flow_sid\" : \"FW2Cca8Ff55c0a52C88179246aD70FdF3a\",\n    \"date_updated\" : \"2023-04-07T06:45:51.253Z\",\n    \"contact_channel_address\" : \"taq5i3lro\",\n    \"date_created\" : \"2022-05-10T23:39:32.253Z\",\n    \"context\" : { },\n    \"account_sid\" : \"AC4B61dD8abA361FEA5Accb56C14d24B4b\",\n    \"contact_sid\" : \"FCEaee4c98CFf2eBD03123ED3adFE33C90\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/195102\",\n    \"sid\" : \"FN8842BADaDA4d6B8bBECEa94f08514D9A\",\n    \"status\" : \"ended\"\n  }, {\n    \"flow_sid\" : \"FWE38569d5A45B706CEbAdAB5cf851ACdE\",\n    \"date_updated\" : \"2023-06-04T02:27:03.253Z\",\n    \"contact_channel_address\" : \"k321zkn9navg0lfgfslg2b4fgvkgekc1j56zsiac\",\n    \"date_created\" : \"2023-10-27T23:12:50.253Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACFF58CD326f0AAF6c1e3fBF532AEE4DeB\",\n    \"contact_sid\" : \"FCB2eDBa1B1EeF5A52eD7a125CD7ba5D0E\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/225650\",\n    \"sid\" : \"FNef155DdAfDDAaDEcC60C7C70FdDADBc0\",\n    \"status\" : \"ended\"\n  }, {\n    \"flow_sid\" : \"FWD3eF0ED8F57bd13bABc87d87D9ab7c2C\",\n    \"date_updated\" : \"2022-04-22T12:33:32.253Z\",\n    \"contact_channel_address\" : \"akpwzm1rimaanul3f2d\",\n    \"date_created\" : \"2023-03-13T02:12:18.253Z\",\n    \"context\" : { },\n    \"account_sid\" : \"AC0Ed8c56eAAdB8b1a5FbAbEF6dD7ED3c0\",\n    \"contact_sid\" : \"FCeBbD07B844D9ECa7BFed10fEA4ceD4FD\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/350261\",\n    \"sid\" : \"FN97852BBF9213a511171bFAcfBFd14F74\",\n    \"status\" : \"active\"\n  }, {\n    \"flow_sid\" : \"FWA99A98ccDEA5D58097f2a7aaB967D143\",\n    \"date_updated\" : \"2022-10-08T08:59:24.253Z\",\n    \"contact_channel_address\" : \"fmm5j1ekx3rldumwxdp26zvafhz14g8qsmqbxbnuxos1732fdyicl7pj2l2anbmzjx5e1bm78xlm8gb27lkcz4wlthif6q153wy1i9t3hzysj8v4d1yi8lr3kjo3rj708fujup31guevinva7rcu2tcekv\",\n    \"date_created\" : \"2022-07-11T11:12:25.253Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACee30A7A2AA1FfFabc4cb0D8f3C3f28d6\",\n    \"contact_sid\" : \"FC4ab6100C5eddF584bBbeD69Fc22Ccd04\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/825077\",\n    \"sid\" : \"FN3eB43ffceD4ca6cC5BBee17a55fB5539\",\n    \"status\" : \"active\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/274293\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/206632\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/538902\",\n    \"page\" : 2358199653615822471,\n    \"key\" : \"g36fh6f46rk4knh2k61mgdv28gw27mcbpdfl3qot9iee7z0kai7fztdmf2xfyeys6uv1nv5alh0gye3yjrh4xdfw1i4rm54kn84lp3zqiqkic0t8x8jb8yn3m2ns7wankb0raq2pcmbstl0r5c6fgf1s\",\n    \"url\" : \"https://web.example.mocklab.io/628151\",\n    \"page_size\" : 8581466851393294598\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8e18a45-fc5e-478f-8353-fb6fd0ae2100",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.254307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListExecution",
          "schema" : {
            "properties" : {
              "executions" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v1.flow.execution"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListExecutionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "36a3fb37-60b7-435c-a916-6740c934718b",
    "name" : "Retrieve an Engagement",
    "request" : {
      "urlPath" : "/v1/Flows/FW9eEc7bd08C890bc049a58cB2eE8d9243/Engagements/FNFE1DAAfcc6Cb6EB7CbBfF580C56939eE",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWF4E9FEdDeAF9B21dEfc5DF8F6aEC3d80\",\n  \"date_updated\" : \"2023-10-13T21:08:35.252Z\",\n  \"contact_channel_address\" : \"8e1t0f9fv4ca313ex1tjdkv081igt1o7xnog0j2hh1e52fgyycpy4c2fltk050fob8bagd\",\n  \"date_created\" : \"2022-08-02T09:06:38.252Z\",\n  \"context\" : { },\n  \"account_sid\" : \"ACfb098Fe3f5Ed788f3f5Abe3c7eAf7a49\",\n  \"contact_sid\" : \"FC67B7ce6afdA12d3C7b83B22AcCBe1276\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/464384\",\n  \"sid\" : \"FN84ee8b82Fe1A19B9ccF4599cDA8CF3E0\",\n  \"status\" : \"ended\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36a3fb37-60b7-435c-a916-6740c934718b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.25297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEngagement",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Engagement resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered this Engagement. Phone numbers are in E.164 format (+16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "contact_sid" : {
                "description" : "The SID of the Contact.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the execution flow. As your flow executes, we save the state in a flow context. Your widgets can access the data in the flow context as variables, either in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the Engagement was created in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the Engagement was updated in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of the Engagement's nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Engagement resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/engagement_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "09dc405b-1723-49ca-82c3-fb6ce8737bc1",
    "name" : "Delete this Engagement and all Steps relating to it. - 204",
    "request" : {
      "urlPath" : "/v1/Flows/FWF52Da8Fa2847d3C4168f13e43879d76A/Engagements/FN10aF35ACa57FBF3ef2a714E188Ae15B2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "09dc405b-1723-49ca-82c3-fb6ce8737bc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.252653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteEngagement"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "76e49abb-0d56-4873-853d-9710f37129f9",
    "name" : "Retrieve the context for an Engagement Step.",
    "request" : {
      "urlPath" : "/v1/Flows/FWDddAbe2175fF1C0c15f911f1CCeff442/Engagements/FNdB511aBb6acbA651Fb17D7E144729E5b/Steps/FTeDc90F6c7eEDE1bD4fA5f0F878A5Bf9f/Context",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FW21846DA206Ce8d6a397937C7B7DBAD0C\",\n  \"step_sid\" : \"FTbe081eFD78eBbF7807feE1A3EBb4bA98\",\n  \"context\" : { },\n  \"account_sid\" : \"ACc6cDB15411E139461cCF9cEcAeDA5Bf7\",\n  \"engagement_sid\" : \"FNaA4fB664bE808E1EA96ecfff48e93358\",\n  \"url\" : \"https://web.example.mocklab.io/312461\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76e49abb-0d56-4873-853d-9710f37129f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.252588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchStepContext",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the StepContext resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "engagement_sid" : {
                "description" : "The SID of the Engagement.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "step_sid" : {
                "description" : "The SID of the Step the context is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FT[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4a52eb77-7ddf-4991-b62d-3e87c471c877",
    "name" : "Retrieve a Step.",
    "request" : {
      "urlPath" : "/v1/Flows/FWdbaAF1DC3DD02323cdc3b9E8B7Cf91E4/Engagements/FN088ff6cDc7AE95c28Ab32A95fcCeDBbf/Steps/FT11CFFdA9FffF00c3cbAE2fA321eeFbcc",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWCBf4e93CCfC1Eda04Cd6f8a2AE7f0240\",\n  \"date_updated\" : \"2022-08-31T01:48:14.251Z\",\n  \"date_created\" : \"2022-12-14T23:53:27.252Z\",\n  \"context\" : { },\n  \"name\" : \"Abe Stiedemann\",\n  \"account_sid\" : \"ACd2DdEBdfD2faCE464AABB988A31EcE8B\",\n  \"links\" : { },\n  \"engagement_sid\" : \"FNaA2C01b2FeAcB08BE3da73Ef421B30B0\",\n  \"transitioned_to\" : \"fd164lkxinypxw\",\n  \"transitioned_from\" : \"0drvizgt2bkszl3hutras576e201lnxf81tbtd0iu0qi2s28jxysx\",\n  \"url\" : \"https://web.example.mocklab.io/101277\",\n  \"sid\" : \"FTAa4F54FCE91fceC0233A7fdC6b7ff7FF\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a52eb77-7ddf-4991-b62d-3e87c471c877",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.252322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchStep",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Step resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "engagement_sid" : {
                "description" : "The SID of the Engagement.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "name" : {
                "description" : "The event that caused the Flow to transition to the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Step resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FT[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "transitioned_from" : {
                "description" : "The Widget that preceded the Widget for the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "transitioned_to" : {
                "description" : "The Widget that will follow the Widget for the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "4fe503c0-9428-4f3d-a523-76a669562da9",
    "name" : "Retrieve a list of all Steps for an Engagement.",
    "request" : {
      "urlPath" : "/v1/Flows/FWD7dc0B1ef3CaFfcBcA29EFddB80B1D10/Engagements/FNEc80518D7F56CAD2ec0DA4e5fECE4eaa/Steps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/374119\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/514493\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/980891\",\n    \"page\" : 2539471542749359426,\n    \"key\" : \"d2wo2i72nv206tk335cko9vssl19ndzf9quj8zhy6qdxcb9ho9y6xb5ed31ztj8tlg1o68ca13huf6pobd7zh\",\n    \"url\" : \"https://web.example.mocklab.io/827002\",\n    \"page_size\" : 8373007051512857502\n  },\n  \"steps\" : [ {\n    \"flow_sid\" : \"FW7FE39E1dc77FaD4D36AcCEDc6CEAa0cC\",\n    \"date_updated\" : \"2024-03-24T20:40:49.251Z\",\n    \"date_created\" : \"2023-11-09T17:49:49.251Z\",\n    \"context\" : { },\n    \"name\" : \"Lashay Gorczany\",\n    \"account_sid\" : \"AC81EA429343f9fcDD83b0f80efbA78C1C\",\n    \"links\" : { },\n    \"engagement_sid\" : \"FN0ca42E6FA2bb6d99DfC2aaF23C846beD\",\n    \"transitioned_to\" : \"1pkd5g5ej8ihs20nnulqrxv1tdi82aw7ny3l9txzbbjbfecdxgepnev368l3yqwvdmuomk6mezqt5umd1g0dv0to3a0cjns8581iiebmu8tmtexwdb9trsj88g2fovsxy9ga2zd4xfmf4au84ggam8j7x97nxcvznnkpdfsmhgxcpqhz9kt8o0q2y10t7vfc2is\",\n    \"transitioned_from\" : \"u9526eier8hdi9\",\n    \"url\" : \"https://web.example.mocklab.io/973727\",\n    \"sid\" : \"FT4E532C55cB5896eD3283b762B0cED0C7\"\n  }, {\n    \"flow_sid\" : \"FW0fd6ba88d5e46b51caC4eaDD62c5f7e4\",\n    \"date_updated\" : \"2022-09-08T20:37:56.251Z\",\n    \"date_created\" : \"2022-07-18T00:07:53.251Z\",\n    \"context\" : { },\n    \"name\" : \"Loren Willms Jr.\",\n    \"account_sid\" : \"AC6d05cE2feDdCa8686C9D1Ac3bEc888FF\",\n    \"links\" : { },\n    \"engagement_sid\" : \"FND130ECe77CaedB7A0FeB68eC2dbcDf38\",\n    \"transitioned_to\" : \"rfpjlyumovnmwvrcqp2712s4ijbc\",\n    \"transitioned_from\" : \"0z5wiwi87k2j0pqfht0x5p8ozr3jprvl5ms3va9zpi88vi5qgttt1nw3di4ud9h0vu7tqdzw163mq6jst7w7t1hl7gxonbi0tsnk9ec528b5kgezwou0v63u0b\",\n    \"url\" : \"https://web.example.mocklab.io/341800\",\n    \"sid\" : \"FTDc9DC05ab6D9d785BfB115d2E591b0D3\"\n  }, {\n    \"flow_sid\" : \"FWA0AceAf26846FB5F1ecAA33FCDDb0983\",\n    \"date_updated\" : \"2023-01-20T16:57:20.251Z\",\n    \"date_created\" : \"2024-02-24T07:13:40.251Z\",\n    \"context\" : { },\n    \"name\" : \"Debroah Howe IV\",\n    \"account_sid\" : \"AC10F3191f4bFD8aF228Cc2EeecCdFecdb\",\n    \"links\" : { },\n    \"engagement_sid\" : \"FN2EeeedA22762fde2fEb7D69C9DdA536F\",\n    \"transitioned_to\" : \"472rhg62zhzfvgf2tko7szlhzl0wnk5u25v3uyvmz\",\n    \"transitioned_from\" : \"mhnkzxyc7zermx4ddtf9mf58fr2y4166uc9d1lmummqdu9iyirblvnvho0xak1fwdmz5q8orl6b42quedc2o3dda7sz1e2kch1vqd5f6tvz8wupfmagcd3edscdz8q2ugpgkvpn5i59ejl7r4j9flxrsdq3d1b09v82u6fhaflslc8fzheg5nhj4o45bmhrbarh\",\n    \"url\" : \"https://web.example.mocklab.io/817223\",\n    \"sid\" : \"FTc851e3fa17DABB17872d4e1dfdEeBE4c\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fe503c0-9428-4f3d-a523-76a669562da9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.251964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListStep",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "steps" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v1.flow.engagement.step"
                },
                "type" : "array"
              }
            },
            "title" : "ListStepResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "762ecb6c-aceb-4784-97a1-a8d5c74f1856",
    "name" : "Retrieve the most recent context for an Engagement.",
    "request" : {
      "urlPath" : "/v1/Flows/FW9F53Ed5eBBFaFEff80e2468bE1B3dc14/Engagements/FN1d732c2FD322a26c580E7eD241F4E4bD/Context",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWa3a63a9BDDcEd9dCF240407Eccab3bDd\",\n  \"context\" : { },\n  \"account_sid\" : \"ACd57d9F1d08Aec9bE92E74CDFABeb67dA\",\n  \"engagement_sid\" : \"FN3cBDfa68EbE3079DCfefa4BB12E7C95a\",\n  \"url\" : \"https://web.example.mocklab.io/850658\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "762ecb6c-aceb-4784-97a1-a8d5c74f1856",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.250904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEngagementContext",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "As your flow executes, we save the state in what's called the Flow Context. Any data in the flow context can be accessed by your widgets as variables, either in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "engagement_sid" : {
                "description" : "The SID of the Engagement.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "1a910323-cbba-4f16-9e2d-b3cf23ac1a49",
    "name" : "Triggers a new Engagement for the Flow",
    "request" : {
      "urlPath" : "/v1/Flows/FW8B5e4dD6dc75C65bBaB9B4B9575fb954/Engagements",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"flow_sid\" : \"FWA9dCFc6ff2386d6ffCf25FCEaFdbF302\",\n  \"date_updated\" : \"2022-10-14T04:34:02.25Z\",\n  \"contact_channel_address\" : \"swd7mrfpsf9tr3xgl0sqt7mdrh3qkgy\",\n  \"date_created\" : \"2023-11-02T14:04:31.25Z\",\n  \"context\" : { },\n  \"account_sid\" : \"AC39d116FF6C5d9a2bbc4fA1545C9ec8E8\",\n  \"contact_sid\" : \"FCEEBeaAf0BDa4f3035582197A15616D0e\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/820712\",\n  \"sid\" : \"FNA9469E22b3133E21ECa57eC53B2cb9Bc\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a910323-cbba-4f16-9e2d-b3cf23ac1a49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.250677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateEngagement",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Engagement resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered this Engagement. Phone numbers are in E.164 format (+16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "contact_sid" : {
                "description" : "The SID of the Contact.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the execution flow. As your flow executes, we save the state in a flow context. Your widgets can access the data in the flow context as variables, either in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the Engagement was created in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the Engagement was updated in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of the Engagement's nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Engagement resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/engagement_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "8d6bde51-fc10-426f-8519-546a3e74bffd",
    "name" : "Retrieve a list of all Engagements for the Flow.",
    "request" : {
      "urlPath" : "/v1/Flows/FWE38D19e7CDf5A6A4BFF1d920C9c0bAB2/Engagements",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/876026\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/946180\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/169335\",\n    \"page\" : 5471657039057296842,\n    \"key\" : \"vwnfj12djupbf63695t9btgiqbw0sv4g2trwvuk0xfawa5y3gmlfl7r9dbu0ixxq6j8blzpvmylfn7hg5ipo3vedkrwkcqvjres0s78uogklzvz\",\n    \"url\" : \"https://web.example.mocklab.io/774933\",\n    \"page_size\" : 6977249938678889932\n  },\n  \"engagements\" : [ {\n    \"flow_sid\" : \"FW0dbe5443dd3a3E4BAAd71b11AF54a1Ff\",\n    \"date_updated\" : \"2022-09-29T20:47:13.249Z\",\n    \"contact_channel_address\" : \"783e9utljkzlui1743ba8ek95yk2uyf4evxx8k4zjdth59se6qvts6ykx\",\n    \"date_created\" : \"2022-11-15T18:51:29.249Z\",\n    \"context\" : { },\n    \"account_sid\" : \"AC3299F8ab92EAc8bD86b8edabdFc153b4\",\n    \"contact_sid\" : \"FC53e4F8Ddb1b5D42819FBd14BCE6d3E18\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/444978\",\n    \"sid\" : \"FN17305Fe8eAB41Ca7E33DcbFd2cffd575\",\n    \"status\" : \"ended\"\n  }, {\n    \"flow_sid\" : \"FWFc4B227ffF877177DabAa5Fb34AC9dEF\",\n    \"date_updated\" : \"2022-08-20T09:01:09.249Z\",\n    \"contact_channel_address\" : \"1qa7jht3xyxfdqok236dv3j4fluv9d5436ljbwlajh3cm5nze1pzlsqjhpii56us3bpsqs0inonqx\",\n    \"date_created\" : \"2022-06-23T07:33:04.249Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACaf763bEeF0cb8A67DF73De0A161A5f92\",\n    \"contact_sid\" : \"FCeC8211f2956A5a4b0B58Ee4BA6C8367A\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/451264\",\n    \"sid\" : \"FN799777E27Ac93e1F6EEdEB05AB66cBcF\",\n    \"status\" : \"active\"\n  }, {\n    \"flow_sid\" : \"FWa4dBC210f9Bb7141C1DC8bfa81E4Dfc8\",\n    \"date_updated\" : \"2023-03-01T21:38:46.249Z\",\n    \"contact_channel_address\" : \"al7rlaklqqt376tpnhg4ykoarjijyyxmdt6ulus2mxcv9jhl3lt3m7gd9dbmw0t76a6g3xpw6bc71tjwv8qh8c0ljvksc63ii1od8pchk0bcm7orf3qsar3gaq5p2u5lztrb08dkuek1a6sor\",\n    \"date_created\" : \"2023-01-13T02:56:28.249Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACccf31E0e645d5ebf0b956EEdAbA4e0bb\",\n    \"contact_sid\" : \"FCD2cadFfDD9C5a95C4e57FD0D2fA8bf8A\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/494014\",\n    \"sid\" : \"FN8b3A2B2f0Aaae46a94faBB0Caa77078b\",\n    \"status\" : \"ended\"\n  }, {\n    \"flow_sid\" : \"FWcffBa4b49af1c4bA7CEE13c9Dc1CfF8A\",\n    \"date_updated\" : \"2022-06-22T07:13:03.25Z\",\n    \"contact_channel_address\" : \"vhut9cisij6zuihyusurdupinf363d65rxbnnnusz9nc26k9baq83xcsx1kleux9iq3dpxtr74tv15vcc2w5p46hof8s7l687vrh1bddecgwodkr66jc8h52swafumnxidbt7odrovua0sp3008i\",\n    \"date_created\" : \"2024-01-06T12:04:46.25Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACeD7fe3B4AAE014ead3C296Ed183dC78E\",\n    \"contact_sid\" : \"FC95c8e648AfBC4dcA4e18708449d01E50\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/246218\",\n    \"sid\" : \"FNfBaa75BFbA6B1c17f3Fb9E6f840cDFb2\",\n    \"status\" : \"active\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d6bde51-fc10-426f-8519-546a3e74bffd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.25035Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListEngagement",
          "schema" : {
            "properties" : {
              "engagements" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v1.flow.engagement"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListEngagementResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "a046bd8d-0c61-4744-8235-e7587ff20f32",
    "name" : "Retrieve a list of all Flows.",
    "request" : {
      "urlPath" : "/v1/Flows",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flows\" : [ {\n    \"friendly_name\" : \"Nickolas Schmitt\",\n    \"date_updated\" : \"2024-01-29T09:48:44.248Z\",\n    \"date_created\" : \"2022-05-14T11:35:48.248Z\",\n    \"account_sid\" : \"AC3Cc7587dBa07b6dEb802Cf4C1fECff9d\",\n    \"links\" : { },\n    \"version\" : 5903900329049422080,\n    \"url\" : \"https://web.example.mocklab.io/754611\",\n    \"sid\" : \"FW63a3D6eFBDcc5EE7c487a8AA9c5603Eb\",\n    \"status\" : \"published\"\n  }, {\n    \"friendly_name\" : \"Andera Hodkiewicz\",\n    \"date_updated\" : \"2022-10-30T18:20:34.248Z\",\n    \"date_created\" : \"2023-12-03T23:59:50.248Z\",\n    \"account_sid\" : \"AC02cd3A10Abf9C71EFBCee3Cf73A4004F\",\n    \"links\" : { },\n    \"version\" : 695891648696590788,\n    \"url\" : \"https://web.example.mocklab.io/988166\",\n    \"sid\" : \"FW03aFd8eC02bb1C8fdf70Dcc8E8ebac33\",\n    \"status\" : \"published\"\n  }, {\n    \"friendly_name\" : \"Neal Cronin\",\n    \"date_updated\" : \"2024-01-10T10:50:12.248Z\",\n    \"date_created\" : \"2022-04-15T12:24:19.248Z\",\n    \"account_sid\" : \"ACCA21707E11F22Ec46Be6ceb5bFA83FBf\",\n    \"links\" : { },\n    \"version\" : 8966227498545897407,\n    \"url\" : \"https://web.example.mocklab.io/760735\",\n    \"sid\" : \"FWB8db0350aAAeB6Adfb87b3Cc5CEBe2e7\",\n    \"status\" : \"draft\"\n  }, {\n    \"friendly_name\" : \"Mrs. Emile Lakin\",\n    \"date_updated\" : \"2022-07-10T07:04:09.248Z\",\n    \"date_created\" : \"2023-08-24T10:45:14.248Z\",\n    \"account_sid\" : \"AC6b8Ea157A4EB3E9ff5bEEE3fae8a92A3\",\n    \"links\" : { },\n    \"version\" : 1733638639282584498,\n    \"url\" : \"https://web.example.mocklab.io/274515\",\n    \"sid\" : \"FWb3aCccbD5a5566262C84f7ddDdFEDfd2\",\n    \"status\" : \"draft\"\n  }, {\n    \"friendly_name\" : \"Ms. Genaro Cormier\",\n    \"date_updated\" : \"2023-11-25T02:12:11.248Z\",\n    \"date_created\" : \"2022-12-28T22:03:35.248Z\",\n    \"account_sid\" : \"AC0Aa7F24198ddFb22bfFe55614787EEDd\",\n    \"links\" : { },\n    \"version\" : 1277155087775184535,\n    \"url\" : \"https://web.example.mocklab.io/151392\",\n    \"sid\" : \"FW5BE8c58Ea45BeA0aDfeBaCA546CC28CB\",\n    \"status\" : \"published\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/915586\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/045863\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/084343\",\n    \"page\" : 928378528636496249,\n    \"key\" : \"ejhnx9fjjmm4eo6y9z7e325w2fcfr34qozm0qvd20xohgrhjx7ki37acb19vfd4wnnks59f3bgsdv74knvo\",\n    \"url\" : \"https://web.example.mocklab.io/557653\",\n    \"page_size\" : 8692199959481168789\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a046bd8d-0c61-4744-8235-e7587ff20f32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:22.249284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListFlow",
          "schema" : {
            "properties" : {
              "flows" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v1.flow"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListFlowResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  } ]
}