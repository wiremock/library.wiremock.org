{
  "mappings" : [ {
    "id" : "5db84dca-6df7-46ca-9de5-a1534cfd3dc2",
    "name" : "Updates or insert a given session.",
    "request" : {
      "urlPath" : "/tlf3/sessions/pnc9",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"activeTimeMillis\" : \"2023-02-09T06:38:35.928194Z\",\n  \"endTimeMillis\" : \"2023-02-19T06:22:35.928222Z\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/534807\",\n    \"name\" : \"Orval Will\",\n    \"packageName\" : \"Gregoria Legros\",\n    \"version\" : \"7in8zhjmve7rwxfupm7sub58d692ehv2923h5y0p0iolrw5swcrznmgv554eyb5p6b32p9jdtkuod25hb6jwmyvlrkk2amoxyj9txd3y1t3u1n4xsnsp5x6ze8vpnqzhk7u8joxlxxcd3zlqh86oqcvc08kdjindl1jgedod5f\"\n  },\n  \"startTimeMillis\" : \"2023-03-04T06:42:35.928409Z\",\n  \"name\" : \"Merle Bruen\",\n  \"description\" : \"Ea enim illum. Odit et voluptatem eum eaque. Provident ut soluta atque eos.\",\n  \"modifiedTimeMillis\" : \"2022-07-13T06:52:35.928501Z\",\n  \"id\" : \"s4j2\",\n  \"activityType\" : 1903738390\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5db84dca-6df7-46ca-9de5-a1534cfd3dc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.928851Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.update",
          "schema" : {
            "description" : "Sessions contain metadata, such as a user-friendly name and time interval information.",
            "properties" : {
              "activeTimeMillis" : {
                "description" : "Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value",
                "format" : "int64",
                "type" : "string"
              },
              "activityType" : {
                "description" : "The type of activity this session represents.",
                "format" : "int32",
                "type" : "integer"
              },
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "description" : {
                "description" : "A description for this session.",
                "type" : "string"
              },
              "endTimeMillis" : {
                "description" : "An end time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              },
              "id" : {
                "description" : "A client-generated identifier that is unique across all sessions owned by this particular user.",
                "type" : "string"
              },
              "modifiedTimeMillis" : {
                "description" : "A timestamp that indicates when the session was last modified.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "A human readable name of the session.",
                "type" : "string"
              },
              "startTimeMillis" : {
                "description" : "A start time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "8a5ea086-931b-4e7b-baa8-c45014098de4",
    "name" : "Deletes a session specified by the given session ID. - 200",
    "request" : {
      "urlPath" : "/94sr/sessions/dctn",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8a5ea086-931b-4e7b-baa8-c45014098de4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.928157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.delete"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "76ce2a4b-1c4e-4444-a63b-2cd88b0055a3",
    "name" : "Lists sessions previously created.",
    "request" : {
      "urlPath" : "/9fb6/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"trmcx8v36hdrifvk3u8rqm7x1hb704tjwc6uj76ml1b7wt8jy4xu76kcqcmayn8xygqz13h641yr6tqwrbt7izznkh9c5mvrqz\",\n  \"session\" : [ {\n    \"activeTimeMillis\" : \"2022-07-30T06:54:35.923811Z\",\n    \"endTimeMillis\" : \"2022-09-21T07:30:35.923843Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/355079\",\n      \"name\" : \"Manuel Rogahn\",\n      \"packageName\" : \"Shad Baumbach\",\n      \"version\" : \"u6dk640x7zeditw8fpu7qzuihuopk07md69hsufsi1wq7hn4dwm0c42esnq05zn8824eanply2ywcaby5ne1zenp95gd0vawag2tsby4q5b9boisq4f08lqcxedsvyj43yv4uji4rqcfamev1ws84z1n4voh\"\n    },\n    \"startTimeMillis\" : \"2022-05-28T09:08:35.924052Z\",\n    \"name\" : \"Marion Huels\",\n    \"description\" : \"Omnis repellendus distinctio. Dolores qui cumque facere aperiam itaque. Dolorem eos aut qui unde quam saepe velit.\",\n    \"modifiedTimeMillis\" : \"2023-03-06T06:13:35.924154Z\",\n    \"id\" : \"muq6\",\n    \"activityType\" : 1142226416\n  }, {\n    \"activeTimeMillis\" : \"2022-09-11T05:40:35.92427Z\",\n    \"endTimeMillis\" : \"2023-02-11T05:41:35.924298Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/816977\",\n      \"name\" : \"Miss Ruthe Bechtelar\",\n      \"packageName\" : \"Mrs. Zane Parker\",\n      \"version\" : \"ry8b86a7acubdvadvrbch6mu55iiep3sp5q3tevn16xj3mo3pvplcwbjcvd92xeyv842ecqq6q5gyd1ww2xwxr0t2484dott0fsis9ewvmkei08m93pa0zlsz93rsw9e9fp3y48p47ke4i643egqybdov0npqhm2r6inw7fsbe7jnweqg391m5oh1zemrxjz3y1tjg\"\n    },\n    \"startTimeMillis\" : \"2023-03-20T08:29:35.924503Z\",\n    \"name\" : \"Audrey Willms\",\n    \"description\" : \"At aut accusamus repellat debitis ab. Molestiae et est necessitatibus. Officia delectus ullam magnam. Repellendus ipsum nihil et voluptas maiores quia aut. Quaerat dignissimos ut est maxime vel eos la\",\n    \"modifiedTimeMillis\" : \"2022-12-10T08:44:35.924612Z\",\n    \"id\" : \"dg1x\",\n    \"activityType\" : 146933058\n  }, {\n    \"activeTimeMillis\" : \"2022-05-27T07:09:35.924719Z\",\n    \"endTimeMillis\" : \"2022-10-10T06:36:35.924747Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/853574\",\n      \"name\" : \"Hayden Spencer\",\n      \"packageName\" : \"Chanel Nikolaus\",\n      \"version\" : \"rqh8q8y8kl80cjh978g9lr1xqdwcdqtgp1901h1bqh6\"\n    },\n    \"startTimeMillis\" : \"2023-02-25T08:34:35.924943Z\",\n    \"name\" : \"Shaun Cassin I\",\n    \"description\" : \"Voluptatum est dolorem doloremque sit officia et. Necessitatibus similique voluptates non. Totam ipsa quo. Quis animi omnis libero consequatur nam iste dolore. At incidunt facilis natus molestiae eius\",\n    \"modifiedTimeMillis\" : \"2023-02-01T06:42:35.925054Z\",\n    \"id\" : \"3ya3\",\n    \"activityType\" : 337114807\n  }, {\n    \"activeTimeMillis\" : \"2022-06-14T07:11:35.925161Z\",\n    \"endTimeMillis\" : \"2023-01-04T06:26:35.92519Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/769843\",\n      \"name\" : \"Marion Waters\",\n      \"packageName\" : \"Janna McKenzie\",\n      \"version\" : \"rzc2vfx8w3qt6vx5colz3rq2gmxdcwa2ikzi7igvbagbhqjsfbj6o35xqixcsit4ftzgd8nrnz04msjmxr293370dsoc0ucuc7v5c8c99cs0azqifjcof9bt0ij6t02o350hsctnacmhlpyojc4\"\n    },\n    \"startTimeMillis\" : \"2022-10-30T07:02:35.925377Z\",\n    \"name\" : \"Ivory Williamson\",\n    \"description\" : \"In nesciunt cupiditate deleniti omnis itaque velit. Molestias dicta sit tenetur inventore doloremque. Ipsa aperiam voluptas consequatur molestiae. Qui sed sunt.\",\n    \"modifiedTimeMillis\" : \"2022-08-06T08:56:35.925479Z\",\n    \"id\" : \"p837\",\n    \"activityType\" : 121452842\n  }, {\n    \"activeTimeMillis\" : \"2023-02-22T06:34:35.925583Z\",\n    \"endTimeMillis\" : \"2022-07-13T07:04:35.92561Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/282326\",\n      \"name\" : \"Lavona Toy\",\n      \"packageName\" : \"Rogelio Bergnaum PhD\",\n      \"version\" : \"nwqj7k4kls3bm6ftvfsmug6tuwgrw40sq0ynyam0sb5tt5cgwcrxri17rwd2p6md5flm5133obammn1dayowucukndxuilvdwpjmeewec\"\n    },\n    \"startTimeMillis\" : \"2022-07-09T08:56:35.925803Z\",\n    \"name\" : \"Darron Yost\",\n    \"description\" : \"Officiis occaecati voluptas sed eum. Amet aspernatur corrupti et. Maiores exercitationem velit vitae deleniti molestiae.\",\n    \"modifiedTimeMillis\" : \"2022-04-26T05:58:35.9259Z\",\n    \"id\" : \"u0w0\",\n    \"activityType\" : 609253991\n  } ],\n  \"hasMoreData\" : false,\n  \"deletedSession\" : [ {\n    \"activeTimeMillis\" : \"2022-06-04T07:55:35.926022Z\",\n    \"endTimeMillis\" : \"2022-06-20T06:22:35.926049Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/204677\",\n      \"name\" : \"Shirlee Mraz III\",\n      \"packageName\" : \"Marketta Crona\",\n      \"version\" : \"i1jmrwoqs281ymix9lazgfgp972utr8w4yz8qvryjy2gw3vgznv6g74ty80vnmdb75fu09mq3yu3vgt0kuwvdy65bx2xf7c9ztd6e8oclvshxfvlgfz0\"\n    },\n    \"startTimeMillis\" : \"2022-05-25T06:23:35.926249Z\",\n    \"name\" : \"Ms. Tiesha O'Conner\",\n    \"description\" : \"Ut dolorem id assumenda temporibus ullam ex debitis. Voluptatibus quis hic sequi. Nulla delectus adipisci. Nihil provident voluptatem quod dicta qui possimus.\",\n    \"modifiedTimeMillis\" : \"2023-02-08T06:33:35.926357Z\",\n    \"id\" : \"b6n3\",\n    \"activityType\" : 1890276881\n  }, {\n    \"activeTimeMillis\" : \"2022-10-27T06:15:35.92646Z\",\n    \"endTimeMillis\" : \"2022-11-09T06:21:35.92649Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/045417\",\n      \"name\" : \"Jone Roob\",\n      \"packageName\" : \"Ms. Victor Kirlin\",\n      \"version\" : \"6psdf1vd9httyjzw2na96dmk9m63fntnnezxot70lh51y7lj77m5vjeppn3qfsrmpyxya37gex5cvns7yto8myw4hnfq278oi97dkrb3919dmazvrz3rsgnl7u1e92ndsgw9it3z4\"\n    },\n    \"startTimeMillis\" : \"2023-02-19T05:51:35.926681Z\",\n    \"name\" : \"Dr. Micheal Goldner\",\n    \"description\" : \"Voluptate et consectetur dolor rerum aut assumenda cum. Cumque eos fugiat sequi ipsam esse corrupti ipsa. Commodi vitae quo ut enim. Eos voluptas quos est blanditiis distinctio corporis nesciunt.\",\n    \"modifiedTimeMillis\" : \"2023-02-22T07:04:35.926785Z\",\n    \"id\" : \"o3e0\",\n    \"activityType\" : 918294121\n  }, {\n    \"activeTimeMillis\" : \"2023-03-19T06:35:35.926891Z\",\n    \"endTimeMillis\" : \"2022-07-25T08:25:35.92692Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/111174\",\n      \"name\" : \"Corazon Rodriguez\",\n      \"packageName\" : \"Valeria Feest IV\",\n      \"version\" : \"1eo1oggu8vetnp5cz9etmmweihzhikksxxjtdax2dfyg8m69prog6dkh5guif1rmdv8di0w1z9jwyfta8r5q51ase20qvfn2dqapc8c258bptkfm964\"\n    },\n    \"startTimeMillis\" : \"2023-02-05T06:05:35.927107Z\",\n    \"name\" : \"Alleen Halvorson III\",\n    \"description\" : \"Non dolores porro animi. Deleniti qui nam sapiente eum. Tenetur ut unde rerum. Cum maxime qui quia eius magnam et et.\",\n    \"modifiedTimeMillis\" : \"2023-01-31T08:24:35.927209Z\",\n    \"id\" : \"j3yk\",\n    \"activityType\" : 1876579821\n  }, {\n    \"activeTimeMillis\" : \"2023-02-26T06:29:35.927317Z\",\n    \"endTimeMillis\" : \"2022-10-03T08:59:35.927347Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/920084\",\n      \"name\" : \"Dr. Maxwell Wintheiser\",\n      \"packageName\" : \"Tyler Bode\",\n      \"version\" : \"vczu7hqlmtjuwho1bs126sqn6qjhznee62jlcs8d2r5f9rec6vss2dmero0geiz51mhafssno2u9jbvpqaua8lfwbnmthdq1dt4nip76j3d67uzp2i0q54wlexkjfg5atj5iurvvo5vjl27rf6huhasuhr78m712t3r8bqp91y44pxlnznhn\"\n    },\n    \"startTimeMillis\" : \"2022-11-02T08:20:35.927548Z\",\n    \"name\" : \"Ross Feeney\",\n    \"description\" : \"Rem repellat sed. Minima iusto in magnam expedita. Porro quisquam dignissimos atque eum. Harum natus adipisci optio harum eaque consequatur et. Nulla optio aperiam quo eum.\",\n    \"modifiedTimeMillis\" : \"2022-11-23T06:50:35.927651Z\",\n    \"id\" : \"4l0o\",\n    \"activityType\" : 1756966364\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76ce2a4b-1c4e-4444-a63b-2cd88b0055a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.927968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.list",
          "schema" : {
            "properties" : {
              "deletedSession" : {
                "description" : "If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              },
              "hasMoreData" : {
                "description" : "Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.",
                "type" : "boolean"
              },
              "nextPageToken" : {
                "description" : "The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.",
                "type" : "string"
              },
              "session" : {
                "description" : "Sessions with an end time that is between startTime and endTime of the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "dd5dfff8-7b71-4332-b5e9-51fb9acb60b0",
    "name" : "Aggregates data of a certain type or stream into buckets divided by a given type...",
    "request" : {
      "urlPath" : "/xbzx/dataset:aggregate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bucket\" : [ {\n    \"endTimeMillis\" : \"2022-09-06T08:30:35.918895Z\",\n    \"activity\" : 613054117,\n    \"startTimeMillis\" : \"2022-12-19T08:25:35.918935Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-11-11T08:45:35.918975Z\",\n      \"endTimeMillis\" : \"2023-03-11T08:51:35.919006Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/935783\",\n        \"name\" : \"Horace MacGyver\",\n        \"packageName\" : \"Myron Green\",\n        \"version\" : \"5uhqi10u4d\"\n      },\n      \"startTimeMillis\" : \"2022-07-24T08:42:35.919236Z\",\n      \"name\" : \"Dallas Beatty\",\n      \"description\" : \"Tenetur qui consequatur doloremque aliquid odio qui numquam. Qui vel rem odio dolorum. Voluptatibus eum qui nemo aut minima. Atque nostrum voluptatum et eum sint reprehenderit quos.\",\n      \"modifiedTimeMillis\" : \"2022-12-16T09:06:35.919355Z\",\n      \"id\" : \"z020\",\n      \"activityType\" : 1251540344\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"cqmf\",\n      \"maxEndTimeNs\" : \"2022-10-03T07:34:35.919568Z\",\n      \"minStartTimeNs\" : \"2022-10-02T08:04:35.919598Z\",\n      \"nextPageToken\" : \"k8ohfxn6j86cc5dhgiuotqa19vg4kmo79fayql4ga0ecwyl3id82874gvg7d75smh2hspdl24rgb2oullnp7hsxcr5y7dw7jwz9lebqd7jld390q9re0ro3h6udalfkhugu4xqyv254uug6m92tebb2mam0ykvsxumdp9aew0pp2rdxaz08b0h7b0isvd7b\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"ny94\",\n      \"maxEndTimeNs\" : \"2023-02-25T08:39:35.919732Z\",\n      \"minStartTimeNs\" : \"2022-07-06T06:27:35.919761Z\",\n      \"nextPageToken\" : \"3a1lclqqxoll49egzikclcyi7as7f8967kpcgkwvbq6ghiicsylq900\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"7yjw\",\n      \"maxEndTimeNs\" : \"2022-07-12T08:31:35.919882Z\",\n      \"minStartTimeNs\" : \"2022-11-09T08:49:35.919912Z\",\n      \"nextPageToken\" : \"wglts5zgk5z6c1x7lq48shy7dupbj0j6pptnzmswfetd78zx3ry971rub0f6k2mk1xixuylflewsimg4hlnpsqwza493s97un24bj5wvia9cw4ugs0itpnjinx2fx6jarie08qvuzl7p\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"xa5x\",\n      \"maxEndTimeNs\" : \"2022-05-02T05:58:35.920038Z\",\n      \"minStartTimeNs\" : \"2022-11-29T09:11:35.920069Z\",\n      \"nextPageToken\" : \"eomfx3j6izz10jznost2j206bf3ae6xe6qd99of3tnn0tf6xys1nwmx21upfcoxa4hvf8jq47zfg5vqbsqh3t1erjooanqw37nwpwkfubor9nd9st9jgmp5kqhpl6ywu3sriz7k3l2me4j8h2m07b5het57ri\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"a9l2\",\n      \"maxEndTimeNs\" : \"2022-08-10T07:54:35.920195Z\",\n      \"minStartTimeNs\" : \"2023-01-10T06:40:35.920226Z\",\n      \"nextPageToken\" : \"muvqprs14402qhnugveps5fcwzsuavejctgafw481j1y7rvn3u5oupaygnamqd8o1m59awnq869e6pvh\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"47az\",\n      \"maxEndTimeNs\" : \"2022-05-04T09:01:35.92035Z\",\n      \"minStartTimeNs\" : \"2022-11-05T08:51:35.920381Z\",\n      \"nextPageToken\" : \"l8d3ca23xcqpduuvdzruq4urdhctlyr884hjjar66vlyd2pdl2ts2530tjghvs4tumqche4t7eemvk\",\n      \"point\" : [ { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-11-24T05:54:35.920442Z\",\n    \"activity\" : 1041650598,\n    \"startTimeMillis\" : \"2022-07-22T05:46:35.920476Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-05-31T07:43:35.920516Z\",\n      \"endTimeMillis\" : \"2022-04-17T06:35:35.920546Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/364589\",\n        \"name\" : \"Cristopher Quigley\",\n        \"packageName\" : \"Miss Billy Kiehn\",\n        \"version\" : \"22j29qpdmoiy7ruzjyew04f3mzzv86ybxvnfawdvr95tvoxtwaxkk9m9foxtemj3urovqpwntje\"\n      },\n      \"startTimeMillis\" : \"2022-04-13T09:02:35.920754Z\",\n      \"name\" : \"Deangelo McGlynn\",\n      \"description\" : \"Hic soluta sapiente ex. Molestiae ut voluptates aut est quia ullam. Voluptatibus eum iste quod inventore molestiae veniam. Et perspiciatis alias aut.\",\n      \"modifiedTimeMillis\" : \"2022-04-16T07:47:35.920864Z\",\n      \"id\" : \"he5d\",\n      \"activityType\" : 418338831\n    },\n    \"type\" : \"activitySegment\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"74qa\",\n      \"maxEndTimeNs\" : \"2022-09-05T05:40:35.921105Z\",\n      \"minStartTimeNs\" : \"2022-05-25T05:49:35.921155Z\",\n      \"nextPageToken\" : \"tp8ucui1u3pjp7xfpr7dk2a33oexn6tte5ouxxgk52iqxcesj4vw1fs7s5z0wfb2az1lxljz4fozntl6ys9nnap6b7jpnmsb5eytyk3rwo4oh8q2a4mdyjd0kynj95effkrzq8wjk290nft8gg9c0u8fk6ftx2rrp2x2ibmskowybcma\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"8wq0\",\n      \"maxEndTimeNs\" : \"2022-12-11T05:58:35.921329Z\",\n      \"minStartTimeNs\" : \"2022-12-17T06:02:35.921361Z\",\n      \"nextPageToken\" : \"i7htduvmc3yi225dtlhyluku2kh\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"540n\",\n      \"maxEndTimeNs\" : \"2022-07-11T08:16:35.921512Z\",\n      \"minStartTimeNs\" : \"2022-06-01T07:52:35.921542Z\",\n      \"nextPageToken\" : \"nmfkrltj0gd7blta95zs41pverujh3utfne2apqy1osqh5xbepoxygnc\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"62gp\",\n      \"maxEndTimeNs\" : \"2022-10-05T06:50:35.921682Z\",\n      \"minStartTimeNs\" : \"2023-03-16T06:09:35.921713Z\",\n      \"nextPageToken\" : \"ee4tp6p6w70a3elilntg4ba45y5rv2tg0hafw39q7fk6a0c96p5811ag5hdh3sm71\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"210b\",\n      \"maxEndTimeNs\" : \"2022-06-01T08:59:35.921849Z\",\n      \"minStartTimeNs\" : \"2022-10-28T08:24:35.921881Z\",\n      \"nextPageToken\" : \"asr3zp3gdwaj0urbpl3idhbvt55rmxemnafc9\",\n      \"point\" : [ { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-11-24T07:06:35.921947Z\",\n    \"activity\" : 1114356615,\n    \"startTimeMillis\" : \"2022-09-26T08:36:35.921986Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-12-23T08:15:35.922023Z\",\n      \"endTimeMillis\" : \"2022-11-10T08:45:35.922054Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/460355\",\n        \"name\" : \"Alec Stroman V\",\n        \"packageName\" : \"Lovie Legros DDS\",\n        \"version\" : \"479u8tv5lp8a491f4fqtm7hwiwnnsvng0rgzo19qh84gquec95z3m09bl60ugx92rw0qlw4f8xpq9lel9y5dg1l2lgjrqztybb2pp4e6p9\"\n      },\n      \"startTimeMillis\" : \"2023-02-19T08:23:35.922292Z\",\n      \"name\" : \"Mrs. Alysa Powlowski\",\n      \"description\" : \"Non libero laborum animi doloribus esse. Voluptas aliquid odit consequatur. A officia natus quia. Expedita qui atque quas.\",\n      \"modifiedTimeMillis\" : \"2022-11-08T08:09:35.922406Z\",\n      \"id\" : \"9j36\",\n      \"activityType\" : 1714683708\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"u398\",\n      \"maxEndTimeNs\" : \"2022-04-15T07:00:35.922619Z\",\n      \"minStartTimeNs\" : \"2023-02-25T08:09:35.92265Z\",\n      \"nextPageToken\" : \"9fizkit304ma74hs7uae8ajj0ui896j9jbvcreadg4jvt96drgpuh2kfeco\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"lte3\",\n      \"maxEndTimeNs\" : \"2022-08-24T08:35:35.922781Z\",\n      \"minStartTimeNs\" : \"2022-06-28T06:25:35.922812Z\",\n      \"nextPageToken\" : \"4mekac9dfojl12wxr4nu1gcj6thrnz0k9b3jzvbwmgpzm0mdqzjt7ujeh7lpk2tpio2jraq9ydffjsbkzkffef8dgwf02kjjgyw5aergkrt2f262u\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4o20\",\n      \"maxEndTimeNs\" : \"2023-01-05T07:53:35.922936Z\",\n      \"minStartTimeNs\" : \"2022-11-30T08:24:35.922968Z\",\n      \"nextPageToken\" : \"ksif36x0yrrwx9o0ws2cykje1awllmuld2w2jq3nk77ypazl1c9b70jecq9lqy4nkosv97z5pglmby1cm0y6j40nvfla723zkkooahhv409g5k97yyu8cb7fb3teajqm23knktb9u8241hwfasod59680tt3xgx3he2f5bz6echfpk1ja7dp6yobpox4aiww674xrmw\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"5132\",\n      \"maxEndTimeNs\" : \"2022-12-25T08:34:35.923105Z\",\n      \"minStartTimeNs\" : \"2023-02-18T06:41:35.923137Z\",\n      \"nextPageToken\" : \"n3clsla71up53wbo9vc08o4b98s7l0bueodn81tgw39rkww2tlhg3vflqxwm6osbwnmqwy6mzvh8ye6pmi\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"c8k7\",\n      \"maxEndTimeNs\" : \"2022-08-26T07:13:35.923263Z\",\n      \"minStartTimeNs\" : \"2022-06-07T09:08:35.923293Z\",\n      \"nextPageToken\" : \"eyxxhktd7j3chx1rzp9n0fspleic99k6cw6pykwvcuso68bokjienhjn63lk6nk6snf87ip07gek02zlb0gd37vlobjeup60orjmk18\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"5a70\",\n      \"maxEndTimeNs\" : \"2022-08-20T06:21:35.923418Z\",\n      \"minStartTimeNs\" : \"2023-02-18T06:25:35.92345Z\",\n      \"nextPageToken\" : \"sg580t7\",\n      \"point\" : [ { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd5dfff8-7b71-4332-b5e9-51fb9acb60b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.923716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataset.aggregate",
          "schema" : {
            "properties" : {
              "bucket" : {
                "description" : "A list of buckets containing the aggregated data.",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateBucket"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d742b585-72aa-4862-9b63-35b12c18bf41",
    "name" : "Adds data points to a dataset. The dataset need not be previously created. All p...",
    "request" : {
      "urlPath" : "/jcs1/dataSources/5tab/datasets/b7pg",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"37zd\",\n  \"maxEndTimeNs\" : \"2023-02-15T07:29:35.917668Z\",\n  \"minStartTimeNs\" : \"2022-04-23T09:19:35.917696Z\",\n  \"nextPageToken\" : \"1eshlv16llv1ssv33rqaekmdlm6aclz97qkee2cshk2gobct6qg5wp0l85y0nzyyp114xhfnl4j1c7almfurpudxu67h0r92ds47m3y76808ek134tjk26wfbyke5pajeysi8xh870bor663kw873ohga8mazf3khjrmw793tdw1j4rp00gggr0wvso6qf\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"e6s3\",\n    \"endTimeNanos\" : \"2022-09-02T06:34:35.917814Z\",\n    \"dataTypeName\" : \"Shalon Denesik\",\n    \"startTimeNanos\" : \"2022-06-08T08:41:35.917889Z\",\n    \"modifiedTimeMillis\" : \"2023-03-11T08:15:35.917918Z\",\n    \"rawTimestampNanos\" : \"2023-03-24T06:17:35.917948Z\",\n    \"computationTimeMillis\" : \"2023-02-12T08:50:35.917976Z\",\n    \"value\" : [ {\n      \"intVal\" : 1129093177,\n      \"fpVal\" : 6.237619621916676E307,\n      \"stringVal\" : \"to2oakbg3x2tjy7jnkdzk2u3e7m92uykkugjqkv24bsyoyc58cq8slhv2tvv8sxmbdofekpkr2pqgj08j4mhbm4gh41d6cvz062w8jnt48xsm8f4dqeol84zpmgk\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 696810576,\n      \"fpVal\" : 1.104338228470831E305,\n      \"stringVal\" : \"ifk7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1956076494,\n      \"fpVal\" : 1.0286612379021886E308,\n      \"stringVal\" : \"z4e47ykbi6dwpbu2y4tm\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 384323106,\n      \"fpVal\" : 1.2004332460283687E307,\n      \"stringVal\" : \"pwlosmcb5r\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 643701647,\n      \"fpVal\" : 1.2598362613760828E307,\n      \"stringVal\" : \"3ckeq1oyxxyy82ymppei09blb7kk3bo1ejn14i1iw54qriw6dtxr1sbr8mb0e4q2bsfuxw6jzg04fsfp6kmoghbgvd12\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 735644830,\n      \"fpVal\" : 1.5132803701943103E308,\n      \"stringVal\" : \"5e4zeon03d5u4fitxkfaxwc3ufgpsjm64b1ntk4y8d5t5unrqh98fcq9f3guyvzsw2fbrdgtd7lyij4a5dr19ktdysjny7lycppwjcz0gzc72rxn6tmrobd8thxr8k1bb9feupx8wxvqe2dei7sc0eii3\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"5p18\",\n    \"endTimeNanos\" : \"2022-05-26T06:19:35.918278Z\",\n    \"dataTypeName\" : \"Guillermo Kirlin\",\n    \"startTimeNanos\" : \"2022-07-21T08:27:35.918348Z\",\n    \"modifiedTimeMillis\" : \"2022-10-28T07:13:35.918376Z\",\n    \"rawTimestampNanos\" : \"2022-09-07T06:38:35.918404Z\",\n    \"computationTimeMillis\" : \"2022-12-03T06:19:35.918432Z\",\n    \"value\" : [ {\n      \"intVal\" : 608051412,\n      \"fpVal\" : 1.486388272209073E308,\n      \"stringVal\" : \"2aw7v31c8v31nmis9rtw3dbo3hg9omowo537mu5mj6ambj2e0vbejjwxjja26w9zoflnvabfucvkm0aviu49jwwig94qlp0zap77rdj1nwnuxqknl5dekrw32g2odxelmhvqis1ur6hy81gro\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 876383958,\n      \"fpVal\" : 6.994958424187699E307,\n      \"stringVal\" : \"nwf3wo3zb1vxg991r5in2lbx9wvncx016hj7lc2ruo15yn07kdlpjllz8jiaiwltoa5svy0k2nlb4lkr6n3mc810msxcovd62q4uktveyikys1hdtfx5usswpjper4sqo520bsq6ym6rgtbppfm3rmsfzstns0eb8gwrvedafu2lqej4bp7b8lz68gr31\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1791546310,\n      \"fpVal\" : 1.7688164551148465E308,\n      \"stringVal\" : \"1z33brf9tueskszu8p\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d742b585-72aa-4862-9b63-35b12c18bf41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.918834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.patch",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b16a0986-89c0-4542-a9b6-211e85d99820",
    "name" : "Returns a dataset containing all data points whose start and end times overlap w...",
    "request" : {
      "urlPath" : "/v1eq/dataSources/u0kv/datasets/7853",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"m807\",\n  \"maxEndTimeNs\" : \"2022-07-03T08:31:35.916726Z\",\n  \"minStartTimeNs\" : \"2022-06-11T07:33:35.916761Z\",\n  \"nextPageToken\" : \"1430mc8ypdu6bouh7s41khv5zay59cilnoasqocgmwsh6oev1v8sky2bw9m8hvie5dgfcgpvk\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"e056\",\n    \"endTimeNanos\" : \"2022-06-11T09:09:35.916888Z\",\n    \"dataTypeName\" : \"Mr. Anisa Strosin\",\n    \"startTimeNanos\" : \"2022-08-27T09:02:35.916969Z\",\n    \"modifiedTimeMillis\" : \"2022-05-24T06:54:35.917Z\",\n    \"rawTimestampNanos\" : \"2022-06-03T08:38:35.917031Z\",\n    \"computationTimeMillis\" : \"2022-11-23T07:18:35.917062Z\",\n    \"value\" : [ {\n      \"intVal\" : 1051680354,\n      \"fpVal\" : 6.086488907962873E307,\n      \"stringVal\" : \"05mct2ab8wpi4355299qqf3xtiu2oe4scrgffrxdr0m7ead7zubmje52bun5mk7pj099bm0q1cg0ep3o4keeinrgef290tl0rnfx3lteq4o43xblhvae0ermrrlu2prx2qpzr46dnc8fixxm6fqjsmfeshe03rd7zgoj\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1140794756,\n      \"fpVal\" : 1.7870396701487804E308,\n      \"stringVal\" : \"lkwu3f2nq3zzf9xls912\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1293665762,\n      \"fpVal\" : 7.034091946016205E307,\n      \"stringVal\" : \"b44r38lspmmfnzrwz9jckjlzsd8rvspwfjwx1lqtwzp3lnlkfzcu43q7edf01slct8\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1552576510,\n      \"fpVal\" : 1.7200720167052118E308,\n      \"stringVal\" : \"8eg9e13txlbv5wjh28c1pvhfv8a6vjz5dfkb6wv20zgaiy\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b16a0986-89c0-4542-a9b6-211e85d99820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.91754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.get",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "7825a7cf-54c5-4e2a-a43c-3eddae6bb02c",
    "name" : "Performs an inclusive delete of all data points whose start and end times have a... - 200",
    "request" : {
      "urlPath" : "/vd3l/dataSources/3nok/datasets/3c35",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7825a7cf-54c5-4e2a-a43c-3eddae6bb02c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.916609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.delete"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "dd8a75c3-581e-47c4-9f9e-bce90d817b1a",
    "name" : "Queries for user's data point changes for a particular data source.",
    "request" : {
      "urlPath" : "/9j6t/dataSources/bt9c/dataPointChanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"t2q2\",\n  \"deletedDataPoint\" : [ {\n    \"originDataSourceId\" : \"us32\",\n    \"endTimeNanos\" : \"2023-02-07T06:29:35.909726Z\",\n    \"dataTypeName\" : \"Bernard Satterfield\",\n    \"startTimeNanos\" : \"2022-11-22T06:46:35.909808Z\",\n    \"modifiedTimeMillis\" : \"2023-01-02T08:36:35.90984Z\",\n    \"rawTimestampNanos\" : \"2023-02-07T05:40:35.909872Z\",\n    \"computationTimeMillis\" : \"2023-01-28T05:58:35.909906Z\",\n    \"value\" : [ {\n      \"intVal\" : 1113992784,\n      \"fpVal\" : 7.834175945515124E307,\n      \"stringVal\" : \"tjowrb199non0izzu2ah69lb34y9egurklvm5eq1v8yob9isthubbklc1q0qoi30526wbtyqx8aub3wnltdicnymspmh9u54c1mmn25rnwbwau7m9gr3jrc689nru42oizz3f6fzcqqvbwryykn2xgcgav84z41aryksch5o08u2122jf5e9mhowuy97859jmwigeel0\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"3qxk\",\n    \"endTimeNanos\" : \"2023-02-20T06:52:35.910075Z\",\n    \"dataTypeName\" : \"Gracie Gusikowski\",\n    \"startTimeNanos\" : \"2023-01-17T07:44:35.910148Z\",\n    \"modifiedTimeMillis\" : \"2023-03-02T08:18:35.910179Z\",\n    \"rawTimestampNanos\" : \"2022-09-15T06:25:35.910209Z\",\n    \"computationTimeMillis\" : \"2023-01-22T09:23:35.910239Z\",\n    \"value\" : [ {\n      \"intVal\" : 1230172797,\n      \"fpVal\" : 9.996676142740664E307,\n      \"stringVal\" : \"7tykl030gnfgh5ljz8chcpg0wnxney1nupgafiq8in\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1617278668,\n      \"fpVal\" : 3.4813124019592875E307,\n      \"stringVal\" : \"cxc5q9h9b4ec2ud1w5p32ez66v2jfr418hfcodc9gtfs2s4ff1ekzvzjoy42dezom7jl2gnn4ao4chsktvo6oduwk7kzv7qtuhu5dj7pcnjnvsv68215uloe8dltpbxowqsbh94pzdmdwvrreqv7gj51iifgq2085erfdvqr1mhu6u5stzeismhwqdbk3fb3z91x\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1341391697,\n      \"fpVal\" : 1.6327233818912866E308,\n      \"stringVal\" : \"5x59hh9cv6ifoc1yjwdhydd9f8qgeyangw471ykukmgg71ge6cj204r556r33bcd4ppgu95xelo5fgjd7ok44rxxtrcjgtorslclcp9eq33u6dwnbs1c4\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1568466683,\n      \"fpVal\" : 2.257026944309423E306,\n      \"stringVal\" : \"zbxeynwacdf9iwa6tvql8p7k3funcpw8zx5m2tnpmkgz4oblcfvozhl7xqfrx5by6gj5wzsto4yh1iez7r7wqymuky5dcsbiah6c9lb0tozwy00kiamn52ktv2z64e86x7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 774378301,\n      \"fpVal\" : 1.5741059462419378E308,\n      \"stringVal\" : \"pktf2b2wnfbjo4nmvde26m3vdrly9udu8p6ftm4olnbjoi0f2ia51tn9ryqsuflf8ofzj13rh3ltgf7l18xwtzqfzwmbp01y65txy7cr4jpt2phnrrf61c9o6nzy4dxs6ecknlypayn\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1081744176,\n      \"fpVal\" : 1.7429829667703634E308,\n      \"stringVal\" : \"iu827dakkh64ctj7j173vl12sublij7xdc36hw9um6kpnwh4632ijus32hi08t\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1711845067,\n      \"fpVal\" : 6.33506217234947E306,\n      \"stringVal\" : \"7c9whmmszr2spt5fs9zo030njlh085o8onlclqj5180fugguo79qv\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1819726236,\n      \"fpVal\" : 2.909742949103323E307,\n      \"stringVal\" : \"knlmggvkdwqyf97gxw071eq5ky4xney7gvri3k5usnsmg4mvgduwxyfutxorvxemfk2i5hpkogi0ztcvsn63997w0fq4yc745t4d0qw545hd0n1clvzbk2otyha7rm\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"6k33\",\n    \"endTimeNanos\" : \"2023-03-14T08:11:35.910626Z\",\n    \"dataTypeName\" : \"Renaldo Harber\",\n    \"startTimeNanos\" : \"2022-10-04T05:36:35.910694Z\",\n    \"modifiedTimeMillis\" : \"2022-07-05T05:44:35.910726Z\",\n    \"rawTimestampNanos\" : \"2023-03-19T07:18:35.910756Z\",\n    \"computationTimeMillis\" : \"2022-11-12T05:26:35.910783Z\",\n    \"value\" : [ {\n      \"intVal\" : 1207639227,\n      \"fpVal\" : 1.5309966285650117E308,\n      \"stringVal\" : \"tkj17sxmvzywxy0h3w0swbefr1igjems4ts9l10h1frlmpwutp83js9wkyb7pkiqha1xubop3q6a2bxivf2grsm4zxopybahyi98j3ssdu10zjkhit2614utouvc8\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 843698124,\n      \"fpVal\" : 4.0104492394109755E307,\n      \"stringVal\" : \"r0v6e0xzxwpujar7di8730my8mt3ozz97d2vtolood3m2qw5r3xpc60pucr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 297171553,\n      \"fpVal\" : 5.382155739708239E307,\n      \"stringVal\" : \"2o28sq1lxga55e0lh48z3s\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1789381651,\n      \"fpVal\" : 4.1897319871869274E306,\n      \"stringVal\" : \"fim70tj9zwuyvhlrpcq9cho2e2udriucluhohqk7wxxhee042ikvgkidfmggivf9sfr7hz4552nwu3722aqhtmojpau4j512b7u5o9iwmsrq5rem30r7rm3klklhahpmojjoa2vfy86od3z\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 10822486,\n      \"fpVal\" : 1.2799767605357134E308,\n      \"stringVal\" : \"j5npab8p270xmf1ugov3val8ewedkwqj5j3en5v6foag6np3z0a9bnscs2nn8xmeqlt1vuemevcdjnqmueelwl91n37\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"3o1v\",\n    \"endTimeNanos\" : \"2022-09-14T06:47:35.911063Z\",\n    \"dataTypeName\" : \"Wendy Waters\",\n    \"startTimeNanos\" : \"2022-06-12T09:19:35.911136Z\",\n    \"modifiedTimeMillis\" : \"2022-08-28T07:06:35.911164Z\",\n    \"rawTimestampNanos\" : \"2022-09-10T08:49:35.911194Z\",\n    \"computationTimeMillis\" : \"2023-01-17T09:20:35.911251Z\",\n    \"value\" : [ {\n      \"intVal\" : 6116943,\n      \"fpVal\" : 3.2965672304457035E307,\n      \"stringVal\" : \"6k95jsxbuczrx3bhnn5jlq3bquzaw8mb8gxrpjkgid\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 832956086,\n      \"fpVal\" : 1.3251093745651724E308,\n      \"stringVal\" : \"qv0rznwhcjx4mhz4cpc8p7ukxrrrgleeyraizlfp385\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1876538305,\n      \"fpVal\" : 6.465133754288537E307,\n      \"stringVal\" : \"0nqyfn4vil27bcembp7rz1rxt0jey1tj4bxr224e4a52lix9zxz7yihbt92kuh19prbq9a1jrh1gnxazxnj25lusoqb74p98e0vqiqj2zdbg6mq0t7o0e4ymu39yst9srp942buj8vib09zcodhqno17caxh9khtdmzjqpmefec16ij4amww9w4h1\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1571953456,\n      \"fpVal\" : 5.828014647585641E307,\n      \"stringVal\" : \"x1y2lmut7z5tluvzixqfgcjsxxzle27yfqa0g07m6hydzwczq9z064l5a1ayjthsz2aoh7yrbns7v1cvnujckri3\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"g032\",\n    \"endTimeNanos\" : \"2022-11-18T06:54:35.911494Z\",\n    \"dataTypeName\" : \"Lee Turcotte\",\n    \"startTimeNanos\" : \"2023-02-11T05:49:35.911565Z\",\n    \"modifiedTimeMillis\" : \"2023-02-13T08:19:35.911594Z\",\n    \"rawTimestampNanos\" : \"2022-05-20T05:53:35.911622Z\",\n    \"computationTimeMillis\" : \"2023-03-16T07:30:35.911652Z\",\n    \"value\" : [ {\n      \"intVal\" : 726163422,\n      \"fpVal\" : 1.7794982427267195E308,\n      \"stringVal\" : \"2mah19kvyv6ljnpus77ikniqcjj5iknhzcp9lm23z0x0lpegz3e32p107fli9fz9u4p09avfb0uohurb678imgmw64ru7zmwryaufswzrblsin8ymcpatn7uwa84xdf6u6jp9ebriqyh6s5vut0bo0mh6elwb6\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1747812516,\n      \"fpVal\" : 7.752393902731121E307,\n      \"stringVal\" : \"pux0fj37vdce709lll7qw8sixr415f8uir75ni3gif3hllvmyhs847juy9gen80myckplzt1u2asbjdvf8j7x6dohyjpxsd1qel49sxphemcnzyl6lbj0acwmid2c4yj575q2t35p3qwmwx0p00x4au2pl9qnglwa5pgdbz\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 131411022,\n      \"fpVal\" : 3.860523966906776E307,\n      \"stringVal\" : \"12ovchq5t7akgmt0tszcetcyspxatfpfllgrfxrq49jf6ftjqb7jkb0s8y6y741ex29ytdp7bi29kamspjmabz0ibr7bftdxfp3u7qjxy1zi\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 2100550463,\n      \"fpVal\" : 6.889281630397848E307,\n      \"stringVal\" : \"7j5pe6ybyzjtsrsen8llwhihwf7vj398i38551tfu4c86dj0thz4eyfrhvab4m3jdt5j66tg4gv36eho6rsg2iccptvdl2uqgvnxjv8vr56ls5mfdd415uihkh4l51i2s7vule1b7w600e6te4syf1fp2ud3p5r64i0x41k014a62t19azo1w6558hf7h\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 950398549,\n      \"fpVal\" : 6.173419239681226E307,\n      \"stringVal\" : \"wtl9n5zi11topftgt6v07s9kmamwkypb3p25fl96k2kmzy1xzno8yszirk4ig6vq175pomxbeirhjvjcazv658pg5mw3tfaeprgy2emt0xp2pofhhnnrwgq0wmupik5m\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1865665160,\n      \"fpVal\" : 4.267623966740057E307,\n      \"stringVal\" : \"1aer6x15b1bjxo4mmii5rsqvza8skx508c09s02p6gvja3vw5o94d7nqwefxu1e0q8h0bm83l1z9o0owv2l82v80ye81lxgsrpsorxoegdqllwryjbywq7055r7pw6ip6rz9oumzi06mj8tizsfzdvcqzcch45hus31yz5h0r\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 655249377,\n      \"fpVal\" : 5.4745275771636256E306,\n      \"stringVal\" : \"gpwztei5365qe76jliogivkywxxad679z420zbk\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"dh9a\",\n    \"endTimeNanos\" : \"2022-08-04T06:11:35.911995Z\",\n    \"dataTypeName\" : \"Tony Bechtelar\",\n    \"startTimeNanos\" : \"2023-03-16T09:23:35.912068Z\",\n    \"modifiedTimeMillis\" : \"2022-09-14T06:05:35.912098Z\",\n    \"rawTimestampNanos\" : \"2022-09-30T06:01:35.912127Z\",\n    \"computationTimeMillis\" : \"2023-02-12T06:30:35.912157Z\",\n    \"value\" : [ {\n      \"intVal\" : 211823180,\n      \"fpVal\" : 1.6754214045796184E307,\n      \"stringVal\" : \"b98dhmp4zcp76frdyh3b59wn7nchh3mh3rfuw8ak2fziigfy5o3qc57tevqixg7h936\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1440298364,\n      \"fpVal\" : 7.532978796754202E307,\n      \"stringVal\" : \"ugy0\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1675048114,\n      \"fpVal\" : 9.312239286082553E306,\n      \"stringVal\" : \"cu7x5ugjc7i1ungzurn96igr9437qa8g005tbjux9mdjyguzogrovp2w0hsly0ruu9z7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 313499669,\n      \"fpVal\" : 1.5877593637168735E308,\n      \"stringVal\" : \"zsvjsgo7kk7r93p9s8guwwquot34u3f0s0iy7d6knv7cs0bxntdlat481wc3cltcea5x8ypggq0z2helc5zpn8sa9jpx6nqgwd8omsrm2ftmases8h0wfueiy8cnt0\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2024486544,\n      \"fpVal\" : 2.2702916675764466E307,\n      \"stringVal\" : \"2kd04o3xxp408hyd0xq6g9o1m33v8782lxupln4nhq6c2oe8kxb6qr9r58kwjeylvthb75p8s4kwqwnk8y\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 503429232,\n      \"fpVal\" : 2.3411608940364493E307,\n      \"stringVal\" : \"2s6fmzhmejib9mifahkwdvoyymij32wq4glcul2ai9fbpzzxjbi97fv8ari1lkgo7oqpc4dzzqzoaqjdvpj6h235d17\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 915002925,\n      \"fpVal\" : 3.3559686194127896E307,\n      \"stringVal\" : \"eyxzsfvlni9c7jbc6xdk42q9t7wv9jpjenx8zcc91y5bhzkh6g9p9aqdsgvnyoq2ktlrg5xk25wz3\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1511838275,\n      \"fpVal\" : 9.657144168890674E307,\n      \"stringVal\" : \"e86p2v7gya577ojbxc04aa45eedsbmkm2un3eny7192ej6yah5w27841eyct90cg0j3eqbb6kstm360gbjsf70sfswdedrm0q2oalt07ji4o4knqpp8nvchttfbjc9imawcbcn7w2fmw5ghl5zhx5uzh7kuztj02ys6wf6wspg4lbdvwhyaaxjeavejmlxw4s7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ],\n  \"nextPageToken\" : \"w1tfe8fqyb11n1e4lw9wizs0vs2qt3nn0vcbsqmpe63wnfka04mlne0gyzrctshqu21i1rfc61cuzws5jm4iphos3w1fuyh8ncbygejkl60rz0kvvepjgklty1kb6lmxj2cljfxpof23n0rqr02hokp6ygfpszxz15qi1eliilgn0viygniaw8i5fuwwz9on93i9aco0\",\n  \"insertedDataPoint\" : [ {\n    \"originDataSourceId\" : \"8139\",\n    \"endTimeNanos\" : \"2022-06-18T06:34:35.912582Z\",\n    \"dataTypeName\" : \"Miss Fonda D'Amore\",\n    \"startTimeNanos\" : \"2022-08-07T09:12:35.912656Z\",\n    \"modifiedTimeMillis\" : \"2023-01-24T06:28:35.912684Z\",\n    \"rawTimestampNanos\" : \"2023-03-16T06:08:35.912713Z\",\n    \"computationTimeMillis\" : \"2023-01-23T09:19:35.912742Z\",\n    \"value\" : [ {\n      \"intVal\" : 1264412347,\n      \"fpVal\" : 7.749872759122772E307,\n      \"stringVal\" : \"mb1r0e1ow3s9yvqnjr87sxoxyahws8hvzw4ldftulhvjs8451dxt8mjbskst2n7jug29h\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 330237045,\n      \"fpVal\" : 5.318514586675162E306,\n      \"stringVal\" : \"gaqk0r3qbo6ajrwe82mqongqyeyk9mjyg18trv\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 605980503,\n      \"fpVal\" : 7.875097518885513E307,\n      \"stringVal\" : \"uxmcf4i4p7l7rdr8ck35ihv6au0a86ytlr0a1r0rylavjowwl3eo63zrjukbs48kcji4j6vyh\",\n      \"mapVal\" : [ { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"400j\",\n    \"endTimeNanos\" : \"2022-10-20T09:05:35.912947Z\",\n    \"dataTypeName\" : \"Winford Hessel\",\n    \"startTimeNanos\" : \"2023-02-24T09:21:35.913027Z\",\n    \"modifiedTimeMillis\" : \"2022-08-01T07:31:35.913057Z\",\n    \"rawTimestampNanos\" : \"2022-07-08T07:36:35.913093Z\",\n    \"computationTimeMillis\" : \"2023-02-22T08:24:35.913122Z\",\n    \"value\" : [ {\n      \"intVal\" : 1860035111,\n      \"fpVal\" : 3.454057541262511E307,\n      \"stringVal\" : \"lrx52cj33szaxt917m4bbghxwctvk4f44dk2vq7ywy9g7g28zou5xuqjm8jo7po425d32ghj06q781hin7v9adal99093x28ejozr913f99ipmiv807n9ze3tr6kx4hnw1jrvbmoh2jmhj3nklzm4uelatoah2gi4h8i21ts6u7eleaekpa3jbhn8vn6u3lqy3ua\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1881744823,\n      \"fpVal\" : 1.1454936684057007E308,\n      \"stringVal\" : \"rgys9mptx6rgczkwqp01bnuukcwpr2i0u4in6vejxcyu6c50td3yml2hkg9vjvnnfg4f4e2jbjfs7drf0yy\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 825489496,\n      \"fpVal\" : 4.572389557478502E307,\n      \"stringVal\" : \"728mtolo7bffrrozo5eh0ucbc8jpkl0dh3qn9tknflp3ccjue2jbfy4kmyua2ley8y7zk1grngufl09mebw2y21rahyuiaziufextflh1b2b9v4evwuaa36bxcgs34gkw5779fekrwukgucfrdvvvgd8sw7kds94a9usvyk9q914n3u0setxvxfnp1u9l9\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 2073063402,\n      \"fpVal\" : 8.638119575271789E307,\n      \"stringVal\" : \"d1r7r6x33kva6gwz6m3coysmulila3t8hnhjn0d9o4n0a3h7txx8p3ipv8qq6ts09xvs272mmk8pgoc9dxtc6sbp059zwf8fshyq67hyo0r7msxufec6rxs3ql0wr101v3qylxwzgbzonqhthkxk41w7liziy4w5pxv7d\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 619531264,\n      \"fpVal\" : 3.303394971278941E307,\n      \"stringVal\" : \"51lyvroislmxp29gfedj0mxrhds0adb7yare3w0qj48n3w2q58adjqft3vgxdbsbeawzb9bouxuflc3n701eh89zuzahw96dnnmp0q9vba6gxhf2xemqq13kiysdeyyj7znr5vqb37z0avkfr69twsjdzvpiwjnxg7tjqxlei256lmzw1z736ea2d8lqla3g3\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1223305944,\n      \"fpVal\" : 4.1806847595063095E307,\n      \"stringVal\" : \"4mhya106vsmbv9lhpzs9oz52y4errovd2ahoa20gg0onc191cj5lorvntmlox53bffrg8i6zhglt9kqbcg1mmsywpq9ylwl5unb260uuhutry7lv7spv445fjde90\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1300132023,\n      \"fpVal\" : 1.5466613830326746E308,\n      \"stringVal\" : \"dznhqdc7a8blswgrvg66khayb3fb4ze3ljxomujuospby50ji6c1tcc77eju6vv55cowwc1undc0ddcx3bha6zv3i4v19v63li44h\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 620001477,\n      \"fpVal\" : 6.556211312960356E307,\n      \"stringVal\" : \"8ui8fo93qxvroekdtdtzv15b56fgtde6ktikd4cwbxofj3n19vxrf988hp4d0625rjsync4xfctrgdncym1gxu21qyx831jlnccuyjp16v1xi29qwiu1hh3wwd1822kgac\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"z66p\",\n    \"endTimeNanos\" : \"2023-03-06T06:06:35.913519Z\",\n    \"dataTypeName\" : \"Tiffani Kuhn\",\n    \"startTimeNanos\" : \"2023-01-02T08:03:35.913591Z\",\n    \"modifiedTimeMillis\" : \"2023-01-02T06:44:35.913621Z\",\n    \"rawTimestampNanos\" : \"2022-06-04T06:50:35.913649Z\",\n    \"computationTimeMillis\" : \"2022-09-03T09:03:35.913678Z\",\n    \"value\" : [ {\n      \"intVal\" : 1431735249,\n      \"fpVal\" : 1.1733889458321589E308,\n      \"stringVal\" : \"xhq1itiwxqj3k9zy1tv6l6fy8ohpuxf554uaugfs2jdt1peraya2hn6frfii1hsine6v14f73greiuusjoa1o3dmzv43yszl5xfxzhqu89z8kdpi6vyzou8l6kovy08yekyv16czdhbjrjc3q6ebdk9yqr5jkkm9yosyj180mwixyqrlyhy64l6s5cnbhzie\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1515572508,\n      \"fpVal\" : 4.394918743800468E306,\n      \"stringVal\" : \"x4b44efpdsiqccc5gc3vkwfoprc8up4gdykd271y2est24ovi8wtts54noxxjr2miouhoq862hhdu9h6czth5i6imjfpqpvkx725aqw7ditaih4r5zln7k5vhemox3gpmnthl68dqg0swvohmjuizd3qltqpm1h5sbdl8sgaaoiazuxoft\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 610411378,\n      \"fpVal\" : 4.742183347364476E307,\n      \"stringVal\" : \"sblqirt5qhudqxhhqog7zfn9foaow5p4wqphbvoztzkiofl67i88lll7zw5xot582xqhbtqas25xbtlkovkikkvwtv1si7mu3w643emey29cavkguxkzso20w5pba9otjv3xdpob4bft04be85c1e45e5eqwk1ovhimdyr9s\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 595482436,\n      \"fpVal\" : 5.895534212555489E307,\n      \"stringVal\" : \"6tzkwymrc1bia436nhu1kxnhcmz1kqrd7387ib71sppfjfa8cr9a95n72aq32cd58275ajcdpnffbx68ipo3ihuzzg6slnpopos7x56dft782u433v850uwl7zgymz62ufnze9s129n1dy8gxpvxazck\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"8792\",\n    \"endTimeNanos\" : \"2022-11-19T08:57:35.913923Z\",\n    \"dataTypeName\" : \"Dr. Willena Hilpert\",\n    \"startTimeNanos\" : \"2022-08-18T06:18:35.913998Z\",\n    \"modifiedTimeMillis\" : \"2022-12-03T06:01:35.914027Z\",\n    \"rawTimestampNanos\" : \"2022-08-01T07:27:35.914056Z\",\n    \"computationTimeMillis\" : \"2023-02-07T05:35:35.914084Z\",\n    \"value\" : [ {\n      \"intVal\" : 781570826,\n      \"fpVal\" : 3.470234663377888E307,\n      \"stringVal\" : \"sr0yeb945up61449ix3oocnk3lxesuvuavohjvh0g1ootdz6ps2t76h4dyhye1mwbpksmxepv6jk4gb2t2igex6rpg8ijxlrfxi1tlxjytqlhuzdm4bzv8blfu4ltz55pp62uc9rsnss1ggpvhdwgasnfxu1rpa5agacw8nsigv9i4g4920s0l8c8caklhb\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1651824991,\n      \"fpVal\" : 4.0802104677980986E307,\n      \"stringVal\" : \"7kkda6ygl64t726evwpanmewqt5rcsgdqpcacok5oqd202n2sqaspbvj6auaynxgmu4bxy1qypuc2tihcl8datwgig4ot5n6fpakq2z09kb2t1vh7pofrhw06hh0j4hclyghhinjartmcenqo1x46akud7c0w602cfhad1wmdq3zfea9pj67\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 900577811,\n      \"fpVal\" : 1.9057256075183783E307,\n      \"stringVal\" : \"o3f4revjon25optr5o6qergpf5o3zrc1yb6q\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1519258473,\n      \"fpVal\" : 3.880891317547037E307,\n      \"stringVal\" : \"xuhswftez7qroebryf3\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 269549278,\n      \"fpVal\" : 1.2867917156702789E308,\n      \"stringVal\" : \"lnv7kqo3qiqhpdvljqakyzt7cw33317z5ft1kv79lklstjmvzkm3h0lqi15pmvkzc3xlatdbrbfyx09caf3ukx5oamk431a9e2nnf25mt34j1hjeb47tob1pzqgkm9psyurgsi7x23o74hwmor3kmtikm1dus7ae4psr3w3dz5ieop17p4zvo\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 487065574,\n      \"fpVal\" : 1.7006410504698027E308,\n      \"stringVal\" : \"s6jd6bhim8kqamuy5o5a65f3g5q1p7c5t64rgylshekoe565v2dqy9jkdbtk39inmqwqnfs9lllsvinugpqy\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1678860622,\n      \"fpVal\" : 1.4254249284414904E308,\n      \"stringVal\" : \"1hl073apuaarsl7zcx4dlr\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"4ayv\",\n    \"endTimeNanos\" : \"2023-01-02T06:51:35.914436Z\",\n    \"dataTypeName\" : \"Ariel Breitenberg Jr.\",\n    \"startTimeNanos\" : \"2022-03-31T07:58:35.914511Z\",\n    \"modifiedTimeMillis\" : \"2022-11-22T05:59:35.914539Z\",\n    \"rawTimestampNanos\" : \"2023-01-29T07:48:35.914568Z\",\n    \"computationTimeMillis\" : \"2022-08-11T08:53:35.914597Z\",\n    \"value\" : [ {\n      \"intVal\" : 1922110140,\n      \"fpVal\" : 7.541185590926314E307,\n      \"stringVal\" : \"gfn5e70xc0nfjyti2n03qxh2blbevl13td6mjf219kmpxztum927hf18whh943043afexcmuzpozdzsty530r4elpmj7cho1ghh5wyo9610d2cmebd32c8e68q6q8bdzi2h3r94ln873poze3l7ljjinryqjn53h1jugvpuadf4866vktqqtlyvymxqu3\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 149063311,\n      \"fpVal\" : 1.0703646020711844E308,\n      \"stringVal\" : \"ea3xlddzkfq1adexil704fi3xds6sau26maa5sb0jdliyhtas8yacrccrwb2xoy2nlfe61azk2lngn7pd3lxa1ahrpzgtrjepip94yobqztw\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"e9h9\",\n    \"endTimeNanos\" : \"2022-05-07T08:25:35.914777Z\",\n    \"dataTypeName\" : \"Norris Mraz\",\n    \"startTimeNanos\" : \"2023-02-18T08:28:35.914846Z\",\n    \"modifiedTimeMillis\" : \"2022-09-30T09:21:35.914873Z\",\n    \"rawTimestampNanos\" : \"2022-12-16T07:16:35.914901Z\",\n    \"computationTimeMillis\" : \"2023-03-25T07:46:35.91493Z\",\n    \"value\" : [ {\n      \"intVal\" : 1521076563,\n      \"fpVal\" : 1.4873938710844811E308,\n      \"stringVal\" : \"xkimqaop1rwg8m6jwyjl74c6sgo8e6543oadpepw4l827ozvr1476t8kx4egxgpplcbs5koi8cqu3affpy543yfrxfks0zx9v4dn9x43toqioc56luxfeodf41zfhg22xgsfh52zy980bqlm6rk50m34lyp5ij35fkcndfdxs0w\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1909104597,\n      \"fpVal\" : 5.817154945942239E307,\n      \"stringVal\" : \"xu00n924pqpnkeokenjldln30gif7e2fg8q0wtmem3f1ebynnnz9j7gbi2oszbqxq41ipelzynd2qmwf4dkor8e7mtvpyc3acfrbxga8bfqwli2iy2k640055ifu0h2xsksq5bvg4qvsl8wqagx67nrw94ta0yjf3wqx0vav4kjhukd2qyuxgdbcrco\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1716696560,\n      \"fpVal\" : 3.0703336331166356E306,\n      \"stringVal\" : \"r29qjxu6iwcfk5f8sh2dztg0b0755ltbsoybzfdxm7x64ibrtnrr795w36n1goh0nbsf52jiuusz2hgv3kf17wnwwkr\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1704443677,\n      \"fpVal\" : 1.4595577247619577E308,\n      \"stringVal\" : \"c87lrk1d4x8rolxa2md3mv6eb399l3ffw11f06p8agat3qgqk2l9aw80lppkxvae9kdzob15hyzmyq31p9dfoicdo4ozh43en1erwelsrzj4zyjn6dwcskluacl2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1246167972,\n      \"fpVal\" : 1.8845762041090887E307,\n      \"stringVal\" : \"7ljpqa7xhp6lazx2o58ongfig00on9ijptrbh2zrtfmnh2riku4owjnetaaa6nnmgf6wf4pww3bd8kwqw9dp2xbc39rg0at85yuuyzhzda4mhhlm7wcfeb0f1pqtg2d3zd5s1lbmk3mqj91vl2slsho6v0orsqi1nv7czk38yihmazo7nkas4mhzysg2n7ot\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1600479294,\n      \"fpVal\" : 1.3737756174992318E308,\n      \"stringVal\" : \"5djs74wc1tmtls8314051zb2jcid7qxuerfxvcfhtwefhhdez66fnvaifb7s40thve7ld1l7ql4tr09bjf2s2vby22nfmeowkqc22wt11w7taea5qf9y2mtc8m6x68\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"3i5r\",\n    \"endTimeNanos\" : \"2022-08-23T07:53:35.915233Z\",\n    \"dataTypeName\" : \"Laurice Miller\",\n    \"startTimeNanos\" : \"2023-01-31T09:04:35.915303Z\",\n    \"modifiedTimeMillis\" : \"2022-08-13T07:07:35.915332Z\",\n    \"rawTimestampNanos\" : \"2022-12-07T08:49:35.915364Z\",\n    \"computationTimeMillis\" : \"2022-07-27T06:10:35.915393Z\",\n    \"value\" : [ {\n      \"intVal\" : 1479961722,\n      \"fpVal\" : 6.518938941916936E307,\n      \"stringVal\" : \"9lr4kzcfrf2c9tw8degw5imfcz2z5qdoixjybpjanlsc1wrgt1e4j9sexfobs04\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1933624230,\n      \"fpVal\" : 7.841426165085597E307,\n      \"stringVal\" : \"uecb9ugwoz2kbpkxcvye9joqzv2hlnv0urj6\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1772936282,\n      \"fpVal\" : 8.253794531800721E307,\n      \"stringVal\" : \"u08xyawlg2v77811obpas74f5ll97mh4sas2vf4qey\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"r211\",\n    \"endTimeNanos\" : \"2022-09-19T08:17:35.915597Z\",\n    \"dataTypeName\" : \"Darrell Bergstrom\",\n    \"startTimeNanos\" : \"2022-06-09T06:52:35.915666Z\",\n    \"modifiedTimeMillis\" : \"2022-07-27T09:05:35.915693Z\",\n    \"rawTimestampNanos\" : \"2022-08-05T08:23:35.915724Z\",\n    \"computationTimeMillis\" : \"2022-04-05T07:59:35.915753Z\",\n    \"value\" : [ {\n      \"intVal\" : 632287357,\n      \"fpVal\" : 1.7540779212245775E308,\n      \"stringVal\" : \"hn19j4s8ltsg0xj505990d2x5rvutecy8r\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 522426447,\n      \"fpVal\" : 1.252504484513591E307,\n      \"stringVal\" : \"efpg76038myni6qlw9gvmjwdyrb1m2n29xdzsvs452j4g44yrd1dcm5mtixxvfz4gig9\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1307212983,\n      \"fpVal\" : 9.31985905781461E306,\n      \"stringVal\" : \"3ni9iu7kf2llqblf6zdtbt5u2nrip5g6t9b1yed2ftb1kgp9lg3ccrezedkyubl03pvc5idjg7g6\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1500428873,\n      \"fpVal\" : 4.818078738321031E307,\n      \"stringVal\" : \"kdjg1mkpy9t3dtf3m7jnmmjce9zlahf56223brhjragy8qmm8jrsnpmvl5t6zdfrgn8zhcc2231rvh79xeg0qmpz4l4sp0qrvg1chu7f6mb2reiu3\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd8a75c3-581e-47c4-9f9e-bce90d817b1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.916338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.dataPointChanges.list",
          "schema" : {
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source with data point changes.",
                "type" : "string"
              },
              "deletedDataPoint" : {
                "description" : "Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "insertedDataPoint" : {
                "description" : "Inserted data points for the user.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b9e6c7fa-d631-4645-a5d5-2349060c8d5b",
    "name" : "Updates the specified data source. The dataStreamId, dataType, type, dataStreamN...",
    "request" : {
      "urlPath" : "/oq3g/dataSources/123b",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Mrs. Una Barrows\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/705757\",\n    \"name\" : \"Michal Anderson IV\",\n    \"packageName\" : \"Miss Ervin Erdman\",\n    \"version\" : \"f2l8uw68r3vubq4649ub46mua48fzpjkk8c8xo0pz2s7jyoq73ce2qdi04rq4pxaxipow2jag1vad5967fwkfbkn40ntcyw1ydmxg2rhh68hhpeyednwns3xcajjc5zv7386c2hiko3bp8h225q3ky1kucj0ipjer6srwclvjjxlzzyp38fwk17v3dmd0bbnb1\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatList\",\n      \"name\" : \"Vernon Weber\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Jayme Lebsack\"\n  },\n  \"name\" : \"Makeda Daniel\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureEsh2002\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"v2fg\",\n    \"model\" : \"tdtql46rw9bp1394nr0pkuabeq2nylsaz6e5wifasew2x3dnb65jarikxr87bxu7au0rrvvd9kqyoodj68hhiyshlq28mglv1lez19328mdu46xnvzv17n2w8018r6oxmk2zqyizgkb2c1y0z7thl2zojwzhzro9iryt6k4sn4vp\",\n    \"type\" : \"scale\",\n    \"version\" : \"uqelyot99trmo9g03u2pqie1x783op3utit64s59orw1k1\",\n    \"manufacturer\" : \"qpeit822fl3b8pz\"\n  },\n  \"dataStreamId\" : \"h1r1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9e6c7fa-d631-4645-a5d5-2349060c8d5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.909487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.update",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d199a3da-a442-4fe9-8f0f-afafc026da84",
    "name" : "Returns the specified data source.",
    "request" : {
      "urlPath" : "/4wjr/dataSources/stj9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Laquanda Gleason\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/531064\",\n    \"name\" : \"Avelina Muller\",\n    \"packageName\" : \"Melida Wiegand\",\n    \"version\" : \"bgzwe259um1h1d9udc1enjf3qzn1ed9rvf1xp898ykexluw9qt463i9yy03807xpvjhpztmcco9kj6yvae2nr2iu5pv1gr91nurwn9sq188c9esz73xt\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatList\",\n      \"name\" : \"Andres Predovic\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Cara Bode Sr.\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Polly Kertzmann V\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Barrett Thompson\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Hilary Bashirian I\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Adrianne Stracke DDS\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Anja Brakus\"\n  },\n  \"name\" : \"Donita Heller\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2010\", \"dataQualityUnknown\", \"dataQualityUnknown\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodGlucoseIso151972013\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"mtz9\",\n    \"model\" : \"vuxz\",\n    \"type\" : \"tablet\",\n    \"version\" : \"ldg0m6mt2dxi9uo54b6n0yt4s6j658m4ck84dajcfn4tr6l9f3tmwjgqvvh2qfkffrk77fmllc8988yrvyfopskqqj1ol15p639cv1klw6a7doj26pc7qhxkzghqxkn71om8apxfpe22efwwvaydopreo4tbfk0dlbck\",\n    \"manufacturer\" : \"1qepr6ykxhki71exmr42pvcbbomd4hugvwzxv6gja465ndd8osscg8bx40k5p1fhu0zxbeyt5x966q56lc2c34lc90hry97el20epeh59edcilmsoo1us2ef95xpjwieduo3fn80j5ivpxwq64nmhn0utfwigatzyv8c7cvdq7f71u4fawq\"\n  },\n  \"dataStreamId\" : \"rv87\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d199a3da-a442-4fe9-8f0f-afafc026da84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.908399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.get",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "93a9c3aa-7e3c-41f0-a778-84e9d109be8c",
    "name" : "Deletes the specified data source. The request will fail if the data source cont...",
    "request" : {
      "urlPath" : "/i1nt/dataSources/hk3l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Emerson Nader\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/009977\",\n    \"name\" : \"Shaniqua Goldner\",\n    \"packageName\" : \"Maria Haley\",\n    \"version\" : \"pp53mis032sym1q1q6ry7q6phb41edyk\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"blob\",\n      \"name\" : \"Kenton Kovacek\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Tracy Quitzon\"\n  },\n  \"name\" : \"Yon Rau III\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsBB\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"66a0\",\n    \"model\" : \"7d3tqijrbzm1blqv6j45f2c9qv3969g2isftjyk3p4j4wot0pf974iyz93yd4akkzts1bazganyhv8uct2eb23zpp71znih3ike9gyvkq5z5i9r819q4t34kqsxzv5mk0rtxdqxmmmy7tb2bo7270cg\",\n    \"type\" : \"watch\",\n    \"version\" : \"65k5bwao38wu7lcuhzdc\",\n    \"manufacturer\" : \"bbzv92x3o0iuovudn4exs6fanu9f5mbamlnkre26jpilui4gcvv8h3rk5evnkg0bnmibdr58uwiih0m\"\n  },\n  \"dataStreamId\" : \"ex2y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93a9c3aa-7e3c-41f0-a778-84e9d109be8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.907063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.delete",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "3f80d02b-7a94-4858-9d68-6eb19be04394",
    "name" : "Creates a new data source that is unique across all data sources belonging to th...",
    "request" : {
      "urlPath" : "/2732/dataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Colin Breitenberg Sr.\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/871121\",\n    \"name\" : \"Mirta Armstrong\",\n    \"packageName\" : \"Enola Abshire\",\n    \"version\" : \"nnjok3ub4gr9gmfi8pafep2xoqe572hl5x05isenz0p0qa79mgp2681vvordvf0csyy0mvc482ib1pfmy8rzu77l34sgr0s06m5myigzjhmmu699s9to04eu96fw7q9o5g6bw3aj27clt2au5ae5xtx2rupaq8c48hl6upjpvxcz6j7mocfwhdsiojhaemzxkdd5gw1\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatList\",\n      \"name\" : \"Joseph Ryan DDS\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Bennie Wisozk\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Lisha Flatley DDS\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Fredric Jacobs\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Skye Boehm DDS\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Leeanna Sawayn DDS\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Max King\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Johnnie Dach\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Lennie Windler\"\n  },\n  \"name\" : \"Mr. Erminia Gutkowski\",\n  \"dataQualityStandard\" : [ \"dataQualityUnknown\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodGlucoseIso151972013\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"x7k0\",\n    \"model\" : \"yyg8gaahmmcf3yr2zceihlx7kwbrgc6q75ctauobyqvwk02312hb4nkuaxabvem2iqr2nztvugebltk3brkmgkr6xziac9b89p\",\n    \"type\" : \"phone\",\n    \"version\" : \"12wu5sp9lrlld96j2rwq7f069xqv9hlcynnzd3k5ab5cobm9cr7gyz4fqmkb7d1u7gnaaazgfqa19iyu0j1mu7a0tnm\",\n    \"manufacturer\" : \"ecczl97jwbxzh0n0xunn70eh60isbnrb1e070evy\"\n  },\n  \"dataStreamId\" : \"i7s9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f80d02b-7a94-4858-9d68-6eb19be04394",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.906026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.create",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7d1b75ca-c3bc-489b-8240-5c8e5bf242a2",
    "name" : "Lists all data sources that are visible to the developer, using the OAuth scopes...",
    "request" : {
      "urlPath" : "/348c/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSource\" : [ {\n    \"dataStreamName\" : \"Krysta Cummings DVM\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/351376\",\n      \"name\" : \"Ellena Schmidt Jr.\",\n      \"packageName\" : \"Bill Kirlin\",\n      \"version\" : \"jm6vzewtfgdcqlheb9dni9imf747qj31jy18it4ff3zyzc4r30wm3cf14f4qb4wu0c73uobuemlewdc17uxek5hwh1pip1rew8jhp0xav3vbcvg13lbey196849f8ixbd2fhntgjfw2msbwf2cdbcbab3k2652uncvejyahse8c\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"blob\",\n        \"name\" : \"Errol Russel\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Faustina Moen\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Mr. Lucina Lebsack\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Ernestina Haley\"\n    },\n    \"name\" : \"Boris Olson IV\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBA\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"c90d\",\n      \"model\" : \"rvmxkn49myoc3orl2c1868qiaftazjombid232eakq1rehur92xmlxvmhw97\",\n      \"type\" : \"phone\",\n      \"version\" : \"3wstt99jk3y6z50o1rvp972ej1rac8hzu28xmbovrbir4i034iwjtg3suoxs1j9o1mbyi2dtje2ii1sjvtez7dp4bk8d8667al402117nsh382nmwgziawkxj9ci76wcr2ryepk0za0qz0eips5kiasv8whn7t97qhp5tip4bvxi7l164c3hh8oa8t8r7\",\n      \"manufacturer\" : \"d3jqy0pdfyleelfz8m0nyc9qv1tugu8x\"\n    },\n    \"dataStreamId\" : \"u14x\"\n  }, {\n    \"dataStreamName\" : \"Lucio Johnston I\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/658466\",\n      \"name\" : \"Stanford Nitzsche IV\",\n      \"packageName\" : \"Robby Kuhlman\",\n      \"version\" : \"w1dr70yamx72sczcyixehb54s6r6yserynlwwtqod4htkukcvn7ht7xitqb5hir5i\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Teodoro Fay\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Lester Schulist\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Dr. Marcellus Kling\"\n    },\n    \"name\" : \"Emmett Beier\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureBhsBB\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"1k46\",\n      \"model\" : \"30b5vqs8jgjejnfh3x\",\n      \"type\" : \"smartDisplay\",\n      \"version\" : \"4pu6z99nk2qf1etfibmpl1sa4k3x57nyatvwoe92qs20bx22gca5vj4e9ned335q6s8c8ysyf5wot38w65m1u1pxfa1t7ov3a8fhcs4xac9qcwbwya28kc\",\n      \"manufacturer\" : \"qrflh2f82co2m76\"\n    },\n    \"dataStreamId\" : \"888x\"\n  }, {\n    \"dataStreamName\" : \"Raquel Heathcote\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/584387\",\n      \"name\" : \"Nell Torp DVM\",\n      \"packageName\" : \"Felicidad Emmerich\",\n      \"version\" : \"mih6xwgrwwvh5b3mvb11w3djl4rscalmey9nnh9rvrxin3ovpfgnh0guyavnlubn0ug7yf4fnusjwcpul8067jjblwqcyqjbiub2vx5qqrkpn00oeb6usaudekvfsinyfy4w94zl6wrjpsiwodh0leyatg7gvd\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Chong Senger\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Marta Grimes\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Savanna Hagenes\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Lenna McKenzie\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Ms. Tena Gottlieb\"\n    },\n    \"name\" : \"Brett Ziemann DDS\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureAami\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"av32\",\n      \"model\" : \"6cr9volukybj6u49yb9dmiyakdq99l12rf0a25vtuhq8icp1yxdiuf43i9m32ievje0j989dh06gmwzzfgfkw4gcuwcny3n0erpb3gt4z7nxjzv8hh7vn1zl3pd28pvmgwqy4q0ctbuvj1ksruponmdqv8avsfb5g3qh5y\",\n      \"type\" : \"smartDisplay\",\n      \"version\" : \"fq1u9ov5p7whnndjfkvmey2m09uuz041ft1x0ubttz0q7xdl9qtrz2ahuedjrjl5xfa209c1cbzhvpfo7kt8kx1j69vhwmp4v8rg3xixxijyy8zswkwcxcj6xqa36i2isbprzvl0oapm45i4gd2rietilh0d0ivuqesni66f29pjw9aldijp3bihiqvb0i4xdrwknzki\",\n      \"manufacturer\" : \"jckmmznbddljbs2zazt9ig9rmipemas0h6pievgm4ix1tfecjtvxppn5qdiqilyrcucgjnnka68g4alvgzg5bwph29\"\n    },\n    \"dataStreamId\" : \"jq7x\"\n  }, {\n    \"dataStreamName\" : \"Shenika Simonis III\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/767022\",\n      \"name\" : \"Rivka Price V\",\n      \"packageName\" : \"Miss Thad Hermann\",\n      \"version\" : \"iy9y7dhwidfgdjkr7e3opu4ytou8cwd4wtscrvz933ovzkxjlh7cqta3oap6j704bp9nu8hkt3cgexvtm0y3ckp936tv8vq1wonggzmxy79s2qeijfklw07ymf253xjf5gb\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"floatList\",\n        \"name\" : \"Jae Crooks I\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Cammie Zboncak\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Duncan Koss\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Mandie Brakus\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Shayne Ortiz\"\n    },\n    \"name\" : \"Mrs. Wilbert Champlin\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureBhsAA\", \"dataQualityUnknown\", \"dataQualityBloodGlucoseIso151972013\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"8f6j\",\n      \"model\" : \"igpg3tmq91t8njkfu3k5ynf98yxen5bblv9pab4qpt9xiy98vpyt3yjpl39bzy95qhq6phk8fay\",\n      \"type\" : \"unknown\",\n      \"version\" : \"1c6pzh\",\n      \"manufacturer\" : \"j82bo9tcs4jg1vy7o8jzwxd7zj8flvhxq8627rcvdezgulmaoj6ag3ad8fbnq5p0dfrt1bban6ikrmvuv1yddy118kr\"\n    },\n    \"dataStreamId\" : \"80r7\"\n  }, {\n    \"dataStreamName\" : \"Michael Champlin\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/954860\",\n      \"name\" : \"Melisa Kshlerin\",\n      \"packageName\" : \"Mrs. Francie Skiles\",\n      \"version\" : \"6bonqy6zgn1hpovszllacc2lmjtkb89hkmy760upobyxkbcb0f3y5t1twxco65bu2vw7cl6ntgxya8lbfriw6qxv1bv75rkv8c3ka6wyzcwsok2x9n9c9221t5t1z6mfafise2h2u52ru63dl9h\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Johanne Olson\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Wesley Hettinger PhD\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Samatha Gutkowski\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Cedrick Streich V\"\n    },\n    \"name\" : \"Delsie West\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureAami\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2010\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"r3f7\",\n      \"model\" : \"vn5abdvtnebml4iaf3gm55drzxho67cfo17exwme1v773e8ogblq6p9085b17y0\",\n      \"type\" : \"phone\",\n      \"version\" : \"bkhxooepuo3wohjkhgqqocz4xh3iw7w499qerl2b9sgxfgjd9qc7b2zo1es\",\n      \"manufacturer\" : \"rj2e9zlzs1g5b5ezowdshiqxl5jwy9ue28aovh9mm8x6901rhq18e5ndk0spcsdzpvj312fhsm4tzsaxju3cdbe43uxgs6dksrctb0l033n3mpx5jjskeqk5bit3vswkxlppc7wsyu5hegqe4n88\"\n    },\n    \"dataStreamId\" : \"hzp4\"\n  }, {\n    \"dataStreamName\" : \"Jenell Ruecker\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/866139\",\n      \"name\" : \"Chan Boehm\",\n      \"packageName\" : \"Greta Franecki\",\n      \"version\" : \"zyhvc0m80bzmppj45s\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"floatList\",\n        \"name\" : \"Delcie Marvin\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Keith Harris\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Olivia Kozey\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Orlando Kub I\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Moshe Rohan\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Vince Marquardt\"\n    },\n    \"name\" : \"Fritz Beatty\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureAami\", \"dataQualityUnknown\", \"dataQualityBloodPressureAami\", \"dataQualityBloodGlucoseIso151972003\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"fc9l\",\n      \"model\" : \"uxnkg43kpiyflnkemlyslpbahttdls2lj7tk6ul12n4c1j44mb9fh1o5p1e72fmzkzsbdh5j3fs1a4kfg2l\",\n      \"type\" : \"phone\",\n      \"version\" : \"xhqt77ikgwh2bwo235qd0x8rg8v4jlmmb04tb33aaej9fgm\",\n      \"manufacturer\" : \"52lwgcs04ij4h2mneohjj67snlhisirozn24p1sr57sytxa7iq1qf897a35vvtifk1rspal0g3\"\n    },\n    \"dataStreamId\" : \"g5di\"\n  }, {\n    \"dataStreamName\" : \"Miss Isaias Brekke\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/324925\",\n      \"name\" : \"Janel Haag\",\n      \"packageName\" : \"Juan Herzog\",\n      \"version\" : \"0njqml292zcy1x63u8l1yc0f1hakxnxjk99xgevainakrkzl7pl3o17f73zgbexubfsf3dydrh2n6brmxp8sljq0w5374a5fiudqqaeo078nzlp0mreqf2l9gak9xoaex1eqlvc13johp0eh48zk0h34ayczdj4r4bcitqvumcyg85daw2gzvpwzwdt5hs61qfn\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integerList\",\n        \"name\" : \"Cathie Halvorson\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Sanford Boyer\"\n    },\n    \"name\" : \"Dewitt Leannon\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2010\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"5kx9\",\n      \"model\" : \"2vv6f9jzaci5dmv5m5m5o3faehpknute69ew8rjx1r0zcf5\",\n      \"type\" : \"scale\",\n      \"version\" : \"neuihoegyhlnvkock5fi0nsf5jtwqbolv4dbj8kdx8nddxzb1gn8oczhsvo45gjsa0kljeov8d8oydvocdedeom5hfmbmn04a4fiepkmtthobn2ndqf04brbin42567jaiv44mmajusioo1nddaqjmohaf9khprap9nid8nmy6xk0nkuec\",\n      \"manufacturer\" : \"bgc55424k8r6sfazlq400agsrnxfg239mviewg2c\"\n    },\n    \"dataStreamId\" : \"5f0p\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d1b75ca-c3bc-489b-8240-5c8e5bf242a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:35.904576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.list",
          "schema" : {
            "properties" : {
              "dataSource" : {
                "description" : "A previously created data source.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  } ]
}