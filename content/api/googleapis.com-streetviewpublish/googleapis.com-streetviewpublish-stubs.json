{
  "mappings" : [ {
    "id" : "26158d0c-371b-4c83-9449-2b12409bbfc1",
    "name" : "Updates the metadata of Photos, such as pose, place association, connections, et...",
    "request" : {
      "urlPath" : "/v1/photos:batchUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n      \"captureTime\" : \"2022-11-30T05:58:32.134422Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-01T08:42:32.13447Z\",\n        \"altitude\" : 8.27785692457724E307,\n        \"accuracyMeters\" : 1.2131830110817612E38,\n        \"latLngPair\" : {\n          \"latitude\" : 3.0657163417861736E307,\n          \"longitude\" : 3.545575230860995E307\n        },\n        \"heading\" : 3.1197633421128384E305,\n        \"level\" : {\n          \"number\" : 1.1154728990569478E308,\n          \"name\" : \"Beatty\"\n        },\n        \"roll\" : 5.799802565351736E307,\n        \"pitch\" : 9.244926716646737E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/139965\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/018810\"\n      },\n      \"photoId\" : {\n        \"id\" : \"gp0q\"\n      },\n      \"shareLink\" : \"yhwk8kpjxeksjpr93ok8grwkd3rgo5grnpcjy1dpf49xo5mjc7dh1m6xd53j23bowmzaruxxzjmsdqukzd7p3jqtgudvz5y7\",\n      \"uploadTime\" : \"2022-10-30T06:41:32.134885Z\",\n      \"places\" : [ {\n        \"name\" : \"Juan Leannon\",\n        \"placeId\" : \"v259\",\n        \"languageCode\" : \"nlrlt39esxazlgcfka65se48ckrhl5unhfkii9exobedlp177qmpkw4vhemppnntmq5n6vb4fe6otag02xkxw6unb8k1qrw6o2hxko0ai3emtvf5tf77e3bgvu89umf5xi4gm0x8c6bppkwvc7cokstjkzj1zquu8vfwe0mpp2x3s1i5wyik7a6zbz81i9ouppqh5m7\"\n      }, {\n        \"name\" : \"Beverley Tremblay\",\n        \"placeId\" : \"v054\",\n        \"languageCode\" : \"yncricqe2hkyl71tcjqzinqtv7ix4gbwbys8j2lbc30px7kiuy0v4usr8uv7xwbkiz2houdzk7k9iolp3\"\n      }, {\n        \"name\" : \"Dudley Lindgren\",\n        \"placeId\" : \"z6x1\",\n        \"languageCode\" : \"ec1aqlecrg6qerjipvazxz67qx2r7t6btoitic13jb4i3xq66l3be8te9ktmp07u3ccotd533voqkvsuq0zvtmgm07vxn1g8d0ngql2n9l65f592n2i0jkufxstrww5zacfdujq2fzigbmktay0wzgzgpc0x8578cholz8qg6bsxorul3kpfls8rsgimsbmr1tum8s9\"\n      }, {\n        \"name\" : \"Nicholas Denesik\",\n        \"placeId\" : \"j9we\",\n        \"languageCode\" : \"ftnlggjyfb04dr74oj\"\n      }, {\n        \"name\" : \"Mrs. Effie Reinger\",\n        \"placeId\" : \"r8n9\",\n        \"languageCode\" : \"z4j3okrqmoosqoji43cwa4yzlmoo6rjpoc5gxlsar1tp5rhre4ybzibis6hitjlq3yb3vtiz80je80l5gxazxmrewuha3esfya2g0mlx5vzxdyvxwxlaqwymr8tybsabw0q3orinr8kcaxbm91ap0go3o2lsitlu\"\n      }, {\n        \"name\" : \"Rob Kuhn\",\n        \"placeId\" : \"bjg2\",\n        \"languageCode\" : \"r6tijafogh99ge3ze6rfo2yc3ajfumm30ia0eyk9c\"\n      }, {\n        \"name\" : \"Dr. Christinia Herzog\",\n        \"placeId\" : \"v2o4\",\n        \"languageCode\" : \"m3yj26rtmeq1c1240s4pqj3xz4ksfsvb4vens3cqxo5ua0gz2qcnohh5zvvxdzokn46jzoke5ea058hums9mmth2dztpedkyusdbglt1ryzredm5t2csid0n3h2swj4ih6h35vizu9scl\"\n      } ],\n      \"viewCount\" : \"300t152kjdb8cg03hsd51hpc7dg3kr20x804ln6ffm0ksbiww4gmssm832xlt7jyiqtczbc396ep7sv7poo5nqbqnsp2gfdbgkf7l0lk0bpbekgzgvrev71bqud2wc20245f5v6a4qmbxjlyi8x2cc92sck\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/866417\"\n    },\n    \"status\" : {\n      \"code\" : 200758250,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem in repellendus et iure accusamus et. Magnam magni quia sit ex ut. Ut aut vero dolorem nemo. Delectus voluptatem molestiae ad et voluptate. Veniam harum odit.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-09-10T06:07:32.136378Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-03-27T07:15:32.136421Z\",\n        \"altitude\" : 1.3130399039966505E308,\n        \"accuracyMeters\" : 8.368576459271685E37,\n        \"latLngPair\" : {\n          \"latitude\" : 1.9974802106181222E307,\n          \"longitude\" : 1.3765945277467161E308\n        },\n        \"heading\" : 1.5878863025604345E308,\n        \"level\" : {\n          \"number\" : 1.050363463987369E308,\n          \"name\" : \"Schamberger\"\n        },\n        \"roll\" : 1.4791409494490623E308,\n        \"pitch\" : 5.207802460934073E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/211956\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/851397\"\n      },\n      \"photoId\" : {\n        \"id\" : \"5ck9\"\n      },\n      \"shareLink\" : \"xtmtm2o8gna8mtxvgkawirrywcmnf2lrcsqc1hb1gzu6ktjo33nxv94jtjzmbzi7pk44zzsz79qcn5cnz4zigzmb0sxelt1zl383hffd3b0g2chgs2z7eqc94wk3xd028east9l99asfk2\",\n      \"uploadTime\" : \"2022-10-28T08:33:32.136915Z\",\n      \"places\" : [ {\n        \"name\" : \"Neida Keebler\",\n        \"placeId\" : \"gch9\",\n        \"languageCode\" : \"t9q8mebz6nues9ax0t7lumc7wt8zpnr1daqvx4jqndo83kf7xbzd2wucmve4d57rbtmwjgchfwf812amdddkzerux7vp2sj7isri2w3jlegnpro\"\n      }, {\n        \"name\" : \"Gail Schmitt Jr.\",\n        \"placeId\" : \"z8cb\",\n        \"languageCode\" : \"9wz7pfbt44pyh5x6btzu3b5\"\n      } ],\n      \"viewCount\" : \"2sxzzw9vl02udwgm2y804tn9oguyw3r5\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/239584\"\n    },\n    \"status\" : {\n      \"code\" : 1477563641,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Aperiam et consequatur rerum eius sed aut. Voluptates hic nulla sit quibusdam. Et mollitia vitae nihil accusantium minima. Nulla temporibus et repudiandae odio autem ex.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-05-05T06:08:32.137678Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-08T09:08:32.137731Z\",\n        \"altitude\" : 1.548847524181241E307,\n        \"accuracyMeters\" : 3.134003567619861E38,\n        \"latLngPair\" : {\n          \"latitude\" : 7.060888576946337E307,\n          \"longitude\" : 2.0313297379481556E307\n        },\n        \"heading\" : 3.707664615753165E307,\n        \"level\" : {\n          \"number\" : 1.4687151674315579E308,\n          \"name\" : \"Emard\"\n        },\n        \"roll\" : 3.085809150843712E307,\n        \"pitch\" : 5.55133752797551E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/453529\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/301795\"\n      },\n      \"photoId\" : {\n        \"id\" : \"u400\"\n      },\n      \"shareLink\" : \"6l1nohoup7dfxxfaqu738m5fhd9usgqti4xs3cta3pmmb3g6rv6fm0ovnubv6d4dlgcr5izfynbaebg4xgqt3un62407ovnmaez2vlf1gb4gkn\",\n      \"uploadTime\" : \"2023-01-02T07:05:32.13832Z\",\n      \"places\" : [ {\n        \"name\" : \"Amparo Powlowski\",\n        \"placeId\" : \"w3fe\",\n        \"languageCode\" : \"zw2g6qfhi8j23pg846lapvci652m6bj0ywmez29csuh80ulsksawooyjkdoofqeuw9e52mww6xo7v5x1qwdsbc82w44gphvbyl966qlntl75odn3we94xypjqerb7clfjug7c33mcaextfpy0mfi7729n0ko3qfxfi6fbl0168q4425p106dhuohhs8zn4\"\n      }, {\n        \"name\" : \"Claudio Pollich\",\n        \"placeId\" : \"x3j6\",\n        \"languageCode\" : \"9kpxu9zo8sy1yz8wil1zfwjb95k\"\n      }, {\n        \"name\" : \"Dalton Tremblay Sr.\",\n        \"placeId\" : \"vq97\",\n        \"languageCode\" : \"qwbg3hobxfxp4bnzw2qvgc3hgjt06fz2yr1qibtwq1x0znilvjzdivctoseznx6szwi548kh1vlscct\"\n      }, {\n        \"name\" : \"Isabelle Berge DVM\",\n        \"placeId\" : \"97cg\",\n        \"languageCode\" : \"zy01m1jy2dwmqfgxfjmkg6kxpwd301yvdc8wv6mx8ixrz9kd11prfztl2271tkn5k3aw9on8d4chlxe936njcvhcgi68d27u5aqbz4w05w308v18x56ew7cxznezktaewq86hct0fip3kkdruvcy2d1oyvileoomsvwh4uuk\"\n      }, {\n        \"name\" : \"Stephany McLaughlin\",\n        \"placeId\" : \"trzd\",\n        \"languageCode\" : \"u95xy1ehd02a1sg\"\n      } ],\n      \"viewCount\" : \"9tbixrxw5a00k44d63bvin0ng7z\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/058229\"\n    },\n    \"status\" : {\n      \"code\" : 1597804194,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Molestiae tempora recusandae ex alias eos molestiae laboriosam. Quasi sunt non commodi. Omnis suscipit quia.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2022-06-12T06:23:32.139424Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-08-23T06:57:32.139472Z\",\n        \"altitude\" : 7.363909008875781E307,\n        \"accuracyMeters\" : 1.7758278116112185E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.7740830555695155E308,\n          \"longitude\" : 7.238712594522679E307\n        },\n        \"heading\" : 1.732223320890212E308,\n        \"level\" : {\n          \"number\" : 7.372470699730267E307,\n          \"name\" : \"Mann\"\n        },\n        \"roll\" : 2.9109407097878343E307,\n        \"pitch\" : 1.1496798796396948E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/370169\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/669938\"\n      },\n      \"photoId\" : {\n        \"id\" : \"gclh\"\n      },\n      \"shareLink\" : \"8yvemc1u1x3qy2i4cvhtnv0qdr4ghpbkc1x7dzge0sh6ccmxjhkd7xcei6qsmitfrfkbehr8lj5e9dl6bjyhno1vyqcgctmj\",\n      \"uploadTime\" : \"2023-02-02T06:28:32.139983Z\",\n      \"places\" : [ {\n        \"name\" : \"Bula Beer\",\n        \"placeId\" : \"j52i\",\n        \"languageCode\" : \"r9iln3ca3dltvrdtd2954ahfsz239akbx6bnb6tq6v4fkpaugarnykqqu00ii16w6uz7nwrdkcy\"\n      }, {\n        \"name\" : \"Cary Becker\",\n        \"placeId\" : \"yupa\",\n        \"languageCode\" : \"fad8p9iuz70idc813mmcd6sne9gqsn8zpdf62nvvtdmatzm7pxz6glj2zf89piqjshzgoqpdu44b3gmfnizpl2tcx9k8hunrpphuhbwj15gxabis46zr4u1gbimu81omzl9s74vyb3sbawgm58k2xloa26kmedhg32fxxmmxcfa6bg85\"\n      }, {\n        \"name\" : \"Rosanne Veum\",\n        \"placeId\" : \"72d8\",\n        \"languageCode\" : \"5sgzq1sr8gn3it1xybjkatdqu3xn70dqa9p87qoc0thged9nojc8orecisxdmulpqrbm2nb3hzdpd66p2fd1wx1ek0ukaww6kdb6ua62pzy0q60yyh8mkqtds5a5ubqda8v9bqou1py7yk7b2m33geexlxnmalad6c1lpfi9mph4csy4sidwaxip5tv5vkp7ppc\"\n      } ],\n      \"viewCount\" : \"ybdpp7qhdg4fky6l1s6ny7uyfe1413sj24rmsas6dbv3f7939wzwbqp56tl\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/479072\"\n    },\n    \"status\" : {\n      \"code\" : 1177483869,\n      \"details\" : [ { } ],\n      \"message\" : \"Harum nulla adipisci quaerat blanditiis at quisquam. Optio numquam enim reprehenderit. Iusto minima asperiores beatae magnam dicta. Voluptatum nihil ab repudiandae facilis dolorem.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-09-05T06:02:32.142212Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-02T08:09:32.142266Z\",\n        \"altitude\" : 1.978951633791887E307,\n        \"accuracyMeters\" : 6.147479487258647E36,\n        \"latLngPair\" : {\n          \"latitude\" : 1.6296962760654856E308,\n          \"longitude\" : 6.284287776069299E307\n        },\n        \"heading\" : 1.3777281603195923E308,\n        \"level\" : {\n          \"number\" : 8.552761006723375E306,\n          \"name\" : \"Fay\"\n        },\n        \"roll\" : 6.736459209780704E307,\n        \"pitch\" : 4.573294606441229E306\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/436073\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/397091\"\n      },\n      \"photoId\" : {\n        \"id\" : \"y765\"\n      },\n      \"shareLink\" : \"vi03sgc1y133p0hg9akzopqcdizr1v90x2ltidbplaym7f6vyc3gnanyqo1i0fhao38tmawp6i4r4viut97ok716ki4ivz24o1l2mijl0omuqjyyeeabd7\",\n      \"uploadTime\" : \"2022-06-23T08:25:32.142699Z\",\n      \"places\" : [ {\n        \"name\" : \"Laverna Feeney\",\n        \"placeId\" : \"4833\",\n        \"languageCode\" : \"x3fpe4xguheeyftj32wdo1vvuqe3lzxfs4i8ehrahxnxktlo4v4rn65qaixhhp62p1fa16t8m9m7q4dt8kuy3gg7dw9d626e6p8b3svpcyzdonler8ol0llprkgzqy4l7dzaphctgbqjugio9xk6zcz1y3b28gd3e8m95qgtehi992vih4v73we9\"\n      }, {\n        \"name\" : \"Bud Kutch\",\n        \"placeId\" : \"j8zo\",\n        \"languageCode\" : \"ny96qak450nx51g9rn9zbqoakiawx8hzzb202rhoq5p4o7k5h8hxr3jpy7ty32ea1gfk46xzjk3oxnb8t6\"\n      }, {\n        \"name\" : \"Lynnette Wuckert\",\n        \"placeId\" : \"a95h\",\n        \"languageCode\" : \"or364zo6tgtiw52ss0hhfoxep5qd361tz4d5vb4xcmlui08w9q53jdxnd05akrhb9qi80559aetoannqgq9giesf2fnykktit77oyygq8m10cw1i7vucrqz3anzuhfy48o699ok9i3audh6dzzti8j1yn3o2emr49jkatlhtj0e9\"\n      }, {\n        \"name\" : \"Mr. Noemi Johnson\",\n        \"placeId\" : \"2a76\",\n        \"languageCode\" : \"v28v2j4vnxc81tuu2a3phdlb9wcrju15olj8ca7szu3xz3fd5heclf8m5aprpvls6q6jy3w7saruuso4nsysuo7b10w92pa42rs1zqmu5rn61czbxqr519rxy2fpqc9n7qe19esw7jgymm62erzyaaf730fit3l0ejw8zpfcwaadwrc577s8x3jrlvvsi7yi501aolg4\"\n      }, {\n        \"name\" : \"Fredericka Jaskolski\",\n        \"placeId\" : \"8017\",\n        \"languageCode\" : \"oc1lfysh2hn5q2we7bdvjq8yapo1r8m8aj9bdm9x2ovt824aup3q1r9gtcsqous6b2v52mn76axelc\"\n      }, {\n        \"name\" : \"Rosamond Daugherty\",\n        \"placeId\" : \"nv53\",\n        \"languageCode\" : \"bhvf9z2y6eriiih18ac082hs3s7fmx1k1oklj7pb4ecr6sb3dsfh6d05z3onmjubvvpdz2d1zt2fym5dks3lwp7mqwc4ee9so0uqdrsymk12p4edxj11buznrib9cc56lrb2lcuka7or6a2df31ta7v1fu4sz3n565zvf4quz91\"\n      } ],\n      \"viewCount\" : \"z19n17gb5ia0shqws6ow8njhqqi9dvi352e43f2k2ja5o4z7jwg5zvisxbqlm5l21z6eoctdehwhby125cydm2h8r2amwkgy3a0xzbxm16nedmj2vo0l1xg2jj2un74y243u3z6q63gmi\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/954348\"\n    },\n    \"status\" : {\n      \"code\" : 1513877098,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Cumque est sint. Aspernatur pariatur porro sequi esse a alias. Corrupti dolorem quidem qui dolorem. Excepturi laboriosam ut nam commodi eveniet.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26158d0c-371b-4c83-9449-2b12409bbfc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.145013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchUpdate",
          "schema" : {
            "description" : "Response to batch update of metadata of one or more Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo updated, in the same order as the request.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d9e7e50d-100e-4d6a-a376-13e09e31fb35",
    "name" : "Gets the metadata of the specified Photo batch. Note that if BatchGetPhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"REJECTED\",\n      \"captureTime\" : \"2022-08-19T07:55:32.121523Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-21T07:22:32.121578Z\",\n        \"altitude\" : 1.3803246104737777E308,\n        \"accuracyMeters\" : 8.911446368490044E37,\n        \"latLngPair\" : {\n          \"latitude\" : 5.945053223081836E307,\n          \"longitude\" : 1.6329797992435129E308\n        },\n        \"heading\" : 7.714016016838309E307,\n        \"level\" : {\n          \"number\" : 1.3408103716997438E308,\n          \"name\" : \"Ferry\"\n        },\n        \"roll\" : 8.151406161061066E307,\n        \"pitch\" : 1.309946446873355E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/203593\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/919208\"\n      },\n      \"photoId\" : {\n        \"id\" : \"7bk5\"\n      },\n      \"shareLink\" : \"g7sazbd9dupy4lurwri6qpgjkgpa38hfahsmr1yroizycnz1z26iow84at9fgwjob29f1z1ovha9mtc5om8irx3igros2tfm01ur14yznkmm0w42ymsetfgno7arwpdd5vqs73yo0qyq164ha7ed4eglaoyewvcap4nf36pb9\",\n      \"uploadTime\" : \"2022-05-14T07:30:32.122028Z\",\n      \"places\" : [ {\n        \"name\" : \"Wen Kirlin\",\n        \"placeId\" : \"58k9\",\n        \"languageCode\" : \"5x8ad79nzqndm9r2mqq6d2m1qeokpoua1cwdeyw5wby8iknps22im7mkha34gz309il1wmwzt62uacigy65rlyoqd9yk6tcuo5eb5euemz\"\n      }, {\n        \"name\" : \"Octavio Moore\",\n        \"placeId\" : \"ks2d\",\n        \"languageCode\" : \"z009crqybxk42katvolv5uqdctzqi751uzato6qj7cwyfuprmav3wrpb06tz75xnis6igntgckgnd6dmb9zvyoer75xx01zbp22pttxwekou4p665p8231dlljffo57rsy65i94x1\"\n      }, {\n        \"name\" : \"Caitlyn Franecki I\",\n        \"placeId\" : \"9k3i\",\n        \"languageCode\" : \"3cqi79o70ipr2y7a016qx9qorll5uuz\"\n      } ],\n      \"viewCount\" : \"jz4yq6w1sbymq2sjkj39e5engx8asqzm3ps0fhsxk9mfhen4qgjnxin8u6qcb3qql1kw5ck5jpgxmiuj1t1fqf94gbslb3rsdkchf52li\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/687909\"\n    },\n    \"status\" : {\n      \"code\" : 805194373,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Voluptatibus molestiae voluptas sapiente. Ut error mollitia explicabo ut incidunt id. Explicabo illum est culpa. Maiores libero explicabo eaque nulla dolores cum in.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-08-12T05:37:32.122861Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-01-16T07:30:32.122908Z\",\n        \"altitude\" : 8.004715276652365E307,\n        \"accuracyMeters\" : 5.448769962804542E37,\n        \"latLngPair\" : {\n          \"latitude\" : 9.152302013580317E307,\n          \"longitude\" : 1.0560954722940178E308\n        },\n        \"heading\" : 1.5564766813089715E308,\n        \"level\" : {\n          \"number\" : 1.8694583105847202E307,\n          \"name\" : \"Stroman\"\n        },\n        \"roll\" : 9.004436385294713E307,\n        \"pitch\" : 1.5021380398551196E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/318855\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/982567\"\n      },\n      \"photoId\" : {\n        \"id\" : \"38wo\"\n      },\n      \"shareLink\" : \"eedp7qiepr8hozj9d06b74gc0xrqedzw90nl20p6v3ka9c0mrndyqbkjw16kq3b4uw0u2wart9keoonix99l85vwt6oyqyn89\",\n      \"uploadTime\" : \"2022-12-08T05:57:32.123307Z\",\n      \"places\" : [ {\n        \"name\" : \"Mr. Fredric Beatty\",\n        \"placeId\" : \"t3b9\",\n        \"languageCode\" : \"rg5cxr1wtr3su7pn7bvlenbi65vrpbacrotm2d3tnz72ncu07va1mu8v4vnhsbewg7g8t84kmzz9eb6o\"\n      } ],\n      \"viewCount\" : \"tctor8y4evbps68w1ud3ngrjtfilliwtlvpfz0rj61hh937y8rhu6\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/573541\"\n    },\n    \"status\" : {\n      \"code\" : 815787444,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Consectetur ex sapiente iste ex et ut maiores. Aut voluptas excepturi dolore. Voluptas ullam vel hic error aspernatur nesciunt odit.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2022-07-10T08:42:32.1238Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-03-01T06:24:32.123856Z\",\n        \"altitude\" : 1.444180903970567E308,\n        \"accuracyMeters\" : 8.44411807304075E37,\n        \"latLngPair\" : {\n          \"latitude\" : 5.480508254323356E307,\n          \"longitude\" : 2.6017730257867846E307\n        },\n        \"heading\" : 3.9161798182425013E307,\n        \"level\" : {\n          \"number\" : 4.809912397217565E307,\n          \"name\" : \"Bode\"\n        },\n        \"roll\" : 1.6274427614619824E308,\n        \"pitch\" : 1.2715264878939985E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/094242\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/501390\"\n      },\n      \"photoId\" : {\n        \"id\" : \"n263\"\n      },\n      \"shareLink\" : \"xq89vav3opus0sqeti8okfms6pbwv0t4msv5ovpgn8zxn4rjc7bl7j2wbqc48ipx7mb027smbghp8c\",\n      \"uploadTime\" : \"2022-04-30T06:07:32.124404Z\",\n      \"places\" : [ {\n        \"name\" : \"Helga Keeling\",\n        \"placeId\" : \"4540\",\n        \"languageCode\" : \"skf9dxbacy0t7fxiq2z0s8erpckk0he5k9jjw03df3rji7fzx2wgu5g8yhj10b14kiun1vx2w52n11yys9iskcxqbxvi3pfpt03wtwnxq1ca4owhkrgvrv6zjw0o4vhfjyjyh13deli\"\n      }, {\n        \"name\" : \"Noble Hegmann\",\n        \"placeId\" : \"101d\",\n        \"languageCode\" : \"s1937ntvfyj4x200kcotz0lsndwtonbg8kemhv0wkl2imxz88gc4ryqjxc25srpss\"\n      }, {\n        \"name\" : \"Dr. Chanell DuBuque\",\n        \"placeId\" : \"c885\",\n        \"languageCode\" : \"18b471h1t2vgdao1mfvtqgck76ycz4zo5mrdl8rgbk53xuwuvh97o85dvfv1vzynp88zrezm7g9jqebg7tuanxt42aft6sqwh2qu9nwb7s7901g6k6ao52gk0w8543a38olwk\"\n      } ],\n      \"viewCount\" : \"hhj0zqigb7p7s6dqj1sz7bc5q5gdnyjuto5ahrni5setvrqqk11nelqq2i5vcue4h\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/549775\"\n    },\n    \"status\" : {\n      \"code\" : 296693766,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quod cupiditate molestiae libero sapiente et nihil itaque. Aut quas rerum numquam deleniti unde. Aliquid non accusamus quia harum delectus ea.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2023-01-18T08:01:32.125422Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-09-22T05:31:32.125472Z\",\n        \"altitude\" : 1.118281997622024E308,\n        \"accuracyMeters\" : 2.44860271080372E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.0329856404850343E308,\n          \"longitude\" : 1.0692987777913918E308\n        },\n        \"heading\" : 1.0187878895088846E307,\n        \"level\" : {\n          \"number\" : 1.2954624130415888E307,\n          \"name\" : \"Feeney\"\n        },\n        \"roll\" : 2.981801702668784E307,\n        \"pitch\" : 1.405320374668199E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/928633\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/879185\"\n      },\n      \"photoId\" : {\n        \"id\" : \"231i\"\n      },\n      \"shareLink\" : \"0fsyciqgrqsiij1kvsz1m9eibaibkjzgr6r3joa2gjdpqxgldz6qz9rrnudxv4w3y2j9fudr2ymmsm4yb1xbz2h2gupmub3p3fax\",\n      \"uploadTime\" : \"2022-09-08T07:15:32.126043Z\",\n      \"places\" : [ {\n        \"name\" : \"Dr. Delena Predovic\",\n        \"placeId\" : \"8j40\",\n        \"languageCode\" : \"7py60vvxxuqp7wusvu4iwfhywebugyeiw8hw84q4lp3bnt2gjcgy2am7r1sfey3m1zzniy2on4hbr09c210m9ju007fo5dwaazr8zobv5qiqrdlmsce95v9dh4fln16sgqim73mbe8efv8kwzhfkqywmmdhgisjvvmcuu\"\n      }, {\n        \"name\" : \"Hugo Lehner III\",\n        \"placeId\" : \"2471\",\n        \"languageCode\" : \"8v33doa1gbc506h16vng0urxkkpvq59jtjyy721ucsrwsycvkkgs2aoum465pmnoq9\"\n      }, {\n        \"name\" : \"Beau Pouros\",\n        \"placeId\" : \"9n37\",\n        \"languageCode\" : \"e7l89cz6ntnhdxisr\"\n      }, {\n        \"name\" : \"Mr. Izola Ortiz\",\n        \"placeId\" : \"b6wu\",\n        \"languageCode\" : \"7pwt077jazz865cinet8lcq8vsvn4m3ajwywqo1bhrkhlbu131q2n8uchroh39i0zdumh7z9dagudxbaggr931jsfva6ub3hbqt3zfdsxjh32795jplmpwxrzumw33q86knjq6px56x44y7k4xcntrd65hbp7x0ft30n9ktrmm9mktttlocdwt6xu8b8ay0\"\n      }, {\n        \"name\" : \"Nilda Kirlin\",\n        \"placeId\" : \"i819\",\n        \"languageCode\" : \"viup0b0ecz5a3esypmq3sw3oyils1cu4ilhr6vrbfjfyabtvqnn23ziai4k096mm5l6c3bzvgl9si75rhn10nqks5u5da4attlelmls92zb1u4iab8jy8j9vbnkfxhjxldo0hrehu7s4unq8n5bo1j6ldnhhirnq\"\n      }, {\n        \"name\" : \"Roger Goyette\",\n        \"placeId\" : \"1fqf\",\n        \"languageCode\" : \"9wam7zavqpevzptgkgagzi0a8kvb3kjfk2l\"\n      }, {\n        \"name\" : \"Candelaria Buckridge\",\n        \"placeId\" : \"q267\",\n        \"languageCode\" : \"2dom5cif8wlg5wpgf0q22h91kbo73ddircg40fd1h0a380vmm4x27h5u7ycrc84aovyrfwgrfrbl0stdbisxuwnix7urhdu1h107wzadiv4xyy41pqhco46nuvnsxizrjzpqco0zd0p0hw02m23n17g3ylm2\"\n      } ],\n      \"viewCount\" : \"lsqwh53l0ec6ux0k8gl8l4netaycpisrsfftbgfmhllg1eljgdanuwo112t577wxunojhg685\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/073072\"\n    },\n    \"status\" : {\n      \"code\" : 80134395,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Earum qui omnis reprehenderit consequuntur nihil. Porro et omnis voluptatum soluta saepe quia necessitatibus. Sed nulla consectetur sint voluptatibus delectus cupiditate rem. Laudantium odit quod aspe\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2023-01-02T08:42:32.128047Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-04-28T07:32:32.128116Z\",\n        \"altitude\" : 6.750774219121935E307,\n        \"accuracyMeters\" : 7.709580773833042E37,\n        \"latLngPair\" : {\n          \"latitude\" : 5.950718845812143E307,\n          \"longitude\" : 1.297541310314408E308\n        },\n        \"heading\" : 1.3262097583032486E308,\n        \"level\" : {\n          \"number\" : 1.1298757277161792E308,\n          \"name\" : \"Jenkins\"\n        },\n        \"roll\" : 2.980193482624042E307,\n        \"pitch\" : 8.066077150503032E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/960004\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/054315\"\n      },\n      \"photoId\" : {\n        \"id\" : \"1415\"\n      },\n      \"shareLink\" : \"zgdnc1bvbfkyzh8d3xzxu3mpev37icgh5ylmvtyag7be49jc1tgn4stjbjstocr3z5p3nfhpm5qb040hxfgpqefpk77xnd64bjtoslm6z47nuoaop8eg44jql236akpuknu63yrsy\",\n      \"uploadTime\" : \"2022-12-07T06:10:32.128751Z\",\n      \"places\" : [ {\n        \"name\" : \"Chae King\",\n        \"placeId\" : \"6t27\",\n        \"languageCode\" : \"m54uvasu6yne01a4q8hejswy2f41e0bzj8wm4rii0ak9b9zj0tharjh5c9dfl\"\n      }, {\n        \"name\" : \"Shawnna Wunsch MD\",\n        \"placeId\" : \"5493\",\n        \"languageCode\" : \"1dnsw1ah34w8fzednvij4czlbgr1rhvhyrnq3m0uu8j1zg1g7ah795r6d0dz2xzikphl2pu775alijolkvozwngph62us2ffim36uao9wm5s\"\n      }, {\n        \"name\" : \"Mr. Genoveva Armstrong\",\n        \"placeId\" : \"9hll\",\n        \"languageCode\" : \"940jk7042bvxzr3tpppyos4jl66ytpdi5ix102ut4gzda3lz2xy8bel45c\"\n      }, {\n        \"name\" : \"Miss Nikki Bartoletti\",\n        \"placeId\" : \"a801\",\n        \"languageCode\" : \"774ybsvno7chzz56i8a1zxcxfufmc2o1jeg9q9kfa7fot1p57jmlron51j8q0rwhm227jfexoefuchjj6ge9unbux8qbw4beku0jurz1qyibyglthg8hd16zakwd1lhlaf49ucbg0ssrzlzj9\"\n      }, {\n        \"name\" : \"Providencia Denesik PhD\",\n        \"placeId\" : \"8zk7\",\n        \"languageCode\" : \"57gan06zzjighi35293lcn3w7f2y3a5efqiv055v0k05p32d2kyg8cu072s3nqao3o28cfxc35kfjjx2lb0fmd2syqb67qcm654nyrwv76ioapzvq6238o9bkgy\"\n      } ],\n      \"viewCount\" : \"5bgzmq5g28nkpdt2he5xio7z9e0rpi5ql52ze8q4psp427eoghyz18digfweimpzjhw1v\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/656197\"\n    },\n    \"status\" : {\n      \"code\" : 430287558,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Officia omnis eveniet. Quibusdam accusamus voluptatibus aut dolorum error eveniet. Officia impedit repellat reprehenderit non. Eum deleniti quibusdam consequatur.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-04-14T05:43:32.130633Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-03-06T08:06:32.130693Z\",\n        \"altitude\" : 1.2134204117227109E308,\n        \"accuracyMeters\" : 3.2150864326411515E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.2919591581163093E308,\n          \"longitude\" : 8.368569599689957E307\n        },\n        \"heading\" : 9.571621588853675E307,\n        \"level\" : {\n          \"number\" : 1.7013266764423947E308,\n          \"name\" : \"Altenwerth\"\n        },\n        \"roll\" : 2.348886985277789E307,\n        \"pitch\" : 1.0744775372943491E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/325370\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/910132\"\n      },\n      \"photoId\" : {\n        \"id\" : \"k5uw\"\n      },\n      \"shareLink\" : \"0fldk0cft29uavotr6nc2n6e4qz7heiy5x3wt4sg2has1h13wdy9xcl756jvndgon52cur0neby00ibflvjdxmuldzs4tqezvzfyvpvgk857gf59cmd1f9tmmh9xswrb0vao01fbwoezo8hv3s5kb8a3ihqmb8yzhlpo8g6f6vd6m8t\",\n      \"uploadTime\" : \"2022-09-22T08:53:32.131789Z\",\n      \"places\" : [ {\n        \"name\" : \"Damon Schulist\",\n        \"placeId\" : \"lh0z\",\n        \"languageCode\" : \"2q2ilwx0n6pwmmmpr8f77x6f94qrgujl1z9gre6a7ze7ul9zirgqekgcz2gfk4his8pu8w2cz8597ik5rzs7exrjkj11is6qcw2aspt9yyqw4zjzfs2kfc4f067dzn1\"\n      } ],\n      \"viewCount\" : \"h3dx6vzwwwrfwv8jlzb4fnyijzp5kl76oijvj6pimmc54o15ks2ga5innsv6caycm6hiexpn8u3ymabfvo1h5r1ogd8wt4k3b71smiqqacd6anq47brdrgky4pe3idcf4hacnlanwksdxu5hgxodokipptozz37dekoqy4uvm1d72gphqaku1k144hi459tdc\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/314497\"\n    },\n    \"status\" : {\n      \"code\" : 684288334,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Et ut ex explicabo reprehenderit quo dolorem debitis. Accusamus dolorem dolore nisi itaque. Quo quis consequatur odio aliquid non. Alias veniam aut excepturi debitis asperiores.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-06-17T08:51:32.132675Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-05-18T07:36:32.132725Z\",\n        \"altitude\" : 2.2236878211537771E307,\n        \"accuracyMeters\" : 5.819074811458732E37,\n        \"latLngPair\" : {\n          \"latitude\" : 1.7667959289247888E308,\n          \"longitude\" : 1.0715038368650207E308\n        },\n        \"heading\" : 1.1159091063656534E308,\n        \"level\" : {\n          \"number\" : 7.568534992252281E307,\n          \"name\" : \"Schaden\"\n        },\n        \"roll\" : 1.699430996887901E308,\n        \"pitch\" : 1.2787816233095154E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/206899\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/895008\"\n      },\n      \"photoId\" : {\n        \"id\" : \"1963\"\n      },\n      \"shareLink\" : \"v4x3h03cgn17in7qqvhz59vyszzq2u70wbnqft7mas6b18n15phmqv6onbsfi9kb8qdjz5upudreiame5hex5rdljm4wsjze9o35ee3libeywqq1gvdz\",\n      \"uploadTime\" : \"2022-05-15T06:06:32.133654Z\",\n      \"places\" : [ {\n        \"name\" : \"Maple Balistreri\",\n        \"placeId\" : \"03fs\",\n        \"languageCode\" : \"bejyx4mvkvru0d9t35sg3k7wizudt9ccpmyfg8zl7dnt3u726jeogwif6t3bt1xwxa2kudhmxrxmp677cxcs4g94nwswe92wv0qv2jpnuhalh06l2ocz4\"\n      } ],\n      \"viewCount\" : \"a7azp80440s2czz27wjzirae2rykk4gkid0up2q3esn76djihojq7bxpp5jb02h8p4rqxk3cvwh68p79jgosa9oqu3qzmp9d33tecoyx1iibabnhilksj64wpvnhuzewcf9f7os9ntal9jq167pyof2ja9kkh9dyw24c5lpd8fl5h0a1bk2coyf0\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/569534\"\n    },\n    \"status\" : {\n      \"code\" : 2136815161,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Fugiat sequi voluptatibus cum eveniet molestiae. Ipsum et doloribus aut nisi. Quis enim tenetur itaque odit quia ea. In perferendis accusantium est quas tenetur. Ipsam harum omnis laudantium id atque \"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9e7e50d-100e-4d6a-a376-13e09e31fb35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.134329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchGet",
          "schema" : {
            "description" : "Response to batch get of Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo requested, in the same order as the requests in BatchGetPhotos.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "1a00f201-61ba-4971-8ff3-846449e33c5d",
    "name" : "Deletes a list of Photos and their metadata. Note that if BatchDeletePhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : [ {\n    \"code\" : 672793818,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Excepturi libero iusto commodi dolores. Sapiente magni dolore iure ea quas omnis. Aut eaque perspiciatis ipsum nisi. Dignissimos vero quas velit praesentium.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a00f201-61ba-4971-8ff3-846449e33c5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.121429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchDelete",
          "schema" : {
            "description" : "Response to batch delete of one or more Photos.",
            "properties" : {
              "status" : {
                "description" : "The status for the operation to delete a single Photo in the batch request.",
                "items" : {
                  "$ref" : "#/components/schemas/Status"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "5de47afa-0315-4e6c-8c16-a5e6721877c9",
    "name" : "Lists all the Photos that belong to the user. > Note: Recently created photos th...",
    "request" : {
      "urlPath" : "/v1/photos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"q4jtv4qauljhn6xisoj8d7g0s\",\n  \"photos\" : [ {\n    \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n    \"captureTime\" : \"2022-12-16T08:19:32.10128Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-06-20T08:44:32.101351Z\",\n      \"altitude\" : 7.535420304490533E307,\n      \"accuracyMeters\" : 3.3399086261015206E38,\n      \"latLngPair\" : {\n        \"latitude\" : 8.152198822170598E307,\n        \"longitude\" : 5.781197141595306E307\n      },\n      \"heading\" : 4.108500843307654E307,\n      \"level\" : {\n        \"number\" : 3.8603320348136207E307,\n        \"name\" : \"Buckridge\"\n      },\n      \"roll\" : 5.361826345925231E307,\n      \"pitch\" : 2.6984324329107474E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/689720\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/122933\"\n    },\n    \"photoId\" : {\n      \"id\" : \"s49e\"\n    },\n    \"shareLink\" : \"vhdqr1848yc547ga3cajusyl8jrmfofb8eq47p45tsppf1rj990w005fq4qpsy76wmt2hhrdtuscr9igpykekxp6z8i6jsyruq8e7l1g\",\n    \"uploadTime\" : \"2022-11-22T05:33:32.101958Z\",\n    \"places\" : [ {\n      \"name\" : \"Miyoko Collins\",\n      \"placeId\" : \"v5vx\",\n      \"languageCode\" : \"uaampm6501u25y4ifrjbscny5ednc5gv3cn2gso1dk2q28owtk9ath180ba5zpdwpbv5n1ftrayjk4e97ahbkkm272y6iece33oxc72nbybthxdez7v7f6wdhpxah13ja206i6hclh148gxvhsngtq9t3eve90ish3\"\n    }, {\n      \"name\" : \"Miss Silas Hansen\",\n      \"placeId\" : \"6v50\",\n      \"languageCode\" : \"z2ptgz4f2tlbwsdbimcrwl7wcz5wnkielk07kgcfge5mhpgiou1iva1h52h966n0tjw34eij4tzdvwzqymshcb00eepe0s0zywnykmatfe9vmedy0hol03nff2rmh3jgpqmonwh6w6k5t7y2hrixx8irxrbbpj0r9pwwrr1vc4fe2rit5k\"\n    }, {\n      \"name\" : \"Mrs. Lloyd Adams\",\n      \"placeId\" : \"832w\",\n      \"languageCode\" : \"jdccthhqzx14mx25h4mcc3n1v4yw5gthsjteiqxwt35go5lvmnouceqwnrjecvnoa33emdt2s881t4651drh96spjjh2p0x2r98xwu13p\"\n    }, {\n      \"name\" : \"Kindra Ledner\",\n      \"placeId\" : \"d175\",\n      \"languageCode\" : \"ocedfpxb6ldjauhkftgpyt8wmdd79p9v5a0i70qbkupkvu6ocygnyv47pwkczjj1kw3q538up1kucqh31332fzhuhg80zrlzhkrue5\"\n    }, {\n      \"name\" : \"Randall Jacobs\",\n      \"placeId\" : \"70hs\",\n      \"languageCode\" : \"xcodoo8dr04putbiytcx4degyrw8bb8pybjlzvj7quicdobl42rtggufhbvbhi6l37mupa4gyhvqb0cs9iaxcio602ws9h86tbuxlrpekioixv8h0kacaa9lqd6p7b7l3bmah88m7s8p0f6y2vaf85erbzxaj5xol4wkr6r9\"\n    }, {\n      \"name\" : \"Ms. Tora Willms\",\n      \"placeId\" : \"h51f\",\n      \"languageCode\" : \"spmickv7e2b6lvfdxb2p4pheenfkm5gslvius9ysbit4i0z8fh5biyvbnthmidzq3llzeolfq7bwl5qy3s978sy1pmg8nvwizz2z5lapcxd\"\n    }, {\n      \"name\" : \"Numbers Swift\",\n      \"placeId\" : \"y009\",\n      \"languageCode\" : \"pcr6vlun4a18vrjsnazjadgow81uis1ifz37j58hw8p4fc\"\n    }, {\n      \"name\" : \"Shavonne Kertzmann\",\n      \"placeId\" : \"u3o9\",\n      \"languageCode\" : \"i5j322hym1hwgteel6zpgqf373twy978zl2vzxg34tuuujtrbz7ur5ikpf69e0lxoj5fy2hhrvoqwgjpwz2ub1f37361no13higv\"\n    } ],\n    \"viewCount\" : \"d164cbiueooidjmhow1xzqe69hhn6xgguqcd51c2t7qnxm4ssw0icl90hd649a0u\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"zwx8\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"e7x9\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"4j9w\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"u919\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"p659\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"2469\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"st4o\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"l76w\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/714908\"\n  }, {\n    \"transferStatus\" : \"NEVER_TRANSFERRED\",\n    \"captureTime\" : \"2023-01-30T05:49:32.105151Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-07-23T08:24:32.105201Z\",\n      \"altitude\" : 1.319133794657688E307,\n      \"accuracyMeters\" : 6.366714819645317E37,\n      \"latLngPair\" : {\n        \"latitude\" : 1.3203151384192124E308,\n        \"longitude\" : 1.2050989105458658E308\n      },\n      \"heading\" : 1.7373920655274266E308,\n      \"level\" : {\n        \"number\" : 1.3885562974690787E308,\n        \"name\" : \"Kuvalis\"\n      },\n      \"roll\" : 6.003434436932092E307,\n      \"pitch\" : 6.897691358113001E306\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/600692\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/120843\"\n    },\n    \"photoId\" : {\n      \"id\" : \"gmwc\"\n    },\n    \"shareLink\" : \"2irnwikikqv7rxih7xyvnqsdapjn79ee0r6ctw9nnpqeb2lnlxwxi3vml4p9l8g75ljjz1kcfewbw5izvk8yfea1uh77a3memuwo4vbeuq6zh1mwier7tjkq9pc6mxgip89etdgw7lv2werybxwg67gmj7gioeqg8k3bp3trrio4707e17c9kcgxzpobpj8i7t\",\n    \"uploadTime\" : \"2022-04-14T06:06:32.105593Z\",\n    \"places\" : [ {\n      \"name\" : \"Miss Candra Murray\",\n      \"placeId\" : \"7ym5\",\n      \"languageCode\" : \"rz3hjqomyc7ajlc769nyb2gavqvchv4h7pya4dbwkmylry4qm8zf3ll5g6h1b8di5vp9dlf983h5c9fpynllt0mh47a047jpcjnva3mpr1k4uoxd19dn17zj6dp48ib298iv6nzs8y8e9pjc0mfe39wloe0qzi3h6mnuf9i2zyxosh346amarri\"\n    }, {\n      \"name\" : \"Glenn Rowe V\",\n      \"placeId\" : \"52x6\",\n      \"languageCode\" : \"g6yycklcw020pxrj7hu4fscq6em3z9knm6by9jjr2qewfkd3vk5s29kmdnys4v7051w223jsronbhyqu7t5680i9p7h9hsjdr9uskuy63bav6827vsc031zsi6oeatxwa43rb24qefdmz83r3\"\n    }, {\n      \"name\" : \"Louann Conroy MD\",\n      \"placeId\" : \"a6o9\",\n      \"languageCode\" : \"u5zacdc8becpxuk3fp01vcm0upsuk9pz18qzedi655i2uozik34g8oltoljqj3jf1b997amc5rbl03jvf5nl504pac5\"\n    }, {\n      \"name\" : \"Ismael Pfeffer\",\n      \"placeId\" : \"3p5i\",\n      \"languageCode\" : \"ohs2f6ixxr1xuea030qzontafzkumv8brf697ek7sharluy90nqzghsm2\"\n    } ],\n    \"viewCount\" : \"4rs2359l7xhw86w1jcqr4fb5539vmht6p3g8o19ujkw84k5b1dyxs2r56vgpahuyl4gnf8qvupzpgyrlz2714a12sepezzag7ts31bqucgj8ztyk2pyxdo9pfplkx3ywbf7zqgf1lg4pmzq7xze4e3nm40n9uxw3e6lp29\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"pir3\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"pl4b\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"i068\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"147l\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/135628\"\n  }, {\n    \"transferStatus\" : \"EXPIRED\",\n    \"captureTime\" : \"2022-04-04T05:48:32.106769Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-05-13T09:14:32.106814Z\",\n      \"altitude\" : 1.260198852563845E308,\n      \"accuracyMeters\" : 1.136636085242737E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.5399822873549646E308,\n        \"longitude\" : 1.0862933307475977E308\n      },\n      \"heading\" : 1.1700820107449156E308,\n      \"level\" : {\n        \"number\" : 1.0196954438606857E308,\n        \"name\" : \"Lang\"\n      },\n      \"roll\" : 5.281151266040238E307,\n      \"pitch\" : 1.3884469516658092E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/438933\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/244945\"\n    },\n    \"photoId\" : {\n      \"id\" : \"31a7\"\n    },\n    \"shareLink\" : \"kl7xkqwttuhntt9bk53bop7sre4nfn8eg37jalic8ovmk1xhef1otx\",\n    \"uploadTime\" : \"2022-10-30T07:10:32.10718Z\",\n    \"places\" : [ {\n      \"name\" : \"Evalyn Greenholt\",\n      \"placeId\" : \"6o96\",\n      \"languageCode\" : \"5gchvp9e95qr5xsz1mzulr1xcm2uwad490urh3kf1y30k2mdwiah23rckkdur3nnw347vvu42rkng95w5ewff4vs7xamma8okaxoidteshup\"\n    }, {\n      \"name\" : \"Dennis Mann\",\n      \"placeId\" : \"75ue\",\n      \"languageCode\" : \"iotmqxi0c2bnsfwofm621sfe09tg2z4mpjsrzcd7ecv0qtm8i1uaev0vn3p4to12dwshashian84z26lda47g5p56a0gt9a5nwtdcmr4htvlkthbrbd263cdd00lf3z2ysbpz5aybvrhfmt5ltpgvcn6dgvh1xk6zaeyg9ysbdu35u4cu4f6lx5iuhq14\"\n    }, {\n      \"name\" : \"Mr. Frederick Bailey\",\n      \"placeId\" : \"jy88\",\n      \"languageCode\" : \"4v16zkkp0x55fwczq64dnlnyxh\"\n    }, {\n      \"name\" : \"Dr. Chi Stehr\",\n      \"placeId\" : \"py82\",\n      \"languageCode\" : \"i0wtk63uqx4rdhjdjwiqigfvgd1e0surrjzaqi0t8zq0gy7rrjqb8gk04wnjlu5nq84sxnm8uccf0eyyr7an\"\n    } ],\n    \"viewCount\" : \"8haanyu\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"c6dh\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/466349\"\n  }, {\n    \"transferStatus\" : \"NEVER_TRANSFERRED\",\n    \"captureTime\" : \"2022-04-30T05:48:32.108067Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-08-22T06:41:32.108108Z\",\n      \"altitude\" : 1.0178743977475515E308,\n      \"accuracyMeters\" : 8.596487674005784E37,\n      \"latLngPair\" : {\n        \"latitude\" : 1.674505051119514E308,\n        \"longitude\" : 1.6830553809138799E308\n      },\n      \"heading\" : 2.489259617219028E307,\n      \"level\" : {\n        \"number\" : 8.775375757497484E307,\n        \"name\" : \"Lockman\"\n      },\n      \"roll\" : 1.6416215785438992E307,\n      \"pitch\" : 7.274353690641109E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/191319\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/591154\"\n    },\n    \"photoId\" : {\n      \"id\" : \"70r9\"\n    },\n    \"shareLink\" : \"h3ymw55ic11s185a8ssk1v94j7uk7nx759snjf3qgc0yy4jndp8o19axiay7fc9bsdzixkxas8yhqg2ynrgyte6t4v3vg9huye8owcg7lnfh96rzfiruhkk0\",\n    \"uploadTime\" : \"2023-03-17T07:17:32.108468Z\",\n    \"places\" : [ {\n      \"name\" : \"Sharita Tillman\",\n      \"placeId\" : \"a49d\",\n      \"languageCode\" : \"wvbc21qq5a2vp0zxl16pgzb8tnpw67dotizuo7pgf9q6oxwdneba\"\n    }, {\n      \"name\" : \"Nia Durgan\",\n      \"placeId\" : \"puce\",\n      \"languageCode\" : \"3ojan0ew4xpenz1po71y8rh51881oyto966f8di2bbis587s5iytwt4tp0lyz8d7ewrxira1ibpxt7mgncyva9x24pq9hqbz3fw9mrlght1t3dxmnxeatp\"\n    }, {\n      \"name\" : \"Maira Sauer Jr.\",\n      \"placeId\" : \"39cu\",\n      \"languageCode\" : \"rlujq2d1j9z6cfpxtcmngtm3hdw9mn6y2pdm1tems4lp3p4iirwhez6rhd90gy6lq4i6qaomwuhp5a8o7rotj9ah1jm3nalq1mvcllznuhzcu9rqgoz599pxy3en0dd20rxm21nez4n92m1xsh1rmmge0dey9io92agyp\"\n    }, {\n      \"name\" : \"Justina Dach\",\n      \"placeId\" : \"t8up\",\n      \"languageCode\" : \"0fb7kifegqgfsq46an2cicsxpaknk4iykmqzc1qy3dmk10c7owh0skkr0t065qaxej6qxb4b0kdd31og72e2h92ntpzrdbraqunc7k1w2vqb7607efi2lv8u4q6uypfzxn0ax7l96ssdtr4y\"\n    }, {\n      \"name\" : \"Carli Streich\",\n      \"placeId\" : \"k1bq\",\n      \"languageCode\" : \"xanm8rg8xmyixhnanaghquekc3qnlbgvxv2w3hisdfmo91rd6lwuax0s5p8qyn8oxxa8ci82zuj9cdo9t63ntl8va6ieb8bmfzezmevog69axwvsbu18f\"\n    } ],\n    \"viewCount\" : \"x7094ralytckldoohfy4g9c78z4pi2l\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"h00e\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"b9qk\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"85wb\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"7d5k\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"a59t\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"hugg\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"vvlz\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"2o4g\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/589930\"\n  }, {\n    \"transferStatus\" : \"CANCELLED\",\n    \"captureTime\" : \"2022-11-22T07:40:32.112377Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2023-02-08T06:36:32.112426Z\",\n      \"altitude\" : 6.860143337081615E307,\n      \"accuracyMeters\" : 9.34097005909575E37,\n      \"latLngPair\" : {\n        \"latitude\" : 8.266007094002694E307,\n        \"longitude\" : 4.565685404823489E307\n      },\n      \"heading\" : 3.2461824052986366E307,\n      \"level\" : {\n        \"number\" : 4.4432652520386434E307,\n        \"name\" : \"Ziemann\"\n      },\n      \"roll\" : 5.477847532752866E307,\n      \"pitch\" : 1.3607056645379337E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/838979\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/732210\"\n    },\n    \"photoId\" : {\n      \"id\" : \"zo95\"\n    },\n    \"shareLink\" : \"3gcq565jmdb6a4he\",\n    \"uploadTime\" : \"2022-09-04T07:45:32.112842Z\",\n    \"places\" : [ {\n      \"name\" : \"Vern Rempel\",\n      \"placeId\" : \"hv77\",\n      \"languageCode\" : \"zl5\"\n    }, {\n      \"name\" : \"Willis Osinski\",\n      \"placeId\" : \"i2l4\",\n      \"languageCode\" : \"kohuhjnlqypmqlr6wcx4vi1pazgwr2iszzfro92kscm9m1g4g3fgaabtlry8sca8t2njqdlgq797elg7kfi9vnay\"\n    }, {\n      \"name\" : \"Thaddeus Kreiger\",\n      \"placeId\" : \"3t5s\",\n      \"languageCode\" : \"xbbhdo8ag8y97lfpv7xdf0g09vvk8km46gu39o73kdminzadni5rsjdlicakrg0fuyt3dsnltzs7syjj4hchz5ac4l4hg4eoymw0oghqup7uefzenv67odletb6rfqjex3kwf1vowpwwgk0i\"\n    }, {\n      \"name\" : \"Mrs. Marion Hettinger\",\n      \"placeId\" : \"hj07\",\n      \"languageCode\" : \"foc5dl3zkmjd8s0hltc6oai2riphq19kd2m13vmudbm9dz\"\n    }, {\n      \"name\" : \"Tanja Howell\",\n      \"placeId\" : \"pmrj\",\n      \"languageCode\" : \"yxqjqycxkuubgv0288rz6sh4mgux90ukdreb9ed5jqwb52i5mvfafr3grpra3fz7ac7c5xh2na11xqxmhz6w44bbmxt6ipo6wgug4pi\"\n    }, {\n      \"name\" : \"Earl Wolf\",\n      \"placeId\" : \"fx1z\",\n      \"languageCode\" : \"7nc79d8pvt83mxixm7mfo35l9miszpdprlwz1c\"\n    } ],\n    \"viewCount\" : \"zrbojp3hlnmgojbg16sejdk645u4845txnj18j1e6slgfkvlxbq\",\n    \"mapsPublishStatus\" : \"PUBLISHED\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"2fsh\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"1k33\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"d9l4\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"2722\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"467o\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"nky3\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"1n0v\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"7p7i\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/218509\"\n  }, {\n    \"transferStatus\" : \"COMPLETED\",\n    \"captureTime\" : \"2022-10-17T08:35:32.114875Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-12-26T08:02:32.114939Z\",\n      \"altitude\" : 7.090048641381133E307,\n      \"accuracyMeters\" : 4.725858830932799E37,\n      \"latLngPair\" : {\n        \"latitude\" : 4.521933735100819E307,\n        \"longitude\" : 5.808738430530156E306\n      },\n      \"heading\" : 6.125676371030868E307,\n      \"level\" : {\n        \"number\" : 1.1679144173456073E308,\n        \"name\" : \"Mills\"\n      },\n      \"roll\" : 6.232972159995476E307,\n      \"pitch\" : 1.7650404474822376E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/915563\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/857942\"\n    },\n    \"photoId\" : {\n      \"id\" : \"5877\"\n    },\n    \"shareLink\" : \"if2zecg5smutmfj6pgm8u52p1x05cet15f0nqehhmoj7x5o7c12kvgrqcbjhk7zdio2rg2zrf8kazjain9r0jcj9vd835604oxg9z6dlt9z8r0rr1kn9ioe466iaq\",\n    \"uploadTime\" : \"2023-03-21T06:40:32.115352Z\",\n    \"places\" : [ {\n      \"name\" : \"Stacy O'Keefe\",\n      \"placeId\" : \"p6dn\",\n      \"languageCode\" : \"f8cgr4qxef3fh3dla2vahlqwc6ewvqri247qcu9lcpyarlzk68mk1ngllfyofljv\"\n    }, {\n      \"name\" : \"Shannan White\",\n      \"placeId\" : \"5b22\",\n      \"languageCode\" : \"tg56a8q8l5p2o4o5fgu4pggkfbt9m2a8vlefs00jj7s5a2y92rnvds0fbsbsuu195jv2\"\n    }, {\n      \"name\" : \"Mrs. Roseline Sawayn\",\n      \"placeId\" : \"lz5g\",\n      \"languageCode\" : \"kb98pxh3n2n6twdrqzp2euynb4vvmvkjovez5bt5wg0qowumiyoxj58unbxfmftwa38xdfarnsgvl90myojp7mgo318v8zhw53t0lg3qlijx2pn7e427hv3l7awp1zooe0jext05x4pk4unidfd257kb5419mv\"\n    }, {\n      \"name\" : \"Miss Domingo Durgan\",\n      \"placeId\" : \"h72x\",\n      \"languageCode\" : \"ck90ux7dnitdywn5jpus3fco50al3gkq4jmlvyfo2cauuakb608u8z79zp9iory436acdoe0d3nzcaqfo0rbsac4tbak36eijt19sxuzibpqn2xk7uz0y\"\n    }, {\n      \"name\" : \"Macy Metz\",\n      \"placeId\" : \"pf0b\",\n      \"languageCode\" : \"zvi9go8uea0o6zsr4qb3gyvf5kgz\"\n    }, {\n      \"name\" : \"Joline Williamson\",\n      \"placeId\" : \"ps07\",\n      \"languageCode\" : \"lzfsvlwwdqzo1e59lhc4nnh2j31p7uzutxwals3mqrlaoyur74ajb1jq4la857xi6it87a98k3b0nzeqwku1kkcgllib2dzik2kyxk4bsrpgegorglugblyx5z4\"\n    }, {\n      \"name\" : \"Reggie Stiedemann\",\n      \"placeId\" : \"ub2h\",\n      \"languageCode\" : \"uc3qdgh46zxv4defdjqyokq4nni2zrguo4fy468a9hwb48ppe8wpdgs9a5en7goo8d46ct9oyol6t4w5u9os9i2i3qxsqsi4e9w0xft8fobm8de9i9mpri9bkuulpwhget9i9uc2\"\n    } ],\n    \"viewCount\" : \"0uy4khvgfchqtckr86ta5z3v72skvmhphg8ej9y2d01x\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"h0tl\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"p79x\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/593127\"\n  }, {\n    \"transferStatus\" : \"EXPIRED\",\n    \"captureTime\" : \"2022-05-30T08:44:32.116845Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-08-02T07:59:32.116892Z\",\n      \"altitude\" : 3.1059505913392655E307,\n      \"accuracyMeters\" : 1.984041340635287E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.2591777521780917E308,\n        \"longitude\" : 2.2212042590557138E307\n      },\n      \"heading\" : 1.4310053972885928E308,\n      \"level\" : {\n        \"number\" : 1.4816663477889916E307,\n        \"name\" : \"Wilderman\"\n      },\n      \"roll\" : 1.0928962515114884E308,\n      \"pitch\" : 2.4797646840746198E305\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/729232\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/869675\"\n    },\n    \"photoId\" : {\n      \"id\" : \"2lvd\"\n    },\n    \"shareLink\" : \"aldqq5sbqtvx4et9h\",\n    \"uploadTime\" : \"2022-05-27T09:23:32.11729Z\",\n    \"places\" : [ {\n      \"name\" : \"Tod Nikolaus IV\",\n      \"placeId\" : \"l5tk\",\n      \"languageCode\" : \"phs8bopx4c6tahn1jqylkp2l7kezrlgru8rqbeeahu0vhx968y0n1h0du8gv546bsmjqa92rs1vp0r1jfrsvbsvry26sau\"\n    }, {\n      \"name\" : \"Nettie Wuckert\",\n      \"placeId\" : \"d743\",\n      \"languageCode\" : \"ciwvomhsmu5zv475aosc6f88p1yf97fzmcdprfpnqinxliyta8fnfcot056ov5svyvj086669ojn0wdfb2ll260xdlfbocikxpra8su\"\n    } ],\n    \"viewCount\" : \"i41givu900ku9f88surcqovqots8174o3yy2ctbrkhiwkwun7fzlbsd810lwcpflu82n9m3vqw4ap1zxkjw3an9j4n5prykgq7k8qmzhfh1s32d9f6pvee95tyyetp8rln\",\n    \"mapsPublishStatus\" : \"PUBLISHED\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"bu86\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"1763\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/349728\"\n  }, {\n    \"transferStatus\" : \"EXPIRED\",\n    \"captureTime\" : \"2022-11-19T07:11:32.118223Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-06-22T07:55:32.118274Z\",\n      \"altitude\" : 1.419026776279404E308,\n      \"accuracyMeters\" : 1.655406902364542E38,\n      \"latLngPair\" : {\n        \"latitude\" : 7.67766491151341E307,\n        \"longitude\" : 1.600200794454621E308\n      },\n      \"heading\" : 1.4111771716816267E308,\n      \"level\" : {\n        \"number\" : 3.9164186029620634E307,\n        \"name\" : \"Sporer\"\n      },\n      \"roll\" : 4.4417310373509E307,\n      \"pitch\" : 1.7855966069889926E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/503768\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/230815\"\n    },\n    \"photoId\" : {\n      \"id\" : \"54xx\"\n    },\n    \"shareLink\" : \"a84mlf1ctzhwyim2squlr7fwfq1rc1vdyxdhu7bah7wpfaykccte7qraw2yr4h6h45n7na7m4j078t4ktbmvlkmg7sru6n46tksli1a3jb20x6nfjjum4bzav324zl20pf6ehfyvzbsz66otil3e4cr8edwkagnnjcsyru3chsj1\",\n    \"uploadTime\" : \"2022-04-12T07:03:32.119724Z\",\n    \"places\" : [ {\n      \"name\" : \"Lauran Littel\",\n      \"placeId\" : \"etwf\",\n      \"languageCode\" : \"s11ylb6ndc38m2dbxzxl0i85\"\n    } ],\n    \"viewCount\" : \"qmsn60xrz4gq46qrttm2ikcy7qdratruj5lhct83usiw6pofiw21j\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"1dv9\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"0bb8\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"bg63\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"r9i9\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/983351\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5de47afa-0315-4e6c-8c16-a5e6721877c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.121215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.list",
          "schema" : {
            "description" : "Response to list all photos that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photos" : {
                "description" : "List of photos. The pageSize field in the request determines the number of items returned.",
                "items" : {
                  "$ref" : "#/components/schemas/Photo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "95976d72-6492-4385-bc99-5689f7ca475b",
    "name" : "Lists all the PhotoSequences that belong to the user, in descending CreatePhotoS...",
    "request" : {
      "urlPath" : "/v1/photoSequences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"photoSequences\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kurtis Osinski\",\n    \"error\" : {\n      \"code\" : 1016592044,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Mollitia quae nihil deleniti labore. Libero quibusdam voluptatum dolorem sunt quibusdam architecto. Sed totam magnam iure laudantium sed est.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"mxajkjoq3ji0mlt04i2obsafm0m3bsc693qpxgay8nnbtek892r51m2ajfudmzvekjduhb8969ctkbdx8mtcgo8fcxzdyur0jx9motzodlvs6mjesa2vn39hzxazjvpde8wa9lr26tmuwyzrnubzzl1k9d5reygxpp1cc3443nbt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95976d72-6492-4385-bc99-5689f7ca475b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.10108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequences.list",
          "schema" : {
            "description" : "Response to list all photo sequences that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photoSequences" : {
                "description" : "List of photo sequences via Operation interface. The maximum number of items returned is based on the pageSize field in the request. Each item in the list can have three possible states, * `Operation.done` = false, if the processing of PhotoSequence is not finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was an error in processing. * `Operation.done` = true and `Operation.response` contains a PhotoSequence message, In each sequence, only Id is populated.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c3cd14aa-de0c-4236-b734-4e0ddd498e33",
    "name" : "Creates an upload session to start uploading photo sequence data. The upload URL...",
    "request" : {
      "urlPath" : "/v1/photoSequence:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/113387\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3cd14aa-de0c-4236-b734-4e0ddd498e33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.100787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "248f80e6-1c0a-46f2-b33d-d06075fcf4c5",
    "name" : "Gets the metadata of the specified PhotoSequence via the Operation interface. Th...",
    "request" : {
      "urlPath" : "/v1/photoSequence/e797",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Merrill Hand\",\n  \"error\" : {\n    \"code\" : 744423236,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Dolores beatae quia. Eos veniam eius totam voluptas. Aut aut facilis sed voluptatem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "248f80e6-1c0a-46f2-b33d-d06075fcf4c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.100652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "aa67b728-ec52-4ecc-a2e1-04f357803b1f",
    "name" : "Deletes a PhotoSequence and its metadata. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photoSequence/3p91",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa67b728-ec52-4ecc-a2e1-04f357803b1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.100346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "ea65ad7c-2f97-4f9d-94b8-fa39ddfc3156",
    "name" : "After the client finishes uploading the PhotoSequence with the returned UploadRe...",
    "request" : {
      "urlPath" : "/v1/photoSequence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hershel Ondricka\",\n  \"error\" : {\n    \"code\" : 718092666,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quis sed sit omnis quo qui repellat. Dolor quo omnis quis corrupti omnis dolores voluptatibus. Molestiae earum fuga sequi dolorem iusto quia mollitia. At veritatis consequatur quia atque rerum ad. Tot\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea65ad7c-2f97-4f9d-94b8-fa39ddfc3156",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.100172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "9db9b572-8c2e-449b-9679-be81bbca2c1e",
    "name" : "Creates an upload session to start uploading photo bytes. The method uses the up...",
    "request" : {
      "urlPath" : "/v1/photo:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/872156\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9db9b572-8c2e-449b-9679-be81bbca2c1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.099816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ee8c4c18-c4c6-48a6-819c-8140e5276705",
    "name" : "Gets the metadata of the specified Photo. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photo/l1r3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"CANCELLED\",\n  \"captureTime\" : \"2022-03-30T07:39:32.096601Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-07-27T06:56:32.096646Z\",\n    \"altitude\" : 2.260704169903817E307,\n    \"accuracyMeters\" : 1.8512936612876367E38,\n    \"latLngPair\" : {\n      \"latitude\" : 1.1844664910754883E308,\n      \"longitude\" : 4.911360957518167E307\n    },\n    \"heading\" : 7.675226446478493E307,\n    \"level\" : {\n      \"number\" : 1.619511514728528E308,\n      \"name\" : \"Stark\"\n    },\n    \"roll\" : 5.179874775955168E307,\n    \"pitch\" : 9.443594618507843E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/518422\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/716922\"\n  },\n  \"photoId\" : {\n    \"id\" : \"7k8w\"\n  },\n  \"shareLink\" : \"08vuqr14la3wis5d7ym1jzuus1mwwaknlfjko1idztuv020rpfrxj6atklijgs7zhvnqimfwerhre030xvuah384m900vcrz5d\",\n  \"uploadTime\" : \"2022-08-10T07:25:32.097464Z\",\n  \"places\" : [ {\n    \"name\" : \"Shelton Cartwright\",\n    \"placeId\" : \"3hng\",\n    \"languageCode\" : \"byoibnmo6jkw2b2u2x0huhptvssiy1nzu22z3fr97a0vd2qlxty1zq6jihzf1ikvqg6e3ys4vt6bd9ffnm4wa38kamdo20pzr8zavzcc0yfqxft0d3xmjh4pnd9q3w\"\n  }, {\n    \"name\" : \"Sachiko Bogan II\",\n    \"placeId\" : \"xlz7\",\n    \"languageCode\" : \"ucslcxtbrd6f95paz\"\n  }, {\n    \"name\" : \"Libbie Auer\",\n    \"placeId\" : \"5ha1\",\n    \"languageCode\" : \"a6bjqupgrv8locpa4xxxu5rp\"\n  }, {\n    \"name\" : \"Karin Mohr\",\n    \"placeId\" : \"a51j\",\n    \"languageCode\" : \"n3n94q9vl9sgqd8jnekb9ohzy25ev4anuyhb6a0c9np\"\n  }, {\n    \"name\" : \"Agustin Rippin\",\n    \"placeId\" : \"6320\",\n    \"languageCode\" : \"ficf6wo5md6s2pnni1ltokilja907df84aotbhcafw5zmypnj3e94s2gs7u429b7q0bp2eu8e3td1txgji16vgwumdex30ezm0io0shf0lxikhs7s5ck0ywrpkv49vw70frl4faj16ofi3pow\"\n  }, {\n    \"name\" : \"Mr. Floy O'Keefe\",\n    \"placeId\" : \"u98b\",\n    \"languageCode\" : \"mbvyv5m8e6v4io0takhcnaho6my48rfyihdoez0m5onn15zfrohuivnganae2th69wafp9mis3n909aix3krpamirx0ovdidqcznuqnuxwpk3eylbs8z1mbd225ih375ekb4m5di6eitd70s5o1quzai2vtsxzegspzl58\"\n  } ],\n  \"viewCount\" : \"wrmsca4jf92g51s9fiusgf8c4qv6jarszvfblfjij25r45ox4ptoai7dz3m3p48rya53w9i578ermes4m1v4svgcdeu3k9tqthpzm6qi32t538mo9jaa\",\n  \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"ct94\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"j81e\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"gl14\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"4n15\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"iou3\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"d4d5\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/185970\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee8c4c18-c4c6-48a6-819c-8140e5276705",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.099636Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.get",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "4111961a-014f-454a-be34-a914241a798a",
    "name" : "Deletes a Photo and its metadata. This method returns the following error codes:...",
    "request" : {
      "urlPath" : "/v1/photo/6501",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4111961a-014f-454a-be34-a914241a798a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.096504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7fa1bf43-d8bf-4f71-b7ea-323e5e3eb47e",
    "name" : "Updates the metadata of a Photo, such as pose, place association, connections, e...",
    "request" : {
      "urlPath" : "/v1/photo/32k1",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"REJECTED\",\n  \"captureTime\" : \"2022-10-14T07:19:32.092848Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-07-16T07:20:32.092959Z\",\n    \"altitude\" : 5.267854601939605E307,\n    \"accuracyMeters\" : 2.122768878002102E38,\n    \"latLngPair\" : {\n      \"latitude\" : 1.785587062793133E308,\n      \"longitude\" : 7.071848088431672E307\n    },\n    \"heading\" : 3.5797436518581417E307,\n    \"level\" : {\n      \"number\" : 1.3514769954778244E308,\n      \"name\" : \"Hartmann\"\n    },\n    \"roll\" : 8.748294019017587E307,\n    \"pitch\" : 1.285589036328461E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/596849\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/654479\"\n  },\n  \"photoId\" : {\n    \"id\" : \"0tnf\"\n  },\n  \"shareLink\" : \"qxxthxajraqvzwcfpba03aw478fwy9hfyb5ulf3cx2llgs5zd23dmhfdxrr1mxwhna7v344twp36gpag0\",\n  \"uploadTime\" : \"2022-05-24T06:44:32.093768Z\",\n  \"places\" : [ {\n    \"name\" : \"Buford Pollich\",\n    \"placeId\" : \"0625\",\n    \"languageCode\" : \"af31dt8opw9qbpdd37ik5lmjxoa0evtybb1nqeq9sgsmlgk69xagggycwjp2lk0\"\n  }, {\n    \"name\" : \"Lasonya Boehm PhD\",\n    \"placeId\" : \"745b\",\n    \"languageCode\" : \"1axjvc0n7e2cox9m710tlr9uq4vlt8g\"\n  }, {\n    \"name\" : \"Joel Baumbach\",\n    \"placeId\" : \"5ey2\",\n    \"languageCode\" : \"mb514j7j7cwcjb82sbcvm8j8xgazzw6mno01b8fzmyiew94dwpe6t6chok5w20en20q3usz\"\n  }, {\n    \"name\" : \"Juliane O'Keefe\",\n    \"placeId\" : \"ot5x\",\n    \"languageCode\" : \"hp4r6ey6yinkq2lqe4th6uhuzlvoxdxumo4i266yr4vh0tlmdxbieko4i89mc7tuoxmjccwylq211xdnwqpjiprjc05pzeexfzilrjheoxccwhwxki4fd671enms3hlrzi4k759ayypoxbrskdq6wu8c8zg\"\n  }, {\n    \"name\" : \"Betsy Lemke I\",\n    \"placeId\" : \"w2g6\",\n    \"languageCode\" : \"291jyqngnciklmnh4wkrlt4vqdlrctnrv5fow1bwer1hgczvoyud16ggwwc4dp84clt5idcnxv2sp625f9yqk0zi52v15ia7h5lvhte0h4o32zsibqitsmqspz65x40sx56p8nmdei1l1w8f4e9zv9s48fhx8pfb9l8bkw3ckh0z1lqhckfzwtec2zpvqfy81\"\n  }, {\n    \"name\" : \"Merlin Fisher Jr.\",\n    \"placeId\" : \"i64l\",\n    \"languageCode\" : \"sh0kbh02151ur5urxt05z3311phs9wt7bk119stohu5qdo13d\"\n  } ],\n  \"viewCount\" : \"tjthpvl91k3fbhejm0piv9r\",\n  \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"8t10\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/565648\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fa1bf43-d8bf-4f71-b7ea-323e5e3eb47e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.096249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.update",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "daf82128-0898-453f-aa2e-b089cf90ca20",
    "name" : "After the client finishes uploading the photo with the returned UploadRef, Creat...",
    "request" : {
      "urlPath" : "/v1/photo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"NEVER_TRANSFERRED\",\n  \"captureTime\" : \"2022-05-20T07:54:32.088707Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-09-24T05:51:32.088794Z\",\n    \"altitude\" : 4.583338595596121E307,\n    \"accuracyMeters\" : 8.230253583936938E37,\n    \"latLngPair\" : {\n      \"latitude\" : 1.9732689922125713E307,\n      \"longitude\" : 1.4962604608693842E308\n    },\n    \"heading\" : 1.3327492334708182E308,\n    \"level\" : {\n      \"number\" : 1.6042230060510082E308,\n      \"name\" : \"Mann\"\n    },\n    \"roll\" : 5.230459414829651E307,\n    \"pitch\" : 3.616417456861114E306\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/733486\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/715682\"\n  },\n  \"photoId\" : {\n    \"id\" : \"o2kn\"\n  },\n  \"shareLink\" : \"jykke4y87swy1lwt4oc6ie1tm48ft677xth5wm9vehhm620njk89mwytj\",\n  \"uploadTime\" : \"2023-02-23T07:42:32.090046Z\",\n  \"places\" : [ {\n    \"name\" : \"Miss Chanelle Wiegand\",\n    \"placeId\" : \"jl18\",\n    \"languageCode\" : \"k5v11gxhby3p6u1wny5icdskjspx67ljhg5drppjuqlo73ah70ma9ox90bhkk2tw2ye95pipki78g1l3a64k8n16i9emucxxjiqeud6gbut1ybn6823cwcgws8q39n942atui4f7wajnx\"\n  }, {\n    \"name\" : \"Dulce Kreiger\",\n    \"placeId\" : \"7md4\",\n    \"languageCode\" : \"v1r55gozokitdu9t6xqe23438abrcng3gyrlvziyop7yaeabln9cxmz1mq8tbyqvlbvzkfb063hjkxv3yn6maxgd85goy6gjim6yv\"\n  } ],\n  \"viewCount\" : \"htyo95ywxmsm3\",\n  \"mapsPublishStatus\" : \"PUBLISHED\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"i804\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"ai4a\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"7tj7\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"bi1x\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"89w6\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"4511\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"ue62\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"9xu5\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/627255\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "daf82128-0898-453f-aa2e-b089cf90ca20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:32.092583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.create",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}