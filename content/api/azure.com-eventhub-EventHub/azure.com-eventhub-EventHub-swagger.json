{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "EventHubManagementClient",
    "description" : "Azure Event Hubs client",
    "version" : "2017-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.EventHub/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available Event Hub REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/CheckNameAvailability" : {
      "post" : {
        "tags" : [ "Namespaces" ],
        "description" : "Check the give Namespace name availability.",
        "operationId" : "Namespaces_CheckNameAvailability",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to check availability of the given Namespace name",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "check availability returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckNameAvailabilityResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Lists all the available Namespaces within a subscription, irrespective of the resource groups.",
        "operationId" : "Namespaces_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespaces returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespaceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/sku/{sku}/regions" : {
      "get" : {
        "tags" : [ "Regions" ],
        "description" : "Gets the available Regions for a given sku",
        "operationId" : "Regions_ListBySku",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sku",
          "in" : "path",
          "description" : "The sku type.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Regions successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagingRegionsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "EventHub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Lists the available Namespaces within a resource group.",
        "operationId" : "Namespaces_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespaces returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespaceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets the description of the specified namespace.",
        "operationId" : "Namespaces_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            }
          },
          "201" : {
            "description" : "Namespace update request accepted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Namespaces" ],
        "description" : "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "operationId" : "Namespaces_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for creating a namespace resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EHNamespace"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            }
          },
          "201" : {
            "description" : "Namespace create request accepted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            }
          },
          "202" : {
            "description" : "Namespace create or update request accepted."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Namespaces" ],
        "description" : "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "operationId" : "Namespaces_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace successfully deleted."
          },
          "202" : {
            "description" : "Namespace delete request accepted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Namespaces" ],
        "description" : "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "operationId" : "Namespaces_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for updating a namespace resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EHNamespace"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            }
          },
          "201" : {
            "description" : "Namespace update request accepted.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            }
          },
          "202" : {
            "description" : "Namespace create or update request accepted."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets a list of authorization rules for a Namespace.",
        "operationId" : "Namespaces_ListAuthorizationRules",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace AuthorizationRule successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRuleListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets an AuthorizationRule for a Namespace by rule name.",
        "operationId" : "Namespaces_GetAuthorizationRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace AuthorizationRule returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Namespaces" ],
        "description" : "Creates or updates an AuthorizationRule for a Namespace.",
        "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The shared access AuthorizationRule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace AuthorizationRule created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Namespaces" ],
        "description" : "Deletes an AuthorizationRule for a Namespace.",
        "operationId" : "Namespaces_DeleteAuthorizationRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace AuthorizationRule successfully deleted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys" : {
      "post" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets the primary and secondary connection strings for the Namespace.",
        "operationId" : "Namespaces_ListKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Connection strings returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys" : {
      "post" : {
        "tags" : [ "Namespaces" ],
        "description" : "Regenerates the primary or secondary connection strings for the specified Namespace.",
        "operationId" : "Namespaces_RegenerateKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters required to regenerate the connection string.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegenerateAccessKeyParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Connection strings regenerated successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs" : {
      "get" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Gets all Alias(Disaster Recovery configurations)",
        "operationId" : "DisasterRecoveryConfigs_List",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of Alias(Disaster Recovery configurations) for eventhub namespace",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArmDisasterRecoveryListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/CheckNameAvailability" : {
      "post" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Check the give Namespace name availability.",
        "operationId" : "DisasterRecoveryConfigs_CheckNameAvailability",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to check availability of the given Alias name",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "check availability returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckNameAvailabilityResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}" : {
      "get" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Retrieves Alias(Disaster Recovery configuration) for primary or secondary namespace",
        "operationId" : "DisasterRecoveryConfigs_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the Alias(Disaster Recovery configurations)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArmDisasterRecovery"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Creates or updates a new Alias(Disaster Recovery configuration)",
        "operationId" : "DisasterRecoveryConfigs_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters required to create an Alias(Disaster Recovery configuration)",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArmDisasterRecovery"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Alias(Disaster Recovery configuration) successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArmDisasterRecovery"
                }
              }
            }
          },
          "201" : {
            "description" : "Alias(Disaster Recovery configuration) creation request received"
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Deletes an Alias(Disaster Recovery configuration)",
        "operationId" : "DisasterRecoveryConfigs_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete Alias(Disaster Recovery configuration) request accepted"
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/AuthorizationRules" : {
      "get" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Gets a list of authorization rules for a Namespace.",
        "operationId" : "DisasterRecoveryConfigs_ListAuthorizationRules",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace AuthorizationRule successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRuleListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/AuthorizationRules/{authorizationRuleName}" : {
      "get" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Gets an AuthorizationRule for a Namespace by rule name.",
        "operationId" : "DisasterRecoveryConfigs_GetAuthorizationRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Alias Namespace AuthorizationRule returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/AuthorizationRules/{authorizationRuleName}/listKeys" : {
      "post" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Gets the primary and secondary connection strings for the Namespace.",
        "operationId" : "DisasterRecoveryConfigs_ListKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Connection strings returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing" : {
      "post" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces",
        "operationId" : "DisasterRecoveryConfigs_BreakPairing",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Break-Pairing operation is successful."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover" : {
      "post" : {
        "tags" : [ "DisasterRecoveryConfigs" ],
        "description" : "Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace",
        "operationId" : "DisasterRecoveryConfigs_FailOver",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "alias",
          "in" : "path",
          "description" : "The Disaster Recovery configuration name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Failover operation is successful."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs" : {
      "get" : {
        "tags" : [ "EventHubs" ],
        "description" : "Gets all the Event Hubs in a Namespace.",
        "operationId" : "EventHubs_ListByNamespace",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "May be used to limit the number of results to the most recent N usageDetails.",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of Event Hubs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventHubListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}" : {
      "get" : {
        "tags" : [ "EventHubs" ],
        "description" : "Gets an Event Hubs description for the specified Event Hub.",
        "operationId" : "EventHubs_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the Event Hub description.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eventhub"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "EventHubs" ],
        "description" : "Creates or updates a new Event Hub as a nested resource within a Namespace.",
        "operationId" : "EventHubs_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to create an Event Hub resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Eventhub"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Event Hub successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eventhub"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EventHubs" ],
        "description" : "Deletes an Event Hub from the specified Namespace and resource group.",
        "operationId" : "EventHubs_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event Hub successfully deleted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules" : {
      "get" : {
        "tags" : [ "EventHubs" ],
        "description" : "Gets the authorization rules for an Event Hub.",
        "operationId" : "EventHubs_ListAuthorizationRules",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event Hub AuthorizationRule returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRuleListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}" : {
      "get" : {
        "tags" : [ "EventHubs" ],
        "description" : "Gets an AuthorizationRule for an Event Hub by rule name.",
        "operationId" : "EventHubs_GetAuthorizationRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event Hub AuthorizationRule successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "EventHubs" ],
        "description" : "Creates or updates an AuthorizationRule for the specified Event Hub.",
        "operationId" : "EventHubs_CreateOrUpdateAuthorizationRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The shared access AuthorizationRule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationRule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Event Hub AuthorizationRule successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EventHubs" ],
        "description" : "Deletes an Event Hub AuthorizationRule.",
        "operationId" : "EventHubs_DeleteAuthorizationRule",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event Hub AuthorizationRule successfully deleted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/ListKeys" : {
      "post" : {
        "tags" : [ "EventHubs" ],
        "description" : "Gets the ACS and SAS connection strings for the Event Hub.",
        "operationId" : "EventHubs_ListKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Connection strings successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys" : {
      "post" : {
        "tags" : [ "EventHubs" ],
        "description" : "Regenerates the ACS and SAS connection strings for the Event Hub.",
        "operationId" : "EventHubs_RegenerateKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "authorizationRuleName",
          "in" : "path",
          "description" : "The authorization rule name.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey).",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegenerateAccessKeyParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Connection strings successfully regenerated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups" : {
      "get" : {
        "tags" : [ "ConsumerGroups" ],
        "description" : "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.",
        "operationId" : "ConsumerGroups_ListByEventHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 0,
            "type" : "integer"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "May be used to limit the number of results to the most recent N usageDetails.",
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of consumer groups.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsumerGroupListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}" : {
      "get" : {
        "tags" : [ "ConsumerGroups" ],
        "description" : "Gets a description for the specified consumer group.",
        "operationId" : "ConsumerGroups_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "consumerGroupName",
          "in" : "path",
          "description" : "The consumer group name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the consumer group description.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsumerGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ConsumerGroups" ],
        "description" : "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.",
        "operationId" : "ConsumerGroups_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "consumerGroupName",
          "in" : "path",
          "description" : "The consumer group name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to create or update a consumer group resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConsumerGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Consumer group successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConsumerGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ConsumerGroups" ],
        "description" : "Deletes a consumer group from the specified Event Hub and resource group.",
        "operationId" : "ConsumerGroups_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "eventHubName",
          "in" : "path",
          "description" : "The Event Hub name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "consumerGroupName",
          "in" : "path",
          "description" : "The consumer group name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Consumer group deleted."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/messagingplan" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets messaging plan for specified namespace.",
        "operationId" : "Namespaces_GetMessagingPlan",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Messaging Plan successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MessagingPlan"
                }
              }
            }
          },
          "default" : {
            "description" : "Eventhub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets list of NetworkRuleSet for a Namespace.",
        "operationId" : "Namespaces_ListNetworkRuleSets",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of NetworkRuleSets for Namespace successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkRuleSetListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "EventHub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default" : {
      "get" : {
        "tags" : [ "Namespaces" ],
        "description" : "Gets NetworkRuleSet for a Namespace.",
        "operationId" : "Namespaces_GetNetworkRuleSet",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Namespace NetworkRuleSet successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkRuleSet"
                }
              }
            }
          },
          "default" : {
            "description" : "EventHub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Namespaces" ],
        "description" : "Create or update NetworkRuleSet for a Namespace.",
        "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of the resource group within the azure subscription.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "namespaceName",
          "in" : "path",
          "description" : "The Namespace name",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 6,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Namespace IpFilterRule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkRuleSet"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Namespace NetworkRuleSet successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkRuleSet"
                }
              }
            }
          },
          "default" : {
            "description" : "EventHub error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccessKeys" : {
        "type" : "object",
        "properties" : {
          "aliasPrimaryConnectionString" : {
            "type" : "string",
            "description" : "Primary connection string of the alias if GEO DR is enabled",
            "readOnly" : true
          },
          "aliasSecondaryConnectionString" : {
            "type" : "string",
            "description" : "Secondary  connection string of the alias if GEO DR is enabled",
            "readOnly" : true
          },
          "keyName" : {
            "type" : "string",
            "description" : "A string that describes the AuthorizationRule.",
            "readOnly" : true
          },
          "primaryConnectionString" : {
            "type" : "string",
            "description" : "Primary connection string of the created namespace AuthorizationRule.",
            "readOnly" : true
          },
          "primaryKey" : {
            "type" : "string",
            "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
            "readOnly" : true
          },
          "secondaryConnectionString" : {
            "type" : "string",
            "description" : "Secondary connection string of the created namespace AuthorizationRule.",
            "readOnly" : true
          },
          "secondaryKey" : {
            "type" : "string",
            "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
            "readOnly" : true
          }
        },
        "description" : "Namespace/EventHub Connection String"
      },
      "ArmDisasterRecovery" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "alternateName" : {
                "type" : "string",
                "description" : "Alternate name specified when alias and namespace names are same."
              },
              "partnerNamespace" : {
                "type" : "string",
                "description" : "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
              },
              "pendingReplicationOperationsCount" : {
                "type" : "integer",
                "description" : "Number of entities pending to be replicated.",
                "format" : "int64",
                "readOnly" : true
              },
              "provisioningState" : {
                "type" : "string",
                "description" : "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
                "readOnly" : true,
                "enum" : [ "Accepted", "Succeeded", "Failed" ]
              },
              "role" : {
                "type" : "string",
                "description" : "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
                "readOnly" : true,
                "enum" : [ "Primary", "PrimaryNotReplicating", "Secondary" ]
              }
            },
            "description" : "Properties required to the Create Or Update Alias(Disaster Recovery configurations)"
          }
        },
        "description" : "Single item in List or Get Alias(Disaster Recovery configuration) operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ArmDisasterRecoveryListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Alias(Disaster Recovery configuration)",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of Alias(Disaster Recovery configurations)",
            "items" : {
              "$ref" : "#/components/schemas/ArmDisasterRecovery"
            }
          }
        },
        "description" : "The result of the List Alias(Disaster Recovery configuration) operation."
      },
      "AuthorizationRule" : {
        "properties" : {
          "properties" : {
            "required" : [ "rights" ],
            "type" : "object",
            "properties" : {
              "rights" : {
                "type" : "array",
                "description" : "The rights associated with the rule.",
                "items" : {
                  "type" : "string",
                  "enum" : [ "Manage", "Send", "Listen" ]
                }
              }
            },
            "description" : "Properties supplied to create or update AuthorizationRule"
          }
        },
        "description" : "Single item in a List or Get AuthorizationRule operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "AuthorizationRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules"
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List Authorization Rules operation.",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationRule"
            }
          }
        },
        "description" : "The response from the List namespace operation."
      },
      "CaptureDescription" : {
        "type" : "object",
        "properties" : {
          "destination" : {
            "$ref" : "#/components/schemas/Destination"
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "A value that indicates whether capture description is enabled. "
          },
          "encoding" : {
            "type" : "string",
            "description" : "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
            "enum" : [ "Avro", "AvroDeflate" ]
          },
          "intervalInSeconds" : {
            "maximum" : 900,
            "minimum" : 60,
            "type" : "integer",
            "description" : "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds",
            "format" : "int32"
          },
          "sizeLimitInBytes" : {
            "maximum" : 524288000,
            "minimum" : 10485760,
            "type" : "integer",
            "description" : "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes",
            "format" : "int32"
          },
          "skipEmptyArchives" : {
            "type" : "boolean",
            "description" : "A value that indicates whether to Skip Empty Archives"
          }
        },
        "description" : "Properties to configure capture description for eventhub"
      },
      "CheckNameAvailabilityParameter" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name to check the namespace name availability"
          }
        },
        "description" : "Parameter supplied to check Namespace name availability operation "
      },
      "CheckNameAvailabilityResult" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The detailed info regarding the reason associated with the Namespace.",
            "readOnly" : true
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
          },
          "reason" : {
            "$ref" : "#/components/schemas/UnavailableReason"
          }
        },
        "description" : "The Result of the CheckNameAvailability operation"
      },
      "ConsumerGroup" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "createdAt" : {
                "type" : "string",
                "description" : "Exact time the message was created.",
                "format" : "date-time",
                "readOnly" : true
              },
              "updatedAt" : {
                "type" : "string",
                "description" : "The exact time the message was updated.",
                "format" : "date-time",
                "readOnly" : true
              },
              "userMetadata" : {
                "type" : "string",
                "description" : "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
              }
            },
            "description" : "Single item in List or Get Consumer group operation"
          }
        },
        "description" : "Single item in List or Get Consumer group operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ConsumerGroupListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group"
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List Consumer Group operation.",
            "items" : {
              "$ref" : "#/components/schemas/ConsumerGroup"
            }
          }
        },
        "description" : "The result to the List Consumer Group operation."
      },
      "Destination" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name for capture destination"
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "archiveNameFormat" : {
                "type" : "string",
                "description" : "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
              },
              "blobContainer" : {
                "type" : "string",
                "description" : "Blob container Name"
              },
              "storageAccountResourceId" : {
                "type" : "string",
                "description" : "Resource id of the storage account to be used to create the blobs"
              }
            },
            "description" : "Properties describing the storage account, blob container and archive name format for capture destination"
          }
        },
        "description" : "Capture storage details for capture description"
      },
      "EHNamespace" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "createdAt" : {
                "type" : "string",
                "description" : "The time the Namespace was created.",
                "format" : "date-time",
                "readOnly" : true
              },
              "isAutoInflateEnabled" : {
                "type" : "boolean",
                "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
              },
              "kafkaEnabled" : {
                "type" : "boolean",
                "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
              },
              "maximumThroughputUnits" : {
                "maximum" : 20,
                "minimum" : 0,
                "type" : "integer",
                "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                "format" : "int32"
              },
              "metricId" : {
                "type" : "string",
                "description" : "Identifier for Azure Insights metrics.",
                "readOnly" : true
              },
              "provisioningState" : {
                "type" : "string",
                "description" : "Provisioning state of the Namespace.",
                "readOnly" : true
              },
              "serviceBusEndpoint" : {
                "type" : "string",
                "description" : "Endpoint you can use to perform Service Bus operations.",
                "readOnly" : true
              },
              "updatedAt" : {
                "type" : "string",
                "description" : "The time the Namespace was updated.",
                "format" : "date-time",
                "readOnly" : true
              }
            },
            "description" : "Namespace properties supplied for create namespace operation."
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Single Namespace item in List or Get Operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "EHNamespaceListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List Namespace operation",
            "items" : {
              "$ref" : "#/components/schemas/EHNamespace"
            }
          }
        },
        "description" : "The response of the List Namespace operation"
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message indicating why the operation failed."
          }
        },
        "description" : "Error response indicates EventHub service is not able to process the incoming request. The reason is provided in the error message."
      },
      "EventHubListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains incomplete list of EventHubs."
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List EventHubs operation.",
            "items" : {
              "$ref" : "#/components/schemas/Eventhub"
            }
          }
        },
        "description" : "The result of the List EventHubs operation."
      },
      "Eventhub" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "captureDescription" : {
                "$ref" : "#/components/schemas/CaptureDescription"
              },
              "createdAt" : {
                "type" : "string",
                "description" : "Exact time the Event Hub was created.",
                "format" : "date-time",
                "readOnly" : true
              },
              "messageRetentionInDays" : {
                "minimum" : 1,
                "type" : "integer",
                "description" : "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
                "format" : "int64"
              },
              "partitionCount" : {
                "minimum" : 1,
                "type" : "integer",
                "description" : "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
                "format" : "int64"
              },
              "partitionIds" : {
                "type" : "array",
                "description" : "Current number of shards on the Event Hub.",
                "readOnly" : true,
                "items" : {
                  "type" : "string"
                }
              },
              "status" : {
                "type" : "string",
                "description" : "Enumerates the possible values for the status of the Event Hub.",
                "enum" : [ "Active", "Disabled", "Restoring", "SendDisabled", "ReceiveDisabled", "Creating", "Deleting", "Renaming", "Unknown" ]
              },
              "updatedAt" : {
                "type" : "string",
                "description" : "The exact time the message was updated.",
                "format" : "date-time",
                "readOnly" : true
              }
            },
            "description" : "Properties supplied to the Create Or Update Event Hub operation."
          }
        },
        "description" : "Single item in List or Get Event Hub operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "MessagingPlan" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "revision" : {
                "type" : "integer",
                "description" : "revision number",
                "format" : "int64",
                "readOnly" : true
              },
              "selectedEventHubUnit" : {
                "type" : "integer",
                "description" : "Selected event hub unit",
                "format" : "int32",
                "readOnly" : true
              },
              "sku" : {
                "type" : "integer",
                "description" : "Sku type",
                "format" : "int32",
                "readOnly" : true
              },
              "updatedAt" : {
                "type" : "string",
                "description" : "The exact time the messaging plan was updated.",
                "format" : "date-time",
                "readOnly" : true
              }
            }
          }
        },
        "description" : "Messaging Plan for the namespace",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "MessagingRegions" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Region code",
                "readOnly" : true
              },
              "fullName" : {
                "type" : "string",
                "description" : "Full name of the region",
                "readOnly" : true
              }
            }
          }
        },
        "description" : "Messaging Region",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "MessagingRegionsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains incomplete list of MessagingRegions.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List MessagingRegions type.",
            "items" : {
              "$ref" : "#/components/schemas/MessagingRegions"
            }
          }
        },
        "description" : "The response of the List MessagingRegions operation."
      },
      "NWRuleSetIpRules" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "description" : "The IP Filter Action",
            "default" : "Allow",
            "enum" : [ "Allow" ]
          },
          "ipMask" : {
            "type" : "string",
            "description" : "IP Mask"
          }
        },
        "description" : "Description of NetWorkRuleSet - IpRules resource."
      },
      "NWRuleSetVirtualNetworkRules" : {
        "type" : "object",
        "properties" : {
          "ignoreMissingVnetServiceEndpoint" : {
            "type" : "boolean",
            "description" : "Value that indicates whether to ignore missing VNet Service Endpoint"
          },
          "subnet" : {
            "$ref" : "#/components/schemas/Subnet"
          }
        },
        "description" : "Description of VirtualNetworkRules - NetworkRules resource."
      },
      "NetworkRuleSet" : {
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "defaultAction" : {
                "type" : "string",
                "description" : "Default Action for Network Rule Set",
                "enum" : [ "Allow", "Deny" ]
              },
              "ipRules" : {
                "type" : "array",
                "description" : "List of IpRules",
                "items" : {
                  "$ref" : "#/components/schemas/NWRuleSetIpRules"
                }
              },
              "virtualNetworkRules" : {
                "type" : "array",
                "description" : "List VirtualNetwork Rules",
                "items" : {
                  "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                }
              }
            },
            "description" : "NetworkRuleSet properties"
          }
        },
        "description" : "Description of NetworkRuleSet resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "NetworkRuleSetListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet."
          },
          "value" : {
            "type" : "array",
            "description" : "Result of the List NetworkRuleSet operation.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkRuleSet"
            }
          }
        },
        "description" : "The response of the List NetworkRuleSet operation"
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "operation" : {
                "type" : "string",
                "description" : "Operation type: Read, write, delete, etc.",
                "readOnly" : true
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft.EventHub",
                "readOnly" : true
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource on which the operation is performed: Invoice, etc.",
                "readOnly" : true
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}",
            "readOnly" : true
          }
        },
        "description" : "A Event Hub REST API operation"
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "RegenerateAccessKeyParameters" : {
        "required" : [ "keyType" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType"
          },
          "keyType" : {
            "type" : "string",
            "description" : "The access key to regenerate.",
            "enum" : [ "PrimaryKey", "SecondaryKey" ]
          }
        },
        "description" : "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource Id",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "readOnly" : true
          }
        },
        "description" : "The Resource definition"
      },
      "Sku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "capacity" : {
            "maximum" : 20,
            "minimum" : 0,
            "type" : "integer",
            "description" : "The Event Hubs throughput units, value should be 0 to 20 throughput units.",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this SKU.",
            "enum" : [ "Basic", "Standard" ]
          },
          "tier" : {
            "type" : "string",
            "description" : "The billing tier of this particular SKU.",
            "enum" : [ "Basic", "Standard" ]
          }
        },
        "description" : "SKU parameters supplied to the create namespace operation"
      },
      "Subnet" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID of Virtual Network Subnet"
          }
        },
        "description" : "Properties supplied for Subnet"
      },
      "TrackedResource" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Resource location"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags"
          }
        },
        "description" : "Definition of Resource",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "UnavailableReason" : {
        "type" : "string",
        "description" : "Specifies the reason for the unavailability of the service.",
        "enum" : [ "None", "InvalidName", "SubscriptionIsDisabled", "NameInUse", "NameInLockdown", "TooManyNamespaceInCurrentSubscription" ]
      }
    },
    "parameters" : {
      "AliasNameParameter" : {
        "name" : "alias",
        "in" : "path",
        "description" : "The Disaster Recovery configuration name",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client API Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "AuthorizationRuleNameParameter" : {
        "name" : "authorizationRuleName",
        "in" : "path",
        "description" : "The authorization rule name.",
        "required" : true,
        "schema" : {
          "minLength" : 1,
          "type" : "string"
        }
      },
      "ConsumerGroupNameParameter" : {
        "name" : "consumerGroupName",
        "in" : "path",
        "description" : "The consumer group name",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "EventHubNameParameter" : {
        "name" : "eventHubName",
        "in" : "path",
        "description" : "The Event Hub name",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "NamespaceNameParameter" : {
        "name" : "namespaceName",
        "in" : "path",
        "description" : "The Namespace name",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 6,
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Name of the resource group within the azure subscription.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "SkipParameter" : {
        "name" : "$skip",
        "in" : "query",
        "description" : "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
        "schema" : {
          "maximum" : 1000,
          "minimum" : 0,
          "type" : "integer"
        }
      },
      "SkuNameParameter" : {
        "name" : "sku",
        "in" : "path",
        "description" : "The sku type.",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 1,
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "TopParameter" : {
        "name" : "$top",
        "in" : "query",
        "description" : "May be used to limit the number of results to the most recent N usageDetails.",
        "schema" : {
          "maximum" : 1000,
          "minimum" : 1,
          "type" : "integer"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}