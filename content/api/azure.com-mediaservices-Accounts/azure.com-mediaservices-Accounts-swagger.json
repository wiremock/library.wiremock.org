{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Media Services",
    "description" : "This Swagger was generated by the API Framework.",
    "version" : "2018-07-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/providers/Microsoft.Media/operations" : {
      "get" : {
        "summary" : "List Operations",
        "description" : "Lists all the Media Services operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability" : {
      "post" : {
        "summary" : "Check Name Availability",
        "description" : "Checks whether the Media Service resource name is available.",
        "operationId" : "Locations_CheckNameAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationName",
          "in" : "path",
          "description" : "The name of the location",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityNameAvailabilityCheckOutput"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices" : {
      "get" : {
        "summary" : "List Media Services accounts",
        "description" : "List Media Services accounts in the subscription.",
        "operationId" : "Mediaservices_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionMediaServiceCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices/{accountName}" : {
      "get" : {
        "summary" : "Get a Media Services account",
        "description" : "Get the details of a Media Services account",
        "operationId" : "Mediaservices_GetBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionMediaService"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices" : {
      "get" : {
        "summary" : "List Media Services accounts",
        "description" : "List Media Services accounts in the resource group",
        "operationId" : "Mediaservices_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaServiceCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}" : {
      "get" : {
        "summary" : "Get a Media Services account",
        "description" : "Get the details of a Media Services account",
        "operationId" : "Mediaservices_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaService"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Create or update a Media Services account",
        "description" : "Creates or updates a Media Services account",
        "operationId" : "Mediaservices_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaService"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaService"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaService"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a Media Services account.",
        "description" : "Deletes a Media Services account",
        "operationId" : "Mediaservices_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "summary" : "Update a Media Services account",
        "description" : "Updates an existing Media Services account",
        "operationId" : "Mediaservices_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaService"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaService"
                }
              }
            }
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/syncStorageKeys" : {
      "post" : {
        "summary" : "Synchronizes Storage Account Keys",
        "description" : "Synchronizes storage account keys for a storage account associated with the Media Service account.",
        "operationId" : "Mediaservices_SyncStorageKeys",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncStorageKeysInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "Detailed error information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ODataError"
          }
        },
        "description" : "The API error."
      },
      "CheckNameAvailabilityInput" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The account name."
          },
          "type" : {
            "type" : "string",
            "description" : "The account type. For a Media Services account, this should be 'MediaServices'."
          }
        },
        "description" : "The input to the check name availability request."
      },
      "EntityNameAvailabilityCheckOutput" : {
        "required" : [ "nameAvailable" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Specifies the detailed reason if the name is not available."
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "Specifies if the name is available."
          },
          "reason" : {
            "type" : "string",
            "description" : "Specifies the reason if the name is not available."
          }
        },
        "description" : "The response from the check name availability request."
      },
      "Location" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "MediaService" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MediaServiceProperties"
          }
        },
        "description" : "A Media Services account.",
        "allOf" : [ {
          "properties" : {
            "location" : {
              "type" : "string",
              "description" : "The Azure Region of the resource."
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            }
          },
          "description" : "The resource model definition for a ARM tracked resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "MediaServiceCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of MediaService items.",
            "items" : {
              "$ref" : "#/components/schemas/MediaService"
            }
          }
        },
        "description" : "A collection of MediaService items."
      },
      "MediaServiceProperties" : {
        "type" : "object",
        "properties" : {
          "mediaServiceId" : {
            "type" : "string",
            "description" : "The Media Services account ID.",
            "format" : "uuid",
            "nullable" : false,
            "readOnly" : true
          },
          "storageAccounts" : {
            "type" : "array",
            "description" : "The storage accounts for this resource.",
            "items" : {
              "$ref" : "#/components/schemas/StorageAccount"
            }
          }
        },
        "description" : "Properties of the Media Services account."
      },
      "Metric" : {
        "type" : "object",
        "properties" : {
          "aggregationType" : {
            "type" : "string",
            "description" : "The metric aggregation type",
            "nullable" : false,
            "readOnly" : true,
            "enum" : [ "Average", "Count", "Total" ]
          },
          "dimensions" : {
            "type" : "array",
            "description" : "The metric dimensions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MetricDimension"
            }
          },
          "displayDescription" : {
            "type" : "string",
            "description" : "The metric display description.",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The metric display name.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The metric name.",
            "readOnly" : true
          },
          "unit" : {
            "type" : "string",
            "description" : "The metric unit",
            "nullable" : false,
            "readOnly" : true,
            "enum" : [ "Bytes", "Count", "Milliseconds" ]
          }
        },
        "description" : "A metric emitted by service."
      },
      "MetricDimension" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name for the dimension.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The metric dimension name.",
            "readOnly" : true
          },
          "toBeExportedForShoebox" : {
            "type" : "boolean",
            "description" : "Whether to export metric to shoebox.",
            "nullable" : false,
            "readOnly" : true
          }
        },
        "description" : "A metric dimension."
      },
      "MetricProperties" : {
        "type" : "object",
        "properties" : {
          "serviceSpecification" : {
            "$ref" : "#/components/schemas/ServiceSpecification"
          }
        },
        "description" : "Metric properties."
      },
      "ODataError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A language-independent error name."
          },
          "details" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/ODataError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error (for example, the name of the property in error)."
          }
        },
        "description" : "Information about an error."
      },
      "Operation" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "The operation name."
          },
          "origin" : {
            "type" : "string",
            "description" : "Origin of the operation."
          },
          "properties" : {
            "$ref" : "#/components/schemas/MetricProperties"
          }
        },
        "description" : "An operation."
      },
      "OperationCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of Operation items.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "A collection of Operation items."
      },
      "OperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The operation description."
          },
          "operation" : {
            "type" : "string",
            "description" : "The operation type."
          },
          "provider" : {
            "type" : "string",
            "description" : "The service provider."
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource on which the operation is performed."
          }
        },
        "description" : "Operation details."
      },
      "Provider" : {
        "required" : [ "providerName" ],
        "type" : "object",
        "properties" : {
          "providerName" : {
            "type" : "string",
            "description" : "The provider name."
          }
        },
        "description" : "A resource provider."
      },
      "ServiceSpecification" : {
        "type" : "object",
        "properties" : {
          "metricSpecifications" : {
            "type" : "array",
            "description" : "List of metric specifications.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Metric"
            }
          }
        },
        "description" : "The service metric specifications."
      },
      "StorageAccount" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the storage account.",
            "enum" : [ "Primary", "Secondary" ]
          }
        },
        "description" : "The storage account details."
      },
      "SubscriptionMediaService" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MediaServiceProperties"
          }
        },
        "description" : "A Media Services account.",
        "allOf" : [ {
          "properties" : {
            "location" : {
              "type" : "string",
              "description" : "The Azure Region of the resource."
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            }
          },
          "description" : "The resource model definition for a ARM tracked resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "SubscriptionMediaServiceCollection" : {
        "type" : "object",
        "properties" : {
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "A link to the next page of the collection (when the collection contains too many results to return in one response)."
          },
          "value" : {
            "type" : "array",
            "description" : "A collection of SubscriptionMediaService items.",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionMediaService"
            }
          }
        },
        "description" : "A collection of SubscriptionMediaService items."
      },
      "SyncStorageKeysInput" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the storage account resource."
          }
        },
        "description" : "The input to the sync storage keys request."
      }
    },
    "parameters" : {
      "ApiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The Version of the API to be used with the client request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The unique identifier for a Microsoft Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}