{
  "mappings" : [ {
    "id" : "2d74a18b-b037-4f6e-a6c3-3ab0cd65c863",
    "name" : "List all users assigned licenses for a specific product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/816c/users",
      "method" : "GET",
      "queryParameters" : {
        "customerId" : {
          "equalTo" : "498i"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"kind\" : \"k75xdfeqok0y34mbm8djkpepin70p600v2ql980ssjehy5r7o5e47bdpbcril8\",\n  \"nextPageToken\" : \"qfurragj9fo5ohgrl20chz88cxl5g6rmva8j92qfwumqejp3h0prjqag3w5tch2zpsvlzqblsih\",\n  \"etag\" : \"eeeet\",\n  \"items\" : [ {\n    \"skuName\" : \"Conrad Bogisich IV\",\n    \"productId\" : \"3d0i\",\n    \"kind\" : \"defrn5r74m3vjp24g3n63pfacd9nu7on5lz3p56eocu4c06q783frc0gmgzh3y4poc0wlc9yxijfbsftvtbdghmi3e5umkrzm2wymn8i7kv41dl7xtnvooj7im7n5k2hgv8gmm0093l63ykrs9e7882b08nfdwnk6rrf0x3zveidfh1pon1i0yfa05\",\n    \"etags\" : \"ww1hc5qps36dbtk5mz21upy3vyk3eixflzc6k1c87phhjkrrr96gp4s9hoqkakaofm1imkyylbvddaohklqz25t4l7azi4cgczhd4f6eu1hrseffu1ye6j4rxoz6uj5xzkcy3temjri9lqgtfnn9pj3bb0dr9lb84j\",\n    \"userId\" : \"2fxe\",\n    \"productName\" : \"Clifton Kozey\",\n    \"skuId\" : \"1fmx\",\n    \"selfLink\" : \"tv9m3e11ns6fbsb7r2yk1nan4yd625cv5hirkkyzrtls47fnuijh439dcjptmg22z8w9v7tmaner0jqmldncwl87c0ogc22ibg42ot9gxgtacvvsk0vxc1rit1k4z6u82es7cg3sebjqotziimtvxfas4vl47mvualaznm7ertzm2finh3gqezcfze96asxu\"\n  }, {\n    \"skuName\" : \"Tyree Hilll\",\n    \"productId\" : \"yy9j\",\n    \"kind\" : \"fnskr5dp26zu5p70jt9jflbgkqiavbvp67i72k667fd2c9r8gd75dfue95jwq5wobowokar5l2yakd3q3c\",\n    \"etags\" : \"avb58xns67d18usgpc5xdp0je9x\",\n    \"userId\" : \"1a9k\",\n    \"productName\" : \"Kesha Abshire\",\n    \"skuId\" : \"u3vt\",\n    \"selfLink\" : \"jw5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d74a18b-b037-4f6e-a6c3-3ab0cd65c863",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.420114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.listForProduct",
          "schema" : {
            "properties" : {
              "etag" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "items" : {
                "description" : "The LicenseAssignments in this page of results.",
                "items" : {
                  "$ref" : "#/components/schemas/LicenseAssignment"
                },
                "type" : "array"
              },
              "kind" : {
                "default" : "licensing#licenseAssignmentList",
                "description" : "Identifies the resource as a collection of LicenseAssignments.",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a7f90f63-cc20-4c93-9dcc-dffe9af09d73",
    "name" : "List all users assigned licenses for a specific product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/mkt3/sku/orn1/users",
      "method" : "GET",
      "queryParameters" : {
        "customerId" : {
          "equalTo" : "143t"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"kind\" : \"jasonmh9wbbiu85yk02aknr68ec3qhyvkkxgprrj1zxqol40v2k4an7uy8ip3aqoyo1o6ruuxn7fqo2gpi0sir2xoz2ai\",\n  \"nextPageToken\" : \"0i1l51h6jj26rbgo7936cvygg3k34mldva3x29bbc1q1dkcxb5anp6hzlpn35ytwlfa7jjs8p4dbi0lm4grbl06ufnbdav88ewzn3q9jmyu8t2z6ypw48lcughmz0z2dyn95wah03hpxqaqax18xvm4a6n6yy4qs92jay4p8062kyh1xt1ux691760978th1ba\",\n  \"etag\" : \"culpa\",\n  \"items\" : [ {\n    \"skuName\" : \"Heidi Carroll PhD\",\n    \"productId\" : \"hp92\",\n    \"kind\" : \"tb4theujxzdpx42r9pj6n0r80sud0tef1f0evnbum4gpzovuwe9ww0jhftfmwgm4hle1relloff5tvi952wmxwz7xj0d15tjshqj20fjyxdo7e61dz3lestm6a724j84wzwhb02pqeukn8s1ibqu0g5r6ariwyewkbp5qelmz66s4pgqpzxf2ptiw3d3pusfrwodoelv\",\n    \"etags\" : \"ayuk72m1804w20bgkm3r6ulwnfq7wr3kyu6y77nn\",\n    \"userId\" : \"2v55\",\n    \"productName\" : \"Timothy Kozey\",\n    \"skuId\" : \"l34i\",\n    \"selfLink\" : \"lpb5wycedjuheij6crjg7u6okfgsq1cc2naqogv6jykxp58chrvtmogx1ohh6xiusjg1nz5dkr2g40ph9zs72yyv6q17hy2vr76mu0xnnjtfgdwidekdln5y0ws7\"\n  }, {\n    \"skuName\" : \"Eldon Howe\",\n    \"productId\" : \"ejam\",\n    \"kind\" : \"5q2ul5gc9zdjacew4ry4pl56ouo9lk5486\",\n    \"etags\" : \"1c9ckmty2eale2k115tfxefjt79j01mi3533pxwmixn1g64la\",\n    \"userId\" : \"24a4\",\n    \"productName\" : \"Stacey Langworth\",\n    \"skuId\" : \"53x9\",\n    \"selfLink\" : \"79dbp919fcetxopr56zrn5rxhac206ba50peqrlqy481skqgpmak4srr69ij3u8b7i8fcwjv1vfb82yi2t01j53olc0sxmu8g0\"\n  }, {\n    \"skuName\" : \"Shannan Rosenbaum\",\n    \"productId\" : \"80kj\",\n    \"kind\" : \"zna5dsdiai5gmjvfrvbsvtmdarv40jcjb3c13p3cruyjwpaemj8grw9p110qkmpfd4fzmdmzdjd5luazktgxzl8kcqx5qrqechhkjkdfaepecwwuheinyvtqfjquze6y3\",\n    \"etags\" : \"lqsobipu2qq6d0cetqer81umv8dfsrvzh08y7h0vzge0z58d22gg5xk392cjq8g9fn8r9rrlrspi6y\",\n    \"userId\" : \"hls8\",\n    \"productName\" : \"Tonja Berge DDS\",\n    \"skuId\" : \"0hf9\",\n    \"selfLink\" : \"x0if9793c0zp1ay3rvwql9v7fwzzf3bwacs42yqrjyuhqmhhm2yqalf5kha4sa762hrojk70jn34fm6d9mq6ovudgm56ztbkigy93nl97a9idwlax5\"\n  }, {\n    \"skuName\" : \"Brady Johnson\",\n    \"productId\" : \"351p\",\n    \"kind\" : \"7485ghmyf2i2z1gd7ukcxnhpgfki294boqg7vk0wtv0nfv92is2ce2cfzlq9ss11p28qk1grs3j1bfjmfiaac10r0ik0rbwbiq9psjo2d8o9fzo3uicvfssvhgh11zdp8za837iu23eua81yr2tqeddlgam7rb8e9m3g8oobxdukq4fa\",\n    \"etags\" : \"3bbio5hzb1riybdtai5iobbbs8tgli03dcjqbfocm6ehsrrws93n65xy20dhxbzssawhlnuww2v0i6zv2rz4240thhzr7d3uwtcy3h780h4bpgbunpkajm6ybukj\",\n    \"userId\" : \"1nyb\",\n    \"productName\" : \"Christen Turcotte\",\n    \"skuId\" : \"0x9g\",\n    \"selfLink\" : \"v9pvd0t0fopt3h1gxqiekxmmqvqaaqc6bbovbcevfzp9exa7inllmntoy3nbxe3m9o382prewxv6j7huhwdlbvdzewu6k2i9jqmxieci3ex4ai41r4n0bm42oxlc8dsxx6l7b7p6nptg\"\n  }, {\n    \"skuName\" : \"Shellie Stamm\",\n    \"productId\" : \"nw70\",\n    \"kind\" : \"0u0y5n4dj1u2d8pz2mzttazap8qqjfswqzytj2infwnlj0elzj9tzq4mu4r1ocwkbhut2z9rr6k67ft9t8tbbl66xld5ka4gygx62lxg6nlt9p77r4dvvkya9qhs1p194qrnv\",\n    \"etags\" : \"wap0ef7m3ljqus9h6ck4e5yp1stfbmwt4c1shv48gfex1c1rx5bfixfdx734z1spnhg86huj9al5sga05f8kjma1gl\",\n    \"userId\" : \"220y\",\n    \"productName\" : \"Tyron Hickle\",\n    \"skuId\" : \"omzz\",\n    \"selfLink\" : \"v4ic85c3da4lynslkth0r3u23lixw2wv1aom9mczh4hrhc5mqdnyozawqdtrbajyspbxgxw878cig4f42t76amu57mk4jfwxq9\"\n  }, {\n    \"skuName\" : \"King King\",\n    \"productId\" : \"3s3m\",\n    \"kind\" : \"v17h5sp7a5x2hz5n9fugxqmvr7itrsuzffsdti2t1kx4xnrgzjg1bd0q7dwlfqkjtv6huvm773\",\n    \"etags\" : \"dkli84xelzehvuortxk8lumlbv0ct8d0oabr7kqu39pruiwaaatgi42vd9n7f8oj8n\",\n    \"userId\" : \"11cv\",\n    \"productName\" : \"Joshua Ernser\",\n    \"skuId\" : \"lky9\",\n    \"selfLink\" : \"oqt4xdqosu7e8noujsvdcgaf25rubtzhvibollsew6l3skqn9lw69hnthc1v0a4w008rzsd4b2shwy02i12bq1lao9pmf25gvsgcspdw1dm9q23bv6tcrrpp5rndjzw7rukr3ml0pfd1trji7v5yss2v22r34y1qpi65wodtd4fgaevvcw2x2k9x0qm1v6\"\n  }, {\n    \"skuName\" : \"Porfirio Hegmann III\",\n    \"productId\" : \"zq93\",\n    \"kind\" : \"vqbx81o1atlqt5\",\n    \"etags\" : \"6kwa3npwcdwphsyzpl51ztbe0m\",\n    \"userId\" : \"8tn2\",\n    \"productName\" : \"Nieves Haag\",\n    \"skuId\" : \"2zr1\",\n    \"selfLink\" : \"y4oyddkp9a1fn531kdny2mmp3fjdpoq5m6yockirs15o5gk8sc0log1udbx5ea66nzoib2nv3oent70p99c3dscukuechs4gjwu\"\n  }, {\n    \"skuName\" : \"Beatrice Schiller\",\n    \"productId\" : \"vk66\",\n    \"kind\" : \"kw6ptiu7aecooh4cmld2gf9ueklpctaqk8cxfdk1y6hmp4w69y2r5n0n6s9upc34khv3hclpjoxopfzxtmu4gcr2wz6xngtetd9bakz43649e5i7pwu4jtenbtfxk5xn6p0y1f8xalt577gpe3ticbtn0be32cmoc55iosnqxhps\",\n    \"etags\" : \"lltdi5mvj8mxqn2v26dbu5b4unymdmox8ow4orkt994taqmf2yly6iuz3zpsb493i\",\n    \"userId\" : \"moyv\",\n    \"productName\" : \"Sylvester Wuckert\",\n    \"skuId\" : \"0qj1\",\n    \"selfLink\" : \"4t5n5q9e0gx29qit2dvywxb5cjym6gv63tfult7h492lqz6iiw5zdj3iml6m4bjc7nwvoscdq1awxpq16lik1r9tws6nhks4chbpbm7wl3kk2b5osdzht5mhpqohbtmv5pg9g0ozujyn2y842xow84x03dzumnuln1qmmygetxjhw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7f90f63-cc20-4c93-9dcc-dffe9af09d73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.418369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.listForProductAndSku",
          "schema" : {
            "properties" : {
              "etag" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "items" : {
                "description" : "The LicenseAssignments in this page of results.",
                "items" : {
                  "$ref" : "#/components/schemas/LicenseAssignment"
                },
                "type" : "array"
              },
              "kind" : {
                "default" : "licensing#licenseAssignmentList",
                "description" : "Identifies the resource as a collection of LicenseAssignments.",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a46051c4-9c92-41f8-83fe-73bcff639de2",
    "name" : "Reassign a user's product SKU with a different SKU in the same product.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/4wb1/sku/54u8/user/vh6r",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Miss Coreen Wunsch\",\n  \"productId\" : \"azq3\",\n  \"kind\" : \"iwalodfw9vh7mclzy7j4fibysp6slsdg7lk8z0u02ocnng0p9qvetbemg40dht5jp14wcd971yaecycw7n66mg8vfp22zy4mo30q8fyrjv93rrvsps1\",\n  \"etags\" : \"tne97g6foypm1w5oryw8zx0slnqcujxyxauvm\",\n  \"userId\" : \"c5t3\",\n  \"productName\" : \"Mrs. Albert Smith\",\n  \"skuId\" : \"nv6g\",\n  \"selfLink\" : \"kqwjnei20o904f9pzrtx1ox5qhguvc0x7j0a28q3e6g1jju2detamqqv9ep5zlwoga91ecmwjnwjt238va8cyts\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a46051c4-9c92-41f8-83fe-73bcff639de2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.412968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.update",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f402febe-ac1f-4847-a3f4-61fa6f50c2d0",
    "name" : "Reassign a user's product SKU with a different SKU in the same product. This met...",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/6l09/sku/18cl/user/q1lr",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Cherelle Heaney\",\n  \"productId\" : \"7qf8\",\n  \"kind\" : \"0d6sdddo2z1hn52328fg02q17r650753g5k372v29k99ovulwnth14c7sen897l31g7uldj69lxdbz4h\",\n  \"etags\" : \"3tsyjxcvfu0g5hi8o3jxqets2szvfbfto94kmtz10vikiarq09jp344za52zv1ymkd52hz3h123pdrvziw2im7emhth\",\n  \"userId\" : \"4g4e\",\n  \"productName\" : \"Maddie Runolfsson\",\n  \"skuId\" : \"v15b\",\n  \"selfLink\" : \"gjvp0qcrvfd2s69u3dl12v8k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f402febe-ac1f-4847-a3f4-61fa6f50c2d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.411513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.patch",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "496eb714-4404-4a4c-8dfb-75298cd41e22",
    "name" : "Get a specific user's license by product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/v1zl/sku/0xd7/user/usp5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Ned Abernathy\",\n  \"productId\" : \"3xs7\",\n  \"kind\" : \"cvoptfojn9aaz7n6w2wqajh24qdrc5ydvbor2360j3kyu297daix6cczgpbq8x3ib3kppx3q5c8cgovy4oa7280ac89khizv6hhzzh2of2l7awxa9mwjz8h5y3qtdzws\",\n  \"etags\" : \"vbpczda0w1pvhn3cae7n7dl3gr6wni4n4m2adi5wfl\",\n  \"userId\" : \"7330\",\n  \"productName\" : \"Will Barrows\",\n  \"skuId\" : \"q6o6\",\n  \"selfLink\" : \"uirdyzwfmbkav9d2u2k3oot2d24rade1rsr0rfcqnfjuxa7tp5xy3kwuo1l9sdw45knotk5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "496eb714-4404-4a4c-8dfb-75298cd41e22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.410055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.get",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "97b62a97-9cf5-4a5c-9749-229d7747a97b",
    "name" : "Revoke a license.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/t2yq/sku/80co/user/0wq5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97b62a97-9cf5-4a5c-9749-229d7747a97b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.409096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "96047e16-eceb-438d-baa1-e8b7684b4f39",
    "name" : "Assign a license.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/87z1/sku/up65/user",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Sima Ondricka II\",\n  \"productId\" : \"mn8z\",\n  \"kind\" : \"3gfyvijo271g2zokj6hevydayk2owcas02zo1r5ihp2vlcrfvbtezzb0dusnprxr95kv8jo9sdp2y5kmetgge4w\",\n  \"etags\" : \"o1vz52sg1bcn5wt0njnekmm5jr5po0ftia43w4ao69z0sumcvd92kjtobd5rgs26uy0acpbumz96a07wj0n7jp8rfp2t54y93qi2foav0qq92g8wyeiqdi1qw8hmea1yhejazqly8yvcx\",\n  \"userId\" : \"li20\",\n  \"productName\" : \"Mr. Oswaldo Zulauf\",\n  \"skuId\" : \"n762\",\n  \"selfLink\" : \"crwaupay9dz1byiww44ztb48wosamyp9a2ahmgw17lzfqfe6tsfbarscab0anubj0326takjrpp7tzgsm04xraxuuldvgr2ngchn1wi1eldlydgrf9nn81cxa19c78huaby24ksng62x3x7rvoechf3ei211nx0k19w20iw44q9wjwcna\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96047e16-eceb-438d-baa1-e8b7684b4f39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:10.408679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.insert",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  } ]
}