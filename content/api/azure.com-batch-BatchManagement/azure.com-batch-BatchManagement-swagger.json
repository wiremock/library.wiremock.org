{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "BatchManagement",
    "version" : "2019-08-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Batch/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists available operations for the Microsoft.Batch provider",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the list of available operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Batch/batchAccounts" : {
      "get" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Gets information about the Batch accounts associated with the subscription.",
        "operationId" : "BatchAccount_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains a list of Batch account entities associated with the subscription.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAccountListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/checkNameAvailability" : {
      "post" : {
        "description" : "Checks whether the Batch account name is available in the specified region.",
        "operationId" : "Location_CheckNameAvailability",
        "parameters" : [ {
          "name" : "locationName",
          "in" : "path",
          "description" : "The desired region for the name check.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Properties needed to check the availability of a name.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success. Returns details about whether a Batch account name is available.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckNameAvailabilityResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/quotas" : {
      "get" : {
        "tags" : [ "Location" ],
        "description" : "Gets the Batch service quotas for the specified subscription at the given location.",
        "operationId" : "Location_GetQuotas",
        "parameters" : [ {
          "name" : "locationName",
          "in" : "path",
          "description" : "The region for which to retrieve Batch service quotas.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the Batch service quotas for the subscription in the specified location.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchLocationQuota"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts" : {
      "get" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Gets information about the Batch accounts associated with the specified resource group.",
        "operationId" : "BatchAccount_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains a list of Batch account entities associated with the resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAccountListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}" : {
      "get" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Gets information about the specified Batch account.",
        "operationId" : "BatchAccount_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the Batch account entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Creates a new Batch account with the specified parameters. Existing accounts cannot be updated with this API and should instead be updated with the Update Batch Account API.",
        "operationId" : "BatchAccount_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters for account creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchAccountCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the Batch account entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAccount"
                }
              }
            }
          },
          "202" : {
            "description" : "The operation will be completed asynchronously.",
            "headers" : {
              "Retry-After" : {
                "description" : "Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Location" : {
                "description" : "The URL of the resource used to check the status of the asynchronous operation.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Deletes the specified Batch account.",
        "operationId" : "BatchAccount_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful."
          },
          "202" : {
            "description" : "The operation will be completed asynchronously.",
            "headers" : {
              "Retry-After" : {
                "description" : "Suggested delay to check the status of the asynchronous operation. The value is an integer that specifies the delay in seconds.",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Location" : {
                "description" : "The URL of the resource used to check the status of the asynchronous operation.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "NoContent -- account does not exist in the subscription."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Updates the properties of an existing Batch account.",
        "operationId" : "BatchAccount_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters for account update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchAccountUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the Batch account entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications" : {
      "get" : {
        "tags" : [ "Application" ],
        "description" : "Lists all of the applications in the specified account.",
        "operationId" : "Application_List",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "maxresults",
          "in" : "query",
          "description" : "The maximum number of items to return in the response.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains a list of the application entities associated with the specified account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListApplicationsResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}" : {
      "get" : {
        "tags" : [ "Application" ],
        "description" : "Gets information about the specified application.",
        "operationId" : "Application_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the application entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Application"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Application" ],
        "description" : "Adds an application to the specified Batch account.",
        "operationId" : "Application_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Application"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the application entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Application"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Application" ],
        "description" : "Deletes an application.",
        "operationId" : "Application_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful."
          },
          "204" : {
            "description" : "The operation was successful."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Application" ],
        "description" : "Updates settings for the specified application.",
        "operationId" : "Application_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Application"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the application entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Application"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}/versions" : {
      "get" : {
        "tags" : [ "ApplicationPackage" ],
        "description" : "Lists all of the application packages in the specified application.",
        "operationId" : "ApplicationPackage_List",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "maxresults",
          "in" : "query",
          "description" : "The maximum number of items to return in the response.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains a list of the application package entities associated with the specified application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListApplicationPackagesResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}/versions/{versionName}" : {
      "get" : {
        "tags" : [ "ApplicationPackage" ],
        "description" : "Gets information about the specified application package.",
        "operationId" : "ApplicationPackage_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version of the application.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the application package entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPackage"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ApplicationPackage" ],
        "description" : "Creates an application package record. The record contains the SAS where the package should be uploaded to.  Once it is uploaded the `ApplicationPackage` needs to be activated using `ApplicationPackageActive` before it can be used.",
        "operationId" : "ApplicationPackage_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version of the application.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPackage"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the application package entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPackage"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApplicationPackage" ],
        "description" : "Deletes an application package record and its associated binary file.",
        "operationId" : "ApplicationPackage_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version of the application.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful."
          },
          "204" : {
            "description" : "The operation was successful."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationName}/versions/{versionName}/activate" : {
      "post" : {
        "tags" : [ "ApplicationPackage" ],
        "description" : "Activates the specified application package. This should be done after the `ApplicationPackage` was created and uploaded. This needs to be done before an `ApplicationPackage` can be used on Pools or Tasks",
        "operationId" : "ApplicationPackage_Activate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "applicationName",
          "in" : "path",
          "description" : "The name of the application. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "versionName",
          "in" : "path",
          "description" : "The version of the application.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for the request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActivateApplicationPackageParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the application package entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationPackage"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates" : {
      "get" : {
        "tags" : [ "Certificate" ],
        "description" : "Lists all of the certificates in the specified account.",
        "operationId" : "Certificate_ListByBatchAccount",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "maxresults",
          "in" : "query",
          "description" : "The maximum number of items to return in the response.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Comma separated list of properties that should be returned. e.g. \"properties/provisioningState\". Only top level properties under properties/ are valid for selection.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression. Valid properties for filtering are \"properties/provisioningState\", \"properties/provisioningStateTransitionTime\", \"name\".",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains a list of certificates associated with the account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCertificatesResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates/{certificateName}" : {
      "get" : {
        "tags" : [ "Certificate" ],
        "description" : "Gets information about the specified certificate.",
        "operationId" : "Certificate_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.",
          "required" : true,
          "schema" : {
            "maxLength" : 45,
            "minLength" : 5,
            "pattern" : "^[\\w]+-[\\w]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the certificate entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Certificate" ],
        "description" : "Creates a new certificate inside the specified account.",
        "operationId" : "Certificate_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.",
          "required" : true,
          "schema" : {
            "maxLength" : 45,
            "minLength" : 5,
            "pattern" : "^[\\w]+-[\\w]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The entity state (ETag) version of the certificate to update. A value of \"*\" can be used to apply the operation only if the certificate already exists. If omitted, this operation will always be applied.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "Set to '*' to allow a new certificate to be created, but to prevent updating an existing certificate. Other values will be ignored.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters for certificate creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateCreateOrUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the certificate entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Certificate" ],
        "description" : "Deletes the specified certificate.",
        "operationId" : "Certificate_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.",
          "required" : true,
          "schema" : {
            "maxLength" : 45,
            "minLength" : 5,
            "pattern" : "^[\\w]+-[\\w]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful."
          },
          "202" : {
            "description" : "The operation will be completed asynchronously.",
            "headers" : {
              "Retry-After" : {
                "description" : "Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Location" : {
                "description" : "The URL of the resource used to check the status of the asynchronous operation.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "The operation was successful."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Certificate" ],
        "description" : "Updates the properties of an existing certificate.",
        "operationId" : "Certificate_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.",
          "required" : true,
          "schema" : {
            "maxLength" : 45,
            "minLength" : 5,
            "pattern" : "^[\\w]+-[\\w]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The entity state (ETag) version of the certificate to update. This value can be omitted or set to \"*\" to apply the operation unconditionally.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Certificate entity to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateCreateOrUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the certificate entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/certificates/{certificateName}/cancelDelete" : {
      "post" : {
        "tags" : [ "Certificate" ],
        "summary" : "Cancels a failed deletion of a certificate from the specified account.",
        "description" : "If you try to delete a certificate that is being used by a pool or compute node, the status of the certificate changes to deleteFailed. If you decide that you want to continue using the certificate, you can use this operation to set the status of the certificate back to active. If you intend to delete the certificate, you do not need to run this operation after the deletion failed. You must make sure that the certificate is not being used by any resources, and then you can try again to delete the certificate.",
        "operationId" : "Certificate_CancelDeletion",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.",
          "required" : true,
          "schema" : {
            "maxLength" : 45,
            "minLength" : 5,
            "pattern" : "^[\\w]+-[\\w]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the certificate entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/listKeys" : {
      "post" : {
        "tags" : [ "BatchAccount" ],
        "summary" : "Gets the account keys for the specified Batch account.",
        "description" : "This operation applies only to Batch accounts created with a poolAllocationMode of 'BatchService'. If the Batch account was created with a poolAllocationMode of 'UserSubscription', clients cannot use access to keys to authenticate, and must use Azure Active Directory instead. In this case, getting the keys will fail.",
        "operationId" : "BatchAccount_GetKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the keys of the Batch account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAccountKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools" : {
      "get" : {
        "tags" : [ "Pool" ],
        "description" : "Lists all of the pools in the specified account.",
        "operationId" : "Pool_ListByBatchAccount",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "maxresults",
          "in" : "query",
          "description" : "The maximum number of items to return in the response.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Comma separated list of properties that should be returned. e.g. \"properties/provisioningState\". Only top level properties under properties/ are valid for selection.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression. Valid properties for filtering are:\n\n name\n properties/allocationState\n properties/allocationStateTransitionTime\n properties/creationTime\n properties/provisioningState\n properties/provisioningStateTransitionTime\n properties/lastModified\n properties/vmSize\n properties/interNodeCommunication\n properties/scaleSettings/autoScale\n properties/scaleSettings/fixedScale",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains a list of certificates associated with the account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListPoolsResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}" : {
      "get" : {
        "tags" : [ "Pool" ],
        "description" : "Gets information about the specified pool.",
        "operationId" : "Pool_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "poolName",
          "in" : "path",
          "description" : "The pool name. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the pool entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pool"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Pool" ],
        "description" : "Creates a new pool inside the specified account.",
        "operationId" : "Pool_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "poolName",
          "in" : "path",
          "description" : "The pool name. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The entity state (ETag) version of the pool to update. A value of \"*\" can be used to apply the operation only if the pool already exists. If omitted, this operation will always be applied.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "Set to '*' to allow a new pool to be created, but to prevent updating an existing pool. Other values will be ignored.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Additional parameters for pool creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Pool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the pool entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pool"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Pool" ],
        "description" : "Deletes the specified pool.",
        "operationId" : "Pool_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "poolName",
          "in" : "path",
          "description" : "The pool name. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful."
          },
          "202" : {
            "description" : "The operation will be completed asynchronously.",
            "headers" : {
              "Retry-After" : {
                "description" : "Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.",
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "Location" : {
                "description" : "The URL of the resource used to check the status of the asynchronous operation.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "The operation was successful."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Pool" ],
        "description" : "Updates the properties of an existing pool.",
        "operationId" : "Pool_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "poolName",
          "in" : "path",
          "description" : "The pool name. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "The entity state (ETag) version of the pool to update. This value can be omitted or set to \"*\" to apply the operation unconditionally.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Pool properties that should be updated. Properties that are supplied will be updated, any property not supplied will be unchanged.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Pool"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the pool entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pool"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}/disableAutoScale" : {
      "post" : {
        "tags" : [ "Pool" ],
        "description" : "Disables automatic scaling for a pool.",
        "operationId" : "Pool_DisableAutoScale",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "poolName",
          "in" : "path",
          "description" : "The pool name. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the pool entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pool"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/pools/{poolName}/stopResize" : {
      "post" : {
        "tags" : [ "Pool" ],
        "summary" : "Stops an ongoing resize operation on the pool.",
        "description" : "This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.",
        "operationId" : "Pool_StopResize",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "poolName",
          "in" : "path",
          "description" : "The pool name. This must be unique within the account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9_-]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the pool entity.",
            "headers" : {
              "ETag" : {
                "description" : "The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pool"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/regenerateKeys" : {
      "post" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Regenerates the specified account key for the Batch account.",
        "operationId" : "BatchAccount_RegenerateKey",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The type of key to regenerate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchAccountRegenerateKeyParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The operation was successful. The response contains the Batch account keys.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchAccountKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/syncAutoStorageKeys" : {
      "post" : {
        "tags" : [ "BatchAccount" ],
        "description" : "Synchronizes access keys for the auto-storage account configured for the specified Batch account.",
        "operationId" : "BatchAccount_SynchronizeAutoStorageKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the Batch account.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of the Batch account.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 3,
            "pattern" : "^[-\\w\\._]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to be used with the HTTP request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The operation was successful."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ActivateApplicationPackageParameters" : {
        "required" : [ "format" ],
        "type" : "object",
        "properties" : {
          "format" : {
            "type" : "string",
            "description" : "The format of the application package binary file."
          }
        },
        "description" : "Parameters for an activating an application package."
      },
      "Application" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApplicationProperties"
          }
        },
        "description" : "Contains information about an application in a Batch account.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ApplicationPackage" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApplicationPackageProperties"
          }
        },
        "description" : "An application package which represents a particular version of an application.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ApplicationPackageProperties" : {
        "type" : "object",
        "properties" : {
          "format" : {
            "type" : "string",
            "description" : "The format of the application package, if the package is active.",
            "readOnly" : true
          },
          "lastActivationTime" : {
            "type" : "string",
            "description" : "The time at which the package was last activated, if the package is active.",
            "format" : "date-time",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the application package.",
            "readOnly" : true,
            "enum" : [ "Pending", "Active" ]
          },
          "storageUrl" : {
            "type" : "string",
            "description" : "The URL for the application package in Azure Storage.",
            "readOnly" : true
          },
          "storageUrlExpiry" : {
            "type" : "string",
            "description" : "The UTC time at which the Azure Storage URL will expire.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Properties of an application package"
      },
      "ApplicationPackageReference" : {
        "title" : "Link to an application package inside the batch account",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "The ID of the application package to install. This must be inside the same batch account as the pool. This can either be a reference to a specific version or the default version if one exists.",
            "type" : "string"
          },
          "version" : {
            "title" : "The version of the application to deploy. If omitted, the default version is deployed.",
            "type" : "string",
            "description" : "If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409."
          }
        }
      },
      "ApplicationProperties" : {
        "type" : "object",
        "properties" : {
          "allowUpdates" : {
            "type" : "boolean",
            "description" : "A value indicating whether packages within the application may be overwritten using the same version string."
          },
          "defaultVersion" : {
            "type" : "string",
            "description" : "The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name for the application."
          }
        },
        "description" : "The properties associated with the Application."
      },
      "AutoScaleRun" : {
        "title" : "The results and errors from an execution of a pool autoscale formula.",
        "required" : [ "evaluationTime" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/AutoScaleRunError"
          },
          "evaluationTime" : {
            "title" : "The time at which the autoscale formula was last evaluated.",
            "type" : "string",
            "format" : "date-time"
          },
          "results" : {
            "title" : "The final values of all variables used in the evaluation of the autoscale formula.",
            "type" : "string",
            "description" : "Each variable value is returned in the form $variable=value, and variables are separated by semicolons."
          }
        }
      },
      "AutoScaleRunError" : {
        "title" : "An error that occurred when autoscaling a pool.",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "details" : {
            "title" : "Additional details about the error.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AutoScaleRunError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface."
          }
        }
      },
      "AutoScaleSettings" : {
        "title" : "AutoScale settings for the pool.",
        "required" : [ "formula" ],
        "type" : "object",
        "properties" : {
          "evaluationInterval" : {
            "title" : "The time interval at which to automatically adjust the pool size according to the autoscale formula.",
            "type" : "string",
            "description" : "If omitted, the default value is 15 minutes (PT15M).",
            "format" : "duration"
          },
          "formula" : {
            "title" : "A formula for the desired number of compute nodes in the pool.",
            "type" : "string"
          }
        }
      },
      "AutoStorageBaseProperties" : {
        "required" : [ "storageAccountId" ],
        "type" : "object",
        "properties" : {
          "storageAccountId" : {
            "type" : "string",
            "description" : "The resource ID of the storage account to be used for auto-storage account."
          }
        },
        "description" : "The properties related to the auto-storage account."
      },
      "AutoStorageProperties" : {
        "required" : [ "lastKeySync" ],
        "properties" : {
          "lastKeySync" : {
            "type" : "string",
            "description" : "The UTC time at which storage keys were last synchronized with the Batch account.",
            "format" : "date-time"
          }
        },
        "description" : "Contains information about the auto-storage account associated with a Batch account.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AutoStorageBaseProperties"
        } ]
      },
      "AutoUserSpecification" : {
        "title" : "Specifies the parameters for the auto user that runs a task on the Batch service.",
        "type" : "object",
        "properties" : {
          "elevationLevel" : {
            "$ref" : "#/components/schemas/ElevationLevel"
          },
          "scope" : {
            "title" : "The scope for the auto user",
            "type" : "string",
            "description" : "The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.",
            "enum" : [ "Task", "Pool" ]
          }
        }
      },
      "AzureBlobFileSystemConfiguration" : {
        "title" : "Information used to connect to an Azure Storage Container using Blobfuse.",
        "required" : [ "accountName", "containerName", "relativeMountPath" ],
        "type" : "object",
        "properties" : {
          "accountKey" : {
            "title" : "The Azure Storage Account key.",
            "type" : "string",
            "description" : "This property is mutually exclusive with sasKey and one must be specified."
          },
          "accountName" : {
            "title" : "The Azure Storage Account name.",
            "type" : "string"
          },
          "blobfuseOptions" : {
            "title" : "Additional command line options to pass to the mount command.",
            "type" : "string",
            "description" : "These are 'net use' options in Windows and 'mount' options in Linux."
          },
          "containerName" : {
            "title" : "The Azure Blob Storage Container name.",
            "type" : "string"
          },
          "relativeMountPath" : {
            "title" : "The relative path on the compute node where the file system will be mounted",
            "type" : "string",
            "description" : "All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
          },
          "sasKey" : {
            "title" : "The Azure Storage SAS token.",
            "type" : "string",
            "description" : "This property is mutually exclusive with accountKey and one must be specified."
          }
        }
      },
      "AzureFileShareConfiguration" : {
        "title" : "Information used to connect to an Azure Fileshare.",
        "required" : [ "accountKey", "accountName", "azureFileUrl", "relativeMountPath" ],
        "type" : "object",
        "properties" : {
          "accountKey" : {
            "title" : "The Azure Storage account key.",
            "type" : "string"
          },
          "accountName" : {
            "title" : "The Azure Storage account name.",
            "type" : "string"
          },
          "azureFileUrl" : {
            "title" : "The Azure Files URL.",
            "type" : "string",
            "description" : "This is of the form 'https://{account}.file.core.windows.net/'."
          },
          "mountOptions" : {
            "title" : "Additional command line options to pass to the mount command.",
            "type" : "string",
            "description" : "These are 'net use' options in Windows and 'mount' options in Linux."
          },
          "relativeMountPath" : {
            "title" : "The relative path on the compute node where the file system will be mounted",
            "type" : "string",
            "description" : "All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
          }
        }
      },
      "BatchAccount" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BatchAccountProperties"
          }
        },
        "description" : "Contains information about an Azure Batch account.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "BatchAccountCreateParameters" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The region in which to create the account."
          },
          "properties" : {
            "$ref" : "#/components/schemas/BatchAccountCreateProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The user-specified tags associated with the account."
          }
        },
        "description" : "Parameters supplied to the Create operation."
      },
      "BatchAccountCreateProperties" : {
        "type" : "object",
        "properties" : {
          "autoStorage" : {
            "$ref" : "#/components/schemas/AutoStorageBaseProperties"
          },
          "keyVaultReference" : {
            "$ref" : "#/components/schemas/KeyVaultReference"
          },
          "poolAllocationMode" : {
            "$ref" : "#/components/schemas/PoolAllocationMode"
          }
        },
        "description" : "The properties of a Batch account."
      },
      "BatchAccountKeys" : {
        "type" : "object",
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "The Batch account name.",
            "readOnly" : true
          },
          "primary" : {
            "type" : "string",
            "description" : "The primary key associated with the account.",
            "readOnly" : true
          },
          "secondary" : {
            "type" : "string",
            "description" : "The secondary key associated with the account.",
            "readOnly" : true
          }
        },
        "description" : "A set of Azure Batch account keys."
      },
      "BatchAccountListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The continuation token."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection of Batch accounts returned by the listing operation.",
            "items" : {
              "$ref" : "#/components/schemas/BatchAccount"
            }
          }
        },
        "description" : "Values returned by the List operation."
      },
      "BatchAccountProperties" : {
        "type" : "object",
        "properties" : {
          "accountEndpoint" : {
            "type" : "string",
            "description" : "The account endpoint used to interact with the Batch service.",
            "readOnly" : true
          },
          "activeJobAndJobScheduleQuota" : {
            "title" : "The active job and job schedule quota for the Batch account.",
            "type" : "integer",
            "format" : "int32",
            "nullable" : false,
            "readOnly" : true
          },
          "autoStorage" : {
            "$ref" : "#/components/schemas/AutoStorageProperties"
          },
          "dedicatedCoreQuota" : {
            "title" : "The dedicated core quota for the Batch account.",
            "type" : "integer",
            "description" : "For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          },
          "dedicatedCoreQuotaPerVMFamily" : {
            "type" : "array",
            "description" : "A list of the dedicated core quota per Virtual Machine family for the Batch account. For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.",
            "nullable" : true,
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/VirtualMachineFamilyCoreQuota"
            }
          },
          "dedicatedCoreQuotaPerVMFamilyEnforced" : {
            "title" : "A value indicating whether the core quota for the Batch Account is enforced per Virtual Machine family or not.",
            "type" : "boolean",
            "description" : "Batch is transitioning its core quota system for dedicated cores to be enforced per Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not yet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the account and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the dedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.",
            "nullable" : false,
            "readOnly" : true
          },
          "keyVaultReference" : {
            "$ref" : "#/components/schemas/KeyVaultReference"
          },
          "lowPriorityCoreQuota" : {
            "title" : "The low-priority core quota for the Batch account.",
            "type" : "integer",
            "description" : "For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not returned.",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          },
          "poolAllocationMode" : {
            "$ref" : "#/components/schemas/PoolAllocationMode"
          },
          "poolQuota" : {
            "title" : "The pool quota for the Batch account.",
            "type" : "integer",
            "format" : "int32",
            "nullable" : false,
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioned state of the resource",
            "nullable" : false,
            "readOnly" : true,
            "enum" : [ "Invalid", "Creating", "Deleting", "Succeeded", "Failed", "Cancelled" ]
          }
        },
        "description" : "Account specific properties."
      },
      "BatchAccountRegenerateKeyParameters" : {
        "required" : [ "keyName" ],
        "type" : "object",
        "properties" : {
          "keyName" : {
            "type" : "string",
            "description" : "The type of account key to regenerate.",
            "enum" : [ "Primary", "Secondary" ]
          }
        },
        "description" : "Parameters supplied to the RegenerateKey operation."
      },
      "BatchAccountUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BatchAccountUpdateProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The user-specified tags associated with the account."
          }
        },
        "description" : "Parameters for updating an Azure Batch account."
      },
      "BatchAccountUpdateProperties" : {
        "type" : "object",
        "properties" : {
          "autoStorage" : {
            "$ref" : "#/components/schemas/AutoStorageBaseProperties"
          }
        },
        "description" : "The properties of a Batch account."
      },
      "BatchLocationQuota" : {
        "type" : "object",
        "properties" : {
          "accountQuota" : {
            "type" : "integer",
            "description" : "The number of Batch accounts that may be created under the subscription in the specified region.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Quotas associated with a Batch region for a particular subscription."
      },
      "CIFSMountConfiguration" : {
        "title" : "Information used to connect to a CIFS file system.",
        "required" : [ "password", "relativeMountPath", "source", "username" ],
        "type" : "object",
        "properties" : {
          "mountOptions" : {
            "title" : "Additional command line options to pass to the mount command.",
            "type" : "string",
            "description" : "These are 'net use' options in Windows and 'mount' options in Linux."
          },
          "password" : {
            "title" : "The password to use for authentication against the CIFS file system.",
            "type" : "string"
          },
          "relativeMountPath" : {
            "title" : "The relative path on the compute node where the file system will be mounted",
            "type" : "string",
            "description" : "All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
          },
          "source" : {
            "title" : "The URI of the file system to mount.",
            "type" : "string"
          },
          "username" : {
            "title" : "The user to use for authentication against the CIFS file system.",
            "type" : "string"
          }
        }
      },
      "CachingType" : {
        "title" : "The type of caching to enable for the disk.",
        "type" : "string",
        "enum" : [ "None", "ReadOnly", "ReadWrite" ]
      },
      "Certificate" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CertificateProperties"
          }
        },
        "description" : "Contains information about a certificate.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "CertificateBaseProperties" : {
        "type" : "object",
        "properties" : {
          "format" : {
            "type" : "string",
            "description" : "The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.",
            "nullable" : false,
            "enum" : [ "Pfx", "Cer" ]
          },
          "thumbprint" : {
            "title" : "The thumbprint of the certificate",
            "type" : "string",
            "description" : "This must match the thumbprint from the name."
          },
          "thumbprintAlgorithm" : {
            "title" : "The algorithm of the certificate thumbprint",
            "type" : "string",
            "description" : "This must match the first portion of the certificate name. Currently required to be 'SHA1'."
          }
        }
      },
      "CertificateCreateOrUpdateParameters" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CertificateCreateOrUpdateProperties"
          }
        },
        "description" : "Contains information about a certificate.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "CertificateCreateOrUpdateProperties" : {
        "required" : [ "data" ],
        "properties" : {
          "data" : {
            "title" : "The base64-encoded contents of the certificate.",
            "type" : "string",
            "description" : "The maximum size is 10KB."
          },
          "password" : {
            "title" : "The password to access the certificate's private key.",
            "type" : "string",
            "description" : "This is required if the certificate format is pfx and must be omitted if the certificate format is cer."
          }
        },
        "description" : "Certificate properties for create operations",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CertificateBaseProperties"
        } ]
      },
      "CertificateProperties" : {
        "properties" : {
          "deleteCertificateError" : {
            "$ref" : "#/components/schemas/DeleteCertificateError"
          },
          "previousProvisioningState" : {
            "type" : "string",
            "description" : "The previous provisioned state of the resource",
            "nullable" : false,
            "readOnly" : true,
            "enum" : [ "Succeeded", "Deleting", "Failed" ]
          },
          "previousProvisioningStateTransitionTime" : {
            "title" : "The time at which the certificate entered its previous state.",
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "provisioningState" : {
            "title" : "The provisioned state of the resource",
            "type" : "string",
            "nullable" : false,
            "readOnly" : true,
            "enum" : [ "Succeeded", "Deleting", "Failed" ]
          },
          "provisioningStateTransitionTime" : {
            "title" : "The time at which the certificate entered its current state.",
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "publicData" : {
            "type" : "string",
            "description" : "The public key of the certificate.",
            "readOnly" : true
          }
        },
        "description" : "Certificate properties.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/CertificateBaseProperties"
        } ]
      },
      "CertificateReference" : {
        "title" : "A reference to a certificate to be installed on compute nodes in a pool. This must exist inside the same account as the pool.",
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "The fully qualified ID of the certificate to install on the pool. This must be inside the same batch account as the pool.",
            "type" : "string"
          },
          "storeLocation" : {
            "title" : "The location of the certificate store on the compute node into which to install the certificate.",
            "type" : "string",
            "description" : "The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.",
            "enum" : [ "CurrentUser", "LocalMachine" ]
          },
          "storeName" : {
            "title" : "The name of the certificate store on the compute node into which to install the certificate.",
            "type" : "string",
            "description" : "This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My."
          },
          "visibility" : {
            "title" : "Which user accounts on the compute node should have access to the private data of the certificate.",
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : false,
              "enum" : [ "StartTask", "Task", "RemoteUser" ]
            }
          }
        }
      },
      "CheckNameAvailabilityParameters" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name to check for availability"
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type. Must be set to Microsoft.Batch/batchAccounts",
            "enum" : [ "Microsoft.Batch/batchAccounts" ]
          }
        },
        "description" : "Parameters for a check name availability request."
      },
      "CheckNameAvailabilityResult" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Gets an error message explaining the Reason value in more detail.",
            "readOnly" : true
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "Gets the reason that a Batch account name could not be used. The Reason element is only returned if NameAvailable is false.",
            "readOnly" : true,
            "enum" : [ "Invalid", "AlreadyExists" ]
          }
        },
        "description" : "The CheckNameAvailability operation response."
      },
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CloudErrorBody"
          }
        },
        "description" : "An error response from the Batch service."
      },
      "CloudErrorBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "details" : {
            "type" : "array",
            "description" : "A list of additional details about the error.",
            "items" : {
              "$ref" : "#/components/schemas/CloudErrorBody"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the particular error. For example, the name of the property in error."
          }
        },
        "description" : "An error response from the Batch service."
      },
      "CloudServiceConfiguration" : {
        "title" : "The configuration for nodes in a pool based on the Azure Cloud Services platform.",
        "required" : [ "osFamily" ],
        "type" : "object",
        "properties" : {
          "osFamily" : {
            "title" : "The Azure Guest OS family to be installed on the virtual machines in the pool.",
            "type" : "string",
            "description" : "Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. 6 - OS Family 6, equivalent to Windows Server 2019. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
          },
          "osVersion" : {
            "title" : "The Azure Guest OS version to be installed on the virtual machines in the pool.",
            "type" : "string",
            "description" : "The default value is * which specifies the latest operating system version for the specified OS family."
          }
        }
      },
      "ComputeNodeDeallocationOption" : {
        "title" : "Determines what to do with a node and its running task(s) after it has been selected for deallocation.",
        "type" : "string",
        "enum" : [ "Requeue", "Terminate", "TaskCompletion", "RetainedData" ]
      },
      "ContainerConfiguration" : {
        "title" : "The configuration for container-enabled pools.",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "containerImageNames" : {
            "title" : "The collection of container image names.",
            "type" : "array",
            "description" : "This is the full image reference, as would be specified to \"docker pull\". An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry.",
            "items" : {
              "type" : "string"
            }
          },
          "containerRegistries" : {
            "title" : "Additional private registries from which containers can be pulled.",
            "type" : "array",
            "description" : "If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.",
            "items" : {
              "$ref" : "#/components/schemas/ContainerRegistry"
            }
          },
          "type" : {
            "title" : "The container technology to be used.",
            "type" : "string",
            "enum" : [ "DockerCompatible" ]
          }
        }
      },
      "ContainerRegistry" : {
        "title" : "A private container registry.",
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "title" : "The password to log into the registry server.",
            "type" : "string"
          },
          "registryServer" : {
            "title" : "The registry URL.",
            "type" : "string",
            "description" : "If omitted, the default is \"docker.io\"."
          },
          "username" : {
            "title" : "The user name to log into the registry server.",
            "type" : "string"
          }
        }
      },
      "DataDisk" : {
        "required" : [ "diskSizeGB", "lun" ],
        "type" : "object",
        "properties" : {
          "caching" : {
            "$ref" : "#/components/schemas/CachingType"
          },
          "diskSizeGB" : {
            "title" : "The initial disk size in GB when creating new data disk.",
            "type" : "integer",
            "format" : "int32"
          },
          "lun" : {
            "title" : "The logical unit number.",
            "type" : "integer",
            "description" : "The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun.",
            "format" : "int32"
          },
          "storageAccountType" : {
            "$ref" : "#/components/schemas/StorageAccountType"
          }
        },
        "description" : "Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them."
      },
      "DeleteCertificateError" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "details" : {
            "type" : "array",
            "description" : "A list of additional details about the error.",
            "items" : {
              "$ref" : "#/components/schemas/DeleteCertificateError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the particular error. For example, the name of the property in error."
          }
        },
        "description" : "An error response from the Batch service."
      },
      "DeploymentConfiguration" : {
        "title" : "Deployment configuration properties.",
        "type" : "object",
        "properties" : {
          "cloudServiceConfiguration" : {
            "$ref" : "#/components/schemas/CloudServiceConfiguration"
          },
          "virtualMachineConfiguration" : {
            "$ref" : "#/components/schemas/VirtualMachineConfiguration"
          }
        }
      },
      "ElevationLevel" : {
        "title" : "The elevation level of the user.",
        "type" : "string",
        "enum" : [ "NonAdmin", "Admin" ]
      },
      "EnvironmentSetting" : {
        "title" : "An environment variable to be set on a task process.",
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "The name of the environment variable.",
            "type" : "string"
          },
          "value" : {
            "title" : "The value of the environment variable.",
            "type" : "string"
          }
        }
      },
      "FixedScaleSettings" : {
        "title" : "Fixed scale settings for the pool.",
        "type" : "object",
        "properties" : {
          "nodeDeallocationOption" : {
            "$ref" : "#/components/schemas/ComputeNodeDeallocationOption"
          },
          "resizeTimeout" : {
            "title" : "The timeout for allocation of compute nodes to the pool.",
            "type" : "string",
            "description" : "The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
            "format" : "duration"
          },
          "targetDedicatedNodes" : {
            "title" : "The desired number of dedicated compute nodes in the pool.",
            "type" : "integer",
            "description" : "At least one of targetDedicatedNodes, targetLowPriority nodes must be set.",
            "format" : "int32"
          },
          "targetLowPriorityNodes" : {
            "title" : "The desired number of low-priority compute nodes in the pool.",
            "type" : "integer",
            "description" : "At least one of targetDedicatedNodes, targetLowPriority nodes must be set.",
            "format" : "int32"
          }
        }
      },
      "ImageReference" : {
        "title" : "A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation.",
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "The ARM resource identifier of the Virtual Machine Image or Shared Image Gallery Image. Compute Nodes of the Pool will be created using this Image Id. This is of either the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName} for Virtual Machine Image or /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageDefinitionName}/versions/{versionId} for SIG image.",
            "type" : "string",
            "description" : "This property is mutually exclusive with other properties. For Virtual Machine Image it must be in the same region and subscription as the Azure Batch account. For SIG image it must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
          },
          "offer" : {
            "title" : "The offer type of the Azure Virtual Machines Marketplace image.",
            "type" : "string",
            "description" : "For example, UbuntuServer or WindowsServer."
          },
          "publisher" : {
            "title" : "The publisher of the Azure Virtual Machines Marketplace image.",
            "type" : "string",
            "description" : "For example, Canonical or MicrosoftWindowsServer."
          },
          "sku" : {
            "title" : "The SKU of the Azure Virtual Machines Marketplace image.",
            "type" : "string",
            "description" : "For example, 18.04-LTS or 2019-Datacenter."
          },
          "version" : {
            "title" : "The version of the Azure Virtual Machines Marketplace image.",
            "type" : "string",
            "description" : "A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
          }
        }
      },
      "InboundNatPool" : {
        "title" : "A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.",
        "required" : [ "backendPort", "frontendPortRangeEnd", "frontendPortRangeStart", "name", "protocol" ],
        "type" : "object",
        "properties" : {
          "backendPort" : {
            "title" : "The port number on the compute node.",
            "type" : "integer",
            "description" : "This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.",
            "format" : "int32"
          },
          "frontendPortRangeEnd" : {
            "title" : "The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.",
            "type" : "integer",
            "description" : "Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.",
            "format" : "int32"
          },
          "frontendPortRangeStart" : {
            "title" : "The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.",
            "type" : "integer",
            "description" : "Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.",
            "format" : "int32"
          },
          "name" : {
            "title" : "The name of the endpoint.",
            "type" : "string",
            "description" : "The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400."
          },
          "networkSecurityGroupRules" : {
            "title" : "A list of network security group rules that will be applied to the endpoint.",
            "type" : "array",
            "description" : "The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkSecurityGroupRule"
            }
          },
          "protocol" : {
            "title" : "The protocol of the endpoint.",
            "type" : "string",
            "enum" : [ "TCP", "UDP" ]
          }
        }
      },
      "KeyVaultReference" : {
        "required" : [ "id", "url" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource ID of the Azure key vault associated with the Batch account."
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the Azure key vault associated with the Batch account."
          }
        },
        "description" : "Identifies the Azure key vault associated with a Batch account."
      },
      "LinuxUserConfiguration" : {
        "title" : "Properties used to create a user account on a Linux node.",
        "type" : "object",
        "properties" : {
          "gid" : {
            "title" : "The group ID for the user account.",
            "type" : "integer",
            "description" : "The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.",
            "format" : "int32"
          },
          "sshPrivateKey" : {
            "title" : "The SSH private key for the user account.",
            "type" : "string",
            "description" : "The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done)."
          },
          "uid" : {
            "title" : "The user ID of the user account.",
            "type" : "integer",
            "description" : "The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.",
            "format" : "int32"
          }
        }
      },
      "ListApplicationPackagesResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of application packages.",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationPackage"
            }
          }
        },
        "description" : "The result of performing list application packages."
      },
      "ListApplicationsResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of applications.",
            "items" : {
              "$ref" : "#/components/schemas/Application"
            }
          }
        },
        "description" : "The result of performing list applications."
      },
      "ListCertificatesResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The continuation token."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection of returned certificates.",
            "items" : {
              "$ref" : "#/components/schemas/Certificate"
            }
          }
        },
        "description" : "Values returned by the List operation."
      },
      "ListPoolsResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The continuation token."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection of returned pools.",
            "items" : {
              "$ref" : "#/components/schemas/Pool"
            }
          }
        },
        "description" : "Values returned by the List operation."
      },
      "MetadataItem" : {
        "title" : "A name-value pair associated with a Batch service resource.",
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "title" : "The name of the metadata item.",
            "type" : "string"
          },
          "value" : {
            "title" : "The value of the metadata item.",
            "type" : "string"
          }
        },
        "description" : "The Batch service does not assign any meaning to this metadata; it is solely for the use of user code."
      },
      "MountConfiguration" : {
        "title" : "The file system to mount on each node.",
        "type" : "object",
        "properties" : {
          "azureBlobFileSystemConfiguration" : {
            "$ref" : "#/components/schemas/AzureBlobFileSystemConfiguration"
          },
          "azureFileShareConfiguration" : {
            "$ref" : "#/components/schemas/AzureFileShareConfiguration"
          },
          "cifsMountConfiguration" : {
            "$ref" : "#/components/schemas/CIFSMountConfiguration"
          },
          "nfsMountConfiguration" : {
            "$ref" : "#/components/schemas/NFSMountConfiguration"
          }
        }
      },
      "NFSMountConfiguration" : {
        "title" : "Information used to connect to an NFS file system.",
        "required" : [ "relativeMountPath", "source" ],
        "type" : "object",
        "properties" : {
          "mountOptions" : {
            "title" : "Additional command line options to pass to the mount command.",
            "type" : "string",
            "description" : "These are 'net use' options in Windows and 'mount' options in Linux."
          },
          "relativeMountPath" : {
            "title" : "The relative path on the compute node where the file system will be mounted",
            "type" : "string",
            "description" : "All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable."
          },
          "source" : {
            "title" : "The URI of the file system to mount.",
            "type" : "string"
          }
        }
      },
      "NetworkConfiguration" : {
        "type" : "object",
        "properties" : {
          "endpointConfiguration" : {
            "$ref" : "#/components/schemas/PoolEndpointConfiguration"
          },
          "publicIPs" : {
            "title" : "The list of public IPs which the Batch service will use when provisioning Compute Nodes.",
            "type" : "array",
            "description" : "The number of IPs specified here limits the maximum size of the Pool - 50 dedicated nodes or 20 low-priority nodes can be allocated for each public IP. For example, a pool needing 150 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.",
            "items" : {
              "type" : "string"
            }
          },
          "subnetId" : {
            "title" : "The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.",
            "type" : "string",
            "description" : "The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes, and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. For pools created via virtualMachineConfiguration the Batch account must have poolAllocationMode userSubscription in order to use a VNet. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
          }
        },
        "description" : "The network configuration for a pool."
      },
      "NetworkSecurityGroupRule" : {
        "title" : "A network security group rule to apply to an inbound endpoint.",
        "required" : [ "access", "priority", "sourceAddressPrefix" ],
        "type" : "object",
        "properties" : {
          "access" : {
            "title" : "The action that should be taken for a specified IP address, subnet range or tag.",
            "type" : "string",
            "enum" : [ "Allow", "Deny" ]
          },
          "priority" : {
            "title" : "The priority for this rule.",
            "type" : "integer",
            "description" : "Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400.",
            "format" : "int32"
          },
          "sourceAddressPrefix" : {
            "title" : "The source address prefix or tag to match for the rule.",
            "type" : "string",
            "description" : "Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400."
          },
          "sourcePortRanges" : {
            "title" : "The source port ranges to match for the rule.",
            "type" : "array",
            "description" : "Valid values are '*' (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. 100-200). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be *.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Operation" : {
        "title" : "A REST API operation",
        "type" : "object",
        "properties" : {
          "display" : {
            "title" : "The object that describes the operation.",
            "type" : "object",
            "properties" : {
              "description" : {
                "title" : "The friendly name of the operation",
                "type" : "string"
              },
              "operation" : {
                "title" : "The operation type.",
                "type" : "string",
                "description" : "For example: read, write, delete, or listKeys/action"
              },
              "provider" : {
                "title" : "Friendly name of the resource provider.",
                "type" : "string"
              },
              "resource" : {
                "title" : "The resource type on which the operation is performed.",
                "type" : "string"
              }
            }
          },
          "name" : {
            "title" : "The operation name.",
            "type" : "string",
            "description" : "This is of the format {provider}/{resource}/{operation}"
          },
          "origin" : {
            "title" : "The intended executor of the operation.",
            "type" : "string"
          },
          "properties" : {
            "title" : "Properties of the operation.",
            "type" : "object"
          }
        }
      },
      "OperationListResult" : {
        "title" : "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "title" : "The URL to get the next set of operation list results if there are any.",
            "type" : "string"
          },
          "value" : {
            "title" : "The list of operations supported by the resource provider.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        }
      },
      "Pool" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PoolProperties"
          }
        },
        "description" : "Contains information about a pool.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "PoolAllocationMode" : {
        "type" : "string",
        "description" : "The allocation mode for creating pools in the Batch account.",
        "enum" : [ "BatchService", "UserSubscription" ]
      },
      "PoolEndpointConfiguration" : {
        "title" : "The endpoint configuration for a pool.",
        "required" : [ "inboundNatPools" ],
        "type" : "object",
        "properties" : {
          "inboundNatPools" : {
            "title" : "A list of inbound NAT pools that can be used to address specific ports on an individual compute node externally.",
            "type" : "array",
            "description" : "The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.",
            "items" : {
              "$ref" : "#/components/schemas/InboundNatPool"
            }
          }
        }
      },
      "PoolProperties" : {
        "type" : "object",
        "properties" : {
          "allocationState" : {
            "title" : "Whether the pool is resizing.",
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Steady", "Resizing", "Stopping" ]
          },
          "allocationStateTransitionTime" : {
            "title" : "The time at which the pool entered its current allocation state.",
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "applicationLicenses" : {
            "title" : "The list of application licenses the Batch service will make available on each compute node in the pool.",
            "type" : "array",
            "description" : "The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.",
            "items" : {
              "type" : "string"
            }
          },
          "applicationPackages" : {
            "title" : "The list of application packages to be installed on each compute node in the pool.",
            "type" : "array",
            "description" : "Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationPackageReference"
            }
          },
          "autoScaleRun" : {
            "$ref" : "#/components/schemas/AutoScaleRun"
          },
          "certificates" : {
            "title" : "The list of certificates to be installed on each compute node in the pool.",
            "type" : "array",
            "description" : "For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.",
            "items" : {
              "$ref" : "#/components/schemas/CertificateReference"
            }
          },
          "creationTime" : {
            "title" : "The creation time of the pool.",
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "currentDedicatedNodes" : {
            "title" : "The number of compute nodes currently in the pool.",
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "currentLowPriorityNodes" : {
            "title" : "The number of low priority compute nodes currently in the pool.",
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "deploymentConfiguration" : {
            "$ref" : "#/components/schemas/DeploymentConfiguration"
          },
          "displayName" : {
            "title" : "The display name for the pool.",
            "type" : "string",
            "description" : "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
          },
          "interNodeCommunication" : {
            "title" : "Whether the pool permits direct communication between nodes.",
            "type" : "string",
            "description" : "This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "lastModified" : {
            "title" : "The last modified time of the pool.",
            "type" : "string",
            "description" : "This is the last time at which the pool level data, such as the targetDedicatedNodes or autoScaleSettings, changed. It does not factor in node-level changes such as a compute node changing state.",
            "format" : "date-time",
            "readOnly" : true
          },
          "maxTasksPerNode" : {
            "title" : "The maximum number of tasks that can run concurrently on a single compute node in the pool.",
            "type" : "integer",
            "description" : "The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.",
            "format" : "int32"
          },
          "metadata" : {
            "title" : "A list of name-value pairs associated with the pool as metadata.",
            "type" : "array",
            "description" : "The Batch service does not assign any meaning to metadata; it is solely for the use of user code.",
            "items" : {
              "$ref" : "#/components/schemas/MetadataItem"
            }
          },
          "mountConfiguration" : {
            "title" : "A list of file systems to mount on each node in the pool.",
            "type" : "array",
            "description" : "This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.",
            "items" : {
              "$ref" : "#/components/schemas/MountConfiguration"
            }
          },
          "networkConfiguration" : {
            "$ref" : "#/components/schemas/NetworkConfiguration"
          },
          "provisioningState" : {
            "title" : "The current state of the pool.",
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Succeeded", "Deleting" ]
          },
          "provisioningStateTransitionTime" : {
            "title" : "The time at which the pool entered its current state.",
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "resizeOperationStatus" : {
            "$ref" : "#/components/schemas/ResizeOperationStatus"
          },
          "scaleSettings" : {
            "$ref" : "#/components/schemas/ScaleSettings"
          },
          "startTask" : {
            "$ref" : "#/components/schemas/StartTask"
          },
          "taskSchedulingPolicy" : {
            "$ref" : "#/components/schemas/TaskSchedulingPolicy"
          },
          "userAccounts" : {
            "title" : "The list of user accounts to be created on each node in the pool.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserAccount"
            }
          },
          "vmSize" : {
            "title" : "The size of virtual machines in the pool. All VMs in a pool are the same size.",
            "type" : "string",
            "description" : "For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
          }
        },
        "description" : "Pool properties."
      },
      "ProxyResource" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "The ETag of the resource, used for concurrency statements.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the resource.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource.",
            "readOnly" : true
          }
        },
        "description" : "A definition of an Azure resource."
      },
      "ResizeError" : {
        "title" : "An error that occurred when resizing a pool.",
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "details" : {
            "title" : "Additional details about the error.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResizeError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface."
          }
        }
      },
      "ResizeOperationStatus" : {
        "title" : "Details about the current or last completed resize operation.",
        "type" : "object",
        "properties" : {
          "errors" : {
            "title" : "Details of any errors encountered while performing the last resize on the pool.",
            "type" : "array",
            "description" : "This property is set only if an error occurred during the last pool resize, and only when the pool allocationState is Steady.",
            "items" : {
              "$ref" : "#/components/schemas/ResizeError"
            }
          },
          "nodeDeallocationOption" : {
            "$ref" : "#/components/schemas/ComputeNodeDeallocationOption"
          },
          "resizeTimeout" : {
            "title" : "The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool.",
            "type" : "string",
            "description" : "The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
            "format" : "duration"
          },
          "startTime" : {
            "title" : "The time when this resize operation was started.",
            "type" : "string",
            "format" : "date-time"
          },
          "targetDedicatedNodes" : {
            "title" : "The desired number of dedicated compute nodes in the pool.",
            "type" : "integer",
            "format" : "int32"
          },
          "targetLowPriorityNodes" : {
            "title" : "The desired number of low-priority compute nodes in the pool.",
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Describes either the current operation (if the pool AllocationState is Resizing) or the previously completed operation (if the AllocationState is Steady)."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the resource.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the resource.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource.",
            "readOnly" : true
          }
        },
        "description" : "A definition of an Azure resource."
      },
      "ResourceFile" : {
        "title" : "A single file or multiple files to be downloaded to a compute node.",
        "type" : "object",
        "properties" : {
          "autoStorageContainerName" : {
            "title" : "The storage container name in the auto storage account.",
            "type" : "string",
            "description" : "The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified."
          },
          "blobPrefix" : {
            "title" : "The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded.",
            "type" : "string",
            "description" : "The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded."
          },
          "fileMode" : {
            "title" : "The file permission mode attribute in octal format.",
            "type" : "string",
            "description" : "This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file."
          },
          "filePath" : {
            "title" : "The location on the compute node to which to download the file, relative to the task's working directory.",
            "type" : "string",
            "description" : "If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..')."
          },
          "httpUrl" : {
            "title" : "The URL of the file to download.",
            "type" : "string",
            "description" : "The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access."
          },
          "storageContainerUrl" : {
            "title" : "The URL of the blob container within Azure Blob Storage.",
            "type" : "string",
            "description" : "The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access."
          }
        }
      },
      "ScaleSettings" : {
        "title" : "Scale settings for the pool",
        "type" : "object",
        "properties" : {
          "autoScale" : {
            "$ref" : "#/components/schemas/AutoScaleSettings"
          },
          "fixedScale" : {
            "$ref" : "#/components/schemas/FixedScaleSettings"
          }
        },
        "description" : "Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes."
      },
      "StartTask" : {
        "title" : "A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.",
        "type" : "object",
        "properties" : {
          "commandLine" : {
            "title" : "The command line of the start task.",
            "type" : "string",
            "description" : "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. Required if any other properties of the startTask are specified."
          },
          "containerSettings" : {
            "$ref" : "#/components/schemas/TaskContainerSettings"
          },
          "environmentSettings" : {
            "title" : "A list of environment variable settings for the start task.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvironmentSetting"
            }
          },
          "maxTaskRetryCount" : {
            "title" : "The maximum number of times the task may be retried.",
            "type" : "integer",
            "description" : "The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.",
            "format" : "int32"
          },
          "resourceFiles" : {
            "title" : "A list of files that the Batch service will download to the compute node before running the command line.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResourceFile"
            }
          },
          "userIdentity" : {
            "$ref" : "#/components/schemas/UserIdentity"
          },
          "waitForSuccess" : {
            "title" : "Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.",
            "type" : "boolean",
            "description" : "If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is true."
          }
        },
        "description" : "In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task."
      },
      "StorageAccountType" : {
        "title" : "The storage account type for use in creating data disks.",
        "type" : "string",
        "enum" : [ "Standard_LRS", "Premium_LRS" ]
      },
      "TaskContainerSettings" : {
        "title" : "The container settings for a task.",
        "required" : [ "imageName" ],
        "type" : "object",
        "properties" : {
          "containerRunOptions" : {
            "title" : "Additional options to the container create command.",
            "type" : "string",
            "description" : "These additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service."
          },
          "imageName" : {
            "title" : "The image to use to create the container in which the task will run.",
            "type" : "string",
            "description" : "This is the full image reference, as would be specified to \"docker pull\". If no tag is provided as part of the image name, the tag \":latest\" is used as a default."
          },
          "registry" : {
            "$ref" : "#/components/schemas/ContainerRegistry"
          },
          "workingDirectory" : {
            "title" : "A flag to indicate where the container task working directory is. The default is 'taskWorkingDirectory'.",
            "type" : "string",
            "enum" : [ "TaskWorkingDirectory", "ContainerImageDefault" ]
          }
        }
      },
      "TaskSchedulingPolicy" : {
        "title" : "Specifies how tasks should be distributed across compute nodes.",
        "required" : [ "nodeFillType" ],
        "type" : "object",
        "properties" : {
          "nodeFillType" : {
            "title" : "How tasks should be distributed across compute nodes.",
            "type" : "string",
            "enum" : [ "Spread", "Pack" ]
          }
        }
      },
      "UserAccount" : {
        "title" : "Properties used to create a user on an Azure Batch node.",
        "required" : [ "name", "password" ],
        "type" : "object",
        "properties" : {
          "elevationLevel" : {
            "$ref" : "#/components/schemas/ElevationLevel"
          },
          "linuxUserConfiguration" : {
            "$ref" : "#/components/schemas/LinuxUserConfiguration"
          },
          "name" : {
            "title" : "The name of the user account.",
            "type" : "string"
          },
          "password" : {
            "title" : "The password for the user account.",
            "type" : "string"
          },
          "windowsUserConfiguration" : {
            "$ref" : "#/components/schemas/WindowsUserConfiguration"
          }
        }
      },
      "UserIdentity" : {
        "title" : "The definition of the user identity under which the task is run.",
        "type" : "object",
        "properties" : {
          "autoUser" : {
            "$ref" : "#/components/schemas/AutoUserSpecification"
          },
          "userName" : {
            "title" : "The name of the user identity under which the task is run.",
            "type" : "string",
            "description" : "The userName and autoUser properties are mutually exclusive; you must specify one but not both."
          }
        },
        "description" : "Specify either the userName or autoUser property, but not both."
      },
      "VirtualMachineConfiguration" : {
        "title" : "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.",
        "required" : [ "imageReference", "nodeAgentSkuId" ],
        "type" : "object",
        "properties" : {
          "containerConfiguration" : {
            "$ref" : "#/components/schemas/ContainerConfiguration"
          },
          "dataDisks" : {
            "title" : "The configuration for data disks attached to the compute nodes in the pool.",
            "type" : "array",
            "description" : "This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.",
            "items" : {
              "$ref" : "#/components/schemas/DataDisk"
            }
          },
          "imageReference" : {
            "$ref" : "#/components/schemas/ImageReference"
          },
          "licenseType" : {
            "title" : "The type of on-premises license to be used when deploying the operating system.",
            "type" : "string",
            "description" : "This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:\n\n Windows_Server - The on-premises license is for Windows Server.\n Windows_Client - The on-premises license is for Windows Client.\n"
          },
          "nodeAgentSkuId" : {
            "title" : "The SKU of the Batch node agent to be provisioned on compute nodes in the pool.",
            "type" : "string",
            "description" : "The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation."
          },
          "windowsConfiguration" : {
            "$ref" : "#/components/schemas/WindowsConfiguration"
          }
        }
      },
      "VirtualMachineFamilyCoreQuota" : {
        "type" : "object",
        "properties" : {
          "coreQuota" : {
            "type" : "integer",
            "description" : "The core quota for the VM family for the Batch account.",
            "format" : "int32",
            "nullable" : false,
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The Virtual Machine family name.",
            "nullable" : false,
            "readOnly" : true
          }
        },
        "description" : "A VM Family and its associated core quota for the Batch account."
      },
      "WindowsConfiguration" : {
        "title" : "Windows operating system settings to apply to the virtual machine.",
        "type" : "object",
        "properties" : {
          "enableAutomaticUpdates" : {
            "title" : "Whether automatic updates are enabled on the virtual machine.",
            "type" : "boolean",
            "description" : "If omitted, the default value is true."
          }
        }
      },
      "WindowsUserConfiguration" : {
        "title" : "Properties used to create a user account on a Windows node.",
        "type" : "object",
        "properties" : {
          "loginMode" : {
            "title" : "Login mode for user",
            "type" : "string",
            "description" : "Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode.",
            "enum" : [ "Batch", "Interactive" ]
          }
        }
      }
    },
    "parameters" : {
      "AccountNameParameter" : {
        "name" : "accountName",
        "in" : "path",
        "description" : "The name of the Batch account.",
        "required" : true,
        "schema" : {
          "maxLength" : 24,
          "minLength" : 3,
          "pattern" : "^[-\\w\\._]+$",
          "type" : "string"
        }
      },
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to be used with the HTTP request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ApplicationNameParameter" : {
        "name" : "applicationName",
        "in" : "path",
        "description" : "The name of the application. This must be unique within the account.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9_-]+$",
          "type" : "string"
        }
      },
      "CertificateNameParameter" : {
        "name" : "certificateName",
        "in" : "path",
        "description" : "The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.",
        "required" : true,
        "schema" : {
          "maxLength" : 45,
          "minLength" : 5,
          "pattern" : "^[\\w]+-[\\w]+$",
          "type" : "string"
        }
      },
      "PoolNameParameter" : {
        "name" : "poolName",
        "in" : "path",
        "description" : "The pool name. This must be unique within the account.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9_-]+$",
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group that contains the Batch account.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "VersionNameParameter" : {
        "name" : "versionName",
        "in" : "path",
        "description" : "The version of the application.",
        "required" : true,
        "schema" : {
          "maxLength" : 64,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9_-][a-zA-Z0-9_.-]*$",
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}