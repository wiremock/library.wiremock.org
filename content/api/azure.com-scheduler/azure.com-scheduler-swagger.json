{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SchedulerManagementClient",
    "version" : "2016-03-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Scheduler/jobCollections" : {
      "get" : {
        "tags" : [ "JobCollections" ],
        "description" : "Gets all job collections under specified subscription.",
        "operationId" : "JobCollections_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job collections have been successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections" : {
      "get" : {
        "tags" : [ "JobCollections" ],
        "description" : "Gets all job collections under specified resource group.",
        "operationId" : "JobCollections_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job collections have been successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}" : {
      "get" : {
        "tags" : [ "JobCollections" ],
        "description" : "Gets a job collection.",
        "operationId" : "JobCollections_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job collection has been successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "JobCollections" ],
        "description" : "Provisions a new job collection or updates an existing job collection.",
        "operationId" : "JobCollections_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The job collection definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCollectionDefinition"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCollectionDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The job collection has been successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              }
            }
          },
          "201" : {
            "description" : "The job collection has been successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "JobCollections" ],
        "description" : "Deletes a job collection.",
        "operationId" : "JobCollections_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job collection has been successfully deleted."
          },
          "202" : {
            "description" : "The delete operation for the job collection has been accepted and will complete asynchronously."
          }
        }
      },
      "patch" : {
        "tags" : [ "JobCollections" ],
        "description" : "Patches an existing job collection.",
        "operationId" : "JobCollections_Patch",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The job collection definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCollectionDefinition"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCollectionDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The job collection has been successfully patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollectionDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/disable" : {
      "post" : {
        "tags" : [ "JobCollections" ],
        "description" : "Disables all of the jobs in the job collection.",
        "operationId" : "JobCollections_Disable",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All of the jobs in the job collection have been successfully disabled."
          },
          "202" : {
            "description" : "Accepted and the disable job collection operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/enable" : {
      "post" : {
        "tags" : [ "JobCollections" ],
        "description" : "Enables all of the jobs in the job collection.",
        "operationId" : "JobCollections_Enable",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All of the jobs in the job collection have been successfully enabled."
          },
          "202" : {
            "description" : "Accepted and the enable job collection operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Lists all jobs under the specified job collection.",
        "operationId" : "Jobs_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of jobs to request, in the of range of [1..100].",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "The (0-based) index of the job history list from which to begin requesting entries.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the job state.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job has been successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Gets a job.",
        "operationId" : "Jobs_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job has been successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Jobs" ],
        "description" : "Provisions a new job or updates an existing job.",
        "operationId" : "Jobs_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The job definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobDefinition"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The job has been successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              }
            }
          },
          "201" : {
            "description" : "The job has been successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "description" : "Deletes a job.",
        "operationId" : "Jobs_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job has been successfully deleted."
          }
        }
      },
      "patch" : {
        "tags" : [ "Jobs" ],
        "description" : "Patches an existing job.",
        "operationId" : "Jobs_Patch",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The job definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobDefinition"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The job has been successfully patched.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/history" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Lists job history.",
        "operationId" : "Jobs_ListJobHistory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "the number of job history to request, in the of range of [1..100].",
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "The (0-based) index of the job history list from which to begin requesting entries.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the job state.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job histories have been successfully returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobHistoryListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobHistoryListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/run" : {
      "post" : {
        "tags" : [ "Jobs" ],
        "description" : "Runs a job.",
        "operationId" : "Jobs_Run",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobCollectionName",
          "in" : "path",
          "description" : "The job collection name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job has been successfully run."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BasicAuthentication" : {
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "Gets or sets the password, return value will always be empty."
          },
          "username" : {
            "type" : "string",
            "description" : "Gets or sets the username."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/HttpAuthentication"
        } ]
      },
      "ClientCertAuthentication" : {
        "properties" : {
          "certificateExpirationDate" : {
            "type" : "string",
            "description" : "Gets or sets the certificate expiration date.",
            "format" : "date-time"
          },
          "certificateSubjectName" : {
            "type" : "string",
            "description" : "Gets or sets the certificate subject name."
          },
          "certificateThumbprint" : {
            "type" : "string",
            "description" : "Gets or sets the certificate thumbprint."
          },
          "password" : {
            "type" : "string",
            "description" : "Gets or sets the certificate password, return value will always be empty."
          },
          "pfx" : {
            "type" : "string",
            "description" : "Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/HttpAuthentication"
        } ]
      },
      "HttpAuthentication" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Gets or sets the HTTP authentication type.",
            "enum" : [ "NotSpecified", "ClientCertificate", "ActiveDirectoryOAuth", "Basic" ]
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "HttpRequest" : {
        "type" : "object",
        "properties" : {
          "authentication" : {
            "$ref" : "#/components/schemas/HttpAuthentication"
          },
          "body" : {
            "type" : "string",
            "description" : "Gets or sets the request body."
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the headers."
          },
          "method" : {
            "type" : "string",
            "description" : "Gets or sets the method of the request."
          },
          "uri" : {
            "type" : "string",
            "description" : "Gets or sets the URI of the request."
          }
        }
      },
      "JobAction" : {
        "type" : "object",
        "properties" : {
          "errorAction" : {
            "$ref" : "#/components/schemas/JobErrorAction"
          },
          "queueMessage" : {
            "$ref" : "#/components/schemas/StorageQueueMessage"
          },
          "request" : {
            "$ref" : "#/components/schemas/HttpRequest"
          },
          "retryPolicy" : {
            "$ref" : "#/components/schemas/RetryPolicy"
          },
          "serviceBusQueueMessage" : {
            "$ref" : "#/components/schemas/ServiceBusQueueMessage"
          },
          "serviceBusTopicMessage" : {
            "$ref" : "#/components/schemas/ServiceBusTopicMessage"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets or sets the job action type.",
            "enum" : [ "Http", "Https", "StorageQueue", "ServiceBusQueue", "ServiceBusTopic" ]
          }
        }
      },
      "JobCollectionDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets the job collection resource identifier.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Gets or sets the storage account location."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the job collection resource name."
          },
          "properties" : {
            "$ref" : "#/components/schemas/JobCollectionProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the tags."
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the job collection resource type.",
            "readOnly" : true
          }
        }
      },
      "JobCollectionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the URL to get the next set of job collections."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets the job collections.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobCollectionDefinition"
            }
          }
        }
      },
      "JobCollectionProperties" : {
        "type" : "object",
        "properties" : {
          "quota" : {
            "$ref" : "#/components/schemas/JobCollectionQuota"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "state" : {
            "type" : "string",
            "description" : "Gets or sets the state.",
            "enum" : [ "Enabled", "Disabled", "Suspended", "Deleted" ]
          }
        }
      },
      "JobCollectionQuota" : {
        "type" : "object",
        "properties" : {
          "maxJobCount" : {
            "type" : "integer",
            "description" : "Gets or set the maximum job count."
          },
          "maxJobOccurrence" : {
            "type" : "integer",
            "description" : "Gets or sets the maximum job occurrence."
          },
          "maxRecurrence" : {
            "$ref" : "#/components/schemas/JobMaxRecurrence"
          }
        }
      },
      "JobDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets the job resource identifier.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the job resource name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/JobProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the job resource type.",
            "readOnly" : true
          }
        }
      },
      "JobErrorAction" : {
        "type" : "object",
        "properties" : {
          "queueMessage" : {
            "$ref" : "#/components/schemas/StorageQueueMessage"
          },
          "request" : {
            "$ref" : "#/components/schemas/HttpRequest"
          },
          "retryPolicy" : {
            "$ref" : "#/components/schemas/RetryPolicy"
          },
          "serviceBusQueueMessage" : {
            "$ref" : "#/components/schemas/ServiceBusQueueMessage"
          },
          "serviceBusTopicMessage" : {
            "$ref" : "#/components/schemas/ServiceBusTopicMessage"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets or sets the job error action type.",
            "enum" : [ "Http", "Https", "StorageQueue", "ServiceBusQueue", "ServiceBusTopic" ]
          }
        }
      },
      "JobExecutionStatus" : {
        "type" : "string",
        "description" : "Gets the job execution status.",
        "enum" : [ "Completed", "Failed", "Postponed" ]
      },
      "JobHistoryDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets the job history identifier.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the job history name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/JobHistoryDefinitionProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the job history resource type.",
            "readOnly" : true
          }
        }
      },
      "JobHistoryDefinitionProperties" : {
        "type" : "object",
        "properties" : {
          "actionName" : {
            "type" : "string",
            "description" : "Gets the job history action name.",
            "readOnly" : true,
            "enum" : [ "MainAction", "ErrorAction" ]
          },
          "endTime" : {
            "type" : "string",
            "description" : "Gets the end time for this job.",
            "format" : "date-time",
            "readOnly" : true
          },
          "expectedExecutionTime" : {
            "type" : "string",
            "description" : "Gets the expected execution time for this job.",
            "format" : "date-time",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Gets the message for the job history.",
            "readOnly" : true
          },
          "repeatCount" : {
            "type" : "integer",
            "description" : "Gets the repeat count for the job.",
            "readOnly" : true
          },
          "retryCount" : {
            "type" : "integer",
            "description" : "Gets the retry count for job.",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "Gets the start time for this job.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/JobExecutionStatus"
          }
        }
      },
      "JobHistoryFilter" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/JobExecutionStatus"
          }
        }
      },
      "JobHistoryListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the URL to get the next set of job histories."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets or sets the job histories under job.",
            "items" : {
              "$ref" : "#/components/schemas/JobHistoryDefinition"
            }
          }
        }
      },
      "JobListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Gets or sets the URL to get the next set of jobs."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets or sets all jobs under job collection.",
            "items" : {
              "$ref" : "#/components/schemas/JobDefinition"
            }
          }
        }
      },
      "JobMaxRecurrence" : {
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "string",
            "description" : "Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).",
            "enum" : [ "Minute", "Hour", "Day", "Week", "Month" ]
          },
          "interval" : {
            "type" : "integer",
            "description" : "Gets or sets the interval between retries."
          }
        }
      },
      "JobProperties" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/JobAction"
          },
          "recurrence" : {
            "$ref" : "#/components/schemas/JobRecurrence"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Gets or sets the job start time.",
            "format" : "date-time"
          },
          "state" : {
            "$ref" : "#/components/schemas/JobState"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          }
        }
      },
      "JobRecurrence" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "Gets or sets the maximum number of times that the job should run."
          },
          "endTime" : {
            "type" : "string",
            "description" : "Gets or sets the time at which the job will complete.",
            "format" : "date-time"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).",
            "enum" : [ "Minute", "Hour", "Day", "Week", "Month" ]
          },
          "interval" : {
            "type" : "integer",
            "description" : "Gets or sets the interval between retries."
          },
          "schedule" : {
            "$ref" : "#/components/schemas/JobRecurrenceSchedule"
          }
        }
      },
      "JobRecurrenceSchedule" : {
        "type" : "object",
        "properties" : {
          "hours" : {
            "type" : "array",
            "description" : "Gets or sets the hours of the day that the job should execute at.",
            "items" : {
              "type" : "integer"
            }
          },
          "minutes" : {
            "type" : "array",
            "description" : "Gets or sets the minutes of the hour that the job should execute at.",
            "items" : {
              "type" : "integer"
            }
          },
          "monthDays" : {
            "type" : "array",
            "description" : "Gets or sets the days of the month that the job should execute on. Must be between 1 and 31.",
            "items" : {
              "type" : "integer"
            }
          },
          "monthlyOccurrences" : {
            "type" : "array",
            "description" : "Gets or sets the occurrences of days within a month.",
            "items" : {
              "$ref" : "#/components/schemas/JobRecurrenceScheduleMonthlyOccurrence"
            }
          },
          "weekDays" : {
            "type" : "array",
            "description" : "Gets or sets the days of the week that the job should execute on.",
            "items" : {
              "type" : "string",
              "enum" : [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ]
            }
          }
        }
      },
      "JobRecurrenceScheduleMonthlyOccurrence" : {
        "type" : "object",
        "properties" : {
          "Occurrence" : {
            "type" : "integer",
            "description" : "Gets or sets the occurrence. Must be between -5 and 5."
          },
          "day" : {
            "type" : "string",
            "description" : "Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.",
            "enum" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ]
          }
        }
      },
      "JobState" : {
        "type" : "string",
        "description" : "Gets or set the job state.",
        "enum" : [ "Enabled", "Disabled", "Faulted", "Completed" ]
      },
      "JobStateFilter" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/JobState"
          }
        }
      },
      "JobStatus" : {
        "type" : "object",
        "properties" : {
          "executionCount" : {
            "type" : "integer",
            "description" : "Gets the number of times this job has executed.",
            "readOnly" : true
          },
          "failureCount" : {
            "type" : "integer",
            "description" : "Gets the number of times this job has failed.",
            "readOnly" : true
          },
          "faultedCount" : {
            "type" : "integer",
            "description" : "Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states).",
            "readOnly" : true
          },
          "lastExecutionTime" : {
            "type" : "string",
            "description" : "Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet.",
            "format" : "date-time",
            "readOnly" : true
          },
          "nextExecutionTime" : {
            "type" : "string",
            "description" : "Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed.",
            "format" : "date-time",
            "readOnly" : true
          }
        }
      },
      "OAuthAuthentication" : {
        "properties" : {
          "audience" : {
            "type" : "string",
            "description" : "Gets or sets the audience."
          },
          "clientId" : {
            "type" : "string",
            "description" : "Gets or sets the client identifier."
          },
          "secret" : {
            "type" : "string",
            "description" : "Gets or sets the secret, return value will always be empty."
          },
          "tenant" : {
            "type" : "string",
            "description" : "Gets or sets the tenant."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/HttpAuthentication"
        } ]
      },
      "RecurrenceFrequency" : {
        "type" : "string",
        "description" : "Gets or sets the frequency of recurrence (minute, hour, day, week, month).",
        "enum" : [ "Minute", "Hour", "Day", "Week", "Month" ]
      },
      "RetryPolicy" : {
        "type" : "object",
        "properties" : {
          "retryCount" : {
            "type" : "integer",
            "description" : "Gets or sets the number of times a retry should be attempted."
          },
          "retryInterval" : {
            "type" : "string",
            "description" : "Gets or sets the retry interval between retries, specify duration in ISO 8601 format.",
            "format" : "duration"
          },
          "retryType" : {
            "type" : "string",
            "description" : "Gets or sets the retry strategy to be used.",
            "enum" : [ "None", "Fixed" ]
          }
        }
      },
      "ServiceBusAuthentication" : {
        "type" : "object",
        "properties" : {
          "sasKey" : {
            "type" : "string",
            "description" : "Gets or sets the SAS key."
          },
          "sasKeyName" : {
            "type" : "string",
            "description" : "Gets or sets the SAS key name."
          },
          "type" : {
            "type" : "string",
            "description" : "Gets or sets the authentication type.",
            "enum" : [ "NotSpecified", "SharedAccessKey" ]
          }
        }
      },
      "ServiceBusBrokeredMessageProperties" : {
        "type" : "object",
        "properties" : {
          "contentType" : {
            "type" : "string",
            "description" : "Gets or sets the content type."
          },
          "correlationId" : {
            "type" : "string",
            "description" : "Gets or sets the correlation ID."
          },
          "forcePersistence" : {
            "type" : "boolean",
            "description" : "Gets or sets the force persistence."
          },
          "label" : {
            "type" : "string",
            "description" : "Gets or sets the label."
          },
          "messageId" : {
            "type" : "string",
            "description" : "Gets or sets the message ID."
          },
          "partitionKey" : {
            "type" : "string",
            "description" : "Gets or sets the partition key."
          },
          "replyTo" : {
            "type" : "string",
            "description" : "Gets or sets the reply to."
          },
          "replyToSessionId" : {
            "type" : "string",
            "description" : "Gets or sets the reply to session ID."
          },
          "scheduledEnqueueTimeUtc" : {
            "type" : "string",
            "description" : "Gets or sets the scheduled enqueue time UTC.",
            "format" : "date-time"
          },
          "sessionId" : {
            "type" : "string",
            "description" : "Gets or sets the session ID."
          },
          "timeToLive" : {
            "type" : "string",
            "description" : "Gets or sets the time to live.",
            "format" : "duration"
          },
          "to" : {
            "type" : "string",
            "description" : "Gets or sets the to."
          },
          "viaPartitionKey" : {
            "type" : "string",
            "description" : "Gets or sets the via partition key."
          }
        }
      },
      "ServiceBusMessage" : {
        "type" : "object",
        "properties" : {
          "authentication" : {
            "$ref" : "#/components/schemas/ServiceBusAuthentication"
          },
          "brokeredMessageProperties" : {
            "$ref" : "#/components/schemas/ServiceBusBrokeredMessageProperties"
          },
          "customMessageProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets the custom message properties."
          },
          "message" : {
            "type" : "string",
            "description" : "Gets or sets the message."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Gets or sets the namespace."
          },
          "transportType" : {
            "type" : "string",
            "description" : "Gets or sets the transport type.",
            "enum" : [ "NotSpecified", "NetMessaging", "AMQP" ]
          }
        }
      },
      "ServiceBusQueueMessage" : {
        "properties" : {
          "queueName" : {
            "type" : "string",
            "description" : "Gets or sets the queue name."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ServiceBusMessage"
        } ]
      },
      "ServiceBusTopicMessage" : {
        "properties" : {
          "topicPath" : {
            "type" : "string",
            "description" : "Gets or sets the topic path."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ServiceBusMessage"
        } ]
      },
      "Sku" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Gets or set the SKU.",
            "enum" : [ "Standard", "Free", "P10Premium", "P20Premium" ]
          }
        }
      },
      "StorageQueueMessage" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Gets or sets the message."
          },
          "queueName" : {
            "type" : "string",
            "description" : "Gets or sets the queue name."
          },
          "sasToken" : {
            "type" : "string",
            "description" : "Gets or sets the SAS key."
          },
          "storageAccount" : {
            "type" : "string",
            "description" : "Gets or sets the storage account name."
          }
        }
      }
    },
    "parameters" : {
      "apiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription id.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    }
  }
}