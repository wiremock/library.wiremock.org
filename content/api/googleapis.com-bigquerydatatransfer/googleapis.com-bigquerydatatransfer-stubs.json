{
  "mappings" : [ {
    "id" : "abfb5fb0-cc40-4a07-bc67-dbca3ef28a34",
    "name" : "Start manual transfer runs to be executed now with schedule_time equal to curren...",
    "request" : {
      "urlPath" : "/v1/q1ra05gj1ahyxcxoeg76ja8miuxz2u0yf6cxq5i4k0mh0mjq2ecpsqgqv9p9e7m8b6eqexhlldm1igiek9xn0fe27ie:startManualRuns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"runs\" : [ {\n    \"scheduleTime\" : \"2022-09-11T06:30:06.579963Z\",\n    \"destinationDatasetId\" : \"4se4\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-07-31T08:56:06.580058Z\",\n    \"params\" : { },\n    \"userId\" : \"1z0r\",\n    \"schedule\" : \"ltx7w7ikxh4wonuqvmdan416uobt8xakqmwm8cl27tokc4xxgjq8hsqpyww2k2qp0opspd4wjreptjuhxeo4yj9bzs\",\n    \"dataSourceId\" : \"3p5y\",\n    \"name\" : \"Samuel Wilderman\",\n    \"errorStatus\" : {\n      \"code\" : 1920368940,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Necessitatibus alias qui doloribus rem labore. Cumque sequi asperiores inventore quam ut aut. Laudantium cupiditate non magnam dolores quibusdam sint vel.\"\n    },\n    \"startTime\" : \"2022-10-09T09:11:06.580317Z\",\n    \"endTime\" : \"2022-10-10T07:51:06.580345Z\",\n    \"runTime\" : \"2022-08-21T07:38:06.58037Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"ng5lokx1kcn88dxl7aytdo2dxec1yi2xmhhkc745goor9i6avq14jiqjhlqwdzfcd9zgnhe66vc87qgtfef68\"\n  }, {\n    \"scheduleTime\" : \"2023-03-09T08:17:06.58042Z\",\n    \"destinationDatasetId\" : \"r7el\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2023-03-27T06:16:06.580517Z\",\n    \"params\" : { },\n    \"userId\" : \"1r51\",\n    \"schedule\" : \"27gx0xmk80s0wj5ke2x6u0hj165yfg319rhv4jpymo0d68cqo4gbzxeyet13yvpaqwv7y4mzetwk7vbcs5vniwpz2l219i1z6qwg95qh8pnqxmdw2hqmh8veaucgs6r2cpvf9adinupeve78whht4qnfiybngumk7enb2uy3kmmcu2wxo39v5tahiey6osqmiry9tul\",\n    \"dataSourceId\" : \"r196\",\n    \"name\" : \"Ira Mayer\",\n    \"errorStatus\" : {\n      \"code\" : 1640445043,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ea esse sint. Sunt aut adipisci architecto. Aut est pariatur. Maiores non ut vel doloremque sapiente dolore reiciendis.\"\n    },\n    \"startTime\" : \"2022-11-06T08:49:06.580781Z\",\n    \"endTime\" : \"2022-11-04T06:21:06.580807Z\",\n    \"runTime\" : \"2023-01-09T09:19:06.580835Z\",\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"k94457gjvb3qlt053o8iaspzhmstpv0k9m7d36zlytqvga699ikrr6qauoo9n1kfpmhs4ou1hb9jj1yw89j2979x5vgo9\"\n  }, {\n    \"scheduleTime\" : \"2023-02-10T08:17:06.580885Z\",\n    \"destinationDatasetId\" : \"h249\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-11-07T09:15:06.580983Z\",\n    \"params\" : { },\n    \"userId\" : \"vk15\",\n    \"schedule\" : \"mtomonjjcp39q2cwtkru58nxljn1zrbiuq4e3q2lugo7b2b1blb1gcssytqvdy0yo8zggrx92dyufa3nu8ebk1mwrmoo5w4qpm1f0lch2w8m\",\n    \"dataSourceId\" : \"470i\",\n    \"name\" : \"Katerine White\",\n    \"errorStatus\" : {\n      \"code\" : 629607695,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Cum qui quo ut amet. Quia fugiat est. Id est sint officia rerum et occaecati maxime. Est eaque tempore necessitatibus praesentium. Modi non non.\"\n    },\n    \"startTime\" : \"2022-09-15T05:33:06.581253Z\",\n    \"endTime\" : \"2022-10-25T05:26:06.581278Z\",\n    \"runTime\" : \"2022-10-15T06:45:06.581303Z\",\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"7rciiwpnrc8bc0twh5fmn8mekwz6x3jvc8cur6l11mllky8lta6mhlt7ou2m8mjkr985n4wyg5jz7yaryp7kvyoi3zfz0ws0majrbzcwr9xq9w7ao258w0znv7rcoeango1422j1uq71xjjan\"\n  }, {\n    \"scheduleTime\" : \"2023-03-05T06:01:06.581352Z\",\n    \"destinationDatasetId\" : \"i2h2\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-08-17T09:16:06.58145Z\",\n    \"params\" : { },\n    \"userId\" : \"f9jg\",\n    \"schedule\" : \"wq7sz8c0tg0eql39nvb3cr34yw8bm6yf15587yl9xp5izhlg7xgwllupkiql6fcawb681ggnmrej60ir8t3fely3c6b2r08sb26exnxsuabptzloy7nfm490ndq5kccs5c2cjbs0z69eqh0xtzgc6x86v3si63ejq3qi6zl504\",\n    \"dataSourceId\" : \"ao23\",\n    \"name\" : \"Maryellen Braun\",\n    \"errorStatus\" : {\n      \"code\" : 1866988161,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Quisquam sint debitis nam consequatur id. Facere ut magnam ut doloremque eum. Placeat fuga eligendi quas ullam inventore dicta. Quia recusandae temporibus. Fuga et non cumque.\"\n    },\n    \"startTime\" : \"2022-05-15T08:08:06.581713Z\",\n    \"endTime\" : \"2022-11-27T08:11:06.581742Z\",\n    \"runTime\" : \"2022-08-29T06:19:06.581768Z\",\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"mah\"\n  }, {\n    \"scheduleTime\" : \"2022-08-06T07:20:06.581819Z\",\n    \"destinationDatasetId\" : \"3x81\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-08-14T05:40:06.581922Z\",\n    \"params\" : { },\n    \"userId\" : \"31yl\",\n    \"schedule\" : \"ldjakyki3mblog9pg4vkgw81d3oz2vrzn5j6goxhkxnhsnzjong68m5gh6cumfifi855czbdf2ktdzrnvn802r26n\",\n    \"dataSourceId\" : \"5x8w\",\n    \"name\" : \"Rocky Doyle\",\n    \"errorStatus\" : {\n      \"code\" : 878340977,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Voluptas possimus perspiciatis et a iste. Molestiae tenetur suscipit et. Quae minima natus occaecati quia reiciendis aspernatur. Et illo qui voluptas quaerat consequatur est in. Et aut porro sed ut mo\"\n    },\n    \"startTime\" : \"2022-07-13T07:33:06.582183Z\",\n    \"endTime\" : \"2023-01-04T06:38:06.58221Z\",\n    \"runTime\" : \"2023-01-07T08:59:06.582235Z\",\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"s9y8bslv6rlp90qions2j5hsez3rq0t850l8kecm7em1e4y8col7pbr4mqyugj4t\"\n  }, {\n    \"scheduleTime\" : \"2023-03-04T08:14:06.582283Z\",\n    \"destinationDatasetId\" : \"s686\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-06-24T08:17:06.582381Z\",\n    \"params\" : { },\n    \"userId\" : \"6rbc\",\n    \"schedule\" : \"f9vk6qw7umhd5pyvzpqt0e4a4w8n2jvixlknuopkbu2gsd4qdhn0o6ygtk8g0e9eimen0qy04cyfu0v49s3sfxizo8hiudesxvl2euyzmvfxyln6xl3vy\",\n    \"dataSourceId\" : \"130g\",\n    \"name\" : \"Vennie Greenholt\",\n    \"errorStatus\" : {\n      \"code\" : 859940392,\n      \"details\" : [ { } ],\n      \"message\" : \"Quisquam architecto necessitatibus a. Quibusdam id accusantium deserunt quidem sequi sint omnis. Consequatur enim expedita quas laudantium. Repellat hic aut.\"\n    },\n    \"startTime\" : \"2022-06-28T07:20:06.582634Z\",\n    \"endTime\" : \"2023-03-17T07:35:06.582659Z\",\n    \"runTime\" : \"2023-01-25T06:27:06.582687Z\",\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"ojsgapbq2yqlgchmdyr8h2q7m1w030e7gn7tjdrlnzvzxh5za38or91lrzliq88obivui8zb8mx9s2mxbgob756ledxyyn5o4y8nudyy9ll0ljbk89euvh4zxth5d773v51jy23g9bqggk0sanjwh777m25mwlv5w6nafhpfw8lc085u8o7vvdz1xt567pie8ai5u\"\n  }, {\n    \"scheduleTime\" : \"2022-12-25T07:50:06.58274Z\",\n    \"destinationDatasetId\" : \"qd70\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2023-03-03T06:20:06.58284Z\",\n    \"params\" : { },\n    \"userId\" : \"aijw\",\n    \"schedule\" : \"nr7wughvbeeqhhbhwc550ig204ku\",\n    \"dataSourceId\" : \"0u7u\",\n    \"name\" : \"Mitchell Flatley\",\n    \"errorStatus\" : {\n      \"code\" : 1954510782,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Omnis quisquam quisquam mollitia. Saepe quo distinctio repudiandae aut reiciendis dolorem in. Et corrupti voluptatem inventore vel libero. Ad atque aspernatur sit natus nostrum in. Qui quia suscipit.\"\n    },\n    \"startTime\" : \"2022-06-26T06:35:06.583104Z\",\n    \"endTime\" : \"2022-07-05T07:00:06.58313Z\",\n    \"runTime\" : \"2022-06-06T06:26:06.583155Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"n5w6tggoa7asmsxxt49571t4mixxeklo0yscojny010rj6ox7eanwj34g9fpouw3di7lf9gtxe33119mw5wk22cv3t35zutdzl1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abfb5fb0-cc40-4a07-bc67-dbca3ef28a34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.583306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
          "schema" : {
            "description" : "A response to start manual transfer runs.",
            "properties" : {
              "runs" : {
                "description" : "The transfer runs that were created.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "cfec49b0-6fe8-45c8-851a-6493c332a2d5",
    "name" : "Creates transfer runs for a time range [start_time, end_time]. For each date - o...",
    "request" : {
      "urlPath" : "/v1/skspq3yhzq6vmefcent8zxftkx8boof1ykltqf3p1asdo719uj9y8k9x7hpsp17u5khcx6m5ucfqj0pqtmmx32mqyybfuyx9dbsod68c4c74ufxfo815cdo0ybpkqoolvyooc8rayjsof5o0yeyxjra22kpig7g4nf26sw52yj1o42jxvb8igd:scheduleRuns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"runs\" : [ {\n    \"scheduleTime\" : \"2023-02-26T06:31:06.577471Z\",\n    \"destinationDatasetId\" : \"3z83\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-05-25T06:43:06.577577Z\",\n    \"params\" : { },\n    \"userId\" : \"ct3l\",\n    \"schedule\" : \"jer8ltyee5be9rbdj4upi5ofzxwaa84ju3vtxb6mp238o5uc2385czsxjreloh8qaev9ept7ia39ahuhp7q9ag3mfy55ixktt82m6dvxaxeu3\",\n    \"dataSourceId\" : \"5ct5\",\n    \"name\" : \"Dr. Joesph Tremblay\",\n    \"errorStatus\" : {\n      \"code\" : 2006987057,\n      \"details\" : [ { } ],\n      \"message\" : \"Quia vel ab labore nostrum aut fuga. Cum voluptatem dolorem non vel eos. Sunt ut aspernatur.\"\n    },\n    \"startTime\" : \"2023-02-19T07:28:06.577868Z\",\n    \"endTime\" : \"2023-03-28T07:56:06.577895Z\",\n    \"runTime\" : \"2022-10-30T09:14:06.577922Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"vqvhf0oelq365r593r40l3uhcd76ehmllvhhz4mcushkejb\"\n  }, {\n    \"scheduleTime\" : \"2022-12-09T06:34:06.577974Z\",\n    \"destinationDatasetId\" : \"36on\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-08-09T05:51:06.578075Z\",\n    \"params\" : { },\n    \"userId\" : \"j1f1\",\n    \"schedule\" : \"w0chgzq68tq0kpb72ggv7tj032ijekgqs7isdienh2u6nx2wdjjr5lgi363i2vifubcjksyfaa2rtxvx7lpy36wxp208sd6hioubammm1b8hnix2umko2p5urtbv4t2it1b7amu18p9\",\n    \"dataSourceId\" : \"597e\",\n    \"name\" : \"Ethelene Marks\",\n    \"errorStatus\" : {\n      \"code\" : 287199674,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Qui atque vero. Quidem ipsum maiores enim consequuntur suscipit. Eos ex et ad deserunt.\"\n    },\n    \"startTime\" : \"2022-06-19T07:27:06.578339Z\",\n    \"endTime\" : \"2023-01-30T06:49:06.578365Z\",\n    \"runTime\" : \"2022-08-04T06:33:06.57839Z\",\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"tji0jr82yu1m5wv3n9q0q0m91sdk7afei6epvwvrj6ztiyym0nt65dkn7mzzfqq0x01msfm7ibhheupsxedmjnsp1y2pg4b3klqm4sv90df9tm19gv5w5pcwv2z1hnqcl62ih7n9vjonut8yrpdoabdv9014cnfqz34rsdmvquktmjcfmuil49nig1xzvc3aj8hzt84\"\n  }, {\n    \"scheduleTime\" : \"2022-11-04T05:32:06.578442Z\",\n    \"destinationDatasetId\" : \"laq0\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-07-20T08:40:06.578536Z\",\n    \"params\" : { },\n    \"userId\" : \"x7y8\",\n    \"schedule\" : \"486dbj1rhbs4dyrg\",\n    \"dataSourceId\" : \"p2ly\",\n    \"name\" : \"Miss Serina Donnelly\",\n    \"errorStatus\" : {\n      \"code\" : 961858294,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Eum velit sit. Aut assumenda error vel esse. Sint delectus fugiat et consequatur consectetur enim. Neque eveniet alias numquam ipsa culpa reprehenderit non. Quia enim eum delectus est voluptatem.\"\n    },\n    \"startTime\" : \"2022-09-24T06:26:06.578798Z\",\n    \"endTime\" : \"2022-06-16T07:26:06.578823Z\",\n    \"runTime\" : \"2023-03-09T06:11:06.578848Z\",\n    \"state\" : \"RUNNING\",\n    \"notificationPubsubTopic\" : \"pt96233ko8vosqb0c3njs64cksil6p08i6x7gutodp98ydc0y5uim17y0fi5qr8r9iptai2usr8jsd02rh0sea3os5dgd22aemqg9htty1409ikb8e0htpvdth8\"\n  }, {\n    \"scheduleTime\" : \"2022-10-10T07:26:06.578899Z\",\n    \"destinationDatasetId\" : \"n20l\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-07-04T06:01:06.579Z\",\n    \"params\" : { },\n    \"userId\" : \"k960\",\n    \"schedule\" : \"f5q080rwi377omai11kesd87jbruswbt93n0rp3tcbwdmzfrgaxmkugf77jle0j0iz2u\",\n    \"dataSourceId\" : \"6g58\",\n    \"name\" : \"Cedrick Morissette\",\n    \"errorStatus\" : {\n      \"code\" : 1044362023,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Ratione consequuntur cum. Sit debitis minima. Laborum cumque adipisci reprehenderit sed possimus aut sunt. Laudantium et deleniti quaerat et.\"\n    },\n    \"startTime\" : \"2023-02-21T06:04:06.579259Z\",\n    \"endTime\" : \"2023-03-22T06:52:06.579284Z\",\n    \"runTime\" : \"2023-03-11T06:01:06.579309Z\",\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"g7gzt74cm8kwicfbym5eqe2px5us88d2usqbeipvhl8on5klocwx4sivs0hkrzonmjpih8uxke0sd9mzzerdk7rf8boqylx01psk8d9sidfhm5n6ax0nnr2pp4n\"\n  }, {\n    \"scheduleTime\" : \"2023-02-06T06:05:06.579357Z\",\n    \"destinationDatasetId\" : \"ds47\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-07-23T05:46:06.579452Z\",\n    \"params\" : { },\n    \"userId\" : \"hu0h\",\n    \"schedule\" : \"rw551\",\n    \"dataSourceId\" : \"ydc6\",\n    \"name\" : \"Issac Halvorson\",\n    \"errorStatus\" : {\n      \"code\" : 2039223734,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Corporis qui deserunt recusandae. Voluptate repellendus repellat quia similique ab voluptas. Et voluptatum enim voluptatibus. Enim officiis ratione dicta. Esse earum eveniet maiores provident expedita\"\n    },\n    \"startTime\" : \"2022-10-07T06:45:06.57972Z\",\n    \"endTime\" : \"2022-10-14T07:47:06.579746Z\",\n    \"runTime\" : \"2023-02-28T05:26:06.579771Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"sb1zhv9qjf6reoyykndbc9crit7tdfehwdrqpzycxldytmvv16du7sdonw3wrc51eiuc2jbu2rqiq8pcet8hqkibl16asjqxjxheflqwy4lzolunztd27x1thgd2xbpjma97lt5ue99kpecup855g7xo6f8sqau5n9awwhnoe0zx832nj1rtnpi6wki6zuatf3nt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfec49b0-6fe8-45c8-851a-6493c332a2d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.579909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
          "schema" : {
            "description" : "A response to schedule transfer runs for a time range.",
            "properties" : {
              "runs" : {
                "description" : "The transfer runs that were scheduled.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "552079e6-0fc2-411b-868c-47a0e4d15f58",
    "name" : "Returns log messages for the transfer run.",
    "request" : {
      "urlPath" : "/v1/m3orgxiw1csyjev827n/transferLogs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferMessages\" : [ {\n    \"severity\" : \"ERROR\",\n    \"messageText\" : \"uz3ccma4yy4y59a1pkaviq7ozra1li0r4hqzhncwepxkailtr8lbn1bikaa3nwpseghijlr6wqmcuh9svohyzjaeo62htle3picqt3mrsih\",\n    \"messageTime\" : \"2023-02-04T05:49:06.577099Z\"\n  }, {\n    \"severity\" : \"MESSAGE_SEVERITY_UNSPECIFIED\",\n    \"messageText\" : \"qc020nb3ffczwzfxs6r12jrrlo5ez9j9m\",\n    \"messageTime\" : \"2022-09-10T06:30:06.577147Z\"\n  }, {\n    \"severity\" : \"INFO\",\n    \"messageText\" : \"ael5pbzyp5tq7m7208bgowoqmbqcow5gqpkn1nlqjdi0ag6jk533wckeia8emn2i7lmridlkajtl215ccdx2agxkusgrirbyea0zy0j6sfc5cxvdfxw65h\",\n    \"messageTime\" : \"2022-06-26T08:54:06.577194Z\"\n  }, {\n    \"severity\" : \"WARNING\",\n    \"messageText\" : \"r57cg8mjmgurcsn1u7yowg23vl\",\n    \"messageTime\" : \"2022-05-19T09:03:06.57724Z\"\n  }, {\n    \"severity\" : \"WARNING\",\n    \"messageText\" : \"164re7zkfoi4mtvkmarwgzmkygokx5v1yvwnogj6po7a51a\",\n    \"messageTime\" : \"2023-02-25T05:41:06.577285Z\"\n  }, {\n    \"severity\" : \"ERROR\",\n    \"messageText\" : \"3mkjgf9fwljfit1tsyixqf1t25t8h5c0aiyell6imq97vw054mqyndrwou75ssyp5jkt18mxptlfo5fsj1gco29e239ec4emw13gkswe5iedlt6cv3w9lzxue12qug03n8anpz2jnpd09js6\",\n    \"messageTime\" : \"2022-04-05T06:57:06.577333Z\"\n  } ],\n  \"nextPageToken\" : \"opkydbaxj4siven9gtcu1txh2u5k9rkwk41hntrsb0r4a3cdvgqeb1h5eguh0ogjbbpr98wa0xjxiqplpf59nx7fmlp7bizyv541di0pvm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "552079e6-0fc2-411b-868c-47a0e4d15f58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.577419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
          "schema" : {
            "description" : "The returned list transfer run messages.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferMessages" : {
                "description" : "Output only. The stored pipeline transfer messages.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferMessage"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "cbf92474-6775-4495-83ed-b854d0a5ef01",
    "name" : "Creates a new data transfer configuration.",
    "request" : {
      "urlPath" : "/v1/84m2xcr1xduy6cxcbzjwbniwqz7gwwzjnpm8k428pm57qj56ys6btx5o81kzxq5sq0p1p5uayawsh5p1um1jj8ri1cicviuyhdhdt2qw0pmqz2kodbgs5j7dl/transferConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"destinationDatasetId\" : \"r9n2\",\n  \"displayName\" : \"Stewart Howe\",\n  \"scheduleOptions\" : {\n    \"disableAutoScheduling\" : true,\n    \"startTime\" : \"2023-02-15T05:46:06.576485Z\",\n    \"endTime\" : \"2022-05-03T08:55:06.576511Z\"\n  },\n  \"ownerInfo\" : {\n    \"email\" : \"yxzm3q06pseyhcscftm0z4y\"\n  },\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : true\n  },\n  \"updateTime\" : \"2022-06-27T08:42:06.576557Z\",\n  \"datasetRegion\" : \"xwc6kkd8aaty8yd4jevifwvglw2eiz7h4y6e8qxgm5xko3pq2odmvpuehxsjrhibgwjncnc17pl5uflc\",\n  \"params\" : { },\n  \"userId\" : \"t0d6\",\n  \"dataRefreshWindowDays\" : 1918754202,\n  \"schedule\" : \"xwhjdjfhfunbk1ui5yjnfjm3jj0mcfvfe6v0prtxjbsq7st2j7511zsjqzw3jixiana0yv0kevkxkzzm9t0wtso7ad2xz7u3g7o6bffmlo84a7ypso26oz\",\n  \"dataSourceId\" : \"7eny\",\n  \"nextRunTime\" : \"2022-10-09T08:26:06.576747Z\",\n  \"name\" : \"Alaine Maggio II\",\n  \"disabled\" : true,\n  \"state\" : \"CANCELLED\",\n  \"notificationPubsubTopic\" : \"ueqst8lelw5aulzhcxtux8nxn2l1c5wlrivomnmljyuuw5otwt0qot08ag56xnmijiclgvqag431jqpwoq45dgd7m8xvi97soh1qiq54wv557oipkhnadqjezbvknpd67cyto630j7h0d0udgtg7jx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbf92474-6775-4495-83ed-b854d0a5ef01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.577015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.create",
          "schema" : {
            "description" : "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
            "properties" : {
              "dataRefreshWindowDays" : {
                "description" : "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                "format" : "int32",
                "type" : "integer"
              },
              "dataSourceId" : {
                "description" : "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
                "type" : "string"
              },
              "datasetRegion" : {
                "description" : "Output only. Region in which BigQuery dataset is located.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "The BigQuery target dataset id.",
                "type" : "string"
              },
              "disabled" : {
                "description" : "Is this config disabled. When set to true, no runs are scheduled for a given transfer.",
                "type" : "boolean"
              },
              "displayName" : {
                "description" : "User specified display name for the data transfer.",
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "name" : {
                "description" : "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                "type" : "string"
              },
              "nextRunTime" : {
                "description" : "Output only. Next time when data transfer will run.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "type" : "string"
              },
              "ownerInfo" : {
                "$ref" : "#/components/schemas/UserInfo"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "type" : "object"
              },
              "schedule" : {
                "description" : "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
                "type" : "string"
              },
              "scheduleOptions" : {
                "$ref" : "#/components/schemas/ScheduleOptions"
              },
              "state" : {
                "description" : "Output only. State of the most recently updated transfer run.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Data transfer modification time. Ignored by server on input.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "4d5fd086-d756-43cc-a824-6092db308af2",
    "name" : "Returns information about all transfer configs owned by a project in the specifi...",
    "request" : {
      "urlPath" : "/v1/8mmvrfrbg22gfck5kcs6qzojhj412if3snpacx9hs3pd95klf2o6o7jiofobx7oijdg9927zejskja8auiiq/transferConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"6irbqyx5as1qxczxxgsxxyxuzvncbrtu\",\n  \"transferConfigs\" : [ {\n    \"destinationDatasetId\" : \"qd6x\",\n    \"displayName\" : \"Hosea Roob\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : false,\n      \"startTime\" : \"2022-05-25T05:41:06.574411Z\",\n      \"endTime\" : \"2022-07-01T07:14:06.574443Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"kvyvwg7zakx2t2ifld0fwihq72cwt01vhgb267q37fnr5w8yq1sm48j8f8o9ohkwnvtyjwrkepex04hveffrk55duq42gyh55rvqvrnuy4z477e93d5mpe40\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-12-09T07:43:06.5745Z\",\n    \"datasetRegion\" : \"qbtgbg9n27mgmhjalz1gywwr3bvvz320znv4w8mot7ycmplcggg99lghgjlbifgz078u1ge90hnl0p0o0t8rp45bnbg13t5is84wmrp1s9r2uuzfucpq0c3tp3ad8qv90erxvtwqh6vnejqgpeiyo5rqhjp\",\n    \"params\" : { },\n    \"userId\" : \"tt2j\",\n    \"dataRefreshWindowDays\" : 840559056,\n    \"schedule\" : \"v5xkdqsgfpfqwmjtznsvtj8fa6sjfebx8vv21updv0efcf7jzjupkan4kq2wt7jcwpm1zhfcv4nhslt89vz6ersh8dbl4zfjoa74z81v47yt3oouwi1t\",\n    \"dataSourceId\" : \"n1ao\",\n    \"nextRunTime\" : \"2022-06-03T06:15:06.574724Z\",\n    \"name\" : \"Kevin Sanford\",\n    \"disabled\" : false,\n    \"state\" : \"SUCCEEDED\",\n    \"notificationPubsubTopic\" : \"f0yb063z7yshy3pahndo7rsrjee7u92jamb8d5\"\n  }, {\n    \"destinationDatasetId\" : \"76x6\",\n    \"displayName\" : \"Freeman Dickens\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : false,\n      \"startTime\" : \"2022-11-24T09:00:06.574941Z\",\n      \"endTime\" : \"2022-07-11T05:44:06.574968Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"5wiurkql9rv9kd6udyuc7qo38ve98yotqkruf2nolbxw90yqtwwg6j3ext7sd4ghe7umtz98lkpokrwzyyxy4dokheczk\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-06-04T08:08:06.575018Z\",\n    \"datasetRegion\" : \"rcpvz62zh9lgsagz7a6ok0u5kxka1x02d3s5i9pt8yh\",\n    \"params\" : { },\n    \"userId\" : \"iksv\",\n    \"dataRefreshWindowDays\" : 529021787,\n    \"schedule\" : \"8zxim5\",\n    \"dataSourceId\" : \"n4jt\",\n    \"nextRunTime\" : \"2022-05-27T08:30:06.575205Z\",\n    \"name\" : \"Eve Oberbrunner DVM\",\n    \"disabled\" : true,\n    \"state\" : \"SUCCEEDED\",\n    \"notificationPubsubTopic\" : \"jmhldui6ljr9t1l1k9xjpqmzsz2uzxe834hp2fllt8q5c1xhda5tylcsmcowat6cm3l2bphla92gbfveb7nnseqo\"\n  }, {\n    \"destinationDatasetId\" : \"eyx8\",\n    \"displayName\" : \"Dusty Koss\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : true,\n      \"startTime\" : \"2022-12-17T07:35:06.575412Z\",\n      \"endTime\" : \"2023-01-08T08:23:06.57544Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"jtbk0ly1f7wi3dqbzdugwdgms8pxxn71rot9pbbkmq4r71wgjc060\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2023-01-11T06:26:06.575487Z\",\n    \"datasetRegion\" : \"cz0uxzfx88wf59glf3dl8nko70s1wrpdyt0cnngx6siztzur2\",\n    \"params\" : { },\n    \"userId\" : \"x67y\",\n    \"dataRefreshWindowDays\" : 281226511,\n    \"schedule\" : \"gxwwj955nz9m8qxdpm6yjwzzdjeq3mci7iidbzxjnsb76soic46ktn0eko6yd7kgeb6huwzq2ym2k2tanxq31yp9lgf64akt3gob73gmt\",\n    \"dataSourceId\" : \"ihxh\",\n    \"nextRunTime\" : \"2022-04-05T05:38:06.575675Z\",\n    \"name\" : \"Stanton Upton\",\n    \"disabled\" : false,\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"rqoua32r1nvffttg1601mjffrsoganqvjnkarjnqlqp1708uuf5qipq2obo67fvhd2cin4oj5qfooqocr\"\n  }, {\n    \"destinationDatasetId\" : \"ku60\",\n    \"displayName\" : \"Mitch Dickinson\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : false,\n      \"startTime\" : \"2022-05-19T07:50:06.575879Z\",\n      \"endTime\" : \"2022-11-21T08:37:06.575908Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"nk2\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-11-26T07:20:06.575955Z\",\n    \"datasetRegion\" : \"wqus6uwlwv695zzzjcqnngxazmdlwjlf0rwa2t69l8k788vgv0b7b09k8v30s8gto3awbc9zzbafhiyh5gm0zzvro2zqv12tpp8a1rz7vd5\",\n    \"params\" : { },\n    \"userId\" : \"k21o\",\n    \"dataRefreshWindowDays\" : 1134688007,\n    \"schedule\" : \"jrg519zouttd5yr6xigotlgiws8crk0o2zt5vyp53mwyd0i9lv7se8qjt6z4mi739qft15yn8iknwiwu6hwx69gebu13959q18hko4v0kl19l8qowjgbq2cere\",\n    \"dataSourceId\" : \"1z9i\",\n    \"nextRunTime\" : \"2022-10-23T08:48:06.576146Z\",\n    \"name\" : \"Jasmine Yundt\",\n    \"disabled\" : false,\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"1biu4zkgo8043fw6cjw0fwsn7r51l6b7ryy31gwcopeapzwio2wypsn9xqbum31ziqyfyr2xmncg6vxjbchgz58yo0kxw6u4e6a19qoju309hfwntoikdukj6uwaizskr73au0fbwkmyjy11me4g2tfilj\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d5fd086-d756-43cc-a824-6092db308af2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.576333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.list",
          "schema" : {
            "description" : "The returned list of pipelines in the project.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferConfigs" : {
                "description" : "Output only. The stored pipeline transfer configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferConfig"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2e6d5983-618c-41a8-b03a-b9ab193ef633",
    "name" : "Returns information about running and completed transfer runs.",
    "request" : {
      "urlPath" : "/v1/595hppygqrloy0f8px31wpgbdbze8z30ykdxcwzcfhxt2165a9dslijyqlmou1lmw6j4st2etnk1go485uvzxbnwjkmooqkku3m987r5hdta0hhe3wto73y9rhihu88bg7fy2hmahu1q55duzied/runs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"sefhkc2tsysbuu3r3izizsxmc0kfzf3qh2zyjw18gsxp8nal65ziccjwcjtejo6tkuzuaoou0\",\n  \"transferRuns\" : [ {\n    \"scheduleTime\" : \"2023-03-09T07:38:06.573626Z\",\n    \"destinationDatasetId\" : \"49rt\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2023-01-10T08:58:06.573739Z\",\n    \"params\" : { },\n    \"userId\" : \"9ct6\",\n    \"schedule\" : \"xjbwcp1bublue5jvq8b2qui0eosxlgdboj0wmxu9kp3n68d3qv20pczwkafckkg2qvrm3h79njwx1o3pzk5p8z2j1m7\",\n    \"dataSourceId\" : \"9t60\",\n    \"name\" : \"Scott Hintz\",\n    \"errorStatus\" : {\n      \"code\" : 1820561209,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Qui sit ut id molestias. Nostrum velit porro et. Et ut et ut enim. Suscipit quia et impedit non. Corporis magni molestiae quis voluptate explicabo.\"\n    },\n    \"startTime\" : \"2022-11-19T07:25:06.574049Z\",\n    \"endTime\" : \"2023-01-13T08:03:06.574079Z\",\n    \"runTime\" : \"2022-08-01T05:26:06.574108Z\",\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"aqlo8pbt9zh57a5t4iqym1mzp3mp30qq4ps5vufmprluheqtg18wja9no\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e6d5983-618c-41a8-b03a-b9ab193ef633",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.574221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.list",
          "schema" : {
            "description" : "The returned list of pipelines in the project.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferRuns" : {
                "description" : "Output only. The stored pipeline transfer runs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "f01e522e-59a6-45e8-9d1f-494786f2d9e2",
    "name" : "Lists supported data sources and returns their settings.",
    "request" : {
      "urlPath" : "/v1/e5fo6yevx9fnvznmvekyn3kmsd6drk3r6kkoiqyfppfslx0abqtpn403dkebpu4fwpmyn1nnx0ons93rh5kjtf7bl45ty4uiagwea1tfdlbq4i0204aecllt20kth9r5jhv0e/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"g6t8csvzhrb39wgotbcirctn929q5mhzk9g8vz5ua43cx9618oaubmyfr9rjxaknkd8kd0qxon0btpnk78vvwr4fxst4220e1qv4eurharr7t7c9vr73q3zcuwa4ln7iuk3h5aq2e27wgzd8x14pkzr5efur5wntvfce8f\",\n  \"dataSources\" : [ {\n    \"clientId\" : \"419x\",\n    \"minimumScheduleInterval\" : \"9fhmi2ntgfbxhic20bacmvjubnjnrxm6psydzncaqjzxta4kg3xsie5igoz4jxfi6g1kwiopodv6yz8yz2rv2cyuplpn3dj03\",\n    \"defaultSchedule\" : \"ie2s9q7snxg4bqy907n2mw4\",\n    \"displayName\" : \"Eloy Konopelski\",\n    \"description\" : \"Expedita commodi ex quasi. Voluptas quae suscipit. Dolorem culpa quis fuga est repellat facere necessitatibus. Illo tempore facere dignissimos nisi voluptatum esse.\",\n    \"helpUrl\" : \"https://web.example.mocklab.io/545831\",\n    \"dataRefreshType\" : \"DATA_REFRESH_TYPE_UNSPECIFIED\",\n    \"dataSourceId\" : \"87ok\",\n    \"manualRunsDisabled\" : false,\n    \"supportsCustomSchedule\" : true,\n    \"name\" : \"Christine Fadel\",\n    \"supportsMultipleTransfers\" : true,\n    \"authorizationType\" : \"GOOGLE_PLUS_AUTHORIZATION_CODE\",\n    \"transferType\" : \"BATCH\",\n    \"defaultDataRefreshWindowDays\" : 1149899746,\n    \"scopes\" : [ \"whbr1z637vokgwl5vhf9fi7fu6qc7ow6eqchn8wukm3plo4hn354x8ypk6xh25f9qqshajojd7ao3vrk4wgdyp0xlityhzawhmnhi4\", \"1fx50kyr1kosgtj53q3opvg82jxw4l7p9depxq8t3lyfp189gswjenyjeyccqd0g44hw7dnia7qxb926ymkqhdflciu9moefax8ow7z0wh4\", \"juocel2aunuaql8fkvuqwcukked49l61cqfxv0ey73f4hlmic6hedthiy2echkoqyqslwtcpkcgkv0eb4oxl3uqhkxklb6ylkij5zqqhs6cz6kk89shc1drsez7yu4xcivxbyk2rcd4g8\" ],\n    \"parameters\" : [ {\n      \"allowedValues\" : [ \"ponphgzmwkrfdyc9tmyz1yb57c0y2qo9hgwl98gpajm0vcxc2\", \"d4ful0fsrcfr1y5z4m2n2nuok8pqfmtkmwxtg\", \"yl6wg070sdi62xlg\", \"cfeyjy0ht4uvq28nfcup6xq7gdr2sijrue03gfz2oidnn2j225yug2xxwl7f9z57ouomlxvht6wmwd1381bn4tfnftl9g0in6aa28bkrg363ldkg0v8gg7c9mkxfkhkhwfncaeeqw9krizy3u3ig9dcrk2ipzxzbz7r33ulspg22\", \"rsxgh0n8r8bccy5j8bh3vk2hzdulg730wh59ig98zysijdqnyqud5qj8s59sqd6gmy8688vku7n4kz4zlzc9873iqqdz7v0jps4jqyuszwh032o237cg6quykqys7di1vzfz9kt9zkisqwmlotdr9l6pm6sk6v8yqar4fckud4a03rg2i6y5rnu1ihj21p\" ],\n      \"displayName\" : \"Miyoko Daniel\",\n      \"maxValue\" : 9.09022768640348E307,\n      \"deprecated\" : true,\n      \"description\" : \"Reiciendis natus numquam veniam sapiente sed. Ea voluptas doloribus et. Quos eveniet eveniet veniam eveniet quod. Ullam accusantium nihil earum consectetur.\",\n      \"type\" : \"DOUBLE\",\n      \"repeated\" : false,\n      \"required\" : false,\n      \"validationDescription\" : \"Quasi molestiae cupiditate eligendi aut aliquam. Quae et consequatur commodi velit. Aut asperiores voluptates.\",\n      \"immutable\" : false,\n      \"minValue\" : 1.2926828787470607E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/311993\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { } ],\n      \"paramId\" : \"leox\",\n      \"validationRegex\" : \"t4lpzetlni5wz6a69cof8qyc4eaxu5xbed\"\n    }, {\n      \"allowedValues\" : [ \"dnwelo8u7xpupeniq0mqkyouhy3qo5d6kwix0ecwz7l9la4tzjzwrvj5f9yuc3heo66xtjyh548zimpyf9wgyu12mcqbcjwghqwr6omuxqycygijmfwh0ios0oc00mk5j287x9hb2jbns\", \"zlrklk7sgp0qrv3d8de7nx4cembqucgbosuaj51ch9rrhyitd0ei2jgc2bdtkog0id0lodah1k99kc50uze5a6vcqd\", \"w77cnq8hdmlc7e2z5ij23hyhto0ozzcqstl7ipfk8rqmg278egkjl9zzgmve15zl4p71wf0yoss68jw3lrwyf2116hp2pl7mkn5sg00a1o763bwiq6\" ],\n      \"displayName\" : \"Marcy Kirlin\",\n      \"maxValue\" : 1.6458150186013952E308,\n      \"deprecated\" : true,\n      \"description\" : \"Impedit commodi delectus eum. Officia impedit est delectus quia. Eum enim corrupti excepturi iure. Neque aperiam architecto dolorem deserunt.\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"repeated\" : true,\n      \"required\" : false,\n      \"validationDescription\" : \"Vel totam quia debitis dolorum aut dolor. At provident itaque et ab. Quo corrupti neque hic ea. Voluptatem veritatis aut aut quaerat repellendus architecto.\",\n      \"immutable\" : false,\n      \"minValue\" : 5.723240604109555E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/017529\",\n      \"recurse\" : true,\n      \"fields\" : [ { }, { }, { }, { }, { } ],\n      \"paramId\" : \"mb21\",\n      \"validationRegex\" : \"dlulpix02qucrdh6xc4fab993i5mqzprq1rup5cf02lxt7c9xsn6il1kcx64xfat7bmm1v63icaehp4fjwc7ghii4zxo2pxobuw1xpb1wc4qm84srz5d76dhz2anflzs3t539y090u5f8rkb04vk9w5rks5bbonse6hceqcqjyile689uty9h\"\n    }, {\n      \"allowedValues\" : [ \"tu5oy3ccddr2q08k35m6x6mi05tneeaql60zadxu7jecyrwo4wc4kmbh71\", \"q8bi33iq4x0r4ttagyxj2vmqanmlkw6s0h2dafqq10523vsz35hp8tbj6oikcgtrdy8cfb3yicidlqm13xb59hbalkd947sglj6ua4ftnsfslzbn1zh6ewislyn49ek9w0z3u2o9kehc\", \"35tqjllx3ago8qlwk2a39y4d11j7qu2el9hi9b3gcq6l57fy2xyai77noijdmyystjrpywl8lt91i6h98oshnu9bo8i8kxseakh6w3r9c38pib4fezip5c7mcrudz8hcpzp9xa4rzor0xhky3a21ndw014t4k70lmzdjhx0mf5mqkpo0l13dhdetzplfhla7wmwb\", \"2hftjbrybgo3iapc2cy5nz2a2zbu40n2x7xcpxx2lqp2rgbclr8a1h24nn637msxxs0k7gbci17fh7gm8f4md962ttstp06g31bllijjagmix413u2vxf43s4rtej0fssuuzshi4p1u76pm\", \"p5jlmf2w26ktevrk0fpuw4076wpahug8m0feg9jq8d01f3r13\" ],\n      \"displayName\" : \"Santos Cassin\",\n      \"maxValue\" : 3.8847857872583787E307,\n      \"deprecated\" : true,\n      \"description\" : \"Alias quas similique aliquid. Occaecati culpa iste voluptatibus ipsum beatae et. Assumenda nobis et eaque iste maiores ratione ut. Ullam repellendus quis quo aut reiciendis eaque. Et dolore eum occaec\",\n      \"type\" : \"STRING\",\n      \"repeated\" : false,\n      \"required\" : true,\n      \"validationDescription\" : \"Earum eum quae quod qui magni reiciendis dolorum. Accusamus repellendus reprehenderit doloribus id repellat dolores corporis. Pariatur laboriosam quia autem ut neque sed animi. Sint repudiandae offici\",\n      \"immutable\" : false,\n      \"minValue\" : 8.268702674996341E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/917285\",\n      \"recurse\" : true,\n      \"fields\" : [ { } ],\n      \"paramId\" : \"6355\",\n      \"validationRegex\" : \"p3z0ql4gulkm87gtfbnvr0d2quhi3ujeeqgypwbfb1mznzq50cs9ka2lobufrmpiv1z9dqrb0dyi57a722heh1434z3kkwrn7fb0ggix99xmv1y7xl2tijxc3550qef8js1ks61jqqfjj4ohq5723mc9oh7gxyb0yg1g2whior3id7flcvf6cjekgoyr59\"\n    }, {\n      \"allowedValues\" : [ \"7y9o0it2zbtqzqwopd7kqkhhfbpbughuv\", \"nvyff5mmi6savsw2ouwxenb4ykgqyxfz2oulnhin2qlnmrcszby1mvce1bc1xmpkt9phj59mag2surl1bimf8kmjzt7x\", \"23q6ckhimivzm4v931v6hwo5nrr43ftjtepq8kdqi8377ft2ejpdw2v6qxlxtoi1xwuajoeg\", \"a42vwsqw22nxw5bokm7ooehpsrnpj41ncm8zrxiu9gasoyfshqq5detsz4n9wa73t0smyw7s\", \"1o592l99n3gpkyk1u3bgwdgezxuaqxoaq6qhycrhj5sgnl89kicpjc6p6abggf4h5c7t3nbnr4sdso\", \"34xh2vcln1a5mguio0y0pxvs4glzsdz\", \"df5evmvidp5fypd0i14tq58p28uh02pyih3qi618ckjzt6a5w7uvi8g2ul9m0cie27yc9kqte4424mj8zr060j6lfhcs77zdcdstnp9ov53sv2z\", \"x2u6qollohn89zd7a7998mvrsx7xvo0r7f9mi8xx9v8zgl0jolpcysrwclwjiwidggncn02pe7du9cytthr4rs3cvdrkjr9vsxcaxxipf03mdh33242dsn3l3c8v4ax7cm9c\" ],\n      \"displayName\" : \"Nakesha Langworth\",\n      \"maxValue\" : 1.3626602613354215E308,\n      \"deprecated\" : false,\n      \"description\" : \"Animi a reiciendis velit excepturi omnis. Sint ut temporibus aperiam. Sequi pariatur nobis quaerat animi saepe. Omnis repellat illum at quisquam.\",\n      \"type\" : \"DOUBLE\",\n      \"repeated\" : false,\n      \"required\" : false,\n      \"validationDescription\" : \"Sequi et et molestiae minima. Quia suscipit voluptate eius excepturi. Maiores cupiditate nostrum qui ad.\",\n      \"immutable\" : false,\n      \"minValue\" : 4.2740458378872047E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/124072\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"paramId\" : \"3we1\",\n      \"validationRegex\" : \"3q9221bged5jep0uxegnrbp7nhvav5qrd7w4a4dqjslrvq0cwbsrluxk5xpovp8edrdkcg3la7hv7it92fp840u\"\n    }, {\n      \"allowedValues\" : [ \"ino23qanf1b2pep11j838rrbmyi6pwpuw236uw3xx6viwuf2xcllrgmng2aon8cii9iy71l8ps4feynqf530sj8ebesowxju6u430ig331dt56ir9bu63j2nltdke1fly167x2hi3varde0ppieia0cmva47nb0kgkmvh5w3df\", \"76xu6rit\", \"ew3pqmxg7f4z1u2416yc5r9ku9j4y5wkmrcvptzw3h9hotykjii\", \"wvjgi0y1jzsdazv78lqp58pcp8p49r9ubu2sy8wljy23pfxpjzi98fcmig17ruwdxb50c9i25cdggl3p3cfp3qt7zo7vfoe0symlc2782ggs98movu\" ],\n      \"displayName\" : \"Emerson Crona\",\n      \"maxValue\" : 9.242188723164906E307,\n      \"deprecated\" : false,\n      \"description\" : \"Reprehenderit praesentium delectus molestias nihil et mollitia mollitia. Atque ex beatae voluptas numquam distinctio deleniti nostrum. Odio dicta aliquid dolorem.\",\n      \"type\" : \"STRING\",\n      \"repeated\" : true,\n      \"required\" : false,\n      \"validationDescription\" : \"Veritatis placeat neque at fuga. Laboriosam et quia consequatur eos. Odio ut ipsum eos. Culpa ipsa nihil facilis ex id eum. Molestiae dolore praesentium.\",\n      \"immutable\" : true,\n      \"minValue\" : 1.239731900374907E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/957279\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { } ],\n      \"paramId\" : \"zk4l\",\n      \"validationRegex\" : \"7f1dgioldehbx2gt3oxyos1beaxlj5hc6qlgt0kcuxe3ke0ofakvch2nz4ojq49no3sg34c04f4tkmayjrs72tjhajklp4q30ejpy2ayp0hpj0u9ogi2jyrf7qvbhpvc360vryt92jqe0td7y44rk7b8ti31ok8kt7gdpsu9uwepzu7cd8zcwnutl\"\n    }, {\n      \"allowedValues\" : [ \"l1ie7ilohm8zr5fkc\", \"5oizmv3djnyki7d1duqsyur2vmszphfzuywdxjyhaq17zwawby416vdxiwuw9vc63hk2ramfhzztb8s8fizraplt36hka25kfq3\", \"npjisdfw0dqyfgb4tndj5yfw9prqgplofptma3mk40hbe1x78lww1cbfktxy58qqvy7dhy50naaaind78ea5b93tqu6u9mi79xe63ephv6lofv7dufbmbwpe5jjro0b739h4dleasds\", \"52csc84c1muf10u5ao6myfnut2b4ekc8ql0cqe\", \"hia2qwhydp1xerrsq2t7lm9i0yslhedpay7wvuher6u27b2snhg5thsikmobr7sz4ckkoq\", \"2mdxfrw0zo599b6oz4gv1yffteqztxmm0lblqwgmimjnes1ytuhvehkq2d4oore4cvzdd7b2hjqj30zh5cd54fiagqskluwgg7x2va5iwwblxupbxjyyophjks4og07meq1ctu2pjkssjtbir67utdotboabzqx7wbke7rpvy48c2r1duytc00t03wle3\" ],\n      \"displayName\" : \"Marina Brown\",\n      \"maxValue\" : 5.251357559944714E306,\n      \"deprecated\" : false,\n      \"description\" : \"Id quae nemo sint. Dolor perspiciatis neque quas aut ad. Enim iure ea excepturi officia aut et blanditiis.\",\n      \"type\" : \"INTEGER\",\n      \"repeated\" : true,\n      \"required\" : true,\n      \"validationDescription\" : \"Assumenda nam soluta inventore quibusdam. Unde incidunt iusto quis natus doloribus explicabo reprehenderit. Consectetur deleniti tempore et animi voluptate commodi. Aut accusamus est sunt. Ut debitis \",\n      \"immutable\" : true,\n      \"minValue\" : 6.021342110322158E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/338752\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { } ],\n      \"paramId\" : \"yfv3\",\n      \"validationRegex\" : \"h9j09hjdomnv4sxri0ykcm2uzvr0a5onljxnxc138zphdpo078p2vgg7uktc07skul6xh553zl5bx9zf4p067qzj9wxqzuejsex0oxo24vuf8civl78g\"\n    }, {\n      \"allowedValues\" : [ \"ui78p7vo8649wbsdo871o1qx4x74q6fex7x2z1dv2b1q7oz4ns0y7ctfgilhd8f7xke7g9a3m2qoqwkjejdg1xj2h3xwfymavtlw2ihggatvgtjg4oelsenwispf8wxhvftgoffsh4nmq5z2m0\", \"smkkewvyuzcfxlqx5x\", \"yysmq6y0ibjruqvcvxqhta1qeg8flfkupdelhh0t9wee37tr7k2qgy39904kljnn0vht6n1z5x8q66gj5rl284u7bj09llfsqpxl1yz6\", \"uvytfzpovfgk0x6ni9nemja6b0\", \"jkah6lz9encz2vrw568qtj3nrzz2jfllnllbgaysu7trm37c2inrsood81ljgsosialwpvm3p0c3lzpacsaco1tay2w52vnq43znt1lqkqrpon3u3s96tu6iju3kzsdtgbbrkme37sw20tosaavfrssoo\", \"ctq4rk2zb2ygjb270w9oe0dc2wtl0pxho9uj82n2helandmtcx0r99gu08npms1spnh1um9q4jugtdat2mmqjszz919fs7qu10kndfqk9euf8f8jjzoy4ve32cbyqtzqvvmnwxww2qo52ka05ytfjy1qy1yscketcise08oh1d\", \"3mw7a1trdwhf1ucpc8a88n1fsvzuyiim1ttjzcs5fa91uz7db\" ],\n      \"displayName\" : \"Ruthanne Stamm\",\n      \"maxValue\" : 1.5473668016468424E308,\n      \"deprecated\" : true,\n      \"description\" : \"Accusantium cum assumenda excepturi. Voluptatem quaerat ut voluptate aut. Repellat distinctio rerum qui nulla magnam excepturi officia. Esse qui quia.\",\n      \"type\" : \"DOUBLE\",\n      \"repeated\" : false,\n      \"required\" : true,\n      \"validationDescription\" : \"Sunt vitae libero aperiam quia est quae. Magni eius fugit laboriosam distinctio quia. Voluptatem in sed eaque id quaerat alias assumenda. Cum repudiandae consectetur. Ut libero ipsum facilis nam persp\",\n      \"immutable\" : false,\n      \"minValue\" : 1.087026354869644E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/085778\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"paramId\" : \"k19q\",\n      \"validationRegex\" : \"09p743izx0n773bpzi3oyj02n6iy90j5jxmst1o0khjuda6vc7f74k63bnf9n65b37fn9w4pmgb9dcg50zlngjxwnt3c94820j8p6dr1idzjmsd7ry9km3gn42umurgwzf89aobc0h9hzfx9bhr\"\n    } ],\n    \"updateDeadlineSeconds\" : 1771612773\n  }, {\n    \"clientId\" : \"9w3d\",\n    \"minimumScheduleInterval\" : \"lzfa32i6nej3mfywzeebnc2e2loagdjjpts0wqtief9xngl7qq9i977dh7svftwj1wh00x9p2c1e9f6bai9l10za620gd8mwv5yi\",\n    \"defaultSchedule\" : \"5hiuj51465453c3om3655v1jp6hnbvddafperc3l588v5jli7yjdn8ly6b2jkgbnnx2w70ws20mxzzkwavczyjt78nmgbxbu6ajyy3dv9dh701vycmz5is7dcdab5oy9c3qi8ryahu3pe3m1phdcrjj99m6\",\n    \"displayName\" : \"Frederic Watsica\",\n    \"description\" : \"Aliquid deleniti odit. At inventore harum officiis. Dolore autem est in laudantium. Nemo tempora laudantium expedita amet asperiores velit in.\",\n    \"helpUrl\" : \"https://web.example.mocklab.io/112004\",\n    \"dataRefreshType\" : \"CUSTOM_SLIDING_WINDOW\",\n    \"dataSourceId\" : \"39z9\",\n    \"manualRunsDisabled\" : true,\n    \"supportsCustomSchedule\" : false,\n    \"name\" : \"Ruben Gleichner\",\n    \"supportsMultipleTransfers\" : true,\n    \"authorizationType\" : \"FIRST_PARTY_OAUTH\",\n    \"transferType\" : \"STREAMING\",\n    \"defaultDataRefreshWindowDays\" : 791650147,\n    \"scopes\" : [ \"xihemp8dccjudzwc4zim8y69ajr2euxadu6ibtlxkxppprmm4evdcbfpccyxvoh13sjrfwk9pau5dcum0lw75hlj6arnro7np6yfyr46tqbyxd50yq7bwpiwsq2vt7pd0i9rxpfsfj9sy2v3jnjhguazionnxc3ech7wzuvtufbz\", \"5yovdoavhg9578nmnjx\", \"olhxt481xeavet8xeovj9r88m18k0rlmv53mazig8mahmp6y4ndzw20gyuioz9x3nfjmdv7nxd7iyqkxvukzkc906x2gf2jl1c68eog797cj\" ],\n    \"parameters\" : [ {\n      \"allowedValues\" : [ \"z7t3t9wm127\", \"ncwg2vc8da6xx\", \"f21v0f00u9bt0iu1ov8fcx56rl8g3hy12bfxvfckrx7r2dg70rgat34apxv24n5gejy5bof076nu4q1slweoskvl086k1oejs3wu6e4n64dg44y36ouwhbjno9w29co40737bjon8ys8e3v5qx8o5c8tc6goxnkgibaundnw4x0lpgzdfkhvsj2bqxl\", \"oei1qmwuk56ql07m80o3tun92gx6lirgnt531zq2v18yffn2\" ],\n      \"displayName\" : \"Polly Crooks\",\n      \"maxValue\" : 1.4606922236939763E308,\n      \"deprecated\" : false,\n      \"description\" : \"Aliquid voluptas suscipit temporibus. Et numquam esse alias. Nihil blanditiis nisi doloribus eius aut. Corrupti qui cumque sunt rem ut temporibus recusandae.\",\n      \"type\" : \"DOUBLE\",\n      \"repeated\" : true,\n      \"required\" : true,\n      \"validationDescription\" : \"Veniam ut perferendis tenetur ea. Harum vitae quod cumque voluptatem nesciunt. Adipisci provident commodi sint. Vel ut optio consequatur. Minima ut ipsum.\",\n      \"immutable\" : true,\n      \"minValue\" : 1.5517698027393386E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/070397\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { } ],\n      \"paramId\" : \"327y\",\n      \"validationRegex\" : \"p7aeg6yczuzh7kminycux52a3x8hss9ldj2l0ycocfiz53snzhxiu03g7csp2k7293a6tsz0pxx34x79cykpcejgfhr73pcfh981bkpx4i060qfxs8o0q1suu00hjynzh47t5r7twd0w\"\n    }, {\n      \"allowedValues\" : [ \"2z3kdtd4r5f8n0f5yh3m0wru\", \"vsv1cl7exq4kjpf1j7igyfuzw5cogwzf4al2rrd8fadg2fgtwocvofahkwzivhgs3y2nnbg7nd6hzdi36g6oowyyyc3k3vpocb6u92pv4yq0yh4nkw9lgp1ruo2uu2jhdahlcuvd0q7x3o32jz1ond3moty3aveq0v79\" ],\n      \"displayName\" : \"Armand Brakus\",\n      \"maxValue\" : 5.867922491859825E307,\n      \"deprecated\" : false,\n      \"description\" : \"Molestias optio nobis qui perspiciatis. Numquam provident corporis ex eos qui. Odit quisquam a.\",\n      \"type\" : \"PLUS_PAGE\",\n      \"repeated\" : true,\n      \"required\" : true,\n      \"validationDescription\" : \"Et enim pariatur optio ex ex. Veniam ex quod. Perspiciatis accusantium suscipit mollitia cum quia rerum. Aliquid iusto tenetur.\",\n      \"immutable\" : false,\n      \"minValue\" : 1.5807345700343478E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/197745\",\n      \"recurse\" : true,\n      \"fields\" : [ { }, { } ],\n      \"paramId\" : \"g83q\",\n      \"validationRegex\" : \"6isfev4vhvcjnkl1yp89vjb4xq23jeyymhml6yu1e19kcyj4vkz3obc941iefnwjqo8bv47zr31v28sjng53q4gstcatv6yd2fkuxh0zp32vl9g7sjfinu83xi6cmfsqdn8uys7jkfxllq\"\n    }, {\n      \"allowedValues\" : [ \"wk857jsqkgm1saqxjpobwj2uayyqbav8l4bpnevvy8zorwwid2wgvu6gsej3e1h926elzb19dt1c59fpe2b4je2zlec3k15ibhhlkmlsdpdlydxm90smsgg6pagyrhmnxd1atug\", \"tc1m8mapf7k7u1dlovmxrtxnq1ewqomc0kpsj2v7n9gq5dawpz47ric9nzdftu8w0wt3qpfud7gvdiydvc8o2pxusb82zbr3zc23dpp6abyabl688bm4jb2r2q1yp0tsnz2od6ydm3pme9qyxg2vibfjpse1ekvwiqjm56105\", \"ytb1ktmw65nh7f7d5mimnwfiwhkunrb8o9z0wf7wwseblffkssf8jfmxyirz58kitr26dvl\", \"9rc4cm8tcphj79ajmx5vawii7fxqde9pv2965hwo1amuu0tl66erjdak5ipae02kil48y2x3hw55ymip65vkli0tw8laa2j2j5wqjbua8r41stgihfdf2l9s3u7w2w83iiffhiz255de3qw0cfy3a805zfhsdu8363cgv\", \"qarsho9i80gwk4r58mqt2i49vd25qvwr95fhvgzd26so1ik0mwoob3piimp5j671ya87fqcanyd8crr3ogdbziwxvahydhmtn2e4w9da1k9nylmt82lu25wzaemg8gejy\", \"iz8onw5cyxcqsac0arybe47n47spkexcvc71wnr76gxeoixowaeodph03o5xdsxural5yyvz2s2j34qx7zz9bwvvthk0bnirafjt6iwyeakck4x73vig91lwcg10tsg35\" ],\n      \"displayName\" : \"Maris Ernser I\",\n      \"maxValue\" : 1.2673943520508327E308,\n      \"deprecated\" : true,\n      \"description\" : \"Officia non ab. Molestiae alias odit qui sequi fuga eveniet dolorem. Est expedita placeat vero odit voluptatum. Impedit itaque ut optio aut.\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"repeated\" : false,\n      \"required\" : false,\n      \"validationDescription\" : \"Incidunt eligendi laborum quidem. Molestiae sunt enim similique qui. Aut tempore totam doloribus. Minima labore sunt hic enim ea.\",\n      \"immutable\" : false,\n      \"minValue\" : 1.4911976849339052E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/114756\",\n      \"recurse\" : true,\n      \"fields\" : [ { } ],\n      \"paramId\" : \"31zh\",\n      \"validationRegex\" : \"z0pju7dgqetgtfodlf9a9evxrnu17jo4bv2ill2vvf7jqcb9jx0xjg5idjp9qf0f0ddfg7n3qojtwdcjwjvk266q\"\n    }, {\n      \"allowedValues\" : [ \"3893vpxb8x26jbscjblv800satqcnbzc2vwr9abhyg4eqv0tjpvz4h4cb14v2s0b7m9nzspo765uzhlrqz5gqtaio0gtxwbaqmkeq70a2w9n4xgvdi6muc6ie3ha\", \"zidz9rsmhi8iw6raivzkc9elaan4tjhvdc1j9hj24u2aw9d4mrpqkd4unnohiomxc4zce2h54ob4mxmy974jsoa9szqiec8uccn69il9fk3dfyquuaqkqbtapkp40agtg69ad2koj2q8mbiirghocx5datyy1zu3upxb62h3\", \"j8kkk1e9uy53ei2721e4pw6cpldlciam894p21spu5mhairnwgvvi1sktm9p27ha2a3eoiah1t1fffq0ndwfy6wlzv13bdktiofri7892n3udbimttp972axlfakkbmnzz6786z6y2oml4vxrj2dj\", \"r2qoe59tb0tj5i1xs8m9x7uq6mqc1gzrx7rtwkp6h99e79ziz\", \"yeyez665dkr83h841nromdxda5xk31env1vkskgvk9rr6b21qu5uqhlehl654mee5hezn2y1p9utmlkjudyn53lugpw756mwjzfnfkyj3bsotkt61ygff6pn7a8an\", \"70spn8d8me88jspd3q8bs85d66nd2ntw4h3c39l6cffqfgh60wq7q8p36sn5b78bt70do9iv3exo2gf7awcb4wv0qjkahoq4ekcugyvvv5aq1jv\" ],\n      \"displayName\" : \"Hermine Batz\",\n      \"maxValue\" : 5.382491747691619E307,\n      \"deprecated\" : true,\n      \"description\" : \"Delectus suscipit sint molestiae non. Id necessitatibus dolorum. Dicta dolor ipsum consequatur aliquid non. Quae dolores voluptates explicabo soluta officia eveniet.\",\n      \"type\" : \"PLUS_PAGE\",\n      \"repeated\" : false,\n      \"required\" : false,\n      \"validationDescription\" : \"Voluptates voluptatem ea ipsam enim magni asperiores. Est quidem nostrum consectetur dolores. Sed vero cumque aut tempora nihil enim magnam. Et id quis distinctio qui atque enim molestias.\",\n      \"immutable\" : false,\n      \"minValue\" : 3.3924096711491223E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/231593\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"paramId\" : \"a8r8\",\n      \"validationRegex\" : \"suv3rc8yj1o1kpoz88dag5je4dbg5ibr1vbdp\"\n    }, {\n      \"allowedValues\" : [ \"gwlanou2iwff7yg3vmsqmoxylx8cto4n1udz2kyj1d8879a3gm5ehl203z7uu6jdsw1qb00m51q05fe1lblmg319ut9ar25s7ayxxi9uvphgnhk\", \"f7k188futalmmmtb5jh5gc3zzw8v7x6it5mievmzjbt62y45flmc9jscxe73qs5jgb2wrcb9300f8lsuoo3dmjbhsj8t5r1l4ppa13cq1ykh6vjvghdwvzjv6ar7d8ohxumnt\", \"mkt0nilqq02bj7y8ke7kqco7a4btxjfs9g186pfsefkeyovh983z6sgdidcbvy549hqn8f9yzglw4hyesyv3y4acwnvbzqm890228ntgpc6n25nol738zpr1aey1gzr9gxgfm\", \"icn8qa0mkovqmrenjqq91svbhsz3gi64tz1tikatujnvovtg5y5z8qttfaczqkvyss9u6isrk5i0b4zthuj0sfkcu52kzp37hk4o8qlouuxk22ce5nm8aaj13ayz6agyeugrzm4pojrl2jagj06zypnv3wbjf0f3tnb7hoed1ckommrpt5\" ],\n      \"displayName\" : \"Lesa Schowalter\",\n      \"maxValue\" : 5.090111999217208E307,\n      \"deprecated\" : true,\n      \"description\" : \"Iusto magni sit accusantium sit distinctio rem ut. Ut unde illo quis corrupti maiores quia. Temporibus ut ratione voluptatem exercitationem aut perferendis. Id in in. Architecto quibusdam quia.\",\n      \"type\" : \"BOOLEAN\",\n      \"repeated\" : false,\n      \"required\" : true,\n      \"validationDescription\" : \"Dolores corporis et sed sed aut. Nulla excepturi quo beatae. Hic a odio ea. Sapiente quae aut.\",\n      \"immutable\" : false,\n      \"minValue\" : 1.0649336833257496E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/784813\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { } ],\n      \"paramId\" : \"nh5u\",\n      \"validationRegex\" : \"2ppl7qubzy54gx5pi281eiflgqudth8zu80h4bix11br5p3fi9xyyzixqb0kdjm9v7tfgqh21dpv\"\n    }, {\n      \"allowedValues\" : [ \"2qltptlh4mnfpn3kxjq2kdfjvqb166evxdpksnxn4322iyt3n2gwiqjeweor6bcd6a6rtgtrtzimaighranlatxxy28n\", \"o5blz8knyrpc6i2qr9em7ollmfueh109\" ],\n      \"displayName\" : \"Millard Lemke\",\n      \"maxValue\" : 7.416234046004553E307,\n      \"deprecated\" : true,\n      \"description\" : \"Labore magni occaecati accusantium laudantium esse eius quis. Cum et accusamus optio doloremque. Adipisci aut magni.\",\n      \"type\" : \"TYPE_UNSPECIFIED\",\n      \"repeated\" : true,\n      \"required\" : true,\n      \"validationDescription\" : \"Rerum error nulla tempora veniam quaerat. Fuga laudantium praesentium vel exercitationem omnis qui rem. Rem est eius temporibus saepe. Sed adipisci quaerat dolores modi.\",\n      \"immutable\" : true,\n      \"minValue\" : 1.2706894542880421E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/321522\",\n      \"recurse\" : true,\n      \"fields\" : [ { }, { }, { }, { }, { } ],\n      \"paramId\" : \"oz11\",\n      \"validationRegex\" : \"qfzzr087t9a50r64qt4kczrjfr84qubwklciu7tyyntdjfmnp589lup5ytaxntkexbtqivht8ekr4ia3e6ixp0um4q3vg5givxhknh6cvir9ygb0sdp9fvcthdmp9u01clcg4tmbnpntu55fpph90hbe9yvsdftcx\"\n    } ],\n    \"updateDeadlineSeconds\" : 832414399\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f01e522e-59a6-45e8-9d1f-494786f2d9e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.573528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.dataSources.list",
          "schema" : {
            "description" : "Returns list of supported data sources and their metadata.",
            "properties" : {
              "dataSources" : {
                "description" : "List of supported data sources and their transfer settings.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "fc0d8b64-2070-4cdc-9df9-1a762e583f04",
    "name" : "Enroll data sources in a user project. This allows users to create transfer conf...",
    "request" : {
      "urlPath" : "/v1/Drusilla+Kshlerin:enrollDataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc0d8b64-2070-4cdc-9df9-1a762e583f04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.568091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.enrollDataSources",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "2636b01c-6aaa-4a97-a781-73564576985a",
    "name" : "Returns true if valid credentials exist for the given data source and requesting...",
    "request" : {
      "urlPath" : "/v1/Billy+Mueller:checkValidCreds",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"hasValidCreds\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2636b01c-6aaa-4a97-a781-73564576985a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.568019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
          "schema" : {
            "description" : "A response indicating whether the credentials exist and are valid.",
            "properties" : {
              "hasValidCreds" : {
                "description" : "If set to `true`, the credentials exist and are valid.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "7fd3307e-90f2-4edf-85f8-ab04bb07d88d",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Cayla+Reilly/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"aeddf9ondx95a8e8yahzd6sj4qj98v1sv4tx7okuxru7vwhj3pha80plyijkq8gwoxjtmnwmqx57fu5lkl143o9n64nqtvj0c97p61p2vsjlm4n0ka9kymq81504hdcgbtgmkzhw8vob8f5qst0jwem7ezp5yld0ms2wwhp7qufkxi956tjdbzhais7\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Buck Zboncak\",\n    \"locationId\" : \"bq78\",\n    \"name\" : \"Rosalyn O'Hara\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Gina Denesik\",\n    \"locationId\" : \"5a07\",\n    \"name\" : \"Merry Ortiz DDS\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ilana Dach\",\n    \"locationId\" : \"461c\",\n    \"name\" : \"Kami Turcotte\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Kareem Watsica\",\n    \"locationId\" : \"j8x6\",\n    \"name\" : \"Garry Roberts\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Roberta Tremblay\",\n    \"locationId\" : \"6bft\",\n    \"name\" : \"Akiko Kautzer\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fd3307e-90f2-4edf-85f8-ab04bb07d88d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.567922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3bb3090c-5eed-4c42-a9e6-02f95ca069b6",
    "name" : "Updates a data transfer configuration. All fields must be set, even if they are ...",
    "request" : {
      "urlPath" : "/v1/Ms.+Alanna+Collier",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"destinationDatasetId\" : \"o1p3\",\n  \"displayName\" : \"Dr. Lia Mohr\",\n  \"scheduleOptions\" : {\n    \"disableAutoScheduling\" : true,\n    \"startTime\" : \"2023-01-03T06:15:06.566394Z\",\n    \"endTime\" : \"2022-07-09T08:32:06.566426Z\"\n  },\n  \"ownerInfo\" : {\n    \"email\" : \"fr56b56yul6h0uctgz8bw7g5xtqo9fsoo35dltdr24h6t75f7sbexk9g92b3ai7l1a9mu8fa3b1600q0n2leitgsognqoqrsuzd5x96\"\n  },\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : false\n  },\n  \"updateTime\" : \"2022-04-28T08:27:06.566485Z\",\n  \"datasetRegion\" : \"6ta8obitj6km9cgr3rr4f0ter8slx4av4gbn08v8ebftsugawqi18ywe67ooh58y8v5zfc8ztifmqwuy5vvg6t5g9n0grd6oyw\",\n  \"params\" : { },\n  \"userId\" : \"45x1\",\n  \"dataRefreshWindowDays\" : 1607698618,\n  \"schedule\" : \"9mw9nc9qwl7owyr9tsegzj25164uwxaoo1rr85e\",\n  \"dataSourceId\" : \"4jw6\",\n  \"nextRunTime\" : \"2022-11-07T05:48:06.566699Z\",\n  \"name\" : \"Violet Mueller IV\",\n  \"disabled\" : false,\n  \"state\" : \"SUCCEEDED\",\n  \"notificationPubsubTopic\" : \"pifi3y07tv18zf6dop6keadk819no9cv7zwx0yam50xg6afhpb2nsex81yytbzsfxfetg7y5cd8pwsjemei5ytd72sbbc1oxersm5q3n56g8obljbek60g4ukxw5xs5nrpvsxtt5pnm6get23fauqm6wjnorcbd3rez723kzb066mqf4b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bb3090c-5eed-4c42-a9e6-02f95ca069b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.567007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.patch",
          "schema" : {
            "description" : "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
            "properties" : {
              "dataRefreshWindowDays" : {
                "description" : "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                "format" : "int32",
                "type" : "integer"
              },
              "dataSourceId" : {
                "description" : "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
                "type" : "string"
              },
              "datasetRegion" : {
                "description" : "Output only. Region in which BigQuery dataset is located.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "The BigQuery target dataset id.",
                "type" : "string"
              },
              "disabled" : {
                "description" : "Is this config disabled. When set to true, no runs are scheduled for a given transfer.",
                "type" : "boolean"
              },
              "displayName" : {
                "description" : "User specified display name for the data transfer.",
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "name" : {
                "description" : "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                "type" : "string"
              },
              "nextRunTime" : {
                "description" : "Output only. Next time when data transfer will run.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "type" : "string"
              },
              "ownerInfo" : {
                "$ref" : "#/components/schemas/UserInfo"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "type" : "object"
              },
              "schedule" : {
                "description" : "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
                "type" : "string"
              },
              "scheduleOptions" : {
                "$ref" : "#/components/schemas/ScheduleOptions"
              },
              "state" : {
                "description" : "Output only. State of the most recently updated transfer run.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Data transfer modification time. Ignored by server on input.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "837a6d7e-4b57-49a2-9996-335135216e98",
    "name" : "Returns information about the particular transfer run.",
    "request" : {
      "urlPath" : "/v1/Damian+Stehr",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scheduleTime\" : \"2022-12-17T06:05:06.565408Z\",\n  \"destinationDatasetId\" : \"r2js\",\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : false\n  },\n  \"updateTime\" : \"2022-05-28T06:52:06.56555Z\",\n  \"params\" : { },\n  \"userId\" : \"j5w8\",\n  \"schedule\" : \"3tx3q696e15qg4wkid79em9m58y\",\n  \"dataSourceId\" : \"5vr4\",\n  \"name\" : \"Alton Heller\",\n  \"errorStatus\" : {\n    \"code\" : 1297018125,\n    \"details\" : [ { } ],\n    \"message\" : \"Earum rerum ut non. Sit doloremque doloribus saepe aut sunt necessitatibus. Beatae nobis porro consectetur quidem et.\"\n  },\n  \"startTime\" : \"2022-12-23T07:38:06.565868Z\",\n  \"endTime\" : \"2022-06-20T07:24:06.565895Z\",\n  \"runTime\" : \"2022-04-20T06:18:06.565923Z\",\n  \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n  \"notificationPubsubTopic\" : \"vznbneo1hdhidpvbyawq6et4p1d0wolft8jc5ehpzi3qhsag57cqhlt7w0n518yzipogeol5o7704qzol2jmpo5ecd2j3dlv6636i12e5xam7sk596jfmjlympqto01e4z0vx96wpw4rzlc8mpysk86eqkb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "837a6d7e-4b57-49a2-9996-335135216e98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.566214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.get",
          "schema" : {
            "description" : "Represents a data transfer run.",
            "properties" : {
              "dataSourceId" : {
                "description" : "Output only. Data source id.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "Output only. The BigQuery target dataset id.",
                "readOnly" : true,
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "endTime" : {
                "description" : "Output only. Time when transfer run ended. Parameter ignored by server for input requests.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "errorStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "name" : {
                "description" : "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run.",
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "readOnly" : true,
                "type" : "string"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "readOnly" : true,
                "type" : "object"
              },
              "runTime" : {
                "description" : "For batch transfer runs, specifies the date and time of the data should be ingested.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "schedule" : {
                "description" : "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this.",
                "readOnly" : true,
                "type" : "string"
              },
              "scheduleTime" : {
                "description" : "Minimum time after which a transfer run can be started.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Output only. Time when transfer run was started. Parameter ignored by server for input requests.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Data transfer run state. Ignored for input requests.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last time the data transfer run state was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "9d4a7b35-aace-4505-9cec-d943a9589d3e",
    "name" : "Deletes the specified transfer run.",
    "request" : {
      "urlPath" : "/v1/Kenia+Schuster",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d4a7b35-aace-4505-9cec-d943a9589d3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:06.565331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  } ]
}