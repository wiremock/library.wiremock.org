{
  "mappings" : [ {
    "id" : "cc4765ad-5b4c-4871-9c02-08a83d31c3f2",
    "name" : "Regenerates the primary or secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/9309/resourceGroups/Miss+Fe+Kertzmann/providers/Microsoft.Relay/namespaces/Geraldo+Langosh/wcfRelays/Dario+Daniel/authorizationRules/Divina+Konopelski/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p6g4fu97jmw2wszwp3hrlvxj9xr6g0x5qcjdknfgn6gf3m2nw8obqwytqt2jly1evx6exd0g1vv7fxxepeplnbs8ejl14vspd5fxcipn88vwmddaq62ra0og64f01j2qgltnf8xhy1x02m5yojq9d3emuv6egapmk97bwhdrorsg5waeiakhys4thpcxhs"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"cnfafgazckonr9pce87dg25yvfrsumgdgpo5fhhd1w8u4r45ubojizrsinaxqd13\",\n  \"keyName\" : \"Miss Madison Lowe\",\n  \"primaryConnectionString\" : \"57a0as3ltje4uxt6sei4brmcl2griylm1ojlrburllriq29yl2m9lzumqdgrwv228zr64ak8kmzgn0kbra3kcqf24plup04gypp0j61kv22hg1v46bc6tgdohn3lo1xpr9env74zbat7aru12cxvsl76c6vzel3r3ohbisa\",\n  \"secondaryConnectionString\" : \"3qynvipsrq0qtbqqu5vwvwrix9cik6aj4az17ujfv55nfz0xpjng83gmkp5f6rve67\",\n  \"primaryKey\" : \"tssyrn0mi28v0j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc4765ad-5b4c-4871-9c02-08a83d31c3f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.426028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e311845f-a781-4510-b16d-acf56bb5ff6c",
    "name" : "Primary and secondary connection strings to the WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/8d3a/resourceGroups/Jude+Kshlerin+Sr./providers/Microsoft.Relay/namespaces/Harris+Simonis+I/wcfRelays/Darrel+Jaskolski+DDS/authorizationRules/Claude+Lockman/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "m3lh2trpu6fdhy11v0mvalrqf2ra8ysgbruacn0qwukj06lmasv7r"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"xgx7yhzp6ev286kqedc0i4bdug4jou0r40ct0lpl3frk5m3uzqj6ims0n3qlrn5a47bkolvo44ccaae82srofw6320vxyf3mrhpeuwi92l2ca\",\n  \"keyName\" : \"Noe Ullrich\",\n  \"primaryConnectionString\" : \"mc1ohppp8i9fk5nqd187gyaji47lg90k1aw3f2d29fzcjilrzic5e56w5z8ga21q0r39y9r5721vgg64vzfnxu7eas0lcdr1eee0w4gy5qk2xpqvld8xzkwsvzkicdmec7yhw2j6cgd3g6ei08a6unqadfm4pw\",\n  \"secondaryConnectionString\" : \"lrsfqwlbx3ev3y9n3k0pqldl70m4pmxz9i3ckzp9tqct990f4e0wngapftenqz207c8fpyksft6pyuoh0s8kldco5qs7skddm459cyi45j8imcstv7ig69sujhj0j5713j5thjl4tsah588jbal9k3pqqh1j8dc2ejnrw8\",\n  \"primaryKey\" : \"x5ub7mfvfvcr8fx9paxvt6roapi82e4x660y53osptecztjh5jfzo4c13i90686o6hqch8yyiell8xq7gpxsr9yt1stpren2amisouisea4sdqxf07koy96v4vnk9jqt525\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e311845f-a781-4510-b16d-acf56bb5ff6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.425625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "be5de471-f194-4232-a58a-2c37dcd58199",
    "name" : "Deletes a WCF relay authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/7p84/resourceGroups/Donnette+Satterfield/providers/Microsoft.Relay/namespaces/Curtis+Waters/wcfRelays/Raul+Ullrich/authorizationRules/Luther+Bernhard",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4xcblmt7ge1zhgofcdd3hyg4toe2dplx2btsa133rzt0ef3tar50elt3txnl1v13wlhw8psaqspimrt7l2mcrvi8bhbuext7l7ps4uqq8b1o8cda1kdw73a7k82qjb3aphgiqjtd7r3edz9uectmbay4y2asdwt8g4b4dxvh7oksprbb"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "be5de471-f194-4232-a58a-2c37dcd58199",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.425163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "63d0cbce-dac7-4d59-869b-fe061f03f0fc",
    "name" : "Deletes a WCF relay authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/o7oo/resourceGroups/Nathanael+Walker/providers/Microsoft.Relay/namespaces/Breann+Wilderman/wcfRelays/Dr.+Melony+Hessel/authorizationRules/Vito+O%27Kon",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cbtmt55a8z4sfxt14fxl5xjxdv5wremuogzjzmh4g5ku3zusxo0i592o78f0le3lw2o9p80ylitpkesrllo90s"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "63d0cbce-dac7-4d59-869b-fe061f03f0fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.424918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "783733a8-ec12-4fab-ad45-7a8969f40f6a",
    "name" : "Creates or updates an authorization rule for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/2ahw/resourceGroups/Cythia+Hermiston/providers/Microsoft.Relay/namespaces/Nancy+Reinger/wcfRelays/Son+Jenkins+II/authorizationRules/Juliet+Brakus",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ucfucxh4p1zarfmoye5jquz50b19o79nznflq79btbu1an8wapipr296wjvqu0e8rkr29zv8680l7xxbkt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Calandra Jenkins\",\n  \"id\" : \"653d\",\n  \"type\" : \"vlx5jm8e118iaojs67aawvmhaseom6xiipl2uwaowe57ec5tgez7thmngp5kgd2xhs1x2nejatw6baxwc5v141xr8r40xii5qc9ullmmd3cpx5vhs8le9f3iru7i\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Send\", \"Manage\", \"Manage\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "783733a8-ec12-4fab-ad45-7a8969f40f6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.424653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "4442911f-c553-45d9-90ae-35815d794be1",
    "name" : "Get authorizationRule for a WCF relay by name.",
    "request" : {
      "urlPath" : "/subscriptions/gmn1/resourceGroups/Ellan+Gibson/providers/Microsoft.Relay/namespaces/Tangela+Gleason/wcfRelays/Buffy+Bergnaum+Sr./authorizationRules/Miss+Gerry+Kirlin",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mm54v57x2w1h4gkxr2xq6jonfvoseb7fb9zahv7jzrlg8digvld8w1or1zcz5wjl7g108ewnslydnxatbfiw5nvi94ijsvo62uufsw3b812w30o1tpzf5xz1n16qbf5tvlhvlwc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Giovanni Krajcik\",\n  \"id\" : \"t117\",\n  \"type\" : \"31quv18zd09b0usmceyq1mfbgdzhsdhtba1944lrttuelriu8pyif0j7jiej4ngbqd4qw64oxgc03tx74gp9jt12h4odilc9llc1153e1ub9yky2a7\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Listen\", \"Manage\", \"Send\", \"Listen\", \"Send\", \"Send\", \"Manage\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4442911f-c553-45d9-90ae-35815d794be1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.424218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_GetAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "df81be1b-ad2b-45ce-b730-87bcb2c6435e",
    "name" : "Authorization rules for a WCF relay.",
    "request" : {
      "urlPath" : "/subscriptions/n7eo/resourceGroups/Lavern+Ziemann/providers/Microsoft.Relay/namespaces/Iola+Paucek/wcfRelays/Ryan+Kreiger/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w0c4kehcnxg29yjm52xa9wfkg12ke5epxi2fx7fzv7cib82n3zgl5y3h1ao6cygblc9i9babzjp4qy9onzz1v12nhh24eloz2rwpam7rvjtq7nuh9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Shirleen Rolfson I\",\n    \"id\" : \"jt3u\",\n    \"type\" : \"ukoaf5mamoy9inl7semixzv25iht2hoq\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Listen\", \"Listen\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"e5onrznihpm6h4na40wu5gc43eudc5v5ivs17qkjaxpoeuaujotn4pryqnplcf2p4iz6z8izlziaa6t9q7hq0regn09nipxp4easkb7t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df81be1b-ad2b-45ce-b730-87bcb2c6435e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.423706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ca1e6115-76b6-4fd5-b946-33ec3b0bf33f",
    "name" : "Deletes a WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/xswg/resourceGroups/Timmy+Corwin/providers/Microsoft.Relay/namespaces/Tyree+Crona/wcfRelays/Helaine+Zieme+DVM",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "val4tx4wvlaj0ll6kcyelyc5vpfj7znrrd35ey2onzmk3zs6xq7dus8uj34wni6xp4kpql53zq4bkoo0ljtvmozhrslt9icytk78i1wz9ype57d6pnqu4"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ca1e6115-76b6-4fd5-b946-33ec3b0bf33f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.423265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d0f52141-2e86-4bd8-99ea-d14df9ce43d1",
    "name" : "Deletes a WCF relay. - 200",
    "request" : {
      "urlPath" : "/subscriptions/fl14/resourceGroups/Miss+Sona+Haley/providers/Microsoft.Relay/namespaces/Tomas+Bauch/wcfRelays/Tracey+Cormier",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6nkdcnmq3t1cmttn1jo4brevmm4q175249wosmg9skr0xv0ll5cwm2tz1kyh3a7g8kxfn929qxqk6maeh9n54tyfsxwj4odjcrybe6o227n0i4a8fffz2djanpcibkzu2qnvj2sgt6df8qjglwear6m0ypkvidphx98du90btz0ih02vq47d4opad00xx4ug"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d0f52141-2e86-4bd8-99ea-d14df9ce43d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.423052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Delete"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "deb564b8-4b56-4943-a66a-437ab0dbfd54",
    "name" : "Creates or updates a WCF relay. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/4838/resourceGroups/Mrs.+Marcos+Considine/providers/Microsoft.Relay/namespaces/Polly+Pollich/wcfRelays/Candance+Witting",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1u4pqbyrdlg82w2cun2vv68ja0y6sv3ib2oce1lpco6r2utgvhfgszjap382jzg6aqi7i3hidgmwbkfrrcjv85uio2ztc893b293qiv6iyw6qdo306y9ps87"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"James Ziemann\",\n  \"id\" : \"gqhc\",\n  \"type\" : \"ykbr3rj36xx43p4j5hs7ufxqagmi5uy8qqqce0nby2dx551j9w0xi36iw7zwfnkgajhos6ezwnsyz1wbc8jc3kp7\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-05-21T16:51:04.422Z\",\n    \"listenerCount\" : 14,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"7rdr2a6ogum6pdjjpsj71c41djlqdnrlzwyfq879y96p6utefmr9y6r55a96o4fmgsew5k878kuz8zsnj28yh5g4gbbqb162805z6q1c88nr8ezc4zagfzqp6az8tv3igzkb2ail9w8yywbr\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2023-04-07T18:18:57.422Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "deb564b8-4b56-4943-a66a-437ab0dbfd54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.422808Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "7292cbba-822a-4654-ae8a-152bed7cfb3b",
    "name" : "Returns the description for the specified WCF relay. - 204",
    "request" : {
      "urlPath" : "/subscriptions/dx6w/resourceGroups/Wayne+Trantow/providers/Microsoft.Relay/namespaces/Sherri+Price/wcfRelays/Miss+Yvette+Klocko",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "x2ptdpvofhyq4wq987d2ofewd8lobpv0p04z1a5ccw13c3g46u6dxy39puvgxpeemt58cdbhzm8uws3uwt9xawiopd81osqs9nej5cwf5075ce79ddhdgtqe6d2f0ia2ykapgo4qu4e86"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7292cbba-822a-4654-ae8a-152bed7cfb3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.422312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "5812d926-a6a8-4dc0-8bba-d375133a105e",
    "name" : "Returns the description for the specified WCF relay. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/6vaj/resourceGroups/Odell+Weissnat/providers/Microsoft.Relay/namespaces/Gus+Armstrong/wcfRelays/Odilia+Kassulke",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "aqcoz00ouldv40wcfnqrjae20s3whqp8bm7ysxqhstoli7fkkozw4vjnjg1wrggqeqabf80jd39fyx45xg2elmr36siljo0o9jeb7v22bub8hwjtkbjkpmqvofm8jmryiot14dy"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Latoyia Bergnaum\",\n  \"id\" : \"x1qd\",\n  \"type\" : \"2l5wy9o0691b4mlbhuv3n88d16nm7jkix585kz3ytdbon1xfsyryr4d9dyc27s5h092s4q8ycy589twu5ow0d6qdpp3mk5ak4y7c3x5wqweevn9\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-11-28T05:07:14.421Z\",\n    \"listenerCount\" : 23,\n    \"isDynamic\" : true,\n    \"relayType\" : \"NetTcp\",\n    \"requiresClientAuthorization\" : true,\n    \"userMetadata\" : \"hebqtwp6pve4fvk7n4a2ghtnxwpnmnk2m0rd3f414iin2i1ixku03oeg91tplv91rzdnzkf6lz26t4ztugyumoyjj0xmh9di4g97h38k644uz6ydtkfqxogowv3hef12i4fni95w0ri99nbp10nfh\",\n    \"requiresTransportSecurity\" : true,\n    \"updatedAt\" : \"2024-03-26T01:46:49.421Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5812d926-a6a8-4dc0-8bba-d375133a105e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.422059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the WCF relay was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "isDynamic" : {
                    "type" : "boolean",
                    "description" : "Returns true if the relay is dynamic; otherwise, false.",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "relayType" : {
                    "type" : "string",
                    "description" : "WCF relay type.",
                    "enum" : [ "NetTcp", "Http" ]
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this relay; otherwise, false."
                  },
                  "requiresTransportSecurity" : {
                    "type" : "boolean",
                    "description" : "Returns true if transport security is needed for this relay; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the WCF relay."
              }
            },
            "description" : "Description of the WCF relay resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "c8fecb15-2b40-4fcd-8cb7-38381783d267",
    "name" : "Lists the WCF relays within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/68yj/resourceGroups/Dorcas+Kemmer/providers/Microsoft.Relay/namespaces/Savanna+Bernhard/wcfRelays",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pbum59jq0szynn3ezou3ii20m9cvpbv2pvkfcsycgbprcyqunntjbwz8n1siywc3j162wzijnqkg1nh47hun4qeb9vh68tfg6dzwn70ukcukddh8zkk3iua0zm17fmho7wu7xwezhpwo556urjnogkzdqiri3axpio5is1sdktynrzze"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. Arla Pfeffer\",\n    \"id\" : \"498u\",\n    \"type\" : \"h7dozfbhh5peu3n3f7ncwnl3mty1q710owhml3nsi2pu38t2v7m8mc5\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-19T23:49:52.42Z\",\n      \"listenerCount\" : 6,\n      \"isDynamic\" : true,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"jydmopcrzey35t56w51io2ijt7nebfe59vc7whx4txo9oddulo1\",\n      \"requiresTransportSecurity\" : false,\n      \"updatedAt\" : \"2022-10-14T20:27:25.42Z\"\n    }\n  }, {\n    \"name\" : \"Andreas Windler\",\n    \"id\" : \"5b4a\",\n    \"type\" : \"jq3bstmj47xklskjfo57jufp8uv93e6iu46isej48fe7zudchpurc4ar7c7giv1r0q29evck30wnkt7tvhdu1kzmweg3jcn2ntc9s7u4q47ierh3hsh4j5erewceuek7plzyodvbcp1qbqtlsy792viq95rp3e0zxlds2\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-06-20T11:21:05.421Z\",\n      \"listenerCount\" : 8,\n      \"isDynamic\" : false,\n      \"relayType\" : \"Http\",\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"wgx61mdsnlad87rc6sboombqjvot9g9b8dsgt50ajkk0akjnkdkeet2lmdr22mm9p8z7ytwipd30ipxthnyyneb8cfi2qk2xnhp20lndgymx8p\",\n      \"requiresTransportSecurity\" : true,\n      \"updatedAt\" : \"2023-05-02T03:44:37.421Z\"\n    }\n  } ],\n  \"nextLink\" : \"gdypy5eltp9no27osi95wj7t3ai19v3098dq6m0j44bumutkjyosuubkj3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8fecb15-2b40-4fcd-8cb7-38381783d267",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.421533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WCFRelays_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of WCF relays."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list WCF relay operation.",
                "items" : {
                  "$ref" : "#/components/schemas/WcfRelay"
                }
              }
            },
            "description" : "The response of the list WCF relay operation."
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "285deebc-8414-44f2-92df-0211d59cbc6d",
    "name" : "Regenerates the primary or secondary connection strings to the hybrid connection...",
    "request" : {
      "urlPath" : "/subscriptions/ma2d/resourceGroups/Donnie+Quigley+II/providers/Microsoft.Relay/namespaces/Kiara+Konopelski+DDS/hybridConnections/Nickole+Gleichner/authorizationRules/Dwain+Kreiger/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bqpl3bt7d3fumo7mtuhta2suje7tlenefj63acnhyoe1o73rp47g"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"guf39xqmpt8ky2fszqdnkpqxr7pv1x5an8dn\",\n  \"keyName\" : \"Sixta Weimann\",\n  \"primaryConnectionString\" : \"2q8ew871oxek3bb66o7n8debfamp8p6s9q2hlud07rexnnc0\",\n  \"secondaryConnectionString\" : \"lp3mgwhnjnudmnojkaywaximpa22466gwkik9u8bi2igcmqavgq3rwf7j31a82ix4984e6dufb2i\",\n  \"primaryKey\" : \"3sy8dg8zgmevpu2kt9wsn8xum831q1n8n7lwiwbk0whpy2p0jo7d6ye9sgizie9o0mgykefr6vh4elzpc50ylxupav0aymnwayg7sv4v6kvds5qwswskrpxzlim07nhk1lwfqe1l0ehj1hsyvxmv12qs7xrup2f0hy5tppbnnhqsklna11\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "285deebc-8414-44f2-92df-0211d59cbc6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.420862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "d812895a-52fd-4fac-a116-11e43b74d7db",
    "name" : "Primary and secondary connection strings to the hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/xj3d/resourceGroups/Bev+Bartell/providers/Microsoft.Relay/namespaces/Earlean+Moen+V/hybridConnections/Corazon+Crona/authorizationRules/Palmira+Zemlak/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hlawerz3890mb8fnzr0hhvmbkkrlq528m17k80ix3ygnvmvosrwfbdcawi81k9rmivbaudeim2bz9a9wppthf9g6anv6nlfahhh2ly06w3u3sy88l0lsqjbe9lblcinbldphlq6cl00lxeacenbn0qm4hap9q67f7h4x9tpyh9qb4jxk3wsbk77ayof6n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"ywhj70hlzr5zucnn6kuvqvjd7fv5mlo30trz0bojls3cw27h591qvrntnvtjdzd9tb3tt2x5g8e8cd21pe2tqyyzlcauykjfug3ya170fbi70uraf3af2bkgy2na3wc962zsakn4i0t9mbq\",\n  \"keyName\" : \"Coleman Quitzon\",\n  \"primaryConnectionString\" : \"dpwul9qgq7n2qhupn3vcvsvwzvqbsx0k3gik7jo2cp22v0kjdub6mumj4p5bpdapqsi2sa6kpkne5dn3v7o6zb89qfitpwvxvk702y9e\",\n  \"secondaryConnectionString\" : \"zrtityuccfkqsmp1i5dpbni23czeen55a17tjdyxoctka9kis1v8liul7roa16kv45mwviz3s13bw4c6z6c0ddpk\",\n  \"primaryKey\" : \"o3ql852xiupp33k0if3kqxwajuexpx5aar5ayncf9iceypie074evredgf63pmp9stmyfcasi12qoye03nqds0ryotbzapauho6h1n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d812895a-52fd-4fac-a116-11e43b74d7db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.420443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "b2e01d7e-3c24-4a4b-926f-3c3f0a3f125b",
    "name" : "Deletes a hybrid connection authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/6b14/resourceGroups/Cyril+Tillman/providers/Microsoft.Relay/namespaces/Mr.+Pennie+Lueilwitz/hybridConnections/Loren+Keebler/authorizationRules/Mr.+Cary+Breitenberg",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ev8y6zjynbieloyhrh1ez1zkw44sknyy47gf514bxhik"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b2e01d7e-3c24-4a4b-926f-3c3f0a3f125b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.419985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "e5451612-ee60-4ba9-b573-0577174d4a00",
    "name" : "Deletes a hybrid connection authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/288o/resourceGroups/Jacquetta+Corkery+PhD/providers/Microsoft.Relay/namespaces/Helena+Weber/hybridConnections/Miss+Jacinta+Rau/authorizationRules/Dr.+Dennis+Schuppe",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5jrs94avt63ov"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e5451612-ee60-4ba9-b573-0577174d4a00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.419714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "2a15557c-47c2-4685-b448-1775c36f91fe",
    "name" : "Creates or updates an authorization rule for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/7c50/resourceGroups/Damon+Cartwright+IV/providers/Microsoft.Relay/namespaces/Guadalupe+Predovic/hybridConnections/Adrianne+Donnelly/authorizationRules/Carlie+Friesen",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2dji6peztdos3v30dold02e2dnkuwau5bkd5fieedqn2ugelpc6seppxkgjw5roxy9haus9awz70sipnc834wnqckitvuwhkzlx5wrscdjjx6y8833qwafcholg7ls4jherzfjquyqryr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Celena Dooley MD\",\n  \"id\" : \"8yu0\",\n  \"type\" : \"bfkmh6ottl001fc7eovd0kjxbytn4a0n96easbem7mmbp95ji1ay4mbti4olakcxzbf5fzjxde4avlefn5ls3qxgtue2klzcp0i7imzy0r2tac4hagannzs7h459wkcnm6ws19yss7fcx4tmumzkaxc\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Send\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a15557c-47c2-4685-b448-1775c36f91fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.419434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "c9650988-0c87-494b-a3b4-c744243a81d6",
    "name" : "Hybrid connection authorization rule for a hybrid connection by name.",
    "request" : {
      "urlPath" : "/subscriptions/8xpa/resourceGroups/Demarcus+Bogisich/providers/Microsoft.Relay/namespaces/Lakia+Ernser+DDS/hybridConnections/Johnny+Hirthe+DDS/authorizationRules/Luanne+O%27Connell",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "03dr4i6cvg4wdg2pkvmracdv9qjgln10si2c6xtwotxm0a29kycykz3uxqyrbguazv6qf8jkldiaqqf20ijr6ouvsf2yj83qubk8s1sz6kigi07qyfx3ulqpcubonwvkbt87pas0rrmj6g3nozkq4sz0n2q9gw198p2j54"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Alaine Streich\",\n  \"id\" : \"yvaa\",\n  \"type\" : \"j35bu42rv527ioqqpc9qaoes03h01acff7qiof30t2vjeuxolegpiaxhqpofruxj30gz2hc1jqdrwam3pk9kzi7spw3w8ubf9kipc87f519dya8ofqab6cj5rcx5kps6z1tuhq7d8jjmcsl22roye\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9650988-0c87-494b-a3b4-c744243a81d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.418959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_GetAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "f5a40c57-6e98-40ea-8e08-42d0e832ccab",
    "name" : "Authorization rules for a hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/62e0/resourceGroups/Miss+Stephen+McLaughlin/providers/Microsoft.Relay/namespaces/Andrea+Conn/hybridConnections/Ms.+Riva+Morar/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uyg8fjnrd7jwseuzoa7ocuyzuhcw8b0eh24t6vbn75rghr22j1icuj6f7u2zvtj1t2bicr4kbibckkly5l2q6aq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Clark Berge\",\n    \"id\" : \"tuo5\",\n    \"type\" : \"ieqx457soqns29t0ffvmojjepbspoujlhyy0ju0ex4rheci8uca0j4le1fqpmywg6tl9as7hkjz4jwrilb3ko0ndhafkkgmj0w9mildyma5i6ewztrqcj1d4icv0xieapn5tysysgbshjhs6gh0ehtdbw0igurw63a9pjup80g1jd94o3hfsi\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Jerrell Hartmann MD\",\n    \"id\" : \"172t\",\n    \"type\" : \"rfady82xmynjtfb2h9nq5u3edctqt76snvgbrkyq\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Listen\", \"Manage\", \"Manage\", \"Manage\", \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Erasmo Reinger\",\n    \"id\" : \"4gjp\",\n    \"type\" : \"0slfenvt8kr21o3id\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Send\", \"Listen\" ]\n    }\n  } ],\n  \"nextLink\" : \"br9pjsufmrwnhzqpyxjmh652uhkkgdztse9uen8919szib56li42kr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5a40c57-6e98-40ea-8e08-42d0e832ccab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.418474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "22508ae9-173b-4b8f-9a6e-eeb55f060fcb",
    "name" : "Deletes a hybrid connection. - 204",
    "request" : {
      "urlPath" : "/subscriptions/pr73/resourceGroups/Jerrell+Wisoky+II/providers/Microsoft.Relay/namespaces/Basil+Hermann/hybridConnections/Melva+Macejkovic",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qdqgdho0jtryi6q35qlqkx8owzp06yau0w8n5ws9bqfsne9vsh6yfzyeocfc61uwqgioaltgj1l5ud6vsvainficp19g21cyidu7ov8qz1oxgaa"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "22508ae9-173b-4b8f-9a6e-eeb55f060fcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.417662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "dda4ed00-c219-4836-9ef1-e7a9b578f7c9",
    "name" : "Deletes a hybrid connection. - 200",
    "request" : {
      "urlPath" : "/subscriptions/s4wq/resourceGroups/Arcelia+Braun/providers/Microsoft.Relay/namespaces/Shelton+Gislason+Sr./hybridConnections/Man+Schneider",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wn6f9q46ep0msdhzk32fq9lum2oyk2mbbbenro9n54el7kj697i6arak5s8o9libb"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dda4ed00-c219-4836-9ef1-e7a9b578f7c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.417426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Delete"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "58a1e553-e19e-4f72-a353-c0ce2e279b8c",
    "name" : "Creates or updates a service hybrid connection. This operation is idempotent.",
    "request" : {
      "urlPath" : "/subscriptions/en7y/resourceGroups/Otto+Ziemann+DDS/providers/Microsoft.Relay/namespaces/Sheron+Ondricka/hybridConnections/Jerome+Mertz",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6kgnwlmejaepyq6f02uea7j7okkwc4ijuz47drdz5uin4iljnmty84ts4wfsnwdi95eh93vht5uj50ta9mkyqnlgpgg67439h4wxfzpkxnub14iuc61n1tu7blk9scvwjilkoszsapuz5hrxqavx0et5i42uvbezeu8xilg9356ew"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Millard Conn\",\n  \"id\" : \"ob0i\",\n  \"type\" : \"26rgb9h68hnw5tbgeyvmwymvj3xx7dujvzddy402pdvuqtqismnb323jjhp45ht36i09l558o3ogrb7phgpavqdkvg7pmzyx65uf8o1lh4dd4k88d6hsd5fbff8c91ca86or6xi2ljzqv04vl7e0pp9ak78kgfzwf892p02d8glyzjsxsndk70vzpuud2z\",\n  \"properties\" : {\n    \"createdAt\" : \"2022-09-22T15:05:06.416Z\",\n    \"listenerCount\" : 22,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"kzhhqddqnepc3qyth652fh9w3pspow08u7isl5fnx4fioxbq1bobgjisi7s7vq0dgvjv4abm3fthlk0tuso\",\n    \"updatedAt\" : \"2023-08-01T21:49:02.416Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58a1e553-e19e-4f72-a353-c0ce2e279b8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.417137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "66438fb7-46de-4df8-a38d-6df2f1cf0f5a",
    "name" : "Returns the description for the specified hybrid connection.",
    "request" : {
      "urlPath" : "/subscriptions/pc5t/resourceGroups/Harold+Schultz/providers/Microsoft.Relay/namespaces/Lorri+Tillman/hybridConnections/Tania+Quigley+II",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lk11iws09epxos4amgogiuvqzcd1xauk9uvfsudccmkiblw86xxen70pkw39fhu1f5xh0jyf0zn963h47r8nwhzy7nsc7utwvd2x4zfmiezagprr45sjywnwyir8xl39d57iuekksffxvfx"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Shonta Terry\",\n  \"id\" : \"25ot\",\n  \"type\" : \"mk7fukjdevsu7tntg7owckfv8bud62sm58bid0f23yy1qfpmdd159yc84r64ch7tqivq15ln792244m\",\n  \"properties\" : {\n    \"createdAt\" : \"2023-12-08T15:58:19.416Z\",\n    \"listenerCount\" : 18,\n    \"requiresClientAuthorization\" : false,\n    \"userMetadata\" : \"ztc7r3qlheh64ffc5i2u939r213t09bfanaj7s7sj550jzcmskqokut48r959lwlu4e1wiv15j8zsq1e9sa4xgh5o38vb2xsyz3vehljt1wtq6pxp89k59hmks47kck8ih131m832yonnhsanskur2q2z7kk1po031tb4zek8o6\",\n    \"updatedAt\" : \"2022-07-19T07:46:22.416Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66438fb7-46de-4df8-a38d-6df2f1cf0f5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.416623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the hybrid connection was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "listenerCount" : {
                    "maximum" : 25,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                    "format" : "int32",
                    "readOnly" : true
                  },
                  "requiresClientAuthorization" : {
                    "type" : "boolean",
                    "description" : "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "userMetadata" : {
                    "type" : "string",
                    "description" : "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
                  }
                },
                "description" : "Properties of the HybridConnection."
              }
            },
            "description" : "Description of hybrid connection resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "fff2c765-31f6-469b-8b94-c3bb180afd68",
    "name" : "Lists the hybrid connection within the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/vc84/resourceGroups/Newton+Lang/providers/Microsoft.Relay/namespaces/Harold+Nitzsche+DVM/hybridConnections",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "z195h4djlc66ob4rqvvp427c11nqi63cfflacc8cs0skelplmaivehqyei32p37c38wi5ej4pwe3r9r0b52e44zy6x30e426fylttzb8a6qhcpg7rr5a3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Mrs. Lorriane Effertz\",\n    \"id\" : \"2uw0\",\n    \"type\" : \"l7lisl2qi1h23sq7etefd7nebbn8pu9uif9blmby9cwmlzk46jkmibj1uhty5c5fsskt3x8puldzs90etrpb59j6ei3jwixf9lhewwyd6g94roxejpy67nw6nbeviokfvabbuxcl18grtajvq7fyur445oihfm76u4k\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-08T14:38:39.414Z\",\n      \"listenerCount\" : 3,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"t06if363m1233x10wk6wfao68sb334nvgqxvjvckw89d3ovh6nx4300elvwngw7y9nt3htenp34kuj92rwpfvn06zsmmy652z8l4093xsnf07o3jz21v3yiesgacc5knipnxl33wl\",\n      \"updatedAt\" : \"2022-06-15T14:25:06.414Z\"\n    }\n  }, {\n    \"name\" : \"Ervin Ankunding\",\n    \"id\" : \"nf1t\",\n    \"type\" : \"1ry6ghcv5ohz5z5c1iv3agqc71aycl7nm8jz13j2jtu0ea2ae95qzydsmj2su48vohsrr4mrr098jm5u2emjvifbgbowxxhkvydd333xpbd5qltcelhgze3d7f75hol1n0a60xc45dacrwb8wjuu3nr69i48lluu0jcm7r2sgz5gfrnzt7llyuta8xg55bezexe\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-19T02:59:48.414Z\",\n      \"listenerCount\" : 7,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"t156llvwyp6xpsl0qg0ggz4yh7nz7az7zwxs4yspg1o68yy1ad4bsszhuov7lonysnsadlxr9pnxwdj0d3pa206bopu75l8yii1\",\n      \"updatedAt\" : \"2022-05-28T06:43:50.414Z\"\n    }\n  }, {\n    \"name\" : \"Nona Wolf\",\n    \"id\" : \"8x3g\",\n    \"type\" : \"svqnb29t5dsn1jc9jsm2maf0m7fevu8a619ahlz96tnedyd83wuzzfao8ddg57462zydi1exavtfqbo5fbdh2v66fn8sqsrxz3h08plep9p8wtdcngdxj15ajgn4yytvqa6uyzdnbq5zfmzfe3\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-04-10T19:53:52.414Z\",\n      \"listenerCount\" : 14,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"ib46jd7o8cbah0vqm9d251o4aywfyiqe770xwr18y4m4n\",\n      \"updatedAt\" : \"2024-02-22T13:17:20.414Z\"\n    }\n  }, {\n    \"name\" : \"Sharyl Treutel\",\n    \"id\" : \"0em7\",\n    \"type\" : \"dsn9l25ox8g3zhxt3c7m5yq5p064a54yw5fht9htc0dishtqrb87euyc6kgul5jzffqstn0k351hu61ddpyt9zif14cr04da56l6oc7hj86vqr9v5i10b1g2isyxtdxori9box\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-06-18T03:45:23.414Z\",\n      \"listenerCount\" : 18,\n      \"requiresClientAuthorization\" : true,\n      \"userMetadata\" : \"23d7vhfeqgmiijorrnaz0zk3to9j6lrsh0gjyqdvn90si8aig498k0dyv2qr2uy2pedz8055jhajby2rgqeo22xw1a5e11x7u8yopcj4opku1fxdjl0e42dwzrzka65v\",\n      \"updatedAt\" : \"2023-02-13T07:33:50.414Z\"\n    }\n  }, {\n    \"name\" : \"Felix Lehner\",\n    \"id\" : \"t1yp\",\n    \"type\" : \"38m3g8oszv8eaxruxerl7kjv7k0yi4t004lmufenutip2vdm83l6frq58litk5t7hj3jhfvx2rka41g41qgriim68h6a2n8dbq8m0i8sf2fmfw7cc9pkv15cz\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-12-06T22:35:59.415Z\",\n      \"listenerCount\" : 2,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"l32u0tl5po87ckbzb5l4l6jqdob83p2vetid\",\n      \"updatedAt\" : \"2022-09-24T03:39:32.415Z\"\n    }\n  }, {\n    \"name\" : \"Faustino Boyle\",\n    \"id\" : \"m657\",\n    \"type\" : \"1zo9mkqhdu0kn19ukfjbzm94od6wybsqar6s0melp0odu9f11h5mim027h0uk1crbgc4dqlazfcrwgqebtqwxe7z5u9a0l6xoy0sc7u8zhb32pcxcd4npl47yup650i2dw3huhqfbpesg\",\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-25T04:46:02.415Z\",\n      \"listenerCount\" : 21,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"mm0xplcr9aqqpmnt2yadw82ml2ksq53ag18lc8h3e0arhvi6fis81uplarjmxixvpb20gx85sudjvegdrjaw1yxfevb2bscxbglhxux58oasy3xfsp8cse0lqrbohackuraii5kdxtessmh3kbhxpxcepezz7cdb45k5ltlwrm88rs8\",\n      \"updatedAt\" : \"2024-01-13T17:36:41.415Z\"\n    }\n  }, {\n    \"name\" : \"Jay Kassulke Jr.\",\n    \"id\" : \"n5u0\",\n    \"type\" : \"lbtj4j9zn57r4sqc1w8ivnq20xoosr15su8eecdtdxpmgvgug25bnwph7umr067b5htpx3kuds72oqzrwfvhjaikhqehc68ewr04aselzhdn68m0ig5qzzv4wgjeeeeafleu5r4vwqyhrw4p0css691lbpxm4o6ng335ykg7bwb43trgllvo2vll3x\",\n    \"properties\" : {\n      \"createdAt\" : \"2022-07-08T03:43:24.415Z\",\n      \"listenerCount\" : 16,\n      \"requiresClientAuthorization\" : false,\n      \"userMetadata\" : \"qawh46lxsdjhvbdasatsq6oddv6nqs302upkoe24qomy9hjq9kxssd97hitakgpa5ay1q1fqo1n5cn2eacvq39bux5714h6x67a2e0p7tvri6d6u4nbsfr\",\n      \"updatedAt\" : \"2022-10-01T02:29:14.415Z\"\n    }\n  } ],\n  \"nextLink\" : \"87b97hnafmlr8t7aphudfnkdgj953757egj9si9uxf0wvkjd27oigafgw9wzq80iogjcj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fff2c765-31f6-469b-8b94-c3bb180afd68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.416044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HybridConnections_ListByNamespace",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list hybrid connections.",
                "items" : {
                  "$ref" : "#/components/schemas/HybridConnection"
                }
              }
            },
            "description" : "The response of the list hybrid connection operation."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "f419d288-cc83-46fa-a33e-e6875b065480",
    "name" : "Regenerates the primary or secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/r883/resourceGroups/Angelic+Zulauf/providers/Microsoft.Relay/namespaces/Leopoldo+Lindgren/authorizationRules/Laticia+Stanton+III/regenerateKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "fofmwg0hazidm8csvz8ca8e69v635u6gvjzobqf8hbrbxznfz5vc91bg0fjlt13c34abbuim9y5xzf8e9msm70xfelumh7o2srt6w1ly3vspcd6ke8qno1iic7tuap4q6fv4n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"bm0ht71wsx6m67p7s0chvyt1j7ceg21sy8xdc9p9htfk0ju4zllm8kh5fbgemmt7is4bgyuxq5f5k4ize2k2nmztw8dyw98t98ekgvrnt97tilqf992jlixfv38\",\n  \"keyName\" : \"Addie Lubowitz\",\n  \"primaryConnectionString\" : \"hpjgrsy\",\n  \"secondaryConnectionString\" : \"dsgb05kjafmeqkb2pzzzdi8mijrjezzczl8yeedgr97mwaqpp4x4ej5cvio5h2tgpgglrw8ydpwjivwmi59u\",\n  \"primaryKey\" : \"ar5hibjpe13c8kp26p8ar1k9wquqa8rm9tjpn08lfj77j8ic1g44uskvu45q4h0h55qv0q4mtidhkjz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f419d288-cc83-46fa-a33e-e6875b065480",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.414155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_RegenerateKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "6470b15e-da96-4dc3-ba26-47f900224c00",
    "name" : "Primary and secondary connection strings to the namespace.",
    "request" : {
      "urlPath" : "/subscriptions/yduq/resourceGroups/Sha+Lehner/providers/Microsoft.Relay/namespaces/Eli+Grimes/authorizationRules/Berna+O%27Connell+PhD/listKeys",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ay5z68ypae9qr633o2lqmf41b6bxgks76w09ohh3r3xswo"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"secondaryKey\" : \"bbklblhnk8ov31uxyt27ff8t8o3xnlrp10dla6fc1pwbjx6tdppvzv7fveftblcy5c4h97plojrgguflrnt4yalcjadon8rzq2t5o2zeunclaxi314w7nx\",\n  \"keyName\" : \"Reita Kovacek DVM\",\n  \"primaryConnectionString\" : \"hyo1cnn6afd1di41t64ia7lnvarvydxngvw9tctxgdwp56lc5\",\n  \"secondaryConnectionString\" : \"k3vpjjr08axz3birzhldwb0ero3j8ili9ct8l1p479pihs2ek6lkb9njsaw2nzuejigkejjwtg461ur5we95wp2730i4cwii6ttv0fec9iavxvbew44bvhudu6ls1p1xw4gexc9xkh28nmnos5orokhpmbg3pu88bkp8nhty9tyaqqpgb0394emre4\",\n  \"primaryKey\" : \"dpliwhtk6ra31t0i7vk3nvnx048yo8dnvtqjeeo1z3yyj63ikav4s2jlmg02gsgd6nd9j9vg72pflivx3lfojap000qt2e9hv8elsad8ktyi1qfix8pk3m5eaqv53xi9kactxar6cm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6470b15e-da96-4dc3-ba26-47f900224c00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.413414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "keyName" : {
                "type" : "string",
                "description" : "A string that describes the authorization rule."
              },
              "primaryConnectionString" : {
                "type" : "string",
                "description" : "Primary connection string of the created namespace authorization rule."
              },
              "primaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit primary key for signing and validating the SAS token."
              },
              "secondaryConnectionString" : {
                "type" : "string",
                "description" : "Secondary connection string of the created namespace authorization rule."
              },
              "secondaryKey" : {
                "type" : "string",
                "description" : "A base64-encoded 256-bit secondary key for signing and validating the SAS token."
              }
            },
            "description" : "Namespace/Relay Connection String"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "38749082-a8f2-4418-b78c-f29040460203",
    "name" : "Deletes a namespace authorization rule. - 204",
    "request" : {
      "urlPath" : "/subscriptions/2zo2/resourceGroups/Benjamin+Conn/providers/Microsoft.Relay/namespaces/Sharlene+Stark/authorizationRules/Helena+Sawayn+V",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1npz3zuafjvfe2de3rj423iu09lxo4cvtj4fjf9pw9al3naqjtczydyiy5wlmh7vzlpqhsnz9fdc4h72xg2ksufzb6cgzpo0gagnoqz4lk4p2tsmbrbtgyoe9g1cjm6kl8lsagz5q15fo"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "38749082-a8f2-4418-b78c-f29040460203",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.413019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "f747afdb-c20e-4e2b-a1bc-1df41881d9f4",
    "name" : "Deletes a namespace authorization rule. - 200",
    "request" : {
      "urlPath" : "/subscriptions/6p85/resourceGroups/Roselyn+Lubowitz/providers/Microsoft.Relay/namespaces/Jaquelyn+Dibbert/authorizationRules/Ophelia+Hickle",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "skeupeux0nugycs9q4yc1xwj8mhrnzzg6brstyqzsfr6epip5nlvg6l9hu3o81lk8nph1th2fd656qn6vhyck6ra1ng73o0om06ri8zhuwmq2oxpbypg9illsb4ugjxj0il67d09qic4d13ugib6ympr7fg1zf8vu5fd68se4y34clspohwq8xqoc4nuv"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f747afdb-c20e-4e2b-a1bc-1df41881d9f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.412808Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteAuthorizationRule"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "2e120e3e-69b5-4b9f-9916-6ea876ec0fc5",
    "name" : "Creates or updates an authorization rule for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/30um/resourceGroups/Wallace+Moen/providers/Microsoft.Relay/namespaces/Ms.+Leonardo+Durgan/authorizationRules/Archie+Murphy+Sr.",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lj68xbicmwd52rzk3x98kwxf6icio"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Minta Gorczany\",\n  \"id\" : \"bvi3\",\n  \"type\" : \"vbyftiq93sq9x5g6sa5rbawbm125do1y6tqhukyllqlq4ev1927mi9gh5fw5o5t6rj05t0sy4i3qnb8jvgx97w1eo\",\n  \"properties\" : {\n    \"rights\" : [ \"Listen\", \"Send\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e120e3e-69b5-4b9f-9916-6ea876ec0fc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.412575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "a53dd225-e484-423b-96e0-94905000d173",
    "name" : "Authorization rule for a namespace by name.",
    "request" : {
      "urlPath" : "/subscriptions/b6u1/resourceGroups/Waylon+Gutkowski/providers/Microsoft.Relay/namespaces/Nathan+Green/authorizationRules/Gordon+Heller",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hrpu38mhs3y44r7on72v4a971yg6xkq5ismieq6p947ve43in2g5b4irkulkq4dsbnrv779iz4ttmpb466xmvq80x7tyvyu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Wilfredo Konopelski\",\n  \"id\" : \"v66b\",\n  \"type\" : \"j6n5nnmw7ysbmqicpo6zelc1fpdixqlbhp03ad236upp35cyex1da7b8qrnluetiglwqh4igq4x68e0vo0um07mfo9u58ueqc9a2aj4m7q\",\n  \"properties\" : {\n    \"rights\" : [ \"Send\", \"Listen\", \"Send\", \"Manage\", \"Listen\" ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a53dd225-e484-423b-96e0-94905000d173",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.412132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetAuthorizationRule",
          "schema" : {
            "required" : [ "properties" ],
            "properties" : {
              "properties" : {
                "required" : [ "rights" ],
                "type" : "object",
                "properties" : {
                  "rights" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "description" : "The rights associated with the rule.",
                    "items" : {
                      "type" : "string",
                      "enum" : [ "Manage", "Send", "Listen" ]
                    }
                  }
                },
                "description" : "Authorization rule properties."
              }
            },
            "description" : "Description of a namespace authorization rule.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "171d871f-9e96-40bf-be16-0c7b581146a2",
    "name" : "Authorization rules for a namespace.",
    "request" : {
      "urlPath" : "/subscriptions/1s10/resourceGroups/Davis+Haley/providers/Microsoft.Relay/namespaces/Anneliese+Brakus/authorizationRules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9084c2iggu8o6ujwfxu1mq0zgx6thib1kj3sr1bqdirfxm0qvj9jbzo163xl9veiql72mx3t1rod4cjj0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Lizzette Bechtelar\",\n    \"id\" : \"ns84\",\n    \"type\" : \"cu2z6pky8zespkgsg5zyvior531orv9m22jebsg3fvbdau3aggosk0ayh7csdwh6ght8f3ekwrm5zgpo65h7xkyxotv521zb8c\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Abraham Mayer\",\n    \"id\" : \"a7o3\",\n    \"type\" : \"s78t0gg44a5jyrfxcpud9j3dhzrjritj3jwixj38xfi9gdqyf04wnl4imrdn2ft0ceecz1vaimqcs981vukpdrgqwv5jwxl5gus2d1s9vgn9ix0y89laiewl8\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Manage\", \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Mr. Coleman Bogisich\",\n    \"id\" : \"4wp7\",\n    \"type\" : \"ocypak269hkkq5jk2a1vte5juza9zeckby9w8n1uoh308jzg44okiijexlbmyv41xq6nm0raoghio8f9jjsghwd7qp0mj0xly\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\" ]\n    }\n  }, {\n    \"name\" : \"Aurore Goldner\",\n    \"id\" : \"87bx\",\n    \"type\" : \"uvc6n4qbv459h\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Marquis Altenwerth\",\n    \"id\" : \"2q39\",\n    \"type\" : \"zmkvg1qrvkgm7u29mpj3mbq2q2swkzji2emn1da0ma7nlzki19oielkapsx6xhwwblfaga3izpkwynsqbzc2ky6k4snvh31b3e80rwbyd\",\n    \"properties\" : {\n      \"rights\" : [ \"Manage\", \"Send\", \"Listen\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Claudette VonRueden IV\",\n    \"id\" : \"5d6x\",\n    \"type\" : \"nyjogpz72p4iwxrxrfh35udhq4b3ss8sqbglp2xz4ciymp0bmp8ybgshe8gkhm6dezma5ei73jxiceu9ol6dmg4h9rm35v\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Send\" ]\n    }\n  }, {\n    \"name\" : \"Branden Stroman II\",\n    \"id\" : \"yv70\",\n    \"type\" : \"opu65t1uou2m6crknqm4gv9i0zmfrvekbya43gwkfx4etgvol29f8bvc8oo29i1a76g5veeo4pyiv76f0kcwkgu3f3rcbiybk2pqoabvbhbnfm59pgw2ksqablbmbog\",\n    \"properties\" : {\n      \"rights\" : [ \"Send\", \"Listen\", \"Send\", \"Manage\" ]\n    }\n  }, {\n    \"name\" : \"Ms. Merri Rolfson\",\n    \"id\" : \"5m0b\",\n    \"type\" : \"nsjqqr038sg8i4iil01torpf0p5nrp3t5j4yxj1vo5vqzpyy8vid45n9ovwmmc2qazrr2zpjozhbvre24drsn2uf28ymmr01y7qeh595kstkc8fdiie8ienddsow3j15513jxl4hk23np0kncxtowuixytbek3orjzdmulb07uj97932abfrt4fspii5tna3kejn4z\",\n    \"properties\" : {\n      \"rights\" : [ \"Listen\", \"Send\", \"Manage\" ]\n    }\n  } ],\n  \"nextLink\" : \"iddulyrv6oxoor9vaunuvmmd6j85vl77mk5fw42ba6zr1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "171d871f-9e96-40bf-be16-0c7b581146a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.41171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListAuthorizationRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of authorization rules."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list authorization rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "36f7d9fa-2a27-49d5-b999-a9f0226b54f3",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/fjsk/resourceGroups/Sterling+Stark/providers/Microsoft.Relay/namespaces/Judson+Johnson",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vmqdb7gvymex84m2ushun4ftqcmy5d90y1wwscy62timozjsbm7w0qrzdpufhqfip2c6fsh1iyq0oqbiuzq3eca8bji2d4lasdavgy1fvqd9j4oletk7c6wpk2grsjy8fijvs6h1tlnme5yoomrgnxkksm3xrsriy4limlizg2k8oaeo52yu6875ve8udxv1"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"9pz5ytwrfsvztm3lay4afz0hq54cyjh28fmtqhbkjtz99fvcj17zygqaolog870m9d6k9l2t2tbsun98cvei7x7iyogft3u088hvpzibsdxf4cg6xk9mu4fr9zdld7nakk\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-12-08T06:50:25.409Z\",\n    \"metricId\" : \"w05r\",\n    \"serviceBusEndpoint\" : \"apzrnbl7dfgko1ov6v7qzr8p3y56qbezx7lcarpl2jvyhjtr7vk8a89qv6vral0ru18otqx9v09bh4api8seiqv5xd2hnbbjyjetfva97yuz5ht097gwz4lbdzlgfwk6dxdpsvq5vl5vupolsdne1mcjqz59plupm\",\n    \"provisioningState\" : \"Updating\",\n    \"updatedAt\" : \"2023-02-14T17:14:57.41Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36f7d9fa-2a27-49d5-b999-a9f0226b54f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.410278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "3b031047-945c-4386-922d-14cba2f87f83",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest...",
    "request" : {
      "urlPath" : "/subscriptions/0036/resourceGroups/Mr.+Ceola+McKenzie/providers/Microsoft.Relay/namespaces/Mrs.+Guy+Romaguera",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uzbi7utz6sqbrdkl87co3ehz5k7xonvf3wjrav0ltx4dqp3dfs5s25h4bp1xw4bkggyzrh2ujndzsd1zo0r69syh1he7xat53vr0qmqpz6638j7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"3mj43xvt3ainzp4r4veo4hntk05oi2avvaw8h6s6mu3uqavwykpemcm88xnif5q2k\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-05-21T21:26:46.409Z\",\n    \"metricId\" : \"20ts\",\n    \"serviceBusEndpoint\" : \"w0tl36agb1kkblzt0bufiwnkvc3h5s1kdzsd29681ocqj4pc8c0cbryg2e0ie71uwmcqz0enuxr25o8m47cuw5rgz7d37ekyru69959ls88ym3z8alskpuic24fu85pbof5vpwo5p1nwx1nmcujmh2ahn6l56dlm85de2vr8679iuo\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2023-07-29T21:10:22.409Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b031047-945c-4386-922d-14cba2f87f83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.409917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "78ded3d0-4ea4-49e4-b3b2-234c084403cf",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/jebu/resourceGroups/Lee+Johnson/providers/Microsoft.Relay/namespaces/Ms.+Elsy+Bechtelar",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8n5vlvm5onr4gkg0fvejj4uff9xsoictc7ondbbm2g70w4f34nbp1cktpux7mfe5nwc2fgfhazo680pdf6b45wat70lx8dulf6tftzhhjojcztgw9w9mpbqx8tki5kswbpaf9beh937pqiutc1iautuvoryubv48rt74ohn6skcygt4wm6ldsgnwrcoqjbtjbvdhdhm"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "78ded3d0-4ea4-49e4-b3b2-234c084403cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.409519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "538c04ea-50d8-4933-a4a5-aac19dc29905",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/mntj/resourceGroups/Elton+Torp+IV/providers/Microsoft.Relay/namespaces/Dr.+Clayton+Wolff",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nqmpdkswvw0u29es3l8rim7l"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "538c04ea-50d8-4933-a4a5-aac19dc29905",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.409331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "0c02f6d1-d1d0-4d6c-a7dc-88f87ce9daa9",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/22b7/resourceGroups/Lucas+Steuber/providers/Microsoft.Relay/namespaces/Tomika+Will",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qfiy1x3wm63m6fmrgmy4mp4om9j5u86je1vdh2zsf0c8ireqbx94tws1hoklwjhkilefb9nzdlbm32ce4fphwo3378jmokrkujwkwuhi092tyogqkt9rfj04ol7ewlpipang39m0kjlr1mdztzhan8fp4y1w6k6jdcx3h3xyhpy2734d891638y8a8v8"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0c02f6d1-d1d0-4d6c-a7dc-88f87ce9daa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.409147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "2ca29cb6-c53d-40b7-9f79-c61d354ce8e5",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/24bq/resourceGroups/Shalon+Blick+MD/providers/Microsoft.Relay/namespaces/Mrs.+Maria+Leuschke",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "08r1jjhe73xmom9nnetpzrv0ujf5oubimldak3dn1350g9mvc8pco14gil08r60us0k7v8csszb630881vo7j5y6iht"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"9h9g9ol66lknwvzsa\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-03-19T17:41:54.408Z\",\n    \"metricId\" : \"u3su\",\n    \"serviceBusEndpoint\" : \"9xykofgfdk17xau1wgh1vn95oegv7z5c1rxeow8lj1djqbdixnyf94twjz2x2ukwtn81um0emappcc2ndt8fis24vcm3p8jra123sckqj5q38cknc801zpm0i750fthegsly4u\",\n    \"provisioningState\" : \"Succeeded\",\n    \"updatedAt\" : \"2022-10-10T07:34:55.408Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ca29cb6-c53d-40b7-9f79-c61d354ce8e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.408934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "1a4df567-f0ab-491f-85c2-4aa00c58f82a",
    "name" : "Create Azure Relay namespace.",
    "request" : {
      "urlPath" : "/subscriptions/c6s6/resourceGroups/Yvonne+Mraz/providers/Microsoft.Relay/namespaces/Regena+Schamberger",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3y2xih6lishvxffvu7w5y61xrdssnhf7h70fjhkc5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"mggvi25b9gr4hu995oikakf8lrjr8wjuxgpo8ag037dehuft09o6w4dqxwxm5tfopl1nyshw7w7flph5mbc33wa9nqumpf0win\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-02-07T23:09:51.408Z\",\n    \"metricId\" : \"yri7\",\n    \"serviceBusEndpoint\" : \"p03oez9d07db66molu0jkdj8725ne1cs4pjgv4urrry6ix3zajwgnaxsd0ti1cj4wqorlgn2gxft93uxa2btx3uzaed1h\",\n    \"provisioningState\" : \"Created\",\n    \"updatedAt\" : \"2023-12-30T05:02:02.408Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a4df567-f0ab-491f-85c2-4aa00c58f82a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.408571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "3ac9733a-a461-46dd-9b14-2579437cffc6",
    "name" : "Returns the description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/4hi7/resourceGroups/Bronwyn+Stroman/providers/Microsoft.Relay/namespaces/Edgar+McCullough",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1sqz7ixvgh8ynnt769wiek7w29h2ujso1t45qgx1s6t6d1cg9ngwoz80pitd0owu7a811l08rcp672xjsjpuo7x3m61avzdvg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"a7kehbxkpdb7cwgp2mofdlx5d5fi1ogq02vxbgpg85tmst9pa6bhizuryc2nsldvy0ba4lzhvod9cypordoy1998l\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\"\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-08-26T22:17:08.407Z\",\n    \"metricId\" : \"pj7d\",\n    \"serviceBusEndpoint\" : \"suv432mj0w46xnrsnwweirpjkuens13ftscn8qe2ag2363md8sbivc2pp09ix77fmfq0nq9h35p48srubxhm20hteknuggt6kk6weiwftqnglyrz98a7yy4ujb10xc\",\n    \"provisioningState\" : \"Unknown\",\n    \"updatedAt\" : \"2022-05-30T11:30:14.407Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ac9733a-a461-46dd-9b14-2579437cffc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.408189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/RelayNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "3a974459-1197-4692-ba47-7169eef67fd5",
    "name" : "Lists all the available namespaces within the ResourceGroup.",
    "request" : {
      "urlPath" : "/subscriptions/x960/resourceGroups/Marty+Boehm/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "n06ykl64brun2goay8lkky9g61mlpuq67huz2cro3f6q2d0rr3d5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"4kchldvdeorl7audhpdae6t2hsi0zwpsh81jqxveti8qlq5x1etca5uco0x2k6mbx9pxvwayli\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-15T21:30:06.407Z\",\n      \"metricId\" : \"c93u\",\n      \"serviceBusEndpoint\" : \"811nsb57bwguotm5ejbd9qjbj4r\",\n      \"provisioningState\" : \"Created\",\n      \"updatedAt\" : \"2023-05-07T13:24:22.407Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"spli5pt44v1ubjkxpzsof33rempleetjv0li53zyq3ea3n2jfc90itjhlrdw83eex3rnrit40b2mrgo02m6nc5ph7nmbeez5ehvgngksygscpasuz52cmjtxrpb65njwvbs2o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a974459-1197-4692-ba47-7169eef67fd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.407778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "6cb81c7b-fc04-4993-9b64-892482c7744d",
    "name" : "Lists all the available namespaces within the subscription regardless of the res...",
    "request" : {
      "urlPath" : "/subscriptions/4rii/providers/Microsoft.Relay/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "j4kbr9af8wtsz36mwz76bwm02v21q6fhcrkod60hh46ii6fz1orzifr8d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"n2puk141kcc58zd2hhjdwz4wwskvbg0qvr1pqucz05rup7z6k3xsu80bgptobjn3a0qabcet1zcjmvos7c3s4dppy50h1gbws99102qzwa1eaug8oa1ozrelt0jk62kw026mn91qnaghnc0lka6fwubo56z00a7kuex6xv5qmruvs6jx\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-04-05T11:48:44.406Z\",\n      \"metricId\" : \"yzg6\",\n      \"serviceBusEndpoint\" : \"l0sylpxpoai7cep8rb1tpgxccug7443or03jdonoiz57hx1il4ayoyyqj0vi45r87c4xoekezu99uc68wtt2jdl2wtg57ryqdd6o2j50kisyrv4fvb\",\n      \"provisioningState\" : \"Succeeded\",\n      \"updatedAt\" : \"2023-10-16T16:44:56.407Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"pnh268rbigvuipn4ioggm4xkqux584q4tdszzcziyhffdxua49cbogiu3av7zqxniux4xu7ax6gw2w5gzmmjuq0tusph7hmur4h4zzxect7ap85cijm46kca6vqsiy\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\"\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-03-20T06:25:12.407Z\",\n      \"metricId\" : \"bstt\",\n      \"serviceBusEndpoint\" : \"f8786e9vlqctsp3h7wzexz64gm0nbjnytw3tyfbxhf8cwnb2obn\",\n      \"provisioningState\" : \"Unknown\",\n      \"updatedAt\" : \"2023-02-02T06:02:14.407Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"u3iypw115wbb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cb81c7b-fc04-4993-9b64-892482c7744d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.407411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the list namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description" : "The response from the list namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "9cafa967-804e-4e9f-acca-4a256a39dd5e",
    "name" : "Check the specified namespace name availability.",
    "request" : {
      "urlPath" : "/subscriptions/y293/providers/Microsoft.Relay/checkNameAvailability",
      "method" : "POST",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ahzm9d5ea54jpsfnto7jser4qzpe29xjqy3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reason\" : \"InvalidName\",\n  \"nameAvailable\" : true,\n  \"message\" : \"Debitis et qui. Dolore soluta ut. Eius saepe optio eius doloribus. Occaecati aut perferendis. Eos eligendi nisi eveniet magni facere voluptas eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cafa967-804e-4e9f-acca-4a256a39dd5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.406872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CheckNameAvailability",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The detailed info regarding the reason associated with the namespace.",
                "readOnly" : true
              },
              "nameAvailable" : {
                "type" : "boolean",
                "description" : "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false."
              },
              "reason" : {
                "$ref" : "#/components/schemas/UnavailableReason"
              }
            },
            "description" : "Description of the check name availability request properties."
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "b291bc77-8cb2-44fe-b810-4dcd77586a26",
    "name" : "Lists all available Relay REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.Relay/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cvoro5vuk9az5oaau8oneh2wvg7ph0i1e3cuuuxo45q37qdsfwwvokjaafw18jslqpgz9g30yxzv4i40g54ji1lgl0umcmdhsdaf3208j7434s31s96n5husdmesx0oewfsto9gunh9trrz5kqg0403r1xh"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"kotnj1yqyml55rg7617zlq62ylivjrrvbea0xwu9vjzoe1jh736fh1hee56krf2sfh31cn\",\n      \"resource\" : \"utialsa2ztnf8tz89s2ngjy1x58u24qgenoymzlc6z72ylnzsk04pbgekcg143kj3i6egy9lacjqq9hgio34xe7or8m3mq2d474ifed900h3frk\",\n      \"operation\" : \"v4tpu9g6t3jf1bxfc8uj9iazj04dcl24yz82uhg6e0468tn429z7thdty1gk4dvqbowl716uwfgei81fmm4agrggh7cn8o678afy1lbtcw2p3gmn2i10rykhnhqjlaq2ftcs9se1ugkup0v7kl7jw6koeb1jyac5i96v\"\n    },\n    \"name\" : \"Sid Casper\"\n  } ],\n  \"nextLink\" : \"5xqc91nx4ptlz8pkce75qhwq0y0jy8m9pc14c8k1n04qsc9o8b7mdhobvrny54vbicvnsmycxowvxygzog8n2kzld4923e2ih2t43dr3dbpf8b3nrgr11ke585akboqf5t2v7umckvmzf31jhb8vyfuhgb17qvivv1z2qx81h3k3b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b291bc77-8cb2-44fe-b810-4dcd77586a26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:15.406597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Relay operations supported by resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 43
  } ]
}