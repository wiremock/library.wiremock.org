{
  "mappings" : [ {
    "id" : "c91146b1-da81-466f-a1d4-56c2d58845ea",
    "name" : "Detect anomaly status of the latest point in time series.",
    "request" : {
      "urlPath" : "/timeseries/last/detect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"isPositiveAnomaly\" : true,\n  \"period\" : 1051470469,\n  \"suggestedWindow\" : 1897705073,\n  \"isNegativeAnomaly\" : true,\n  \"upperMargin\" : 8.975793884206898E37,\n  \"expectedValue\" : 2.9939642535825672E38,\n  \"isAnomaly\" : false,\n  \"lowerMargin\" : 1.929370270868716E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c91146b1-da81-466f-a1d4-56c2d58845ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:21.796135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "LastDetect",
          "schema" : {
            "required" : [ "expectedValue", "isAnomaly", "isNegativeAnomaly", "isPositiveAnomaly", "lowerMargin", "period", "suggestedWindow", "upperMargin" ],
            "type" : "object",
            "properties" : {
              "expectedValue" : {
                "type" : "number",
                "description" : "Expected value of the latest point.",
                "format" : "float"
              },
              "isAnomaly" : {
                "type" : "boolean",
                "description" : "Anomaly status of the latest point, true means the latest point is an anomaly either in negative direction or positive direction."
              },
              "isNegativeAnomaly" : {
                "type" : "boolean",
                "description" : "Anomaly status in negative direction of the latest point. True means the latest point is an anomaly and its real value is smaller than the expected one."
              },
              "isPositiveAnomaly" : {
                "type" : "boolean",
                "description" : "Anomaly status in positive direction of the latest point. True means the latest point is an anomaly and its real value is larger than the expected one."
              },
              "lowerMargin" : {
                "type" : "number",
                "description" : "Lower margin of the latest point. LowerMargin is used to calculate lowerBoundary, which equals to expectedValue - (100 - marginScale)*lowerMargin. ",
                "format" : "float"
              },
              "period" : {
                "type" : "integer",
                "description" : "Frequency extracted from the series, zero means no recurrent pattern has been found.",
                "format" : "int32"
              },
              "suggestedWindow" : {
                "type" : "integer",
                "description" : "Suggested input series points needed for detecting the latest point.",
                "format" : "int32"
              },
              "upperMargin" : {
                "type" : "number",
                "description" : "Upper margin of the latest point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)*upperMargin. If the value of latest point is between upperBoundary and lowerBoundary, it should be treated as normal value. By adjusting marginScale value, anomaly status of latest point can be changed.",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d7cfe94f-5b58-4bc7-b27c-c27912a242c7",
    "name" : "Detect anomalies for the entire series in batch.",
    "request" : {
      "urlPath" : "/timeseries/entire/detect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"upperMargins\" : [ 1.9494468405161965E38, 2.649056701786516E38, 3.0738292642265576E38, 3.0838060538559922E38, 3.025192258091057E38 ],\n  \"isPositiveAnomaly\" : [ false, true ],\n  \"period\" : 905528251,\n  \"isNegativeAnomaly\" : [ true, false, false, false, true, true ],\n  \"lowerMargins\" : [ 3.8125335721487134E37, 2.7431830584839604E38, 2.7943586682339275E38, 1.8315017325218156E38, 1.772086657369744E38 ],\n  \"isAnomaly\" : [ false, true, false ],\n  \"expectedValues\" : [ 7.654834599053473E37, 2.1615472328492622E38 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7cfe94f-5b58-4bc7-b27c-c27912a242c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:21.795965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EntireDetect",
          "schema" : {
            "required" : [ "expectedValues", "isAnomaly", "isNegativeAnomaly", "isPositiveAnomaly", "lowerMargins", "period", "upperMargins" ],
            "type" : "object",
            "properties" : {
              "expectedValues" : {
                "type" : "array",
                "description" : "ExpectedValues contain expected value for each input point. The index of the array is consistent with the input series.",
                "items" : {
                  "type" : "number",
                  "format" : "float",
                  "nullable" : false
                }
              },
              "isAnomaly" : {
                "type" : "array",
                "description" : "IsAnomaly contains anomaly properties for each input point. True means an anomaly either negative or positive has been detected. The index of the array is consistent with the input series.",
                "items" : {
                  "type" : "boolean",
                  "nullable" : false
                }
              },
              "isNegativeAnomaly" : {
                "type" : "array",
                "description" : "IsNegativeAnomaly contains anomaly status in negative direction for each input point. True means a negative anomaly has been detected. A negative anomaly means the point is detected as an anomaly and its real value is smaller than the expected one. The index of the array is consistent with the input series.",
                "items" : {
                  "type" : "boolean",
                  "nullable" : false
                }
              },
              "isPositiveAnomaly" : {
                "type" : "array",
                "description" : "IsPositiveAnomaly contain anomaly status in positive direction for each input point. True means a positive anomaly has been detected. A positive anomaly means the point is detected as an anomaly and its real value is larger than the expected one. The index of the array is consistent with the input series.",
                "items" : {
                  "type" : "boolean",
                  "nullable" : false
                }
              },
              "lowerMargins" : {
                "type" : "array",
                "description" : "LowerMargins contain lower margin of each input point. LowerMargin is used to calculate lowerBoundary, which equals to expectedValue - (100 - marginScale)*lowerMargin. Points between the boundary can be marked as normal ones in client side. The index of the array is consistent with the input series.",
                "items" : {
                  "type" : "number",
                  "format" : "float",
                  "nullable" : false
                }
              },
              "period" : {
                "type" : "integer",
                "description" : "Frequency extracted from the series, zero means no recurrent pattern has been found.",
                "format" : "int32"
              },
              "upperMargins" : {
                "type" : "array",
                "description" : "UpperMargins contain upper margin of each input point. UpperMargin is used to calculate upperBoundary, which equals to expectedValue + (100 - marginScale)*upperMargin. Anomalies in response can be filtered by upperBoundary and lowerBoundary. By adjusting marginScale value, less significant anomalies can be filtered in client side. The index of the array is consistent with the input series.",
                "items" : {
                  "type" : "number",
                  "format" : "float",
                  "nullable" : false
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "08636ff9-3b9b-448d-9d72-7ed2c470eb01",
    "name" : "Detect change point for the entire series",
    "request" : {
      "urlPath" : "/timeseries/changePoint/detect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"period\" : 369026244,\n  \"isChangePoint\" : [ false, true, false, false, true, false, false, false ],\n  \"confidenceScores\" : [ 2.5454450718168035E38, 1.4236671500581006E37, 2.973634507334834E38, 1.8896437502347603E37 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08636ff9-3b9b-448d-9d72-7ed2c470eb01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:21.795659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ChangePointDetect",
          "schema" : {
            "required" : [ "confidenceScores", "isChangePoint", "period" ],
            "type" : "object",
            "properties" : {
              "confidenceScores" : {
                "type" : "array",
                "description" : "the change point confidence of each point",
                "items" : {
                  "type" : "number",
                  "format" : "float",
                  "nullable" : false
                }
              },
              "isChangePoint" : {
                "type" : "array",
                "description" : "isChangePoint contains change point properties for each input point. True means an anomaly either negative or positive has been detected. The index of the array is consistent with the input series.",
                "items" : {
                  "type" : "boolean",
                  "nullable" : false
                }
              },
              "period" : {
                "type" : "integer",
                "description" : "Frequency extracted from the series, zero means no recurrent pattern has been found.",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 2
  } ]
}