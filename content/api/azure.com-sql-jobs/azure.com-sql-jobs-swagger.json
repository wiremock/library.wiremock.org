{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SqlManagementClient",
    "description" : "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "version" : "2017-03-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents" : {
      "get" : {
        "tags" : [ "JobAgents" ],
        "description" : "Gets a list of job agents in a server.",
        "operationId" : "JobAgents_ListByServer",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of job agents.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobAgentListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}" : {
      "get" : {
        "tags" : [ "JobAgents" ],
        "description" : "Gets a job agent.",
        "operationId" : "JobAgents_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent to be retrieved.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the specified job agent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobAgent"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server."
          }
        }
      },
      "put" : {
        "tags" : [ "JobAgents" ],
        "description" : "Creates or updates a job agent.",
        "operationId" : "JobAgents_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent to be created or updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The requested job agent resource state.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobAgent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the job agent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobAgent"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully created the job agent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobAgent"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 MissingSkuName - Sku name is required.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 DatabaseDoesNotExist - The requested database was not found\n\n * 400 JobAgentExceededQuota - Could not create job agent because it would exceed the quota.\n\n * 400 JobAgentAlreadyExists - The job agent already exists on the server.\n\n * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.\n\n * 400 JobAgentDatabaseSecondary - A job agent cannot be linked to a geo-secondary database.\n\n * 400 JobAgentDatabaseAlreadyLinked - The specified database is already linked to another job agent.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 PropertyChangeUnsupported - Property cannot be modified."
          }
        }
      },
      "delete" : {
        "tags" : [ "JobAgents" ],
        "description" : "Deletes a job agent.",
        "operationId" : "JobAgents_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the job agent."
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "The specified job agent does not exist."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server."
          }
        }
      },
      "patch" : {
        "tags" : [ "JobAgents" ],
        "description" : "Updates a job agent.",
        "operationId" : "JobAgents_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The update to the job agent.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobAgentUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the job agent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobAgent"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 PropertyChangeUnsupported - Property cannot be modified."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials" : {
      "get" : {
        "tags" : [ "JobCredentials" ],
        "description" : "Gets a list of jobs credentials.",
        "operationId" : "JobCredentials_ListByAgent",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of job credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCredentialListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}" : {
      "get" : {
        "tags" : [ "JobCredentials" ],
        "description" : "Gets a jobs credential.",
        "operationId" : "JobCredentials_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialName",
          "in" : "path",
          "description" : "The name of the credential.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the job credential.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCredential"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      },
      "put" : {
        "tags" : [ "JobCredentials" ],
        "description" : "Creates or updates a job credential.",
        "operationId" : "JobCredentials_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialName",
          "in" : "path",
          "description" : "The name of the credential.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The requested job credential state.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobCredential"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the credential.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCredential"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully created the credential.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCredential"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidJobCredentialUsername - Invalid credential username.\n\n * 403 JobCredentialPermissionError - Azure Resource Manager does not have permission to use or manage the credential.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "JobCredentials" ],
        "description" : "Deletes a job credential.",
        "operationId" : "JobCredentials_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialName",
          "in" : "path",
          "description" : "The name of the credential.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the credential."
          },
          "204" : {
            "description" : "A credential with the specified name does not exist."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 403 JobCredentialPermissionError - Azure Resource Manager does not have permission to use or manage the credential.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/executions" : {
      "get" : {
        "tags" : [ "JobExecutions" ],
        "description" : "Lists all executions in a job agent.",
        "operationId" : "JobExecutions_ListByAgent",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions created at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions created before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions completed at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions completed before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "If specified, only active or only completed job executions are included.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "The number of elements in the collection to skip.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of elements to return from the collection.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved job executions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecutionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Gets a list of jobs.",
        "operationId" : "Jobs_ListByAgent",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of jobs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "description" : "Gets a job.",
        "operationId" : "Jobs_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      },
      "put" : {
        "tags" : [ "Jobs" ],
        "description" : "Creates or updates a job.",
        "operationId" : "Jobs_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The requested job state.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Job"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully created the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidDuration - Invalid duration.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Jobs" ],
        "description" : "Deletes a job.",
        "operationId" : "Jobs_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the job."
          },
          "204" : {
            "description" : "The specified job does not exist."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions" : {
      "get" : {
        "tags" : [ "JobExecutions" ],
        "description" : "Lists a job's executions.",
        "operationId" : "JobExecutions_ListByJob",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions created at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions created before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions completed at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions completed before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "If specified, only active or only completed job executions are included.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "The number of elements in the collection to skip.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of elements to return from the collection.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved job executions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecutionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}" : {
      "get" : {
        "tags" : [ "JobExecutions" ],
        "description" : "Gets a job execution.",
        "operationId" : "JobExecutions_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The id of the job execution",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecution"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      },
      "put" : {
        "tags" : [ "JobExecutions" ],
        "description" : "Creates or updates a job execution.",
        "operationId" : "JobExecutions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The job execution id to create the job execution under.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A job execution for the job with the given id already existed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecution"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully started an execution for the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecution"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/cancel" : {
      "post" : {
        "tags" : [ "JobExecutions" ],
        "description" : "Requests cancellation of a job execution.",
        "operationId" : "JobExecutions_Cancel",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The id of the job execution to cancel.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully requested cancellation of the job execution."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps" : {
      "get" : {
        "tags" : [ "JobStepExecutions" ],
        "description" : "Lists the step executions of a job execution.",
        "operationId" : "JobStepExecutions_ListByJobExecution",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The id of the job execution",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "createTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions created at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions created before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions completed at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions completed before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "If specified, only active or only completed job executions are included.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "The number of elements in the collection to skip.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of elements to return from the collection.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the step executions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecutionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}" : {
      "get" : {
        "tags" : [ "JobStepExecutions" ],
        "description" : "Gets a step execution of a job execution.",
        "operationId" : "JobStepExecutions_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The unique id of the job execution",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "stepName",
          "in" : "path",
          "description" : "The name of the step.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the step execution.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecution"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets" : {
      "get" : {
        "tags" : [ "JobTargetExecutions" ],
        "description" : "Lists the target executions of a job step execution.",
        "operationId" : "JobTargetExecutions_ListByStep",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The id of the job execution",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "stepName",
          "in" : "path",
          "description" : "The name of the step.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions created at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions created before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions completed at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions completed before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "If specified, only active or only completed job executions are included.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "The number of elements in the collection to skip.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of elements to return from the collection.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the target executions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecutionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets/{targetId}" : {
      "get" : {
        "tags" : [ "JobTargetExecutions" ],
        "description" : "Gets a target execution.",
        "operationId" : "JobTargetExecutions_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The unique id of the job execution",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "stepName",
          "in" : "path",
          "description" : "The name of the step.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetId",
          "in" : "path",
          "description" : "The target id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the target execution.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecution"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/targets" : {
      "get" : {
        "tags" : [ "JobTargetExecutions" ],
        "description" : "Lists target executions for all steps of a job execution.",
        "operationId" : "JobTargetExecutions_ListByJobExecution",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobExecutionId",
          "in" : "path",
          "description" : "The id of the job execution",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "createTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions created at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions created before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMin",
          "in" : "query",
          "description" : "If specified, only job executions completed at or after the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endTimeMax",
          "in" : "query",
          "description" : "If specified, only job executions completed before the specified time are included.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "isActive",
          "in" : "query",
          "description" : "If specified, only active or only completed job executions are included.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "The number of elements in the collection to skip.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The number of elements to return from the collection.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the target executions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecutionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/start" : {
      "post" : {
        "tags" : [ "JobExecutions" ],
        "description" : "Starts an elastic job execution.",
        "operationId" : "JobExecutions_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully started an execution for the job.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobExecution"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps" : {
      "get" : {
        "tags" : [ "JobSteps" ],
        "description" : "Gets all job steps for a job's current version.",
        "operationId" : "JobSteps_ListByJob",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of job steps.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStepListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps/{stepName}" : {
      "get" : {
        "tags" : [ "JobSteps" ],
        "description" : "Gets a job step in a job's current version.",
        "operationId" : "JobSteps_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stepName",
          "in" : "path",
          "description" : "The name of the job step.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the job step.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStep"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      },
      "put" : {
        "tags" : [ "JobSteps" ],
        "description" : "Creates or updates a job step. This will implicitly create a new job version.",
        "operationId" : "JobSteps_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stepName",
          "in" : "path",
          "description" : "The name of the job step.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The requested state of the job step.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobStep"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the job step.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStep"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully added the job step.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStep"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 JobStepIdMismatch - Step Id in the specified Job Step URI does not match step id in provided Job Step Resource.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingJobAccountNameWithUrl - The provided job account name did not match the name in the Url.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "JobSteps" ],
        "description" : "Deletes a job step. This will implicitly create a new job version.",
        "operationId" : "JobSteps_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stepName",
          "in" : "path",
          "description" : "The name of the job step to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the job step."
          },
          "204" : {
            "description" : "The specified job step does not exist."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions" : {
      "get" : {
        "tags" : [ "JobVersions" ],
        "description" : "Gets all versions of a job.",
        "operationId" : "JobVersions_ListByJob",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of versions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobVersionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}" : {
      "get" : {
        "tags" : [ "JobVersions" ],
        "description" : "Gets a job version.",
        "operationId" : "JobVersions_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobVersion",
          "in" : "path",
          "description" : "The version of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the job version.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobVersion"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps" : {
      "get" : {
        "tags" : [ "JobSteps" ],
        "description" : "Gets all job steps in the specified job version.",
        "operationId" : "JobSteps_ListByVersion",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobVersion",
          "in" : "path",
          "description" : "The version of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of job steps.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStepListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps/{stepName}" : {
      "get" : {
        "tags" : [ "JobSteps" ],
        "description" : "Gets the specified version of a job step.",
        "operationId" : "JobSteps_GetByVersion",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "The name of the job.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobVersion",
          "in" : "path",
          "description" : "The version of the job to get.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "stepName",
          "in" : "path",
          "description" : "The name of the job step.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the job step.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobStep"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups" : {
      "get" : {
        "tags" : [ "JobTargetGroups" ],
        "description" : "Gets all target groups in an agent.",
        "operationId" : "JobTargetGroups_ListByAgent",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the list of target groups.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTargetGroupListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}" : {
      "get" : {
        "tags" : [ "JobTargetGroups" ],
        "description" : "Gets a target group.",
        "operationId" : "JobTargetGroups_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetGroupName",
          "in" : "path",
          "description" : "The name of the target group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the target group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTargetGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      },
      "put" : {
        "tags" : [ "JobTargetGroups" ],
        "description" : "Creates or updates a target group.",
        "operationId" : "JobTargetGroups_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetGroupName",
          "in" : "path",
          "description" : "The name of the target group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The requested state of the target group.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobTargetGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the target group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTargetGroup"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully created the target group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTargetGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingJobAccountNameWithUrl - The provided job account name did not match the name in the Url.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "JobTargetGroups" ],
        "description" : "Deletes a target group.",
        "operationId" : "JobTargetGroups_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobAgentName",
          "in" : "path",
          "description" : "The name of the job agent.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetGroupName",
          "in" : "path",
          "description" : "The name of the target group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the target group."
          },
          "204" : {
            "description" : "A target group with the specified name does not exist."
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Job" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobProperties"
          }
        },
        "description" : "A job.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "JobAgent" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobAgentProperties"
          },
          "sku" : {
            "required" : [ "name" ],
            "type" : "object",
            "properties" : {
              "capacity" : {
                "type" : "integer",
                "description" : "Capacity of the particular SKU.",
                "format" : "int32"
              },
              "family" : {
                "type" : "string",
                "description" : "If the service has different generations of hardware, for the same SKU, then that can be captured here."
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the SKU, typically, a letter + Number code, e.g. P3."
              },
              "size" : {
                "type" : "string",
                "description" : "Size of the particular SKU"
              },
              "tier" : {
                "type" : "string",
                "description" : "The tier or edition of the particular SKU, e.g. Basic, Premium."
              }
            },
            "description" : "An ARM Resource SKU."
          }
        },
        "description" : "An Azure SQL job agent.",
        "allOf" : [ {
          "required" : [ "location" ],
          "properties" : {
            "location" : {
              "type" : "string",
              "description" : "Resource location."
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            }
          },
          "description" : "ARM tracked top level resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "JobAgentListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobAgent"
            }
          }
        },
        "description" : "A list of Azure SQL job agents."
      },
      "JobAgentProperties" : {
        "required" : [ "databaseId" ],
        "type" : "object",
        "properties" : {
          "databaseId" : {
            "type" : "string",
            "description" : "Resource ID of the database to store job metadata in."
          },
          "state" : {
            "type" : "string",
            "description" : "The state of the job agent.",
            "readOnly" : true,
            "enum" : [ "Creating", "Ready", "Updating", "Deleting", "Disabled" ]
          }
        },
        "description" : "Properties of a job agent."
      },
      "JobAgentUpdate" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "An update to an Azure SQL job agent."
      },
      "JobCredential" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobCredentialProperties"
          }
        },
        "description" : "A stored credential that can be used by a job to connect to target databases.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "JobCredentialListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobCredential"
            }
          }
        },
        "description" : "A list of job credentials."
      },
      "JobCredentialProperties" : {
        "required" : [ "password", "username" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "The credential password."
          },
          "username" : {
            "type" : "string",
            "description" : "The credential user name."
          }
        },
        "description" : "Properties of a job credential."
      },
      "JobExecution" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobExecutionProperties"
          }
        },
        "description" : "An execution of a job",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "JobExecutionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobExecution"
            }
          }
        },
        "description" : "A list of job executions."
      },
      "JobExecutionProperties" : {
        "type" : "object",
        "properties" : {
          "createTime" : {
            "type" : "string",
            "description" : "The time that the job execution was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "currentAttemptStartTime" : {
            "type" : "string",
            "description" : "Start time of the current attempt.",
            "format" : "date-time",
            "readOnly" : true
          },
          "currentAttempts" : {
            "type" : "integer",
            "description" : "Number of times the job execution has been attempted.",
            "format" : "int32"
          },
          "endTime" : {
            "type" : "string",
            "description" : "The time that the job execution completed.",
            "format" : "date-time",
            "readOnly" : true
          },
          "jobExecutionId" : {
            "type" : "string",
            "description" : "The unique identifier of the job execution.",
            "format" : "uuid",
            "readOnly" : true
          },
          "jobVersion" : {
            "type" : "integer",
            "description" : "The job version number.",
            "format" : "int32",
            "readOnly" : true
          },
          "lastMessage" : {
            "type" : "string",
            "description" : "The last status or error message.",
            "readOnly" : true
          },
          "lifecycle" : {
            "type" : "string",
            "description" : "The detailed state of the job execution.",
            "readOnly" : true,
            "enum" : [ "Created", "InProgress", "WaitingForChildJobExecutions", "WaitingForRetry", "Succeeded", "SucceededWithSkipped", "Failed", "TimedOut", "Canceled", "Skipped" ]
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The ARM provisioning state of the job execution.",
            "readOnly" : true,
            "enum" : [ "Created", "InProgress", "Succeeded", "Failed", "Canceled" ]
          },
          "startTime" : {
            "type" : "string",
            "description" : "The time that the job execution started.",
            "format" : "date-time",
            "readOnly" : true
          },
          "stepId" : {
            "type" : "integer",
            "description" : "The job step id.",
            "format" : "int32",
            "readOnly" : true
          },
          "stepName" : {
            "type" : "string",
            "description" : "The job step name.",
            "readOnly" : true
          },
          "target" : {
            "$ref" : "#/components/schemas/JobExecutionTarget"
          }
        },
        "description" : "Properties for an Azure SQL Database Elastic job execution."
      },
      "JobExecutionTarget" : {
        "type" : "object",
        "properties" : {
          "databaseName" : {
            "type" : "string",
            "description" : "The database name.",
            "readOnly" : true
          },
          "serverName" : {
            "type" : "string",
            "description" : "The server name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the target.",
            "readOnly" : true,
            "enum" : [ "TargetGroup", "SqlDatabase", "SqlElasticPool", "SqlShardMap", "SqlServer" ]
          }
        },
        "description" : "The target that a job execution is executed on."
      },
      "JobListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Job"
            }
          }
        },
        "description" : "A list of jobs."
      },
      "JobProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "User-defined description of the job.",
            "default" : ""
          },
          "schedule" : {
            "$ref" : "#/components/schemas/JobSchedule"
          },
          "version" : {
            "type" : "integer",
            "description" : "The job version number.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Properties of a job."
      },
      "JobSchedule" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether or not the schedule is enabled."
          },
          "endTime" : {
            "type" : "string",
            "description" : "Schedule end time.",
            "format" : "date-time"
          },
          "interval" : {
            "type" : "string",
            "description" : "Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format."
          },
          "startTime" : {
            "type" : "string",
            "description" : "Schedule start time.",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string",
            "description" : "Schedule interval type",
            "default" : "Once",
            "enum" : [ "Once", "Recurring" ]
          }
        },
        "description" : "Scheduling properties of a job."
      },
      "JobStep" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobStepProperties"
          }
        },
        "description" : "A job step.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "JobStepAction" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string",
            "description" : "The source of the action to execute.",
            "default" : "Inline",
            "enum" : [ "Inline" ]
          },
          "type" : {
            "type" : "string",
            "description" : "Type of action being executed by the job step.",
            "default" : "TSql",
            "enum" : [ "TSql" ]
          },
          "value" : {
            "type" : "string",
            "description" : "The action value, for example the text of the T-SQL script to execute."
          }
        },
        "description" : "The action to be executed by a job step."
      },
      "JobStepExecutionOptions" : {
        "type" : "object",
        "properties" : {
          "initialRetryIntervalSeconds" : {
            "type" : "integer",
            "description" : "Initial delay between retries for job step execution.",
            "format" : "int32",
            "default" : 1
          },
          "maximumRetryIntervalSeconds" : {
            "type" : "integer",
            "description" : "The maximum amount of time to wait between retries for job step execution.",
            "format" : "int32",
            "default" : 120
          },
          "retryAttempts" : {
            "type" : "integer",
            "description" : "Maximum number of times the job step will be reattempted if the first attempt fails.",
            "format" : "int32",
            "default" : 10
          },
          "retryIntervalBackoffMultiplier" : {
            "type" : "number",
            "description" : "The backoff multiplier for the time between retries.",
            "format" : "float",
            "default" : 2.0
          },
          "timeoutSeconds" : {
            "type" : "integer",
            "description" : "Execution timeout for the job step.",
            "format" : "int32",
            "default" : 43200
          }
        },
        "description" : "The execution options of a job step."
      },
      "JobStepListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobStep"
            }
          }
        },
        "description" : "A list of job steps."
      },
      "JobStepOutput" : {
        "required" : [ "credential", "databaseName", "serverName", "tableName" ],
        "type" : "object",
        "properties" : {
          "credential" : {
            "type" : "string",
            "description" : "The resource ID of the credential to use to connect to the output destination."
          },
          "databaseName" : {
            "type" : "string",
            "description" : "The output destination database."
          },
          "resourceGroupName" : {
            "type" : "string",
            "description" : "The output destination resource group."
          },
          "schemaName" : {
            "type" : "string",
            "description" : "The output destination schema.",
            "default" : "dbo"
          },
          "serverName" : {
            "type" : "string",
            "description" : "The output destination server name."
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "The output destination subscription id.",
            "format" : "uuid"
          },
          "tableName" : {
            "type" : "string",
            "description" : "The output destination table."
          },
          "type" : {
            "type" : "string",
            "description" : "The output destination type.",
            "default" : "SqlDatabase",
            "enum" : [ "SqlDatabase" ]
          }
        },
        "description" : "The output configuration of a job step."
      },
      "JobStepProperties" : {
        "required" : [ "action", "credential", "targetGroup" ],
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/JobStepAction"
          },
          "credential" : {
            "type" : "string",
            "description" : "The resource ID of the job credential that will be used to connect to the targets."
          },
          "executionOptions" : {
            "$ref" : "#/components/schemas/JobStepExecutionOptions"
          },
          "output" : {
            "$ref" : "#/components/schemas/JobStepOutput"
          },
          "stepId" : {
            "type" : "integer",
            "description" : "The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.",
            "format" : "int32"
          },
          "targetGroup" : {
            "type" : "string",
            "description" : "The resource ID of the target group that the job step will be executed on."
          }
        },
        "description" : "Properties of a job step."
      },
      "JobTarget" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "databaseName" : {
            "type" : "string",
            "description" : "The target database name."
          },
          "elasticPoolName" : {
            "type" : "string",
            "description" : "The target elastic pool name."
          },
          "membershipType" : {
            "type" : "string",
            "description" : "Whether the target is included or excluded from the group.",
            "default" : "Include",
            "enum" : [ "Include", "Exclude" ]
          },
          "refreshCredential" : {
            "type" : "string",
            "description" : "The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target."
          },
          "serverName" : {
            "type" : "string",
            "description" : "The target server name."
          },
          "shardMapName" : {
            "type" : "string",
            "description" : "The target shard map."
          },
          "type" : {
            "type" : "string",
            "description" : "The target type.",
            "enum" : [ "TargetGroup", "SqlDatabase", "SqlElasticPool", "SqlShardMap", "SqlServer" ]
          }
        },
        "description" : "A job target, for example a specific database or a container of databases that is evaluated during job execution."
      },
      "JobTargetGroup" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobTargetGroupProperties"
          }
        },
        "description" : "A group of job targets.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "JobTargetGroupListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobTargetGroup"
            }
          }
        },
        "description" : "A list of target groups."
      },
      "JobTargetGroupProperties" : {
        "required" : [ "members" ],
        "type" : "object",
        "properties" : {
          "members" : {
            "type" : "array",
            "description" : "Members of the target group.",
            "items" : {
              "$ref" : "#/components/schemas/JobTarget"
            }
          }
        },
        "description" : "Properties of job target group."
      },
      "JobVersion" : {
        "description" : "A job version.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "JobVersionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobVersion"
            }
          }
        },
        "description" : "A list of job versions."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for the request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "BlobAuditingPolicyNameParameter" : {
        "name" : "blobAuditingPolicyName",
        "in" : "path",
        "description" : "The name of the blob auditing policy.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "default" ]
        }
      },
      "DatabaseNameParameter" : {
        "name" : "databaseName",
        "in" : "path",
        "description" : "The name of the database.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ManagedInstanceNameParameter" : {
        "name" : "managedInstanceName",
        "in" : "path",
        "description" : "The name of the managed instance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineContainerNameParameter" : {
        "name" : "sqlVirtualMachineContainerName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineContainer.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineInstanceNameParameter" : {
        "name" : "sqlVirtualMachineInstanceName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineInstance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID that identifies an Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "VirtualClusterNameParameter" : {
        "name" : "virtualClusterName",
        "in" : "path",
        "description" : "The name of the virtual cluster.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}