{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Domain Services Resource Provider",
    "description" : "The AAD Domain Services API.",
    "version" : "2017-06-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/providers/Microsoft.AAD/operations" : {
      "get" : {
        "tags" : [ "DomainServices" ],
        "description" : "Lists all the available Domain Services operations.",
        "operationId" : "DomainServiceOperations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HTTP 200 (OK) if the operation was successful.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationEntityListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AAD/domainServices" : {
      "get" : {
        "tags" : [ "DomainServices" ],
        "summary" : "List Domain Services in Subscription",
        "description" : "The List Domain Services in Subscription operation lists all the domain services available under the given subscription (and across all resource groups within that subscription).",
        "operationId" : "DomainServices_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HTTP 200 (OK) if the operation was successful.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainServiceListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices" : {
      "get" : {
        "tags" : [ "DomainServices" ],
        "summary" : "List Domain Services in Resource Group",
        "description" : "The List Domain Services in Resource Group operation lists all the domain services available under the given resource group.",
        "operationId" : "DomainServices_ListByResourceGroup",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HTTP 200 (OK) if the operation was successful.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainServiceListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AAD/domainServices/{domainServiceName}" : {
      "get" : {
        "tags" : [ "DomainServices" ],
        "summary" : "Get Domain Service",
        "description" : "The Get Domain Service operation retrieves a json representation of the Domain Service.",
        "operationId" : "DomainServices_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "domainServiceName",
          "in" : "path",
          "description" : "The name of the domain service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HTTP 200 (OK) if the operation was successful.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainService"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DomainServices" ],
        "summary" : "Create or Update Domain Service (PUT Resource)",
        "description" : "The Create Domain Service operation creates a new domain service with the specified parameters. If the specific service already exists, then any patchable properties will be updated and any immutable properties will remain unchanged.",
        "operationId" : "DomainServices_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "domainServiceName",
          "in" : "path",
          "description" : "The name of the domain service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Properties supplied to the Create or Update a Domain Service operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainService"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "HTTP 200 (OK) if the operation was successful.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainService"
                }
              }
            }
          },
          "201" : {
            "description" : "HTTP 201 (Created) if the operation completed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainService"
                }
              }
            }
          },
          "202" : {
            "description" : "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DomainServices" ],
        "summary" : "Delete Domain Service (DELETE Resource)",
        "description" : "The Delete Domain Service operation deletes an existing Domain Service.",
        "operationId" : "DomainServices_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "domainServiceName",
          "in" : "path",
          "description" : "The name of the domain service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204" : {
            "description" : "HTTP 204 (Not Content) should be used if the resource does not exist and the request is well formed."
          }
        }
      },
      "patch" : {
        "tags" : [ "DomainServices" ],
        "summary" : "Update Domain Service (PATCH Resource)",
        "description" : "The Update Domain Service operation can be used to update the existing deployment. The update call only supports the properties listed in the PATCH body.",
        "operationId" : "DomainServices_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "domainServiceName",
          "in" : "path",
          "description" : "The name of the domain service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Properties supplied to the Update a Domain Service operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DomainService"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "HTTP 200 (OK) if the operation was successful.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainService"
                }
              }
            }
          },
          "202" : {
            "description" : "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainService"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "DomainSecuritySettings" : {
        "type" : "object",
        "properties" : {
          "ntlmV1" : {
            "type" : "string",
            "description" : "A flag to determine whether or not NtlmV1 is enabled or disabled.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "syncNtlmPasswords" : {
            "type" : "string",
            "description" : "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "tlsV1" : {
            "type" : "string",
            "description" : "A flag to determine whether or not TlsV1 is enabled or disabled.",
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "Domain Security Settings"
      },
      "DomainService" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DomainServiceProperties"
          }
        },
        "description" : "Domain service.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DomainServiceListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The continuation token for the next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "the list of domain services.",
            "items" : {
              "$ref" : "#/components/schemas/DomainService"
            }
          }
        },
        "description" : "The response from the List Domain Services operation."
      },
      "DomainServiceProperties" : {
        "type" : "object",
        "properties" : {
          "domainControllerIpAddress" : {
            "type" : "array",
            "description" : "List of Domain Controller IP Address",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "description" : "Domain Controller IP Address"
            }
          },
          "domainName" : {
            "type" : "string",
            "description" : "The name of the Azure domain that the user would like to deploy Domain Services to."
          },
          "domainSecuritySettings" : {
            "$ref" : "#/components/schemas/DomainSecuritySettings"
          },
          "filteredSync" : {
            "type" : "string",
            "description" : "Enabled or Disabled flag to turn on Group-based filtered sync",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "healthAlerts" : {
            "type" : "array",
            "description" : "List of Domain Health Alerts",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/HealthAlert"
            }
          },
          "healthLastEvaluated" : {
            "type" : "string",
            "description" : "Last domain evaluation run DateTime",
            "format" : "date-time",
            "readOnly" : true
          },
          "healthMonitors" : {
            "type" : "array",
            "description" : "List of Domain Health Monitors",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/HealthMonitor"
            }
          },
          "ldapsSettings" : {
            "$ref" : "#/components/schemas/LdapsSettings"
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettings"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "the current deployment or provisioning state, which only appears in the response.",
            "readOnly" : true
          },
          "serviceStatus" : {
            "type" : "string",
            "description" : "Status of Domain Service instance",
            "readOnly" : true
          },
          "subnetId" : {
            "type" : "string",
            "description" : "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "Azure Active Directory tenant id",
            "readOnly" : true
          },
          "vnetSiteId" : {
            "type" : "string",
            "description" : "Virtual network site id",
            "readOnly" : true
          }
        },
        "description" : "Properties of the Domain Service."
      },
      "HealthAlert" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Health Alert Id",
            "readOnly" : true
          },
          "issue" : {
            "type" : "string",
            "description" : "Health Alert Issue",
            "readOnly" : true
          },
          "lastDetected" : {
            "type" : "string",
            "description" : "Health Alert Last Detected DateTime",
            "format" : "date-time",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Health Alert Name",
            "readOnly" : true
          },
          "raised" : {
            "type" : "string",
            "description" : "Health Alert Raised DateTime",
            "format" : "date-time",
            "readOnly" : true
          },
          "resolutionUri" : {
            "type" : "string",
            "description" : "Health Alert TSG Link",
            "readOnly" : true
          },
          "severity" : {
            "type" : "string",
            "description" : "Health Alert Severity",
            "readOnly" : true
          }
        },
        "description" : "Health Alert Description"
      },
      "HealthMonitor" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "string",
            "description" : "Health Monitor Details",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "Health Monitor Id",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Health Monitor Name",
            "readOnly" : true
          }
        },
        "description" : "Health Monitor Description"
      },
      "LdapsSettings" : {
        "type" : "object",
        "properties" : {
          "certificateNotAfter" : {
            "type" : "string",
            "description" : "NotAfter DateTime of configure ldaps certificate.",
            "format" : "date-time",
            "readOnly" : true
          },
          "certificateThumbprint" : {
            "type" : "string",
            "description" : "Thumbprint of configure ldaps certificate.",
            "readOnly" : true
          },
          "externalAccess" : {
            "type" : "string",
            "description" : "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "externalAccessIpAddress" : {
            "type" : "string",
            "description" : "External access ip address.",
            "readOnly" : true
          },
          "ldaps" : {
            "type" : "string",
            "description" : "A flag to determine whether or not Secure LDAP is enabled or disabled.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "pfxCertificate" : {
            "type" : "string",
            "description" : "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file."
          },
          "pfxCertificatePassword" : {
            "type" : "string",
            "description" : "The password to decrypt the provided Secure LDAP certificate pfx file."
          },
          "publicCertificate" : {
            "type" : "string",
            "description" : "Public certificate used to configure secure ldap.",
            "readOnly" : true
          }
        },
        "description" : "Secure LDAP Settings"
      },
      "NotificationSettings" : {
        "type" : "object",
        "properties" : {
          "additionalRecipients" : {
            "type" : "array",
            "description" : "The list of additional recipients",
            "items" : {
              "type" : "string",
              "description" : "Email address for additional recipient"
            }
          },
          "notifyDcAdmins" : {
            "type" : "string",
            "description" : "Should domain controller admins be notified",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "notifyGlobalAdmins" : {
            "type" : "string",
            "description" : "Should global admins be notified",
            "enum" : [ "Enabled", "Disabled" ]
          }
        },
        "description" : "Settings for notification"
      },
      "OperationDisplayInfo" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the operation."
          },
          "operation" : {
            "type" : "string",
            "description" : "The action that users can perform, based on their permission level."
          },
          "provider" : {
            "type" : "string",
            "description" : "Service provider: Domain Services."
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource on which the operation is performed."
          }
        },
        "description" : "The operation supported by Domain Services."
      },
      "OperationEntity" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplayInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}."
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the operation."
          }
        },
        "description" : "The operation supported by Domain Services."
      },
      "OperationEntityListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The continuation token for the next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of operations.",
            "items" : {
              "$ref" : "#/components/schemas/OperationEntity"
            }
          }
        },
        "description" : "The list of domain service operation response."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Resource etag"
          },
          "id" : {
            "type" : "string",
            "description" : "Resource Id",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Resource location"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags"
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "readOnly" : true
          }
        },
        "description" : "The Resource model definition."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client Api Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "DomainServiceNameParameter" : {
        "name" : "domainServiceName",
        "in" : "path",
        "description" : "The name of the domain service.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group within the user's subscription. The name is case insensitive.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[-\\w\\._\\(\\)]+$",
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}