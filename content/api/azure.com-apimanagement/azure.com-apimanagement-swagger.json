{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ApiManagementClient",
    "description" : "Use these REST APIs for performing operations on entities like API, Product, and Subscription associated with your Azure API Management deployment.",
    "version" : "2018-01-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "Lists all the Global Policy definitions of the Api Management service.",
        "operationId" : "Policy_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Policy scope.",
          "schema" : {
            "type" : "string",
            "enum" : [ "Tenant", "Product", "Api", "Operation", "All" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an array of Policy Contracts.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyCollection"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "description" : "Get the Global policy definition of the Api Management service.",
        "operationId" : "Policy_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the Policy Contracts.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyContract"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy" ],
        "description" : "Creates or updates the global policy configuration of the Api Management service.",
        "operationId" : "Policy_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The policy contents to apply.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyContract"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Global policy configuration of the Api Management service was successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyContract"
                }
              }
            }
          },
          "201" : {
            "description" : "Global policy configuration was successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyContract"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "description" : "Deletes the global policy configuration of the Api Management Service.",
        "operationId" : "Policy_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the policy configuration at the Global level."
          },
          "204" : {
            "description" : "Successfully deleted the policy configuration at the Global level."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Policy" ],
        "description" : "Gets the entity state (Etag) version of the Global policy definition in the Api Management service.",
        "operationId" : "Policy_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policySnippets" : {
      "get" : {
        "tags" : [ "PolicySnippets" ],
        "description" : "Lists all policy snippets.",
        "operationId" : "PolicySnippets_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Policy scope.",
          "schema" : {
            "type" : "string",
            "enum" : [ "Tenant", "Product", "Api", "Operation", "All" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an array of Policy Contracts.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicySnippetsCollection"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions" : {
      "get" : {
        "tags" : [ "Regions" ],
        "description" : "Lists all azure regions in which the service exists.",
        "operationId" : "Regions_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lists of Regions in which the service is deployed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionListResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorFieldContract" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Property level error code."
          },
          "message" : {
            "type" : "string",
            "description" : "Human-readable representation of property-level error."
          },
          "target" : {
            "type" : "string",
            "description" : "Property name."
          }
        },
        "description" : "Error Field contract."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
              },
              "details" : {
                "type" : "array",
                "description" : "The list of invalid fields send in request, in case of validation error.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "string",
                      "description" : "Property level error code."
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "Human-readable representation of property-level error."
                    },
                    "target" : {
                      "type" : "string",
                      "description" : "Property name."
                    }
                  },
                  "description" : "Error Field contract."
                }
              },
              "message" : {
                "type" : "string",
                "description" : "Human-readable representation of the error."
              }
            },
            "description" : "Error Body contract."
          }
        },
        "description" : "Error Response."
      },
      "ErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
          },
          "details" : {
            "type" : "array",
            "description" : "The list of invalid fields send in request, in case of validation error.",
            "items" : {
              "type" : "object",
              "properties" : {
                "code" : {
                  "type" : "string",
                  "description" : "Property level error code."
                },
                "message" : {
                  "type" : "string",
                  "description" : "Human-readable representation of property-level error."
                },
                "target" : {
                  "type" : "string",
                  "description" : "Property name."
                }
              },
              "description" : "Error Field contract."
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Human-readable representation of the error."
          }
        },
        "description" : "Error Body contract."
      },
      "PolicyCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Next page link if any."
          },
          "value" : {
            "type" : "array",
            "description" : "Policy Contract value.",
            "items" : {
              "$ref" : "#/components/schemas/PolicyContract"
            }
          }
        },
        "description" : "The response of the list policy operation."
      },
      "PolicyContract" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PolicyContractProperties"
          }
        },
        "description" : "Policy Contract details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "PolicyContractProperties" : {
        "required" : [ "policyContent" ],
        "type" : "object",
        "properties" : {
          "contentFormat" : {
            "type" : "string",
            "description" : "Format of the policyContent.",
            "default" : "xml",
            "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
          },
          "policyContent" : {
            "type" : "string",
            "description" : "Json escaped Xml Encoded contents of the Policy."
          }
        },
        "description" : "Policy contract Properties."
      },
      "PolicySnippetContract" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Snippet content.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Snippet name.",
            "readOnly" : true
          },
          "scope" : {
            "type" : "integer",
            "description" : "Binary OR value of the Snippet scope.",
            "readOnly" : true
          },
          "toolTip" : {
            "type" : "string",
            "description" : "Snippet toolTip.",
            "readOnly" : true
          }
        },
        "description" : "Policy snippet."
      },
      "PolicySnippetsCollection" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Policy snippet value.",
            "items" : {
              "$ref" : "#/components/schemas/PolicySnippetContract"
            }
          }
        },
        "description" : "The response of the list policy snippets operation."
      },
      "RegionContract" : {
        "type" : "object",
        "properties" : {
          "isDeleted" : {
            "type" : "boolean",
            "description" : "whether Region is deleted."
          },
          "isMasterRegion" : {
            "type" : "boolean",
            "description" : "whether Region is the master region."
          },
          "name" : {
            "type" : "string",
            "description" : "Region name.",
            "readOnly" : true
          }
        },
        "description" : "Region profile."
      },
      "RegionListResult" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "Total record count number across all pages.",
            "format" : "int64"
          },
          "nextLink" : {
            "type" : "string",
            "description" : "Next page link if any."
          },
          "value" : {
            "type" : "array",
            "description" : "Lists of Regions.",
            "items" : {
              "$ref" : "#/components/schemas/RegionContract"
            }
          }
        },
        "description" : "Lists Regions operation response details."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type for API Management resource.",
            "readOnly" : true
          }
        },
        "description" : "The Resource definition."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Version of the API to be used with the client request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "IfMatchOptionalParameter" : {
        "name" : "If-Match",
        "in" : "header",
        "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
        "schema" : {
          "type" : "string"
        }
      },
      "IfMatchRequiredParameter" : {
        "name" : "If-Match",
        "in" : "header",
        "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "PolicyIdParameter" : {
        "name" : "policyId",
        "in" : "path",
        "description" : "The identifier of the Policy.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "policy" ]
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ServiceNameParameter" : {
        "name" : "serviceName",
        "in" : "path",
        "description" : "The name of the API Management service.",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
          "type" : "string"
        }
      },
      "SkipQueryParameter" : {
        "name" : "$skip",
        "in" : "query",
        "description" : "Number of records to skip.",
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "TopQueryParameter" : {
        "name" : "$top",
        "in" : "query",
        "description" : "Number of records to return.",
        "schema" : {
          "minimum" : 1,
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}