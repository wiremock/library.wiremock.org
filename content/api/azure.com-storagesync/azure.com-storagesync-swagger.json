{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Microsoft Storage Sync",
    "description" : "Microsoft Storage Sync Service API",
    "version" : "2019-03-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.StorageSync/operations" : {
      "get" : {
        "tags" : [ "ResourceProvider", "Operations" ],
        "description" : "Lists all of the available Storage Sync Rest API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of operations resources in the Resource Provider",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationEntityListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageSync/locations/{locationName}/checkNameAvailability" : {
      "post" : {
        "tags" : [ "StorageSyncService" ],
        "description" : "Check the give namespace name availability.",
        "operationId" : "StorageSyncServices_CheckNameAvailability",
        "parameters" : [ {
          "name" : "locationName",
          "in" : "path",
          "description" : "The desired region for the name check.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to check availability of the given namespace name",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "check availability returned successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckNameAvailabilityResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageSync/storageSyncServices" : {
      "get" : {
        "tags" : [ "StorageSyncServices Resource" ],
        "description" : "Get a StorageSyncService list by subscription.",
        "operationId" : "StorageSyncServices_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of registered Storage Sync Service resources in the subscription.",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncServiceArray"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/locations/{locationName}/workflows/{workflowId}/operations/{operationId}" : {
      "get" : {
        "tags" : [ "Operation Status" ],
        "description" : "Get Operation status",
        "operationId" : "OperationStatus_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "locationName",
          "in" : "path",
          "description" : "The desired region to obtain information from.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "description" : "workflow Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "operationId",
          "in" : "path",
          "description" : "operation Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operation Status",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices" : {
      "get" : {
        "tags" : [ "StorageSyncServices Resource" ],
        "description" : "Get a StorageSyncService list by Resource group name.",
        "operationId" : "StorageSyncServices_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of registered Storage Sync Service resources in the Resource Group",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncServiceArray"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}" : {
      "get" : {
        "tags" : [ "StorageSyncServices Resource" ],
        "description" : "Get a given StorageSyncService.",
        "operationId" : "StorageSyncServices_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Storage Sync Service object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncService"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "StorageSyncServices Resource" ],
        "description" : "Create a new StorageSyncService.",
        "operationId" : "StorageSyncServices_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Storage Sync Service resource name.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageSyncServiceCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Storage Sync Service object created/updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncService"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "StorageSyncServices Resource" ],
        "description" : "Delete a given StorageSyncService.",
        "operationId" : "StorageSyncServices_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Storage Sync Service object was deleted.",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "Storage Sync Service Resource doesn't exist"
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "StorageSyncServices Resource" ],
        "description" : "Patch a given StorageSyncService.",
        "operationId" : "StorageSyncServices_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Storage Sync Service resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageSyncServiceUpdateParameters"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Storage Sync Service object created/updated",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncService"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/registeredServers" : {
      "get" : {
        "tags" : [ "RegisteredServer Resource" ],
        "description" : "Get a given registered server list.",
        "operationId" : "RegisteredServers_ListByStorageSyncService",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of Registered Server resources in Storage Sync Service",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisteredServerArray"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/registeredServers/{serverId}" : {
      "get" : {
        "tags" : [ "RegisteredServer Resource" ],
        "description" : "Get a given registered server.",
        "operationId" : "RegisteredServers_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverId",
          "in" : "path",
          "description" : "GUID identifying the on-premises server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Registered Server resources in Sync Group",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisteredServer"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RegisteredServer Resource" ],
        "description" : "Add a new registered server.",
        "operationId" : "RegisteredServers_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverId",
          "in" : "path",
          "description" : "GUID identifying the on-premises server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Registered Server object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisteredServerCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Registered Server resources in Sync Group",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisteredServer"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "Azure-AsyncOperation" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RegisteredServer Resource" ],
        "description" : "Delete the given registered server.",
        "operationId" : "RegisteredServers_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverId",
          "in" : "path",
          "description" : "GUID identifying the on-premises server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "Resource doesn't exist"
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/registeredServers/{serverId}/triggerRollover" : {
      "post" : {
        "tags" : [ "RegisteredServer Resource", "Actions" ],
        "description" : "Triggers Server certificate rollover.",
        "operationId" : "RegisteredServers_triggerRollover",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverId",
          "in" : "path",
          "description" : "Server Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Trigger Rollover request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TriggerRolloverRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Trigger Rollover success status",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups" : {
      "get" : {
        "tags" : [ "SyncGroup Resource" ],
        "description" : "Get a SyncGroup List.",
        "operationId" : "SyncGroups_ListByStorageSyncService",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of Sync Group resources in Storage Sync Service",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncGroupArray"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}" : {
      "get" : {
        "tags" : [ "SyncGroup Resource" ],
        "description" : "Get a given SyncGroup.",
        "operationId" : "SyncGroups_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Sync Group object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "SyncGroup Resource" ],
        "description" : "Create a new SyncGroup.",
        "operationId" : "SyncGroups_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Sync Group Body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyncGroupCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Sync Group object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyncGroup"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SyncGroup Resource" ],
        "description" : "Delete a given SyncGroup.",
        "operationId" : "SyncGroups_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Sync Group object was deleted",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "Request id",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "Resource doesn't exist"
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints" : {
      "get" : {
        "tags" : [ "CloudEndpoint Resource" ],
        "description" : "Get a CloudEndpoint List.",
        "operationId" : "CloudEndpoints_ListBySyncGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of Cloud Endpoint resources in Sync Group",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudEndpointArray"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}" : {
      "get" : {
        "tags" : [ "CloudEndpoint Resource" ],
        "description" : "Get a given CloudEndpoint.",
        "operationId" : "CloudEndpoints_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Cloud Endpoint object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudEndpoint"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "CloudEndpoint Resource" ],
        "description" : "Create a new CloudEndpoint.",
        "operationId" : "CloudEndpoints_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Cloud Endpoint resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CloudEndpointCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Cloud Endpoint object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudEndpoint"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "Retry-After" : {
                "description" : "Retry After",
                "schema" : {
                  "type" : "string"
                }
              },
              "Azure-AsyncOperation" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-request-id" : {
                "description" : "Request id",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CloudEndpoint Resource" ],
        "description" : "Delete a given CloudEndpoint.",
        "operationId" : "CloudEndpoints_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "Retry-After" : {
                "description" : "Retry After",
                "schema" : {
                  "type" : "string"
                }
              },
              "Azure-AsyncOperation" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-request-id" : {
                "description" : "Request id",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "204" : {
            "description" : "Resource doesn't exist"
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/postbackup" : {
      "post" : {
        "tags" : [ "CloudEndpoint Resource", "Actions", "Backup Restore" ],
        "description" : "Post Backup a given CloudEndpoint.",
        "operationId" : "CloudEndpoints_PostBackup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Backup request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostBackupResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/postrestore" : {
      "post" : {
        "tags" : [ "CloudEndpoint Resource", "Actions", "Backup Restore" ],
        "description" : "Post Restore a given CloudEndpoint.",
        "operationId" : "CloudEndpoints_PostRestore",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Cloud Endpoint object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostRestoreRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/prebackup" : {
      "post" : {
        "tags" : [ "CloudEndpoint Resource", "Actions", "Backup Restore" ],
        "description" : "Pre Backup a given CloudEndpoint.",
        "operationId" : "CloudEndpoints_PreBackup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Backup request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BackupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/prerestore" : {
      "post" : {
        "tags" : [ "CloudEndpoint Resource", "Actions", "Backup Restore" ],
        "description" : "Pre Restore a given CloudEndpoint.",
        "operationId" : "CloudEndpoints_PreRestore",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Cloud Endpoint object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PreRestoreRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/restoreheartbeat" : {
      "post" : {
        "tags" : [ "CloudEndpoint Resource", "Actions", "Backup Restore" ],
        "description" : "Restore Heartbeat a given CloudEndpoint.",
        "operationId" : "CloudEndpoints_restoreheartbeat",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Restore Heartbeat Operation has ran successfully.",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/cloudEndpoints/{cloudEndpointName}/triggerChangeDetection" : {
      "post" : {
        "tags" : [ "CloudEndpoint Resource", "Actions", "Change Detection" ],
        "description" : "Triggers detection of changes performed on Azure File share connected to the specified Azure File Sync Cloud Endpoint.",
        "operationId" : "CloudEndpoints_TriggerChangeDetection",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cloudEndpointName",
          "in" : "path",
          "description" : "Name of Cloud Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Trigger Change Detection Action parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TriggerChangeDetectionParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok"
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/serverEndpoints" : {
      "get" : {
        "tags" : [ "ServerEndpoint Resource" ],
        "description" : "Get a ServerEndpoint list.",
        "operationId" : "ServerEndpoints_ListBySyncGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of Server Endpoint resources in Sync Group",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerEndpointArray"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/serverEndpoints/{serverEndpointName}" : {
      "get" : {
        "tags" : [ "ServerEndpoint Resource" ],
        "description" : "Get a ServerEndpoint.",
        "operationId" : "ServerEndpoints_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverEndpointName",
          "in" : "path",
          "description" : "Name of Server Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Server Endpoint object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerEndpoint"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ServerEndpoint Resource" ],
        "description" : "Create a new ServerEndpoint.",
        "operationId" : "ServerEndpoints_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverEndpointName",
          "in" : "path",
          "description" : "Name of Server Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Server Endpoint object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerEndpointCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Server Endpoint object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerEndpoint"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "Azure-AsyncOperation" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ServerEndpoint Resource" ],
        "description" : "Delete a given ServerEndpoint.",
        "operationId" : "ServerEndpoints_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverEndpointName",
          "in" : "path",
          "description" : "Name of Server Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ServerEndpoint Resource" ],
        "description" : "Patch a given ServerEndpoint.",
        "operationId" : "ServerEndpoints_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverEndpointName",
          "in" : "path",
          "description" : "Name of Server Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Any of the properties applicable in PUT request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerEndpointUpdateParameters"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Server Endpoint object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerEndpoint"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "Azure-AsyncOperation" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/syncGroups/{syncGroupName}/serverEndpoints/{serverEndpointName}/recallAction" : {
      "post" : {
        "tags" : [ "ServerEndpoint Resource", "Actions" ],
        "description" : "Recall a server endpoint.",
        "operationId" : "ServerEndpoints_recallAction",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "syncGroupName",
          "in" : "path",
          "description" : "Name of Sync Group resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverEndpointName",
          "in" : "path",
          "description" : "Name of Server Endpoint object.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Body of Recall Action object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecallActionParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Server Endpoint object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "202" : {
            "description" : "Asynchronous Operation Status Location",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "Location" : {
                "description" : "Operation Status Location URI",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows" : {
      "get" : {
        "tags" : [ "Workflow Resource" ],
        "description" : "Get a Workflow List",
        "operationId" : "Workflows_ListByStorageSyncService",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of Workflow resources in Storage Sync Service",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowArray"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows/{workflowId}" : {
      "get" : {
        "tags" : [ "Workflow Resource" ],
        "description" : "Get Workflows resource",
        "operationId" : "Workflows_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "description" : "workflow Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Workflow object",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Workflow"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageSync/storageSyncServices/{storageSyncServiceName}/workflows/{workflowId}/abort" : {
      "post" : {
        "tags" : [ "Workflow Resource", "Actions" ],
        "description" : "Abort the given workflow.",
        "operationId" : "Workflows_Abort",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "storageSyncServiceName",
          "in" : "path",
          "description" : "Name of Storage Sync Service resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "description" : "workflow Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "headers" : {
              "x-ms-request-id" : {
                "description" : "request id.",
                "schema" : {
                  "type" : "string"
                }
              },
              "x-ms-correlation-request-id" : {
                "description" : "correlation request id.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error message indicating why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageSyncError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BackupRequest" : {
        "type" : "object",
        "properties" : {
          "azureFileShare" : {
            "type" : "string",
            "description" : "Azure File Share."
          }
        },
        "description" : "Backup request"
      },
      "CheckNameAvailabilityParameters" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name to check for availability"
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type. Must be set to Microsoft.StorageSync/storageSyncServices",
            "enum" : [ "Microsoft.StorageSync/storageSyncServices" ]
          }
        },
        "description" : "Parameters for a check name availability request."
      },
      "CheckNameAvailabilityResult" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Gets an error message explaining the Reason value in more detail.",
            "readOnly" : true
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "Gets the reason that a Storage Sync Service name could not be used. The Reason element is only returned if NameAvailable is false.",
            "readOnly" : true,
            "enum" : [ "Invalid", "AlreadyExists" ]
          }
        },
        "description" : "The CheckNameAvailability operation response."
      },
      "CloudEndpoint" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CloudEndpointProperties"
          }
        },
        "description" : "Cloud Endpoint object.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "CloudEndpointArray" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Collection of CloudEndpoint.",
            "items" : {
              "$ref" : "#/components/schemas/CloudEndpoint"
            }
          }
        },
        "description" : "Array of CloudEndpoint"
      },
      "CloudEndpointCreateParameters" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CloudEndpointCreateParametersProperties"
          }
        },
        "description" : "The parameters used when creating a cloud endpoint.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "CloudEndpointCreateParametersProperties" : {
        "type" : "object",
        "properties" : {
          "azureFileShareName" : {
            "type" : "string",
            "description" : "Azure file share name"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly Name"
          },
          "storageAccountResourceId" : {
            "type" : "string",
            "description" : "Storage Account Resource Id"
          },
          "storageAccountTenantId" : {
            "type" : "string",
            "description" : "Storage Account Tenant Id"
          }
        },
        "description" : "CloudEndpoint Properties object."
      },
      "CloudEndpointProperties" : {
        "type" : "object",
        "properties" : {
          "azureFileShareName" : {
            "type" : "string",
            "description" : "Azure file share name"
          },
          "backupEnabled" : {
            "type" : "string",
            "description" : "Backup Enabled",
            "readOnly" : true
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly Name"
          },
          "lastOperationName" : {
            "type" : "string",
            "description" : "Resource Last Operation Name"
          },
          "lastWorkflowId" : {
            "type" : "string",
            "description" : "CloudEndpoint lastWorkflowId"
          },
          "partnershipId" : {
            "type" : "string",
            "description" : "Partnership Id"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "CloudEndpoint Provisioning State"
          },
          "storageAccountResourceId" : {
            "type" : "string",
            "description" : "Storage Account Resource Id"
          },
          "storageAccountTenantId" : {
            "type" : "string",
            "description" : "Storage Account Tenant Id"
          }
        },
        "description" : "CloudEndpoint Properties object."
      },
      "FeatureStatus" : {
        "type" : "string",
        "description" : "Type of the Feature Status",
        "enum" : [ "on", "off" ]
      },
      "FilesNotSyncingError" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "integer",
            "description" : "Error code (HResult)",
            "format" : "int32",
            "readOnly" : true
          },
          "persistentCount" : {
            "type" : "integer",
            "description" : "Count of persistent files not syncing with the specified error code",
            "format" : "int64",
            "readOnly" : true
          },
          "transientCount" : {
            "type" : "integer",
            "description" : "Count of transient files not syncing with the specified error code",
            "format" : "int64",
            "readOnly" : true
          }
        },
        "description" : "Files not syncing error object"
      },
      "HealthState" : {
        "type" : "string",
        "description" : "Type of the Health state",
        "enum" : [ "Healthy", "Error", "SyncBlockedForRestore", "SyncBlockedForChangeDetectionPostRestore", "NoActivity" ]
      },
      "OfflineDataTransferState" : {
        "type" : "string",
        "description" : "Type of the Health state",
        "enum" : [ "InProgress", "Stopping", "NotRunning", "Complete" ]
      },
      "OperationDirection" : {
        "type" : "string",
        "description" : "Type of the Operation Direction",
        "enum" : [ "do", "undo", "cancel" ]
      },
      "OperationDisplayInfo" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the operation."
          },
          "operation" : {
            "type" : "string",
            "description" : "The action that users can perform, based on their permission level."
          },
          "provider" : {
            "type" : "string",
            "description" : "Service provider: Microsoft StorageSync."
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource on which the operation is performed."
          }
        },
        "description" : "The operation supported by storage sync."
      },
      "OperationDisplayResource" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Operation Display Resource Description."
          },
          "operation" : {
            "type" : "string",
            "description" : "Operation Display Resource Operation."
          },
          "provider" : {
            "type" : "string",
            "description" : "Operation Display Resource Provider."
          },
          "resource" : {
            "type" : "string",
            "description" : "Operation Display Resource."
          }
        },
        "description" : "Operation Display Resource object."
      },
      "OperationEntity" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplayInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}."
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin."
          }
        },
        "description" : "The operation supported by storage sync."
      },
      "OperationEntityListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link used to get the next page of operations."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of operations.",
            "items" : {
              "$ref" : "#/components/schemas/OperationEntity"
            }
          }
        },
        "description" : "The list of storage sync operations."
      },
      "OperationStatus" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "End time of the operation",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/StorageSyncApiError"
          },
          "name" : {
            "type" : "string",
            "description" : "Operation Id",
            "readOnly" : true
          },
          "startTime" : {
            "type" : "string",
            "description" : "Start time of the operation",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Operation status",
            "readOnly" : true
          }
        },
        "description" : "Operation status object"
      },
      "PhysicalPath" : {
        "type" : "string",
        "description" : "Server folder used for data synchronization"
      },
      "PostBackupResponse" : {
        "type" : "object",
        "properties" : {
          "backupMetadata" : {
            "$ref" : "#/components/schemas/PostBackupResponseProperties"
          }
        },
        "description" : "Post Backup Response"
      },
      "PostBackupResponseProperties" : {
        "type" : "object",
        "properties" : {
          "cloudEndpointName" : {
            "type" : "string",
            "description" : "cloud endpoint Name.",
            "readOnly" : true
          }
        },
        "description" : "Post Backup Response Properties object."
      },
      "PostRestoreRequest" : {
        "type" : "object",
        "properties" : {
          "azureFileShareUri" : {
            "type" : "string",
            "description" : "Post Restore Azure file share uri."
          },
          "failedFileList" : {
            "type" : "string",
            "description" : "Post Restore Azure failed file list."
          },
          "partition" : {
            "type" : "string",
            "description" : "Post Restore partition."
          },
          "replicaGroup" : {
            "type" : "string",
            "description" : "Post Restore replica group."
          },
          "requestId" : {
            "type" : "string",
            "description" : "Post Restore request id."
          },
          "restoreFileSpec" : {
            "type" : "array",
            "description" : "Post Restore restore file spec array.",
            "items" : {
              "$ref" : "#/components/schemas/RestoreFileSpec"
            }
          },
          "sourceAzureFileShareUri" : {
            "type" : "string",
            "description" : "Post Restore Azure source azure file share uri."
          },
          "status" : {
            "type" : "string",
            "description" : "Post Restore Azure status."
          }
        },
        "description" : "Post Restore Request"
      },
      "PreRestoreRequest" : {
        "type" : "object",
        "properties" : {
          "azureFileShareUri" : {
            "type" : "string",
            "description" : "Pre Restore Azure file share uri."
          },
          "backupMetadataPropertyBag" : {
            "type" : "string",
            "description" : "Pre Restore backup metadata property bag."
          },
          "partition" : {
            "type" : "string",
            "description" : "Pre Restore partition."
          },
          "pauseWaitForSyncDrainTimePeriodInSeconds" : {
            "type" : "integer",
            "description" : "Pre Restore pause wait for sync drain time period in seconds."
          },
          "replicaGroup" : {
            "type" : "string",
            "description" : "Pre Restore replica group."
          },
          "requestId" : {
            "type" : "string",
            "description" : "Pre Restore request id."
          },
          "restoreFileSpec" : {
            "type" : "array",
            "description" : "Pre Restore restore file spec array.",
            "items" : {
              "$ref" : "#/components/schemas/RestoreFileSpec"
            }
          },
          "sourceAzureFileShareUri" : {
            "type" : "string",
            "description" : "Pre Restore Azure source azure file share uri."
          },
          "status" : {
            "type" : "string",
            "description" : "Pre Restore Azure status."
          }
        },
        "description" : "Pre Restore request object."
      },
      "ProgressType" : {
        "type" : "string",
        "description" : "Type of the ProgressType",
        "enum" : [ "none", "initialize", "download", "upload", "recall" ]
      },
      "RecallActionParameters" : {
        "type" : "object",
        "properties" : {
          "pattern" : {
            "type" : "string",
            "description" : "Pattern of the files."
          },
          "recallPath" : {
            "type" : "string",
            "description" : "Recall path."
          }
        },
        "description" : "The parameters used when calling recall action on server endpoint."
      },
      "RegisteredServer" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RegisteredServerProperties"
          }
        },
        "description" : "Registered Server resource.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "RegisteredServerArray" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Collection of Registered Server.",
            "items" : {
              "$ref" : "#/components/schemas/RegisteredServer"
            }
          }
        },
        "description" : "Array of RegisteredServer"
      },
      "RegisteredServerCreateParameters" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RegisteredServerCreateParametersProperties"
          }
        },
        "description" : "The parameters used when creating a registered server.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "RegisteredServerCreateParametersProperties" : {
        "type" : "object",
        "properties" : {
          "agentVersion" : {
            "type" : "string",
            "description" : "Registered Server Agent Version"
          },
          "clusterId" : {
            "type" : "string",
            "description" : "Registered Server clusterId"
          },
          "clusterName" : {
            "type" : "string",
            "description" : "Registered Server clusterName"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly Name"
          },
          "lastHeartBeat" : {
            "type" : "string",
            "description" : "Registered Server last heart beat"
          },
          "serverCertificate" : {
            "type" : "string",
            "description" : "Registered Server Certificate"
          },
          "serverId" : {
            "type" : "string",
            "description" : "Registered Server serverId"
          },
          "serverOSVersion" : {
            "type" : "string",
            "description" : "Registered Server OS Version"
          },
          "serverRole" : {
            "type" : "string",
            "description" : "Registered Server serverRole"
          }
        }
      },
      "RegisteredServerProperties" : {
        "type" : "object",
        "properties" : {
          "agentVersion" : {
            "type" : "string",
            "description" : "Registered Server Agent Version"
          },
          "clusterId" : {
            "type" : "string",
            "description" : "Registered Server clusterId"
          },
          "clusterName" : {
            "type" : "string",
            "description" : "Registered Server clusterName"
          },
          "discoveryEndpointUri" : {
            "type" : "string",
            "description" : "Resource discoveryEndpointUri"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly Name"
          },
          "lastHeartBeat" : {
            "type" : "string",
            "description" : "Registered Server last heart beat"
          },
          "lastOperationName" : {
            "type" : "string",
            "description" : "Resource Last Operation Name"
          },
          "lastWorkflowId" : {
            "type" : "string",
            "description" : "Registered Server lastWorkflowId"
          },
          "managementEndpointUri" : {
            "type" : "string",
            "description" : "Management Endpoint Uri"
          },
          "monitoringConfiguration" : {
            "type" : "string",
            "description" : "Monitoring Configuration"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Registered Server Provisioning State"
          },
          "resourceLocation" : {
            "type" : "string",
            "description" : "Resource Location"
          },
          "serverCertificate" : {
            "type" : "string",
            "description" : "Registered Server Certificate"
          },
          "serverId" : {
            "type" : "string",
            "description" : "Registered Server serverId"
          },
          "serverManagementErrorCode" : {
            "type" : "integer",
            "description" : "Registered Server Management Error Code"
          },
          "serverOSVersion" : {
            "type" : "string",
            "description" : "Registered Server OS Version"
          },
          "serverRole" : {
            "type" : "string",
            "description" : "Registered Server serverRole"
          },
          "serviceLocation" : {
            "type" : "string",
            "description" : "Service Location"
          },
          "storageSyncServiceUid" : {
            "type" : "string",
            "description" : "Registered Server storageSyncServiceUid"
          }
        },
        "description" : "RegisteredServer Properties object."
      },
      "ResourceId" : {
        "type" : "string",
        "description" : "Arm resource identifier."
      },
      "ResourcesMoveInfo" : {
        "type" : "object",
        "properties" : {
          "resources" : {
            "type" : "array",
            "description" : "Collection of Resources.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceId"
            }
          },
          "targetResourceGroup" : {
            "type" : "string",
            "description" : "Target resource group."
          }
        },
        "description" : "Resource Move Info."
      },
      "RestoreFileSpec" : {
        "type" : "object",
        "properties" : {
          "isdir" : {
            "type" : "boolean",
            "description" : "Restore file spec isdir",
            "readOnly" : true
          },
          "path" : {
            "type" : "string",
            "description" : "Restore file spec path"
          }
        },
        "description" : "Restore file spec."
      },
      "ServerEndpoint" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServerEndpointProperties"
          }
        },
        "description" : "Server Endpoint object.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "ServerEndpointArray" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Collection of ServerEndpoint.",
            "items" : {
              "$ref" : "#/components/schemas/ServerEndpoint"
            }
          }
        },
        "description" : "Array of ServerEndpoint"
      },
      "ServerEndpointCreateParameters" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServerEndpointCreateParametersProperties"
          }
        },
        "description" : "The parameters used when creating a server endpoint.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "ServerEndpointCreateParametersProperties" : {
        "type" : "object",
        "properties" : {
          "cloudTiering" : {
            "$ref" : "#/components/schemas/FeatureStatus"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly Name"
          },
          "offlineDataTransfer" : {
            "$ref" : "#/components/schemas/FeatureStatus"
          },
          "offlineDataTransferShareName" : {
            "type" : "string",
            "description" : "Offline data transfer share name"
          },
          "serverLocalPath" : {
            "$ref" : "#/components/schemas/PhysicalPath"
          },
          "serverResourceId" : {
            "$ref" : "#/components/schemas/ResourceId"
          },
          "tierFilesOlderThanDays" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Tier files older than days."
          },
          "volumeFreeSpacePercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Level of free space to be maintained by Cloud Tiering if it is enabled."
          }
        },
        "description" : "ServerEndpoint Properties object."
      },
      "ServerEndpointProperties" : {
        "type" : "object",
        "properties" : {
          "cloudTiering" : {
            "$ref" : "#/components/schemas/FeatureStatus"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly Name"
          },
          "lastOperationName" : {
            "type" : "string",
            "description" : "Resource Last Operation Name",
            "readOnly" : true
          },
          "lastWorkflowId" : {
            "type" : "string",
            "description" : "ServerEndpoint lastWorkflowId",
            "readOnly" : true
          },
          "offlineDataTransfer" : {
            "$ref" : "#/components/schemas/FeatureStatus"
          },
          "offlineDataTransferShareName" : {
            "type" : "string",
            "description" : "Offline data transfer share name"
          },
          "offlineDataTransferStorageAccountResourceId" : {
            "type" : "string",
            "description" : "Offline data transfer storage account resource ID",
            "readOnly" : true
          },
          "offlineDataTransferStorageAccountTenantId" : {
            "type" : "string",
            "description" : "Offline data transfer storage account tenant ID",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "ServerEndpoint Provisioning State",
            "readOnly" : true
          },
          "serverLocalPath" : {
            "$ref" : "#/components/schemas/PhysicalPath"
          },
          "serverResourceId" : {
            "$ref" : "#/components/schemas/ResourceId"
          },
          "syncStatus" : {
            "$ref" : "#/components/schemas/ServerEndpointSyncStatus"
          },
          "tierFilesOlderThanDays" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Tier files older than days."
          },
          "volumeFreeSpacePercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Level of free space to be maintained by Cloud Tiering if it is enabled."
          }
        },
        "description" : "ServerEndpoint Properties object."
      },
      "ServerEndpointSyncStatus" : {
        "type" : "object",
        "properties" : {
          "combinedHealth" : {
            "$ref" : "#/components/schemas/HealthState"
          },
          "downloadActivity" : {
            "$ref" : "#/components/schemas/SyncActivityStatus"
          },
          "downloadHealth" : {
            "$ref" : "#/components/schemas/HealthState"
          },
          "downloadStatus" : {
            "$ref" : "#/components/schemas/SyncSessionStatus"
          },
          "lastUpdatedTimestamp" : {
            "type" : "string",
            "description" : "Last Updated Timestamp",
            "format" : "date-time",
            "readOnly" : true
          },
          "offlineDataTransferStatus" : {
            "$ref" : "#/components/schemas/OfflineDataTransferState"
          },
          "syncActivity" : {
            "$ref" : "#/components/schemas/SyncActivityState"
          },
          "totalPersistentFilesNotSyncingCount" : {
            "type" : "integer",
            "description" : "Total count of persistent files not syncing (combined upload + download). Reserved for future use.",
            "format" : "int64",
            "readOnly" : true
          },
          "uploadActivity" : {
            "$ref" : "#/components/schemas/SyncActivityStatus"
          },
          "uploadHealth" : {
            "$ref" : "#/components/schemas/HealthState"
          },
          "uploadStatus" : {
            "$ref" : "#/components/schemas/SyncSessionStatus"
          }
        },
        "description" : "Server Endpoint sync status"
      },
      "ServerEndpointUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServerEndpointUpdateProperties"
          }
        },
        "description" : "Parameters for updating an Server Endpoint."
      },
      "ServerEndpointUpdateProperties" : {
        "type" : "object",
        "properties" : {
          "cloudTiering" : {
            "$ref" : "#/components/schemas/FeatureStatus"
          },
          "offlineDataTransfer" : {
            "$ref" : "#/components/schemas/FeatureStatus"
          },
          "offlineDataTransferShareName" : {
            "type" : "string",
            "description" : "Offline data transfer share name"
          },
          "tierFilesOlderThanDays" : {
            "maximum" : 2147483647,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Tier files older than days."
          },
          "volumeFreeSpacePercent" : {
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Level of free space to be maintained by Cloud Tiering if it is enabled."
          }
        },
        "description" : "ServerEndpoint Update Properties object."
      },
      "StorageSyncApiError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code of the given entry."
          },
          "details" : {
            "$ref" : "#/components/schemas/StorageSyncErrorDetails"
          },
          "message" : {
            "type" : "string",
            "description" : "Error message of the given entry."
          },
          "target" : {
            "type" : "string",
            "description" : "Target of the given error entry."
          }
        },
        "description" : "Error type"
      },
      "StorageSyncError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/StorageSyncApiError"
          },
          "innererror" : {
            "$ref" : "#/components/schemas/StorageSyncApiError"
          }
        },
        "description" : "Error type"
      },
      "StorageSyncErrorDetails" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code of the given entry."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message of the given entry."
          },
          "target" : {
            "type" : "string",
            "description" : "Target of the given entry."
          }
        },
        "description" : "Error Details object."
      },
      "StorageSyncService" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageSyncServiceProperties"
          }
        },
        "description" : "Storage Sync Service object.",
        "allOf" : [ {
          "required" : [ "location" ],
          "properties" : {
            "location" : {
              "type" : "string",
              "description" : "The geo-location where the resource lives"
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            }
          },
          "description" : "The resource model definition for a ARM tracked top level resource",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "StorageSyncServiceArray" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Collection of StorageSyncServices.",
            "items" : {
              "$ref" : "#/components/schemas/StorageSyncService"
            }
          }
        },
        "description" : "Array of StorageSyncServices"
      },
      "StorageSyncServiceCreateParameters" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
          },
          "properties" : {
            "type" : "object"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
          }
        },
        "description" : "The parameters used when creating a storage sync service."
      },
      "StorageSyncServiceProperties" : {
        "type" : "object",
        "properties" : {
          "storageSyncServiceStatus" : {
            "type" : "integer",
            "description" : "Storage Sync service status.",
            "readOnly" : true
          },
          "storageSyncServiceUid" : {
            "type" : "string",
            "description" : "Storage Sync service Uid",
            "readOnly" : true
          }
        },
        "description" : "Storage Sync Service Properties object."
      },
      "StorageSyncServiceUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageSyncServiceUpdateProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The user-specified tags associated with the storage sync service."
          }
        },
        "description" : "Parameters for updating an Storage sync service."
      },
      "StorageSyncServiceUpdateProperties" : {
        "type" : "object",
        "description" : "Storage Sync Service Update Properties object."
      },
      "SubscriptionState" : {
        "type" : "object",
        "properties" : {
          "istransitioning" : {
            "type" : "boolean",
            "description" : "Is Transitioning",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/SubscriptionStateProperties"
          },
          "state" : {
            "type" : "string",
            "description" : "State of Azure Subscription",
            "enum" : [ "Registered", "Unregistered", "Warned", "Suspended", "Deleted" ]
          }
        },
        "description" : "Subscription State object."
      },
      "SubscriptionStateProperties" : {
        "type" : "object",
        "description" : "Subscription State properties."
      },
      "SyncActivityState" : {
        "type" : "string",
        "description" : "Type of the sync activity state",
        "enum" : [ "Upload", "Download", "UploadAndDownload" ]
      },
      "SyncActivityStatus" : {
        "type" : "object",
        "properties" : {
          "appliedBytes" : {
            "type" : "integer",
            "description" : "Applied bytes",
            "format" : "int64",
            "readOnly" : true
          },
          "appliedItemCount" : {
            "type" : "integer",
            "description" : "Applied item count.",
            "format" : "int64",
            "readOnly" : true
          },
          "perItemErrorCount" : {
            "type" : "integer",
            "description" : "Per item error count",
            "format" : "int64",
            "readOnly" : true
          },
          "timestamp" : {
            "type" : "string",
            "description" : "Timestamp when properties were updated",
            "format" : "date-time",
            "readOnly" : true
          },
          "totalBytes" : {
            "type" : "integer",
            "description" : "Total bytes (if available)",
            "format" : "int64",
            "readOnly" : true
          },
          "totalItemCount" : {
            "type" : "integer",
            "description" : "Total item count (if available)",
            "format" : "int64",
            "readOnly" : true
          }
        },
        "description" : "Sync Session status object."
      },
      "SyncGroup" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SyncGroupProperties"
          }
        },
        "description" : "Sync Group object.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "SyncGroupArray" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Collection of SyncGroup.",
            "items" : {
              "$ref" : "#/components/schemas/SyncGroup"
            }
          }
        },
        "description" : "Array of SyncGroup"
      },
      "SyncGroupCreateParameters" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SyncGroupCreateParametersProperties"
          }
        },
        "description" : "The parameters used when creating a sync group.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "SyncGroupCreateParametersProperties" : {
        "type" : "object",
        "description" : "Sync Group Create Properties object."
      },
      "SyncGroupProperties" : {
        "type" : "object",
        "properties" : {
          "syncGroupStatus" : {
            "type" : "string",
            "description" : "Sync group status",
            "readOnly" : true
          },
          "uniqueId" : {
            "type" : "string",
            "description" : "Unique Id"
          }
        },
        "description" : "SyncGroup Properties object."
      },
      "SyncSessionStatus" : {
        "type" : "object",
        "properties" : {
          "filesNotSyncingErrors" : {
            "type" : "array",
            "description" : "Array of per-item errors coming from the last sync session. Reserved for future use.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/FilesNotSyncingError"
            }
          },
          "lastSyncPerItemErrorCount" : {
            "type" : "integer",
            "description" : "Last sync per item error count.",
            "format" : "int64",
            "readOnly" : true
          },
          "lastSyncResult" : {
            "type" : "integer",
            "description" : "Last sync result (HResult)",
            "format" : "int32",
            "readOnly" : true
          },
          "lastSyncSuccessTimestamp" : {
            "type" : "string",
            "description" : "Last sync success timestamp",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastSyncTimestamp" : {
            "type" : "string",
            "description" : "Last sync timestamp",
            "format" : "date-time",
            "readOnly" : true
          },
          "persistentFilesNotSyncingCount" : {
            "type" : "integer",
            "description" : "Count of persistent files not syncing. Reserved for future use.",
            "format" : "int64",
            "readOnly" : true
          },
          "transientFilesNotSyncingCount" : {
            "type" : "integer",
            "description" : "Count of transient files not syncing. Reserved for future use.",
            "format" : "int64",
            "readOnly" : true
          }
        },
        "description" : "Sync Session status object."
      },
      "TagsObject" : {
        "type" : "object",
        "description" : "Tags object."
      },
      "TriggerChangeDetectionParameters" : {
        "type" : "object",
        "properties" : {
          "changeDetectionMode" : {
            "type" : "string",
            "description" : "Change Detection Mode. Applies to a directory specified in directoryPath parameter.",
            "enum" : [ "Default", "Recursive" ]
          },
          "directoryPath" : {
            "type" : "string",
            "description" : "Relative path to a directory Azure File share for which change detection is to be performed."
          },
          "paths" : {
            "type" : "array",
            "description" : "Array of relative paths on the Azure File share to be included in the change detection. Can be files and directories.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The parameters used when calling trigger change detection action on cloud endpoint."
      },
      "TriggerRolloverRequest" : {
        "type" : "object",
        "properties" : {
          "serverCertificate" : {
            "type" : "string",
            "description" : "Certificate Data"
          }
        },
        "description" : "Trigger Rollover Request."
      },
      "Workflow" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/WorkflowProperties"
          }
        },
        "description" : "Workflow resource.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "WorkflowArray" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Collection of workflow items.",
            "items" : {
              "$ref" : "#/components/schemas/Workflow"
            }
          }
        },
        "description" : "Array of Workflow"
      },
      "WorkflowProperties" : {
        "type" : "object",
        "properties" : {
          "lastOperationId" : {
            "type" : "string",
            "description" : "workflow last operation identifier."
          },
          "lastStepName" : {
            "type" : "string",
            "description" : "last step name"
          },
          "operation" : {
            "$ref" : "#/components/schemas/OperationDirection"
          },
          "status" : {
            "$ref" : "#/components/schemas/WorkflowStatus"
          },
          "steps" : {
            "type" : "string",
            "description" : "workflow steps"
          }
        },
        "description" : "Workflow Properties object."
      },
      "WorkflowStatus" : {
        "type" : "string",
        "description" : "Type of the Workflow Status",
        "enum" : [ "active", "expired", "succeeded", "aborted", "failed" ]
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}