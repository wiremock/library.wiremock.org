{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "GeoDB Cities API",
    "description" : "The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use\nin your apps! \n<ul>\n  <li>Filter cities by name prefix, country, location, time-zone, and even minimum population.</li>\n  <li>Sort cities by name, country code, elevation, and population - or any combination of these.</li> \n  <li>Get all country regions.</li> <li>Get all cities in a given region.</li>\n  <li>\n    Display results in multiple languages.</li> <li>RESTful API adheres to industry best-practices, including\n    HATEOAS-style links to facilitate paging results.\n  </li> \n  <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!</li>\n  <li>Data is periodically refreshed from GeoNames and WikiData.</li>\n</ul>\n<p>Notes:\n<ul>\n  <li>\n    Since the database is periodically updated, this may <strong>very rarely</strong> result in certain cities\n    being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude\n    cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set\n    of affected results - and you care about the paged results suddenly changing underneath - specify \n    <tt>includeDeleted=SINCE_YESTERDAY</tt> (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).\n  </li>\n</ul>\n<hr/>\n<h3>Useful Resources</h3>\n<ul>\n  <li>\n    SDKs\n    <ul>\n      <li>\n        <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>, \n        <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample App</a>\n      </li>\n      <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>\n      <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>\n    </ul>\n    <li><a href='swagger.json'>Swagger Docs</a></li>\n    <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License</a></li>\n  </li>      \n</ul>\n",
    "license" : {
      "name" : "Creative Commons Attribution 3.0",
      "url" : "http://creativecommons.org/licenses/by/3.0/"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://wft-geo-db.p.rapidapi.com/v1"
  } ],
  "security" : [ {
    "UserSecurity" : null
  } ],
  "tags" : [ {
    "name" : "Geo",
    "description" : "Geo Endpoints"
  }, {
    "name" : "Locale",
    "description" : "Locale Endpoints"
  } ],
  "paths" : {
    "/geo/adminDivisions" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find administrative divisions",
        "description" : "Find administrative divisions, filtering by optional criteria. If no criteria are set, you will get back all\nknown divisions.\n",
        "operationId" : "findAdminDivisionsUsingGET",
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Only places near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "The location radius within which to find places",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        }, {
          "name" : "countryIds",
          "in" : "query",
          "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludedCountryIds",
          "in" : "query",
          "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/adminDivisions/{divisionId}" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get administrative division details",
        "description" : "Get the details for a specific administrative division, including location coordinates, population, and\nelevation above sea-level (if available).\n",
        "operationId" : "getAdminDivisionUsingGET",
        "parameters" : [ {
          "name" : "divisionId",
          "in" : "path",
          "description" : "An admin-division id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Populated-place details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlaceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/adminDivisions/{divisionId}/nearbyCities" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find cities near division",
        "description" : "Find cities near the given administrative division, filtering by optional criteria. If no criteria are set, you\nwill get back all known cities.\n",
        "operationId" : "findCitiesNearAdminDivisionUsingGET",
        "parameters" : [ {
          "name" : "divisionId",
          "in" : "path",
          "description" : "An admin-division id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "The location radius within which to find places",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        }, {
          "name" : "countryIds",
          "in" : "query",
          "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludedCountryIds",
          "in" : "query",
          "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "Only places for these types (comma-delimited): CITY | ADM2",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/adminDivisions/{divisionId}/nearbyDivisions" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find divisions near division",
        "description" : "Find administrative divisions near the given origin division, filtering by optional criteria. If no criteria\nare set, you will get back all known divisions.\n",
        "operationId" : "findDivisionsNearAdminDivisionUsingGET",
        "parameters" : [ {
          "name" : "divisionId",
          "in" : "path",
          "description" : "An admin-division id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "The location radius within which to find places",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        }, {
          "name" : "countryIds",
          "in" : "query",
          "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludedCountryIds",
          "in" : "query",
          "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/cities" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find cities",
        "description" : "Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities.\n",
        "operationId" : "findCitiesUsingGET",
        "parameters" : [ {
          "name" : "location",
          "in" : "query",
          "description" : "Only places near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "The location radius within which to find places",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        }, {
          "name" : "countryIds",
          "in" : "query",
          "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludedCountryIds",
          "in" : "query",
          "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "Only places for these types (comma-delimited): CITY | ADM2",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/cities/{cityId}" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get city details",
        "description" : "Get the details for a specific city, including location coordinates, population, and elevation above sea-level\n(if available).\n",
        "operationId" : "getCityUsingGET",
        "parameters" : [ {
          "name" : "cityId",
          "in" : "path",
          "description" : "A city id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Populated-place details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlaceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/cities/{cityId}/dateTime" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get city date-time",
        "description" : "Get city date-time",
        "operationId" : "getCityDateTimeUsingGET",
        "parameters" : [ {
          "name" : "cityId",
          "in" : "path",
          "description" : "A city id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An ISO-6801 date-time",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DateTimeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/cities/{cityId}/distance" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get city distance",
        "description" : "Get distance from the given city",
        "operationId" : "getCityDistanceUsingGET",
        "parameters" : [ {
          "name" : "cityId",
          "in" : "path",
          "description" : "A city id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toCityId",
          "in" : "query",
          "description" : "Distance to this city",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A decimal distance (in miles or kilometers)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DistanceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/cities/{cityId}/locatedIn" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get city admin region",
        "description" : "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level\n(if available).\n",
        "operationId" : "getCityLocatedInUsingGET",
        "parameters" : [ {
          "name" : "cityId",
          "in" : "path",
          "description" : "A city id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Populated-place details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlaceResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/cities/{cityId}/nearbyCities" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find cities near city",
        "description" : "Find cities near the given origin city, filtering by optional criteria. If no criteria are set, you will get\nback all known cities.\n",
        "operationId" : "findCitiesNearCityUsingGET",
        "parameters" : [ {
          "name" : "cityId",
          "in" : "path",
          "description" : "A city id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "The location radius within which to find places",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        }, {
          "name" : "countryIds",
          "in" : "query",
          "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludedCountryIds",
          "in" : "query",
          "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "Only places for these types (comma-delimited): CITY | ADM2",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/cities/{cityId}/time" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get city time",
        "description" : "Get city time",
        "operationId" : "getCityTimeUsingGET",
        "parameters" : [ {
          "name" : "cityId",
          "in" : "path",
          "description" : "A city id (either native 'id' or 'wikiDataId')",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An ISO-8601 time response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/countries" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find countries",
        "description" : "Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries.\n",
        "operationId" : "getCountriesUsingGET",
        "parameters" : [ {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "Only countries supporting this currency",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort countries. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD = code | name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of countries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountriesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/countries/{countryId}" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get country details",
        "description" : "Get the details for a specific country, including number of regions.",
        "operationId" : "getCountryUsingGET",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "description" : "An ISO-3166 country code or WikiData id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Country detail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/countries/{countryId}/regions" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find country regions",
        "description" : "Get all regions in a specific country. These could be states, provinces, districts, or otherwise major\npolitical divisions.\n",
        "operationId" : "getRegionsUsingGET",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "description" : "An ISO-3166 country code or WikiData id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort regions. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD = fipsCode | isoCode | name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of country regions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionsResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/countries/{countryId}/regions/{regionCode}" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Get region details",
        "description" : "Get the details of a specific country region, including number of cities.",
        "operationId" : "getRegionUsingGET",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "description" : "An ISO-3166 country code or WikiData id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionCode",
          "in" : "path",
          "description" : "An ISO-3166 or FIPS region code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Country region details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/countries/{countryId}/regions/{regionCode}/adminDivisions" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find country region administrative divisions",
        "description" : "Get the administrative divisions in a specific country region. The country and region info is omitted in the\nresponse.\n",
        "operationId" : "findRegionDivisionsUsingGET",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "description" : "An ISO-3166 country code or WikiData id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionCode",
          "in" : "path",
          "description" : "An ISO-3166 or FIPS region code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/countries/{countryId}/regions/{regionCode}/cities" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find country region cities",
        "description" : "Get the cities in a specific country region. The country and region info is omitted in the response.\n",
        "operationId" : "findRegionCitiesUsingGET",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "path",
          "description" : "An ISO-3166 country code or WikiData id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regionCode",
          "in" : "path",
          "description" : "An ISO-3166 or FIPS region code",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "Only places for these types (comma-delimited): CITY | ADM2",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/locations/{locationId}/nearbyCities" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find cities near location",
        "description" : "Find cities near the given location, filtering by optional criteria. If no criteria are set, you will get back\nall known cities.\n",
        "operationId" : "findCitiesNearLocationUsingGET",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "The location radius within which to find places",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        }, {
          "name" : "countryIds",
          "in" : "query",
          "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludedCountryIds",
          "in" : "query",
          "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "types",
          "in" : "query",
          "description" : "Only places for these types (comma-delimited): CITY | ADM2",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/geo/locations/{locationId}/nearbyDivisions" : {
      "get" : {
        "tags" : [ "Geo" ],
        "summary" : "Find divisions near location",
        "description" : "Find administrative divisions near the given location, filtering by optional criteria. If no criteria are set,\nyou will get back all known divisions.\n",
        "operationId" : "findDivisionsNearLocationUsingGET",
        "parameters" : [ {
          "name" : "locationId",
          "in" : "path",
          "description" : "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "The location radius within which to find places",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "distanceUnit",
          "in" : "query",
          "description" : "The unit of distance: MI | KM",
          "schema" : {
            "type" : "string",
            "default" : "MI"
          }
        }, {
          "name" : "countryIds",
          "in" : "query",
          "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludedCountryIds",
          "in" : "query",
          "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "minPopulation",
          "in" : "query",
          "description" : "Only places having at least this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "maxPopulation",
          "in" : "query",
          "description" : "Only places having no more than this population",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "namePrefix",
          "in" : "query",
          "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "namePrefixDefaultLangResults",
          "in" : "query",
          "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "timeZoneIds",
          "in" : "query",
          "description" : "Only places in these time-zones (comma-delimited)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asciiMode",
          "in" : "query",
          "description" : "Display results using ASCII characters",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "languageCode",
          "in" : "query",
          "description" : "Display results in this language",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeDeleted",
          "in" : "query",
          "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
          "schema" : {
            "type" : "string",
            "default" : "NONE"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of populated places",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PopulatedPlacesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locale/currencies" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Find currencies",
        "description" : "Find currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.",
        "operationId" : "getCurrenciesUsingGET",
        "parameters" : [ {
          "name" : "countryId",
          "in" : "query",
          "description" : "Currencies for this country id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of currencies",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrenciesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locale/languages" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get languages",
        "description" : "Get all supported languages",
        "operationId" : "getLanguagesUsingGET",
        "parameters" : [ {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of languages supported by the system",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LanguagesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locale/locales" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get locales",
        "description" : "Get all known locales",
        "operationId" : "getLocalesUsingGET",
        "parameters" : [ {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of locales",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocalesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locale/timezones" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get time-zones",
        "description" : "Get all known time-zones",
        "operationId" : "getTimezonesUsingGET",
        "parameters" : [ {
          "name" : "hateoasMode",
          "in" : "query",
          "description" : "Include HATEOAS-style links in results",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The zero-ary offset index into the results",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of time-zones",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeZonesResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locale/timezones/{zoneId}" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get time-zone",
        "description" : "Get time-zone",
        "operationId" : "getTimeZoneUsingGET",
        "parameters" : [ {
          "name" : "zoneId",
          "in" : "path",
          "description" : "A time-zone id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A time-zone",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeZoneResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locale/timezones/{zoneId}/dateTime" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get time-zone date-time",
        "description" : "Get time-zone date-time",
        "operationId" : "getTimeZoneDateTimeUsingGET",
        "parameters" : [ {
          "name" : "zoneId",
          "in" : "path",
          "description" : "A time-zone id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An ISO-6801 date-time",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DateTimeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locale/timezones/{zoneId}/time" : {
      "get" : {
        "tags" : [ "Locale" ],
        "summary" : "Get time-zone time",
        "description" : "Get time-zone time",
        "operationId" : "getTimeZoneTimeUsingGET",
        "parameters" : [ {
          "name" : "zoneId",
          "in" : "path",
          "description" : "A time-zone id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An ISO-8601 time response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "400 - Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "401 - Unauthorized"
          },
          "403" : {
            "description" : "403 - Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForbiddenResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "404 - Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BadRequestResponse" : {
        "title" : "Bad Request Response",
        "description" : "Bad Request Response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        } ]
      },
      "BaseCollectionResponse" : {
        "title" : "Base Collection Response",
        "description" : "Common properties for all collection  responses",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "links" : {
              "title" : "Links",
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Link"
              }
            },
            "metadata" : {
              "$ref" : "#/components/schemas/Metadata"
            }
          }
        } ]
      },
      "BaseResponse" : {
        "title" : "Base Response",
        "type" : "object",
        "properties" : {
          "errors" : {
            "title" : "Errors",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "Common properties for all responses",
        "example" : {
          "errors" : [ ]
        }
      },
      "CountriesResponse" : {
        "title" : "Countries Response",
        "description" : "A list of countries",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCollectionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "title" : "CountrySummaries",
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CountrySummary"
              }
            }
          }
        } ]
      },
      "CountryDetails" : {
        "title" : "Country Details",
        "type" : "object",
        "properties" : {
          "callingCode" : {
            "type" : "string",
            "description" : "The country dialing prefix"
          },
          "code" : {
            "type" : "string",
            "description" : "The ISO-3166 country code"
          },
          "currencyCodes" : {
            "type" : "array",
            "description" : "A list of supported ISO-4217 currency codes",
            "items" : {
              "type" : "string"
            }
          },
          "flagImageUri" : {
            "type" : "string",
            "description" : "The country flag image"
          },
          "name" : {
            "type" : "string",
            "description" : "The country name (varies by languageCode)"
          },
          "numRegions" : {
            "type" : "integer",
            "description" : "The number of regions in this country",
            "format" : "int32"
          },
          "wikiDataId" : {
            "type" : "string",
            "description" : "The country WikiData id"
          }
        },
        "description" : "Full country details",
        "example" : {
          "callingCode" : "+1",
          "code" : "US",
          "currencyCodes" : [ "USD" ],
          "flagImageUri" : "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20the%20United%20States.svg",
          "name" : "United States",
          "numRegions" : 56,
          "wikiDataId" : "Q30"
        }
      },
      "CountryResponse" : {
        "title" : "Country Response",
        "description" : "Country details response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/CountryDetails"
            }
          }
        } ]
      },
      "CountrySummary" : {
        "title" : "Country Summary",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The ISO-3166 country code"
          },
          "currencyCodes" : {
            "type" : "array",
            "description" : "A list of supported ISO-4217 currency codes",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The country name (varies by languageCode)"
          },
          "wikiDataId" : {
            "type" : "string",
            "description" : "The country WikiData id"
          }
        },
        "description" : "Minimal country info",
        "example" : {
          "code" : "US",
          "currencyCodes" : [ "USD" ],
          "name" : "United States",
          "wikiDataId" : "Q30"
        }
      },
      "CurrenciesResponse" : {
        "title" : "Currencies Response",
        "description" : "A list of currencies",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCollectionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Currency"
              }
            }
          }
        } ]
      },
      "Currency" : {
        "title" : "Currency",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The ISO-4217 currency code"
          },
          "countryCodes" : {
            "type" : "array",
            "description" : "A list of ISO-3166 country codes of countries supporting this currency",
            "items" : {
              "type" : "string"
            }
          },
          "symbol" : {
            "type" : "string",
            "description" : "The currency symbol"
          }
        },
        "description" : "Currency info",
        "example" : {
          "code" : "USD",
          "countryCodes" : [ "PR", "MP", "IO", "FM", "PW", "GU", "BQ", "TC", "VG", "AS", "VI", "TL", "UM", "MH", "EC", "US" ],
          "symbol" : "$"
        }
      },
      "DateTimeResponse" : {
        "title" : "Date-Time Response",
        "description" : "An ISO-6801 date-time response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "string",
              "description" : "The date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ",
              "format" : "date-time"
            }
          }
        } ]
      },
      "DistanceResponse" : {
        "title" : "Distance Response",
        "description" : "A decimal distance (in miles or kilometers)",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "number",
              "description" : "The distance in units as set by the distanceUnit param (defaults to miles)",
              "format" : "double"
            }
          }
        } ]
      },
      "Error" : {
        "title" : "Error",
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/ErrorCode"
          },
          "message" : {
            "type" : "string"
          }
        },
        "description" : "An error that occurred processing the request",
        "example" : {
          "code" : "ENTITY_NOT_FOUND",
          "message" : "Param [someParam] has invalid value: invalidValue"
        }
      },
      "ErrorCode" : {
        "title" : "ErrorCode",
        "type" : "string",
        "description" : "One of a set of enumerated error codes representing the types of errors that can occur processing a\nrequest\n",
        "example" : "ENTITY_NOT_FOUND",
        "enum" : [ "ACCESS_DENIED", "ENTITY_NOT_FOUND", "INCOMPATIBLE", "PARAM_INVALID", "PARAMS_MUTUALLY_EXCLUSIVE", "REQUEST_UNPROCESSABLE" ]
      },
      "ForbiddenResponse" : {
        "title" : "Forbidden Response",
        "description" : "Forbidden Response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        } ]
      },
      "LanguageDescriptor" : {
        "title" : "Language",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "enum" : [ "undefined", "aa", "ab", "ae", "af", "ak", "am", "an", "ar", "as", "av", "ay", "az", "ba", "be", "bg", "bh", "bi", "bm", "bn", "bo", "br", "bs", "ca", "ce", "ch", "co", "cr", "cs", "cu", "cv", "cy", "da", "de", "dv", "dz", "ee", "el", "en", "eo", "es", "et", "eu", "fa", "ff", "fi", "fj", "fo", "fr", "fy", "ga", "gd", "gl", "gn", "gu", "gv", "ha", "he", "hi", "ho", "hr", "ht", "hu", "hy", "hz", "ia", "id", "ie", "ig", "ii", "ik", "io", "is", "it", "iu", "ja", "jv", "ka", "kg", "ki", "kj", "kk", "kl", "km", "kn", "ko", "kr", "ks", "ku", "kv", "kw", "ky", "la", "lb", "lg", "li", "ln", "lo", "lt", "lu", "lv", "mg", "mh", "mi", "mk", "ml", "mn", "mr", "ms", "mt", "my", "na", "nb", "nd", "ne", "ng", "nl", "nn", "no", "nr", "nv", "ny", "oc", "oj", "om", "or", "os", "pa", "pi", "pl", "ps", "pt", "qu", "rm", "rn", "ro", "ru", "rw", "sa", "sc", "sd", "se", "sg", "si", "sk", "sl", "sm", "sn", "so", "sq", "sr", "ss", "st", "su", "sv", "sw", "ta", "te", "tg", "th", "ti", "tk", "tl", "tn", "to", "tr", "ts", "tt", "tw", "ty", "ug", "uk", "ur", "uz", "ve", "vi", "vo", "wa", "wo", "xh", "yi", "yo", "za", "zh", "zu" ]
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "A language supported by the service",
        "example" : {
          "code" : "en",
          "name" : "English"
        }
      },
      "LanguagesResponse" : {
        "title" : "Languages Response",
        "description" : "A list of languages supported by the system",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCollectionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LanguageDescriptor"
              }
            }
          }
        } ]
      },
      "Link" : {
        "title" : "Link",
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "rel" : {
            "type" : "string"
          }
        },
        "description" : "A HATEAOS link",
        "example" : {
          "href" : "/data/world/v1/geo/cities?offset=10&limit=10",
          "rel" : "next"
        }
      },
      "Locale" : {
        "title" : "Locale",
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The locale code"
          }
        },
        "description" : "A locale representing a language/region combination",
        "example" : {
          "code" : "en_US"
        }
      },
      "LocalesResponse" : {
        "title" : "Locales Response",
        "description" : "A list of locales",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCollectionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Locale"
              }
            }
          }
        } ]
      },
      "Metadata" : {
        "title" : "Metadata",
        "type" : "object",
        "properties" : {
          "currentOffset" : {
            "type" : "integer",
            "description" : "The zero-ary offset into the results (0 is the first result)",
            "format" : "int64"
          },
          "totalCount" : {
            "type" : "integer",
            "description" : "The total number of results across pages",
            "format" : "int64"
          }
        },
        "description" : "Result metadata (currently only associated with collection results)",
        "example" : {
          "currentOffset" : 0,
          "totalCount" : 100
        }
      },
      "NotFoundResponse" : {
        "title" : "Not Found Response",
        "description" : "Not Found Response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        } ]
      },
      "PopulatedPlaceDetails" : {
        "title" : "Populated-Place Details",
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "The country name (varies by languageCode)"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The ISO-3166 country code"
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "If this place has been soft-deleted"
          },
          "elevationMeters" : {
            "type" : "integer",
            "description" : "The place elevation (meters) above sea level",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "description" : "The place GeoDB native id",
            "format" : "int32"
          },
          "latitude" : {
            "type" : "number",
            "description" : "The place latittude (-90.0 to 90.0)",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The place longitude (-180.0 to 180.0)",
            "format" : "double"
          },
          "name" : {
            "type" : "string",
            "description" : "The place name (varies by languageCode)"
          },
          "population" : {
            "type" : "integer",
            "description" : "The place population",
            "format" : "int32"
          },
          "region" : {
            "type" : "string",
            "description" : "The region name (varies by languageCode)"
          },
          "regionCode" : {
            "type" : "string",
            "description" : "The ISO or FIPS region code"
          },
          "timezone" : {
            "type" : "string",
            "description" : "The place timezone id"
          },
          "type" : {
            "$ref" : "#/components/schemas/PopulatedPlaceType"
          },
          "wikiDataId" : {
            "type" : "string",
            "description" : "The place WikiData id"
          }
        },
        "description" : "Full populated-place details",
        "example" : {
          "country" : "United States of America",
          "countryCode" : "US",
          "deleted" : false,
          "elevationMeters" : 10,
          "id" : 123214,
          "latitude" : 40.67,
          "longitude" : -73.94,
          "name" : "New York City",
          "population" : 8398748,
          "region" : "New York",
          "regionCode" : "NY",
          "timezone" : "America__New_York",
          "type" : "CITY",
          "wikiDataId" : "Q60"
        }
      },
      "PopulatedPlaceResponse" : {
        "title" : "Populated-Place Response",
        "description" : "Populated-place details response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/PopulatedPlaceDetails"
            }
          }
        } ]
      },
      "PopulatedPlaceSummary" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "The country name (varies by languageCode)"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "The ISO-3166 country code"
          },
          "distance" : {
            "type" : "number",
            "description" : "Included if this is the result of a distance query",
            "format" : "double"
          },
          "id" : {
            "type" : "integer",
            "description" : "The place GeoDB native id",
            "format" : "int32"
          },
          "latitude" : {
            "type" : "number",
            "description" : "The place latittude (-90.0 to 90.0)",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "description" : "The place longitude (-180.0 to 180.0)",
            "format" : "double"
          },
          "name" : {
            "type" : "string",
            "description" : "The place name (varies by languageCode)"
          },
          "population" : {
            "type" : "integer",
            "description" : "The place population",
            "format" : "int32"
          },
          "region" : {
            "type" : "string",
            "description" : "The region name (varies by languageCode)"
          },
          "regionCode" : {
            "type" : "string",
            "description" : "The ISO or FIPS region code"
          },
          "type" : {
            "$ref" : "#/components/schemas/PopulatedPlaceType"
          },
          "wikiDataId" : {
            "type" : "string",
            "description" : "The place WikiData id"
          }
        },
        "description" : "Minimal populated-place info",
        "example" : {
          "country" : "United States of America",
          "countryCode" : "US",
          "id" : 123214,
          "latitude" : 40.67,
          "longitude" : -73.94,
          "name" : "New York City",
          "region" : "New York",
          "regionCode" : "NY",
          "type" : "CITY",
          "wikiDataId" : "Q60"
        }
      },
      "PopulatedPlaceType" : {
        "type" : "string",
        "description" : "One of a set of enumerated populated-place types known by the service (currently only level-2 admin divisions and\ncities)\n",
        "example" : "CITY",
        "enum" : [ "ADM2", "CITY" ]
      },
      "PopulatedPlacesResponse" : {
        "title" : "Populated-Places Response",
        "description" : "A list of populated places",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCollectionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PopulatedPlaceSummary"
              }
            }
          }
        } ]
      },
      "RegionDetails" : {
        "title" : "Country Region Details",
        "type" : "object",
        "properties" : {
          "capital" : {
            "type" : "string",
            "description" : "The region's capital city (varies by languageCode)"
          },
          "countryCode" : {
            "type" : "string",
            "description" : "An ISO-3166 country code"
          },
          "fipsCode" : {
            "type" : "string",
            "description" : "The FIPS 10-4 region code"
          },
          "isoCode" : {
            "type" : "string",
            "description" : "The ISO region code"
          },
          "name" : {
            "type" : "string",
            "description" : "The region name (varies by languageCode)"
          },
          "numCities" : {
            "type" : "integer",
            "description" : "The number of cities in this region",
            "format" : "int32"
          },
          "wikiDataId" : {
            "type" : "string",
            "description" : "The region WikiData id"
          }
        },
        "description" : "Full country region details",
        "example" : {
          "capital" : "Sacramento",
          "countryCode" : "US",
          "fipsCode" : 6,
          "isoCode" : "CA",
          "name" : "California",
          "numCities" : 1532,
          "wikiDataId" : "Q99"
        }
      },
      "RegionResponse" : {
        "title" : "Country Region Response",
        "description" : "Country region details response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/RegionDetails"
            }
          }
        } ]
      },
      "RegionSummary" : {
        "title" : "Country Region Summary",
        "type" : "object",
        "properties" : {
          "countryCode" : {
            "type" : "string",
            "description" : "An ISO-3166 country code"
          },
          "fipsCode" : {
            "type" : "string",
            "description" : "The FIPS 10-4 region code"
          },
          "isoCode" : {
            "type" : "string",
            "description" : "The ISO region code"
          },
          "name" : {
            "type" : "string",
            "description" : "The region name (varies by languageCode)"
          },
          "wikiDataId" : {
            "type" : "string",
            "description" : "The region WikiData id"
          }
        },
        "description" : "Minimal country region info",
        "example" : {
          "countryCode" : "US",
          "fipsCode" : 6,
          "isoCode" : "CA",
          "name" : "California",
          "wikiDataId" : "Q99"
        }
      },
      "RegionsResponse" : {
        "title" : "Country Regions Response",
        "description" : "A list of country regions",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCollectionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "description" : "A list of RegionSummaries",
              "items" : {
                "$ref" : "#/components/schemas/RegionSummary"
              }
            }
          }
        } ]
      },
      "TimeResponse" : {
        "title" : "Time Response",
        "description" : "An ISO-8601 time response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "string",
              "description" : "The time in ISO-8601 format: HHmmss.SSSZ"
            }
          }
        } ]
      },
      "TimeZoneDescriptor" : {
        "title" : "Time-Zone",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The time-zone id"
          },
          "name" : {
            "type" : "string",
            "description" : "The time-zone name"
          },
          "rawUtcOffsetHours" : {
            "type" : "integer",
            "description" : "The number of hours this time-zone is offset from UTC",
            "format" : "int32"
          }
        },
        "description" : "A time-zone",
        "example" : {
          "id" : "Africa__Abidjan",
          "name" : "Greenwich Mean Time",
          "rawUtcOffsetHours" : 0
        }
      },
      "TimeZoneResponse" : {
        "title" : "Time-Zone Response",
        "description" : "A time-zone",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResponse"
        }, {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "The time-zone id"
            },
            "name" : {
              "type" : "string",
              "description" : "The time-zone name"
            },
            "rawUtcOffsetHours" : {
              "type" : "integer",
              "description" : "The number of hours this time-zone is offset from UTC",
              "format" : "int32"
            }
          }
        } ]
      },
      "TimeZonesResponse" : {
        "title" : "Time-Zones Response",
        "description" : "A list of time-zones",
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseCollectionResponse"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/TimeZoneDescriptor"
              }
            }
          }
        } ]
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "400 - Bad Request",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BadRequestResponse"
            }
          }
        }
      },
      "Countries" : {
        "description" : "A list of countries",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CountriesResponse"
            }
          }
        }
      },
      "Country" : {
        "description" : "Country detail",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CountryResponse"
            }
          }
        }
      },
      "Currencies" : {
        "description" : "A list of currencies",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CurrenciesResponse"
            }
          }
        }
      },
      "DateTime" : {
        "description" : "An ISO-6801 date-time",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/DateTimeResponse"
            }
          }
        }
      },
      "Distance" : {
        "description" : "A decimal distance (in miles or kilometers)",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/DistanceResponse"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "403 - Forbidden",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ForbiddenResponse"
            }
          }
        }
      },
      "Languages" : {
        "description" : "A list of languages supported by the system",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LanguagesResponse"
            }
          }
        }
      },
      "Locales" : {
        "description" : "A list of locales",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LocalesResponse"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "404 - Not Found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/NotFoundResponse"
            }
          }
        }
      },
      "PopulatedPlace" : {
        "description" : "Populated-place details",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PopulatedPlaceResponse"
            }
          }
        }
      },
      "PopulatedPlaces" : {
        "description" : "A list of populated places",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PopulatedPlacesResponse"
            }
          }
        }
      },
      "Region" : {
        "description" : "Country region details",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RegionResponse"
            }
          }
        }
      },
      "Regions" : {
        "description" : "A list of country regions",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/RegionsResponse"
            }
          }
        }
      },
      "Time" : {
        "description" : "An ISO-8601 time response",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TimeResponse"
            }
          }
        }
      },
      "TimeZone" : {
        "description" : "A time-zone",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TimeZoneResponse"
            }
          }
        }
      },
      "TimeZones" : {
        "description" : "A list of time-zones",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TimeZonesResponse"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "401 - Unauthorized"
      }
    },
    "parameters" : {
      "path.cityId" : {
        "name" : "cityId",
        "in" : "path",
        "description" : "A city id (either native 'id' or 'wikiDataId')",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "path.countryId" : {
        "name" : "countryId",
        "in" : "path",
        "description" : "An ISO-3166 country code or WikiData id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "path.divisionId" : {
        "name" : "divisionId",
        "in" : "path",
        "description" : "An admin-division id (either native 'id' or 'wikiDataId')",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "path.location.id" : {
        "name" : "locationId",
        "in" : "path",
        "description" : "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "path.regionCode" : {
        "name" : "regionCode",
        "in" : "path",
        "description" : "An ISO-3166 or FIPS region code",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "path.zoneId" : {
        "name" : "zoneId",
        "in" : "path",
        "description" : "A time-zone id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "query.asciiMode" : {
        "name" : "asciiMode",
        "in" : "query",
        "description" : "Display results using ASCII characters",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "query.country.currencyCode" : {
        "name" : "currencyCode",
        "in" : "query",
        "description" : "Only countries supporting this currency",
        "schema" : {
          "type" : "string"
        }
      },
      "query.country.sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "How to sort countries. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD = code | name",
        "schema" : {
          "type" : "string"
        }
      },
      "query.currency.countryId" : {
        "name" : "countryId",
        "in" : "query",
        "description" : "Currencies for this country id",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "query.distanceUnit" : {
        "name" : "distanceUnit",
        "in" : "query",
        "description" : "The unit of distance: MI | KM",
        "schema" : {
          "type" : "string",
          "default" : "MI"
        }
      },
      "query.entity.namePrefix" : {
        "name" : "namePrefix",
        "in" : "query",
        "description" : "Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name\nas it appears in that language.\n",
        "schema" : {
          "type" : "string"
        }
      },
      "query.entity.namePrefixDefaultLangResults" : {
        "name" : "namePrefixDefaultLangResults",
        "in" : "query",
        "description" : "When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.\n",
        "schema" : {
          "type" : "boolean",
          "default" : true
        }
      },
      "query.hateoasMode" : {
        "name" : "hateoasMode",
        "in" : "query",
        "description" : "Include HATEOAS-style links in results",
        "schema" : {
          "type" : "boolean",
          "default" : true
        }
      },
      "query.includeDeleted" : {
        "name" : "includeDeleted",
        "in" : "query",
        "description" : "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE",
        "schema" : {
          "type" : "string",
          "default" : "NONE"
        }
      },
      "query.languageCode" : {
        "name" : "languageCode",
        "in" : "query",
        "description" : "Display results in this language",
        "schema" : {
          "type" : "string"
        }
      },
      "query.limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "The maximum number of results to retrieve",
        "schema" : {
          "type" : "integer",
          "format" : "int32",
          "default" : 10
        }
      },
      "query.offset" : {
        "name" : "offset",
        "in" : "query",
        "description" : "The zero-ary offset index into the results",
        "schema" : {
          "type" : "integer",
          "format" : "int32",
          "default" : 0
        }
      },
      "query.place.countryIds" : {
        "name" : "countryIds",
        "in" : "query",
        "description" : "Only places in these countries (comma-delimited country codes or WikiData ids)",
        "schema" : {
          "type" : "string"
        }
      },
      "query.place.excludedCountryIds" : {
        "name" : "excludedCountryIds",
        "in" : "query",
        "description" : "Only places NOT in these countries (comma-delimited country codes or WikiData ids)",
        "schema" : {
          "type" : "string"
        }
      },
      "query.place.location.id" : {
        "name" : "location",
        "in" : "query",
        "description" : "Only places near this location. Latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD",
        "schema" : {
          "type" : "string"
        }
      },
      "query.place.location.radiusOf" : {
        "name" : "radius",
        "in" : "query",
        "description" : "The location radius within which to find places",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "query.place.maxPopulation" : {
        "name" : "maxPopulation",
        "in" : "query",
        "description" : "Only places having no more than this population",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "query.place.minPopulation" : {
        "name" : "minPopulation",
        "in" : "query",
        "description" : "Only places having at least this population",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "query.place.sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
        "schema" : {
          "type" : "string"
        }
      },
      "query.place.sort.withinRegion" : {
        "name" : "sort",
        "in" : "query",
        "description" : "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = elevation | name | population\n",
        "schema" : {
          "type" : "string"
        }
      },
      "query.place.types" : {
        "name" : "types",
        "in" : "query",
        "description" : "Only places for these types (comma-delimited): CITY | ADM2",
        "schema" : {
          "type" : "string"
        }
      },
      "query.region.sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "How to sort regions. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD = fipsCode | isoCode | name",
        "schema" : {
          "type" : "string"
        }
      },
      "query.sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD' \nwhere SORT_FIELD = countryCode | elevation | name | population\n",
        "schema" : {
          "type" : "string"
        }
      },
      "query.timeZoneIds" : {
        "name" : "timeZoneIds",
        "in" : "query",
        "description" : "Only places in these time-zones (comma-delimited)",
        "schema" : {
          "type" : "string"
        }
      },
      "query.toCityId" : {
        "name" : "toCityId",
        "in" : "query",
        "description" : "Distance to this city",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "UserSecurity" : {
        "type" : "apiKey",
        "name" : "x-rapidapi-key",
        "in" : "header"
      }
    }
  }
}