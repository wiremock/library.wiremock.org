{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "LUIS Authoring Client",
    "version" : "3.0-preview"
  },
  "servers" : [ {
    "url" : "https://azure.local/"
  } ],
  "security" : [ {
    "apiKeyHeader" : null
  } ],
  "paths" : {
    "/apps/" : {
      "get" : {
        "description" : "Lists all of the user's applications.",
        "operationId" : "Apps_List",
        "parameters" : [ {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the user applications.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationsInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new LUIS app.",
        "operationId" : "Apps_Add",
        "requestBody" : {
          "description" : "An application containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. Default value for the version ID is \"0.1\". Note: the culture cannot be changed after the app is created.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/assistants" : {
      "get" : {
        "description" : "Gets the endpoint URLs for the prebuilt Cortana applications.",
        "operationId" : "Apps_ListCortanaEndpoints",
        "responses" : {
          "200" : {
            "description" : "A personal assistant apps JSON object containing the endpoint URLs for Cortana applications and the user's endpoint keys.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonalAssistantsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/cultures" : {
      "get" : {
        "description" : "Gets a list of supported cultures. Cultures are equivalent to the written language and locale. For example,\"en-us\" represents the U.S. variation of English.",
        "operationId" : "Apps_ListSupportedCultures",
        "responses" : {
          "200" : {
            "description" : "A list object containing the supported application cultures.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableCultures"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/customprebuiltdomains" : {
      "get" : {
        "description" : "Gets all the available custom prebuilt domains for all cultures.",
        "operationId" : "Apps_ListAvailableCustomPrebuiltDomains",
        "responses" : {
          "200" : {
            "description" : "Returns a list of all custom prebuilt domains and their intents/entities representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltDomainsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a prebuilt domain along with its intent and entity models as a new application.",
        "operationId" : "Apps_AddCustomPrebuiltDomain",
        "requestBody" : {
          "description" : "A prebuilt domain create object containing the name and culture of the domain.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/customprebuiltdomains/{culture}" : {
      "get" : {
        "description" : "Gets all the available prebuilt domains for a specific culture.",
        "operationId" : "Apps_ListAvailableCustomPrebuiltDomainsForCulture",
        "parameters" : [ {
          "name" : "culture",
          "in" : "path",
          "description" : "Culture.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all domains and their intents and entities for a specific culture.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltDomainsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/domains" : {
      "get" : {
        "description" : "Gets the available application domains.",
        "operationId" : "Apps_ListDomains",
        "responses" : {
          "200" : {
            "description" : "A list object containing the available application domains.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableDomains"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/import" : {
      "post" : {
        "description" : "Imports an application to LUIS, the application's structure is included in the request body.",
        "operationId" : "Apps_Import",
        "parameters" : [ {
          "name" : "appName",
          "in" : "query",
          "description" : "The application name to create. If not specified, the application name will be read from the imported object. If the application name already exists, an error is returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A LUIS application structure.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LuisApp"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the imported application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/usagescenarios" : {
      "get" : {
        "description" : "Gets the application available usage scenarios.",
        "operationId" : "Apps_ListUsageScenarios",
        "responses" : {
          "200" : {
            "description" : "A list object containing the available application usage scenarios.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationUsageScenarios"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}" : {
      "get" : {
        "description" : "Gets the application info.",
        "operationId" : "Apps_Get",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The application info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationInfoResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name or description of the application.",
        "operationId" : "Apps_Update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing Name and Description of the application.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated application name and description.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an application.",
        "operationId" : "Apps_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "A flag to indicate whether to force an operation.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/azureaccounts" : {
      "get" : {
        "summary" : "apps - Get LUIS Azure accounts assigned to the application",
        "description" : "Gets the LUIS Azure accounts assigned to the application for the user using his ARM token.",
        "operationId" : "AzureAccounts_GetAssigned",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The bearer authorization header to use; containing the user's ARM token used to validate Azure accounts information.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of azure account information objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureAccountInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "apps - Assign a LUIS Azure account to an application",
        "description" : "Assigns an Azure account to the application.",
        "operationId" : "AzureAccounts_AssignToApp",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The bearer authorization header to use; containing the user's ARM token used to validate Azure accounts information.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Azure account information object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureAccountInfoObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "apps - Removes an assigned LUIS Azure account from an application",
        "description" : "Removes assigned Azure account from the application.",
        "operationId" : "AzureAccounts_RemoveFromApp",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The bearer authorization header to use; containing the user's ARM token used to validate Azure accounts information.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Azure account information object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AzureAccountInfoObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/endpoints" : {
      "get" : {
        "description" : "Returns the available endpoint deployment regions and URLs.",
        "operationId" : "Apps_ListEndpoints",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of endpoints regions and their corresponding endpoint URL.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableEndpoints"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/permissions" : {
      "get" : {
        "description" : "Gets the list of user emails that have permissions to access your application.",
        "operationId" : "Permissions_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list includes a single owner. All collaborators are listed in the emails array.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccessList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Replaces the current user access list with the new list sent in the body. If an empty list is sent, all access to other users will be removed.",
        "operationId" : "Permissions_Update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing a list of user email addresses.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CollaboratorsArray"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a user to the allowed list of users to access this LUIS application. Users are added using their email address.",
        "operationId" : "Permissions_Add",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the user's email address.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollaborator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Removes a user from the allowed list of users to access this LUIS application. Users are removed using their email address.",
        "operationId" : "Permissions_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the user's email address.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollaborator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/publish" : {
      "post" : {
        "description" : "Publishes a specific version of the application.",
        "operationId" : "Apps_Publish",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The application publish object. The region is the target region that the application is published to.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPublishObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "An object containing the application endpoint URL, its assigned endpoint key and publishing status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductionOrStagingEndpointInfo"
                }
              }
            }
          },
          "207" : {
            "description" : "An object containing the application endpoint URL, its assigned endpoint key and publishing status in case that publishing one or more regions failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductionOrStagingEndpointInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/publishsettings" : {
      "get" : {
        "description" : "Get the application publish settings including 'UseAllTrainingData'.",
        "operationId" : "Apps_GetPublishSettings",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The application publish settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublishSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the application publish settings including 'UseAllTrainingData'.",
        "operationId" : "Apps_UpdatePublishSettings",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An object containing the new publish application settings.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublishSettingUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated application settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/querylogs" : {
      "get" : {
        "description" : "Gets the logs of the past month's endpoint queries for the application.",
        "operationId" : "Apps_DownloadQueryLogs",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A CSV file containing the query logs for the past month.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object",
                  "description" : "The query logs of an application for the past month in CSV format.",
                  "format" : "file"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/settings" : {
      "get" : {
        "description" : "Get the application settings including 'UseAllTrainingData'.",
        "operationId" : "Apps_GetSettings",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The application settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the application settings including 'UseAllTrainingData'.",
        "operationId" : "Apps_UpdateSettings",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An object containing the new application settings.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationSettingUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated application settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions" : {
      "get" : {
        "description" : "Gets a list of versions for this application ID.",
        "operationId" : "Versions_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all versions of the application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VersionInfo"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/import" : {
      "post" : {
        "description" : "Imports a new version into a LUIS application.",
        "operationId" : "Versions_Import",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "query",
          "description" : "The new versionId to import. If not specified, the versionId will be read from the imported object.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A LUIS application structure.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LuisApp"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The created application version.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/" : {
      "get" : {
        "description" : "Gets the version information such as date created, last modified date, endpoint URL, count of intents and entities, training and publishing status.",
        "operationId" : "Versions_Get",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A model containing the version info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name or description of the application version.",
        "operationId" : "Versions_Update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing Name and Description of the application.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an application version.",
        "operationId" : "Versions_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/clone" : {
      "post" : {
        "description" : "Creates a new version from the selected version.",
        "operationId" : "Versions_Clone",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the new version ID.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The new version ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists" : {
      "get" : {
        "description" : "Gets information about all the list entity models in a version of the application.",
        "operationId" : "Model_ListClosedLists",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of list entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClosedListEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a list entity model to a version of the application.",
        "operationId" : "Model_AddClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the name and words for the new list entity extractor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClosedListModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}" : {
      "get" : {
        "description" : "Gets information about a list entity in a version of the application.",
        "operationId" : "Model_GetClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The list model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClosedListEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the list entity in a version of the application.",
        "operationId" : "Model_UpdateClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The list model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new list entity name and words list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClosedListModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated list entity name and words list.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a list entity model from a version of the application.",
        "operationId" : "Model_DeleteClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The list entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully delete list entity from a version of application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "Adds a batch of sublists to an existing list entity in a version of the application.",
        "operationId" : "Model_PatchClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The list entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A words list batch.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClosedListModelPatchObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added sublists to the list entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists" : {
      "post" : {
        "description" : "Adds a sublist to an existing list entity in a version of the application.",
        "operationId" : "Model_AddSubList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The list entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Words list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WordListObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the newly created sublist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}" : {
      "put" : {
        "description" : "Updates one of the list entity's sublists in a version of the application.",
        "operationId" : "Model_UpdateSubList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The list entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subListId",
          "in" : "path",
          "description" : "The sublist ID.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A sublist update object containing the new canonical form and the list of words.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WordListBaseUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated sublist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a sublist of a specific list entity model from a version of the application.",
        "operationId" : "Model_DeleteSubList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The list entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subListId",
          "in" : "path",
          "description" : "The sublist ID.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted sublist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles" : {
      "get" : {
        "summary" : "Get all roles for a list entity in a version of the application.",
        "operationId" : "Model_ListClosedListEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a role for a list entity in a version of the application.",
        "operationId" : "Model_CreateClosedListEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given list entity in a version of the application.",
        "operationId" : "Model_GetClosedListEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given list entity in a version of the application.",
        "operationId" : "Model_UpdateClosedListEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a role for a given list entity in a version of the application.",
        "operationId" : "Model_DeleteClosedListEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities" : {
      "get" : {
        "description" : "Gets information about all the composite entity models in a version of the application.",
        "operationId" : "Model_ListCompositeEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of composite entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompositeEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}" : {
      "get" : {
        "description" : "Gets information about a composite entity in a version of the application.",
        "operationId" : "Model_GetCompositeEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The composite entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompositeEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates a composite entity in a version of the application.",
        "operationId" : "Model_UpdateCompositeEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the new entity extractor name and children.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompositeEntityModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated composite entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a composite entity from a version of the application.",
        "operationId" : "Model_DeleteCompositeEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted composite entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children" : {
      "post" : {
        "description" : "Creates a single child in an existing composite entity model in a version of the application.",
        "operationId" : "Model_AddCompositeEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the new composite child model.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}" : {
      "delete" : {
        "description" : "Deletes a composite entity extractor child from a version of the application.",
        "operationId" : "Model_DeleteCompositeEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "cChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles" : {
      "get" : {
        "summary" : "Get all roles for a composite entity in a version of the application",
        "operationId" : "Model_ListCompositeEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a role for a composite entity in a version of the application.",
        "operationId" : "Model_CreateCompositeEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given composite entity in a version of the application",
        "operationId" : "Model_GetCompositeEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given composite entity in a version of the application",
        "operationId" : "Model_UpdateCompositeEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a role for a given composite entity in a version of the application.",
        "operationId" : "Model_DeleteCompositeEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains" : {
      "post" : {
        "description" : "Adds a customizable prebuilt domain along with all of its intent and entity models in a version of the application.",
        "operationId" : "Model_AddCustomPrebuiltDomain",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A prebuilt domain create object containing the name of the domain.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainCreateBaseObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "An array of the created customizable prebuilt domain intent and entity model Ids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}" : {
      "delete" : {
        "description" : "Deletes a prebuilt domain's models in a version of the application.",
        "operationId" : "Model_DeleteCustomPrebuiltDomain",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainName",
          "in" : "path",
          "description" : "Domain name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities" : {
      "get" : {
        "description" : "Gets all prebuilt entities used in a version of the application.",
        "operationId" : "Model_ListCustomPrebuiltEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all prebuilt entities and their representations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a prebuilt entity model to a version of the application.",
        "operationId" : "Model_AddCustomPrebuiltEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the prebuilt entity and the name of the domain to which this model belongs.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created prebuilt model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles" : {
      "get" : {
        "summary" : "Get all roles for a prebuilt entity in a version of the application",
        "operationId" : "Model_ListCustomPrebuiltEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a role for a prebuilt entity in a version of the application.",
        "operationId" : "Model_CreateCustomPrebuiltEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given prebuilt entity in a version of the application.",
        "operationId" : "Model_GetCustomEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given prebuilt entity in a version of the application.",
        "operationId" : "Model_UpdateCustomPrebuiltEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a role for a given prebuilt entity in a version of the application.",
        "operationId" : "Model_DeleteCustomEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltintents" : {
      "get" : {
        "description" : "Gets information about customizable prebuilt intents added to a version of the application.",
        "operationId" : "Model_ListCustomPrebuiltIntents",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all customizable prebuilt intents and their representations in a version of the application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentClassifiersList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a customizable prebuilt intent model to a version of the application.",
        "operationId" : "Model_AddCustomPrebuiltIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the customizable prebuilt intent and the name of the domain to which this model belongs.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created intent model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltmodels" : {
      "get" : {
        "description" : "Gets all prebuilt intent and entity model information used in a version of this application.",
        "operationId" : "Model_ListCustomPrebuiltModels",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all prebuilt models and their representations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPrebuiltModelList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities" : {
      "get" : {
        "description" : "Gets information about all the simple entity models in a version of the application.",
        "operationId" : "Model_ListEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NDepthEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds an entity extractor to a version of the application.",
        "operationId" : "Model_AddEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the new entity extractor and its children.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}" : {
      "get" : {
        "description" : "Gets information about an entity model in a version of the application.",
        "operationId" : "Model_GetEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NDepthEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an entity or a child from a version of the application.",
        "operationId" : "Model_DeleteEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor or the child entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "Updates the name of an entity extractor or the name and instanceOf model of a child entity extractor.",
        "operationId" : "Model_UpdateEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor or the child entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name new entity extractor or the name and instance of model of a child entity extractor ",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/children" : {
      "post" : {
        "description" : "Creates a single child in an existing entity model hierarchy in a version of the application.",
        "operationId" : "Model_AddEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the new child model and its children.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ChildEntityModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/features" : {
      "get" : {
        "description" : "Gets the information of the features used by the entity in a version of the application.",
        "operationId" : "Model_GetEntityFeatures",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of feature information objects for the entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeaturesPerModelResponseObject"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the information of the features used by the entity in a version of the application.",
        "operationId" : "Model_ReplaceEntityFeatures",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A list of feature information objects containing the new feature relations.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeaturesPerModelResponseObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a new feature relation to be used by the entity in a version of the application.",
        "operationId" : "Features_AddEntityFeature",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A Feature relation information object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelFeatureInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a relation from the feature relations used by the entity in a version of the application.",
        "operationId" : "Model_DeleteEntityFeature",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A feature information object containing the feature relation to delete.",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelFeatureInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles" : {
      "get" : {
        "summary" : "Get all roles for an entity in a version of the application",
        "operationId" : "Model_ListEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create an entity role in a version of the application.",
        "operationId" : "Model_CreateEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given entity in a version of the application",
        "operationId" : "Model_GetEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given entity in a version of the application.",
        "operationId" : "Model_UpdateEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete an entity role in a version of the application.",
        "operationId" : "Model_DeleteEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest" : {
      "get" : {
        "description" : "Get suggested example utterances that would improve the accuracy of the entity model in a version of the application.",
        "operationId" : "Model_ListEntitySuggestions",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The target entity extractor model to enhance.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "If there's no trained entity model, nothing is returned in the response. If there's a trained model and active learning finds any relevant queries, they are returned with the entity model predictions. If there's a trained model but active learning didn't find any relevant queries, an empty list is returned in the response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntitiesSuggestionExamples"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/example" : {
      "post" : {
        "description" : "Adds a labeled example utterance in a version of the application.",
        "operationId" : "Examples_Add",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A labeled example utterance with the expected intent and entities.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExampleLabelObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created example utterance.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabelExampleResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples" : {
      "get" : {
        "description" : "Returns example utterances to be reviewed from a version of the application.",
        "operationId" : "Examples_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of predictions and label pairs for every example utterance in the application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabeledUtterances"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a batch of labeled example utterances to a version of the application.",
        "operationId" : "Examples_Batch",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Array of example utterances.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExampleLabelObjectArray"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A string array determining which labeled example utterances were added successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchLabelExampleResponse"
                }
              }
            }
          },
          "207" : {
            "description" : "Indicates that the request was partially successful. The response contains a string array indicating the status of each of the added labeled example utterances.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchLabelExampleResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples/{exampleId}" : {
      "delete" : {
        "description" : "Deletes the labeled example utterances with the specified ID from a version of the application.",
        "operationId" : "Examples_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "exampleId",
          "in" : "path",
          "description" : "The example ID.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted example utterance.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/export" : {
      "get" : {
        "description" : "Exports a LUIS application to JSON format.",
        "operationId" : "Versions_Export",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The LUIS application structure in JSON format.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LuisApp"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/features" : {
      "get" : {
        "description" : "Gets all the extraction phraselist and pattern features in a version of the application.",
        "operationId" : "Features_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all phraselist features and a list of all pattern features.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeaturesResponseObject"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities" : {
      "get" : {
        "description" : "Gets information about all the hierarchical entity models in a version of the application.",
        "operationId" : "Model_ListHierarchicalEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of hierarchical entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HierarchicalEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}" : {
      "get" : {
        "description" : "Gets information about a hierarchical entity in a version of the application.",
        "operationId" : "Model_GetHierarchicalEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A hierarchical entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HierarchicalEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a hierarchical entity from a version of the application.",
        "operationId" : "Model_DeleteHierarchicalEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "Updates the name of a hierarchical entity model in a version of the application.",
        "operationId" : "Model_UpdateHierarchicalEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Model containing names of the hierarchical entity.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}" : {
      "get" : {
        "description" : "Gets information about the child's model contained in an hierarchical entity child model in a version of the application.",
        "operationId" : "Model_GetHierarchicalEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "hChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The hierarchical entity child model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HierarchicalChildEntity"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a hierarchical entity extractor child in a version of the application.",
        "operationId" : "Model_DeleteHierarchicalEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "hChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "Renames a single child in an existing hierarchical entity model in a version of the application.",
        "operationId" : "Model_UpdateHierarchicalEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "hChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Model object containing new name of the hierarchical entity child.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated entity child.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles" : {
      "get" : {
        "summary" : "Get all roles for a hierarchical entity in a version of the application",
        "operationId" : "Model_ListHierarchicalEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a role for an hierarchical entity in a version of the application.",
        "operationId" : "Model_CreateHierarchicalEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given hierarchical entity in a version of the application.",
        "operationId" : "Model_GetHierarchicalEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given hierarchical entity in a version of the application.",
        "operationId" : "Model_UpdateHierarchicalEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a role for a given hierarchical role in a version of the application.",
        "operationId" : "Model_DeleteHierarchicalEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents" : {
      "get" : {
        "description" : "Gets information about the intent models in a version of the application.",
        "operationId" : "Model_ListIntents",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of intent model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentClassifiersList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds an intent to a version of the application.",
        "operationId" : "Model_AddIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the new intent.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created intent model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}" : {
      "get" : {
        "description" : "Gets information about the intent model in a version of the application.",
        "operationId" : "Model_GetIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An intent model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentClassifier"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name of an intent in a version of the application.",
        "operationId" : "Model_UpdateIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the new intent name.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an intent from a version of the application.",
        "operationId" : "Model_DeleteIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "deleteUtterances",
          "in" : "query",
          "description" : "If true, deletes the intent's example utterances. If false, moves the example utterances to the None intent. The default value is false.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/features" : {
      "get" : {
        "description" : "Gets the information of the features used by the intent in a version of the application.",
        "operationId" : "Model_GetIntentFeatures",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of feature information objects for the intent.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeaturesPerModelResponseObject"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the information of the features used by the intent in a version of the application.",
        "operationId" : "Model_ReplaceIntentFeatures",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A list of feature information objects containing the new feature relations.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeaturesPerModelResponseObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a new feature relation to be used by the intent in a version of the application.",
        "operationId" : "Features_AddIntentFeature",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A Feature relation information object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelFeatureInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a relation from the feature relations used by the intent in a version of the application.",
        "operationId" : "Model_DeleteIntentFeature",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A feature information object containing the feature relation to delete.",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelFeatureInformation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/patternrules" : {
      "get" : {
        "summary" : "Returns patterns for the specific intent in a version of the application.",
        "operationId" : "Pattern_ListIntentPatterns",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved patterns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternRuleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest" : {
      "get" : {
        "description" : "Suggests example utterances that would improve the accuracy of the intent model in a version of the application.",
        "operationId" : "Model_ListIntentSuggestions",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "If there's no trained intent model, nothing is returned in the response. If there's a trained model and active learning finds any relevant queries, they are returned with the intent model predictions. If there's a trained model but active learning didn't find any relevant queries, an empty list is returned in the response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentsSuggestionExamples"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/listprebuilts" : {
      "get" : {
        "description" : "Gets all the available prebuilt entities in a version of the application.",
        "operationId" : "Model_ListPrebuiltEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the possible prebuilt entity extractors.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailablePrebuiltEntityModels"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models" : {
      "get" : {
        "description" : "Gets information about all the intent and entity models in a version of the application.",
        "operationId" : "Model_ListModels",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of application model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelsInfoResponseObject"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models/{modelId}/examples" : {
      "get" : {
        "description" : "Gets the example utterances for the given intent or entity model in a version of the application.",
        "operationId" : "Model_Examples",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modelId",
          "in" : "path",
          "description" : "The ID (GUID) of the model.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of example utterances for the model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExamplesPerModelResponseObject"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities" : {
      "get" : {
        "summary" : "Get information about the Pattern.Any entity models in a version of the application.",
        "operationId" : "Model_ListPatternAnyEntityInfos",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of Pattern.Any entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternAnyEntityExtractorList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Adds a pattern.any entity extractor to a version of the application.",
        "operationId" : "Model_CreatePatternAnyEntityModel",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name and explicit list for the new Pattern.Any entity extractor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatternAnyModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created Pattern.Any entity model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}" : {
      "get" : {
        "summary" : "Gets information about the Pattern.Any model in a version of the application.",
        "operationId" : "Model_GetPatternAnyEntityInfo",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A regular expression entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternAnyEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the name and explicit (exception) list of a Pattern.Any entity model in a version of the application.",
        "operationId" : "Model_UpdatePatternAnyEntityModel",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The Pattern.Any entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An object containing the explicit list of the Pattern.Any entity.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatternAnyModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the Pattern.Any entity extractor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Deletes a Pattern.Any entity extractor from a version of the application.",
        "operationId" : "Model_DeletePatternAnyEntityModel",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The Pattern.Any entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist" : {
      "get" : {
        "summary" : "Get the explicit (exception) list of the pattern.any entity in a version of the application.",
        "operationId" : "Model_GetExplicitList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The Pattern.Any entity id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the explicit list items",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplicitListItemList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Add a new exception to the explicit list for the Pattern.Any entity in a version of the application.",
        "operationId" : "Model_AddExplicitListItem",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The Pattern.Any entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new explicit list item.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExplicitListItemCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created explicit list item.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplicitListItemIDResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}" : {
      "get" : {
        "summary" : "Get the explicit (exception) list of the pattern.any entity in a version of the application.",
        "operationId" : "Model_GetExplicitListItem",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The Pattern.Any entity Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "itemId",
          "in" : "path",
          "description" : "The explicit list item Id.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An explicit list item info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplicitListItem"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates an explicit (exception) list item for a Pattern.Any entity in a version of the application.",
        "operationId" : "Model_UpdateExplicitListItem",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The Pattern.Any entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "itemId",
          "in" : "path",
          "description" : "The explicit list item ID.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The new explicit list item.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExplicitListItemUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the explicit list item.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete an item from the explicit (exception) list for a Pattern.any entity in a version of the application.",
        "operationId" : "Model_DeleteExplicitListItem",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The pattern.any entity id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "itemId",
          "in" : "path",
          "description" : "The explicit list item which will be deleted.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles" : {
      "get" : {
        "summary" : "Get all roles for a Pattern.any entity in a version of the application",
        "operationId" : "Model_ListPatternAnyEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a role for an Pattern.any entity in a version of the application.",
        "operationId" : "Model_CreatePatternAnyEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given Pattern.any entity in a version of the application.",
        "operationId" : "Model_GetPatternAnyEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given Pattern.any entity in a version of the application.",
        "operationId" : "Model_UpdatePatternAnyEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a role for a given Pattern.any entity in a version of the application.",
        "operationId" : "Model_DeletePatternAnyEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrule" : {
      "post" : {
        "summary" : "Adds a pattern to a version of the application.",
        "operationId" : "Pattern_AddPattern",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The input pattern.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatternRuleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The created pattern",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternRuleInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrules" : {
      "get" : {
        "summary" : "Gets patterns in a version of the application.",
        "operationId" : "Pattern_ListPatterns",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved patterns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternRuleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates patterns in a version of the application.",
        "operationId" : "Pattern_UpdatePatterns",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "An array represents the patterns.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PatternRuleUpdateObject"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated patterns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternRuleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Adds a batch of patterns in a version of the application.",
        "operationId" : "Pattern_BatchAddPatterns",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A JSON array containing patterns.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PatternRuleCreateObject"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The created patterns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternRuleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Deletes a list of patterns in a version of the application.",
        "operationId" : "Pattern_DeletePatterns",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The patterns IDs.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrules/{patternId}" : {
      "put" : {
        "summary" : "Updates a pattern in a version of the application.",
        "operationId" : "Pattern_UpdatePattern",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patternId",
          "in" : "path",
          "description" : "The pattern ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An object representing a pattern.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatternRuleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated pattern",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternRuleInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Deletes the pattern with the specified ID from a version of the application..",
        "operationId" : "Pattern_DeletePattern",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patternId",
          "in" : "path",
          "description" : "The pattern ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists" : {
      "get" : {
        "description" : "Gets all the phraselist features in a version of the application.",
        "operationId" : "Features_ListPhraseLists",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all phraselist features.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhraseListFeatureInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new phraselist feature in a version of the application.",
        "operationId" : "Features_AddPhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PhraselistCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureIDResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}" : {
      "get" : {
        "description" : "Gets phraselist feature info in a version of the application.",
        "operationId" : "Features_GetPhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phraselistId",
          "in" : "path",
          "description" : "The ID of the feature to be retrieved.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A phraselist feature info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhraseListFeatureInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the phrases, the state and the name of the phraselist feature in a version of the application.",
        "operationId" : "Features_UpdatePhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phraselistId",
          "in" : "path",
          "description" : "The ID of the feature to be updated.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern, Mode, and a boolean called IsActive to update the feature.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PhraselistUpdateObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated phraselist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a phraselist feature from a version of the application.",
        "operationId" : "Features_DeletePhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phraselistId",
          "in" : "path",
          "description" : "The ID of the feature to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted phraselist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts" : {
      "get" : {
        "description" : "Gets information about all the prebuilt entities in a version of the application.",
        "operationId" : "Model_ListPrebuilts",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of prebuilt entity models infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a list of prebuilt entities to a version of the application.",
        "operationId" : "Model_AddPrebuilt",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "An array of prebuilt entity extractor names.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltExtractorNames"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "An array of the created prebuilt extractor infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles" : {
      "get" : {
        "summary" : "Get a prebuilt entity's roles in a version of the application.",
        "operationId" : "Model_ListPrebuiltEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a role for a prebuilt entity in a version of the application.",
        "operationId" : "Model_CreatePrebuiltEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given prebuilt entity in a version of the application",
        "operationId" : "Model_GetPrebuiltEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given prebuilt entity in a version of the application",
        "operationId" : "Model_UpdatePrebuiltEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a role in a prebuilt entity in a version of the application.",
        "operationId" : "Model_DeletePrebuiltEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}" : {
      "get" : {
        "description" : "Gets information about a prebuilt entity model in a version of the application.",
        "operationId" : "Model_GetPrebuilt",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prebuiltId",
          "in" : "path",
          "description" : "The prebuilt entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A prebuilt entity models info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a prebuilt entity extractor from a version of the application.",
        "operationId" : "Model_DeletePrebuilt",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prebuiltId",
          "in" : "path",
          "description" : "The prebuilt entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities" : {
      "get" : {
        "summary" : "Gets information about the regular expression entity models in a version of the application.",
        "operationId" : "Model_ListRegexEntityInfos",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of regular expression entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegexEntityExtractorList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Adds a regular expression entity model to a version of the application.",
        "operationId" : "Model_CreateRegexEntityModel",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name and regex pattern for the new regular expression entity extractor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegexModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles" : {
      "get" : {
        "summary" : "Get all roles for a regular expression entity in a version of the application.",
        "operationId" : "Model_ListRegexEntityRoles",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity Id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the entity roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a role for an regular expression entity in a version of the application.",
        "operationId" : "Model_CreateRegexEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An entity role object containing the name of role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}" : {
      "get" : {
        "summary" : "Get one role for a given regular expression entity in a version of the application.",
        "operationId" : "Model_GetRegexEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity role",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityRole"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Update a role for a given regular expression entity in a version of the application",
        "operationId" : "Model_UpdateRegexEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity role.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityRoleUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the entity role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete a role for a given regular expression in a version of the application.",
        "operationId" : "Model_DeleteRegexEntityRole",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "roleId",
          "in" : "path",
          "description" : "The entity role Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}" : {
      "get" : {
        "summary" : "Gets information about a regular expression entity in a version of the application.",
        "operationId" : "Model_GetRegexEntityEntityInfo",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regexEntityId",
          "in" : "path",
          "description" : "The regular expression entity model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A regular expression entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegexEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates the regular expression entity in a version of the application.",
        "operationId" : "Model_UpdateRegexEntityModel",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regexEntityId",
          "in" : "path",
          "description" : "The regular expression entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An object containing the new entity name and regex pattern.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegexModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the regular expression entity extractor.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "summary" : "Deletes a regular expression entity from a version of the application.",
        "operationId" : "Model_DeleteRegexEntityModel",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "regexEntityId",
          "in" : "path",
          "description" : "The regular expression entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/settings" : {
      "get" : {
        "description" : "Gets the settings in a version of the application.",
        "operationId" : "Settings_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the application version settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AppVersionSettingObject"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the settings in a version of the application.",
        "operationId" : "Settings_Update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A list of the updated application version settings.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AppVersionSettingObject"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/suggest" : {
      "delete" : {
        "description" : "Deleted an unlabelled utterance in a version of the application.",
        "operationId" : "Versions_DeleteUnlabelledUtterance",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The utterance text to delete.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/train" : {
      "get" : {
        "description" : "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".",
        "operationId" : "Train_GetStatus",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response provides an array of training status details for a LUIS app that you submitted for training. Each element in the response array provides training status for a model (intent or entity) in the LUIS app. Note: Training status is not provided for prebuilt entities because they are pretrained. The \"modelId\" property identifies which intent or entity the training status corresponds to. To get the name and type of each model, use the models API which has a request URL in this format: https://westus.api.cognitive.microsoft.com/luis/api/v3.0-preview/apps/{appId}/versions/{versionId}/models The details property for each model can contain the following fields: \"statusId\": An integer from 0 to 3 that corresponds to the value of the status field. \"status\": A string with one of the following values: \"Success\", \"UpToDate\", \"InProgress\", \"Fail\". If the status is \"Fail\", the \"failureReason\" property provides the reason for failure. \"exampleCount\": The number of examples used for training. In the case of the None intent or prebuilt domain intents and entities, this number includes example provided internally by the system as well as examples you added to your LUIS app. \"failureReason\": A string that indicates the reason training failed.  The value \"FewLabels\" means that no labeled example utterances were provided for training. \"trainingDateTime\": A string indicating the time the model was last trained. The value uses the ISO 8601 format for representing times in UTC (Coordinated Universal Time) with a UTC designator (\"Z\"), for example: \"2017-08-10T01:08:34Z\".",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelTrainingInfoList"
                }
              },
              "JSON" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelTrainingInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "JSON" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.",
        "operationId" : "Train_TrainVersion",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "This response indicates the initial training status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnqueueTrainingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/azureaccounts" : {
      "get" : {
        "summary" : "user - Get LUIS Azure accounts",
        "description" : "Gets the LUIS Azure accounts for the user using his ARM token.",
        "operationId" : "AzureAccounts_ListUserLUISAccounts",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "The bearer authorization header to use; containing the user's ARM token used to validate Azure accounts information.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of Azure account information objects.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AzureAccountInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/package/{appId}/slot/{slotName}/gzip" : {
      "get" : {
        "summary" : "package - Gets published LUIS application package in binary stream GZip format",
        "description" : "Packages a published LUIS application as a GZip file to be used in the LUIS container.",
        "operationId" : "Apps_PackagePublishedApplicationAsGzip",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "slotName",
          "in" : "path",
          "description" : "The publishing slot name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The GZip binary stream of the published application package.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/package/{appId}/versions/{versionId}/gzip" : {
      "get" : {
        "summary" : "package - Gets trained LUIS application package in binary stream GZip format",
        "description" : "Packages trained LUIS application as GZip file to be used in the LUIS container.",
        "operationId" : "Apps_PackageTrainedApplicationAsGzip",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The GZip binary stream of the trained application package.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AppVersionSettingObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The application version setting name."
          },
          "value" : {
            "type" : "string",
            "description" : "The application version setting value."
          }
        },
        "description" : "Object model of an application version setting."
      },
      "ApplicationCreateObject" : {
        "required" : [ "culture", "name" ],
        "type" : "object",
        "properties" : {
          "culture" : {
            "type" : "string",
            "description" : "The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created."
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the new application. Optional."
          },
          "domain" : {
            "type" : "string",
            "description" : "The domain for the new application. Optional. E.g.: Comics."
          },
          "initialVersionId" : {
            "type" : "string",
            "description" : "The initial version ID. Optional. Default value is: \"0.1\""
          },
          "name" : {
            "type" : "string",
            "description" : "The name for the new application."
          },
          "usageScenario" : {
            "type" : "string",
            "description" : "Defines the scenario for the new application. Optional. E.g.: IoT."
          }
        },
        "description" : "Properties for creating a new LUIS Application"
      },
      "ApplicationInfoResponse" : {
        "type" : "object",
        "properties" : {
          "activeVersion" : {
            "type" : "string",
            "description" : "The version ID currently marked as active."
          },
          "createdDateTime" : {
            "type" : "string",
            "description" : "The version's creation timestamp."
          },
          "culture" : {
            "type" : "string",
            "description" : "The culture of the application. For example, \"en-us\"."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the application."
          },
          "domain" : {
            "type" : "string",
            "description" : "The domain for the new application. Optional. For example, Comics."
          },
          "endpointHitsCount" : {
            "type" : "integer",
            "description" : "Number of calls made to this endpoint."
          },
          "endpoints" : {
            "type" : "object",
            "description" : "The Runtime endpoint URL for this model version."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID (GUID) of the application.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "usageScenario" : {
            "type" : "string",
            "description" : "Defines the scenario for the new application. Optional. For example, IoT."
          },
          "versionsCount" : {
            "type" : "integer",
            "description" : "Amount of model versions within the application."
          }
        },
        "description" : "Response containing the Application Info."
      },
      "ApplicationPublishObject" : {
        "type" : "object",
        "properties" : {
          "isStaging" : {
            "type" : "boolean",
            "description" : "Indicates if the staging slot should be used, instead of the Production one.",
            "default" : false
          },
          "versionId" : {
            "type" : "string",
            "description" : "The version ID to publish."
          }
        },
        "description" : "Object model for publishing a specific application version."
      },
      "ApplicationSettingUpdateObject" : {
        "type" : "object",
        "properties" : {
          "public" : {
            "type" : "boolean",
            "description" : "Setting your application as public allows other people to use your application's endpoint using their own keys.",
            "nullable" : false
          }
        },
        "description" : "Object model for updating an application's settings."
      },
      "ApplicationSettings" : {
        "required" : [ "id", "public" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The application ID.",
            "format" : "uuid"
          },
          "public" : {
            "type" : "boolean",
            "description" : "Setting your application as public allows other people to use your application's endpoint using their own keys for billing purposes.",
            "nullable" : false
          }
        },
        "description" : "The application settings."
      },
      "ApplicationUpdateObject" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The application's new description."
          },
          "name" : {
            "type" : "string",
            "description" : "The application's new name."
          }
        },
        "description" : "Object model for updating the name or description of an application."
      },
      "ApplicationUsageScenarios" : {
        "type" : "array",
        "description" : "A list of possible application usage scenarios.",
        "items" : {
          "type" : "string"
        }
      },
      "ApplicationsInfoList" : {
        "type" : "array",
        "description" : "List of Application Infos.",
        "items" : {
          "$ref" : "#/components/schemas/ApplicationInfoResponse"
        }
      },
      "AvailableCulture" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The ISO value for the language."
          },
          "name" : {
            "type" : "string",
            "description" : "The language name."
          }
        },
        "description" : "Available culture for using in a new application."
      },
      "AvailableCultures" : {
        "type" : "array",
        "description" : "A list of available application cultures.",
        "items" : {
          "$ref" : "#/components/schemas/AvailableCulture"
        }
      },
      "AvailableDomains" : {
        "type" : "array",
        "description" : "A list of available application domains.",
        "items" : {
          "type" : "string"
        }
      },
      "AvailableEndpoints" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Collection of endpoint URLs where the selected application is deployed to."
      },
      "AvailablePrebuiltEntityModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The entity description and usage information."
          },
          "examples" : {
            "type" : "string",
            "description" : "Usage examples."
          },
          "name" : {
            "type" : "string",
            "description" : "The entity name."
          }
        },
        "description" : "Available Prebuilt entity model for using in an application."
      },
      "AvailablePrebuiltEntityModels" : {
        "type" : "array",
        "description" : "List of Available Prebuilt entity models.",
        "items" : {
          "$ref" : "#/components/schemas/AvailablePrebuiltEntityModel"
        }
      },
      "AzureAccountInfoList" : {
        "type" : "array",
        "description" : "List of Azure account info objects.",
        "items" : {
          "$ref" : "#/components/schemas/AzureAccountInfoObject"
        }
      },
      "AzureAccountInfoObject" : {
        "required" : [ "accountName", "azureSubscriptionId", "resourceGroup" ],
        "type" : "object",
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "The Azure account name."
          },
          "azureSubscriptionId" : {
            "type" : "string",
            "description" : "The id for the Azure subscription."
          },
          "resourceGroup" : {
            "type" : "string",
            "description" : "The Azure resource group name."
          }
        },
        "description" : "Defines the Azure account information object."
      },
      "BatchLabelExample" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/OperationStatus"
          },
          "hasError" : {
            "type" : "boolean"
          },
          "value" : {
            "$ref" : "#/components/schemas/LabelExampleResponse"
          }
        },
        "description" : "Response when adding a batch of labeled example utterances."
      },
      "BatchLabelExampleResponse" : {
        "type" : "array",
        "description" : "Response when adding a batch of labeled example utterances.",
        "items" : {
          "$ref" : "#/components/schemas/BatchLabelExample"
        }
      },
      "ChildEntity" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "List of children",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntity"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The ID (GUID) belonging to a child entity.",
            "format" : "uuid"
          },
          "instanceOf" : {
            "type" : "string",
            "description" : "Instance of Model."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of a child entity."
          },
          "readableType" : {
            "$ref" : "#/components/schemas/ReadableType"
          },
          "typeId" : {
            "type" : "integer",
            "description" : "The type ID of the Entity Model."
          }
        },
        "description" : "The base child entity type."
      },
      "ChildEntityModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "Child entities.",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntityModelCreateObject"
            }
          },
          "instanceOf" : {
            "type" : "string",
            "description" : "The instance of model name"
          },
          "name" : {
            "type" : "string",
            "description" : "Entity name."
          }
        },
        "description" : "A child entity extractor create object."
      },
      "ClosedList" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the list entity."
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "subLists" : {
            "type" : "array",
            "description" : "Sublists for the list entity.",
            "items" : {
              "$ref" : "#/components/schemas/SubClosedList"
            }
          }
        },
        "description" : "Exported Model - A list entity."
      },
      "ClosedListEntityExtractor" : {
        "properties" : {
          "subLists" : {
            "type" : "array",
            "description" : "List of sublists.",
            "items" : {
              "$ref" : "#/components/schemas/SubClosedListResponse"
            }
          }
        },
        "description" : "List Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "ClosedListEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of List Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/ClosedListEntityExtractor"
        }
      },
      "ClosedListModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the list entity."
          },
          "subLists" : {
            "type" : "array",
            "description" : "Sublists for the feature.",
            "items" : {
              "$ref" : "#/components/schemas/WordListObject"
            }
          }
        },
        "description" : "Object model for creating a list entity."
      },
      "ClosedListModelPatchObject" : {
        "type" : "object",
        "properties" : {
          "subLists" : {
            "type" : "array",
            "description" : "Sublists to add.",
            "items" : {
              "$ref" : "#/components/schemas/WordListObject"
            }
          }
        },
        "description" : "Object model for adding a batch of sublists to an existing list entity."
      },
      "ClosedListModelUpdateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The new name of the list entity."
          },
          "subLists" : {
            "type" : "array",
            "description" : "The new sublists for the feature.",
            "items" : {
              "$ref" : "#/components/schemas/WordListObject"
            }
          }
        },
        "description" : "Object model for updating a list entity."
      },
      "CollaboratorsArray" : {
        "type" : "object",
        "properties" : {
          "emails" : {
            "type" : "array",
            "description" : "The email address of the users.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompositeEntityExtractor" : {
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "List of child entities.",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntity"
            }
          }
        },
        "description" : "A Composite Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "CompositeEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Composite Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/CompositeEntityExtractor"
        }
      },
      "CompositeEntityModel" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "Child entities.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Entity name."
          }
        },
        "description" : "A composite entity extractor."
      },
      "CustomPrebuiltModel" : {
        "description" : "A Custom Prebuilt model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/IntentClassifier"
        }, {
          "$ref" : "#/components/schemas/EntityExtractor"
        } ]
      },
      "CustomPrebuiltModelList" : {
        "type" : "array",
        "description" : "A List of Custom Prebuilt models.",
        "items" : {
          "$ref" : "#/components/schemas/CustomPrebuiltModel"
        }
      },
      "EndpointInfo" : {
        "type" : "object",
        "properties" : {
          "assignedEndpointKey" : {
            "type" : "string",
            "description" : "The endpoint key."
          },
          "endpointRegion" : {
            "type" : "string",
            "description" : "The endpoint's region."
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The Runtime endpoint URL for this model version."
          },
          "failedRegions" : {
            "type" : "string",
            "description" : "Regions where publishing failed."
          },
          "isStaging" : {
            "type" : "boolean",
            "description" : "Indicates if the staging slot should be used, instead of the Production one."
          },
          "publishedDateTime" : {
            "type" : "string",
            "description" : "Timestamp when was last published."
          },
          "region" : {
            "type" : "string",
            "description" : "The target region that the application is published to."
          },
          "versionId" : {
            "type" : "string",
            "description" : "The version ID to publish."
          }
        },
        "description" : "The base class \"ProductionOrStagingEndpointInfo\" inherits from."
      },
      "EndpointKeys" : {
        "type" : "array",
        "description" : "An a array of GUIDs, comprised of Azure Endpoint Keys and the Authoring API key.",
        "items" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "EnqueueTrainingResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/TrainingStatus"
          },
          "statusId" : {
            "type" : "integer",
            "description" : "The train request status ID."
          }
        },
        "description" : "Response model when requesting to train the model."
      },
      "EntitiesSuggestionExample" : {
        "type" : "object",
        "properties" : {
          "entityPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityPrediction"
            }
          },
          "intentPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested intents.",
            "items" : {
              "$ref" : "#/components/schemas/IntentPrediction"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance. For example, \"What's the weather like in seattle?\""
          },
          "tokenizedText" : {
            "type" : "array",
            "description" : "The utterance tokenized.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Predicted/suggested entity."
      },
      "EntitiesSuggestionExamples" : {
        "type" : "array",
        "description" : "List of predicted/suggested entities.",
        "items" : {
          "$ref" : "#/components/schemas/EntitiesSuggestionExample"
        }
      },
      "EntityExtractor" : {
        "properties" : {
          "customPrebuiltDomainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "customPrebuiltModelName" : {
            "type" : "string",
            "description" : "The intent name or entity name."
          }
        },
        "description" : "Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "EntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/EntityExtractor"
        }
      },
      "EntityLabel" : {
        "required" : [ "endTokenIndex", "entityName", "startTokenIndex" ],
        "type" : "object",
        "properties" : {
          "endTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The entity type."
          },
          "role" : {
            "type" : "string",
            "description" : "The role of the predicted entity."
          },
          "roleId" : {
            "type" : "string",
            "description" : "The role id for the predicted entity.",
            "format" : "uuid"
          },
          "startTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "Defines the entity type and position of the extracted entity within the example."
      },
      "EntityLabelObject" : {
        "required" : [ "endCharIndex", "entityName", "startCharIndex" ],
        "type" : "object",
        "properties" : {
          "endCharIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The entity type."
          },
          "role" : {
            "type" : "string",
            "description" : "The role the entity plays in the utterance."
          },
          "startCharIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "Defines the entity type and position of the extracted entity within the example."
      },
      "EntityModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "Child entities.",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntityModelCreateObject"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Entity name."
          }
        },
        "description" : "An entity extractor create object."
      },
      "EntityModelInfo" : {
        "properties" : {
          "roles" : {
            "$ref" : "#/components/schemas/EntityRoleList"
          }
        },
        "description" : "An Entity Extractor model info.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "EntityModelUpdateObject" : {
        "type" : "object",
        "properties" : {
          "instanceOf" : {
            "type" : "string",
            "description" : "The instance of model name"
          },
          "name" : {
            "type" : "string",
            "description" : "Entity name."
          }
        },
        "description" : "An entity extractor update object."
      },
      "EntityPrediction" : {
        "required" : [ "endTokenIndex", "entityName", "phrase", "startTokenIndex" ],
        "type" : "object",
        "properties" : {
          "endTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The entity's name"
          },
          "phrase" : {
            "type" : "string",
            "description" : "The actual token(s) that comprise the entity."
          },
          "startTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "A suggested entity."
      },
      "EntityRole" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The entity role ID.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "The entity role name."
          }
        },
        "description" : "Entity extractor role"
      },
      "EntityRoleCreateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The entity role name."
          }
        },
        "description" : "Object model for creating an entity role."
      },
      "EntityRoleList" : {
        "type" : "array",
        "description" : "List of Pattern.Any Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/EntityRole"
        }
      },
      "EntityRoleUpdateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The entity role name."
          }
        },
        "description" : "Object model for updating an entity role."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "errorType" : {
            "type" : "string"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Error response when invoking an operation on the API."
      },
      "ExampleLabelObject" : {
        "type" : "object",
        "properties" : {
          "entityLabels" : {
            "type" : "array",
            "description" : "The identified entities within the example utterance.",
            "items" : {
              "$ref" : "#/components/schemas/EntityLabelObject"
            }
          },
          "intentName" : {
            "type" : "string",
            "description" : "The identified intent representing the example utterance."
          },
          "text" : {
            "type" : "string",
            "description" : "The example utterance."
          }
        },
        "description" : "A labeled example utterance."
      },
      "ExampleLabelObjectArray" : {
        "type" : "array",
        "description" : "Object model for adding a batch of labeled examples.",
        "items" : {
          "$ref" : "#/components/schemas/ExampleLabelObject"
        }
      },
      "ExamplesPerModelResponseObject" : {
        "type" : "array",
        "description" : "A list of example utterances per model.",
        "items" : {
          "$ref" : "#/components/schemas/LabelTextObject"
        }
      },
      "ExplicitListItem" : {
        "type" : "object",
        "properties" : {
          "explicitListItem" : {
            "type" : "string",
            "description" : "The explicit list item value."
          },
          "id" : {
            "type" : "integer",
            "description" : "The explicit list item ID.",
            "format" : "int64"
          }
        },
        "description" : "Explicit (exception) list item"
      },
      "ExplicitListItemCreateObject" : {
        "type" : "object",
        "properties" : {
          "explicitListItem" : {
            "type" : "string",
            "description" : "The explicit list item."
          }
        },
        "description" : "Object model for creating an explicit (exception) list item."
      },
      "ExplicitListItemIDResponse" : {
        "type" : "integer",
        "description" : "The ID of the created explicit list item.",
        "nullable" : false
      },
      "ExplicitListItemList" : {
        "type" : "array",
        "description" : "List of explicit (exception) list items",
        "items" : {
          "$ref" : "#/components/schemas/ExplicitListItem"
        }
      },
      "ExplicitListItemUpdateObject" : {
        "type" : "object",
        "properties" : {
          "explicitListItem" : {
            "type" : "string",
            "description" : "The explicit list item."
          }
        },
        "description" : "Model object for updating an explicit (exception) list item."
      },
      "FeatureIDResponse" : {
        "type" : "integer",
        "description" : "The ID of the created feature.",
        "nullable" : false
      },
      "FeatureInfoObject" : {
        "type" : "object",
        "properties" : {
          "enabledForAllModels" : {
            "type" : "boolean",
            "description" : "Indicates if the feature is enabled for all models in the application."
          },
          "id" : {
            "type" : "integer",
            "description" : "A six-digit ID used for Features."
          },
          "isActive" : {
            "type" : "boolean",
            "description" : "Indicates if the feature is enabled."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Feature."
          }
        },
        "description" : "The base class Features-related response objects inherit from."
      },
      "FeaturesPerModelResponseObject" : {
        "type" : "array",
        "description" : "A list of feature information objects per model.",
        "items" : {
          "$ref" : "#/components/schemas/ModelFeatureInformation"
        }
      },
      "FeaturesResponseObject" : {
        "type" : "object",
        "properties" : {
          "patternFeatures" : {
            "$ref" : "#/components/schemas/PatternFeatureInfoList"
          },
          "phraselistFeatures" : {
            "$ref" : "#/components/schemas/PhraseListFeatureInfoList"
          }
        },
        "description" : "Model Features, including Patterns and Phraselists."
      },
      "GuidList" : {
        "type" : "array",
        "description" : "List of IDs (GUID)",
        "items" : {
          "$ref" : "#/components/schemas/GuidResponse"
        }
      },
      "GuidResponse" : {
        "type" : "string",
        "description" : "The ID (GUID) returned by an operation.",
        "format" : "uuid"
      },
      "HierarchicalChildEntity" : {
        "properties" : {
          "readableType" : {
            "$ref" : "#/components/schemas/ReadableType"
          },
          "typeId" : {
            "type" : "integer",
            "description" : "The type ID of the Entity Model."
          }
        },
        "description" : "A Hierarchical Child Entity.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ChildEntity"
        } ]
      },
      "HierarchicalEntityExtractor" : {
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "List of child entities.",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntity"
            }
          }
        },
        "description" : "Hierarchical Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "HierarchicalEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Hierarchical Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/HierarchicalEntityExtractor"
        }
      },
      "HierarchicalModel" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonChild"
            }
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonModelFeatureInformation"
            }
          },
          "inherits" : {
            "$ref" : "#/components/schemas/PrebuiltDomainObject"
          },
          "name" : {
            "type" : "string"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "IntentClassifier" : {
        "properties" : {
          "customPrebuiltDomainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "customPrebuiltModelName" : {
            "type" : "string",
            "description" : "The intent name or entity name."
          }
        },
        "description" : "Intent Classifier.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "IntentClassifiersList" : {
        "type" : "array",
        "description" : "List of Intent Classifiers.",
        "items" : {
          "$ref" : "#/components/schemas/IntentClassifier"
        }
      },
      "IntentPrediction" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The intent's name"
          },
          "score" : {
            "type" : "number",
            "description" : "The intent's score, based on the prediction model."
          }
        },
        "description" : "A suggested intent."
      },
      "IntentsSuggestionExample" : {
        "type" : "object",
        "properties" : {
          "entityPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityPrediction"
            }
          },
          "intentPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested intents.",
            "items" : {
              "$ref" : "#/components/schemas/IntentPrediction"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance. For example, \"What's the weather like in seattle?\""
          },
          "tokenizedText" : {
            "type" : "array",
            "description" : "The tokenized utterance.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Predicted/suggested intent."
      },
      "IntentsSuggestionExamples" : {
        "type" : "array",
        "description" : "List of predicted/suggested intents.",
        "items" : {
          "$ref" : "#/components/schemas/IntentsSuggestionExample"
        }
      },
      "JSONEntity" : {
        "required" : [ "endPos", "entity", "startPos" ],
        "type" : "object",
        "properties" : {
          "endPos" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entity" : {
            "type" : "string",
            "description" : "The entity name."
          },
          "role" : {
            "type" : "string",
            "description" : "The role the entity plays in the utterance."
          },
          "startPos" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "Exported Model - Extracted Entity from utterance."
      },
      "JSONModelFeature" : {
        "type" : "object",
        "properties" : {
          "activated" : {
            "type" : "boolean",
            "description" : "Indicates if the feature is enabled."
          },
          "enabledForAllModels" : {
            "type" : "boolean",
            "description" : "Indicates if the Phraselist is enabled for all models in the application.",
            "default" : true
          },
          "mode" : {
            "type" : "boolean",
            "description" : "An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true."
          },
          "name" : {
            "type" : "string",
            "description" : "The Phraselist name."
          },
          "words" : {
            "type" : "string",
            "description" : "List of comma-separated phrases that represent the Phraselist."
          }
        },
        "description" : "Exported Model - Phraselist Model Feature."
      },
      "JSONRegexFeature" : {
        "type" : "object",
        "properties" : {
          "activated" : {
            "type" : "boolean",
            "description" : "Indicates if the Pattern feature is enabled."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the feature."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The Regular Expression to match."
          }
        },
        "description" : "Exported Model - A Pattern feature."
      },
      "JSONUtterance" : {
        "type" : "object",
        "properties" : {
          "entities" : {
            "type" : "array",
            "description" : "The matched entities.",
            "items" : {
              "$ref" : "#/components/schemas/JSONEntity"
            }
          },
          "intent" : {
            "type" : "string",
            "description" : "The matched intent."
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance."
          }
        },
        "description" : "Exported Model - Utterance that was used to train the model."
      },
      "JsonChild" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonChild"
            }
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JsonModelFeatureInformation"
            }
          },
          "instanceOf" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "JsonModelFeatureInformation" : {
        "type" : "object",
        "properties" : {
          "featureName" : {
            "type" : "string",
            "description" : "The name of the feature used."
          },
          "modelName" : {
            "type" : "string",
            "description" : "The name of the model used."
          }
        },
        "description" : "An object containing the model feature information either the model name or feature name."
      },
      "LabelExampleResponse" : {
        "type" : "object",
        "properties" : {
          "ExampleId" : {
            "type" : "integer",
            "description" : "The newly created sample ID."
          },
          "UtteranceText" : {
            "type" : "string",
            "description" : "The example utterance."
          }
        },
        "description" : "Response when adding a labeled example utterance."
      },
      "LabelTextObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The ID of the Label."
          },
          "text" : {
            "type" : "string",
            "description" : "The text of the label."
          }
        },
        "description" : "An object containing the example utterance's text."
      },
      "LabeledUtterance" : {
        "type" : "object",
        "properties" : {
          "entityLabels" : {
            "type" : "array",
            "description" : "The entities matching the example.",
            "items" : {
              "$ref" : "#/components/schemas/EntityLabel"
            }
          },
          "entityPredictions" : {
            "type" : "array",
            "description" : "List of suggested entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityPrediction"
            }
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of Labeled Utterance."
          },
          "intentLabel" : {
            "type" : "string",
            "description" : "The intent matching the example."
          },
          "intentPredictions" : {
            "type" : "array",
            "description" : "List of suggested intents.",
            "items" : {
              "$ref" : "#/components/schemas/IntentPrediction"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance. For example, \"What's the weather like in seattle?\""
          },
          "tokenizedText" : {
            "type" : "array",
            "description" : "The utterance tokenized.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A prediction and label pair of an example."
      },
      "LabeledUtterances" : {
        "type" : "array",
        "description" : "A list of predictions and label pairs for every example in the application.",
        "items" : {
          "$ref" : "#/components/schemas/LabeledUtterance"
        }
      },
      "LuisApp" : {
        "type" : "object",
        "properties" : {
          "closedLists" : {
            "type" : "array",
            "description" : "List of list entities.",
            "items" : {
              "$ref" : "#/components/schemas/ClosedList"
            }
          },
          "composites" : {
            "type" : "array",
            "description" : "List of composite entities.",
            "items" : {
              "$ref" : "#/components/schemas/HierarchicalModel"
            }
          },
          "culture" : {
            "type" : "string",
            "description" : "The culture of the application. E.g.: en-us."
          },
          "desc" : {
            "type" : "string",
            "description" : "The description of the application."
          },
          "entities" : {
            "type" : "array",
            "description" : "List of entities.",
            "items" : {
              "$ref" : "#/components/schemas/HierarchicalModel"
            }
          },
          "hierarchicals" : {
            "type" : "array",
            "description" : "List of hierarchical entities.",
            "items" : {
              "$ref" : "#/components/schemas/HierarchicalModel"
            }
          },
          "intents" : {
            "type" : "array",
            "description" : "List of intents.",
            "items" : {
              "$ref" : "#/components/schemas/HierarchicalModel"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "patternAnyEntities" : {
            "type" : "array",
            "description" : "List of Pattern.Any entities.",
            "items" : {
              "$ref" : "#/components/schemas/PatternAny"
            }
          },
          "patterns" : {
            "type" : "array",
            "description" : "List of patterns.",
            "items" : {
              "$ref" : "#/components/schemas/PatternRule"
            }
          },
          "phraselists" : {
            "type" : "array",
            "description" : "List of model features.",
            "items" : {
              "$ref" : "#/components/schemas/JSONModelFeature"
            }
          },
          "prebuiltEntities" : {
            "type" : "array",
            "description" : "List of prebuilt entities.",
            "items" : {
              "$ref" : "#/components/schemas/PrebuiltEntity"
            }
          },
          "regex_entities" : {
            "type" : "array",
            "description" : "List of regular expression entities.",
            "items" : {
              "$ref" : "#/components/schemas/RegexEntity"
            }
          },
          "regex_features" : {
            "type" : "array",
            "description" : "List of pattern features.",
            "items" : {
              "$ref" : "#/components/schemas/JSONRegexFeature"
            }
          },
          "utterances" : {
            "type" : "array",
            "description" : "List of example utterances.",
            "items" : {
              "$ref" : "#/components/schemas/JSONUtterance"
            }
          },
          "versionId" : {
            "type" : "string",
            "description" : "The version ID of the application that was exported."
          }
        },
        "additionalProperties" : true,
        "description" : "Exported Model - An exported LUIS Application."
      },
      "ModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the new entity extractor."
          }
        },
        "description" : "Object model for creating a new entity extractor."
      },
      "ModelFeatureInformation" : {
        "type" : "object",
        "properties" : {
          "featureName" : {
            "type" : "string",
            "description" : "The name of the feature used."
          },
          "modelName" : {
            "type" : "string",
            "description" : "The name of the model used."
          }
        },
        "description" : "An object containing the model feature information either the model name or feature name."
      },
      "ModelInfo" : {
        "required" : [ "id", "readableType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Entity Model.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the Entity Model."
          },
          "readableType" : {
            "$ref" : "#/components/schemas/ReadableType"
          },
          "typeId" : {
            "type" : "integer",
            "description" : "The type ID of the Entity Model."
          }
        },
        "description" : "Base type used in entity types."
      },
      "ModelInfoResponse" : {
        "required" : [ "id", "readableType" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Entity Model.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the Entity Model."
          },
          "readableType" : {
            "$ref" : "#/components/schemas/ReadableType"
          },
          "typeId" : {
            "type" : "integer",
            "description" : "The type ID of the Entity Model."
          }
        },
        "description" : "An application model info.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HierarchicalEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/CompositeEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/ClosedListEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/IntentClassifier"
        }, {
          "$ref" : "#/components/schemas/EntityExtractor"
        }, {
          "$ref" : "#/components/schemas/RegexEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/PatternAnyEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/NDepthEntityExtractor"
        } ]
      },
      "ModelTrainingDetails" : {
        "type" : "object",
        "properties" : {
          "exampleCount" : {
            "type" : "integer",
            "description" : "The count of examples used to train the model."
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for the training failure."
          },
          "status" : {
            "$ref" : "#/components/schemas/TrainingStatus"
          },
          "statusId" : {
            "type" : "integer",
            "description" : "The train request status ID."
          },
          "trainingDateTime" : {
            "type" : "string",
            "description" : "When the model was trained.",
            "format" : "date-time"
          }
        },
        "description" : "Model Training Details."
      },
      "ModelTrainingInfo" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "$ref" : "#/components/schemas/ModelTrainingDetails"
          },
          "modelId" : {
            "type" : "string",
            "description" : "The ID (GUID) of the model.",
            "format" : "uuid"
          }
        },
        "description" : "Model Training Info."
      },
      "ModelTrainingInfoList" : {
        "type" : "array",
        "description" : "List of Model Training Infos.",
        "items" : {
          "$ref" : "#/components/schemas/ModelTrainingInfo"
        }
      },
      "ModelUpdateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The entity's new name."
          }
        },
        "description" : "Object model for updating an intent classifier."
      },
      "ModelsInfoResponseObject" : {
        "type" : "array",
        "description" : "A list of application model infos.",
        "items" : {
          "$ref" : "#/components/schemas/ModelInfoResponse"
        }
      },
      "NDepthEntityExtractor" : {
        "properties" : {
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntity"
            }
          },
          "customPrebuiltDomainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "customPrebuiltModelName" : {
            "type" : "string",
            "description" : "The intent name or entity name."
          }
        },
        "description" : "N-Depth Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "NDepthEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of N-Depth Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/NDepthEntityExtractor"
        }
      },
      "OperationError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "description" : "Operation error details when invoking an operation on the API."
      },
      "OperationStatus" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Status Code.",
            "enum" : [ "Failed", "FAILED", "Success" ]
          },
          "message" : {
            "type" : "string",
            "description" : "Status details."
          }
        },
        "description" : "Response of an Operation status."
      },
      "PatternAny" : {
        "type" : "object",
        "properties" : {
          "explicitList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Pattern.Any Entity Extractor."
      },
      "PatternAnyEntityExtractor" : {
        "properties" : {
          "explicitList" : {
            "$ref" : "#/components/schemas/ExplicitListItemList"
          }
        },
        "description" : "Pattern.Any Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "PatternAnyEntityExtractorList" : {
        "type" : "array",
        "description" : "List of Pattern.Any Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/PatternAnyEntityExtractor"
        }
      },
      "PatternAnyModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "explicitList" : {
            "type" : "array",
            "description" : "The Pattern.Any explicit list.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The model name."
          }
        },
        "description" : "Model object for creating a Pattern.Any entity model."
      },
      "PatternAnyModelUpdateObject" : {
        "type" : "object",
        "properties" : {
          "explicitList" : {
            "type" : "array",
            "description" : "The Pattern.Any explicit list.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The model name."
          }
        },
        "description" : "Model object for updating a Pattern.Any entity model."
      },
      "PatternFeatureInfo" : {
        "properties" : {
          "pattern" : {
            "type" : "string",
            "description" : "The Regular Expression to match."
          }
        },
        "description" : "Pattern feature.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FeatureInfoObject"
        } ]
      },
      "PatternFeatureInfoList" : {
        "type" : "array",
        "description" : "List of Pattern features.",
        "items" : {
          "$ref" : "#/components/schemas/PatternFeatureInfo"
        }
      },
      "PatternRule" : {
        "type" : "object",
        "properties" : {
          "intent" : {
            "type" : "string",
            "description" : "The intent's name where the pattern belongs to."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The pattern text."
          }
        },
        "description" : "Pattern"
      },
      "PatternRuleCreateObject" : {
        "type" : "object",
        "properties" : {
          "intent" : {
            "type" : "string",
            "description" : "The intent's name which the pattern belongs to."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The pattern text."
          }
        },
        "description" : "Object model for creating a pattern"
      },
      "PatternRuleInfo" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The pattern ID.",
            "format" : "uuid"
          },
          "intent" : {
            "type" : "string",
            "description" : "The intent's name where the pattern belongs to."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The pattern text."
          }
        },
        "description" : "Pattern rule"
      },
      "PatternRuleList" : {
        "type" : "array",
        "description" : "List of patterns",
        "items" : {
          "$ref" : "#/components/schemas/PatternRuleInfo"
        }
      },
      "PatternRuleUpdateObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The pattern ID.",
            "format" : "uuid"
          },
          "intent" : {
            "type" : "string",
            "description" : "The intent's name which the pattern belongs to."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The pattern text."
          }
        },
        "description" : "Object model for updating a pattern."
      },
      "PersonalAssistantUrls" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Endpoint URLs for prebuilt Cortana applications."
      },
      "PersonalAssistantsResponse" : {
        "type" : "object",
        "properties" : {
          "endpointKeys" : {
            "$ref" : "#/components/schemas/EndpointKeys"
          },
          "endpointUrls" : {
            "$ref" : "#/components/schemas/PersonalAssistantUrls"
          }
        },
        "description" : "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications."
      },
      "PhraseListFeatureInfo" : {
        "properties" : {
          "isExchangeable" : {
            "type" : "boolean",
            "description" : "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true."
          },
          "phrases" : {
            "type" : "string",
            "description" : "A list of comma-separated values."
          }
        },
        "description" : "Phraselist Feature.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FeatureInfoObject"
        } ]
      },
      "PhraseListFeatureInfoList" : {
        "type" : "array",
        "description" : "List of Phraselist Features.",
        "items" : {
          "$ref" : "#/components/schemas/PhraseListFeatureInfo"
        }
      },
      "PhraselistCreateObject" : {
        "type" : "object",
        "properties" : {
          "enabledForAllModels" : {
            "type" : "boolean",
            "description" : "Indicates if the Phraselist is enabled for all models in the application.",
            "default" : true
          },
          "isExchangeable" : {
            "type" : "boolean",
            "description" : "An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true.",
            "default" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The Phraselist name."
          },
          "phrases" : {
            "type" : "string",
            "description" : "List of comma-separated phrases that represent the Phraselist."
          }
        },
        "description" : "Object model for creating a phraselist model."
      },
      "PhraselistUpdateObject" : {
        "type" : "object",
        "properties" : {
          "enabledForAllModels" : {
            "type" : "boolean",
            "description" : "Indicates if the Phraselist is enabled for all models in the application.",
            "default" : true
          },
          "isActive" : {
            "type" : "boolean",
            "description" : "Indicates if the Phraselist is enabled.",
            "default" : true
          },
          "isExchangeable" : {
            "type" : "boolean",
            "description" : "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
            "default" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The Phraselist name."
          },
          "phrases" : {
            "type" : "string",
            "description" : "List of comma-separated phrases that represent the Phraselist."
          }
        },
        "description" : "Object model for updating a Phraselist."
      },
      "PrebuiltDomain" : {
        "type" : "object",
        "properties" : {
          "culture" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "entities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrebuiltDomainItem"
            }
          },
          "examples" : {
            "type" : "string"
          },
          "intents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrebuiltDomainItem"
            }
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Prebuilt Domain."
      },
      "PrebuiltDomainCreateBaseObject" : {
        "type" : "object",
        "properties" : {
          "domainName" : {
            "type" : "string",
            "description" : "The domain name."
          }
        },
        "description" : "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs."
      },
      "PrebuiltDomainCreateObject" : {
        "type" : "object",
        "properties" : {
          "culture" : {
            "type" : "string",
            "description" : "The culture of the new domain."
          },
          "domainName" : {
            "type" : "string",
            "description" : "The domain name."
          }
        },
        "description" : "A prebuilt domain create object containing the name and culture of the domain."
      },
      "PrebuiltDomainItem" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "examples" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "PrebuiltDomainModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "domainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "modelName" : {
            "type" : "string",
            "description" : "The intent name or entity name."
          }
        },
        "description" : "A model object containing the name of the custom prebuilt intent or entity and the name of the domain to which this model belongs."
      },
      "PrebuiltDomainObject" : {
        "type" : "object",
        "properties" : {
          "domain_name" : {
            "type" : "string"
          },
          "model_name" : {
            "type" : "string"
          }
        }
      },
      "PrebuiltDomainsList" : {
        "type" : "array",
        "description" : "List of Prebuilt Domains.",
        "items" : {
          "$ref" : "#/components/schemas/PrebuiltDomain"
        }
      },
      "PrebuiltEntity" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Prebuilt Entity Extractor."
      },
      "PrebuiltEntityExtractor" : {
        "description" : "Prebuilt Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "PrebuiltEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Prebuilt Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/PrebuiltEntityExtractor"
        }
      },
      "PrebuiltExtractorNames" : {
        "type" : "array",
        "description" : "Object model for adding a prebuilt entity to the application.",
        "items" : {
          "type" : "string"
        }
      },
      "ProductionOrStagingEndpointInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EndpointInfo"
        } ]
      },
      "PublishSettingUpdateObject" : {
        "type" : "object",
        "properties" : {
          "sentimentAnalysis" : {
            "type" : "boolean",
            "description" : "Setting sentiment analysis as true returns the Sentiment of the input utterance along with the response",
            "nullable" : false
          },
          "speech" : {
            "type" : "boolean",
            "description" : "Setting speech as public enables speech priming in your app",
            "nullable" : false
          },
          "spellChecker" : {
            "type" : "boolean",
            "description" : "Setting spell checker as public enables spell checking the input utterance.",
            "nullable" : false
          }
        },
        "description" : "Object model for updating an application's publish settings."
      },
      "PublishSettings" : {
        "required" : [ "id", "sentimentAnalysis", "speech", "spellChecker" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The application ID.",
            "format" : "uuid"
          },
          "sentimentAnalysis" : {
            "type" : "boolean",
            "description" : "Setting sentiment analysis as true returns the sentiment of the input utterance along with the response",
            "nullable" : false
          },
          "speech" : {
            "type" : "boolean",
            "description" : "Enables speech priming in your app",
            "nullable" : false
          },
          "spellChecker" : {
            "type" : "boolean",
            "description" : "Enables spell checking of the utterance.",
            "nullable" : false
          }
        },
        "description" : "The application publish settings."
      },
      "ReadableType" : {
        "type" : "string",
        "description" : "Full name of the entity type.",
        "enum" : [ "Entity Extractor", "Child Entity Extractor", "Hierarchical Entity Extractor", "Hierarchical Child Entity Extractor", "Composite Entity Extractor", "List Entity Extractor", "Prebuilt Entity Extractor", "Intent Classifier", "Pattern.Any Entity Extractor", "Closed List Entity Extractor", "Regex Entity Extractor" ]
      },
      "RegexEntity" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "regexPattern" : {
            "type" : "string"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Regular Expression Entity Extractor."
      },
      "RegexEntityExtractor" : {
        "properties" : {
          "regexPattern" : {
            "type" : "string",
            "description" : "The Regular Expression entity pattern."
          }
        },
        "description" : "Regular Expression Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/EntityModelInfo"
        } ]
      },
      "RegexEntityExtractorList" : {
        "type" : "array",
        "description" : "List of Regular Expression Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/RegexEntityExtractor"
        }
      },
      "RegexModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The model name."
          },
          "regexPattern" : {
            "type" : "string",
            "description" : "The regular expression entity pattern."
          }
        },
        "description" : "Model object for creating a regular expression entity model."
      },
      "RegexModelUpdateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The model name."
          },
          "regexPattern" : {
            "type" : "string",
            "description" : "The regular expression entity pattern."
          }
        },
        "description" : "Model object for updating a regular expression entity model."
      },
      "SubClosedList" : {
        "type" : "object",
        "properties" : {
          "canonicalForm" : {
            "type" : "string",
            "description" : "The standard form that the list represents."
          },
          "list" : {
            "type" : "array",
            "description" : "List of synonym words.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Sublist of items for a list entity."
      },
      "SubClosedListResponse" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The sublist ID",
            "nullable" : false
          }
        },
        "description" : "Sublist of items for a list entity.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubClosedList"
        } ]
      },
      "TaskUpdateObject" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "The new version for the cloned model."
          }
        },
        "description" : "Object model for cloning an application's version."
      },
      "TrainingStatus" : {
        "type" : "string",
        "description" : "The Training status.",
        "enum" : [ "Queued", "InProgress", "UpToDate", "Fail", "Success" ]
      },
      "UserAccessList" : {
        "type" : "object",
        "properties" : {
          "emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "owner" : {
            "type" : "string",
            "description" : "The email address of owner of the application."
          }
        },
        "description" : "List of user permissions."
      },
      "UserCollaborator" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "The email address of the user."
          }
        }
      },
      "VersionInfo" : {
        "required" : [ "trainingStatus", "version" ],
        "type" : "object",
        "properties" : {
          "assignedEndpointKey" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The endpoint key."
          },
          "createdDateTime" : {
            "type" : "string",
            "description" : "The version's creation timestamp.",
            "format" : "date-time"
          },
          "endpointHitsCount" : {
            "type" : "integer",
            "description" : "Number of calls made to this endpoint."
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The Runtime endpoint URL for this model version."
          },
          "entitiesCount" : {
            "type" : "integer",
            "description" : "Number of entities in this model."
          },
          "externalApiKeys" : {
            "type" : "object",
            "description" : "External keys."
          },
          "intentsCount" : {
            "type" : "integer",
            "description" : "Number of intents in this model."
          },
          "lastModifiedDateTime" : {
            "type" : "string",
            "description" : "Timestamp of the last update.",
            "format" : "date-time"
          },
          "lastPublishedDateTime" : {
            "type" : "string",
            "description" : "Timestamp when was last published.",
            "format" : "date-time"
          },
          "lastTrainedDateTime" : {
            "type" : "string",
            "description" : "Timestamp of the last time the model was trained.",
            "format" : "date-time"
          },
          "trainingStatus" : {
            "type" : "string",
            "description" : "The current training status.",
            "enum" : [ "NeedsTraining", "InProgress", "Trained" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The version ID. E.g.: \"0.1\""
          }
        },
        "description" : "Object model of an application version."
      },
      "VersionResponse" : {
        "type" : "string",
        "description" : "The new version ID returned by when importing a model version."
      },
      "WordListBaseUpdateObject" : {
        "type" : "object",
        "properties" : {
          "canonicalForm" : {
            "type" : "string",
            "description" : "The standard form that the list represents."
          },
          "list" : {
            "type" : "array",
            "description" : "List of synonym words.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Object model for updating one of the list entity's sublists."
      },
      "WordListObject" : {
        "type" : "object",
        "properties" : {
          "canonicalForm" : {
            "type" : "string",
            "description" : "The standard form that the list represents."
          },
          "list" : {
            "type" : "array",
            "description" : "List of synonym words.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Sublist of items for a list entity."
      }
    },
    "parameters" : {
      "AppIdInPath" : {
        "name" : "appId",
        "in" : "path",
        "description" : "The application ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "BearerAuthPath" : {
        "name" : "Authorization",
        "in" : "header",
        "description" : "The bearer authorization header to use; containing the user's ARM token used to validate Azure accounts information.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "CEntityIdInPath" : {
        "name" : "cEntityId",
        "in" : "path",
        "description" : "The composite entity extractor ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "Endpoint" : {
        "name" : "Endpoint",
        "in" : "path",
        "description" : "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "EntityIdInPath" : {
        "name" : "entityId",
        "in" : "path",
        "description" : "The entity extractor ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "ForcePath" : {
        "name" : "force",
        "in" : "query",
        "description" : "A flag to indicate whether to force an operation.",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "HEntityIdInPath" : {
        "name" : "hEntityId",
        "in" : "path",
        "description" : "The hierarchical entity extractor ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "IntentIdInPath" : {
        "name" : "intentId",
        "in" : "path",
        "description" : "The intent classifier ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "SkipInPath" : {
        "name" : "skip",
        "in" : "query",
        "description" : "The number of entries to skip. Default value is 0.",
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "default" : 0
        }
      },
      "SlotNameInPath" : {
        "name" : "slotName",
        "in" : "path",
        "description" : "The publishing slot name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "TakeInPath" : {
        "name" : "take",
        "in" : "query",
        "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
        "schema" : {
          "maximum" : 500,
          "minimum" : 0,
          "type" : "integer",
          "default" : 100
        }
      },
      "VersionIdInPath" : {
        "name" : "versionId",
        "in" : "path",
        "description" : "The version ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "apiKeyHeader" : {
        "type" : "apiKey",
        "name" : "Ocp-Apim-Subscription-Key",
        "in" : "header"
      }
    }
  }
}