{
  "mappings" : [ {
    "id" : "a6e944d1-47da-4a33-a0b2-4629c1ccf5a4",
    "name" : "Creates a new worker pool with a specified size and configuration. Returns a lon...",
    "request" : {
      "urlPath" : "/v1alpha/0xlzlf3ij2fgqdq8ygsteuxtwx3oyk2qmtukz281br7i9xyiktrc7j75huhh5uq6edfpk696e490toxmjnn8uf9904bxevcjpvwq107uxtk6xy4gjvempct0g14vu62xqhxqtgyn4b79tq/workerpools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Antone Hudson\",\n  \"error\" : {\n    \"code\" : 1457465963,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ipsa cumque dolor eos sequi quod suscipit. Aut aspernatur tenetur aliquid sequi iure. Non culpa consequatur amet. Cupiditate omnis eveniet et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6e944d1-47da-4a33-a0b2-4629c1ccf5a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.527709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "9781c7a3-2e51-4f78-996c-be3c79356abf",
    "name" : "Lists worker pools in an instance.",
    "request" : {
      "urlPath" : "/v1alpha/78ci5iaz7y88v1hbasadnn2c7i7u87068383qt8lqwhc2/workerpools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"workerCount\" : \"dumvco9aid53t78z08hgcp2ikdanplczlsqzwakolj5xzfxef863zoc8lkvnqinxjr8eysqpyscj0\",\n    \"hostOs\" : \"az97n3ptfvmy0yusz1jxrthj71miqfp9yeygys601bax9ubk095kvd0v9yhvnk6cypai9k4b5juxbj5mhmkhp6bqbxnwq6363mmkqwcaq2yv0cvlg8l9gx9k16frsj9kl9stkzleypv5eij2uuqm8h7fn8tt3\",\n    \"channel\" : \"gtons7g4vwo61983gfrhwp7ahou0oq7wm7jny0t7mntbys1yp9kzxkpr5rghdz8yrfdhdjtswbixotep5b86z8fa9b93hdues0714cy80a0qzhub5w5l3nhh6ql74s5\",\n    \"name\" : \"Melisa Harris\",\n    \"state\" : \"UPDATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"qfbtz7e847bkunq6wuy2xxkivmt5sejtss5u95mab9jygm5zk1b1juvz05hzvzken22woi1lrxflgnzlb7gwot391kuetb06q1do9nic\",\n      \"minSize\" : \"vm4splqor7wkn6itzv5n3067x5egt6kw5\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"qmv6kf799f8duhch5eezjrw3afn287w4hlbyzkuuxe3cdtblbp8voripsm3bgula31pcc35qlw\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"wapdt20rmqu98drqcsdlwucvd57yo86344d7hitv7j6l5vxgb7ht3yiq5jl03tvshuxela58ewjnzl7pnp78ov80q5v6yu2lkota9ybsx2e3upw8fc6zgnz9jlbtbrbrx95zuzg8rl11bbxae0wc3a3yqsbnkup54iq57cw7b5a9q5l2qrhwcy87a\",\n        \"acceleratorCount\" : \"0sdyy6zxr0rtrogne52rapwziai47ptccfpbzz\"\n      },\n      \"maxConcurrentActions\" : \"iql0jqe5vtlzgmhpo5rmg6i555taq9y9r884lw5rzkytpbhu45agk9ic6q8lcbto7r4bj9z0jddj1zdw5t7yexydhdnbrim7558mbooe6a6p7msj2abrz18w99yjxruo6dt9vb4zkjgwjqccvj6lg6k5371672\",\n      \"networkAccess\" : \"otxawmo82y59d6il6yms0g10alz4jwibsii1nrg1nbbnt9zlyl9l02xmn6r44fcx92kbonxgqx6qokz7h9mw8x36or2q64loekenvvizn1rju48jvgyn2iweyyl9saneppsyfp4o16xdyu7t3e8qtzs979b23v8tp7\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/bistrianiosip/128.jpg\",\n      \"minCpuPlatform\" : \"29jltxj4gv5io5fw7h62rsdbpgb7ijdlgwnbm3tghh4evifzdwralxdzz\",\n      \"reserved\" : false,\n      \"diskType\" : \"o3cymusq9t4pjoebmyydac7zcmq4qkytecv06cw77sn63ts2tjbgjtoqa0xlzzxx3ertt57m3la82exosgfh9c9e6lfldttqxm83nnfwf0e69pah3g3ojplynruzlpqg63vo7wgz2\",\n      \"machineType\" : \"fse2c4u2kgbkr9pufqbtzu2kyh55rw7bfvidth1t3ip52gxajlknh5ojr9oifkzily85e7jc2tu0s251ht8cccm0xgzlxh\",\n      \"diskSizeGb\" : \"3fo83s88zrmwn3pfwccyy9qpo45aydvs7v0fv4zsrk9\",\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9781c7a3-2e51-4f78-996c-be3c79356abf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.527401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.list",
          "schema" : {
            "properties" : {
              "workerPools" : {
                "description" : "The list of worker pools in a given instance.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "5615a984-38f6-4019-af22-026ac86957cc",
    "name" : "Creates a new instance in the specified region. Returns a long running operation...",
    "request" : {
      "urlPath" : "/v1alpha/v0u0nacgbmqzezmcz29bc10qs940aps60c04wnvu4dnh9vyjg4xi0mvcd4rby1g7f97rxm0l61qnevjzhp36woml9mm0uuowiyel5k2tnq9t37qhgog23r7da7gfnq7xvgidht4expfqpnnmjdbrrc70zshfpvva9mt0ohfpe9tmf76ldlpxpoq/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Sol Greenholt\",\n  \"error\" : {\n    \"code\" : 1330589886,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Explicabo ducimus aut sit. Nostrum doloribus voluptatem et necessitatibus veritatis. Quod eaque quam facilis. Dolor minima magni consequatur possimus accusamus totam. Assumenda doloremque et expedita \"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5615a984-38f6-4019-af22-026ac86957cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.526861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "154f8d9d-f68d-4711-9cef-aeaaeaafc157",
    "name" : "Lists instances in a project.",
    "request" : {
      "urlPath" : "/v1alpha/stffcobo4pw5xzinoayscjitfbr808ury19pi5dgqstd22q191jgqu60avkb9gtrgs2cp7jriizatvoj6g6zzjj8884aubvnjss3d/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"ho6f1p5a1wy40c34ghk2j8arlpj0oytmxbascm2wsfblw6xvi2wxnuh4wvb4c9osmzvj1q4yb6mi0bhaq65ibpzepbfy5l2xy5z6hw6zcb9fsrz5cv1f3j3bmyprk\", \"ipa1nnlknmvm5p2n2wsrpg70seyutgl9bsos8j113d2drbamqqfqow5o4d4balz37guxmnutoi7r6b\", \"kfremk5zy1hgp9dxbseerb7xyoz41yoi4vodmvdhaps\", \"hwfcbw0qiha6td3voatgzwuqvykanec1vwokh8ntuvlfot12ah0i6ce\" ],\n  \"instances\" : [ {\n    \"loggingEnabled\" : true,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_HARDENED_GVISOR_OR_TERMINAL\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_ENFORCED\",\n      \"vmVerification\" : \"VM_VERIFICATION_GCP_TOKEN\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"6koanj79ec1p9022zbqhqzdezz0112zhouanai37w4aaz7j5rdl5stc48y2g5rsr3m4wf4jkr2n0fsmj1cmolmmk39rulth7ew5htb\", \"xbm7okjrz7fl80945kak4jcsbop8wpjrzrkpouu3tclgj4pa93j24e5xfu2p16t9\", \"588wyjypaoqellaxsoz7a9i0vaafp5qpsk2p96ep3i7bj9zf2xwall4o8x48wmnkd4fwobb7yk4dhpi4j0ty6m6h3fsug6tss6et8ly75uf92iyhpw3yule3zyh2exyvdcrdlmdfno7dk8x23cpih9h54o7b9qbb9pzuba1tkqhozaivhq0a2br46\", \"7ko83gwqsknhloohng77d7nvmm5jk7aq1bc295ejiyz3giwvh7\", \"9s7snkdncvybmx77e4aylrgiven1r\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"wnexwhh9z8vnfj2flalab454trdxmwtqnsgz2dp392c8d0zoamnp1ku2xq2qtfvqbvgzpibus0c126vwl1l433ebtjod4ubn2s02hw7j4ehfv7eenyugr1rsn6vhi6vnu9z9i4e1uv2czdt62fvm9j80dv\", \"bbgqpqcjo56s7efjw937kgwqjigs1pt49ow1r9vug852no4wdmnqi1il2lm5mky3s77l31x60nrgacqmw07upg1bflm4or1ei0ad5ir36pyxdawu05ca4ju88hco0h751nfyxr81j15h6pvd8nfa7wl06bc2d3wcd836o4dk3675br61rtqbqr17tzjh7crqgk\", \"i9hsa6in90c46bc7qkxb176c7\", \"g8nm958p6mx49twpycnao01oiqvq4jb4tmn0dc4ss3ji6wpy2o0q9y90sbhcrmd1209jhhuift6e4yxzwl74mkxdhcbadcn3yerau1lfrp8zbjn0sha1gudzdz98jf2fig7pzvenk9vech8cij3ogasewmftfbipybgpsg\", \"5xto7q2w9o3uqwoziazh9p91gk1bxditt6vx5or9mfilnhtcii2oyd8dkyz9fgv1uzo46ulgm2pubn4o8parnvjc7orvby0ano3\", \"vtb9idy1tcplfhic5sxeuel64x0i8qi2yprm8m71hzwehhb64z7\", \"0ra9car69mk5jtkp93oi5nyomp66vr15kaigt04lnslbwbk37e9lhhr8rj1prbmzy7e3sv13wuapfuatsiw5vpadndukmi6a4ux2fq2zta4dxqhj81dw5ge2j0auqg56u6dmwt0f\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_ENFORCED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"yqnrjt2np6hnlh2rw29nd985nf4pn82xi94g3a5bvackzymfvrmiqf9r14j2h1k66uq6p38hro05qwfadg9jhkkjfddxfqp1mtjb300j06l0zkplxhtegn9v9468gaqh75cxvqkjzuv4r10c8f07tl84yvtm2xxv58pb0k4hvldtc79ytc83u\", \"fol708xk4owy71rbetyd5fbu7ww3rogpnrmofyzhe1mc1w3vtnlf8zxltn7khbkpylbneapvx7418tbhergkh8he2xp5vo6h6mywykjltqqc9e1ot7di1gq5bhc8\", \"4de5uzilrxcq3f3h48h0jazmwppox7nt1urszdq6v07j3zr2i2rheqrgsegly8u55349ir4rjz2xik9hhq3o5gjg2dt54upb1wcmum8wn8q48vzcyxls7hw6yo1f3fdkfxzevhywc9zmgrn889fx5w0a4l73ynnglqi6n9dkpgs9z8jo7f7srygnxq7hyb962\", \"m0llcmqrf8a3\", \"7z9y4m8b5fzzhhi5zx5wte7nxqpypyxyv5k8v3qy6diikcehkyxw7irsncmnamfvgmtwafmt9gzsbcr95xj1qglmk5zj184zpvqm30ffprtqmtc5858brch1p4chm5nhznc80pa80r\", \"vrou00x7ac32uibd5lo9enanxmbaxorav029f9189e7rcvrizbjk5nrb7so8ttp\", \"0rdpr12dmqefvqd20loclkvavpj933c2h777diidjyly7r29s8soencdvk0tjxhbwe32tcsdbrugzrw8rvbbb2wzsoq1friyxnbincvpa4h3dp58qo1lj8nide7l\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_UNSPECIFIED\",\n      \"macExecution\" : \"MAC_EXECUTION_UNSPECIFIED\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"nax7di1wgr484xcuilra7y18u1tsjyh95g7chq9wwtqiauint0d7u7jjv8h86p0dqxmmo9rqhm14fc48hst8hhii9d4ome5byxxedncfyvosb164b94to\", \"38g64dz5uyqwxeqkno6oqy9k8ywwtau3tnpmaadxxm7ofnp8ageg61i76kr08pum65pfifuk5u26ss7yv5von1zqknxmchr2oh9f9i1k2m9gc1hc66zg8ddyo4ycar2vtc9khtyjb9p0rym6m3gvarn23aab4gyty1orwfa18bq\", \"8s3xfnru40a2a5eihcaldv5t54lzjll0wubbrcso2fem5fhp7h7xhh9s2nugpfi6pu98vog4ikx64j6q9dj4hp5jsskodhtp9slc5pta6kmyewnrslrkqf4lq05ffygdant1l90blfqk4dyjuo11rjwoi9w8qpgeunrpwip1nboq50zfgu7199j0rrygaslwgxq\", \"h1n4s3ys3p15omxnksar8d7zs6amcdtarhr0es17lxw25kj463m2xe3orryo859su81br\", \"02456vwbelmvhdsaxwztltuaim5tcpvykmenmeyom45ifiq4hs4e2o\", \"zb48g7gdtmg3sx4e4p6v3pjcuidh9q0kl06lkwrwxne71hg5i379edi1wcwyrmihwz3t30fg1rs7615t6k0sia8gs74ifzgd2j1vkusmflsnepc9r1x8yqpsnyqwgaxjk9qtwzh5tb8w5\", \"9dbronyo5lxef435whw0cr98hqptfqf55lkcsy5v\", \"mys3p5g1y5row2s6kfjkijpwxgwww267onf9wrtmtg10mwe4vl08i3zsvdnf7zeios47gb30j46ve1cleo3aqgtkvysa22eef0hmh5ubtwrn51romp6g117ww52l9h6t91sbbyizaa8lho92jmikch7q3j7jwpfa93uf2skxna1kczetcbripir0fuxlfmw\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"linuxIsolation\" : \"OFF\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"8gaijnqal3eo859yc5n2l4m31q63qmn\", \"dnzo9n720riaxktk5x6qmszn25tth8vglfaizsxxe2coukq03y4odzegas53jjjczpczg69iszrmlypxly0hqet2qnke32ciidum9ac6barkorl5bddf9sk1mbije66\", \"60av23emry0883vfcpefewznanllr2f1uh9mh0b9eh5\", \"dwj4od9uzqmf1aadpat08no75r39hpdsev20b83itwtphvgbvbra3tu1e3c1c17hpiw1qb4gzq15npykcl8bk2af19saeh26etbn2vfo7dmj64kktai7ctp50nv6nh7gd0yjrysout4fr8ylfnjiyzme8rxj8buntymbraljh642xmfyg7thmyfv2tf0c5\", \"q3nrjc19wthl6tzto8mvm2wismmfmv6usiboxfozwmupcz3e3icxisnknz67gxhzogivs68oocd7n1aw9hp35wtqguj\", \"xdv4xw6q3n7cceaoskw4m63exhyyg0yqupoqlru7qtsmirkmvazq5r1l86zh4d4zlq11tg6yii3a9o0q1\", \"swefjmoe2tkt322ta59te19s5fmh2umta1bqjw7u\", \"osr8kcri5ip60yqkgpnns044eu69gtl10fc99zyfwx\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"9tqchupq05w8zvnair5rgo6tk673upt752v9v32gk6ezxq5w4mcvwu83qvxvfn5fe7mo6fhehs45c89ssuxz64jvvvp8z25ayb1t1gxorenqe8toezjeglg\", \"xmfkphndvdj4q04jdkaengrrqi3cp45lw9dqrsiybi8xcxu5cv6sholausaz06734hrqaw574jmwxc91dkrbdd1rdtzzihx9jkscx6r0u17a2npdsad4otr6fticg905vulbk2xah7dzeti3195ih\", \"bmwenzw68niu8xnxgycn0rt9tbgrmvf5ynfepq4r1su8l4icfordob5j5xszvjcmq7c0v1gvxcmnzemrtiif\", \"7i6wsjp34st8ug1boufs5f3sqh1s8u8c7dlsn0znbl4d6n5bvmtbuzghmqvrmlvkmbivfqz3njmz4j59dqajq502opez0grt2bdek5pplkn8syvl4331hule2mtmq0cab69v6yxcs5udhrw8m5bny\", \"duhmmg7daxflx24nt7gratp2qb7n0q7q94u85bohw48rzotmmb7y03wek4es265qcl9m2x25zlij2hlc8gnp9xi9vqe9cw0y1irmd4qc9t6moc4\", \"3uo60m0znbenz0gduf9e3h4c8zmj3p0sl3zvayn5kw309sn345w9sf9tedngqlew4pnd8uqa2oliaqopl4xfprkj64fg59r\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"ltipp5egt9mzmsrb2xilmjt7cl5sop2r0sqkkgwvjv12twyt3setx78uo04yf7y4wfjqjtpficb81hxuzvep3hnpnd9e6xjq8vymkev1fhniwdy51vd7zyi\", \"w1qu5xwyt8t0rt9kgrimjvk4gfml7u33fs1qyensj33qgqwxxt4zvfwh7plcee97zxfo6mq94ukfdb0yu6hv5zq9ugwn0x34849vecs7bjr2krdtt0m2lsqihso3gs86z5hba5jiorgjrz\", \"trackadovphqfvxucfmtuh41hi2o287x906ihv5ozguubs7wbksoq076ypo67pzkhn4v85xg7iuh65yu95ese3tdu6whif7a173oeemfoeq1gxv5wqxunbialw46xqm7daazmesuuq5gapy0qvss8b54zqy1mq56d\", \"tu37e0avzhh8n6jsyqv7cyqmwqinxmlxgz4pbwfjadf3hmgbyupxl6mj65c7arz6uulx8p3ag4y19l0q616gouuls1hw99258i2nyt5cche7dncmofgn5my0vos3vfztwrykv2o5rg246325vgj7vumra4fktftw6qy0oxi94yzxd6cko107gtfkyhrq\", \"x96xcwxb0pgw92znz5zmk7abq56dbdmqg8t2gytmi4gsmdb7lp6b2c0mmyo65k2maah9ic2i4klyy6cogmh7df5bklbe3yhis7fnyi3rn46msj6o9hvq3gr04bya7jjil8zakbwgu4t7ixxen1tb63wwfb6hnvgfqcwq0gtv6ofh2vdlvu7ao0af8\", \"9asp6tgbrx8f3g842gz4856oqvad0bc1mvq1p4i5xzf4sgbzi3zhtsy6c6mt3t2vv6p6kohrsw6heg130mmtvpx6lq2mmpcjmq5mefhi38jw6e9xf9flbcb44z5kjlnj9wsfob11zuiat1\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"bnd9liwnehgi3et4ooalzebkq9a7wdmqgewyf5r3yurnh83vvko9ejuoez7ryue5u6ex9hgzblv3odv\", \"g20xee815c3u9jyuy3subq28ss1rnbuwbj01osuzqab981cd0tp7nxdxrwtvqbcya7k1iuzb8hko3obsdxau7\", \"clqiez5u4orf6sh2vq46n1kfulcoj10xrjmeldkbwbbg3yx5t0dw8hw3tyjyy48t15rv1wpzqbeoq6vsv6edl4fkwta83n9gcmcsw0wu\", \"z7dwevn4mbusjxrginuxxt67cxp57v7ne6ar0wb5k2v2kt9k060j5osszjn3o9ig8lqazidf95ytizezh6sgn1korsz0\", \"pq99nt86d89gdklpksantf75bucmegd8zo5ggq4uc3hrzmu770zx18qhzk2ikqbt3asa6tseq6virp6jpya71nlk0ijozes6gxgjhsls575\", \"r5hdeh71s7yt3qmiblrrvpbfzyl1tb41oabctnlxpwm\", \"2bw5m8vw8okvbhbr5vie3aidqcxwqb9a21lxjyzy\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"sbshrp1usw44j9507du73ax1zackcdl45mt5nis3cdkd4rty0m9xcm4vwqko83wamfvj1a8zs119cxhaekewhfza0jflxmtmjqxzymngddy0bereiehue\", \"imqnks2kmtyoyhos9ofryi3ntdtb85dmac0z8mpo6einejrjjwbk5fst9mayiy00jbw5g686jntrrd39pobfucywyn4tapa3m5077da2nvq2w6vqp426t56ae6ugeda36dyjuq1zdhemqr51ds\", \"ap2b1kny6r2jwk8byc8vuihpvxomqo5h5sxxzxwrp5pn6a6i333l6rwo4ermvg94l4p17uieqllbb1q7zwhsal2rmqy34el4qst4se5m1z7jarw22gs\", \"plhxjbbj1tna6rcdrm4cwwom7b09r3n6epas5rhoyvez5pfwghswstigknfn5rp1llybl2useepabxp7hupr5mg3e5z3cg9lh0lmb7n7zpoh44cd9dmclznatqdavjv2m3h1qquozxqxjfzzg5si193qfmgcgj3xcdd88zcvelciyh\", \"0ifpga2qterrghuo4z5jg0zq2nsbyz\", \"l1tmsm7w9ih231s7nb0m098i2rr1yzau38cuow582gjqitbzco0\", \"tot6sho75sgo23yf2fqkaruy86zw3h48h8m7ap0o6exndcfi6w6vzq3d46vp4v52qjzoo0bqqhvrlegnuvlo3gtktp5adzj0degr6sxa95jifmwj2f6xln32jebjt3yuu1\", \"rck6g0a3fmkzoh7guwds2l58yur255o84pjex38o7sy0b3pu6v155bajye520cjlmlhadu0t9xsre6x64yycknic26ck942p6ki5l7ajoa7midp7x2kxx0fzidq5sjvxiqjtooid2j16e5jy5m0sb2\" ],\n        \"policy\" : \"RESTRICTED\"\n      }\n    },\n    \"name\" : \"Weston Schaden\",\n    \"location\" : \"y3ptbmog78p8ajvpr9buebh2czkvzjflt6jq60vi89ofc3pjlvq8nfx62fms\",\n    \"state\" : \"CREATING\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"qpxd13wf2h8ih51delsaad02oki7l28l50hlakrm3n7l60mt7vu79xn98jcu5a6e5u298as5ng4ea6esv6zww3q98d525zrav30j1657kmzd82j93uv4vdvn10i17ky8ufjhr7kdxoryy5firnl2m2xeuljlit\"\n    }\n  }, {\n    \"loggingEnabled\" : true,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_HARDENED_GVISOR_OR_TERMINAL\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_ENFORCED\",\n      \"vmVerification\" : \"VM_VERIFICATION_UNSPECIFIED\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"lnmehqt0k3ye0pkyi8p3wj4dmmiztrcpuqpaz55rh713yhiylzytthyb3eu6kj9anhtr4\", \"mg2bu86pv6glvgy97cgms5k7hd07bg\", \"tsypmzjf25kh9vtw5a83zd2c4mysh44cgutsxg4tqotreyizmg6tfog6ks8\", \"55ssm6buyttrx8jujsswo4pt36npd61i4o6gaig5pwv6clxqznm6iig6sm5ovcm3zo0f38u49wp9yhhsn05fr2v5dahcasr7006h6aq1j1xzb670p4fuge809669h5r05o51eiuegzrxe63m7\", \"p42dmy8oghelvvlpf5opacrxv1268cptlqepk2nz2gyd8mmk7arje\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"0a4gdepa5cyz4ck3733ca0jxcaqidkllw6mpc7tpmkrls1cuwvi4crayi13cule8vj\", \"noorniymnlv7vz8d8w1orf1oqordeeqjffwkl7hfp36gdy8embi03icpes0a3mzzdtkrpa44yxq7u47ssqarjl6z4t8gxrgscrpayudxtvw4us03pqpdrv7neppag069dvvbybjdrdrbh3nm6vvy4139w29c09ssneyaomvl\", \"9cpwuk6qsdvhgqcyondkxp12fugcyhqpebt0d6vlmbosugiti36qj6kq2nzfgwbsvlslwr0jn1eb10qnlsxavjxyz7lktg77aekh5ceztf5vsgvtp2inr706t1bzb4vvfjb4qwkgmyyjjmipym19mi6iyxbtk1qckurqmxjoncvojb38vumd5iqi83u\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_ENFORCED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"vlj2ol8aysijnv8xfabr66mu5oizycbtmnmdhvrtwqu30fhovxln9wac96q35vmat9gg2rlb49rl2drnix4jau8wdu08k6o2bd2yk5buwno26f2c63p7i1vnn8pum6xx2ua1bwt1uv5ij31yxv7\", \"yhhhsv01wacoajq0irhyn2\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_FORBIDDEN\",\n      \"macExecution\" : \"MAC_EXECUTION_FORBIDDEN\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"qjs1whliqw0blyjcxa6ximgl70jtn3xzdmdsh4do696yf53g97vh6ksdrelmxfkhzjnt1zikggcj14z1ps5zbvyzh3pvpybe2k7ic4r1ixc18fs\", \"dac2ae729ovvmr6k4q4n3yvgdl06a5hqle69vqng5zz0a348ubqykyteb6ry4tz3r5h5r606ei2lprjva53fsfy6gkr6aj0ga46mxi1azx8hnljbkd588v8ujxb1hx4x3ipr0a6e9cwlhnc6by6qg0docgxlxpc6\", \"9g7djmewu39ruromzs4rshljv58lpyybvlwnyevpsjqs8zgekecyba3pl5fdmoevrp3blovmaxhwq2u0ly7xer1789biu5o7uxcmvt5sjz3fsc4jrg2cn4n2krgtomnnsiifsgxbgfv62qiclsh0xaq9m0h4sdwusqfa0efeojuf8bm7o\", \"5msf0nx7d8notb7zwrsclqtmo4r1rshbu2y1ujst9wb6ka0chzg2ge5ye5xaq8mq0bur3ce43jigkvmee9ox6h705e3v8nawk8z4daeznnhvx2e5mily9kc08e2mtzui61\", \"7tcmy8g7y04daxfy52fs0ololdy8mseact21gikipun7c3ogsbpekj0hkzbzp7wzuk4lckuj8yjpw50plk011gb3dnfchg7urxezyofqtnvlka7qbyt025a5dleh2gs6k4wnmvac12dc7sua3ogujris0skig\", \"qzc1urs0iv0y6hedv1yar63w2v5qokvh1kifrwp8jcnzju3vc86ds69dj594stb7wimzuhkudhqznsnv72w6zqdqgboimtgzr4pstkrbdc5d04pjsm10ek4uwk41qy87ze7b67c5ak7a0611sbstbp7330ic8yx185nrvn19llh\", \"q9x9tt9lw2lhp6qqgubho6ovbiqmmb3fmvqp3ps1q12peobygje7dju3aia7q9ny3l15ajxn7omqua8hvv2jxk80d1g234eutnzx8j605n2w1jxvigvo9t8xwurwcsqf5gnhb6u32wawifihcqsccecbvvw9j\", \"z27mczqbr9240gclemyw2m020agooqiwwt4k3nxv3whsklxopx5687h5xvmutfql1kmreyxe79ypqy1i96n315itejf495iv57a\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"linuxIsolation\" : \"LINUX_ISOLATION_UNSPECIFIED\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"gd7vzrv8bis\", \"krfyu25irv5fh6rx1sozp5qkxobfucx6h6qriee0wva58lq4z2gpm6jcxkpdc4gq4eks1l306wz4llazaeg99lhwiom1ct53vzpfdww9pvo6eexvut6121cc7kgnfqkla90mpqnv0thpcftf0vgr5q9zu0gj6oebw46w076w4stscs59kzvmvwfuz4il\", \"43aibby13f2pemsc7bj94v9s6dks7jntghg06az91ncnx8ucl2on5jyrztxuyif8gipnfznrjdo766sqgpfhqfuezr42zv3s4xngx0tsyshqvvl4adcent79mnf2wzu1r28rb7ardq2s21thst6\", \"zc5wsmaj2btnkoka\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"ux13krx8tioic62pce6xzumugeietmsc7ael0mrifc1mg6p27o2rrmvcovrheu67pduy65h5ctipf\", \"qongxnye6tdvyqzw1myhdgj09jwtt0g1c3uyh8q27fm5kncyl0irthu8ngj29qfcfefnlyq8z9szr2agsc89h7zm5xy1ze8m7s4zsnxukklwxqkbmqt3voxx\", \"qu19qc4o5h8uhttnl1e09vz9upg1639k5silvpsyuu71g13fptucblgponiiqkpnrwmifub862p6fc6qzz6n7ait86t7h96vh7\", \"6t41376whnajuo5sjggyzw4kki6ffuv17t3rg1h4vdvkddknmndmrqgorgo7r3h11t7ew4j8blurbxzw728gzkhu5bdhhylx2unxy1kqczum9nij276t09rnu6lzkowg097gjog4ajcjfj5g73eoeq6nitl010o320gcbo2adyb1lubf\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"1hhzvkfr789n3xecfkzzm96ia468tls6k00pmwzk639em78tc44k7frmfzlkju0gkrlt2zu0qa5cjgryjibsek6sz0i\", \"cbiezypifgxyagrdgpu\", \"ezgaxyv3dtq2cfp30zj7io08x20w1wjmwmrdx7pj4phytupetn5uf515kb8pej2yg4dh79slo1jlnn0coik4s1e1a0mi5a1bbkpfts7xabm905cpdvju\", \"muibctlc7dr08mxwm0eig\", \"vlvk38xjnbywuzvpmtwtzja5adbav23kd3iyjix08bkil05gbres8vhq28l3f8lclit7pthusaqs2bg8bmq7x6q6f00qbp6tu43ay80d75kc7csuz4nz2ng54u2upqeaucnkxgvs0zexveci371jongizlantrs6rfjc\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"0jolbxpkrdhi29xogbv8t1\", \"s9ar1e9jd0fjg3r623a5e3u6bg11r0ggp5jmp6w64wk203uc7ra6sjcawg3dwvdgzb7dyh343etm0mybe36omulcra387b2iw\", \"zx556vvh2wjy42o3x4ugyk7f8eamj7fqzpw0vu3dutjvbshosotvfzf1mkebqqihni9sxfk5e8ja9ddadstlovi2eincs6zwlpx5d3ujimjqta3zpzq1zf1ib9vtykf4l6sqeguz6jvhz9\", \"724xhxuyy0s8ojsflbdmawy8kn8u387ka0e4p7ytqja5fnovd064uno11xmta3xu5dyvlvbje4n40van8zuxo6x0\", \"ocu8xh2shvril9ksr1vh9v8kjb7d9eoaowyorapwijrtlpr\", \"vucxm9op5v98a5cejv27310dp8yg8z\", \"tog7dojwb2sofvedtyerz3a1cuh2yark1l1qb2m6trhrgo4ray6vcewwrlxk2mcav1l9sjxnusuj9xtwi861wl33uvw2nz7seh3fiam65va8ksr11gvd107ninj3h2s8ud4exbqnyiuihb8x711blkdnyhhywy79wdnobuxn\", \"j9enutktdr2u2rh704njdn424axfgst1evl8fjyf9b38fe6va\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"0qvwgyffllonjy84zgg5pgcf0rzdk5l05lomh\", \"tb1fmrwyitlegpxz5g91pvgpkg6nda1g6gy4rq02hdcpsg8ktvsomw0dws7bap94rfn7u10frmcjz0iec14cbly8js84v2obptclabui6xm90bpz7dz9rgnrzn0b594elwhm834avlta77ai40r6j37xvh7gv\", \"byhydo25qnj0uam5b6a65a8pqzpmfej91f42mve39k55d3brmc15u3ctmsbkdgwvbin4j\", \"wjtvwwjn74wb3l15zdf71q2ahce3376foa7v3ud933un9\", \"vh6u5alzt9aof0aa6yj5s303r0nnw2akjt5mp5c7ewhmb2hsfa7hqyf\", \"18bx0753f44tyapewnyiyrivp9cczsornz407542014q9l472i29wwnuec0eu04vyb7faew2yzkbxwq26k6gkrio5j5ksgavfs24sbu8w7jt3cpdndvhe3dr7ikfx5r11uz1fgc7be7j1tsytl1bfka4wp10u1y6dgflactoiuad8q49lfc2hbcarr749grl2\", \"hoshiwylpi2jjrpnibnm8xzk83hhuezdeyvzhssev9bi5vlq2i8e1hdc7w\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      }\n    },\n    \"name\" : \"Stephanie Schmidt\",\n    \"location\" : \"0a7tebhqxfzfk8ib1qvdk9vn5ywspithmpv9x6tu6s0wjmku\",\n    \"state\" : \"CREATING\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"smaqzya5niodwfg2314670g4bezjwts9yfzdboo7pfvnptjjmvt37w0slsih971ze15342fzknvecxckfa3hmm2tif36u5i4qt93ax2a8unipuxtjd324\"\n    }\n  }, {\n    \"loggingEnabled\" : false,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_HARDENED_GVISOR\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_BEST_EFFORT\",\n      \"vmVerification\" : \"VM_VERIFICATION_GCP_TOKEN\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"zxo2zqlm4n0gh3yfagtzw46lxnn0uf7lq6nz3tju0hm32qsswl603wzta2xnzdqqry7yhjkrzxmfkjdae31h42xosjvfgpz8qrb22iwx4hny80nkzjbh3frzavgic5ey3frr4py95q5vt3\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"8uzal6klb1kdh6m9fo2uzevgem2qkpmbvkp9052kj2c5u4b5ppux56ibkj3mtchgdtxwuw2wkbz6mif3um0t98ohhly9imygld5v8usxbsynz8pyex3sqbad7eru8mvfyvgjx\", \"l2wmh7iocx8bk0jdln7cxdfnujw4kffcsjxzp9iezvejjzk8jl8t7ofsknzu22yxbmpluqc83njx4r90x2e14h8rbg35kj21g6q4xzdixpvarj15h5skpny5lx5xq3noh7dc1sdflunhx\", \"6806vkvt4g0yrhb4f2eoxmi9e30m804y2s5yuiacr1f24qtx3h0lqcv5cscqkd1e0133m15sczxr99r08jnnpdagq8cugnah4uf75pdv8rh58mzxzspy\", \"1e8r3xtynlr\", \"27404z9ky465a3hx8gtrs82gf40gajwvv5qgpsf979nydbp8cv4nznr8y7vdj3cvjqa5ggfqaiqpc3qu9j\", \"s2cfe9z4kcy8dsd9zbdubup9neg22n7tutiddr2dux1wkhay2mcxlaqqjjdakpyxmm8ewad0k2uprl4phi2y5yd7s5y01wwhm2mjevp0y3j2yo78hod0mx3hz29p4ryvke48byqj7tuj61dl\", \"13wcx53rr4ug5071epoo6hyxj9wa9foa2pu75s65ihh3jcs49z5b1me2md8u53ps56ajpg9x3t7kiclewkxiujwe6eomsksy1145kczmywyva\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_ENFORCED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"tv0zoeyyhjxiszlgonzu3gwbk8aiac92wl6lt9sj23bhk6\", \"ckrmhg3o2vamluzfo1f5vybnpfntssv251kfdeg83m3bih7aqob6o4wfb78b2oxeif3h4se22xf4gfkoo6rzp08kgvw6l877clhgec56iaiymiolbdbak0rwcy5ti4xxj7hivkirgodg4r2lpb9ikm6o8cz9pn0wpa\", \"r7un9ya4ukzw3fal9nwo8swx21hhpuj93m75vamgg3bjm6d6d7puic6ye0up94gb8s8kvrn82iafg8ig9swzdn7yulnibemaz2qoleaz69di94tv4f2ori8yizfkl90lzi1xxyxuconbirjuaybj287xjc7pw0r6x5xorzqpd7fpxf761auu\", \"oeuy44p8skywl5b3j968noo6iya3vtsvyufqhn3be2y0z8d3fkdomh8e9\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_TERMINAL\",\n      \"macExecution\" : \"MAC_EXECUTION_FORBIDDEN\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"7u3uw2w6wp3jtc16pdmhrj5nznkt67abdpa6newhb9qy1431wmvsl60ajbjyalkj6dvmd1j0xnljtoe40tm372de0s0vjddme99spoyqvvd9pl6n8g387k34jk486zxrbad2op54sctewhz3wkl0jj4ujjutbb4i7kmhaex10n\", \"n4b7lfyr3ababu6k7e31u468c8lorhx7l592rq9j8yjqrrsbdjh6docxnh3fowluwox3oz0aa59k09bxa8jz1zlueruqy10v8lusgu62z3hd1abpbq4zfcf\", \"d50tqr1233pqzppdv1g0bh0gj3v\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"linuxIsolation\" : \"GVISOR\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"hj6g0em88u67gtt6ennswrwu6xrb07h3t714wsfw41h2n42bkip59cr482l1a80wzn4a1lg9upo4xy5ad42ebewpr2b5xa4qd7\", \"0a7sqpn0bb4wo4x024blby78odnn64sdcg6x9dnbdu3ralw793jv48fsrcymfbcnbviu9rkp9u7vpqaldt58g7z4kzx9q38jt94g\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"ptu5h5rvumvojeir95mxn5b5mpc8t8yls2w5fc9eitvzwmheg3odywbyrr4pfrggoe7ic81994x0s17xrqs0daz8sk9mnu6daxu1y\", \"f891pqzawbtr2nt4jegz85hdd8pv71q9s28mk7wssk1b631h9v8alodt3hy3q0yash2nnw0b5ec8wj2w5idekce4rq017ekh0tnfj13b2yzd7nzuqk3zhes336hq0at8rai6mpalg5yef8o\", \"7qwoznihxmanzripo\", \"tkmnjavu4l671jdmfjg7a5fvprzajqv4wn7379n5ktqzn6aej7p16e7simv45901mc0l7doe4s33y6lv5yps3l6gmmnemjy0cjasrliiklah1n6mk5qqb6c28auq5ozj549u7d9rtmqny5ly883ow2tnsvk278xhhu4uy51cp8of3\", \"3hqann2hrte8mlijq8bxximfbixj4o1zu88l4crsny4gqod8ddp6atkljozrgz6pm06guir90qu20t1oyhgduupwzvvzdq3c23zoiwgmb16x0n306qpzeqrzqiiyitrujfloumx5o2i5unu8tvsag8ondfow67qx49a8vxjmuramjbqvijos9sjbn5xdfwc6q93sa\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"xb1xzk8zx4dmodrdu5fyalbr8r6ulh96wja011\", \"wj7cycecn1ref7obln7epw7jw8n4piswhiiyainjws80p9dvv0jxfdgche37bwjjpron73lsl7sasczet7r80g4efq9gtxukar8exkkoltof5zn93e8co4bxitc2bk4yazqrocfygwn7\", \"sm275sxwga7sz1tsc1vzdspfmjp4u6cmlvh9yfbxs58g7kf61o8cbo6tarddztm2bxceh1ukuqrjm7iuwt2d45zl6icjk1svtnrph62zlo3qvt88n\", \"37890em6qbyuroxii383l6hd4xgiybenuixonq2xpk4lsgq3jep9414l3ilowjdht1jzt5pbofkgd5v1ju9dz6ki9zpk5mqymgtcftg4u66ezr5u54ztstiw7h2u4otmnalco\", \"x4drgk4nudhwdrx5r7i13d9r74bxsl350ou9enpedl04e4l34c7um9c1wbme4tteofj18pawdt02l8dvbe5p8515g5zqfiupj1zyjs7ueif26fzo524x09rnox2ku4t0rv3xihsdd\", \"tdu2iwptufsc8fzn5sos8p2zlxoo0kwnqjf31ltakj\", \"f7cnmsq5swwms2wexsrf5we5ytmijjkqnp2v90we8obip2c6bxo3bbbsqhv1dztcoh8aejufxcnxh3zjsv4bqcaoi3s6tixrtmfgvaj3gteoe9rnbfv3ifzhtnxpjgaqcyjpzmz3oiurv8sw9c1lz0sckaid813mvhscr5jxa80ackp5umyshynj6ozr7phtyw\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"ovz091ngoy9z9jzbatwacgi3k5805quqgi1hew4jcl4wtvdnh8e87k0dg2g8fi9g0dx0xqf1lq77zz3ck9t9l26yw4tkmse95i3k0c98su8hccoytaohnp1gr6oc5d1tngb2le2rlv0dvixxpuap\", \"q5grc5byxh7sfyx7tx5tdav45wwdy87ya0wan5oh308mrrgpgkwlcswjauh1\", \"0ycr9ger598hm0f1whog6ab7bsug2o5t910vdk2cbst96o7kgakij1fwhnbgddqb5hp39zfj1o4f\", \"zyro6uevwppirdmx61q8ia8y3z1b323pawgvwx5dom8jn0nwe2uih3zxslji0q5sntkh2xlurvi1blv3ygv3qevh3hypo998s5alvu9ijv74wcnmwqkm9d4z47qvv9erzrn5ojgy\", \"if310k5fg0emcpq3pynj0nzm98sqclrpxjbbukc67ns1zf58malabas9lvxz5skhnk2lmdl59jbw1o\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"szeb76kd8q48dpgbkd049a\", \"t7jivthsxdamx7okoyzz3i0ptolzhhb7y3j7la3yiao2citc1eopthh17nx\", \"4p9nw6fb19x75gs7ud01u5pnc67crm9j\" ],\n        \"policy\" : \"FORBIDDEN\"\n      }\n    },\n    \"name\" : \"Mrs. Maurice Will\",\n    \"location\" : \"0vc2eodxu16ah8coby5cq7fyghucbhe9hen10q120z8a8z4kw5a9p93ifmjo7iav4ujowduypc0brgy9inbvcoeerrwv1ibby0dmj7pbmbvl517gkdm7ryuvp518oypbxjw\",\n    \"state\" : \"RUNNING\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"k75ma3y88vm4hjjxpmmf2k6ebcob9ptd3hfxm6azeto150916fdwrw0hkp7tf205nz4dtor1bl51\"\n    }\n  }, {\n    \"loggingEnabled\" : true,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_UNSPECIFIED\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_BEST_EFFORT\",\n      \"vmVerification\" : \"VM_VERIFICATION_OFF\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"of0k9\", \"61yi8zhuh4qqrp8u8fgh6s35f1p77xke83ngsdutfpjp04jttl3qzkni1pg3ataeuwpld0iaeda42uarpxpkk3vri3c\", \"gf1\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"tfk8iw9kkigf7ey6yt99vtkk55lnkqgexbdtpjnoj9bb2vsxxn87cjc7s9vee1howw344uykn60rud0lm5iclckp5207e0l0vvmtmdadvjr\", \"2t7q6gm9qn598\", \"ozisigc6sre6n7qwd8omibsh11pyxc1jt7ui939nwk4nqqzyypz1ufy9j4aksp61mmckrua4t2jkme9txnhu3uaj0q78eh5e1pz8omm7zobsmer83v9u9esu5mpilbvt0vaj4dpq0zake0hkc4wk4pai2wmlnt\", \"sllxaqma7vhvdj545pcc0ax6us\", \"s5p6qwzaktsn6dpsh5cb2fka13rzbgox2ld4fz0720y0galgmkap1qfau7zzmffrormnwrlcp6\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_OFF\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"ia1tilxkoamszqu66vrohsr1860uwjem1qhnyoqidiv0yhzo7btqufvdr9vheoi618t6fo7bf15y4xp5rwgmv9ipytti8gytp05pkslzbvjdsa85h8h4v1w64thfy7mpy6xk7hjqhz6d5xt2l5kpyjbvmf0npbtm\", \"4yhwzdhc77329rvqe0s2qhoaly6vak83goz6tdfdf3gdbf\", \"rc1xutejn16xhj0kdhx0ukios5fgewj1y\", \"3tw6i69bhzijgpb80k5ticdexxu1q3plf4sa0fpzy7l05oaoe7182rk7eholxuzf7vxp4rxipr71ecmdaj0oox9dsfycxwa3hhw2sfghh8r2852ih0q0u90tt3cosl4ivvzq2vnj0xceijb7rb4927s21iq621pz9xj94sl0wjc23i\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_UNSPECIFIED\",\n      \"macExecution\" : \"MAC_EXECUTION_FORBIDDEN\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"18dxrlr7d944wsp7ek6doe3e0e9ald35tecgjp2wxi0mstx2v4maz0arq6kyfhpgdch0aplih1b1lxzmo2pdk1ji0x0kopz6\", \"dohlm9bw1jomukx9zm3iofx13jl9kkyljyc3jpqg3ad1ocpx2ltv00wq7hj4r3vlourrji3omone0k72yvub6ozidv\", \"kcqxsk6d4re519gjjyf9dfv514dcs69454lf0n30f36qpq6rcoilldfbtyowfqpgdd929o0a14hwb2dxzcpjn1ejinot8aojqmngpdhlavv3x79kv3fqzlnerw1upmfio4sqy4\", \"3kw8o2lqejvjcb2tozyyjjtxggr6tujj78pzrx802fm5hzyzq320g41i15t2vd2l0969vlyt89um8e6e3zguzh6gma\", \"fkvuhsuim7hc9u1gft6u166ay5klcd561cc9nvhjal77u3ndwpwehfyg5qksbpymmxk45mz8tta8jn2fdvkmlpg8tinc3sx6d28plwikz7eag4qpqkp0ag5pq68rh0rvm40al9p38q23cd\", \"301cyknh5421vxbipj8u0utem1jbcg4qvyfrphg1vdvyeneuu4kvbkdov7gy6riwi02z61xet7a1n1a49afbe0glriv585mjtsfooduko1plf8v112iy1a9pmo2kjtxujktd1a3srzurejenm35r4dgs2smyrt0sln1nnp\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"linuxIsolation\" : \"GVISOR\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"6nzoeqkx8y160pe97m2k1cjt85rprlopqzf6ku4bluykx7z60jntrv6b568uqyu65t2nm5su32wygcjkpwv30azvs9kzuxy2iq3jqbj8j0g1dh8b6pdjr7pl715ytlcq1xkjyzxn7f\", \"kwho86tbtf6w2gzyo734j0c084fp08x1ay86v40t369hbnvaube2938h8mf57ogahzq0xp973lcvlauo7llxwf7lkyyhkrf6a24um6gmofke3tj0vr2b15mkxlngofnqz85hf2wx82rm6szdnizjzcc1dwzmbectd90j7dytx8j\", \"762jopz2h0rwofj3jqhwvpk3l\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"s665a4vv58uz7ucdokohr6if26xi876uze5bhwla3jo34z59s9vjm3bkwnpyei0xt90irnebdbrp5cpddjw9o4gy0i83qbwibr7jz1xbkhf64ul801mubbad\", \"4lviun6tez7gq93qgzhqpu2u\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"tq21xr5fj9aur5n2xs9njn1yaxn8wrb36bu04qxs2xhq8ruzm65zdnerpjfj70rp0ukx5gzmnvb5eaw0meuxl1zaoepra5xnzq8yrbkzd3kib96b\", \"ir86ww96kxoamwxwrvjtd21qzvl1vrdf1jv8rzzzzgix6w01t9o6mm65e2n5pr4ogm7daiatrzgkjez8un\", \"yqr4b56hhz2cfdg0m7pfko7jjn0mx9xr7ooa9hnkvrcda3zfjrvs1vtn3000kqyayggreyv0p2vd5rq8gkyyiqdjbemokaceamr60zr89slxbxe7dpafofqps5qxpqi\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"xef99fi3tz0lc6qsq28g25d540l5ujmkcgti3sz3se4dpvrn730yqwfn\", \"dsqlfzaw60a3qx6gzxs6wj27fg2x52dbk5s97m45hg2\", \"gk22szoof5ku2\", \"6uv4fjhrzf9slsumdh3zpj3w0c1kuwgrt3thfdia0259fjuptvpii76osggiepga6tsd4gi0ggrwnsubpfuc5uu52nu17bn8nx4331mstfc7pjcxrai60hne2vxsghob7l92r3uftzi5ada\", \"jpga086ojprl83yemrhlkin\", \"xhnlb93qvruuasro0muyg1bws68qbx5go1f3h0t0y9c\", \"r1heuwk8klr3gd9xy0pk4owsg67mf17qkls9n5lgmaqxm0o0bmmh9ldt3ap9ev3kqpnuewzqijzbuqxhjmtj6kd59menprqe2uftan22oilcxdrlzkm92gbw45i19p9o6f2svplydfhdrbkr99t4\", \"uri7hidw3o3yzqjfq8dlx1on52u9u20w8g9gw3i88a8onfp7wnctll9wb0e6lzatbzz767t7d9hxn9jrgzm\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"l3aq7u0hjy2trnm87lq84zwufr5f97t30jdie3zgl8bh6rrecj1r\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      }\n    },\n    \"name\" : \"Jeffie Cruickshank DDS\",\n    \"location\" : \"glss224zqoj1flxuz4nxzy6jzyhaytiqfqezorpl8now4pfe75nk6x8e7hh4hphil22uh1hxnogca6kvkpkhf6jpd6acn99ca9kym4wxh10ethx3q75whzve9p9hrs8o3it3frd0ca2a8h68d\",\n    \"state\" : \"INACTIVE\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"d4r4cw8jf7pg7w8bo1nyx2fvcrafn8gtqj2ghjni3wreswtkgh1l94nyvakftpa5fkcju5k6jn94js29irg9ovkd9eks9hji7p5a\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "154f8d9d-f68d-4711-9cef-aeaaeaafc157",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.526524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.list",
          "schema" : {
            "description" : "The response used for `ListInstances`.",
            "properties" : {
              "instances" : {
                "description" : "The list of instances in a given project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Unreachable regions.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "52027649-3468-41bf-9dd2-8b3e7069bd23",
    "name" : "Sends a test notification to the specified instance. Returns a `google.protobuf....",
    "request" : {
      "urlPath" : "/v1alpha/Burton+Thiel+IV:testNotify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52027649-3468-41bf-9dd2-8b3e7069bd23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.523348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.testNotify",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "ddfced5b-5bd7-4ee5-8b7e-2469d2b5f0a0",
    "name" : "Updates an existing worker pool with a specified size and/or configuration. Retu...",
    "request" : {
      "urlPath" : "/v1alpha/Mr.+Gema+Bartoletti",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Edwin Johnston\",\n  \"error\" : {\n    \"code\" : 611544120,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Eligendi itaque qui consequatur sed aut et. Saepe nihil occaecati. Quibusdam sequi libero molestiae sequi necessitatibus corporis neque.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddfced5b-5bd7-4ee5-8b7e-2469d2b5f0a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.52326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "2f3b0690-056c-4884-9090-b2df69be9fe1",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1alpha/Bessie+Kulas",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Marcella Hayes\",\n  \"error\" : {\n    \"code\" : 711291694,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Rerum voluptatem repellat. Rerum cupiditate officiis corrupti. Dolorum corporis reprehenderit aut. Occaecati sint velit facere unde. Enim magnam unde officia nobis quas placeat.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f3b0690-056c-4884-9090-b2df69be9fe1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.523047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "542d8209-5c06-4e4e-ae76-18af22ab4fd9",
    "name" : "Deletes the specified worker pool. Returns a long running operation, which conta...",
    "request" : {
      "urlPath" : "/v1alpha/Ramiro+Schaefer",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Felicia Paucek\",\n  \"error\" : {\n    \"code\" : 1101870283,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Explicabo quidem hic veritatis consectetur consequatur perferendis atque. Earum ipsum veniam excepturi. Optio et qui. Exercitationem itaque aut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "542d8209-5c06-4e4e-ae76-18af22ab4fd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:26.522815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  } ]
}