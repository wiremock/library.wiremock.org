{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SpectroCoin Merchant",
    "description" : "This is an API designed for merchants who are using SpectroCoin services and wishes to integrate them locally.",
    "contact" : {
      "name" : "info@spectrocoin.com"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://spectrocoin.com/api/merchant/1"
  } ],
  "tags" : [ {
    "name" : "createOrder"
  } ],
  "paths" : {
    "/api/createOrder" : {
      "post" : {
        "tags" : [ "createOrder" ],
        "summary" : "Create merchant order",
        "operationId" : "createOrder",
        "requestBody" : {
          "description" : "Request to create order",
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/Order_request_class_used_to_provide_order_specific_information"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order_information_class"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Order_information_class" : {
        "required" : [ "depositAddress", "orderId", "orderRequestId", "payAmount", "payCurrency", "receiveAmount", "receiveCurrency", "redirectUrl", "validUntil" ],
        "type" : "object",
        "properties" : {
          "depositAddress" : {
            "type" : "string",
            "description" : "Payment deposit address"
          },
          "orderId" : {
            "type" : "string",
            "description" : "Merchant provided or generated order id"
          },
          "orderRequestId" : {
            "type" : "integer",
            "description" : "Generated unique order request id",
            "format" : "int64"
          },
          "payAmount" : {
            "type" : "number",
            "description" : "Amount of payment currency to be paid by merchant customer"
          },
          "payCurrency" : {
            "type" : "string",
            "description" : "Currency to be paid with"
          },
          "receiveAmount" : {
            "type" : "number",
            "description" : "Amount of receive currency to be funded to merchant account"
          },
          "receiveCurrency" : {
            "type" : "string",
            "description" : "Currency to be funded to merchant account"
          },
          "redirectUrl" : {
            "type" : "string",
            "description" : "SpectroCoin payment window url where merchant customer may be redirected"
          },
          "validUntil" : {
            "type" : "integer",
            "description" : "Timestamp until when order is valid",
            "format" : "int64"
          }
        }
      },
      "Order_request_class_used_to_provide_order_specific_information" : {
        "required" : [ "apiId", "merchantId", "payCurrency", "receiveCurrency", "sign" ],
        "type" : "object",
        "properties" : {
          "apiId" : {
            "maximum" : 9223372036854776000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "API ID of specific API you have configured on your merchant account",
            "format" : "int64"
          },
          "callbackUrl" : {
            "type" : "string",
            "description" : "Url of merchant endpoint callback about order status to be returned"
          },
          "culture" : {
            "type" : "string",
            "description" : "Merchant customer culture payment window to be presented",
            "enum" : [ "en", "lt", "ru", "de" ]
          },
          "description" : {
            "type" : "string",
            "description" : "Order description. Will be presented for merchant customer at payment window"
          },
          "failureUrl" : {
            "type" : "string",
            "description" : "Url of merchant page customer should be redirected after unsuccessful payment"
          },
          "merchantId" : {
            "maximum" : 9223372036854776000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Merchant ID assigned to your account",
            "format" : "int64"
          },
          "orderId" : {
            "type" : "string",
            "description" : "Custom order ID. Must be unique per API. If not provided it will be generated."
          },
          "payAmount" : {
            "type" : "number",
            "description" : "Pay amount in pay currency of value which should be paid by merchant customer. If not provided receive amount will be used to calculate pay amount"
          },
          "payCurrency" : {
            "type" : "string",
            "description" : "Currency of pay amount"
          },
          "payerEmail" : {
            "type" : "string",
            "description" : "Specified payer email."
          },
          "payerName" : {
            "type" : "string",
            "description" : "Specified payer name."
          },
          "payerSurname" : {
            "type" : "string",
            "description" : "Specified payer surname."
          },
          "receiveAmount" : {
            "type" : "number",
            "description" : "Receive amount in receive currency of value that merchant will be funded after merchant customers payment approval. If not provided pay amount will be used to calculate receive amount"
          },
          "receiveCurrency" : {
            "type" : "string",
            "description" : "Currency of receive amount"
          },
          "sign" : {
            "type" : "string",
            "description" : "Signature required for signing create order request"
          },
          "successUrl" : {
            "type" : "string",
            "description" : "Url of merchant page customer should be redirected after successful payment"
          }
        }
      }
    }
  }
}