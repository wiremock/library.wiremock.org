{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SubscriptionsManagementClient",
    "description" : "The Admin Subscriptions Management Client.",
    "version" : "2015-11-01"
  },
  "servers" : [ {
    "url" : "https://adminmanagement.local.azurestack.external/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/manifests" : {
      "get" : {
        "tags" : [ "Manifests" ],
        "description" : "Get a list of all manifests.",
        "operationId" : "Manifests_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2015-11-01"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManifestList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/manifests/{manifestName}" : {
      "get" : {
        "tags" : [ "Manifests" ],
        "description" : "Get the specified manifest.",
        "operationId" : "Manifests_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription.The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2015-11-01"
          }
        }, {
          "name" : "manifestName",
          "in" : "path",
          "description" : "The manifest name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Manifest"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiProfile" : {
        "type" : "object",
        "properties" : {
          "apiVersion" : {
            "type" : "string",
            "description" : "The API version."
          },
          "profileVersion" : {
            "type" : "string",
            "description" : "The profile version."
          }
        },
        "description" : "Represents the API profile."
      },
      "ApiProfileList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the API profiles.",
            "items" : {
              "$ref" : "#/components/schemas/ApiProfile"
            }
          }
        },
        "description" : "List of the API profiles."
      },
      "AuthorizationActionMapping" : {
        "type" : "object",
        "properties" : {
          "desired" : {
            "type" : "string",
            "description" : "The desired action name."
          },
          "original" : {
            "type" : "string",
            "description" : "The original action name."
          }
        },
        "description" : "The linked resource access checks."
      },
      "AuthorizationActionMappingList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the read-only actions.",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationActionMapping"
            }
          }
        },
        "description" : "List of the read-only actions."
      },
      "AzureResourceHydrationAccount" : {
        "type" : "object",
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "The account name."
          },
          "encryptedKey" : {
            "type" : "string",
            "description" : "The encrypted key."
          },
          "maxChildResourceConsistencyJobLimit" : {
            "type" : "integer",
            "description" : "The next child resource consistency job limit."
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "The subscription identifier."
          }
        },
        "description" : "The API versions supported by the endpoint."
      },
      "AzureResourceHydrationAccountList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the resource hydration accounts.",
            "items" : {
              "$ref" : "#/components/schemas/AzureResourceHydrationAccount"
            }
          }
        },
        "description" : "List of the resource hydration accounts."
      },
      "ExtensionCollectionDefinition" : {
        "type" : "object",
        "properties" : {
          "extensions" : {
            "$ref" : "#/components/schemas/ExtensionList"
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the format a.b[.c[.d]]. see System.Version documentation for more details."
          }
        },
        "description" : "The manifest extension collection definition."
      },
      "ExtensionDefinition" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "obsoleteBundlesBitmask" : {
            "type" : "integer",
            "description" : "The obsolete bundles bitmask."
          },
          "properties" : {
            "$ref" : "#/components/schemas/ExtensionPropertiesDefinition"
          },
          "resourceAccess" : {
            "$ref" : "#/components/schemas/ResourceAccessList"
          },
          "uri" : {
            "type" : "string",
            "description" : "The Uri"
          }
        },
        "description" : "The data contract for specifying extensions in resource provider manifests."
      },
      "ExtensionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the extensions.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionDefinition"
            }
          }
        },
        "description" : "List of the extensions."
      },
      "ExtensionPropertiesDefinition" : {
        "type" : "object",
        "properties" : {
          "quotaCreateBladeName" : {
            "type" : "string",
            "description" : "The quota create blade."
          },
          "resourceProviderDashboardBladeName" : {
            "type" : "string",
            "description" : "The resource provider dashboard blade."
          }
        },
        "description" : "The extension properties definition."
      },
      "FanoutLinkedNotificationRule" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "description" : "The list of actions.",
            "items" : {
              "type" : "string"
            }
          },
          "endpoints" : {
            "$ref" : "#/components/schemas/ResourceProviderEndpointList"
          }
        },
        "description" : "The fan-out linked notification rule."
      },
      "FanoutLinkedNotificationRuleList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the linked notification rules.",
            "items" : {
              "$ref" : "#/components/schemas/FanoutLinkedNotificationRule"
            }
          }
        },
        "description" : "List of the linked notification rules."
      },
      "LinkedAccessCheck" : {
        "type" : "object",
        "properties" : {
          "actionName" : {
            "type" : "string",
            "description" : "The action name."
          },
          "linkedAction" : {
            "type" : "string",
            "description" : "The linked action."
          },
          "linkedActionVerb" : {
            "type" : "string",
            "description" : "The linked action verb."
          },
          "linkedProperty" : {
            "type" : "string",
            "description" : "The linked property."
          },
          "linkedType" : {
            "type" : "string",
            "description" : "The linked type."
          }
        },
        "description" : "The linked resource access checks."
      },
      "LinkedAccessCheckList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the linked access checks.",
            "items" : {
              "$ref" : "#/components/schemas/LinkedAccessCheck"
            }
          }
        },
        "description" : "List of the linked access checks."
      },
      "LinkedAction" : {
        "type" : "string",
        "description" : "The resource type linked action.",
        "enum" : [ "NotSpecified", "Blocked", "Validate", "Enabled" ]
      },
      "LinkedNotificationRule" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "description" : "List of actions.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The linked notification rule."
      },
      "LinkedNotificationRuleList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the linked notification rules.",
            "items" : {
              "$ref" : "#/components/schemas/LinkedNotificationRule"
            }
          }
        },
        "description" : "List of the linked notification rules."
      },
      "LinkedOperation" : {
        "type" : "string",
        "description" : "The linked operation.",
        "enum" : [ "None", "CrossResourceGroupResourceMove", "CrossSubscriptionResourceMove" ]
      },
      "LinkedOperationRule" : {
        "type" : "object",
        "properties" : {
          "dependsOnTypes" : {
            "type" : "array",
            "description" : "The list of resource types this rule depends on.",
            "items" : {
              "type" : "string"
            }
          },
          "linkedAction" : {
            "$ref" : "#/components/schemas/LinkedAction"
          },
          "linkedOperation" : {
            "$ref" : "#/components/schemas/LinkedOperation"
          }
        },
        "description" : "The linked resource access checks."
      },
      "LinkedOperationRuleList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the linked operation rules.",
            "items" : {
              "$ref" : "#/components/schemas/LinkedOperationRule"
            }
          }
        },
        "description" : "List of the linked operation rules."
      },
      "Manifest" : {
        "type" : "object",
        "properties" : {
          "alwaysRoutable" : {
            "type" : "boolean",
            "description" : "A value indicating whether the manifest is always routable by all subscriptions."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "A value indicating whether this resource provider is enabled."
          },
          "extensionCollection" : {
            "$ref" : "#/components/schemas/ExtensionCollectionDefinition"
          },
          "linkedNotificationRules" : {
            "$ref" : "#/components/schemas/FanoutLinkedNotificationRuleList"
          },
          "metadata" : {
            "type" : "object",
            "description" : "The metadata."
          },
          "name" : {
            "type" : "string",
            "description" : "The unique identifier of the registration."
          },
          "namespace" : {
            "type" : "string",
            "description" : "The namespace."
          },
          "providerAuthorization" : {
            "$ref" : "#/components/schemas/ResourceProviderAuthorization"
          },
          "providerLocation" : {
            "type" : "string",
            "description" : "The location of the provider."
          },
          "providerType" : {
            "$ref" : "#/components/schemas/ResourceProviderType"
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ManifestProvisioningState"
          },
          "resourceGroupName" : {
            "type" : "string",
            "description" : "The name of the resource group."
          },
          "resourceHydrationAccounts" : {
            "$ref" : "#/components/schemas/AzureResourceHydrationAccountList"
          },
          "resourceLocation" : {
            "type" : "string",
            "description" : "The location of the resource."
          },
          "resourceTags" : {
            "type" : "object",
            "description" : "The resource tags."
          },
          "resourceTypes" : {
            "$ref" : "#/components/schemas/ResourceTypeList"
          },
          "routingResourceManagerType" : {
            "type" : "string",
            "description" : "Resource manager type.",
            "enum" : [ "Default", "Admin" ]
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "The subscription ID under which RP is registered."
          }
        },
        "description" : "The manifest."
      },
      "ManifestList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of manifests.",
            "items" : {
              "$ref" : "#/components/schemas/Manifest"
            }
          }
        },
        "description" : "List of manifests."
      },
      "ManifestProvisioningState" : {
        "type" : "string",
        "description" : "The provisioning state.",
        "enum" : [ "Accepted", "Creating", "Deleting", "Moving", "Failed", "Succeeded" ]
      },
      "MarketplaceType" : {
        "type" : "string",
        "description" : "The type of marketplace behavior for the resource type.",
        "enum" : [ "NotSpecified", "AddOn" ]
      },
      "ResourceAccess" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "resource" : {
            "type" : "string",
            "description" : "The resource."
          }
        },
        "description" : "Extension Client Access Section."
      },
      "ResourceAccessList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the resource access.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceAccess"
            }
          }
        },
        "description" : "List of the resource access."
      },
      "ResourceDeletionPolicy" : {
        "type" : "string",
        "description" : "The resource deletion policy.",
        "enum" : [ "NotSpecified", "Cascade" ]
      },
      "ResourceProviderAuthorization" : {
        "type" : "object",
        "properties" : {
          "applicationId" : {
            "type" : "string",
            "description" : "The application id of resource provider in AAD."
          },
          "roleDefinitionId" : {
            "type" : "string",
            "description" : "The role definition identifier against which a role assignment is created."
          }
        },
        "description" : "The resource provider authorization information."
      },
      "ResourceProviderEndpoint" : {
        "type" : "object",
        "properties" : {
          "apiVersions" : {
            "type" : "array",
            "description" : "The API versions supported by the endpoint.",
            "items" : {
              "type" : "string"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The enabled."
          },
          "endpointUri" : {
            "type" : "string",
            "description" : "The endpoint uri."
          },
          "timeout" : {
            "type" : "string",
            "description" : "The timeout."
          }
        },
        "description" : "The API versions supported by the endpoint."
      },
      "ResourceProviderEndpointList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the resource provider endpoints.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceProviderEndpoint"
            }
          }
        },
        "description" : "List of the resource provider endpoints."
      },
      "ResourceProviderType" : {
        "type" : "string",
        "description" : "The resource provider type.",
        "enum" : [ "NotSpecified", "Internal", "External", "RegistrationFree", "TenantOnly", "AlwaysRoutable" ]
      },
      "ResourceType" : {
        "type" : "object",
        "properties" : {
          "allowedUnauthorizedActions" : {
            "type" : "array",
            "description" : "The allowed unauthorized actions.",
            "items" : {
              "type" : "string"
            }
          },
          "apiProfiles" : {
            "$ref" : "#/components/schemas/ApiProfileList"
          },
          "authorizationActionMappings" : {
            "$ref" : "#/components/schemas/AuthorizationActionMappingList"
          },
          "endpoints" : {
            "$ref" : "#/components/schemas/ResourceProviderEndpointList"
          },
          "inGlobalLocation" : {
            "type" : "boolean",
            "description" : "A value indicating whether the resource type is in global location."
          },
          "linkedAccessChecks" : {
            "$ref" : "#/components/schemas/LinkedAccessCheckList"
          },
          "linkedNotificationRules" : {
            "$ref" : "#/components/schemas/LinkedNotificationRuleList"
          },
          "linkedOperationRules" : {
            "$ref" : "#/components/schemas/LinkedOperationRuleList"
          },
          "marketplaceType" : {
            "$ref" : "#/components/schemas/MarketplaceType"
          },
          "meteredResourceIds" : {
            "type" : "array",
            "description" : "The metered resource ids.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "resourceDeletionPolicy" : {
            "$ref" : "#/components/schemas/ResourceDeletionPolicy"
          },
          "routingType" : {
            "$ref" : "#/components/schemas/RoutingType"
          }
        },
        "description" : "The resource type definition."
      },
      "ResourceTypeList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of the resource types.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceType"
            }
          }
        },
        "description" : "List of the resource types."
      },
      "RoutingType" : {
        "type" : "string",
        "description" : "The resource routing type.",
        "enum" : [ "Default", "ProxyOnly", "HostBased", "Extension", "Tenant", "Fanout", "LocationBased" ]
      }
    },
    "parameters" : {
      "ManifestParameter" : {
        "name" : "manifestName",
        "in" : "path",
        "description" : "The manifest name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 flow"
      }
    }
  }
}