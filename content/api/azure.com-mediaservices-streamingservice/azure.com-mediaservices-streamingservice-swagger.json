{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Media Services",
    "description" : "Streaming resource management client for Azure Media Services",
    "version" : "2019-05-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents" : {
      "get" : {
        "tags" : [ "LiveEvents" ],
        "summary" : "List Live Events",
        "description" : "Lists the Live Events in the account.",
        "operationId" : "LiveEvents_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveEventListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}" : {
      "get" : {
        "tags" : [ "LiveEvents" ],
        "summary" : "Get Live Event",
        "description" : "Gets a Live Event.",
        "operationId" : "LiveEvents_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveEvent"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "LiveEvents" ],
        "summary" : "Create Live Event",
        "description" : "Creates a Live Event.",
        "operationId" : "LiveEvents_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "autoStart",
          "in" : "query",
          "description" : "The flag indicates if the resource should be automatically started on creation.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "Live Event properties needed for creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LiveEvent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveEvent"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveEvent"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "LiveEvents" ],
        "summary" : "Delete Live Event",
        "description" : "Deletes a Live Event.",
        "operationId" : "LiveEvents_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "204" : {
            "description" : "No content. The request has been accepted but the Live Event was not found."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "LiveEvents" ],
        "description" : "Updates a existing Live Event.",
        "operationId" : "LiveEvents_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Live Event properties needed for creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LiveEvent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveEvent"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveEvent"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/liveOutputs" : {
      "get" : {
        "tags" : [ "LiveOutputs" ],
        "summary" : "List Live Outputs",
        "description" : "Lists the Live Outputs in the Live Event.",
        "operationId" : "LiveOutputs_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveOutputListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/liveOutputs/{liveOutputName}" : {
      "get" : {
        "tags" : [ "LiveOutputs" ],
        "summary" : "Get Live Output",
        "description" : "Gets a Live Output.",
        "operationId" : "LiveOutputs_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "liveOutputName",
          "in" : "path",
          "description" : "The name of the Live Output.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveOutput"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "LiveOutputs" ],
        "summary" : "Create Live Output",
        "description" : "Creates a Live Output.",
        "operationId" : "LiveOutputs_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "liveOutputName",
          "in" : "path",
          "description" : "The name of the Live Output.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Live Output properties needed for creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LiveOutput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveOutput"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveOutput"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "LiveOutputs" ],
        "summary" : "Delete Live Output",
        "description" : "Deletes a Live Output.",
        "operationId" : "LiveOutputs_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "liveOutputName",
          "in" : "path",
          "description" : "The name of the Live Output.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "204" : {
            "description" : "No content. The request has been accepted but the Live Output was not found."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/reset" : {
      "post" : {
        "tags" : [ "LiveEvents" ],
        "summary" : "Reset Live Event",
        "description" : "Resets an existing Live Event.",
        "operationId" : "LiveEvents_Reset",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/start" : {
      "post" : {
        "tags" : [ "LiveEvents" ],
        "summary" : "Start Live Event",
        "description" : "Starts an existing Live Event.",
        "operationId" : "LiveEvents_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/liveEvents/{liveEventName}/stop" : {
      "post" : {
        "tags" : [ "LiveEvents" ],
        "summary" : "Stop Live Event",
        "description" : "Stops an existing Live Event.",
        "operationId" : "LiveEvents_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "liveEventName",
          "in" : "path",
          "description" : "The name of the Live Event.",
          "required" : true,
          "schema" : {
            "maxLength" : 32,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "LiveEvent stop parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LiveEventActionInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints" : {
      "get" : {
        "tags" : [ "StreamingEndpoints" ],
        "summary" : "List StreamingEndpoints",
        "description" : "Lists the StreamingEndpoints in the account.",
        "operationId" : "StreamingEndpoints_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingEndpointListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}" : {
      "get" : {
        "tags" : [ "StreamingEndpoints" ],
        "summary" : "Get StreamingEndpoint",
        "description" : "Gets a StreamingEndpoint.",
        "operationId" : "StreamingEndpoints_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingEndpointName",
          "in" : "path",
          "description" : "The name of the StreamingEndpoint.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingEndpoint"
                }
              }
            }
          },
          "404" : {
            "description" : "NotFound"
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "StreamingEndpoints" ],
        "summary" : "Create StreamingEndpoint",
        "description" : "Creates a StreamingEndpoint.",
        "operationId" : "StreamingEndpoints_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingEndpointName",
          "in" : "path",
          "description" : "The name of the StreamingEndpoint.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "autoStart",
          "in" : "query",
          "description" : "The flag indicates if the resource should be automatically started on creation.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "StreamingEndpoint properties needed for creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StreamingEndpoint"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingEndpoint"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingEndpoint"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "StreamingEndpoints" ],
        "summary" : "Delete StreamingEndpoint",
        "description" : "Deletes a StreamingEndpoint.",
        "operationId" : "StreamingEndpoints_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingEndpointName",
          "in" : "path",
          "description" : "The name of the StreamingEndpoint.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "204" : {
            "description" : "No content. The request has been accepted but the Streaming Endpoint was not found."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "StreamingEndpoint" ],
        "summary" : "Update StreamingEndpoint",
        "description" : "Updates a existing StreamingEndpoint.",
        "operationId" : "StreamingEndpoints_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingEndpointName",
          "in" : "path",
          "description" : "The name of the StreamingEndpoint.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "StreamingEndpoint properties needed for creation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StreamingEndpoint"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingEndpoint"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingEndpoint"
                }
              }
            }
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/scale" : {
      "post" : {
        "tags" : [ "StreamingEndpoints" ],
        "summary" : "Scale StreamingEndpoint",
        "description" : "Scales an existing StreamingEndpoint.",
        "operationId" : "StreamingEndpoints_Scale",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingEndpointName",
          "in" : "path",
          "description" : "The name of the StreamingEndpoint.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "StreamingEndpoint scale parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StreamingEntityScaleUnit"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/start" : {
      "post" : {
        "tags" : [ "StreamingEndpoints" ],
        "summary" : "Start StreamingEndpoint",
        "description" : "Starts an existing StreamingEndpoint.",
        "operationId" : "StreamingEndpoints_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingEndpointName",
          "in" : "path",
          "description" : "The name of the StreamingEndpoint.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/stop" : {
      "post" : {
        "tags" : [ "StreamingEndpoints" ],
        "summary" : "Stop StreamingEndpoint",
        "description" : "Stops an existing StreamingEndpoint.",
        "operationId" : "StreamingEndpoints_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The unique identifier for a Microsoft Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The Media Services account name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "streamingEndpointName",
          "in" : "path",
          "description" : "The name of the StreamingEndpoint.",
          "required" : true,
          "schema" : {
            "maxLength" : 24,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "202" : {
            "description" : "Accepted. The request has been accepted for processing and the operation will complete asynchronously. See https://go.microsoft.com/fwlink/?linkid=2087017 for details on the monitoring asynchronous Azure Operations."
          },
          "default" : {
            "description" : "The streaming error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AkamaiAccessControl" : {
        "type" : "object",
        "properties" : {
          "akamaiSignatureHeaderAuthenticationKeyList" : {
            "type" : "array",
            "description" : "authentication key list",
            "items" : {
              "$ref" : "#/components/schemas/AkamaiSignatureHeaderAuthenticationKey"
            }
          }
        },
        "description" : "Akamai access control"
      },
      "AkamaiSignatureHeaderAuthenticationKey" : {
        "type" : "object",
        "properties" : {
          "base64Key" : {
            "type" : "string",
            "description" : "authentication key"
          },
          "expiration" : {
            "type" : "string",
            "description" : "The expiration time of the authentication key.",
            "format" : "date-time"
          },
          "identifier" : {
            "type" : "string",
            "description" : "identifier of the key"
          }
        },
        "description" : "Akamai Signature Header authentication key."
      },
      "ApiError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ODataError"
          }
        },
        "description" : "The API error."
      },
      "CrossSiteAccessPolicies" : {
        "type" : "object",
        "properties" : {
          "clientAccessPolicy" : {
            "type" : "string",
            "description" : "The content of clientaccesspolicy.xml used by Silverlight."
          },
          "crossDomainPolicy" : {
            "type" : "string",
            "description" : "The content of crossdomain.xml used by Silverlight."
          }
        },
        "description" : "The client access policy."
      },
      "Hls" : {
        "type" : "object",
        "properties" : {
          "fragmentsPerTsSegment" : {
            "type" : "integer",
            "description" : "The amount of fragments per HTTP Live Streaming (HLS) segment.",
            "format" : "int32"
          }
        },
        "description" : "The HLS configuration."
      },
      "IPAccessControl" : {
        "type" : "object",
        "properties" : {
          "allow" : {
            "type" : "array",
            "description" : "The IP allow list.",
            "items" : {
              "$ref" : "#/components/schemas/IPRange"
            }
          }
        },
        "description" : "The IP access control."
      },
      "IPRange" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "The IP address."
          },
          "name" : {
            "type" : "string",
            "description" : "The friendly name for the IP address range."
          },
          "subnetPrefixLength" : {
            "type" : "integer",
            "description" : "The subnet mask prefix length (see CIDR notation).",
            "format" : "int32"
          }
        },
        "description" : "The IP address range in the CIDR scheme."
      },
      "LiveEvent" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LiveEventProperties"
          }
        },
        "description" : "The Live Event.",
        "allOf" : [ {
          "properties" : {
            "location" : {
              "type" : "string",
              "description" : "The Azure Region of the resource."
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            }
          },
          "description" : "The resource model definition for a ARM tracked resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "LiveEventActionInput" : {
        "type" : "object",
        "properties" : {
          "removeOutputsOnStop" : {
            "type" : "boolean",
            "description" : "The flag indicates if remove LiveOutputs on Stop."
          }
        },
        "description" : "The LiveEvent action input parameter definition."
      },
      "LiveEventEncoding" : {
        "type" : "object",
        "properties" : {
          "encodingType" : {
            "type" : "string",
            "description" : "The encoding type for Live Event.  This value is specified at creation time and cannot be updated.",
            "enum" : [ "None", "Basic", "Standard", "Premium1080p" ]
          },
          "presetName" : {
            "type" : "string",
            "description" : "The encoding preset name.  This value is specified at creation time and cannot be updated."
          }
        },
        "description" : "The Live Event encoding."
      },
      "LiveEventEndpoint" : {
        "type" : "object",
        "properties" : {
          "protocol" : {
            "type" : "string",
            "description" : "The endpoint protocol."
          },
          "url" : {
            "type" : "string",
            "description" : "The endpoint URL."
          }
        },
        "description" : "The Live Event endpoint."
      },
      "LiveEventInput" : {
        "required" : [ "streamingProtocol" ],
        "type" : "object",
        "properties" : {
          "accessControl" : {
            "$ref" : "#/components/schemas/LiveEventInputAccessControl"
          },
          "accessToken" : {
            "type" : "string",
            "description" : "A unique identifier for a stream.  This can be specified at creation time but cannot be updated.  If omitted, the service will generate a unique value."
          },
          "endpoints" : {
            "type" : "array",
            "description" : "The input endpoints for the Live Event.",
            "items" : {
              "$ref" : "#/components/schemas/LiveEventEndpoint"
            }
          },
          "keyFrameIntervalDuration" : {
            "type" : "string",
            "description" : "ISO 8601 timespan duration of the key frame interval duration."
          },
          "streamingProtocol" : {
            "type" : "string",
            "description" : "The streaming protocol for the Live Event.  This is specified at creation time and cannot be updated.",
            "enum" : [ "FragmentedMP4", "RTMP" ]
          }
        },
        "description" : "The Live Event input."
      },
      "LiveEventInputAccessControl" : {
        "type" : "object",
        "properties" : {
          "ip" : {
            "$ref" : "#/components/schemas/IPAccessControl"
          }
        },
        "description" : "The IP access control for Live Event Input."
      },
      "LiveEventInputTrackSelection" : {
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "Comparing operation."
          },
          "property" : {
            "type" : "string",
            "description" : "Property name to select."
          },
          "value" : {
            "type" : "string",
            "description" : "Property value to select."
          }
        },
        "description" : "A track selection condition."
      },
      "LiveEventListResult" : {
        "title" : "LiveEventListResult",
        "type" : "object",
        "properties" : {
          "@odata.count" : {
            "type" : "integer",
            "description" : "The number of result.",
            "format" : "int32"
          },
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "Th link to the next set of results. Not empty if value contains incomplete list of Live Outputs."
          },
          "value" : {
            "type" : "array",
            "description" : "The result of the List Live Event operation.",
            "items" : {
              "$ref" : "#/components/schemas/LiveEvent"
            }
          }
        },
        "description" : "The LiveEvent list result."
      },
      "LiveEventOutputTranscriptionTrack" : {
        "required" : [ "trackName" ],
        "type" : "object",
        "properties" : {
          "trackName" : {
            "type" : "string",
            "description" : "The output track name."
          }
        },
        "description" : "Describes a transcription track in the output of a Live Event, generated using speech-to-text transcription."
      },
      "LiveEventPreview" : {
        "type" : "object",
        "properties" : {
          "accessControl" : {
            "$ref" : "#/components/schemas/LiveEventPreviewAccessControl"
          },
          "alternativeMediaId" : {
            "type" : "string",
            "description" : "An Alternative Media Identifier associated with the StreamingLocator created for the preview.  This value is specified at creation time and cannot be updated.  The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field."
          },
          "endpoints" : {
            "type" : "array",
            "description" : "The endpoints for preview.",
            "items" : {
              "$ref" : "#/components/schemas/LiveEventEndpoint"
            }
          },
          "previewLocator" : {
            "type" : "string",
            "description" : "The identifier of the preview locator in Guid format.  Specifying this at creation time allows the caller to know the preview locator url before the event is created.  If omitted, the service will generate a random identifier.  This value cannot be updated once the live event is created."
          },
          "streamingPolicyName" : {
            "type" : "string",
            "description" : "The name of streaming policy used for the LiveEvent preview.  This value is specified at creation time and cannot be updated."
          }
        },
        "description" : "The Live Event preview."
      },
      "LiveEventPreviewAccessControl" : {
        "type" : "object",
        "properties" : {
          "ip" : {
            "$ref" : "#/components/schemas/IPAccessControl"
          }
        },
        "description" : "The IP access control for Live Event preview."
      },
      "LiveEventProperties" : {
        "required" : [ "input" ],
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "The exact time the Live Event was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "crossSiteAccessPolicies" : {
            "$ref" : "#/components/schemas/CrossSiteAccessPolicies"
          },
          "description" : {
            "type" : "string",
            "description" : "The Live Event description."
          },
          "encoding" : {
            "$ref" : "#/components/schemas/LiveEventEncoding"
          },
          "input" : {
            "$ref" : "#/components/schemas/LiveEventInput"
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The exact time the Live Event was last modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "preview" : {
            "$ref" : "#/components/schemas/LiveEventPreview"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning state of the Live Event.",
            "readOnly" : true
          },
          "resourceState" : {
            "type" : "string",
            "description" : "The resource state of the Live Event.",
            "readOnly" : true,
            "enum" : [ "Stopped", "Starting", "Running", "Stopping", "Deleting" ]
          },
          "streamOptions" : {
            "type" : "array",
            "description" : "The options to use for the LiveEvent.  This value is specified at creation time and cannot be updated.",
            "items" : {
              "type" : "string",
              "enum" : [ "Default", "LowLatency" ]
            }
          },
          "transcriptions" : {
            "type" : "array",
            "description" : "The Live Event transcription.",
            "items" : {
              "$ref" : "#/components/schemas/LiveEventTranscription"
            }
          },
          "vanityUrl" : {
            "type" : "boolean",
            "description" : "Specifies whether to use a vanity url with the Live Event.  This value is specified at creation time and cannot be updated."
          }
        },
        "description" : "The Live Event properties."
      },
      "LiveEventTranscription" : {
        "type" : "object",
        "properties" : {
          "inputTrackSelection" : {
            "type" : "array",
            "description" : "Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied.",
            "items" : {
              "$ref" : "#/components/schemas/LiveEventInputTrackSelection"
            }
          },
          "language" : {
            "type" : "string",
            "description" : "Specifies the language (locale) used for speech-to-text transcription � it should match the spoken language in the audio track. The value should be in BCP-47 format of 'language tag-region' (e.g: 'en-US'). The list of supported languages are 'en-US' and 'en-GB'."
          },
          "outputTranscriptionTrack" : {
            "$ref" : "#/components/schemas/LiveEventOutputTranscriptionTrack"
          }
        },
        "description" : "Describes the transcription tracks in the output of a Live Event, generated using speech-to-text transcription."
      },
      "LiveOutput" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LiveOutputProperties"
          }
        },
        "description" : "The Live Output.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "LiveOutputListResult" : {
        "title" : "LiveOutputListResult",
        "type" : "object",
        "properties" : {
          "@odata.count" : {
            "type" : "integer",
            "description" : "The number of result.",
            "format" : "int32"
          },
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "Th link to the next set of results. Not empty if value contains incomplete list of Live Outputs."
          },
          "value" : {
            "type" : "array",
            "description" : "The result of the List Live Output operation.",
            "items" : {
              "$ref" : "#/components/schemas/LiveOutput"
            }
          }
        },
        "description" : "The LiveOutput list result."
      },
      "LiveOutputProperties" : {
        "required" : [ "archiveWindowLength", "assetName" ],
        "type" : "object",
        "properties" : {
          "archiveWindowLength" : {
            "type" : "string",
            "description" : "ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.",
            "format" : "duration"
          },
          "assetName" : {
            "type" : "string",
            "description" : "The asset name."
          },
          "created" : {
            "type" : "string",
            "description" : "The exact time the Live Output was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the Live Output."
          },
          "hls" : {
            "$ref" : "#/components/schemas/Hls"
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The exact time the Live Output was last modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "manifestName" : {
            "type" : "string",
            "description" : "The manifest file name.  If not provided, the service will generate one automatically."
          },
          "outputSnapTime" : {
            "type" : "integer",
            "description" : "The output snapshot time.",
            "format" : "int64"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning state of the Live Output.",
            "readOnly" : true
          },
          "resourceState" : {
            "type" : "string",
            "description" : "The resource state of the Live Output.",
            "readOnly" : true,
            "enum" : [ "Creating", "Running", "Deleting" ]
          }
        },
        "description" : "The JSON object that contains the properties required to create a Live Output."
      },
      "ODataError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A language-independent error name."
          },
          "details" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/ODataError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error (for example, the name of the property in error)."
          }
        },
        "description" : "Information about an error."
      },
      "StreamingEndpoint" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StreamingEndpointProperties"
          }
        },
        "description" : "The StreamingEndpoint.",
        "allOf" : [ {
          "properties" : {
            "location" : {
              "type" : "string",
              "description" : "The Azure Region of the resource."
            },
            "tags" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "Resource tags."
            }
          },
          "description" : "The resource model definition for a ARM tracked resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource ID for the resource.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource.",
                "readOnly" : true
              }
            },
            "description" : "The core properties of ARM resources."
          } ]
        } ]
      },
      "StreamingEndpointAccessControl" : {
        "type" : "object",
        "properties" : {
          "akamai" : {
            "$ref" : "#/components/schemas/AkamaiAccessControl"
          },
          "ip" : {
            "$ref" : "#/components/schemas/IPAccessControl"
          }
        },
        "description" : "StreamingEndpoint access control definition."
      },
      "StreamingEndpointListResult" : {
        "title" : "StreamingEndpointListResult",
        "type" : "object",
        "properties" : {
          "@odata.count" : {
            "type" : "integer",
            "description" : "The number of result.",
            "format" : "int32"
          },
          "@odata.nextLink" : {
            "type" : "string",
            "description" : "Th link to the next set of results. Not empty if value contains incomplete list of StreamingEndpoints."
          },
          "value" : {
            "type" : "array",
            "description" : "The result of the List StreamingEndpoint operation.",
            "items" : {
              "$ref" : "#/components/schemas/StreamingEndpoint"
            }
          }
        },
        "description" : "The StreamingEndpoint list result."
      },
      "StreamingEndpointProperties" : {
        "required" : [ "scaleUnits" ],
        "type" : "object",
        "properties" : {
          "accessControl" : {
            "$ref" : "#/components/schemas/StreamingEndpointAccessControl"
          },
          "availabilitySetName" : {
            "type" : "string",
            "description" : "The name of the AvailabilitySet used with this StreamingEndpoint for high availability streaming.  This value can only be set at creation time."
          },
          "cdnEnabled" : {
            "type" : "boolean",
            "description" : "The CDN enabled flag."
          },
          "cdnProfile" : {
            "type" : "string",
            "description" : "The CDN profile name."
          },
          "cdnProvider" : {
            "type" : "string",
            "description" : "The CDN provider name."
          },
          "created" : {
            "type" : "string",
            "description" : "The exact time the StreamingEndpoint was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "crossSiteAccessPolicies" : {
            "$ref" : "#/components/schemas/CrossSiteAccessPolicies"
          },
          "customHostNames" : {
            "type" : "array",
            "description" : "The custom host names of the StreamingEndpoint",
            "items" : {
              "type" : "string",
              "description" : "custom host name"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The StreamingEndpoint description."
          },
          "freeTrialEndTime" : {
            "type" : "string",
            "description" : "The free trial expiration time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "hostName" : {
            "type" : "string",
            "description" : "The StreamingEndpoint host name.",
            "readOnly" : true
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The exact time the StreamingEndpoint was last modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "maxCacheAge" : {
            "type" : "integer",
            "description" : "Max cache age",
            "format" : "int64"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning state of the StreamingEndpoint.",
            "readOnly" : true
          },
          "resourceState" : {
            "type" : "string",
            "description" : "The resource state of the StreamingEndpoint.",
            "readOnly" : true,
            "enum" : [ "Stopped", "Starting", "Running", "Stopping", "Deleting", "Scaling" ]
          },
          "scaleUnits" : {
            "type" : "integer",
            "description" : "The number of scale units.  Use the Scale operation to adjust this value.",
            "format" : "int32"
          }
        },
        "description" : "The StreamingEndpoint properties."
      },
      "StreamingEntityScaleUnit" : {
        "type" : "object",
        "properties" : {
          "scaleUnit" : {
            "type" : "integer",
            "description" : "The scale unit number of the StreamingEndpoint.",
            "format" : "int32"
          }
        },
        "description" : "scale units definition"
      }
    },
    "parameters" : {
      "ApiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The Version of the API to be used with the client request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "LiveEventName" : {
        "name" : "liveEventName",
        "in" : "path",
        "description" : "The name of the Live Event.",
        "required" : true,
        "schema" : {
          "maxLength" : 32,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "LiveOutputName" : {
        "name" : "liveOutputName",
        "in" : "path",
        "description" : "The name of the Live Output.",
        "required" : true,
        "schema" : {
          "maxLength" : 256,
          "minLength" : 1,
          "pattern" : "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "MediaServicesAccountName" : {
        "name" : "accountName",
        "in" : "path",
        "description" : "The Media Services account name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group within the Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "StreamingEndpointName" : {
        "name" : "streamingEndpointName",
        "in" : "path",
        "description" : "The name of the StreamingEndpoint.",
        "required" : true,
        "schema" : {
          "maxLength" : 24,
          "minLength" : 1,
          "pattern" : "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
          "type" : "string"
        }
      },
      "StreamingResourceAutoStart" : {
        "name" : "autoStart",
        "in" : "query",
        "description" : "The flag indicates if the resource should be automatically started on creation.",
        "schema" : {
          "type" : "boolean"
        }
      },
      "SubscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The unique identifier for a Microsoft Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}