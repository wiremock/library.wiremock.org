{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "CostManagementClient",
    "version" : "2019-04-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.CostManagement/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available consumption REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/views" : {
      "get" : {
        "tags" : [ "Views" ],
        "description" : "Lists all views by tenant and object.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ViewListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/views/{viewName}" : {
      "get" : {
        "tags" : [ "Views" ],
        "description" : "Gets the view by view name.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "View name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/View"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Views" ],
        "description" : "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "View name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate View operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/View"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/View"
                }
              }
            }
          },
          "201" : {
            "description" : "Created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/View"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Views" ],
        "description" : "The operation to delete a view.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "View name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "204" : {
            "description" : "NoContent. Resource is not available."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/budgets" : {
      "get" : {
        "tags" : [ "Budgets" ],
        "description" : "Lists all budgets for the defined scope.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/cost-management/"
        },
        "operationId" : "Budgets_List",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BudgetsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/budgets/{budgetName}" : {
      "get" : {
        "tags" : [ "Budgets" ],
        "description" : "Gets the budget for the scope by budget name.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/cost-management/"
        },
        "operationId" : "Budget_Get",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetName",
          "in" : "path",
          "description" : "Budget Name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BudgetModel"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Budgets" ],
        "description" : "The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/cost-management/"
        },
        "operationId" : "Budget_CreateOrUpdate",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetName",
          "in" : "path",
          "description" : "Budget Name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Create Budget operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BudgetModel"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BudgetModel"
                }
              }
            }
          },
          "201" : {
            "description" : "Created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BudgetModel"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Budgets" ],
        "description" : "The operation to delete a budget.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/cost-management/"
        },
        "operationId" : "Budget_Delete",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetName",
          "in" : "path",
          "description" : "Budget Name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "204" : {
            "description" : "NoContent. Resource is not available."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/views" : {
      "get" : {
        "tags" : [ "Views" ],
        "description" : "Lists all views at the given scope.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_ListByScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ViewListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/views/{viewName}" : {
      "get" : {
        "tags" : [ "Views" ],
        "description" : "Gets the view for the defined scope by view name.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_GetByScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "View name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/View"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Views" ],
        "description" : "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_CreateOrUpdateByScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "View name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate View operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/View"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/View"
                }
              }
            }
          },
          "201" : {
            "description" : "Created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/View"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Views" ],
        "description" : "The operation to delete a view.",
        "externalDocs" : {
          "url" : "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "operationId" : "Views_DeleteByScope",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "View name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded."
          },
          "204" : {
            "description" : "NoContent. Resource is not available."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BudgetModel" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BudgetProperties"
          }
        },
        "description" : "A budget resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "BudgetProperties" : {
        "required" : [ "amount", "category", "timeGrain", "timePeriod" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "description" : "The total amount of cost to track with the budget",
            "format" : "decimal"
          },
          "category" : {
            "type" : "string",
            "description" : "The category of the budget, whether the budget tracks cost or usage.",
            "enum" : [ "Cost", "Usage" ]
          },
          "currentSpend" : {
            "$ref" : "#/components/schemas/CurrentSpend"
          },
          "filter" : {
            "$ref" : "#/components/schemas/ReportConfigFilter"
          },
          "notifications" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Notification"
            },
            "description" : "Dictionary of notifications associated with the budget. Budget can have up to five notifications."
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "The time covered by a budget. Tracking of the amount will be reset based on the time grain.",
            "enum" : [ "Monthly", "Quarterly", "Annually" ]
          },
          "timePeriod" : {
            "$ref" : "#/components/schemas/BudgetTimePeriod"
          }
        },
        "description" : "The properties of the budget."
      },
      "BudgetTimePeriod" : {
        "required" : [ "startDate" ],
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "description" : "The end date for the budget. If not provided, we default this to 10 years from the start date.",
            "format" : "date-time"
          },
          "startDate" : {
            "type" : "string",
            "description" : "The start date for the budget.",
            "format" : "date-time"
          }
        },
        "description" : "The start and end date for a budget."
      },
      "BudgetsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link (url) to the next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of budgets.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/BudgetModel"
            }
          }
        },
        "description" : "Result of listing budgets. It contains a list of available budgets in the scope provided."
      },
      "CurrentSpend" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "description" : "The total amount of cost which is being tracked by the budget.",
            "format" : "decimal",
            "readOnly" : true
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of measure for the budget amount.",
            "readOnly" : true
          }
        },
        "description" : "The current amount of cost which is being tracked for a budget."
      },
      "ErrorBase" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A machine readable error code.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable error message.",
            "readOnly" : true
          },
          "target" : {
            "type" : "string",
            "description" : "Indicates which property in the request is responsible for the error.",
            "readOnly" : true
          }
        },
        "description" : "The details of the error."
      },
      "ErrorDetails" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "A machine readable error code.",
            "readOnly" : true
          },
          "details" : {
            "type" : "array",
            "description" : "error details.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorBase"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable error message.",
            "readOnly" : true
          },
          "target" : {
            "type" : "string",
            "description" : "Indicates which property in the request is responsible for the error."
          }
        },
        "description" : "The details of the error."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorDetails"
          }
        },
        "description" : "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message."
      },
      "KpiProperties" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "show the KPI in the UI?"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of resource related to metric (budget)."
          },
          "type" : {
            "type" : "string",
            "description" : "KPI type (Forecast, Budget).",
            "enum" : [ "Forecast", "Budget" ]
          }
        },
        "description" : "Each KPI must contain a 'type' and 'enabled' key."
      },
      "Notification" : {
        "required" : [ "contactEmails", "enabled", "operator", "threshold" ],
        "type" : "object",
        "properties" : {
          "contactEmails" : {
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "description" : "Email addresses to send the budget notification to when the threshold is exceeded.",
            "items" : {
              "type" : "string"
            }
          },
          "contactGroups" : {
            "maxItems" : 50,
            "minItems" : 0,
            "type" : "array",
            "description" : "Action groups to send the budget notification to when the threshold is exceeded.",
            "items" : {
              "type" : "string"
            }
          },
          "contactRoles" : {
            "type" : "array",
            "description" : "Contact roles to send the budget notification to when the threshold is exceeded.",
            "items" : {
              "type" : "string"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "The notification is enabled or not."
          },
          "operator" : {
            "type" : "string",
            "description" : "The comparison operator.",
            "enum" : [ "EqualTo", "GreaterThan", "GreaterThanOrEqualTo" ]
          },
          "threshold" : {
            "type" : "number",
            "description" : "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.",
            "format" : "decimal"
          }
        },
        "description" : "The notification associated with a budget."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "operation" : {
                "type" : "string",
                "description" : "Operation type: Read, write, delete, etc.",
                "readOnly" : true
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft.CostManagement.",
                "readOnly" : true
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource on which the operation is performed: Dimensions, Query.",
                "readOnly" : true
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}.",
            "readOnly" : true
          }
        },
        "description" : "A Cost management REST API operation."
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of cost management operations supported by the Microsoft.CostManagement resource provider.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of listing cost management operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "PivotProperties" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Data field to show in view."
          },
          "type" : {
            "type" : "string",
            "description" : "Data type to show in view.",
            "enum" : [ "Dimension", "TagKey" ]
          }
        },
        "description" : "Each pivot must contain a 'type' and 'name'."
      },
      "ProxyResource" : {
        "type" : "object",
        "properties" : {
          "eTag" : {
            "type" : "string",
            "description" : "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."
          },
          "id" : {
            "type" : "string",
            "description" : "Resource Id.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "The Resource model definition."
      },
      "ReportConfigAggregation" : {
        "required" : [ "function", "name" ],
        "type" : "object",
        "properties" : {
          "function" : {
            "type" : "string",
            "description" : "The name of the aggregation function to use.",
            "enum" : [ "Sum" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the column to aggregate."
          }
        },
        "description" : "The aggregation expression to be used in the report."
      },
      "ReportConfigColumnType" : {
        "type" : "string",
        "description" : "The type of the column in the report.",
        "enum" : [ "Tag", "Dimension" ]
      },
      "ReportConfigComparisonExpression" : {
        "required" : [ "name", "operator", "values" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the column to use in comparison."
          },
          "operator" : {
            "type" : "string",
            "description" : "The operator to use for comparison.",
            "enum" : [ "In", "Contains" ]
          },
          "values" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "Array of values to use for comparison",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The comparison expression to be used in the report."
      },
      "ReportConfigDataset" : {
        "type" : "object",
        "properties" : {
          "aggregation" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ReportConfigAggregation"
            },
            "description" : "Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses."
          },
          "configuration" : {
            "$ref" : "#/components/schemas/ReportConfigDatasetConfiguration"
          },
          "filter" : {
            "$ref" : "#/components/schemas/ReportConfigFilter"
          },
          "granularity" : {
            "type" : "string",
            "description" : "The granularity of rows in the report.",
            "enum" : [ "Daily", "Monthly" ]
          },
          "grouping" : {
            "maxItems" : 2,
            "type" : "array",
            "description" : "Array of group by expression to use in the report. Report can have up to 2 group by clauses.",
            "items" : {
              "$ref" : "#/components/schemas/ReportConfigGrouping"
            }
          },
          "sorting" : {
            "type" : "array",
            "description" : "Array of order by expression to use in the report.",
            "items" : {
              "$ref" : "#/components/schemas/ReportConfigSorting"
            }
          }
        },
        "description" : "The definition of data present in the report."
      },
      "ReportConfigDatasetConfiguration" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "description" : "Array of column names to be included in the report. Any valid report column name is allowed. If not provided, then report includes all columns.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The configuration of dataset in the report."
      },
      "ReportConfigDefinition" : {
        "required" : [ "timeframe", "type" ],
        "type" : "object",
        "properties" : {
          "dataset" : {
            "$ref" : "#/components/schemas/ReportConfigDataset"
          },
          "timePeriod" : {
            "$ref" : "#/components/schemas/ReportConfigTimePeriod"
          },
          "timeframe" : {
            "type" : "string",
            "description" : "The time frame for pulling data for the report. If custom, then a specific time period must be provided.",
            "enum" : [ "WeekToDate", "MonthToDate", "YearToDate", "Custom" ]
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the report. Usage represents actual usage, forecast represents forecasted data and UsageAndForecast represents both usage and forecasted data. Actual usage and forecasted data can be differentiated based on dates.",
            "enum" : [ "Usage" ]
          }
        },
        "description" : "The definition of a report config."
      },
      "ReportConfigFilter" : {
        "type" : "object",
        "properties" : {
          "and" : {
            "minItems" : 2,
            "type" : "array",
            "description" : "The logical \"AND\" expression. Must have at least 2 items.",
            "items" : {
              "$ref" : "#/components/schemas/ReportConfigFilter"
            }
          },
          "dimension" : {
            "$ref" : "#/components/schemas/ReportConfigComparisonExpression"
          },
          "not" : {
            "$ref" : "#/components/schemas/ReportConfigFilter"
          },
          "or" : {
            "minItems" : 2,
            "type" : "array",
            "description" : "The logical \"OR\" expression. Must have at least 2 items.",
            "items" : {
              "$ref" : "#/components/schemas/ReportConfigFilter"
            }
          },
          "tag" : {
            "$ref" : "#/components/schemas/ReportConfigComparisonExpression"
          }
        },
        "description" : "The filter expression to be used in the report."
      },
      "ReportConfigGrouping" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the column to group. This version supports subscription lowest possible grain."
          },
          "type" : {
            "$ref" : "#/components/schemas/ReportConfigColumnType"
          }
        },
        "description" : "The group by expression to be used in the report."
      },
      "ReportConfigSorting" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "direction" : {
            "type" : "string",
            "description" : "Direction of sort.",
            "enum" : [ "Ascending", "Descending" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the column to sort."
          }
        },
        "description" : "The order by expression to be used in the report."
      },
      "ReportConfigTimePeriod" : {
        "required" : [ "from", "to" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "description" : "The start date to pull data from.",
            "format" : "date-time"
          },
          "to" : {
            "type" : "string",
            "description" : "The end date to pull data to.",
            "format" : "date-time"
          }
        },
        "description" : "The start and end date for pulling data for the report."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource Id.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "The Resource model definition."
      },
      "Scope" : {
        "type" : "object",
        "properties" : {
          "childScope" : {
            "$ref" : "#/components/schemas/Scope"
          },
          "id" : {
            "type" : "string",
            "description" : "Scope id"
          },
          "name" : {
            "type" : "string",
            "description" : "Scope name"
          },
          "type" : {
            "type" : "string",
            "description" : "Scope type"
          }
        },
        "description" : "The Scope model definition"
      },
      "View" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ViewProperties"
          }
        },
        "description" : "States and configurations of Cost Analysis.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ViewListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link (url) to the next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of views.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/View"
            }
          }
        },
        "description" : "Result of listing views. It contains a list of available views."
      },
      "ViewProperties" : {
        "type" : "object",
        "properties" : {
          "accumulated" : {
            "type" : "string",
            "description" : "Show costs accumulated over time.",
            "enum" : [ "true", "false" ]
          },
          "chart" : {
            "type" : "string",
            "description" : "Chart type of the main view in Cost Analysis. Required.",
            "enum" : [ "Area", "Line", "StackedColumn", "GroupedColumn", "Table" ]
          },
          "createdOn" : {
            "type" : "string",
            "description" : "Date the user created this view.",
            "format" : "date-time",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "User input name of the view. Required."
          },
          "kpis" : {
            "type" : "array",
            "description" : "List of KPIs to show in Cost Analysis UI.",
            "items" : {
              "$ref" : "#/components/schemas/KpiProperties"
            }
          },
          "metric" : {
            "type" : "string",
            "description" : "Metric to use when displaying costs.",
            "enum" : [ "ActualCost", "AmortizedCost", "AHUB" ]
          },
          "modifiedOn" : {
            "type" : "string",
            "description" : "Date when the user last modified this view.",
            "format" : "date-time",
            "readOnly" : true
          },
          "pivots" : {
            "type" : "array",
            "description" : "Configuration of 3 sub-views in the Cost Analysis UI.",
            "items" : {
              "$ref" : "#/components/schemas/PivotProperties"
            }
          },
          "query" : {
            "$ref" : "#/components/schemas/ReportConfigDefinition"
          },
          "scope" : {
            "type" : "string",
            "description" : "Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope."
          }
        },
        "description" : "The properties of the view."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Version of the API to be used with the client request. The current version is 2019-04-01-preview",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "billingAccountIdParameter" : {
        "name" : "billingAccountId",
        "in" : "path",
        "description" : "BillingAccount ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "budgetNameParameter" : {
        "name" : "budgetName",
        "in" : "path",
        "description" : "Budget Name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "departmentIdParameter" : {
        "name" : "departmentId",
        "in" : "path",
        "description" : "Department ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "enrollmentAccountIdParameter" : {
        "name" : "enrollmentAccountId",
        "in" : "path",
        "description" : "Enrollment Account ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "managementGroupIdParameter" : {
        "name" : "managementGroupId",
        "in" : "path",
        "description" : "ManagementGroup ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Azure Resource Group Name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "scopeBudgetParameter" : {
        "name" : "scope",
        "in" : "path",
        "description" : "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "scopeViewParameter" : {
        "name" : "scope",
        "in" : "path",
        "description" : "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Azure Subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "viewNameParameter" : {
        "name" : "viewName",
        "in" : "path",
        "description" : "View name",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}