{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DataBoxEdgeManagementClient",
    "version" : "2019-03-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.DataBoxEdge/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "summary" : "List all the supported operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of supported operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Gets all the data box edge/gateway devices in a subscription.",
        "operationId" : "Devices_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of data box edge/gateway devices.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataBoxEdgeDeviceList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Gets all the data box edge/gateway devices in a resource group.",
        "operationId" : "Devices_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of data box edge/gateway devices.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataBoxEdgeDeviceList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Gets the properties of the data box edge/gateway device.",
        "operationId" : "Devices_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The data box edge/gateway device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataBoxEdgeDevice"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Devices" ],
        "description" : "Creates or updates a Data Box Edge/Gateway resource.",
        "operationId" : "Devices_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The resource object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataBoxEdgeDevice"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataBoxEdgeDevice"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Devices" ],
        "description" : "Deletes the data box edge/gateway device.",
        "operationId" : "Devices_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the resource."
          },
          "202" : {
            "description" : "Accepted the request to delete the resource."
          },
          "204" : {
            "description" : "The resource is already deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Devices" ],
        "description" : "Modifies a Data Box Edge/Gateway resource.",
        "operationId" : "Devices_Update",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The resource parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataBoxEdgeDevicePatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataBoxEdgeDevice"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "description" : "Gets all the alerts for a data box edge/gateway device.",
        "operationId" : "Alerts_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of alerts.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}" : {
      "get" : {
        "tags" : [ "Alerts" ],
        "summary" : "Gets an alert by name.",
        "operationId" : "Alerts_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The alert name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The alert details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alert"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules" : {
      "get" : {
        "tags" : [ "BandwidthSchedules" ],
        "description" : "Gets all the bandwidth schedules for a data box edge/gateway device.",
        "operationId" : "BandwidthSchedules_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of bandwidth schedules.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BandwidthSchedulesList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}" : {
      "get" : {
        "tags" : [ "BandwidthSchedules" ],
        "description" : "Gets the properties of the specified bandwidth schedule.",
        "operationId" : "BandwidthSchedules_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The bandwidth schedule name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The bandwidth schedule.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BandwidthSchedule"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "BandwidthSchedules" ],
        "description" : "Creates or updates a bandwidth schedule.",
        "operationId" : "BandwidthSchedules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The bandwidth schedule name which needs to be added/updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The bandwidth schedule to be added or updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BandwidthSchedule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the bandwidth schedule.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BandwidthSchedule"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the bandwidth schedule."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BandwidthSchedules" ],
        "description" : "Deletes the specified bandwidth schedule.",
        "operationId" : "BandwidthSchedules_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The bandwidth schedule name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the bandwidth schedule."
          },
          "202" : {
            "description" : "Accepted the request to delete the bandwidth schedule."
          },
          "204" : {
            "description" : "Successfully deleted the bandwidth schedule."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates" : {
      "post" : {
        "tags" : [ "Devices" ],
        "summary" : "Downloads the updates on a data box edge/gateway device.",
        "operationId" : "Devices_DownloadUpdates",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully downloaded the updates on the device."
          },
          "202" : {
            "description" : "Accepted the request to download the updates on the device."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Gets additional information for the specified data box edge/gateway device.",
        "operationId" : "Devices_GetExtendedInformation",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The additional information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataBoxEdgeDeviceExtendedInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates" : {
      "post" : {
        "tags" : [ "Devices" ],
        "summary" : "Installs the updates on the data box edge/gateway device.",
        "operationId" : "Devices_InstallUpdates",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully installed updates on the device."
          },
          "202" : {
            "description" : "Accepted the request to install updates on the device."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Gets the details of a specified job on a data box edge/gateway device.",
        "operationId" : "Jobs_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default" : {
      "get" : {
        "tags" : [ "Devices" ],
        "description" : "Gets the network settings of the specified data box edge/gateway device.",
        "operationId" : "Devices_GetNetworkSettings",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The device network settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}" : {
      "get" : {
        "tags" : [ "OperationsStatus" ],
        "summary" : "Gets the details of a specified job on a data box edge/gateway device.",
        "operationId" : "OperationsStatus_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The job name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The job details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Lists all the orders related to a data box edge/gateway device.",
        "operationId" : "Orders_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lists all the orders for the Data Box Edge Device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default" : {
      "get" : {
        "tags" : [ "Orders" ],
        "summary" : "Gets a specific order by name.",
        "operationId" : "Orders_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The order details of a device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Orders" ],
        "summary" : "Creates or updates an order.",
        "operationId" : "Orders_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The order to be created or updated.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Order"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the order.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the order."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Orders" ],
        "summary" : "Deletes the order related to the device.",
        "operationId" : "Orders_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the order."
          },
          "202" : {
            "description" : "Accepted the request to delete the order."
          },
          "204" : {
            "description" : "The order is already deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles" : {
      "get" : {
        "tags" : [ "Roles" ],
        "description" : "Lists all the roles configured in a data box edge/gateway device.",
        "operationId" : "Roles_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all the roles configured in the device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}" : {
      "get" : {
        "tags" : [ "Roles" ],
        "description" : "Gets a specific role by name.",
        "operationId" : "Roles_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The role name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The role with the specified name in the given device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Roles" ],
        "description" : "Create or update a role.",
        "operationId" : "Roles_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The role name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The role properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Role"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the role.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Role"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the role."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Roles" ],
        "description" : "Deletes the role on the data box edge device.",
        "operationId" : "Roles_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The role name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the role."
          },
          "202" : {
            "description" : "Accepted the request to delete the role."
          },
          "204" : {
            "description" : "The role is already deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates" : {
      "post" : {
        "tags" : [ "Devices" ],
        "summary" : "Scans for updates on a data box edge/gateway device.",
        "operationId" : "Devices_ScanForUpdates",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully scanned the device for updates."
          },
          "202" : {
            "description" : "Accepted the request to scan for updates on the device."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Updates the security settings on a data box edge/gateway device.",
        "operationId" : "Devices_CreateOrUpdateSecuritySettings",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The security settings.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecuritySettings"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted the request to update the security settings."
          },
          "204" : {
            "description" : "Updated the security settings."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Lists all the shares in a data box edge/gateway device.",
        "operationId" : "Shares_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of all the shares on the device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Gets a share by name.",
        "operationId" : "Shares_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The share details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Shares" ],
        "summary" : "Creates a new share or updates an existing share on the device.",
        "operationId" : "Shares_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The share properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Share"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the share.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Share"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the share."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Shares" ],
        "description" : "Deletes the share on the data box edge/gateway device.",
        "operationId" : "Shares_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the share."
          },
          "202" : {
            "description" : "Accepted the request to delete the share."
          },
          "204" : {
            "description" : "The share is already deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}/refresh" : {
      "post" : {
        "tags" : [ "Shares" ],
        "summary" : "Refreshes the share metadata with the data from the cloud.",
        "operationId" : "Shares_Refresh",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The share name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully refreshed the share on the device."
          },
          "202" : {
            "description" : "Accepted the request to refresh the share on the device."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials" : {
      "get" : {
        "tags" : [ "StorageAccountCredentials" ],
        "summary" : "Gets all the storage account credentials in a data box edge/gateway device.",
        "operationId" : "StorageAccountCredentials_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of storage account credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccountCredentialList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}" : {
      "get" : {
        "tags" : [ "StorageAccountCredentials" ],
        "description" : "Gets the properties of the specified storage account credential.",
        "operationId" : "StorageAccountCredentials_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The storage account credential name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The storage account credential properties.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccountCredential"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "StorageAccountCredentials" ],
        "description" : "Creates or updates the storage account credential.",
        "operationId" : "StorageAccountCredentials_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The storage account credential name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The storage account credential.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageAccountCredential"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the storage account credential.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageAccountCredential"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the storage account credential."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "StorageAccountCredentials" ],
        "description" : "Deletes the storage account credential.",
        "operationId" : "StorageAccountCredentials_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The storage account credential name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the storage account credential."
          },
          "202" : {
            "description" : "Accepted the request to delete the storage account credential."
          },
          "204" : {
            "description" : "The storage account credential is already deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers" : {
      "get" : {
        "tags" : [ "Triggers" ],
        "description" : "Lists all the triggers configured in the device.",
        "operationId" : "Triggers_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all the triggers configured in the device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}" : {
      "get" : {
        "tags" : [ "Triggers" ],
        "description" : "Get a specific trigger by name.",
        "operationId" : "Triggers_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The trigger.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Triggers" ],
        "description" : "Creates or updates a trigger.",
        "operationId" : "Triggers_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "Creates or updates a trigger",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The trigger.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Trigger"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the trigger.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the trigger."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Triggers" ],
        "description" : "Deletes the trigger on the gateway device.",
        "operationId" : "Triggers_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the trigger."
          },
          "202" : {
            "description" : "Accepted the request to delete the trigger."
          },
          "204" : {
            "description" : "The trigger is already deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default" : {
      "get" : {
        "tags" : [ "Devices" ],
        "summary" : "Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.",
        "operationId" : "Devices_GetUpdateSummary",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The update summary.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateSummary"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate" : {
      "post" : {
        "tags" : [ "Devices" ],
        "description" : "Uploads registration certificate for the device.",
        "operationId" : "Devices_UploadCertificate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The upload certificate request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadCertificateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully uploaded the registration certificate.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadCertificateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Gets all the users registered on a data box edge/gateway device.",
        "operationId" : "Users_ListByDataBoxEdgeDevice",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The collection of all users on the device.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Gets the properties of the specified user.",
        "operationId" : "Users_Get",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The user name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The user details.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "description" : "Creates a new user or updates an existing user's information on a data box edge/gateway device.",
        "operationId" : "Users_CreateOrUpdate",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The user name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The user details.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated the user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted the request to create or update the user."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "description" : "Deletes the user on a databox edge/gateway device.",
        "operationId" : "Users_Delete",
        "parameters" : [ {
          "name" : "deviceName",
          "in" : "path",
          "description" : "The device name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The user name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the user."
          },
          "202" : {
            "description" : "Accepted the request to delete the user."
          },
          "204" : {
            "description" : "The user is already deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ARMBaseModel" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The path ID that uniquely identifies the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The object name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The hierarchical type of the object.",
            "readOnly" : true
          }
        },
        "description" : "Represents the base class for all object models."
      },
      "Address" : {
        "required" : [ "addressLine1", "city", "country", "postalCode", "state" ],
        "type" : "object",
        "properties" : {
          "addressLine1" : {
            "type" : "string",
            "description" : "The address line1."
          },
          "addressLine2" : {
            "type" : "string",
            "description" : "The address line2."
          },
          "addressLine3" : {
            "type" : "string",
            "description" : "The address line3."
          },
          "city" : {
            "type" : "string",
            "description" : "The city name."
          },
          "country" : {
            "type" : "string",
            "description" : "The country name."
          },
          "postalCode" : {
            "type" : "string",
            "description" : "The postal code."
          },
          "state" : {
            "type" : "string",
            "description" : "The state name."
          }
        },
        "description" : "The shipping address of the customer."
      },
      "Alert" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AlertProperties"
          }
        },
        "description" : "Alert on the data box edge/gateway device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "AlertErrorDetails" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "string",
            "description" : "Error code.",
            "readOnly" : true
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Error Message.",
            "readOnly" : true
          },
          "occurrences" : {
            "type" : "integer",
            "description" : "Number of occurrences.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Error details for the alert."
      },
      "AlertList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Alert"
            }
          }
        },
        "description" : "Collection of alerts."
      },
      "AlertProperties" : {
        "type" : "object",
        "properties" : {
          "alertType" : {
            "type" : "string",
            "description" : "Alert type.",
            "readOnly" : true
          },
          "appearedAtDateTime" : {
            "type" : "string",
            "description" : "UTC time when the alert appeared.",
            "format" : "date-time",
            "readOnly" : true
          },
          "detailedInformation" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Alert details.",
            "readOnly" : true
          },
          "errorDetails" : {
            "$ref" : "#/components/schemas/AlertErrorDetails"
          },
          "recommendation" : {
            "type" : "string",
            "description" : "Alert recommendation.",
            "readOnly" : true
          },
          "severity" : {
            "type" : "string",
            "description" : "Severity of the alert.",
            "readOnly" : true,
            "enum" : [ "Informational", "Warning", "Critical" ]
          },
          "title" : {
            "type" : "string",
            "description" : "Alert title.",
            "readOnly" : true
          }
        },
        "description" : "Properties of alert."
      },
      "AsymmetricEncryptedSecret" : {
        "required" : [ "encryptionAlgorithm", "value" ],
        "type" : "object",
        "properties" : {
          "encryptionAlgorithm" : {
            "type" : "string",
            "description" : "The algorithm used to encrypt \"Value\".",
            "enum" : [ "None", "AES256", "RSAES_PKCS1_v_1_5" ]
          },
          "encryptionCertThumbprint" : {
            "type" : "string",
            "description" : "Thumbprint certificate used to encrypt \\\"Value\\\". If the value is unencrypted, it will be null."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the secret."
          }
        },
        "description" : "Represent the secrets intended for encryption with asymmetric key pair."
      },
      "Authentication" : {
        "type" : "object",
        "properties" : {
          "symmetricKey" : {
            "$ref" : "#/components/schemas/SymmetricKey"
          }
        },
        "description" : "Authentication mechanism for IoT devices."
      },
      "AzureContainerInfo" : {
        "required" : [ "containerName", "dataFormat", "storageAccountCredentialId" ],
        "type" : "object",
        "properties" : {
          "containerName" : {
            "type" : "string",
            "description" : "Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob)."
          },
          "dataFormat" : {
            "type" : "string",
            "description" : "Storage format used for the file represented by the share.",
            "enum" : [ "BlockBlob", "PageBlob", "AzureFile" ]
          },
          "storageAccountCredentialId" : {
            "type" : "string",
            "description" : "ID of the storage account credential used to access storage."
          }
        },
        "description" : "Azure container mapping of the endpoint."
      },
      "BandwidthSchedule" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/BandwidthScheduleProperties"
          }
        },
        "description" : "The bandwidth schedule details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "BandwidthScheduleProperties" : {
        "required" : [ "days", "rateInMbps", "start", "stop" ],
        "type" : "object",
        "properties" : {
          "days" : {
            "type" : "array",
            "description" : "The days of the week when this schedule is applicable.",
            "items" : {
              "type" : "string",
              "enum" : [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ]
            }
          },
          "rateInMbps" : {
            "type" : "integer",
            "description" : "The bandwidth rate in Mbps.",
            "format" : "int32"
          },
          "start" : {
            "type" : "string",
            "description" : "The start time of the schedule in UTC."
          },
          "stop" : {
            "type" : "string",
            "description" : "The stop time of the schedule in UTC."
          }
        },
        "description" : "The properties of the bandwidth schedule."
      },
      "BandwidthSchedulesList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of bandwidth schedules.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/BandwidthSchedule"
            }
          }
        },
        "description" : "The collection of bandwidth schedules."
      },
      "ClientAccessRight" : {
        "required" : [ "accessPermission", "client" ],
        "type" : "object",
        "properties" : {
          "accessPermission" : {
            "type" : "string",
            "description" : "Type of access to be allowed for the client.",
            "enum" : [ "NoAccess", "ReadOnly", "ReadWrite" ]
          },
          "client" : {
            "type" : "string",
            "description" : "IP of the client."
          }
        },
        "description" : "The mapping between a particular client IP and the type of access client has on the NFS share."
      },
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CloudErrorBody"
          }
        },
        "description" : "An error response from the service."
      },
      "CloudErrorBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "details" : {
            "type" : "array",
            "description" : "A list of additional details about the error.",
            "items" : {
              "$ref" : "#/components/schemas/CloudErrorBody"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A message describing the error, intended to be suitable for display in a user interface."
          }
        },
        "description" : "An error response from the service."
      },
      "ContactDetails" : {
        "required" : [ "companyName", "contactPerson", "emailList", "phone" ],
        "type" : "object",
        "properties" : {
          "companyName" : {
            "type" : "string",
            "description" : "The name of the company."
          },
          "contactPerson" : {
            "type" : "string",
            "description" : "The contact person name."
          },
          "emailList" : {
            "type" : "array",
            "description" : "The email list.",
            "items" : {
              "type" : "string"
            }
          },
          "phone" : {
            "type" : "string",
            "description" : "The phone number."
          }
        },
        "description" : "Contains all the contact details of the customer."
      },
      "DataBoxEdgeDevice" : {
        "required" : [ "location" ],
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "The etag for the devices."
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed."
          },
          "properties" : {
            "$ref" : "#/components/schemas/DataBoxEdgeDeviceProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The list of tags that describe the device. These tags can be used to view and group this device (across resource groups)."
          }
        },
        "description" : "The Data Box Edge/Gateway device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "DataBoxEdgeDeviceExtendedInfo" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DataBoxEdgeDeviceExtendedInfoProperties"
          }
        },
        "description" : "The extended Info of the Data Box Edge/Gateway device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "DataBoxEdgeDeviceExtendedInfoProperties" : {
        "type" : "object",
        "properties" : {
          "encryptionKey" : {
            "type" : "string",
            "description" : "The public part of the encryption certificate. Client uses this to encrypt any secret."
          },
          "encryptionKeyThumbprint" : {
            "type" : "string",
            "description" : "The digital signature of encrypted certificate."
          },
          "resourceKey" : {
            "type" : "string",
            "description" : "The Resource ID of the Resource.",
            "readOnly" : true
          }
        },
        "description" : "The properties of the Data Box Edge/Gateway device extended info."
      },
      "DataBoxEdgeDeviceList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of Data Box Edge/Gateway devices.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DataBoxEdgeDevice"
            }
          }
        },
        "description" : "The collection of Data Box Edge/Gateway devices."
      },
      "DataBoxEdgeDevicePatch" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags attached to the Data Box Edge/Gateway resource."
          }
        },
        "description" : "The Data Box Edge/Gateway device patch."
      },
      "DataBoxEdgeDeviceProperties" : {
        "type" : "object",
        "properties" : {
          "configuredRoleTypes" : {
            "type" : "array",
            "description" : "Type of compute roles configured.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "IOT", "ASA", "Functions", "Cognitive" ]
            }
          },
          "culture" : {
            "type" : "string",
            "description" : "The Data Box Edge/Gateway device culture.",
            "readOnly" : true
          },
          "dataBoxEdgeDeviceStatus" : {
            "type" : "string",
            "description" : "The status of the Data Box Edge/Gateway device.",
            "enum" : [ "ReadyToSetup", "Online", "Offline", "NeedsAttention", "Disconnected", "PartiallyDisconnected" ]
          },
          "description" : {
            "type" : "string",
            "description" : "The Description of the Data Box Edge/Gateway device."
          },
          "deviceHcsVersion" : {
            "type" : "string",
            "description" : "The device software version number of the device (eg: 1.2.18105.6).",
            "readOnly" : true
          },
          "deviceLocalCapacity" : {
            "type" : "integer",
            "description" : "The Data Box Edge/Gateway device local capacity in MB.",
            "format" : "int64",
            "readOnly" : true
          },
          "deviceModel" : {
            "type" : "string",
            "description" : "The Data Box Edge/Gateway device model.",
            "readOnly" : true
          },
          "deviceSoftwareVersion" : {
            "type" : "string",
            "description" : "The Data Box Edge/Gateway device software version.",
            "readOnly" : true
          },
          "deviceType" : {
            "type" : "string",
            "description" : "The type of the Data Box Edge/Gateway device.",
            "readOnly" : true,
            "enum" : [ "DataBoxEdgeDevice" ]
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The Data Box Edge/Gateway device name."
          },
          "modelDescription" : {
            "type" : "string",
            "description" : "The description of the Data Box Edge/Gateway device model."
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "The Serial Number of Data Box Edge/Gateway device.",
            "readOnly" : true
          },
          "timeZone" : {
            "type" : "string",
            "description" : "The Data Box Edge/Gateway device timezone.",
            "readOnly" : true
          }
        },
        "description" : "The properties of the Data Box Edge/Gateway device."
      },
      "FileEventTrigger" : {
        "required" : [ "properties" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The path ID that uniquely identifies the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The object name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/FileTriggerProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The hierarchical type of the object.",
            "readOnly" : true
          }
        },
        "description" : "Trigger details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Trigger"
        } ]
      },
      "FileSourceInfo" : {
        "required" : [ "shareId" ],
        "type" : "object",
        "properties" : {
          "shareId" : {
            "type" : "string",
            "description" : "File share ID."
          }
        },
        "description" : "File source details."
      },
      "FileTriggerProperties" : {
        "required" : [ "sinkInfo", "sourceInfo" ],
        "type" : "object",
        "properties" : {
          "customContextTag" : {
            "type" : "string",
            "description" : "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module."
          },
          "sinkInfo" : {
            "$ref" : "#/components/schemas/RoleSinkInfo"
          },
          "sourceInfo" : {
            "$ref" : "#/components/schemas/FileSourceInfo"
          }
        },
        "description" : "File trigger properties."
      },
      "IoTDeviceInfo" : {
        "required" : [ "deviceId", "ioTHostHub" ],
        "type" : "object",
        "properties" : {
          "authentication" : {
            "$ref" : "#/components/schemas/Authentication"
          },
          "deviceId" : {
            "type" : "string",
            "description" : "ID of the IoT device/edge device."
          },
          "ioTHostHub" : {
            "type" : "string",
            "description" : "Host name for the IoT hub associated to the device."
          }
        },
        "description" : "Metadata of IoT device/IoT Edge device to be configured."
      },
      "IoTRole" : {
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The path ID that uniquely identifies the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The object name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/IoTRoleProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The hierarchical type of the object.",
            "readOnly" : true
          }
        },
        "description" : "Compute role.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Role"
        } ]
      },
      "IoTRoleProperties" : {
        "required" : [ "hostPlatform", "ioTDeviceDetails", "ioTEdgeDeviceDetails", "roleStatus" ],
        "type" : "object",
        "properties" : {
          "hostPlatform" : {
            "type" : "string",
            "description" : "Host OS supported by the IoT role.",
            "enum" : [ "Windows", "Linux" ]
          },
          "ioTDeviceDetails" : {
            "$ref" : "#/components/schemas/IoTDeviceInfo"
          },
          "ioTEdgeDeviceDetails" : {
            "$ref" : "#/components/schemas/IoTDeviceInfo"
          },
          "roleStatus" : {
            "type" : "string",
            "description" : "Role status.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "shareMappings" : {
            "type" : "array",
            "description" : "Mount points of shares in role(s).",
            "items" : {
              "$ref" : "#/components/schemas/MountPointMap"
            }
          }
        },
        "description" : "IoT role properties."
      },
      "Ipv4Config" : {
        "type" : "object",
        "properties" : {
          "gateway" : {
            "type" : "string",
            "description" : "The IPv4 gateway of the network adapter.",
            "readOnly" : true
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IPv4 address of the network adapter.",
            "readOnly" : true
          },
          "subnet" : {
            "type" : "string",
            "description" : "The IPv4 subnet of the network adapter.",
            "readOnly" : true
          }
        },
        "description" : "Details related to the IPv4 address configuration."
      },
      "Ipv6Config" : {
        "type" : "object",
        "properties" : {
          "gateway" : {
            "type" : "string",
            "description" : "The IPv6 gateway of the network adapter.",
            "readOnly" : true
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IPv6 address of the network adapter.",
            "readOnly" : true
          },
          "prefixLength" : {
            "type" : "integer",
            "description" : "The IPv6 prefix of the network adapter.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Details related to the IPv6 address configuration."
      },
      "Job" : {
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "The UTC date and time at which the job completed.",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/JobErrorDetails"
          },
          "id" : {
            "type" : "string",
            "description" : "The path ID that uniquely identifies the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the object.",
            "readOnly" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "The percentage of the job that is complete.",
            "format" : "int32",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/JobProperties"
          },
          "startTime" : {
            "type" : "string",
            "description" : "The UTC date and time at which the job started.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The current status of the job.",
            "readOnly" : true,
            "enum" : [ "Invalid", "Running", "Succeeded", "Failed", "Canceled", "Paused", "Scheduled" ]
          },
          "type" : {
            "type" : "string",
            "description" : "The hierarchical type of the object.",
            "readOnly" : true
          }
        },
        "description" : "A device job."
      },
      "JobErrorDetails" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code intended for programmatic access.",
            "readOnly" : true
          },
          "errorDetails" : {
            "type" : "array",
            "description" : "The error details.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/JobErrorItem"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The message that describes the error in detail.",
            "readOnly" : true
          }
        },
        "description" : "The job error information containing the list of job errors."
      },
      "JobErrorItem" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code intended for programmatic access.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "The message that describes the error in detail.",
            "readOnly" : true
          },
          "recommendations" : {
            "type" : "array",
            "description" : "The recommended actions.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The job error items."
      },
      "JobProperties" : {
        "type" : "object",
        "properties" : {
          "currentStage" : {
            "type" : "string",
            "description" : "Current stage of the update operation.",
            "readOnly" : true,
            "enum" : [ "Unknown", "Initial", "ScanStarted", "ScanComplete", "ScanFailed", "DownloadStarted", "DownloadComplete", "DownloadFailed", "InstallStarted", "InstallComplete", "InstallFailed", "RebootInitiated", "Success", "Failure", "RescanStarted", "RescanComplete", "RescanFailed" ]
          },
          "downloadProgress" : {
            "$ref" : "#/components/schemas/UpdateDownloadProgress"
          },
          "errorManifestFile" : {
            "type" : "string",
            "description" : "Local share/remote container relative path to the error manifest file of the refresh.",
            "readOnly" : true
          },
          "folder" : {
            "type" : "string",
            "description" : "If only subfolders need to be refreshed, then the subfolder path inside the share. (The path is empty if there are no subfolders.)"
          },
          "installProgress" : {
            "$ref" : "#/components/schemas/UpdateInstallProgress"
          },
          "jobType" : {
            "type" : "string",
            "description" : "The type of the job.",
            "readOnly" : true,
            "enum" : [ "Invalid", "ScanForUpdates", "DownloadUpdates", "InstallUpdates", "RefreshShare" ]
          },
          "shareId" : {
            "type" : "string",
            "description" : "ARM ID of the share that was refreshed.",
            "readOnly" : true
          },
          "totalRefreshErrors" : {
            "type" : "integer",
            "description" : "Total number of errors encountered during the refresh process.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "The properties for the job."
      },
      "MetricDimension_V1" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "Display name of the metrics dimension."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the metrics dimension."
          },
          "toBeExportedForShoebox" : {
            "type" : "boolean",
            "description" : "To be exported to shoe box."
          }
        },
        "description" : "Metric Dimension v1."
      },
      "MetricSpecification_V1" : {
        "type" : "object",
        "properties" : {
          "aggregationType" : {
            "type" : "string",
            "description" : "Metric aggregation type.",
            "enum" : [ "NotSpecified", "None", "Average", "Minimum", "Maximum", "Total", "Count" ]
          },
          "category" : {
            "type" : "string",
            "description" : "Metric category.",
            "enum" : [ "Capacity", "Transaction" ]
          },
          "dimensions" : {
            "type" : "array",
            "description" : "Metric dimensions, other than default dimension which is resource.",
            "items" : {
              "$ref" : "#/components/schemas/MetricDimension_V1"
            }
          },
          "displayDescription" : {
            "type" : "string",
            "description" : "Description of the metric to be displayed."
          },
          "displayName" : {
            "type" : "string",
            "description" : "Display name of the metric."
          },
          "fillGapWithZero" : {
            "type" : "boolean",
            "description" : "Set true to fill the gaps with zero."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the metric."
          },
          "resourceIdDimensionNameOverride" : {
            "type" : "string",
            "description" : "Resource name override."
          },
          "supportedAggregationTypes" : {
            "type" : "array",
            "description" : "Support metric aggregation type.",
            "items" : {
              "type" : "string",
              "enum" : [ "NotSpecified", "None", "Average", "Minimum", "Maximum", "Total", "Count" ]
            }
          },
          "supportedTimeGrainTypes" : {
            "type" : "array",
            "description" : "Support granularity of metrics.",
            "items" : {
              "type" : "string",
              "enum" : [ "PT1M", "PT5M", "PT15M", "PT30M", "PT1H", "PT6H", "PT12H", "PT1D" ]
            }
          },
          "unit" : {
            "type" : "string",
            "description" : "Metric units.",
            "enum" : [ "NotSpecified", "Percent", "Count", "Seconds", "Milliseconds", "Bytes", "BytesPerSecond", "CountPerSecond" ]
          }
        },
        "description" : "Metric specification version 1."
      },
      "MountPointMap" : {
        "required" : [ "shareId" ],
        "type" : "object",
        "properties" : {
          "mountPoint" : {
            "type" : "string",
            "description" : "Mount point for the share.",
            "readOnly" : true
          },
          "roleId" : {
            "type" : "string",
            "description" : "ID of the role to which share is mounted.",
            "readOnly" : true
          },
          "roleType" : {
            "type" : "string",
            "description" : "Role type.",
            "readOnly" : true,
            "enum" : [ "IOT", "ASA", "Functions", "Cognitive" ]
          },
          "shareId" : {
            "type" : "string",
            "description" : "ID of the share mounted to the role VM."
          }
        },
        "description" : "The share mount point."
      },
      "NetworkAdapter" : {
        "type" : "object",
        "properties" : {
          "adapterId" : {
            "type" : "string",
            "description" : "Instance ID of network adapter.",
            "readOnly" : true
          },
          "adapterPosition" : {
            "$ref" : "#/components/schemas/NetworkAdapterPosition"
          },
          "dhcpStatus" : {
            "type" : "string",
            "description" : "Value indicating whether this adapter has DHCP enabled.",
            "enum" : [ "Disabled", "Enabled" ]
          },
          "dnsServers" : {
            "type" : "array",
            "description" : "The list of DNS Servers of the device.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "index" : {
            "type" : "integer",
            "description" : "Logical index of the adapter.",
            "format" : "int32",
            "readOnly" : true
          },
          "ipv4Configuration" : {
            "$ref" : "#/components/schemas/Ipv4Config"
          },
          "ipv6Configuration" : {
            "$ref" : "#/components/schemas/Ipv6Config"
          },
          "ipv6LinkLocalAddress" : {
            "type" : "string",
            "description" : "The IPv6 local address.",
            "readOnly" : true
          },
          "label" : {
            "type" : "string",
            "description" : "Hardware label for the adapter.",
            "readOnly" : true
          },
          "linkSpeed" : {
            "type" : "integer",
            "description" : "Link speed.",
            "format" : "int64",
            "readOnly" : true
          },
          "macAddress" : {
            "type" : "string",
            "description" : "MAC address.",
            "readOnly" : true
          },
          "networkAdapterName" : {
            "type" : "string",
            "description" : "Network adapter name.",
            "readOnly" : true
          },
          "nodeId" : {
            "type" : "string",
            "description" : "Node ID of the network adapter.",
            "readOnly" : true
          },
          "rdmaStatus" : {
            "type" : "string",
            "description" : "Value indicating whether this adapter is RDMA capable.",
            "enum" : [ "Incapable", "Capable" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Value indicating whether this adapter is valid.",
            "readOnly" : true,
            "enum" : [ "Inactive", "Active" ]
          }
        },
        "description" : "Represents the networkAdapter on a device."
      },
      "NetworkAdapterPosition" : {
        "type" : "object",
        "properties" : {
          "networkGroup" : {
            "type" : "string",
            "description" : "The network group.",
            "readOnly" : true,
            "enum" : [ "None", "NonRDMA", "RDMA" ]
          },
          "port" : {
            "type" : "integer",
            "description" : "The port.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "The network adapter position."
      },
      "NetworkSettings" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/NetworkSettingsProperties"
          }
        },
        "description" : "The network settings of a device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "NetworkSettingsProperties" : {
        "type" : "object",
        "properties" : {
          "networkAdapters" : {
            "type" : "array",
            "description" : "The network adapter list on the device.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/NetworkAdapter"
            }
          }
        },
        "description" : "The properties of network settings."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the operation."
          },
          "origin" : {
            "type" : "string",
            "description" : "Origin of the operation."
          },
          "properties" : {
            "$ref" : "#/components/schemas/OperationProperties"
          }
        },
        "description" : "Operations."
      },
      "OperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the operation to be performed."
          },
          "operation" : {
            "type" : "string",
            "description" : "Operation to be performed on the resource."
          },
          "provider" : {
            "type" : "string",
            "description" : "Provider name."
          },
          "resource" : {
            "type" : "string",
            "description" : "The type of resource in which the operation is performed."
          }
        },
        "description" : "Operation display properties."
      },
      "OperationProperties" : {
        "type" : "object",
        "properties" : {
          "serviceSpecification" : {
            "$ref" : "#/components/schemas/ServiceSpecification"
          }
        },
        "description" : "Operation properties."
      },
      "OperationsList" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "The list of operations used for the discovery of available provider operations."
      },
      "Order" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/OrderProperties"
          }
        },
        "description" : "The order details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "OrderList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of orders.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Order"
            }
          }
        },
        "description" : "List of order entities."
      },
      "OrderProperties" : {
        "required" : [ "contactInformation", "shippingAddress" ],
        "type" : "object",
        "properties" : {
          "contactInformation" : {
            "$ref" : "#/components/schemas/ContactDetails"
          },
          "currentStatus" : {
            "$ref" : "#/components/schemas/OrderStatus"
          },
          "deliveryTrackingInfo" : {
            "type" : "array",
            "description" : "Tracking information for the package delivered to the customer whether it has an original or a replacement device.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/TrackingInfo"
            }
          },
          "orderHistory" : {
            "type" : "array",
            "description" : "List of status changes in the order.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/OrderStatus"
            }
          },
          "returnTrackingInfo" : {
            "type" : "array",
            "description" : "Tracking information for the package returned from the customer whether it has an original or a replacement device.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/TrackingInfo"
            }
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the device.",
            "readOnly" : true
          },
          "shippingAddress" : {
            "$ref" : "#/components/schemas/Address"
          }
        },
        "description" : "Order properties."
      },
      "OrderStatus" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "Comments related to this status change."
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the order as per the allowed status types.",
            "enum" : [ "Untracked", "AwaitingFulfilment", "AwaitingPreparation", "AwaitingShipment", "Shipped", "Arriving", "Delivered", "ReplacementRequested", "LostDevice", "Declined", "ReturnInitiated", "AwaitingReturnShipment", "ShippedBack", "CollectedAtMicrosoft" ]
          },
          "updateDateTime" : {
            "type" : "string",
            "description" : "Time of status update.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Represents a single status change."
      },
      "PeriodicTimerEventTrigger" : {
        "required" : [ "properties" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The path ID that uniquely identifies the object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The object name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/PeriodicTimerProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The hierarchical type of the object.",
            "readOnly" : true
          }
        },
        "description" : "Trigger details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Trigger"
        } ]
      },
      "PeriodicTimerProperties" : {
        "required" : [ "sinkInfo", "sourceInfo" ],
        "type" : "object",
        "properties" : {
          "customContextTag" : {
            "type" : "string",
            "description" : "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module."
          },
          "sinkInfo" : {
            "$ref" : "#/components/schemas/RoleSinkInfo"
          },
          "sourceInfo" : {
            "$ref" : "#/components/schemas/PeriodicTimerSourceInfo"
          }
        },
        "description" : "Periodic timer trigger properties."
      },
      "PeriodicTimerSourceInfo" : {
        "required" : [ "schedule", "startTime" ],
        "type" : "object",
        "properties" : {
          "schedule" : {
            "type" : "string",
            "description" : "Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds."
          },
          "startTime" : {
            "type" : "string",
            "description" : "The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified up to seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.",
            "format" : "date-time"
          },
          "topic" : {
            "type" : "string",
            "description" : "Topic where periodic events are published to IoT device."
          }
        },
        "description" : "Periodic timer event source."
      },
      "RawCertificateData" : {
        "required" : [ "certificate" ],
        "type" : "object",
        "properties" : {
          "authenticationType" : {
            "type" : "string",
            "description" : "The authentication type.",
            "enum" : [ "Invalid", "AzureActiveDirectory" ]
          },
          "certificate" : {
            "type" : "string",
            "description" : "The base64 encoded certificate raw data."
          }
        },
        "description" : "Raw Certificate Data."
      },
      "RefreshDetails" : {
        "type" : "object",
        "properties" : {
          "errorManifestFile" : {
            "type" : "string",
            "description" : "Indicates the relative path of the error xml for the last refresh job on this particular share, if any. This could be a failed job or a successful job."
          },
          "inProgressRefreshJobId" : {
            "type" : "string",
            "description" : "If a refresh share job is currently in progress on this share, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress."
          },
          "lastCompletedRefreshJobTimeInUTC" : {
            "type" : "string",
            "description" : "Indicates the completed time for the last refresh job on this particular share, if any.This could be a failed job or a successful job.",
            "format" : "date-time"
          },
          "lastJob" : {
            "type" : "string",
            "description" : "Indicates the id of the last refresh job on this particular share,if any. This could be a failed job or a successful job."
          }
        },
        "description" : "Fields for tracking refresh job on the share."
      },
      "Role" : {
        "required" : [ "kind" ],
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "Role type.",
            "enum" : [ "IOT", "ASA", "Functions", "Cognitive" ]
          }
        },
        "description" : "Compute role.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "RoleList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The Value.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Role"
            }
          }
        },
        "description" : "Collection of all the roles on the Data Box Edge device."
      },
      "RoleSinkInfo" : {
        "required" : [ "roleId" ],
        "type" : "object",
        "properties" : {
          "roleId" : {
            "type" : "string",
            "description" : "Compute role ID."
          }
        },
        "description" : "Compute role against which events will be raised."
      },
      "SecuritySettings" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecuritySettingsProperties"
          }
        },
        "description" : "The security settings of a device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "SecuritySettingsProperties" : {
        "required" : [ "deviceAdminPassword" ],
        "type" : "object",
        "properties" : {
          "deviceAdminPassword" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          }
        },
        "description" : "The properties of security settings."
      },
      "ServiceSpecification" : {
        "type" : "object",
        "properties" : {
          "metricSpecifications" : {
            "type" : "array",
            "description" : "Metric specification as defined by shoebox.",
            "items" : {
              "$ref" : "#/components/schemas/MetricSpecification_V1"
            }
          }
        },
        "description" : "Service specification."
      },
      "Share" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ShareProperties"
          }
        },
        "description" : "Represents a share on the  Data Box Edge/Gateway device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "ShareAccessRight" : {
        "required" : [ "accessType", "shareId" ],
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Type of access to be allowed on the share for this user.",
            "enum" : [ "Change", "Read", "Custom" ]
          },
          "shareId" : {
            "type" : "string",
            "description" : "The share ID."
          }
        },
        "description" : "Specifies the mapping between this particular user and the type of access he has on shares on this device."
      },
      "ShareList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of shares.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Share"
            }
          }
        },
        "description" : "Collection of all the shares on the Data Box Edge/Gateway device."
      },
      "ShareProperties" : {
        "required" : [ "accessProtocol", "monitoringStatus", "shareStatus" ],
        "type" : "object",
        "properties" : {
          "accessProtocol" : {
            "type" : "string",
            "description" : "Access protocol to be used by the share.",
            "enum" : [ "SMB", "NFS" ]
          },
          "azureContainerInfo" : {
            "$ref" : "#/components/schemas/AzureContainerInfo"
          },
          "clientAccessRights" : {
            "type" : "array",
            "description" : "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
            "items" : {
              "$ref" : "#/components/schemas/ClientAccessRight"
            }
          },
          "dataPolicy" : {
            "type" : "string",
            "description" : "Data policy of the share.",
            "enum" : [ "Cloud", "Local" ]
          },
          "description" : {
            "type" : "string",
            "description" : "Description for the share."
          },
          "monitoringStatus" : {
            "type" : "string",
            "description" : "Current monitoring status of the share.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "refreshDetails" : {
            "$ref" : "#/components/schemas/RefreshDetails"
          },
          "shareMappings" : {
            "type" : "array",
            "description" : "Share mount point to the role.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MountPointMap"
            }
          },
          "shareStatus" : {
            "type" : "string",
            "description" : "Current status of the share.",
            "enum" : [ "Online", "Offline" ]
          },
          "userAccessRights" : {
            "type" : "array",
            "description" : "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
            "items" : {
              "$ref" : "#/components/schemas/UserAccessRight"
            }
          }
        },
        "description" : "The share properties."
      },
      "Sku" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "SKU name.",
            "enum" : [ "Gateway", "Edge" ]
          },
          "tier" : {
            "type" : "string",
            "description" : "The SKU tier. This is based on the SKU name.",
            "enum" : [ "Standard" ]
          }
        },
        "description" : "The SKU type."
      },
      "StorageAccountCredential" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageAccountCredentialProperties"
          }
        },
        "description" : "The storage account credential.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "StorageAccountCredentialList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The value.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/StorageAccountCredential"
            }
          }
        },
        "description" : "The collection of storage account credentials."
      },
      "StorageAccountCredentialProperties" : {
        "required" : [ "accountType", "alias", "sslStatus" ],
        "type" : "object",
        "properties" : {
          "accountKey" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          },
          "accountType" : {
            "type" : "string",
            "description" : "Type of storage accessed on the storage account.",
            "enum" : [ "GeneralPurposeStorage", "BlobStorage" ]
          },
          "alias" : {
            "type" : "string",
            "description" : "Alias for the storage account."
          },
          "blobDomainName" : {
            "type" : "string",
            "description" : "Blob end point for private clouds."
          },
          "connectionString" : {
            "type" : "string",
            "description" : "Connection string for the storage account. Use this string if username and account key are not specified."
          },
          "sslStatus" : {
            "type" : "string",
            "description" : "Signifies whether SSL needs to be enabled or not.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "userName" : {
            "type" : "string",
            "description" : "Username for the storage account."
          }
        },
        "description" : "The storage account credential properties."
      },
      "SymmetricKey" : {
        "type" : "object",
        "properties" : {
          "connectionString" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          }
        },
        "description" : "Symmetric key for authentication."
      },
      "TrackingInfo" : {
        "type" : "object",
        "properties" : {
          "carrierName" : {
            "type" : "string",
            "description" : "Name of the carrier used in the delivery."
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the device being tracked."
          },
          "trackingId" : {
            "type" : "string",
            "description" : "Tracking ID of the shipment."
          },
          "trackingUrl" : {
            "type" : "string",
            "description" : "Tracking URL of the shipment."
          }
        },
        "description" : "Tracking courier information."
      },
      "Trigger" : {
        "required" : [ "kind" ],
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "Trigger Kind.",
            "enum" : [ "FileEvent", "PeriodicTimerEvent" ]
          }
        },
        "description" : "Trigger details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "TriggerList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of triggers.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Trigger"
            }
          }
        },
        "description" : "Collection of all trigger on the data box edge device."
      },
      "UpdateDownloadProgress" : {
        "type" : "object",
        "properties" : {
          "downloadPhase" : {
            "type" : "string",
            "description" : "The download phase.",
            "readOnly" : true,
            "enum" : [ "Unknown", "Initializing", "Downloading", "Verifying" ]
          },
          "numberOfUpdatesDownloaded" : {
            "type" : "integer",
            "description" : "Number of updates downloaded.",
            "format" : "int32",
            "readOnly" : true
          },
          "numberOfUpdatesToDownload" : {
            "type" : "integer",
            "description" : "Number of updates to download.",
            "format" : "int32",
            "readOnly" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "Percentage of completion.",
            "format" : "int32",
            "readOnly" : true
          },
          "totalBytesDownloaded" : {
            "type" : "number",
            "description" : "Total bytes downloaded.",
            "format" : "double",
            "readOnly" : true
          },
          "totalBytesToDownload" : {
            "type" : "number",
            "description" : "Total bytes to download.",
            "format" : "double",
            "readOnly" : true
          }
        },
        "description" : "Details about the download progress of update."
      },
      "UpdateInstallProgress" : {
        "type" : "object",
        "properties" : {
          "numberOfUpdatesInstalled" : {
            "type" : "integer",
            "description" : "Number of updates installed.",
            "format" : "int32",
            "readOnly" : true
          },
          "numberOfUpdatesToInstall" : {
            "type" : "integer",
            "description" : "Number of updates to install.",
            "format" : "int32",
            "readOnly" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "description" : "Percentage completed.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Progress details during installation of updates."
      },
      "UpdateSummary" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateSummaryProperties"
          }
        },
        "description" : "Details about ongoing updates and availability of updates on the device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "UpdateSummaryProperties" : {
        "type" : "object",
        "properties" : {
          "deviceLastScannedDateTime" : {
            "type" : "string",
            "description" : "The last time when a scan was done on the device.",
            "format" : "date-time"
          },
          "deviceVersionNumber" : {
            "type" : "string",
            "description" : "The current version of the device in format: 1.2.17312.13.\","
          },
          "friendlyDeviceVersionName" : {
            "type" : "string",
            "description" : "The current version of the device in text format."
          },
          "inProgressDownloadJobId" : {
            "type" : "string",
            "description" : "The job ID of the download job in progress.",
            "readOnly" : true
          },
          "inProgressDownloadJobStartedDateTime" : {
            "type" : "string",
            "description" : "The time when the currently running download (if any) started.",
            "format" : "date-time",
            "readOnly" : true
          },
          "inProgressInstallJobId" : {
            "type" : "string",
            "description" : "The job ID of the install job in progress.",
            "readOnly" : true
          },
          "inProgressInstallJobStartedDateTime" : {
            "type" : "string",
            "description" : "The time when the currently running install (if any) started.",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastCompletedDownloadJobDateTime" : {
            "type" : "string",
            "description" : "The time when the last Download job was completed (success/cancelled/failed) on the appliance.",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastCompletedInstallJobDateTime" : {
            "type" : "string",
            "description" : "The time when the last Install job was completed (success/cancelled/failed) on the appliance.",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastCompletedScanJobDateTime" : {
            "type" : "string",
            "description" : "The time when the last scan job was completed (success/cancelled/failed) on the appliance.",
            "format" : "date-time"
          },
          "ongoingUpdateOperation" : {
            "type" : "string",
            "description" : "The current update operation.",
            "readOnly" : true,
            "enum" : [ "None", "Scan", "Download", "Install" ]
          },
          "rebootBehavior" : {
            "type" : "string",
            "description" : "Indicates if updates are available and at least one of the updates needs a reboot.",
            "readOnly" : true,
            "enum" : [ "NeverReboots", "RequiresReboot", "RequestReboot" ]
          },
          "totalNumberOfUpdatesAvailable" : {
            "type" : "integer",
            "description" : "The number of updates available for the current device version as per the last device scan.",
            "format" : "int32",
            "readOnly" : true
          },
          "totalNumberOfUpdatesPendingDownload" : {
            "type" : "integer",
            "description" : "The total number of items pending download.",
            "format" : "int32",
            "readOnly" : true
          },
          "totalNumberOfUpdatesPendingInstall" : {
            "type" : "integer",
            "description" : "The total number of items pending install.",
            "format" : "int32",
            "readOnly" : true
          },
          "totalUpdateSizeInBytes" : {
            "type" : "number",
            "description" : "The total size of updates available for download in bytes.",
            "format" : "double",
            "readOnly" : true
          },
          "updateTitles" : {
            "type" : "array",
            "description" : "The list of updates available for install.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The device update information summary."
      },
      "UploadCertificateRequest" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RawCertificateData"
          }
        },
        "description" : "The upload certificate request."
      },
      "UploadCertificateResponse" : {
        "required" : [ "aadAuthority", "aadTenantId", "azureManagementEndpointAudience", "resourceId", "servicePrincipalClientId", "servicePrincipalObjectId" ],
        "type" : "object",
        "properties" : {
          "aadAuthority" : {
            "type" : "string",
            "description" : "Azure Active Directory tenant authority."
          },
          "aadTenantId" : {
            "type" : "string",
            "description" : "Azure Active Directory tenant ID."
          },
          "authType" : {
            "type" : "string",
            "description" : "Specifies authentication type.",
            "enum" : [ "Invalid", "AzureActiveDirectory" ]
          },
          "azureManagementEndpointAudience" : {
            "type" : "string",
            "description" : "The azure management endpoint audience."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The resource ID of the Data Box Edge/Gateway device."
          },
          "servicePrincipalClientId" : {
            "type" : "string",
            "description" : "Azure Active Directory service principal client ID."
          },
          "servicePrincipalObjectId" : {
            "type" : "string",
            "description" : "Azure Active Directory service principal object ID."
          }
        },
        "description" : "The upload registration certificate response."
      },
      "User" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UserProperties"
          }
        },
        "description" : "Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ARMBaseModel"
        } ]
      },
      "UserAccessRight" : {
        "required" : [ "accessType", "userId" ],
        "type" : "object",
        "properties" : {
          "accessType" : {
            "type" : "string",
            "description" : "Type of access to be allowed for the user.",
            "enum" : [ "Change", "Read", "Custom" ]
          },
          "userId" : {
            "type" : "string",
            "description" : "User ID (already existing in the device)."
          }
        },
        "description" : "The mapping between a particular user and the access type on the SMB share."
      },
      "UserList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of users.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        },
        "description" : "Collection of users."
      },
      "UserProperties" : {
        "type" : "object",
        "properties" : {
          "encryptedPassword" : {
            "$ref" : "#/components/schemas/AsymmetricEncryptedSecret"
          },
          "shareAccessRights" : {
            "type" : "array",
            "description" : "List of shares that the user has rights on. This field should not be specified during user creation.",
            "items" : {
              "$ref" : "#/components/schemas/ShareAccessRight"
            }
          }
        },
        "description" : "The user properties."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "locationParameter" : {
        "name" : "location",
        "in" : "path",
        "description" : "The location of the resource.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The resource group name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}