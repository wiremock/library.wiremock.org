{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DeploymentAdminClient",
    "description" : "Deployment Admin Client.",
    "version" : "2019-01-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{productId}/secrets" : {
      "get" : {
        "tags" : [ "ProductSecrets" ],
        "description" : "Returns an array of product secrets.",
        "operationId" : "ProductSecrets_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2019-01-01"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "The product identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSecretsList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productSecrets/{productId}/secrets/{secretName}" : {
      "get" : {
        "tags" : [ "ProductSecrets" ],
        "description" : "Retrieves the specific product secret details.",
        "operationId" : "ProductSecrets_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "The product identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2019-01-01"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSecret"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productSecrets/{productId}/secrets/{secretName}/import" : {
      "post" : {
        "tags" : [ "ProductSecrets" ],
        "description" : "Imports a product secret.",
        "operationId" : "ProductSecrets_Import",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "The product identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2019-01-01"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters required for creating/updating a product secret.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecretParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Accepted"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productSecrets/{productId}/secrets/{secretName}/validate" : {
      "post" : {
        "tags" : [ "ProductSecrets" ],
        "description" : "Validates a product secret.",
        "operationId" : "ProductSecrets_Validate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials that uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "The product identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretName",
          "in" : "path",
          "description" : "The secret name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API Version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2019-01-01"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters required for creating/updating a product secret.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecretParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Accepted"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AlternativeDnsNames" : {
        "type" : "string",
        "description" : "List of alternative DNS names."
      },
      "AlternativeIpAddresses" : {
        "type" : "string",
        "description" : "List of alternative IP Addresses."
      },
      "Password" : {
        "type" : "string",
        "description" : "The password as a secure string."
      },
      "PfxFileName" : {
        "type" : "string",
        "description" : "The pfx certificate file location."
      },
      "PfxPassword" : {
        "type" : "string",
        "description" : "The pfx certificate file password as a secure string."
      },
      "ProductSecret" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ProductSecretProperties"
          }
        },
        "description" : "Properties for a product secret.",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "ID of the resource.",
              "readOnly" : true
            },
            "location" : {
              "type" : "string",
              "description" : "Location of the resource."
            },
            "name" : {
              "type" : "string",
              "description" : "Name of the resource.",
              "readOnly" : true
            },
            "type" : {
              "type" : "string",
              "description" : "Type of Resource.",
              "readOnly" : true
            }
          },
          "description" : "Object model of azure resource manager base."
        } ]
      },
      "ProductSecretProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The secret description."
          },
          "expiresAfter" : {
            "type" : "string",
            "description" : "The expiration period of the secret (in ISO8601 format)."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Provisioning state of the resource."
          },
          "secretDescriptor" : {
            "$ref" : "#/components/schemas/SecretDescriptor"
          },
          "secretKind" : {
            "type" : "string",
            "description" : "Specifies the secret kind.",
            "enum" : [ "AdHoc", "Certificate", "Password", "StorageAccount", "SymmetricKey" ]
          },
          "secretState" : {
            "$ref" : "#/components/schemas/SecretState"
          }
        },
        "description" : "Properties of product secret."
      },
      "ProductSecretsList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to the next page."
          },
          "value" : {
            "type" : "array",
            "description" : "List of product secrets.",
            "items" : {
              "$ref" : "#/components/schemas/ProductSecret"
            }
          }
        },
        "description" : "List of product secrets."
      },
      "SecretDescriptor" : {
        "type" : "object",
        "properties" : {
          "allowedCharacters" : {
            "type" : "string",
            "description" : "The allowed characters in the password"
          },
          "alternativeDnsNames" : {
            "type" : "array",
            "description" : "Alternative DNS Names.",
            "items" : {
              "$ref" : "#/components/schemas/AlternativeDnsNames"
            }
          },
          "alternativeIpAddresses" : {
            "type" : "array",
            "description" : "The list of alternative IP addresses.",
            "items" : {
              "$ref" : "#/components/schemas/AlternativeIpAddresses"
            }
          },
          "keyLength" : {
            "type" : "integer",
            "description" : "The key length."
          },
          "passwordLength" : {
            "type" : "integer",
            "description" : "The minimum password length is 8 characters, and the maximum password length is 128 characters."
          },
          "passwordValidationRegex" : {
            "type" : "string",
            "description" : "Password validation regular expression."
          },
          "rotationStatus" : {
            "type" : "string",
            "description" : "The storage account key secret rotation status.",
            "enum" : [ "None", "PlantNewSak", "RotateInactiveSak", "Complete" ]
          },
          "secondaryKeyIsActive" : {
            "type" : "boolean",
            "description" : "A value indicating whether the secondary or primary storage account key is active as a secret."
          },
          "subject" : {
            "type" : "string",
            "description" : "Certificate's subject"
          }
        },
        "description" : "The secret type-specific descriptor."
      },
      "SecretParameters" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "$ref" : "#/components/schemas/Password"
          },
          "pfxFileName" : {
            "$ref" : "#/components/schemas/PfxFileName"
          },
          "pfxPassword" : {
            "$ref" : "#/components/schemas/PfxPassword"
          },
          "secretValue" : {
            "$ref" : "#/components/schemas/SecretValue"
          },
          "symmetricKey" : {
            "$ref" : "#/components/schemas/SymmetricKey"
          }
        },
        "description" : "Parameters required for creating/updating a product secret."
      },
      "SecretRotationStatus" : {
        "type" : "string",
        "description" : "Specifies the secret rotation status.",
        "enum" : [ "None", "InProgress", "Complete" ]
      },
      "SecretState" : {
        "type" : "object",
        "properties" : {
          "expirationDate" : {
            "type" : "string",
            "description" : "The secret expiration date.",
            "format" : "date-time"
          },
          "rotationStatus" : {
            "$ref" : "#/components/schemas/SecretRotationStatus"
          },
          "status" : {
            "$ref" : "#/components/schemas/SecretStatus"
          }
        },
        "description" : "Represents the secret state."
      },
      "SecretStatus" : {
        "type" : "string",
        "description" : "Specifies the secret status.",
        "enum" : [ "NotUploaded", "Uploaded", "Deployed" ]
      },
      "SecretValue" : {
        "type" : "string",
        "description" : "The secret value in a secure string format."
      },
      "SymmetricKey" : {
        "type" : "string",
        "description" : "The symmetric key as a secure string."
      }
    },
    "parameters" : {
      "SecretNameParameter" : {
        "name" : "secretName",
        "in" : "path",
        "description" : "The secret name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "PasswordParameter" : {
        "description" : "The password.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Password"
            }
          }
        },
        "required" : true
      },
      "PfxFileNameParameter" : {
        "description" : "The pfx certificate file location.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PfxFileName"
            }
          }
        },
        "required" : true
      },
      "PfxPasswordParameter" : {
        "description" : "The pfx certificate file password.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PfxPassword"
            }
          }
        },
        "required" : true
      },
      "SecretParameters" : {
        "description" : "The parameters required for creating/updating a product secret.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SecretParameters"
            }
          }
        },
        "required" : true
      },
      "SecretValueParameter" : {
        "description" : "The secret value in a secure string format.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SecretValue"
            }
          }
        },
        "required" : true
      },
      "SymmetricKeyParameter" : {
        "description" : "The symmetric key.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SymmetricKey"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Authorization uses an Azure Active Directory OAuth2 flow."
      }
    }
  }
}