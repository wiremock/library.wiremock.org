{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Deed API",
    "description" : "Land Registry Deed API",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://api.landregistry.gov.uk/v1"
  } ],
  "paths" : {
    "/deed/" : {
      "post" : {
        "summary" : "Deed",
        "description" : "The post Deed endpoint creates a new deed based on the JSON provided.\n The reponse will return a URL that can retrieve the created deed. \n > REQUIRED: Land Registry system requests Conveyancer to confirm that the Borrowers identity has been established in accordance with Section 111 of the Network Access Agreement.",
        "operationId" : "addDeed",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deed_Application"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "URL to the GET endpoint for the deed is returned on successful creation.\n",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request due to invalid schema. Response will include 1 or more schema errors\n",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/deed/{deed_reference}" : {
      "get" : {
        "tags" : [ "Deed" ],
        "summary" : "Deed",
        "description" : "The Deed endpoint returns details of a specific deed based on the unique deed reference.\nThe response includes the Title Number, Property information, Borrower(s) information and deed information.\n",
        "parameters" : [ {
          "name" : "deed_reference",
          "in" : "path",
          "description" : "Unique reference of the deed.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A specific deed is returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Operative_Deed"
                }
              }
            }
          },
          "404" : {
            "description" : "Deed not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdditionalProvisions" : {
        "minItems" : 0,
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "additional_provision_code" : {
              "type" : "string"
            },
            "description" : {
              "type" : "string"
            }
          }
        }
      },
      "Borrower" : {
        "required" : [ "forename", "id", "surname", "token" ],
        "type" : "object",
        "properties" : {
          "forename" : {
            "pattern" : "^(?!\\s*$).+",
            "type" : "string"
          },
          "id" : {
            "pattern" : "^[0-9]+$",
            "type" : "string"
          },
          "middle_name" : {
            "pattern" : "^(?!\\s*$).+",
            "type" : "string"
          },
          "surname" : {
            "pattern" : "^(?!\\s*$).+",
            "type" : "string"
          },
          "token" : {
            "pattern" : "^([a-zA-Z0-9]{8})$",
            "type" : "string"
          }
        }
      },
      "Borrowers" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PrivateIndividualName"
        }
      },
      "ChargeClause" : {
        "type" : "object",
        "properties" : {
          "cre_code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "Deed_Application" : {
        "required" : [ "borrowers", "identity_checked", "md_ref", "property_address", "title_number" ],
        "type" : "object",
        "properties" : {
          "borrowers" : {
            "$ref" : "#/components/schemas/Borrowers"
          },
          "identity_checked" : {
            "pattern" : "^[Y]$",
            "type" : "string"
          },
          "md_ref" : {
            "pattern" : "^e-MD([0-9]{5}|([0-9]{3,4}[A-Z]{1}))$",
            "type" : "string"
          },
          "property_address" : {
            "pattern" : "^(?!\\s*$).+",
            "type" : "string",
            "description" : "The address of property that the deed relates. This should be supplied in a comma separated format e.g. 30 wakefield rd, plymouth, PL6 3WA"
          },
          "title_number" : {
            "pattern" : "^([A-Z]{0,3}[1-9][0-9]{0,5}|[0-9]{1,6}[ZT])$",
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Lender" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "OpBorrowers" : {
        "minItems" : 1,
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/Borrower"
        }
      },
      "Operative_Deed" : {
        "type" : "object",
        "properties" : {
          "deed" : {
            "type" : "object",
            "properties" : {
              "additional_provisions" : {
                "$ref" : "#/components/schemas/AdditionalProvisions"
              },
              "borrowers" : {
                "$ref" : "#/components/schemas/OpBorrowers"
              },
              "charge_clause" : {
                "$ref" : "#/components/schemas/ChargeClause"
              },
              "deed_status" : {
                "type" : "string",
                "description" : "Current state of the deed"
              },
              "effective_clause" : {
                "type" : "string",
                "description" : "Text to display the make effective clause"
              },
              "lender" : {
                "$ref" : "#/components/schemas/Lender"
              },
              "md_ref" : {
                "type" : "string",
                "description" : "Land Registry assigned number for a Mortgage Deed (MD). If you wish to use an existing MD reference please prefix it with e- to comply with our system (eg e-MD12345)"
              },
              "property_address" : {
                "type" : "string",
                "description" : "The address of property that the deed relates. This should be supplied in a comma separated format e.g. 30 wakefield rd, plymouth, PL6 3WA"
              },
              "title_number" : {
                "type" : "string",
                "description" : "Unique Land Registry identifier for the registered estate."
              }
            },
            "description" : "Unique deed, consisting of property, borrower and charge information as well as clauses for the deed."
          }
        }
      },
      "PrivateIndividualName" : {
        "required" : [ "address", "dob", "forename", "phone_number", "surname" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "pattern" : "[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9](?:A-Z-245|[^CIKMOV]){2}",
            "type" : "string"
          },
          "dob" : {
            "pattern" : "^(0[1-9]|[12][0-9]|3[01])[\\/\\-](0[1-9]|1[012])[/\\-]\\d{4}$",
            "type" : "string"
          },
          "forename" : {
            "pattern" : "^(?!\\s*$).+",
            "type" : "string"
          },
          "gender" : {
            "type" : "string",
            "enum" : [ "Male", "Female", "Not Specified" ]
          },
          "middle_name" : {
            "pattern" : "^(?!\\s*$).+",
            "type" : "string"
          },
          "phone_number" : {
            "pattern" : "^(07[\\d]{9})$",
            "type" : "string"
          },
          "surname" : {
            "pattern" : "^(?!\\s*$).+",
            "type" : "string"
          }
        },
        "additionalProperties" : false
      }
    }
  }
}