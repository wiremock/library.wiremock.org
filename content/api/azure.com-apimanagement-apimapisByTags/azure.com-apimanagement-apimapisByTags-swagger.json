{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ApiManagementClient",
    "description" : "Use these REST APIs for performing retrieve a collection of Apis associated with a tag in Azure API Management deployment.",
    "version" : "2019-12-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags" : {
      "get" : {
        "tags" : [ "ApisByTag" ],
        "description" : "Lists a collection of apis associated with tags.",
        "operationId" : "Api_ListByTags",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n\r\n|name | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|displayName | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|apiRevision | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|path | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|serviceUrl | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|isCurrent | eq |    |\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeNotTaggedApis",
          "in" : "query",
          "description" : "Include not tagged APIs.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lists a collection of TagResource entities.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "required" : [ "tag" ],
                        "type" : "object",
                        "properties" : {
                          "api" : {
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "string",
                                "description" : "API identifier in the form /apis/{apiId}."
                              },
                              "name" : {
                                "maxLength" : 300,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "API name."
                              },
                              "path" : {
                                "maxLength" : 400,
                                "minLength" : 0,
                                "type" : "string",
                                "description" : "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
                              },
                              "protocols" : {
                                "type" : "array",
                                "description" : "Describes on which protocols the operations in this API can be invoked.",
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "http", "https" ]
                                }
                              },
                              "serviceUrl" : {
                                "maxLength" : 2000,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Absolute URL of the backend service implementing this API."
                              }
                            },
                            "description" : "API contract properties for the Tag Resources."
                          },
                          "operation" : {
                            "type" : "object",
                            "properties" : {
                              "apiName" : {
                                "type" : "string",
                                "description" : "Api Name.",
                                "readOnly" : true
                              },
                              "apiRevision" : {
                                "type" : "string",
                                "description" : "Api Revision.",
                                "readOnly" : true
                              },
                              "apiVersion" : {
                                "type" : "string",
                                "description" : "Api Version.",
                                "readOnly" : true
                              },
                              "description" : {
                                "type" : "string",
                                "description" : "Operation Description.",
                                "readOnly" : true
                              },
                              "id" : {
                                "type" : "string",
                                "description" : "Identifier of the operation in form /operations/{operationId}."
                              },
                              "method" : {
                                "type" : "string",
                                "description" : "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
                                "readOnly" : true
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "Operation name.",
                                "readOnly" : true
                              },
                              "urlTemplate" : {
                                "type" : "string",
                                "description" : "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
                                "readOnly" : true
                              }
                            },
                            "description" : "Operation Entity contract Properties."
                          },
                          "product" : {
                            "required" : [ "name" ],
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "string",
                                "description" : "Identifier of the product in the form of /products/{productId}"
                              },
                              "name" : {
                                "maxLength" : 300,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Product name."
                              }
                            },
                            "description" : "Product profile."
                          },
                          "tag" : {
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "string",
                                "description" : "Tag identifier"
                              },
                              "name" : {
                                "maxLength" : 160,
                                "minLength" : 1,
                                "type" : "string",
                                "description" : "Tag Name"
                              }
                            },
                            "description" : "Contract defining the Tag property in the Tag Resource Contract"
                          }
                        },
                        "description" : "TagResource contract properties."
                      }
                    }
                  },
                  "description" : "Paged Tag list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}