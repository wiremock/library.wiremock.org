{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "PolicyClient",
    "description" : "To manage and control access to your resources, you can define customized policies and assign them at a scope.",
    "version" : "2016-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyassignments" : {
      "get" : {
        "tags" : [ "PolicyAssignments" ],
        "description" : "Gets all the policy assignments for a subscription.",
        "operationId" : "PolicyAssignments_List",
        "parameters" : [ {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of policy assignments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignmentListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignmentListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions" : {
      "get" : {
        "tags" : [ "PolicyDefinitions" ],
        "description" : "Gets all the policy definitions for a subscription.",
        "operationId" : "PolicyDefinitions_List",
        "parameters" : [ {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns ana array of policy definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyDefinitionListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyDefinitionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policydefinitions/{policyDefinitionName}" : {
      "get" : {
        "tags" : [ "PolicyDefinitions" ],
        "description" : "Gets the policy definition.",
        "operationId" : "PolicyDefinitions_Get",
        "parameters" : [ {
          "name" : "policyDefinitionName",
          "in" : "path",
          "description" : "The name of the policy definition to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the policy definition.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PolicyDefinitions" ],
        "description" : "Creates or updates a policy definition.",
        "operationId" : "PolicyDefinitions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "policyDefinitionName",
          "in" : "path",
          "description" : "The name of the policy definition to create.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The policy definition properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyDefinition"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created - Returns information about the policy definition.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyDefinition"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PolicyDefinitions" ],
        "description" : "Deletes a policy definition.",
        "operationId" : "PolicyDefinitions_Delete",
        "parameters" : [ {
          "name" : "policyDefinitionName",
          "in" : "path",
          "description" : "The name of the policy definition to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/policyAssignments" : {
      "get" : {
        "tags" : [ "PolicyAssignments" ],
        "description" : "Gets policy assignments for the resource group.",
        "operationId" : "PolicyAssignments_ListForResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains policy assignments.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of policy assignments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignmentListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignmentListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/policyassignments" : {
      "get" : {
        "tags" : [ "PolicyAssignments" ],
        "description" : "Gets policy assignments for a resource.",
        "operationId" : "PolicyAssignments_ListForResource",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group containing the resource. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentResourcePath",
          "in" : "path",
          "description" : "The parent resource path.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The resource type.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the resource with policy assignments.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of policy assignments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignmentListResult"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignmentListResult"
                }
              }
            }
          }
        }
      }
    },
    "/{policyAssignmentId}" : {
      "get" : {
        "tags" : [ "PolicyAssignments" ],
        "summary" : "Gets a policy assignment by ID.",
        "description" : "When providing a scope for the assignment, use '/subscriptions/{subscription-id}/' for subscriptions, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for resource groups, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}' for resources.",
        "operationId" : "PolicyAssignments_GetById",
        "parameters" : [ {
          "name" : "policyAssignmentId",
          "in" : "path",
          "description" : "The ID of the policy assignment to get. Use the format '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the policy assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PolicyAssignments" ],
        "summary" : "Creates a policy assignment by ID.",
        "description" : "Policy assignments are inherited by child resources. For example, when you apply a policy to a resource group that policy is assigned to all resources in the group. When providing a scope for the assignment, use '/subscriptions/{subscription-id}/' for subscriptions, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for resource groups, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}' for resources.",
        "operationId" : "PolicyAssignments_CreateById",
        "parameters" : [ {
          "name" : "policyAssignmentId",
          "in" : "path",
          "description" : "The ID of the policy assignment to create. Use the format '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for policy assignment.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyAssignment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyAssignment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created - Returns information about the policy assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PolicyAssignments" ],
        "summary" : "Deletes a policy assignment by ID.",
        "description" : "When providing a scope for the assignment, use '/subscriptions/{subscription-id}/' for subscriptions, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for resource groups, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}' for resources.",
        "operationId" : "PolicyAssignments_DeleteById",
        "parameters" : [ {
          "name" : "policyAssignmentId",
          "in" : "path",
          "description" : "The ID of the policy assignment to delete. Use the format '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the policy assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/policyassignments/{policyAssignmentName}" : {
      "get" : {
        "tags" : [ "PolicyAssignments" ],
        "description" : "Gets a policy assignment.",
        "operationId" : "PolicyAssignments_Get",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of the policy assignment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyAssignmentName",
          "in" : "path",
          "description" : "The name of the policy assignment to get.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the policy assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PolicyAssignments" ],
        "summary" : "Creates a policy assignment.",
        "description" : "Policy assignments are inherited by child resources. For example, when you apply a policy to a resource group that policy is assigned to all resources in the group.",
        "operationId" : "PolicyAssignments_Create",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of the policy assignment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyAssignmentName",
          "in" : "path",
          "description" : "The name of the policy assignment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for the policy assignment.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyAssignment"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyAssignment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created - Returns information about the new policy assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PolicyAssignments" ],
        "description" : "Deletes a policy assignment.",
        "operationId" : "PolicyAssignments_Delete",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of the policy assignment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyAssignmentName",
          "in" : "path",
          "description" : "The name of the policy assignment to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the deleted assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyAssignment"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "PolicyAssignment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the policy assignment."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the policy assignment."
          },
          "properties" : {
            "$ref" : "#/components/schemas/PolicyAssignmentProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the policy assignment."
          }
        },
        "description" : "The policy assignment."
      },
      "PolicyAssignmentListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "An array of policy assignments.",
            "items" : {
              "$ref" : "#/components/schemas/PolicyAssignment"
            }
          }
        },
        "description" : "List of policy assignments."
      },
      "PolicyAssignmentProperties" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the policy assignment."
          },
          "policyDefinitionId" : {
            "type" : "string",
            "description" : "The ID of the policy definition."
          },
          "scope" : {
            "type" : "string",
            "description" : "The scope for the policy assignment."
          }
        },
        "description" : "The policy assignment properties."
      },
      "PolicyDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the policy definition.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the policy definition. If you do not specify a value for name, the value is inferred from the name value in the request URI."
          },
          "properties" : {
            "$ref" : "#/components/schemas/PolicyDefinitionProperties"
          }
        },
        "description" : "The policy definition."
      },
      "PolicyDefinitionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "An array of policy definitions.",
            "items" : {
              "$ref" : "#/components/schemas/PolicyDefinition"
            }
          }
        },
        "description" : "List of policy definitions."
      },
      "PolicyDefinitionProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The policy definition description."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the policy definition."
          },
          "policyRule" : {
            "type" : "object",
            "description" : "The policy rule."
          },
          "policyType" : {
            "type" : "string",
            "description" : "The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.",
            "enum" : [ "NotSpecified", "BuiltIn", "Custom" ]
          }
        },
        "description" : "The policy definition properties."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for the operation.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The ID of the target subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}