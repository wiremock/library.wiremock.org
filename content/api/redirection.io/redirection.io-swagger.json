{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "redirection.io",
    "description" : "API documentation for redirection.io",
    "version" : "1.1.0"
  },
  "servers" : [ {
    "url" : "https://api.redirection.io/"
  } ],
  "security" : [ {
    "apiKey" : null
  } ],
  "paths" : {
    "/agent-flush-aggregate-requests" : {
      "post" : {
        "tags" : [ "AgentFlushAggregateRequest" ],
        "summary" : "Creates a AgentFlushAggregateRequest resource.",
        "operationId" : "postAgentFlushAggregateRequestCollection",
        "requestBody" : {
          "description" : "The new AgentFlushAggregateRequest resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "AgentFlushAggregateRequest resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushAggregateRequest"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/agent-flush-requests" : {
      "post" : {
        "tags" : [ "AgentFlushRequest" ],
        "summary" : "Creates a AgentFlushRequest resource.",
        "requestBody" : {
          "description" : "The new AgentFlushRequest resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "AgentFlushRequest resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/agent-instance-updates" : {
      "post" : {
        "tags" : [ "Instance" ],
        "summary" : "Creates a Instance resource.",
        "operationId" : "postInstanceCollection",
        "requestBody" : {
          "description" : "The new Instance resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Instance resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/agent-instance-updates/{id}" : {
      "put" : {
        "tags" : [ "Instance" ],
        "summary" : "Replaces the Instance resource.",
        "operationId" : "putInstanceItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated Instance resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Instance resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/agent-rule-complexes" : {
      "get" : {
        "tags" : [ "Rule" ],
        "summary" : "Retrieves the collection of Rule resources.",
        "operationId" : "agent-legacy-complexRuleCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rule collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agent-rule-straights" : {
      "get" : {
        "tags" : [ "Rule" ],
        "summary" : "Retrieves the collection of Rule resources.",
        "operationId" : "agent-legacy-straightRuleCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rule collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agent-rules" : {
      "get" : {
        "tags" : [ "Rule" ],
        "summary" : "Retrieves the collection of Rule resources.",
        "operationId" : "agentRuleCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rule collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aggregate-logs" : {
      "get" : {
        "tags" : [ "AggregateLog" ],
        "summary" : "Retrieves the collection of AggregateLog resources.",
        "operationId" : "getAggregateLogCollection",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "projectId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "source",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "referrer",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userAgent",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userAgentType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "simplifiedUserAgent",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceName",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeUrls",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeEmptyReferrer",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_gt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_gte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_lt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_lte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_gt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_gte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_lt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_lte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AggregateLog collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AggregateLog-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AggregateLog-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AggregateLog-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AggregateLog-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/aggregate-logs/{id}" : {
      "get" : {
        "tags" : [ "AggregateLog" ],
        "summary" : "Retrieves a AggregateLog resource.",
        "operationId" : "getAggregateLogItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AggregateLog resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AggregateLog-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AggregateLog-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AggregateLog-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AggregateLog-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/crawl-urls" : {
      "get" : {
        "tags" : [ "CrawlUrl" ],
        "summary" : "Retrieves the collection of CrawlUrl resources.",
        "operationId" : "getCrawlUrlCollection",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CrawlUrl collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CrawlUrl-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CrawlUrl-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CrawlUrl-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CrawlUrl-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crawl-urls/{id}" : {
      "get" : {
        "tags" : [ "CrawlUrl" ],
        "summary" : "Retrieves a CrawlUrl resource.",
        "operationId" : "getCrawlUrlItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CrawlUrl resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrawlUrl-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrawlUrl-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrawlUrl-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CrawlUrl-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/crawls" : {
      "get" : {
        "tags" : [ "Crawl" ],
        "summary" : "Retrieves the collection of Crawl resources.",
        "operationId" : "getCrawlCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstUrl",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort[createdAt]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Crawl collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Crawl-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Crawl-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Crawl-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Crawl-Read"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Crawl" ],
        "summary" : "Creates a Crawl resource.",
        "operationId" : "postCrawlCollection",
        "requestBody" : {
          "description" : "The new Crawl resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Crawl resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/crawls/{id}" : {
      "get" : {
        "tags" : [ "Crawl" ],
        "summary" : "Retrieves a Crawl resource.",
        "operationId" : "getCrawlItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Crawl resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/crawls/{id}/cancel" : {
      "post" : {
        "tags" : [ "Crawl" ],
        "summary" : "Creates a Crawl resource.",
        "operationId" : "cancelCrawlItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new Crawl resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Crawl"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Crawl resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Crawl-ReadDetails"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/explain-urls" : {
      "post" : {
        "tags" : [ "ExplainUrl" ],
        "summary" : "Creates a ExplainUrl resource.",
        "operationId" : "postExplainUrlCollection",
        "requestBody" : {
          "description" : "The new ExplainUrl resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExplainUrl-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExplainUrl-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExplainUrl-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExplainUrl-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "ExplainUrl resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/explain-urls/{id}" : {
      "get" : {
        "tags" : [ "ExplainUrl" ],
        "summary" : "Retrieves a ExplainUrl resource.",
        "operationId" : "getExplainUrlItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ExplainUrl resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExplainUrl"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/export-rules" : {
      "get" : {
        "tags" : [ "Rule" ],
        "summary" : "Retrieves the collection of Rule resources.",
        "operationId" : "exportRuleCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort[id]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort[viewCount]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rule collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/impact-rule-changes" : {
      "post" : {
        "tags" : [ "ImpactRuleChange" ],
        "summary" : "Creates a ImpactRuleChange resource.",
        "operationId" : "postImpactRuleChangeCollection",
        "requestBody" : {
          "description" : "The new ImpactRuleChange resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactRuleChange-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactRuleChange-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactRuleChange-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactRuleChange-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "ImpactRuleChange resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/impact-rule-changes/{id}" : {
      "get" : {
        "tags" : [ "ImpactRuleChange" ],
        "summary" : "Retrieves a ImpactRuleChange resource.",
        "operationId" : "getImpactRuleChangeItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ImpactRuleChange resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactRuleChange-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/impact-smart-lists" : {
      "post" : {
        "tags" : [ "ImpactSmartList" ],
        "summary" : "Creates a ImpactSmartList resource.",
        "operationId" : "postImpactSmartListCollection",
        "requestBody" : {
          "description" : "The new ImpactSmartList resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactSmartList-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactSmartList-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactSmartList-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpactSmartList-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "ImpactSmartList resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/impact-smart-lists/{id}" : {
      "get" : {
        "tags" : [ "ImpactSmartList" ],
        "summary" : "Retrieves a ImpactSmartList resource.",
        "operationId" : "getImpactSmartListItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ImpactSmartList resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpactSmartList-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/imports" : {
      "get" : {
        "tags" : [ "Import" ],
        "summary" : "Retrieves the collection of Import resources.",
        "operationId" : "getImportCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Import collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Import-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Import-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Import-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Import-Read"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Import" ],
        "summary" : "Creates a Import resource.",
        "operationId" : "postImportCollection",
        "requestBody" : {
          "description" : "The new Import resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Import-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Import-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Import-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Import-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Import resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/imports/{id}" : {
      "get" : {
        "tags" : [ "Import" ],
        "summary" : "Retrieves a Import resource.",
        "operationId" : "getImportItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Import resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Import-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/instances" : {
      "get" : {
        "tags" : [ "Instance" ],
        "summary" : "Retrieves the collection of Instance resources.",
        "operationId" : "getInstanceCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Instance collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Instance-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Instance-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Instance-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Instance-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instances/{id}" : {
      "get" : {
        "tags" : [ "Instance" ],
        "summary" : "Retrieves a Instance resource.",
        "operationId" : "getInstanceItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Instance resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Instance" ],
        "summary" : "Replaces the Instance resource.",
        "operationId" : "loggingInstanceItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated Instance resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Instance resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/instances/{id}/live" : {
      "put" : {
        "tags" : [ "Instance" ],
        "summary" : "Replaces the Instance resource.",
        "operationId" : "liveInstanceItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated Instance resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Instance-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Instance resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Instance-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/invitations" : {
      "get" : {
        "tags" : [ "Invitation" ],
        "summary" : "Retrieves the collection of Invitation resources.",
        "operationId" : "getInvitationCollection",
        "parameters" : [ {
          "name" : "targetId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetType",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Invitation collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Invitation-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Invitation-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Invitation-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Invitation-Read"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Invitation" ],
        "summary" : "Creates a Invitation resource.",
        "operationId" : "postInvitationCollection",
        "requestBody" : {
          "description" : "The new Invitation resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Invitation resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/invitations/accept/{token}" : {
      "post" : {
        "tags" : [ "Invitation" ],
        "summary" : "Creates a Invitation resource.",
        "operationId" : "acceptInvitationItem",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "The invitation acceptation token",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new Invitation resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Invitation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Invitation resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/invitations/{id}" : {
      "get" : {
        "tags" : [ "Invitation" ],
        "summary" : "Retrieves a Invitation resource.",
        "operationId" : "getInvitationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Invitation resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Invitation-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Invitation" ],
        "summary" : "Removes the Invitation resource.",
        "operationId" : "deleteInvitationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Invitation resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/logs" : {
      "get" : {
        "tags" : [ "Log" ],
        "summary" : "Retrieves the collection of Log resources.",
        "operationId" : "getLogCollection",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "projectId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "source",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "target",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "referrer",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userAgent",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userAgentType",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "simplifiedUserAgent",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "instanceName",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeUrls",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeEmptyReferrer",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_gt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_gte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_lt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt_lte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_gt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_gte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_lt",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusCode_lte",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Log collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Log-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Log-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Log-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Log-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logs/{id}" : {
      "get" : {
        "tags" : [ "Log" ],
        "summary" : "Retrieves a Log resource.",
        "operationId" : "getLogItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Log resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Log-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Log-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Log-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Log-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/markers" : {
      "post" : {
        "tags" : [ "Marker" ],
        "summary" : "Creates a Marker resource.",
        "operationId" : "postMarkerCollection",
        "requestBody" : {
          "description" : "The new Marker resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Marker resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/markers/{id}" : {
      "get" : {
        "tags" : [ "Marker" ],
        "summary" : "Retrieves a Marker resource.",
        "operationId" : "getMarkerItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Marker resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Marker" ],
        "summary" : "Replaces the Marker resource.",
        "operationId" : "putMarkerItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated Marker resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Marker"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Marker resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Marker"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Marker" ],
        "summary" : "Removes the Marker resource.",
        "operationId" : "deleteMarkerItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Marker resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/matching-urls" : {
      "post" : {
        "tags" : [ "MatchingUrl" ],
        "summary" : "Creates a MatchingUrl resource.",
        "operationId" : "postMatchingUrlCollection",
        "requestBody" : {
          "description" : "The new MatchingUrl resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MatchingUrl-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MatchingUrl-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/MatchingUrl-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/MatchingUrl-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "MatchingUrl resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/matching-urls/{id}" : {
      "get" : {
        "tags" : [ "MatchingUrl" ],
        "summary" : "Retrieves a MatchingUrl resource.",
        "operationId" : "getMatchingUrlItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "MatchingUrl resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MatchingUrl-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "Notification" ],
        "summary" : "Retrieves the collection of Notification resources.",
        "operationId" : "getNotificationCollection",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Notification collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Notification-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Notification-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Notification-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Notification-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}" : {
      "get" : {
        "tags" : [ "Notification" ],
        "summary" : "Retrieves a Notification resource.",
        "operationId" : "getNotificationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Notification resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Notification-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Notification-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Notification-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Notification-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/organizations" : {
      "post" : {
        "tags" : [ "Organization" ],
        "summary" : "Creates a Organization resource.",
        "operationId" : "postOrganizationCollection",
        "requestBody" : {
          "description" : "The new Organization resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Organization resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/organizations/{id}" : {
      "get" : {
        "tags" : [ "Organization" ],
        "summary" : "Retrieves a Organization resource.",
        "operationId" : "getOrganizationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Organization" ],
        "summary" : "Replaces the Organization resource.",
        "operationId" : "putOrganizationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated Organization resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Organization-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Organization resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Organization-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Organization" ],
        "summary" : "Removes the Organization resource.",
        "operationId" : "deleteOrganizationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Organization resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/post-logs" : {
      "post" : {
        "tags" : [ "AgentFlushRequest" ],
        "summary" : "Creates a AgentFlushRequest resource.",
        "requestBody" : {
          "description" : "The new AgentFlushRequest resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgentFlushRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "AgentFlushRequest resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgentFlushRequest"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/projects" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "Retrieves the collection of Project resources.",
        "operationId" : "getProjectCollection",
        "responses" : {
          "200" : {
            "description" : "Project collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project-List"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project-List"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project-List"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project-List"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Project" ],
        "summary" : "Creates a Project resource.",
        "operationId" : "postProjectCollection",
        "requestBody" : {
          "description" : "The new Project resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-CreationWrite"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-CreationWrite"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-CreationWrite"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-CreationWrite"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Project resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/projects/{id}" : {
      "get" : {
        "tags" : [ "Project" ],
        "summary" : "Retrieves a Project resource.",
        "operationId" : "getProjectItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Project resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Project" ],
        "summary" : "Replaces the Project resource.",
        "operationId" : "putProjectItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated Project resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Project resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Project" ],
        "summary" : "Removes the Project resource.",
        "operationId" : "deleteProjectItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Project resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/publish-histories" : {
      "get" : {
        "tags" : [ "PublishHistory" ],
        "summary" : "Retrieves the collection of PublishHistory resources.",
        "operationId" : "getPublishHistoryCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt[before]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt[strictly_before]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt[after]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt[strictly_after]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PublishHistory collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublishHistory-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublishHistory-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublishHistory-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublishHistory-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/publish-histories/{id}" : {
      "get" : {
        "tags" : [ "PublishHistory" ],
        "summary" : "Retrieves a PublishHistory resource.",
        "operationId" : "getPublishHistoryItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PublishHistory resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublishHistory-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublishHistory-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublishHistory-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublishHistory-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/rule-changes" : {
      "get" : {
        "tags" : [ "RuleChange" ],
        "summary" : "Retrieves the collection of RuleChange resources.",
        "operationId" : "getRuleChangeCollection",
        "parameters" : [ {
          "name" : "versionId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RuleChange collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleChange-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleChange-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleChange-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleChange-Read"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RuleChange" ],
        "summary" : "Creates a RuleChange resource.",
        "operationId" : "postRuleChangeCollection",
        "requestBody" : {
          "description" : "The new RuleChange resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleChange-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleChange-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleChange-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleChange-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "RuleChange resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/rule-changes/{id}" : {
      "get" : {
        "tags" : [ "RuleChange" ],
        "summary" : "Retrieves a RuleChange resource.",
        "operationId" : "getRuleChangeItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RuleChange resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleChange-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "RuleChange" ],
        "summary" : "Removes the RuleChange resource.",
        "operationId" : "deleteRuleChangeItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "RuleChange resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/rule-set-versions" : {
      "get" : {
        "tags" : [ "RuleSetVersion" ],
        "summary" : "Retrieves the collection of RuleSetVersion resources.",
        "operationId" : "getRuleSetVersionCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort[createdAt]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RuleSetVersion collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleSetVersion-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleSetVersion-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleSetVersion-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleSetVersion-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rule-set-versions/{id}" : {
      "get" : {
        "tags" : [ "RuleSetVersion" ],
        "summary" : "Retrieves a RuleSetVersion resource.",
        "operationId" : "getRuleSetVersionItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RuleSetVersion resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/rule-set-versions/{id}/clear" : {
      "post" : {
        "tags" : [ "RuleSetVersion" ],
        "summary" : "Clear a version",
        "operationId" : "clearRuleSetVersionItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new RuleSetVersion resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "RuleSetVersion resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/rule-set-versions/{id}/publish" : {
      "post" : {
        "tags" : [ "RuleSetVersion" ],
        "summary" : "Publish a version",
        "operationId" : "publishRuleSetVersionItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The new RuleSetVersion resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/RuleSetVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "RuleSetVersion resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleSetVersion-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/rule-statistics" : {
      "get" : {
        "tags" : [ "RuleStatistic" ],
        "summary" : "Retrieves the collection of RuleStatistic resources.",
        "operationId" : "getRuleStatisticCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RuleStatistic collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleStatistic"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleStatistic"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleStatistic"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RuleStatistic"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rule-statistics/{id}" : {
      "get" : {
        "tags" : [ "RuleStatistic" ],
        "summary" : "Retrieves a RuleStatistic resource.",
        "operationId" : "getRuleStatisticItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RuleStatistic resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleStatistic"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleStatistic"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleStatistic"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RuleStatistic"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/rules" : {
      "get" : {
        "tags" : [ "Rule" ],
        "summary" : "Retrieves the collection of Rule resources.",
        "operationId" : "getRuleCollection",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort[id]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort[viewCount]",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The collection page number",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rule collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Rule-Read"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rules/{id}" : {
      "get" : {
        "tags" : [ "Rule" ],
        "summary" : "Retrieves a Rule resource.",
        "operationId" : "getRuleItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rule resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rule-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rule-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rule-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rule-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/smart-lists" : {
      "get" : {
        "tags" : [ "SmartList" ],
        "summary" : "Retrieves the collection of SmartList resources.",
        "operationId" : "getSmartListCollection",
        "responses" : {
          "200" : {
            "description" : "SmartList collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SmartList"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SmartList"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SmartList"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/SmartList"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/smart-lists/{id}" : {
      "get" : {
        "tags" : [ "SmartList" ],
        "summary" : "Retrieves a SmartList resource.",
        "operationId" : "getSmartListItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SmartList resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmartList"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmartList"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmartList"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SmartList"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/user-organizations" : {
      "post" : {
        "tags" : [ "UserOrganization" ],
        "summary" : "Creates a UserOrganization resource.",
        "operationId" : "postUserOrganizationCollection",
        "requestBody" : {
          "description" : "The new UserOrganization resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-CreationWrite"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-CreationWrite"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-CreationWrite"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-CreationWrite"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "UserOrganization resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/user-organizations/{id}" : {
      "get" : {
        "tags" : [ "UserOrganization" ],
        "summary" : "Retrieves a UserOrganization resource.",
        "operationId" : "getUserOrganizationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UserOrganization resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "put" : {
        "tags" : [ "UserOrganization" ],
        "summary" : "Replaces the UserOrganization resource.",
        "operationId" : "putUserOrganizationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated UserOrganization resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserOrganization-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "UserOrganization resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserOrganization-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "UserOrganization" ],
        "summary" : "Removes the UserOrganization resource.",
        "operationId" : "deleteUserOrganizationItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "UserOrganization resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/user-project-flatteneds/{id}" : {
      "get" : {
        "tags" : [ "UserProjectFlattened" ],
        "summary" : "Retrieves a UserProjectFlattened resource.",
        "operationId" : "getUserProjectFlattenedItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UserProjectFlattened resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProjectFlattened-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProjectFlattened-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProjectFlattened-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProjectFlattened-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/user-projects" : {
      "post" : {
        "tags" : [ "UserProject" ],
        "summary" : "Creates a UserProject resource.",
        "operationId" : "postUserProjectCollection",
        "requestBody" : {
          "description" : "The new UserProject resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-CreationWrite"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-CreationWrite"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-CreationWrite"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-CreationWrite"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "UserProject resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/user-projects/{id}" : {
      "get" : {
        "tags" : [ "UserProject" ],
        "summary" : "Retrieves a UserProject resource.",
        "operationId" : "getUserProjectItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "UserProject resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "put" : {
        "tags" : [ "UserProject" ],
        "summary" : "Replaces the UserProject resource.",
        "operationId" : "putUserProjectItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated UserProject resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-Write"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-Write"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-Write"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProject-Write"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "UserProject resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserProject-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "UserProject" ],
        "summary" : "Removes the UserProject resource.",
        "operationId" : "deleteUserProjectItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "UserProject resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Retrieves the collection of User resources.",
        "operationId" : "getUserCollection",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User collection response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User-List"
                  }
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User-List"
                  }
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User-List"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/User-List"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Creates a User resource.",
        "operationId" : "postUserCollection",
        "requestBody" : {
          "description" : "The new User resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-CreationWrite"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-CreationWrite"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-CreationWrite"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-CreationWrite"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "User resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users/forgot-password-request" : {
      "post" : {
        "tags" : [ "ForgotPasswordRequest" ],
        "summary" : "Creates a ForgotPasswordRequest resource.",
        "operationId" : "postForgotPasswordRequestCollection",
        "requestBody" : {
          "description" : "The new ForgotPasswordRequest resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "ForgotPasswordRequest resource created",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForgotPasswordRequest"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForgotPasswordRequest"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForgotPasswordRequest"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForgotPasswordRequest"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users/forgot-password/{resetToken}" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Replaces the User resource.",
        "operationId" : "forgot_passwordUserItem",
        "parameters" : [ {
          "name" : "resetToken",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated User resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-Password"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-Password"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-Password"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-Password"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "User resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Retrieves a User resource.",
        "operationId" : "getUserItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Removes the User resource.",
        "operationId" : "deleteUserItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "User resource deleted"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users/{id}/confirm-new-email/{newEmailToken}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Retrieves a User resource.",
        "operationId" : "confirm_new_emailUserItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newEmailToken",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User resource response",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users/{id}/edit-email" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Replaces the User resource.",
        "operationId" : "edit_emailUserItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated User resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "User resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users/{id}/edit-info" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Replaces the User resource.",
        "operationId" : "edit_infoUserItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated User resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "User resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    },
    "/users/{id}/edit-password" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Replaces the User resource.",
        "operationId" : "edit_passwordUserItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated User resource",
          "content" : {
            "application/ld+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "text/html" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            },
            "text/csv" : {
              "schema" : {
                "$ref" : "#/components/schemas/User-EditInfo"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "User resource updated",
            "content" : {
              "application/ld+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User-Read"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "404" : {
            "description" : "Resource not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AgentFlushAggregateRequest" : {
        "required" : [ "instanceName", "instanceTime", "logs" ],
        "type" : "object",
        "properties" : {
          "instanceName" : {
            "type" : "object"
          },
          "instanceTime" : {
            "type" : "object"
          },
          "logs" : {
            "type" : "object"
          }
        },
        "description" : ""
      },
      "AgentFlushRequest" : {
        "required" : [ "instanceName", "instanceTime", "logs" ],
        "type" : "object",
        "properties" : {
          "instanceName" : {
            "type" : "object"
          },
          "instanceTime" : {
            "type" : "integer"
          },
          "logs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : ""
      },
      "AggregateLog-Read" : {
        "type" : "object",
        "properties" : {
          "fixed" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "object"
          },
          "lastOccurrenceAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ruleId" : {
            "type" : "string"
          },
          "source" : {
            "type" : "object"
          },
          "statusCode" : {
            "type" : "integer"
          },
          "target" : {
            "type" : "object"
          },
          "viewCount" : {
            "type" : "integer"
          }
        },
        "description" : ""
      },
      "Crawl" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "author" : {
            "$ref" : "#/components/schemas/User"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "currentConcurrency" : {
            "type" : "integer"
          },
          "error" : {
            "type" : "string",
            "readOnly" : true
          },
          "finishedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "firstUrl" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "marking" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "stats" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "trigger" : {
            "type" : "string",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Crawl-Read" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "author" : {
            "$ref" : "#/components/schemas/User-Read"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "type" : "string",
            "readOnly" : true
          },
          "finishedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "firstUrl" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "stats" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "trigger" : {
            "type" : "string",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Crawl-ReadDetails" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "author" : {
            "$ref" : "#/components/schemas/User-ReadDetails"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "error" : {
            "type" : "string",
            "readOnly" : true
          },
          "finishedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "firstUrl" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "stats" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "trigger" : {
            "type" : "string",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Crawl-Write" : {
        "required" : [ "concurrency", "firstUrl", "maxDepth", "maxDuration", "maxUrls", "project", "sslCheckingDisabled", "subdomainIncluded" ],
        "type" : "object",
        "properties" : {
          "concurrency" : {
            "type" : "integer"
          },
          "firstUrl" : {
            "type" : "object"
          },
          "headers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "httpBasicPassword" : {
            "type" : "object"
          },
          "httpBasicUser" : {
            "type" : "object"
          },
          "maxDepth" : {
            "type" : "integer"
          },
          "maxDuration" : {
            "type" : "integer"
          },
          "maxUrls" : {
            "type" : "integer"
          },
          "otherDomains" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "project" : {
            "type" : "string"
          },
          "sslCheckingDisabled" : {
            "type" : "boolean"
          },
          "subdomainIncluded" : {
            "type" : "boolean"
          },
          "userAgent" : {
            "type" : "object"
          }
        },
        "description" : ""
      },
      "CrawlUrl-Read" : {
        "type" : "object",
        "properties" : {
          "curlInfo" : {
            "type" : "object"
          },
          "depth" : {
            "type" : "object"
          },
          "description" : {
            "type" : "object"
          },
          "error" : {
            "type" : "object"
          },
          "id" : {
            "type" : "object"
          },
          "redirectUrl" : {
            "type" : "object"
          },
          "statusCode" : {
            "type" : "object"
          },
          "title" : {
            "type" : "object"
          },
          "url" : {
            "type" : "object"
          },
          "urlsTo" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "ExplainUrl" : {
        "required" : [ "project", "url" ],
        "type" : "object",
        "properties" : {
          "explain" : {
            "type" : "object",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "project" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "ExplainUrl-Write" : {
        "required" : [ "project", "url" ],
        "type" : "object",
        "properties" : {
          "project" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "ForgotPasswordRequest" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "ImpactRuleChange-Read" : {
        "type" : "object",
        "properties" : {
          "impact" : {
            "type" : "object",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "ImpactRuleChange-Write" : {
        "required" : [ "project", "ruleChange" ],
        "type" : "object",
        "properties" : {
          "project" : {
            "type" : "string"
          },
          "ruleChange" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "ImpactSmartList-Read" : {
        "type" : "object",
        "properties" : {
          "impact" : {
            "type" : "object",
            "readOnly" : true
          },
          "smartList" : {
            "type" : "object",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "ImpactSmartList-Write" : {
        "required" : [ "project", "smartListId" ],
        "type" : "object",
        "properties" : {
          "project" : {
            "type" : "string"
          },
          "smartListId" : {
            "type" : "string"
          },
          "smartListVersion" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Import-Read" : {
        "required" : [ "project" ],
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "readOnly" : true
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "errorCount" : {
            "type" : "integer",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "importDuration" : {
            "type" : "integer",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "readOnly" : true
          },
          "project" : {
            "type" : "string"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "statusAsText" : {
            "type" : "object",
            "readOnly" : true
          },
          "successCount" : {
            "type" : "integer",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Import-Write" : {
        "required" : [ "csvContent", "project" ],
        "type" : "object",
        "properties" : {
          "csvContent" : {
            "type" : "object"
          },
          "project" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Instance-Read" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "agentDuration" : {
            "type" : "integer"
          },
          "agentVersion" : {
            "type" : "string"
          },
          "agentVersionStatus" : {
            "type" : "string",
            "readOnly" : true
          },
          "config" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gone" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "lastCompletedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastStartedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "live" : {
            "type" : "boolean"
          },
          "logging" : {
            "type" : "boolean"
          },
          "logsLastFlushedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "message" : {
            "type" : "string"
          },
          "misconfigured" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "rulesCount" : {
            "type" : "integer"
          },
          "rulesHash" : {
            "type" : "string"
          },
          "stale" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "status" : {
            "type" : "integer"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : ""
      },
      "Instance-Write" : {
        "type" : "object",
        "properties" : {
          "agentDuration" : {
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          },
          "rulesCount" : {
            "type" : "integer"
          },
          "rulesHash" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Invitation" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Invitation-Read" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Invitation-Write" : {
        "required" : [ "email", "target" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "target" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Log-Read" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fixed" : {
            "type" : "boolean"
          },
          "fixedByVersions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "fromSmartList" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "object"
          },
          "instanceName" : {
            "type" : "object"
          },
          "method" : {
            "type" : "object"
          },
          "notFixedByVersions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "proxy" : {
            "type" : "string"
          },
          "referrer" : {
            "type" : "object"
          },
          "ruleId" : {
            "type" : "string"
          },
          "simplifiedUserAgent" : {
            "type" : "object"
          },
          "smartList" : {
            "type" : "string",
            "readOnly" : true
          },
          "source" : {
            "type" : "object"
          },
          "statusCode" : {
            "type" : "object"
          },
          "target" : {
            "type" : "object"
          },
          "userAgent" : {
            "type" : "object"
          },
          "userAgentType" : {
            "type" : "object"
          }
        },
        "description" : ""
      },
      "Marker" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "maximumOccurrence" : {
            "type" : "integer"
          },
          "minimumOccurrence" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "regex" : {
            "type" : "string"
          },
          "transformers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Marker-Read" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "maximumOccurrence" : {
            "type" : "integer"
          },
          "minimumOccurrence" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "transformers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Marker-Write" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "maximumOccurrence" : {
            "type" : "integer"
          },
          "minimumOccurrence" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "transformers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "type" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "MatchingUrl-Read" : {
        "type" : "object",
        "properties" : {
          "matching" : {
            "type" : "object",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "MatchingUrl-Write" : {
        "type" : "object",
        "properties" : {
          "project" : {
            "type" : "string"
          },
          "ruleChange" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Notification-Read" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "message" : {
            "type" : "string"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Organization" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "projects" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Project"
            }
          },
          "slug" : {
            "type" : "string",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "userOrganizations" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserOrganization"
            }
          }
        },
        "description" : ""
      },
      "Organization-CreationWrite" : {
        "type" : "object",
        "description" : ""
      },
      "Organization-List" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Organization-Read" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Organization-Write" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "Project" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "complexRulesCount" : {
            "type" : "integer",
            "readOnly" : true
          },
          "complexRulesUpdatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "configuration" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "currentVersion" : {
            "$ref" : "#/components/schemas/RuleSetVersion"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "ignoreProjectTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "isPublishing" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "onboardingCompletedDemos" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "organization" : {
            "$ref" : "#/components/schemas/Organization"
          },
          "plan" : {
            "type" : "integer",
            "readOnly" : true
          },
          "rulesHash" : {
            "type" : "string",
            "readOnly" : true
          },
          "slug" : {
            "type" : "string",
            "readOnly" : true
          },
          "straightRulesCount" : {
            "type" : "integer",
            "readOnly" : true
          },
          "straightRulesUpdatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "token" : {
            "type" : "string",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "userProjects" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserProject"
            }
          },
          "usersFlattened" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserProjectFlattened"
            }
          },
          "workingVersion" : {
            "$ref" : "#/components/schemas/RuleSetVersion"
          }
        },
        "description" : ""
      },
      "Project-CreationWrite" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "ignoreProjectTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "onboardingCompletedDemos" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "organization" : {
            "$ref" : "#/components/schemas/Organization-CreationWrite"
          }
        },
        "description" : ""
      },
      "Project-List" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "organization" : {
            "$ref" : "#/components/schemas/Organization-List"
          },
          "slug" : {
            "type" : "string",
            "readOnly" : true
          },
          "token" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "Project-Read" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "complexRulesCount" : {
            "type" : "integer",
            "readOnly" : true
          },
          "complexRulesUpdatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "configuration" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "currentVersion" : {
            "$ref" : "#/components/schemas/RuleSetVersion-Read"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "ignoreProjectTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "isPublishing" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "onboardingCompletedDemos" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "organization" : {
            "$ref" : "#/components/schemas/Organization-Read"
          },
          "plan" : {
            "type" : "integer",
            "readOnly" : true
          },
          "rulesHash" : {
            "type" : "string",
            "readOnly" : true
          },
          "slug" : {
            "type" : "string",
            "readOnly" : true
          },
          "straightRulesCount" : {
            "type" : "integer",
            "readOnly" : true
          },
          "straightRulesUpdatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "token" : {
            "type" : "string",
            "readOnly" : true
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "userProjects" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserProject-Read"
            }
          },
          "usersFlattened" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserProjectFlattened-Read"
            }
          },
          "workingVersion" : {
            "$ref" : "#/components/schemas/RuleSetVersion-Read"
          }
        },
        "description" : ""
      },
      "Project-Write" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "ignoreProjectTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          },
          "onboardingCompletedDemos" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : ""
      },
      "PublishHistory-Read" : {
        "type" : "object",
        "properties" : {
          "added" : {
            "type" : "integer"
          },
          "author" : {
            "$ref" : "#/components/schemas/User-Read"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "deleted" : {
            "type" : "integer"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "summary" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "updated" : {
            "type" : "integer"
          },
          "version" : {
            "$ref" : "#/components/schemas/RuleSetVersion-Read"
          }
        },
        "description" : ""
      },
      "Rule-Read" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "changes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleChange-Read"
            }
          },
          "currentChange" : {
            "$ref" : "#/components/schemas/RuleChange-Read"
          },
          "examples" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "formattedSource" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "markers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Marker-Read"
            }
          },
          "matchOnResponseStatus" : {
            "type" : "integer"
          },
          "rank" : {
            "type" : "integer"
          },
          "source" : {
            "type" : "string"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "viewCount" : {
            "type" : "integer"
          }
        },
        "description" : ""
      },
      "RuleChange-Read" : {
        "required" : [ "action", "rank", "source" ],
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string"
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "author" : {
            "$ref" : "#/components/schemas/User-Read"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "examples" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "formattedSource" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "markers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Marker-Read"
            }
          },
          "matchOnResponseStatus" : {
            "type" : "integer"
          },
          "rank" : {
            "type" : "integer"
          },
          "ruleId" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "RuleChange-Write" : {
        "required" : [ "action", "rank", "source" ],
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string"
          },
          "actions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "examples" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "formattedSource" : {
            "type" : "string"
          },
          "markers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Marker-Write"
            }
          },
          "matchOnResponseStatus" : {
            "type" : "integer"
          },
          "rank" : {
            "type" : "integer"
          },
          "ruleId" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "RuleSetVersion" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "current" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isSnapshot" : {
            "type" : "boolean"
          },
          "mergedRulesCount" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "publishedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "working" : {
            "type" : "boolean",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "RuleSetVersion-Read" : {
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "current" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isSnapshot" : {
            "type" : "boolean"
          },
          "mergedRulesCount" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "publishedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "working" : {
            "type" : "boolean",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "RuleStatistic" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "stats" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "SmartList" : {
        "type" : "object",
        "properties" : {
          "defaultVersion" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "rules" : {
            "type" : "string",
            "readOnly" : true
          },
          "versions" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : ""
      },
      "User" : {
        "required" : [ "email", "name" ],
        "type" : "object",
        "properties" : {
          "currentPassword" : {
            "type" : "object"
          },
          "defaultOrganization" : {
            "$ref" : "#/components/schemas/Organization"
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "newEmail" : {
            "type" : "string"
          },
          "newEmailToken" : {
            "type" : "string"
          },
          "newEmailTokenExpiredAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "password" : {
            "type" : "string"
          },
          "plainPassword" : {
            "type" : "string"
          },
          "plainPasswordRepeat" : {
            "type" : "object"
          },
          "projectsFlattened" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "superAdmin" : {
            "type" : "boolean"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "userOrganizations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserOrganization"
            }
          },
          "userProjects" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : ""
      },
      "User-CreationWrite" : {
        "required" : [ "email", "name" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "User-EditInfo" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "User-List" : {
        "required" : [ "email", "name" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "User-Password" : {
        "type" : "object",
        "properties" : {
          "plainPassword" : {
            "type" : "string"
          },
          "plainPasswordRepeat" : {
            "type" : "object"
          }
        },
        "description" : ""
      },
      "User-Read" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "User-ReadDetails" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "UserOrganization" : {
        "required" : [ "functionalRoles" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "organization" : {
            "type" : "string",
            "readOnly" : true
          },
          "user" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "UserOrganization-CreationWrite" : {
        "required" : [ "functionalRoles" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "organization" : {
            "type" : "string",
            "readOnly" : true
          },
          "user" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "UserOrganization-Read" : {
        "required" : [ "functionalRoles" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "organization" : {
            "type" : "string",
            "readOnly" : true
          },
          "user" : {
            "type" : "string",
            "readOnly" : true
          }
        },
        "description" : ""
      },
      "UserOrganization-Write" : {
        "required" : [ "functionalRoles" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : ""
      },
      "UserProject" : {
        "required" : [ "functionalRoles", "project", "user" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "project" : {
            "type" : "string"
          },
          "user" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "UserProject-CreationWrite" : {
        "required" : [ "functionalRoles", "project", "user" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "project" : {
            "type" : "string"
          },
          "user" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "UserProject-Read" : {
        "required" : [ "functionalRoles", "user" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "user" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "UserProject-Write" : {
        "required" : [ "functionalRoles" ],
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : ""
      },
      "UserProjectFlattened" : {
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "project" : {
            "type" : "string"
          },
          "user" : {
            "type" : "string"
          }
        },
        "description" : ""
      },
      "UserProjectFlattened-Read" : {
        "type" : "object",
        "properties" : {
          "functionalRoles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "user" : {
            "type" : "string"
          }
        },
        "description" : ""
      }
    },
    "securitySchemes" : {
      "apiKey" : {
        "type" : "apiKey",
        "description" : "Value for the Authorization header",
        "name" : "Authorization",
        "in" : "header"
      }
    }
  }
}