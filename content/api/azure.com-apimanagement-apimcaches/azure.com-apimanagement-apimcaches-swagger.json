{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ApiManagementClient",
    "description" : "Use these REST APIs for performing operations on Cache entity in your Azure API Management deployment. Azure API Management also allows for caching responses in an external Azure Cache for Redis. For more information refer to [External Redis Cache in ApiManagement](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external).",
    "version" : "2019-01-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches" : {
      "get" : {
        "tags" : [ "Cache" ],
        "description" : "Lists a collection of all external Caches in the specified service instance.",
        "operationId" : "Cache_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a collection of Cache entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "Next page link if any."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "Page values.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "connectionString" ],
                            "type" : "object",
                            "properties" : {
                              "connectionString" : {
                                "maxLength" : 300,
                                "type" : "string",
                                "description" : "Runtime connection string to cache"
                              },
                              "description" : {
                                "maxLength" : 2000,
                                "type" : "string",
                                "description" : "Cache description"
                              },
                              "resourceId" : {
                                "maxLength" : 2000,
                                "type" : "string",
                                "description" : "Original uri of entity in external system cache points to"
                              }
                            },
                            "description" : "Properties of the Cache contract."
                          }
                        },
                        "description" : "Cache details."
                      }
                    }
                  },
                  "description" : "Paged Caches list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}" : {
      "get" : {
        "tags" : [ "Cache" ],
        "description" : "Gets the details of the Cache specified by its identifier.",
        "operationId" : "Cache_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "cacheId",
          "in" : "path",
          "description" : "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified Cache entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "connectionString" ],
                      "type" : "object",
                      "properties" : {
                        "connectionString" : {
                          "maxLength" : 300,
                          "type" : "string",
                          "description" : "Runtime connection string to cache"
                        },
                        "description" : {
                          "maxLength" : 2000,
                          "type" : "string",
                          "description" : "Cache description"
                        },
                        "resourceId" : {
                          "maxLength" : 2000,
                          "type" : "string",
                          "description" : "Original uri of entity in external system cache points to"
                        }
                      },
                      "description" : "Properties of the Cache contract."
                    }
                  },
                  "description" : "Cache details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Cache" ],
        "description" : "Creates or updates an External Cache to be used in Api Management instance.",
        "externalDocs" : {
          "description" : "Use an external cache in Azure API Management",
          "url" : "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external"
        },
        "operationId" : "Cache_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "cacheId",
          "in" : "path",
          "description" : "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create or Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "connectionString" ],
                    "type" : "object",
                    "properties" : {
                      "connectionString" : {
                        "maxLength" : 300,
                        "type" : "string",
                        "description" : "Runtime connection string to cache"
                      },
                      "description" : {
                        "maxLength" : 2000,
                        "type" : "string",
                        "description" : "Cache description"
                      },
                      "resourceId" : {
                        "maxLength" : 2000,
                        "type" : "string",
                        "description" : "Original uri of entity in external system cache points to"
                      }
                    },
                    "description" : "Properties of the Cache contract."
                  }
                },
                "description" : "Cache details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The Cache details were successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "connectionString" ],
                      "type" : "object",
                      "properties" : {
                        "connectionString" : {
                          "maxLength" : 300,
                          "type" : "string",
                          "description" : "Runtime connection string to cache"
                        },
                        "description" : {
                          "maxLength" : 2000,
                          "type" : "string",
                          "description" : "Cache description"
                        },
                        "resourceId" : {
                          "maxLength" : 2000,
                          "type" : "string",
                          "description" : "Original uri of entity in external system cache points to"
                        }
                      },
                      "description" : "Properties of the Cache contract."
                    }
                  },
                  "description" : "Cache details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "The new Cache was successfully added.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "connectionString" ],
                      "type" : "object",
                      "properties" : {
                        "connectionString" : {
                          "maxLength" : 300,
                          "type" : "string",
                          "description" : "Runtime connection string to cache"
                        },
                        "description" : {
                          "maxLength" : 2000,
                          "type" : "string",
                          "description" : "Cache description"
                        },
                        "resourceId" : {
                          "maxLength" : 2000,
                          "type" : "string",
                          "description" : "Original uri of entity in external system cache points to"
                        }
                      },
                      "description" : "Properties of the Cache contract."
                    }
                  },
                  "description" : "Cache details.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type for API Management resource.",
                        "readOnly" : true
                      }
                    },
                    "description" : "The Resource definition."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Cache" ],
        "description" : "Deletes specific Cache.",
        "operationId" : "Cache_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "cacheId",
          "in" : "path",
          "description" : "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The Cache was successfully deleted."
          },
          "204" : {
            "description" : "The Cache was successfully deleted."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Cache" ],
        "description" : "Gets the entity state (Etag) version of the Cache specified by its identifier.",
        "operationId" : "Cache_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "cacheId",
          "in" : "path",
          "description" : "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified Cache entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Cache" ],
        "description" : "Updates the details of the cache specified by its identifier.",
        "operationId" : "Cache_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "cacheId",
          "in" : "path",
          "description" : "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "connectionString" : {
                        "maxLength" : 300,
                        "type" : "string",
                        "description" : "Runtime connection string to cache"
                      },
                      "description" : {
                        "maxLength" : 2000,
                        "type" : "string",
                        "description" : "Cache description"
                      },
                      "resourceId" : {
                        "maxLength" : 2000,
                        "type" : "string",
                        "description" : "Original uri of entity in external system cache points to"
                      }
                    },
                    "description" : "Parameters supplied to the Update Cache operation."
                  }
                },
                "description" : "Cache update details."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The cache details were successfully updated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "The list of invalid fields send in request, in case of validation error.",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "Property level error code."
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "Human-readable representation of property-level error."
                              },
                              "target" : {
                                "type" : "string",
                                "description" : "Property name."
                              }
                            },
                            "description" : "Error Field contract."
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "Human-readable representation of the error."
                        }
                      },
                      "description" : "Error Body contract."
                    }
                  },
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}