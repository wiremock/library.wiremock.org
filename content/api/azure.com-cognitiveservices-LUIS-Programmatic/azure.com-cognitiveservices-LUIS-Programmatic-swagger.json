{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "LUIS Programmatic",
    "version" : "v2.0"
  },
  "servers" : [ {
    "url" : "https://azure.local/luis/api/v2.0"
  } ],
  "security" : [ {
    "apiKeyHeader" : null
  } ],
  "paths" : {
    "/apps/" : {
      "get" : {
        "description" : "Lists all of the user applications.",
        "operationId" : "Apps_List",
        "parameters" : [ {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the user applications.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationsInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new LUIS app.",
        "operationId" : "Apps_Add",
        "requestBody" : {
          "description" : "A model containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. Default value for the version ID is 0.1. Note: the culture cannot be changed after the app is created.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/assistants" : {
      "get" : {
        "description" : "Gets the endpoint URLs for the prebuilt Cortana applications.",
        "operationId" : "Apps_ListCortanaEndpoints",
        "responses" : {
          "200" : {
            "description" : "A personal assistant apps JSON object containing the endpoint URLs for Cortana applications and the user's endpoint keys.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PersonalAssistantsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/cultures" : {
      "get" : {
        "description" : "Gets the supported application cultures.",
        "operationId" : "Apps_ListSupportedCultures",
        "responses" : {
          "200" : {
            "description" : "A list object containing the supported application cultures.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableCultures"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/customprebuiltdomains" : {
      "get" : {
        "description" : "Gets all the available custom prebuilt domains for all cultures.",
        "operationId" : "Apps_ListAvailableCustomPrebuiltDomains",
        "responses" : {
          "200" : {
            "description" : "Returns a list of all custom prebuilt domains and their intents/entities representation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltDomainsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a prebuilt domain along with its models as a new application.",
        "operationId" : "Apps_AddCustomPrebuiltDomain",
        "requestBody" : {
          "description" : "A prebuilt domain create object containing the name and culture of the domain.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/customprebuiltdomains/{culture}" : {
      "get" : {
        "description" : "Gets all the available custom prebuilt domains for a specific culture.",
        "operationId" : "Apps_ListAvailableCustomPrebuiltDomainsForCulture",
        "parameters" : [ {
          "name" : "culture",
          "in" : "path",
          "description" : "Culture.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all domains and their intents/entities representation for a specific culture.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltDomainsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/domains" : {
      "get" : {
        "description" : "Gets the available application domains.",
        "operationId" : "Apps_ListDomains",
        "responses" : {
          "200" : {
            "description" : "A list object containing the available application domains.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableDomains"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/import" : {
      "post" : {
        "description" : "Imports an application to LUIS, the application's structure should be included in in the request body.",
        "operationId" : "Apps_Import",
        "parameters" : [ {
          "name" : "appName",
          "in" : "query",
          "description" : "The application name to create. If not specified, the application name will be read from the imported object.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A LUIS application structure.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LuisApp"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the imported application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/usagescenarios" : {
      "get" : {
        "description" : "Gets the application available usage scenarios.",
        "operationId" : "Apps_ListUsageScenarios",
        "responses" : {
          "200" : {
            "description" : "A list object containing the available application usage scenarios.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationUsageScenarios"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}" : {
      "get" : {
        "description" : "Gets the application info.",
        "operationId" : "Apps_Get",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The application info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationInfoResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name or description of the application.",
        "operationId" : "Apps_Update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing Name and Description of the application.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated application name and description.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an application.",
        "operationId" : "Apps_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/endpoints" : {
      "get" : {
        "description" : "Returns the available endpoint deployment regions and URLs.",
        "operationId" : "Apps_ListEndpoints",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of endpoints regions and their corresponding endpoint URL.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableEndpoints"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/permissions" : {
      "get" : {
        "description" : "Gets the list of user emails that have permissions to access your application.",
        "operationId" : "Permissions_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list includes a single owner. All collaborators are listed in the emails array.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserAccessList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Replaces the current users access list with the one sent in the body. If an empty list is sent, all access to other users will be removed.",
        "operationId" : "Permissions_Update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing a list of user's email addresses.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CollaboratorsArray"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a user to the allowed list of users to access this LUIS application. Users are added using their email address.",
        "operationId" : "Permissions_Add",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the user's email address.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollaborator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Removes a user from the allowed list of users to access this LUIS application. Users are removed using their email address.",
        "operationId" : "Permissions_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the user's email address.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCollaborator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/publish" : {
      "post" : {
        "description" : "Publishes a specific version of the application.",
        "operationId" : "Apps_Publish",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The application publish object. The region is the target region that the application is published to.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationPublishObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "An object containing the application endpoint URL and its assigned endpoint key.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductionOrStagingEndpointInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/querylogs" : {
      "get" : {
        "description" : "Gets the query logs of the past month for the application.",
        "operationId" : "Apps_DownloadQueryLogs",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A CSV file containing the query logs for the past month.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "type" : "object",
                  "description" : "The query logs of an application for the past month in CSV format.",
                  "format" : "file"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/settings" : {
      "get" : {
        "description" : "Get the application settings.",
        "operationId" : "Apps_GetSettings",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The application settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationSettings"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the application settings.",
        "operationId" : "Apps_UpdateSettings",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "An object containing the new application settings.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationSettingUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated application settings.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions" : {
      "get" : {
        "description" : "Gets the application versions info.",
        "operationId" : "Versions_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all versions of the application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VersionInfo"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/import" : {
      "post" : {
        "description" : "Imports a new version into a LUIS application.",
        "operationId" : "Versions_Import",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "query",
          "description" : "The new versionId to import. If not specified, the versionId will be read from the imported object.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A LUIS application structure.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LuisApp"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The created application version.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/" : {
      "get" : {
        "description" : "Gets the version info.",
        "operationId" : "Versions_Get",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A model containing the version info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name or description of the application version.",
        "operationId" : "Versions_Update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing Name and Description of the application.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an application version.",
        "operationId" : "Versions_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/clone" : {
      "post" : {
        "description" : "Creates a new version using the current snapshot of the selected application version.",
        "operationId" : "Versions_Clone",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the new version ID.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskUpdateObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "The version ID of the created task.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "0.2"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists" : {
      "get" : {
        "description" : "Gets information about the closedlist models.",
        "operationId" : "Model_ListClosedLists",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of closedlist entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClosedListEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a closed list model to the application.",
        "operationId" : "Model_AddClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the name and words for the new closed list entity extractor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClosedListModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}" : {
      "get" : {
        "description" : "Gets information of a closed list model.",
        "operationId" : "Model_GetClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The closed list model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The closed list model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ClosedListEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the closed list model.",
        "operationId" : "Model_UpdateClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The closed list model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "The new entity name and words list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClosedListModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated Closed List name and words list.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a closed list model from the application.",
        "operationId" : "Model_DeleteClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The closed list model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully delete Closed List from application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "description" : "Adds a batch of sublists to an existing closedlist.",
        "operationId" : "Model_PatchClosedList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The closed list model ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A words list batch.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ClosedListModelPatchObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added sublists to Closed List.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists" : {
      "post" : {
        "description" : "Adds a list to an existing closed list.",
        "operationId" : "Model_AddSubList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The closed list entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Words list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WordListObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the newly created list.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "example" : 90440
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}" : {
      "put" : {
        "description" : "Updates one of the closed list's sublists.",
        "operationId" : "Model_UpdateSubList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The closed list entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subListId",
          "in" : "path",
          "description" : "The sublist ID.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "A sublist update object containing the new canonical form and the list of words.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WordListBaseUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated sublist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a sublist of a specific closed list model.",
        "operationId" : "Model_DeleteSubList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "clEntityId",
          "in" : "path",
          "description" : "The closed list entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "subListId",
          "in" : "path",
          "description" : "The sublist ID.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted sublist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities" : {
      "get" : {
        "description" : "Gets information about the composite entity models.",
        "operationId" : "Model_ListCompositeEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of composite entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompositeEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a composite entity extractor to the application.",
        "operationId" : "Model_AddCompositeEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the name and children of the new entity extractor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompositeEntityModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created Model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}" : {
      "get" : {
        "description" : "Gets information about the composite entity model.",
        "operationId" : "Model_GetCompositeEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The composite entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompositeEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the composite entity extractor.",
        "operationId" : "Model_UpdateCompositeEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the new entity extractor name and children.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CompositeEntityModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated composite entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a composite entity extractor from the application.",
        "operationId" : "Model_DeleteCompositeEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted composite entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children" : {
      "post" : {
        "description" : "Creates a single child in an existing composite entity model.",
        "operationId" : "Model_AddCompositeEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the new composite child model.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}" : {
      "delete" : {
        "description" : "Deletes a composite entity extractor child from the application.",
        "operationId" : "Model_DeleteCompositeEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cEntityId",
          "in" : "path",
          "description" : "The composite entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "cChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains" : {
      "post" : {
        "description" : "Adds a customizable prebuilt domain along with all of its models to this application.",
        "operationId" : "Model_AddCustomPrebuiltDomain",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A prebuilt domain create object containing the name of the domain.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainCreateBaseObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "An array of the created custom prebuilt domain model Ids.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}" : {
      "delete" : {
        "description" : "Deletes a prebuilt domain's models from the application.",
        "operationId" : "Model_DeleteCustomPrebuiltDomain",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainName",
          "in" : "path",
          "description" : "Domain name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities" : {
      "get" : {
        "description" : "Gets all custom prebuilt entities information of this application.",
        "operationId" : "Model_ListCustomPrebuiltEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all custom prebuilt entities and their representations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a custom prebuilt entity model to the application.",
        "operationId" : "Model_AddCustomPrebuiltEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltintents" : {
      "get" : {
        "description" : "Gets custom prebuilt intents information of this application.",
        "operationId" : "Model_ListCustomPrebuiltIntents",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all custom prebuilt intents and their representations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentClassifiersList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a custom prebuilt intent model to the application.",
        "operationId" : "Model_AddCustomPrebuiltIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the custom prebuilt intent and the name of the domain to which this model belongs.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltDomainModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltmodels" : {
      "get" : {
        "description" : "Gets all custom prebuilt models information of this application.",
        "operationId" : "Model_ListCustomPrebuiltModels",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of all custom prebuilt models and their representations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomPrebuiltModelList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities" : {
      "get" : {
        "description" : "Gets information about the entity models.",
        "operationId" : "Model_ListEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds an entity extractor to the application.",
        "operationId" : "Model_AddEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name for the new entity extractor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}" : {
      "get" : {
        "description" : "Gets information about the entity model.",
        "operationId" : "Model_GetEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name of an entity extractor.",
        "operationId" : "Model_UpdateEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the new entity extractor name.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated entity extractor name.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an entity extractor from the application.",
        "operationId" : "Model_DeleteEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest" : {
      "get" : {
        "description" : "Get suggestion examples that would improve the accuracy of the entity model.",
        "operationId" : "Model_GetEntitySuggestions",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "entityId",
          "in" : "path",
          "description" : "The target entity extractor model to enhance.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "If there's no trained model, nothing is returned in the response. If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions. If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntitiesSuggestionExamples"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/example" : {
      "post" : {
        "description" : "Adds a labeled example to the application.",
        "operationId" : "Examples_Add",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "An example label with the expected intent and entities.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExampleLabelObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created example.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabelExampleResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples" : {
      "get" : {
        "description" : "Returns examples to be reviewed.",
        "operationId" : "Examples_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of predictions and label pairs for every example in the application.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabeledUtterances"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a batch of labeled examples to the application.",
        "operationId" : "Examples_Batch",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Array of examples.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExampleLabelObjectArray"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A string array determining which labels were added successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchLabelExampleResponse"
                }
              }
            }
          },
          "207" : {
            "description" : "Indicates that the request was partially successful. The response contains a string array indicating the status of each of the added labels.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchLabelExampleResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples/{exampleId}" : {
      "delete" : {
        "description" : "Deletes the labeled example with the specified ID.",
        "operationId" : "Examples_Delete",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "exampleId",
          "in" : "path",
          "description" : "The example ID.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted example label.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/export" : {
      "get" : {
        "description" : "Exports a LUIS application to JSON format.",
        "operationId" : "Versions_Export",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The LUIS application structure in JSON format.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LuisApp"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/features" : {
      "get" : {
        "description" : "Gets all the extraction features for the specified application version.",
        "operationId" : "Features_List",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all phraselist features and a list of all pattern features.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeaturesResponseObject"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities" : {
      "get" : {
        "description" : "Gets information about the hierarchical entity models.",
        "operationId" : "Model_ListHierarchicalEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of hierarchical entity model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HierarchicalEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a hierarchical entity extractor to the application version.",
        "operationId" : "Model_AddHierarchicalEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model containing the name and children of the new entity extractor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HierarchicalEntityModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}" : {
      "get" : {
        "description" : "Gets information about the hierarchical entity model.",
        "operationId" : "Model_GetHierarchicalEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A hierarchical entity model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HierarchicalEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name and children of a hierarchical entity model.",
        "operationId" : "Model_UpdateHierarchicalEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Model containing names of the children of the hierarchical entity.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HierarchicalEntityModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a hierarchical entity extractor from the application version.",
        "operationId" : "Model_DeleteHierarchicalEntity",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children" : {
      "post" : {
        "description" : "Creates a single child in an existing hierarchical entity model.",
        "operationId" : "Model_AddHierarchicalEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the new hierarchical child model.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}" : {
      "get" : {
        "description" : "Gets information about the hierarchical entity child model.",
        "operationId" : "Model_GetHierarchicalEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "hChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The hierarchical entity child model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HierarchicalChildEntity"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Renames a single child in an existing hierarchical entity model.",
        "operationId" : "Model_UpdateHierarchicalEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "hChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "Model object containing new name of the hierarchical entity child.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated entity child.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a hierarchical entity extractor child from the application.",
        "operationId" : "Model_DeleteHierarchicalEntityChild",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hEntityId",
          "in" : "path",
          "description" : "The hierarchical entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "hChildId",
          "in" : "path",
          "description" : "The hierarchical entity extractor child ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents" : {
      "get" : {
        "description" : "Gets information about the intent models.",
        "operationId" : "Model_ListIntents",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of intent model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentClassifiersList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds an intent classifier to the application.",
        "operationId" : "Model_AddIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the name of the new intent classifier.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created model.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GuidResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}" : {
      "get" : {
        "description" : "Gets information about the intent model.",
        "operationId" : "Model_GetIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An intent model info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentClassifier"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the name of an intent classifier.",
        "operationId" : "Model_UpdateIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "description" : "A model object containing the new intent classifier name.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an intent classifier from the application.",
        "operationId" : "Model_DeleteIntent",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "deleteUtterances",
          "in" : "query",
          "description" : "Also delete the intent's utterances (true). Or move the utterances to the None intent (false - the default value).",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest" : {
      "get" : {
        "description" : "Suggests examples that would improve the accuracy of the intent model.",
        "operationId" : "Model_GetIntentSuggestions",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "intentId",
          "in" : "path",
          "description" : "The intent classifier ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "If there's no trained model, nothing is returned in the response. If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions. If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntentsSuggestionExamples"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/listprebuilts" : {
      "get" : {
        "description" : "Gets all the available prebuilt entity extractors for the application.",
        "operationId" : "Model_ListPrebuiltEntities",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of the possible prebuilt entity extractors.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailablePrebuiltEntityModels"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models" : {
      "get" : {
        "description" : "Gets information about the application version models.",
        "operationId" : "Model_ListModels",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of application model infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelsInfoResponseObject"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patterns" : {
      "get" : {
        "description" : "[DEPRECATED NOTICE: This operation will soon be removed] Gets all the pattern features.",
        "operationId" : "Features_GetApplicationVersionPatternFeatures",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of pattern features.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternFeatureInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "post" : {
        "description" : "[DEPRECATED NOTICE: This operation will soon be removed] Creates a new pattern feature.",
        "operationId" : "Features_CreatePatternFeature",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The Name and Pattern of the feature.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatternCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureIDResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/apps/{appId}/versions/{versionId}/patterns/{patternId}" : {
      "get" : {
        "description" : "[DEPRECATED NOTICE: This operation will soon be removed] Gets the specified pattern feature's info.",
        "operationId" : "Features_GetPatternFeatureInfo",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patternId",
          "in" : "path",
          "description" : "The pattern feature ID.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The pattern feature info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PatternFeatureInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "put" : {
        "description" : "[DEPRECATED NOTICE: This operation will soon be removed] Updates the pattern, the name and the state of the pattern feature.",
        "operationId" : "Features_UpdatePatternFeature",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patternId",
          "in" : "path",
          "description" : "The pattern feature ID.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern and a boolean called IsActive to update the feature.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatternUpdateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "delete" : {
        "description" : "[DEPRECATED NOTICE: This operation will soon be removed] Deletes a pattern feature.",
        "operationId" : "Features_DeletePatternFeature",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "patternId",
          "in" : "path",
          "description" : "The pattern feature ID.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists" : {
      "get" : {
        "description" : "Gets all the phraselist features.",
        "operationId" : "Features_ListPhraseLists",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all phraselist features.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhraseListFeatureInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Creates a new phraselist feature.",
        "operationId" : "Features_AddPhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PhraselistCreateObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The ID of the created feature.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureIDResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}" : {
      "get" : {
        "description" : "Gets phraselist feature info.",
        "operationId" : "Features_GetPhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phraselistId",
          "in" : "path",
          "description" : "The ID of the feature to be retrieved.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A phraselist feature info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PhraseListFeatureInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Updates the phrases, the state and the name of the phraselist feature.",
        "operationId" : "Features_UpdatePhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phraselistId",
          "in" : "path",
          "description" : "The ID of the feature to be updated.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern, Mode, and a boolean called IsActive to update the feature.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PhraselistUpdateObject"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated phraselist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a phraselist feature.",
        "operationId" : "Features_DeletePhraseList",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "phraselistId",
          "in" : "path",
          "description" : "The ID of the feature to be deleted.",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted phraselist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts" : {
      "get" : {
        "description" : "Gets information about the prebuilt entity models.",
        "operationId" : "Model_ListPrebuilts",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "The number of entries to skip. Default value is 0.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "take",
          "in" : "query",
          "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
          "schema" : {
            "maximum" : 500,
            "minimum" : 0,
            "type" : "integer",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of prebuilt entity models infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Adds a list of prebuilt entity extractors to the application.",
        "operationId" : "Model_AddPrebuilt",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "An array of prebuilt entity extractor names.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrebuiltExtractorNames"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "An array of the created prebuilt extractor infos.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltEntityExtractorsList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}" : {
      "get" : {
        "description" : "Gets information about the prebuilt entity model.",
        "operationId" : "Model_GetPrebuilt",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prebuiltId",
          "in" : "path",
          "description" : "The prebuilt entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A prebuilt entity models info.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrebuiltEntityExtractor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes a prebuilt entity extractor from the application.",
        "operationId" : "Model_DeletePrebuilt",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "prebuiltId",
          "in" : "path",
          "description" : "The prebuilt entity extractor ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/suggest" : {
      "delete" : {
        "description" : "Deleted an unlabelled utterance.",
        "operationId" : "Versions_DeleteUnlabelledUtterance",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The utterance text to delete.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/train" : {
      "get" : {
        "description" : "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".",
        "operationId" : "Train_GetStatus",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response provides an array of training status details for a LUIS app that you submitted for training. Each element in the response array provides training status for a model (intent or entity) in the LUIS app. Note: Training status is not provided for prebuilt entities because they are pretrained. The \"modelId\" property identifies which intent or entity the training status corresponds to. To get the name and type of each model, use the models API which has a request URL in this format: https://westus.api.cognitive.microsoft.com/luis/api/v2.0/apps/{appId}/versions/{versionId}/models The details property for each model can contain the following fields: \"statusId\": An integer from 0 to 3 that corresponds to the value of the status field. \"status\": A string with one of the following values: “Success”, “UpToDate”, “InProgress”, “Fail”. If the status is “Fail”, the \"failureReason\" property provides the reason for failure. \"exampleCount\": The number of examples used for training. In the case of the None intent or prebuilt domain intents and entities, this number includes example provided internally by the system as well as examples you added to your LUIS app. \"failureReason\": A string that indicates the reason training failed.  The value \"FewLabels\" means that no labeled examples were provided for training. \"trainingDateTime\": A string indicating the time the model was last trained. The value uses the ISO 8601 format for representing times in UTC (Coordinated Universal Time) with a UTC designator (“Z”), for example: \"2017-08-10T01:08:34Z\".",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelTrainingInfoList"
                }
              },
              "JSON" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ModelTrainingInfoList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              },
              "JSON" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "description" : "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.",
        "operationId" : "Train_TrainVersion",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The application ID.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "versionId",
          "in" : "path",
          "description" : "The version ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "This response indicates the initial training status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EnqueueTrainingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Error Response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApplicationCreateObject" : {
        "required" : [ "culture", "name" ],
        "type" : "object",
        "properties" : {
          "culture" : {
            "type" : "string",
            "description" : "The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created."
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the new application. Optional."
          },
          "domain" : {
            "type" : "string",
            "description" : "The domain for the new application. Optional. E.g.: Comics."
          },
          "initialVersionId" : {
            "type" : "string",
            "description" : "The initial version ID. Optional. Default value is: \"0.1\""
          },
          "name" : {
            "type" : "string",
            "description" : "The name for the new application."
          },
          "usageScenario" : {
            "type" : "string",
            "description" : "Defines the scenario for the new application. Optional. E.g.: IoT."
          }
        },
        "description" : "Properties for creating a new LUIS Application",
        "example" : {
          "culture" : "en-us",
          "description" : "This is my first dummy application.",
          "domain" : "Comics",
          "initialVersionId" : "1.0",
          "name" : "MyFirstDummyApp",
          "usageScenario" : "IoT"
        }
      },
      "ApplicationInfoResponse" : {
        "type" : "object",
        "properties" : {
          "activeVersion" : {
            "type" : "string",
            "description" : "The version ID currently marked as active."
          },
          "createdDateTime" : {
            "type" : "string",
            "description" : "The version's creation timestamp."
          },
          "culture" : {
            "type" : "string",
            "description" : "The culture of the application. E.g.: en-us."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the application."
          },
          "domain" : {
            "type" : "string",
            "description" : "The domain for the new application. Optional. E.g.: Comics."
          },
          "endpointHitsCount" : {
            "type" : "integer",
            "description" : "Number of calls made to this endpoint."
          },
          "endpoints" : {
            "type" : "object",
            "description" : "The Runtime endpoint URL for this model version."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID (GUID) of the application.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "usageScenario" : {
            "type" : "string",
            "description" : "Defines the scenario for the new application. Optional. E.g.: IoT."
          },
          "versionsCount" : {
            "type" : "integer",
            "description" : "Amount of model versions within the application."
          }
        },
        "description" : "Response containing the Application Info."
      },
      "ApplicationPublishObject" : {
        "type" : "object",
        "properties" : {
          "isStaging" : {
            "type" : "boolean",
            "description" : "Indicates if the staging slot should be used, instead of the Production one.",
            "default" : false
          },
          "region" : {
            "type" : "string",
            "description" : "The target region that the application is published to."
          },
          "versionId" : {
            "type" : "string",
            "description" : "The version ID to publish."
          }
        },
        "description" : "Object model for publishing a specific application version.",
        "example" : {
          "isStaging" : false,
          "region" : "westus",
          "versionId" : "0.1"
        }
      },
      "ApplicationSettingUpdateObject" : {
        "type" : "object",
        "properties" : {
          "public" : {
            "type" : "boolean",
            "description" : "Setting your application as public allows other people to use your application's endpoint using their own keys.",
            "nullable" : false
          }
        },
        "description" : "Object model for updating an application's settings.",
        "example" : {
          "public" : true
        }
      },
      "ApplicationSettings" : {
        "required" : [ "id", "public" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The application ID.",
            "format" : "uuid"
          },
          "public" : {
            "type" : "boolean",
            "description" : "Setting your application as public allows other people to use your application's endpoint using their own keys.",
            "nullable" : false
          }
        },
        "description" : "The application settings."
      },
      "ApplicationUpdateObject" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The application's new description."
          },
          "name" : {
            "type" : "string",
            "description" : "The application's new name."
          }
        },
        "description" : "Object model for updating the name or description of an application.",
        "example" : {
          "description" : "This is my first modified dummy description.",
          "name" : "MyFirstRenamedDummyAp"
        }
      },
      "ApplicationUsageScenarios" : {
        "type" : "array",
        "description" : "A list of possible application usage scenarios.",
        "items" : {
          "type" : "string"
        }
      },
      "ApplicationsInfoList" : {
        "type" : "array",
        "description" : "List of Application Infos.",
        "items" : {
          "$ref" : "#/components/schemas/ApplicationInfoResponse"
        }
      },
      "AvailableCulture" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The ISO value for the language."
          },
          "name" : {
            "type" : "string",
            "description" : "The language name."
          }
        },
        "description" : "Available culture for using in a new application."
      },
      "AvailableCultures" : {
        "type" : "array",
        "description" : "A list of available application cultures.",
        "items" : {
          "$ref" : "#/components/schemas/AvailableCulture"
        }
      },
      "AvailableDomains" : {
        "type" : "array",
        "description" : "A list of available application domains.",
        "items" : {
          "type" : "string"
        }
      },
      "AvailableEndpoints" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Collection of endpoint URLs where the selected application is deployed to."
      },
      "AvailablePrebuiltEntityModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The entity description and usage information."
          },
          "examples" : {
            "type" : "string",
            "description" : "Usage examples."
          },
          "name" : {
            "type" : "string",
            "description" : "The entity name."
          }
        },
        "description" : "Available Prebuilt entity model for using in an application."
      },
      "AvailablePrebuiltEntityModels" : {
        "type" : "array",
        "description" : "List of Available Prebuilt entity models.",
        "items" : {
          "$ref" : "#/components/schemas/AvailablePrebuiltEntityModel"
        }
      },
      "BatchLabelExample" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/OperationStatus"
          },
          "hasError" : {
            "type" : "boolean"
          },
          "value" : {
            "$ref" : "#/components/schemas/LabelExampleResponse"
          }
        },
        "description" : "Response when adding a batch of labeled examples."
      },
      "BatchLabelExampleResponse" : {
        "type" : "array",
        "description" : "Response when adding a batch of labeled examples.",
        "items" : {
          "$ref" : "#/components/schemas/BatchLabelExample"
        }
      },
      "ChildEntity" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID (GUID) belonging to a child entity.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of a child entity."
          }
        },
        "description" : "The base child entity type."
      },
      "ClosedList" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the closed list feature."
          },
          "subLists" : {
            "type" : "array",
            "description" : "Sublists for the feature.",
            "items" : {
              "$ref" : "#/components/schemas/SubClosedList"
            }
          }
        },
        "description" : "Exported Model - A Closed List."
      },
      "ClosedListEntityExtractor" : {
        "properties" : {
          "subLists" : {
            "type" : "array",
            "description" : "List of sub-lists.",
            "items" : {
              "$ref" : "#/components/schemas/SubClosedListResponse"
            }
          }
        },
        "description" : "Closed List Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "ClosedListEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Closed List Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/ClosedListEntityExtractor"
        }
      },
      "ClosedListModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the closed list feature."
          },
          "subLists" : {
            "type" : "array",
            "description" : "Sublists for the feature.",
            "items" : {
              "$ref" : "#/components/schemas/WordListObject"
            }
          }
        },
        "description" : "Object model for creating a closed list.",
        "example" : {
          "name" : "States",
          "subLists" : [ {
            "canonicalForm" : "New York",
            "list" : [ "NY", "New York" ]
          }, {
            "canonicalForm" : "Washington",
            "list" : [ "Washington", "WA" ]
          }, {
            "canonicalForm" : "California",
            "list" : [ "California", "CA", "Calif.", "Cal." ]
          } ]
        }
      },
      "ClosedListModelPatchObject" : {
        "type" : "object",
        "properties" : {
          "subLists" : {
            "type" : "array",
            "description" : "Sublists to add.",
            "items" : {
              "$ref" : "#/components/schemas/WordListObject"
            }
          }
        },
        "description" : "Object model for adding a batch of sublists to an existing closedlist.",
        "example" : {
          "subLists" : [ {
            "canonicalForm" : "Ohio",
            "list" : [ "Ohio", "OH" ]
          } ]
        }
      },
      "ClosedListModelUpdateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The new name of the closed list feature."
          },
          "subLists" : {
            "type" : "array",
            "description" : "The new sublists for the feature.",
            "items" : {
              "$ref" : "#/components/schemas/WordListObject"
            }
          }
        },
        "description" : "Object model for updating a closed list.",
        "example" : {
          "name" : "States",
          "subLists" : [ {
            "canonicalForm" : "new york",
            "list" : [ "ny", "new york" ]
          }, {
            "canonicalForm" : "washington",
            "list" : [ "washington", "wa" ]
          }, {
            "canonicalForm" : "california",
            "list" : [ "california", "ca", "calif.", "cal." ]
          }, {
            "canonicalForm" : "Texas",
            "list" : [ "Texas", "TX" ]
          } ]
        }
      },
      "CollaboratorsArray" : {
        "type" : "object",
        "properties" : {
          "emails" : {
            "type" : "array",
            "description" : "The email address of the users.",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CompositeEntityExtractor" : {
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "List of child entities.",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntity"
            }
          }
        },
        "description" : "A Composite Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "CompositeEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Composite Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/CompositeEntityExtractor"
        }
      },
      "CompositeEntityModel" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "Child entities.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Entity name."
          }
        },
        "description" : "A composite entity.",
        "example" : {
          "children" : [ "Class", "Location" ],
          "name" : "Reservation"
        }
      },
      "CustomPrebuiltModel" : {
        "description" : "A Custom Prebuilt model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        }, {
          "$ref" : "#/components/schemas/IntentClassifier"
        }, {
          "$ref" : "#/components/schemas/EntityExtractor"
        } ]
      },
      "CustomPrebuiltModelList" : {
        "type" : "array",
        "description" : "A List of Custom Prebuilt models.",
        "items" : {
          "$ref" : "#/components/schemas/CustomPrebuiltModel"
        }
      },
      "EndpointInfo" : {
        "type" : "object",
        "properties" : {
          "assignedEndpointKey" : {
            "type" : "string",
            "description" : "The endpoint key."
          },
          "endpointRegion" : {
            "type" : "string",
            "description" : "The endpoint's region."
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The Runtime endpoint URL for this model version."
          },
          "isStaging" : {
            "type" : "boolean",
            "description" : "Indicates if the staging slot should be used, instead of the Production one."
          },
          "publishedDateTime" : {
            "type" : "string",
            "description" : "Timestamp when was last published."
          },
          "region" : {
            "type" : "string",
            "description" : "The target region that the application is published to."
          },
          "versionId" : {
            "type" : "string",
            "description" : "The version ID to publish."
          }
        },
        "description" : "The base class \"ProductionOrStagingEndpointInfo\" inherits from."
      },
      "EndpointKeys" : {
        "type" : "array",
        "description" : "An a array of GUIDs, comprised of Azure Endpoint Keys and the Programmatic API key.",
        "items" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "EnqueueTrainingResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/TrainingStatus"
          },
          "statusId" : {
            "type" : "integer",
            "description" : "The train request status ID."
          }
        },
        "description" : "Response model when requesting to train the model."
      },
      "EntitiesSuggestionExample" : {
        "type" : "object",
        "properties" : {
          "entityPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityPrediction"
            }
          },
          "intentPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested intents.",
            "items" : {
              "$ref" : "#/components/schemas/IntentPrediction"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance. E.g.: what's the weather like in seattle?"
          },
          "tokenizedText" : {
            "type" : "array",
            "description" : "The utterance tokenized.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Predicted/suggested entity."
      },
      "EntitiesSuggestionExamples" : {
        "type" : "array",
        "description" : "List of predicted/suggested entities.",
        "items" : {
          "$ref" : "#/components/schemas/EntitiesSuggestionExample"
        }
      },
      "EntityExtractor" : {
        "properties" : {
          "customPrebuiltDomainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "customPrebuiltModelName" : {
            "type" : "string",
            "description" : "The intent name or entity name."
          }
        },
        "description" : "Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "EntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/EntityExtractor"
        }
      },
      "EntityLabel" : {
        "required" : [ "endTokenIndex", "entityName", "startTokenIndex" ],
        "type" : "object",
        "properties" : {
          "endTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The entity type."
          },
          "startTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "Defines the entity type and position of the extracted entity within the example."
      },
      "EntityLabelObject" : {
        "required" : [ "endCharIndex", "entityName", "startCharIndex" ],
        "type" : "object",
        "properties" : {
          "endCharIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The entity type."
          },
          "startCharIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "Defines the entity type and position of the extracted entity within the example."
      },
      "EntityPrediction" : {
        "required" : [ "endTokenIndex", "entityName", "phrase", "startTokenIndex" ],
        "type" : "object",
        "properties" : {
          "endTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entityName" : {
            "type" : "string",
            "description" : "The entity's name"
          },
          "phrase" : {
            "type" : "string",
            "description" : "The actual token(s) that comprise the entity."
          },
          "startTokenIndex" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "A suggested entity."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "errorType" : {
            "type" : "string"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Error response when invoking an operation on the API."
      },
      "ExampleLabelObject" : {
        "type" : "object",
        "properties" : {
          "entityLabels" : {
            "type" : "array",
            "description" : "The idenfied entities within the utterance.",
            "items" : {
              "$ref" : "#/components/schemas/EntityLabelObject"
            }
          },
          "intentName" : {
            "type" : "string",
            "description" : "The idenfitied intent representing the utterance."
          },
          "text" : {
            "type" : "string",
            "description" : "The sample's utterance."
          }
        },
        "description" : "A labeled example.",
        "example" : {
          "entityLabels" : [ {
            "endCharIndex" : 34,
            "entityName" : "Place",
            "startCharIndex" : 21
          } ],
          "intentName" : "WeatherInPlace",
          "text" : "whats the weather in buenos aires?"
        }
      },
      "ExampleLabelObjectArray" : {
        "type" : "array",
        "description" : "Object model for adding a batch of labeled examples.",
        "example" : [ {
          "entityLabels" : [ {
            "endCharIndex" : 26,
            "entityName" : "Location::From",
            "startCharIndex" : 22
          }, {
            "endCharIndex" : 37,
            "entityName" : "Location::To",
            "startCharIndex" : 31
          } ],
          "intentName" : "BookFlight",
          "text" : "Book me a flight from Cairo to Redmond next Thursday"
        }, {
          "entityLabels" : [ {
            "endCharIndex" : 33,
            "entityName" : "Location",
            "startCharIndex" : 27
          } ],
          "intentName" : "GetWeather",
          "text" : "What's the weather like in Seattle?"
        } ],
        "items" : {
          "$ref" : "#/components/schemas/ExampleLabelObject"
        }
      },
      "FeatureIDResponse" : {
        "type" : "integer",
        "description" : "The ID of the created feature.",
        "nullable" : false,
        "example" : 398102
      },
      "FeatureInfoObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "A six-digit ID used for Features."
          },
          "isActive" : {
            "type" : "boolean",
            "description" : "Indicates if the feature is enabled."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the Feature."
          }
        },
        "description" : "The base class Features-related response objects inherit from."
      },
      "FeaturesResponseObject" : {
        "type" : "object",
        "properties" : {
          "patternFeatures" : {
            "$ref" : "#/components/schemas/PatternFeatureInfoList"
          },
          "phraselistFeatures" : {
            "$ref" : "#/components/schemas/PhraseListFeatureInfoList"
          }
        },
        "description" : "Model Features, including Patterns and Phraselists."
      },
      "GuidList" : {
        "type" : "array",
        "description" : "List of IDs (GUID)",
        "example" : [ "2639049a-e41d-4285-a3c6-8a17ed299473", "200d6173-ecfa-4967-bf95-3c319902dc52", "f80aa9ba-64c8-4a36-8cc5-92010d0aadf1" ],
        "items" : {
          "$ref" : "#/components/schemas/GuidResponse"
        }
      },
      "GuidResponse" : {
        "type" : "string",
        "description" : "The ID (GUID) returned by an operation.",
        "format" : "uuid",
        "example" : "363187f1-c573-46b3-bc4c-ae01d686e68e"
      },
      "HierarchicalChildEntity" : {
        "properties" : {
          "readableType" : {
            "$ref" : "#/components/schemas/ReadableType"
          },
          "typeId" : {
            "type" : "integer",
            "description" : "The type ID of the Entity Model."
          }
        },
        "description" : "A Hierarchical Child Entity.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ChildEntity"
        } ]
      },
      "HierarchicalEntityExtractor" : {
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "List of child entities.",
            "items" : {
              "$ref" : "#/components/schemas/ChildEntity"
            }
          }
        },
        "description" : "Hierarchical Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "HierarchicalEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Hierarchical Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/HierarchicalEntityExtractor"
        }
      },
      "HierarchicalEntityModel" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "description" : "Child entities.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Entity name."
          }
        },
        "description" : "A Hierarchical Entity Extractor.",
        "example" : {
          "children" : [ "Location::To" ],
          "name" : "Reservation"
        }
      },
      "HierarchicalModel" : {
        "type" : "object",
        "properties" : {
          "children" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "IntentClassifier" : {
        "properties" : {
          "customPrebuiltDomainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "customPrebuiltModelName" : {
            "type" : "string",
            "description" : "The intent name or entity name."
          }
        },
        "description" : "Intent Classifier.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "IntentClassifiersList" : {
        "type" : "array",
        "description" : "List of Intent Classifiers.",
        "items" : {
          "$ref" : "#/components/schemas/IntentClassifier"
        }
      },
      "IntentPrediction" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The intent's name"
          },
          "score" : {
            "type" : "number",
            "description" : "The intent's score, based on the prediction model."
          }
        },
        "description" : "A suggested intent."
      },
      "IntentsSuggestionExample" : {
        "type" : "object",
        "properties" : {
          "entityPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityPrediction"
            }
          },
          "intentPredictions" : {
            "type" : "array",
            "description" : "Predicted/suggested intents.",
            "items" : {
              "$ref" : "#/components/schemas/IntentPrediction"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance. E.g.: what's the weather like in seattle?"
          },
          "tokenizedText" : {
            "type" : "array",
            "description" : "The utterance tokenized.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Predicted/suggested intent."
      },
      "IntentsSuggestionExamples" : {
        "type" : "array",
        "description" : "List of predicted/suggested intents.",
        "items" : {
          "$ref" : "#/components/schemas/IntentsSuggestionExample"
        }
      },
      "JSONEntity" : {
        "required" : [ "endPos", "entity", "startPos" ],
        "type" : "object",
        "properties" : {
          "endPos" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity ends."
          },
          "entity" : {
            "type" : "string",
            "description" : "The entity name."
          },
          "startPos" : {
            "type" : "integer",
            "description" : "The index within the utterance where the extracted entity starts."
          }
        },
        "description" : "Exported Model - Extracted Entity from utterance."
      },
      "JSONModelFeature" : {
        "type" : "object",
        "properties" : {
          "activated" : {
            "type" : "boolean",
            "description" : "Indicates if the feature is enabled."
          },
          "mode" : {
            "type" : "boolean",
            "description" : "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true."
          },
          "name" : {
            "type" : "string",
            "description" : "The Phraselist name."
          },
          "words" : {
            "type" : "string",
            "description" : "List of comma-separated phrases that represent the Phraselist."
          }
        },
        "description" : "Exported Model - Phraselist Model Feature."
      },
      "JSONRegexFeature" : {
        "type" : "object",
        "properties" : {
          "activated" : {
            "type" : "boolean",
            "description" : "Indicates if the Pattern feature is enabled."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the feature."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The Regular Expression to match."
          }
        },
        "description" : "Exported Model - A Pattern feature."
      },
      "JSONUtterance" : {
        "type" : "object",
        "properties" : {
          "entities" : {
            "type" : "array",
            "description" : "The matched entities.",
            "items" : {
              "$ref" : "#/components/schemas/JSONEntity"
            }
          },
          "intent" : {
            "type" : "string",
            "description" : "The matched intent."
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance."
          }
        },
        "description" : "Exported Model - Utterance that was used to train the model."
      },
      "LabelExampleResponse" : {
        "type" : "object",
        "properties" : {
          "ExampleId" : {
            "type" : "integer",
            "description" : "The newly created sample ID.",
            "example" : -6830368
          },
          "UtteranceText" : {
            "type" : "string",
            "description" : "The sample's utterance.",
            "example" : "book me a flight from cairo to redmond next thursday"
          }
        },
        "description" : "Response when adding a labeled example."
      },
      "LabeledUtterance" : {
        "type" : "object",
        "properties" : {
          "entityLabels" : {
            "type" : "array",
            "description" : "The entities matching the example.",
            "items" : {
              "$ref" : "#/components/schemas/EntityLabel"
            }
          },
          "entityPredictions" : {
            "type" : "array",
            "description" : "List of suggested entities.",
            "items" : {
              "$ref" : "#/components/schemas/EntityPrediction"
            }
          },
          "id" : {
            "type" : "integer",
            "description" : "ID of Labeled Utterance."
          },
          "intentLabel" : {
            "type" : "string",
            "description" : "The intent matching the example."
          },
          "intentPredictions" : {
            "type" : "array",
            "description" : "List of suggested intents.",
            "items" : {
              "$ref" : "#/components/schemas/IntentPrediction"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The utterance. E.g.: what's the weather like in seattle?"
          },
          "tokenizedText" : {
            "type" : "array",
            "description" : "The utterance tokenized.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A prediction and label pair of an example."
      },
      "LabeledUtterances" : {
        "type" : "array",
        "description" : "A list of predictions and label pairs for every example in the application.",
        "items" : {
          "$ref" : "#/components/schemas/LabeledUtterance"
        }
      },
      "LuisApp" : {
        "type" : "object",
        "properties" : {
          "bing_entities" : {
            "type" : "array",
            "description" : "List of prebuilt intents.",
            "items" : {
              "type" : "string"
            }
          },
          "closedLists" : {
            "type" : "array",
            "description" : "List of closed lists.",
            "items" : {
              "$ref" : "#/components/schemas/ClosedList"
            }
          },
          "composites" : {
            "type" : "array",
            "description" : "List of composite entities.",
            "items" : {
              "$ref" : "#/components/schemas/HierarchicalModel"
            }
          },
          "culture" : {
            "type" : "string",
            "description" : "The culture of the application. E.g.: en-us."
          },
          "desc" : {
            "type" : "string",
            "description" : "The description of the application."
          },
          "entities" : {
            "type" : "array",
            "description" : "List of entities.",
            "items" : {
              "$ref" : "#/components/schemas/HierarchicalModel"
            }
          },
          "intents" : {
            "type" : "array",
            "description" : "List of intents.",
            "items" : {
              "$ref" : "#/components/schemas/HierarchicalModel"
            }
          },
          "model_features" : {
            "type" : "array",
            "description" : "List of model features.",
            "items" : {
              "$ref" : "#/components/schemas/JSONModelFeature"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the application."
          },
          "regex_features" : {
            "type" : "array",
            "description" : "List of pattern features.",
            "items" : {
              "$ref" : "#/components/schemas/JSONRegexFeature"
            }
          },
          "utterances" : {
            "type" : "array",
            "description" : "List of sample utterances.",
            "items" : {
              "$ref" : "#/components/schemas/JSONUtterance"
            }
          },
          "versionId" : {
            "type" : "string",
            "description" : "The version ID of the application that was exported."
          }
        },
        "additionalProperties" : true,
        "description" : "Exported Model - An exported LUIS Application.",
        "example" : {
          "bing_entities" : [ "datetimeV2", "geography" ],
          "closedLists" : [ ],
          "composites" : [ ],
          "culture" : "en-us",
          "desc" : "",
          "entities" : [ {
            "name" : "AirportCode"
          }, {
            "name" : "Hotel"
          } ],
          "intents" : [ {
            "name" : "dateintent"
          }, {
            "name" : "Help"
          }, {
            "name" : "None"
          }, {
            "name" : "SearchHotels"
          }, {
            "name" : "ShowHotelsReviews"
          } ],
          "luis_schema_version" : "2.1.0",
          "model_features" : [ {
            "activated" : true,
            "mode" : true,
            "name" : "Near",
            "words" : "near,around,close,nearby"
          }, {
            "activated" : true,
            "mode" : true,
            "name" : "Show",
            "words" : "show,find,look,search"
          } ],
          "name" : "LuisBot",
          "regex_features" : [ {
            "activated" : true,
            "name" : "AirportCodeRegex",
            "pattern" : "[a-z]{3}"
          } ],
          "utterances" : [ {
            "entities" : [ ],
            "intent" : "Help",
            "text" : "i need help"
          }, {
            "entities" : [ ],
            "intent" : "Help",
            "text" : "help me"
          }, {
            "entities" : [ ],
            "intent" : "dateintent",
            "text" : "tomorrow"
          }, {
            "entities" : [ ],
            "intent" : "SearchHotels",
            "text" : "search for hotels in seattle"
          }, {
            "entities" : [ ],
            "intent" : "Help",
            "text" : "what can i do?"
          }, {
            "entities" : [ ],
            "intent" : "dateintent",
            "text" : "next monday"
          }, {
            "entities" : [ ],
            "intent" : "dateintent",
            "text" : "next year"
          }, {
            "entities" : [ ],
            "intent" : "SearchHotels",
            "text" : "look for hotels in miami"
          }, {
            "entities" : [ ],
            "intent" : "SearchHotels",
            "text" : "show me hotels in california"
          }, {
            "entities" : [ {
              "endPos" : 44,
              "entity" : "Hotel",
              "startPos" : 23
            } ],
            "intent" : "ShowHotelsReviews",
            "text" : "show me the reviews of the amazing bot resort"
          }, {
            "entities" : [ {
              "endPos" : 42,
              "entity" : "Hotel",
              "startPos" : 25
            } ],
            "intent" : "ShowHotelsReviews",
            "text" : "can i see the reviews of extended bot hotel?"
          }, {
            "entities" : [ {
              "endPos" : 23,
              "entity" : "Hotel",
              "startPos" : 16
            } ],
            "intent" : "ShowHotelsReviews",
            "text" : "find reviews of hotelxya"
          }, {
            "entities" : [ {
              "endPos" : 35,
              "entity" : "Hotel",
              "startPos" : 19
            } ],
            "intent" : "ShowHotelsReviews",
            "text" : "show me reviews of the amazing hotel"
          }, {
            "entities" : [ ],
            "intent" : "Help",
            "text" : "what are the available options?"
          }, {
            "entities" : [ ],
            "intent" : "SearchHotels",
            "text" : "best hotels in seattle"
          }, {
            "entities" : [ ],
            "intent" : "SearchHotels",
            "text" : "hotels in los angeles"
          }, {
            "entities" : [ ],
            "intent" : "SearchHotels",
            "text" : "can you show me hotels from los angeles?"
          }, {
            "entities" : [ {
              "endPos" : 56,
              "entity" : "Hotel",
              "startPos" : 31
            } ],
            "intent" : "ShowHotelsReviews",
            "text" : "can you show me the reviews of the amazing resort & hotel"
          }, {
            "entities" : [ {
              "endPos" : 46,
              "entity" : "Hotel",
              "startPos" : 24
            } ],
            "intent" : "ShowHotelsReviews",
            "text" : "what are the reviews of the hotel bot framework?"
          }, {
            "entities" : [ {
              "endPos" : 19,
              "entity" : "AirportCode",
              "startPos" : 17
            } ],
            "intent" : "SearchHotels",
            "text" : "find hotels near eze"
          }, {
            "entities" : [ {
              "endPos" : 24,
              "entity" : "AirportCode",
              "startPos" : 22
            } ],
            "intent" : "SearchHotels",
            "text" : "where can i stay near nnn?"
          }, {
            "entities" : [ {
              "endPos" : 19,
              "entity" : "AirportCode",
              "startPos" : 17
            } ],
            "intent" : "SearchHotels",
            "text" : "show hotels near att airport"
          }, {
            "entities" : [ {
              "endPos" : 19,
              "entity" : "AirportCode",
              "startPos" : 17
            } ],
            "intent" : "SearchHotels",
            "text" : "find hotels near agl"
          }, {
            "entities" : [ {
              "endPos" : 21,
              "entity" : "AirportCode",
              "startPos" : 19
            } ],
            "intent" : "SearchHotels",
            "text" : "find hotels around eze airport"
          }, {
            "entities" : [ ],
            "intent" : "dateintent",
            "text" : "01/7"
          } ],
          "versionId" : "0.1"
        }
      },
      "ModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the new entity extractor."
          }
        },
        "description" : "Object model for creating a new entity extractor.",
        "example" : {
          "name" : "DayOfWeek"
        }
      },
      "ModelInfo" : {
        "required" : [ "id", "readableType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Entity Model.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the Entity Model."
          },
          "readableType" : {
            "$ref" : "#/components/schemas/ReadableType"
          },
          "typeId" : {
            "type" : "integer",
            "description" : "The type ID of the Entity Model."
          }
        },
        "description" : "Base type used in entity types."
      },
      "ModelInfoResponse" : {
        "required" : [ "id", "readableType" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the Entity Model.",
            "format" : "uuid"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the Entity Model."
          },
          "readableType" : {
            "$ref" : "#/components/schemas/ReadableType"
          },
          "typeId" : {
            "type" : "integer",
            "description" : "The type ID of the Entity Model."
          }
        },
        "description" : "An application model info.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/HierarchicalEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/CompositeEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/ClosedListEntityExtractor"
        }, {
          "$ref" : "#/components/schemas/IntentClassifier"
        }, {
          "$ref" : "#/components/schemas/EntityExtractor"
        } ]
      },
      "ModelTrainingDetails" : {
        "type" : "object",
        "properties" : {
          "exampleCount" : {
            "type" : "integer",
            "description" : "The count of examples used to train the model."
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for the training failure."
          },
          "status" : {
            "$ref" : "#/components/schemas/TrainingStatus"
          },
          "statusId" : {
            "type" : "integer",
            "description" : "The train request status ID."
          },
          "trainingDateTime" : {
            "type" : "string",
            "description" : "When the model was trained.",
            "format" : "date-time"
          }
        },
        "description" : "Model Training Details."
      },
      "ModelTrainingInfo" : {
        "type" : "object",
        "properties" : {
          "details" : {
            "$ref" : "#/components/schemas/ModelTrainingDetails"
          },
          "modelId" : {
            "type" : "string",
            "description" : "The ID (GUID) of the model.",
            "format" : "uuid"
          }
        },
        "description" : "Model Training Info."
      },
      "ModelTrainingInfoList" : {
        "type" : "array",
        "description" : "List of Model Training Infos.",
        "items" : {
          "$ref" : "#/components/schemas/ModelTrainingInfo"
        }
      },
      "ModelUpdateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The entity's new name."
          }
        },
        "description" : "Object model for updating an intent classifier.",
        "example" : {
          "name" : "New Name"
        }
      },
      "ModelsInfoResponseObject" : {
        "type" : "array",
        "description" : "A list of application model infos.",
        "items" : {
          "$ref" : "#/components/schemas/ModelInfoResponse"
        }
      },
      "OperationError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "description" : "Operation error details when invoking an operation on the API."
      },
      "OperationStatus" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Status Code.",
            "enum" : [ "Failed", "FAILED", "Success" ]
          },
          "message" : {
            "type" : "string",
            "description" : "Status details."
          }
        },
        "description" : "Response of an Operation status."
      },
      "PatternCreateObject" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the feature."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The Regular Expression to match."
          }
        },
        "description" : "Object model for creating a Pattern feature.",
        "example" : {
          "name" : "EmailPattern",
          "pattern" : "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b"
        }
      },
      "PatternFeatureInfo" : {
        "properties" : {
          "pattern" : {
            "type" : "string",
            "description" : "The Regular Expression to match."
          }
        },
        "description" : "Pattern feature.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FeatureInfoObject"
        } ]
      },
      "PatternFeatureInfoList" : {
        "type" : "array",
        "description" : "List of Pattern features.",
        "items" : {
          "$ref" : "#/components/schemas/PatternFeatureInfo"
        }
      },
      "PatternUpdateObject" : {
        "type" : "object",
        "properties" : {
          "isActive" : {
            "type" : "boolean",
            "description" : "Indicates if the Pattern feature is enabled.",
            "default" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the feature."
          },
          "pattern" : {
            "type" : "string",
            "description" : "The Regular Expression to match."
          }
        },
        "description" : "Object model for updating an existing Pattern feature.",
        "example" : {
          "name" : "ModifiedEmailPattern",
          "pattern" : "\\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\b"
        }
      },
      "PersonalAssistantUrls" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Endpoint URLs for prebuilt Cortana applications."
      },
      "PersonalAssistantsResponse" : {
        "type" : "object",
        "properties" : {
          "endpointKeys" : {
            "$ref" : "#/components/schemas/EndpointKeys"
          },
          "endpointUrls" : {
            "$ref" : "#/components/schemas/PersonalAssistantUrls"
          }
        },
        "description" : "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications."
      },
      "PhraseListFeatureInfo" : {
        "properties" : {
          "isExchangeable" : {
            "type" : "boolean",
            "description" : "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true."
          },
          "phrases" : {
            "type" : "string",
            "description" : "A list of comma-separated values."
          }
        },
        "description" : "Phraselist Feature.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FeatureInfoObject"
        } ]
      },
      "PhraseListFeatureInfoList" : {
        "type" : "array",
        "description" : "List of Phraselist Features.",
        "items" : {
          "$ref" : "#/components/schemas/PhraseListFeatureInfo"
        }
      },
      "PhraselistCreateObject" : {
        "type" : "object",
        "properties" : {
          "isExchangeable" : {
            "type" : "boolean",
            "description" : "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
            "default" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The Phraselist name."
          },
          "phrases" : {
            "type" : "string",
            "description" : "List of comma-separated phrases that represent the Phraselist."
          }
        },
        "description" : "Object model for creating a phraselist model.",
        "example" : {
          "isExchangeable" : false,
          "name" : "DaysOfWeek",
          "phrases" : "monday,tuesday,wednesday,thursday,friday,saturday,sunday"
        }
      },
      "PhraselistUpdateObject" : {
        "type" : "object",
        "properties" : {
          "isActive" : {
            "type" : "boolean",
            "description" : "Indicates if the Phraselist is enabled.",
            "default" : true
          },
          "isExchangeable" : {
            "type" : "boolean",
            "description" : "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
            "default" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The Phraselist name."
          },
          "phrases" : {
            "type" : "string",
            "description" : "List of comma-separated phrases that represent the Phraselist."
          }
        },
        "description" : "Object model for updating a Phraselist.",
        "example" : {
          "name" : "DaysOfWeek",
          "phrases" : "monday,tuesday,wednesday,thursday,friday,saturday,sunday"
        }
      },
      "PrebuiltDomain" : {
        "type" : "object",
        "properties" : {
          "culture" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "entities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrebuiltDomainItem"
            }
          },
          "examples" : {
            "type" : "string"
          },
          "intents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrebuiltDomainItem"
            }
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Prebuilt Domain."
      },
      "PrebuiltDomainCreateBaseObject" : {
        "type" : "object",
        "properties" : {
          "domainName" : {
            "type" : "string",
            "description" : "The domain name."
          }
        },
        "description" : "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs.",
        "example" : {
          "domainName" : "Camera"
        }
      },
      "PrebuiltDomainCreateObject" : {
        "type" : "object",
        "properties" : {
          "culture" : {
            "type" : "string",
            "description" : "The culture of the new domain."
          },
          "domainName" : {
            "type" : "string",
            "description" : "The domain name."
          }
        },
        "description" : "A prebuilt domain create object containing the name and culture of the domain.",
        "example" : {
          "culture" : "en-US",
          "domainName" : "Web"
        }
      },
      "PrebuiltDomainItem" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "examples" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "PrebuiltDomainModelCreateObject" : {
        "type" : "object",
        "properties" : {
          "domainName" : {
            "type" : "string",
            "description" : "The domain name."
          },
          "modelName" : {
            "type" : "string",
            "description" : "The intent name or entity name."
          }
        },
        "description" : "A model object containing the name of the custom prebuilt intent or entity and the name of the domain to which this model belongs.",
        "example" : {
          "domainName" : "Camera",
          "modelName" : "AppName"
        }
      },
      "PrebuiltDomainsList" : {
        "type" : "array",
        "description" : "List of Prebuilt Domains.",
        "items" : {
          "$ref" : "#/components/schemas/PrebuiltDomain"
        }
      },
      "PrebuiltEntityExtractor" : {
        "description" : "Prebuilt Entity Extractor.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ModelInfo"
        } ]
      },
      "PrebuiltEntityExtractorsList" : {
        "type" : "array",
        "description" : "List of Prebuilt Entity Extractors.",
        "items" : {
          "$ref" : "#/components/schemas/PrebuiltEntityExtractor"
        }
      },
      "PrebuiltExtractorNames" : {
        "type" : "array",
        "description" : "Objet model for adding a prebuilt entity to the application.",
        "example" : [ "number", "ordinal" ],
        "items" : {
          "type" : "string"
        }
      },
      "ProductionOrStagingEndpointInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EndpointInfo"
        } ]
      },
      "ReadableType" : {
        "type" : "string",
        "description" : "Full name of the entity type.",
        "enum" : [ "Entity Extractor", "Hierarchical Entity Extractor", "Hierarchical Child Entity Extractor", "Composite Entity Extractor", "Closed List Entity Extractor", "Prebuilt Entity Extractor", "Intent Classifier" ]
      },
      "SubClosedList" : {
        "type" : "object",
        "properties" : {
          "canonicalForm" : {
            "type" : "string",
            "description" : "The standard form that the list represents."
          },
          "list" : {
            "type" : "array",
            "description" : "List of synonym words.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Sublist of items for a Closed list.",
        "example" : {
          "canonicalForm" : "BankName",
          "list" : [ "HSBC", "CitiBank" ]
        }
      },
      "SubClosedListResponse" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The sublist ID",
            "nullable" : false,
            "example" : 123456
          }
        },
        "description" : "Sublist of items for a Closed list.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubClosedList"
        } ]
      },
      "TaskUpdateObject" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "The new version for the cloned model."
          }
        },
        "description" : "Object model for cloning an application's version.",
        "example" : {
          "version" : "1.0"
        }
      },
      "TrainingStatus" : {
        "type" : "string",
        "description" : "The Trainning status.",
        "enum" : [ "Queued", "InProgress", "UpToDate", "Fail", "Success" ]
      },
      "UserAccessList" : {
        "type" : "object",
        "properties" : {
          "emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "owner" : {
            "type" : "string",
            "description" : "The email address of owner of the application."
          }
        },
        "description" : "List of user permissions."
      },
      "UserCollaborator" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "The email address of the user."
          }
        }
      },
      "VersionInfo" : {
        "required" : [ "trainingStatus", "version" ],
        "type" : "object",
        "properties" : {
          "assignedEndpointKey" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The endpoint key."
          },
          "createdDateTime" : {
            "type" : "string",
            "description" : "The version's creation timestamp.",
            "format" : "date-time"
          },
          "endpointHitsCount" : {
            "type" : "integer",
            "description" : "Number of calls made to this endpoint."
          },
          "endpointUrl" : {
            "type" : "string",
            "description" : "The Runtime endpoint URL for this model version."
          },
          "entitiesCount" : {
            "type" : "integer",
            "description" : "Number of entities in this model."
          },
          "externalApiKeys" : {
            "type" : "object",
            "description" : "External keys."
          },
          "intentsCount" : {
            "type" : "integer",
            "description" : "Number of intents in this model."
          },
          "lastModifiedDateTime" : {
            "type" : "string",
            "description" : "Timestamp of the last update.",
            "format" : "date-time"
          },
          "lastPublishedDateTime" : {
            "type" : "string",
            "description" : "Timestamp when was last published.",
            "format" : "date-time"
          },
          "lastTrainedDateTime" : {
            "type" : "string",
            "description" : "Timestamp of the last time the model was trained.",
            "format" : "date-time"
          },
          "trainingStatus" : {
            "type" : "string",
            "description" : "The current training status.",
            "enum" : [ "NeedsTraining", "InProgress", "Trained" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The version ID. E.g.: \"0.1\""
          }
        },
        "description" : "Object model of an application version."
      },
      "VersionResponse" : {
        "type" : "string",
        "description" : "The new version ID returned by when importing a model version.",
        "example" : "0.1"
      },
      "WordListBaseUpdateObject" : {
        "type" : "object",
        "properties" : {
          "canonicalForm" : {
            "type" : "string",
            "description" : "The standard form that the list represents."
          },
          "list" : {
            "type" : "array",
            "description" : "List of synonym words.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Object model for updating one of the closed list's sublists.",
        "example" : {
          "canonicalForm" : "California",
          "list" : [ "California", "CA", "Calif.", "Cal." ]
        }
      },
      "WordListObject" : {
        "type" : "object",
        "properties" : {
          "canonicalForm" : {
            "type" : "string",
            "description" : "The standard form that the list represents."
          },
          "list" : {
            "type" : "array",
            "description" : "List of synonym words.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Sublist of items for a Closed list.",
        "example" : {
          "canonicalForm" : "California",
          "list" : [ "California", "CA", "Calif.", "Cal." ]
        }
      }
    },
    "parameters" : {
      "AppIdInPath" : {
        "name" : "appId",
        "in" : "path",
        "description" : "The application ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "CEntityIdInPath" : {
        "name" : "cEntityId",
        "in" : "path",
        "description" : "The composite entity extractor ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "HEntityIdInPath" : {
        "name" : "hEntityId",
        "in" : "path",
        "description" : "The hierarchical entity extractor ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "IntentIdInPath" : {
        "name" : "intentId",
        "in" : "path",
        "description" : "The intent classifier ID.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "SkipInPath" : {
        "name" : "skip",
        "in" : "query",
        "description" : "The number of entries to skip. Default value is 0.",
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "default" : 0
        }
      },
      "TakeInPath" : {
        "name" : "take",
        "in" : "query",
        "description" : "The number of entries to return. Maximum page size is 500. Default is 100.",
        "schema" : {
          "maximum" : 500,
          "minimum" : 0,
          "type" : "integer",
          "default" : 100
        }
      },
      "VersionIdInPath" : {
        "name" : "versionId",
        "in" : "path",
        "description" : "The version ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "apiKeyHeader" : {
        "type" : "apiKey",
        "name" : "Ocp-Apim-Subscription-Key",
        "in" : "header"
      }
    }
  }
}