{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Adafruit IO REST API",
    "description" : "### The Internet of Things for Everyone\n\nThe Adafruit IO HTTP API provides access to your Adafruit IO data from any programming language or hardware environment that can speak HTTP. The easiest way to get started is with [an Adafruit IO learn guide](https://learn.adafruit.com/series/adafruit-io-basics) and [a simple Internet of Things capable device like the Feather Huzzah](https://www.adafruit.com/product/2821).\n\nThis API documentation is hosted on GitHub Pages and is available at [https://github.com/adafruit/io-api](https://github.com/adafruit/io-api). For questions or comments visit the [Adafruit IO Forums](https://forums.adafruit.com/viewforum.php?f=56) or the [adafruit-io channel on the Adafruit Discord server](https://discord.gg/adafruit).\n\n#### Authentication\n\nAuthentication for every API request happens through the `X-AIO-Key` header or query parameter and your IO API key. A simple cURL request to get all available feeds for a user with the username \"io_username\" and the key \"io_key_12345\" could look like this:\n\n    $ curl -H \"X-AIO-Key: io_key_12345\" https://io.adafruit.com/api/v2/io_username/feeds\n\nOr like this:\n\n    $ curl \"https://io.adafruit.com/api/v2/io_username/feeds?X-AIO-Key=io_key_12345\n\nUsing the node.js [request](https://github.com/request/request) library, IO HTTP requests are as easy as:\n\n```js\nvar request = require('request');\n\nvar options = {\n  url: 'https://io.adafruit.com/api/v2/io_username/feeds',\n  headers: {\n    'X-AIO-Key': 'io_key_12345',\n    'Content-Type': 'application/json'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    var feeds = JSON.parse(body);\n    console.log(feeds.length + \" FEEDS AVAILABLE\");\n\n    feeds.forEach(function (feed) {\n      console.log(feed.name, feed.key);\n    })\n  }\n}\n\nrequest(options, callback);\n```\n\nUsing the ESP8266 Arduino HTTPClient library, an HTTPS GET request would look like this (replacing `---` with your own values in the appropriate locations):\n\n```arduino\n/// based on\n/// https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266HTTPClient/examples/Authorization/Authorization.ino\n\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266WiFiMulti.h>\n#include <ESP8266HTTPClient.h>\n\nESP8266WiFiMulti WiFiMulti;\n\nconst char* ssid = \"---\";\nconst char* password = \"---\";\n\nconst char* host = \"io.adafruit.com\";\n\nconst char* io_key = \"---\";\nconst char* path_with_username = \"/api/v2/---/dashboards\";\n\n// Use web browser to view and copy\n// SHA1 fingerprint of the certificate\nconst char* fingerprint = \"77 00 54 2D DA E7 D8 03 27 31 23 99 EB 27 DB CB A5 4C 57 18\";\n\nvoid setup() {\n  Serial.begin(115200);\n\n  for(uint8_t t = 4; t > 0; t--) {\n    Serial.printf(\"[SETUP] WAIT %d...\\n\", t);\n    Serial.flush();\n    delay(1000);\n  }\n\n  WiFi.mode(WIFI_STA);\n  WiFiMulti.addAP(ssid, password);\n\n  // wait for WiFi connection\n  while(WiFiMulti.run() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(1000);\n  }\n\n  Serial.println(\"[WIFI] connected!\");\n\n  HTTPClient http;\n\n  // start request with URL and TLS cert fingerprint for verification\n  http.begin(\"https://\" + String(host) + String(path_with_username), fingerprint);\n\n  // IO API authentication\n  http.addHeader(\"X-AIO-Key\", io_key);\n\n  // start connection and send HTTP header\n  int httpCode = http.GET();\n\n  // httpCode will be negative on error\n  if(httpCode > 0) {\n    // HTTP header has been send and Server response header has been handled\n    Serial.printf(\"[HTTP] GET response: %d\\n\", httpCode);\n\n    // HTTP 200 OK\n    if(httpCode == HTTP_CODE_OK) {\n      String payload = http.getString();\n      Serial.println(payload);\n    }\n\n    http.end();\n  }\n}\n\nvoid loop() {}\n```\n\n#### Client Libraries\n\nWe have client libraries to help you get started with your project: [Python](https://github.com/adafruit/io-client-python), [Ruby](https://github.com/adafruit/io-client-ruby), [Arduino C++](https://github.com/adafruit/Adafruit_IO_Arduino), [Javascript](https://github.com/adafruit/adafruit-io-node), and [Go](https://github.com/adafruit/io-client-go) are available. They're all open source, so if they don't already do what you want, you can fork and add any feature you'd like.\n\n",
    "version" : "2.0.0"
  },
  "servers" : [ {
    "url" : "https://io.adafruit.com/api/v2"
  }, {
    "url" : "http://io.adafruit.com/api/v2"
  } ],
  "security" : [ {
    "HeaderKey" : null
  }, {
    "HeaderSignature" : null
  }, {
    "QueryKey" : null
  } ],
  "paths" : {
    "/user" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get information about the current user",
        "operationId" : "currentUser",
        "responses" : {
          "200" : {
            "description" : "A User record",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/webhooks/feed/:token" : {
      "post" : {
        "tags" : [ "Webhooks", "Data" ],
        "summary" : "Send data to a feed via webhook URL.",
        "operationId" : "createWebhookFeedData",
        "requestBody" : {
          "description" : "Webhook payload containing data `value` parameter.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New feed data record",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Data"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Data"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/webhooks/feed/:token/raw" : {
      "post" : {
        "tags" : [ "Webhooks", "Data" ],
        "summary" : "Send arbitrary data to a feed via webhook URL.",
        "description" : "The raw data webhook receiver accepts POST requests and stores the raw request body on your feed. This is useful when you don't have control of the webhook sender. If feed history is turned on, payloads will be truncated at 1024 bytes. If feed history is turned off, payloads will be truncated at 100KB.",
        "operationId" : "createRawWebhookFeedData",
        "responses" : {
          "200" : {
            "description" : "New feed data record",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Data"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Data"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/activities" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "All activities for current user",
        "description" : "The Activities endpoint returns information about the user's activities.",
        "operationId" : "allActivities",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "Start time for filtering, returns records created after given time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "End time for filtering, returns records created before give time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit the number of records returned.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of activities",
            "headers" : {
              "X-Pagination-Count" : {
                "description" : "The number of records returned.",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-Pagination-Limit" : {
                "description" : "The limit this request is using, either your given value or the default (1000).",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-Pagination-End" : {
                "description" : "The created_at value for the newest record returned.",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Pagination-Start" : {
                "description" : "The created_at value for the oldest record returned.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Activity"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Activity"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Activities" ],
        "summary" : "All activities for current user",
        "description" : "Delete all your activities.",
        "operationId" : "destroyActivities",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted activities successfully"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/activities/{type}" : {
      "get" : {
        "tags" : [ "Activities" ],
        "summary" : "Get activities by type for current user",
        "description" : "The Activities endpoint returns information about the user's activities.",
        "operationId" : "getActivity",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "Start time for filtering, returns records created after given time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "End time for filtering, returns records created before give time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit the number of records returned.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of activities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Activity"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Activity"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/dashboards" : {
      "get" : {
        "tags" : [ "Dashboards" ],
        "summary" : "All dashboards for current user",
        "description" : "The Dashboards endpoint returns information about the user's dashboards.\n",
        "operationId" : "allDashboards",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of dashboards",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Dashboard"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Dashboard"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Create a new Dashboard",
        "operationId" : "createDashboard",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New Dashboard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/dashboards/{dashboard_id}/blocks" : {
      "get" : {
        "tags" : [ "Blocks" ],
        "summary" : "All blocks for current user",
        "description" : "The Blocks endpoint returns information about the user's blocks.\n",
        "operationId" : "allBlocks",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of blocks",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Block"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Block"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Blocks" ],
        "summary" : "Create a new Block",
        "operationId" : "createBlock",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "block_feeds" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "feed_id" : {
                          "type" : "string"
                        },
                        "group_id" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "column" : {
                    "type" : "number"
                  },
                  "dashboard_id" : {
                    "type" : "number"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "properties" : {
                    "type" : "object"
                  },
                  "row" : {
                    "type" : "number"
                  },
                  "size_x" : {
                    "type" : "number"
                  },
                  "size_y" : {
                    "type" : "number"
                  },
                  "visual_type" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "block_feeds" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "feed_id" : {
                          "type" : "string"
                        },
                        "group_id" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "column" : {
                    "type" : "number"
                  },
                  "dashboard_id" : {
                    "type" : "number"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "properties" : {
                    "type" : "object"
                  },
                  "row" : {
                    "type" : "number"
                  },
                  "size_x" : {
                    "type" : "number"
                  },
                  "size_y" : {
                    "type" : "number"
                  },
                  "visual_type" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New Block",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/dashboards/{dashboard_id}/blocks/{id}" : {
      "get" : {
        "tags" : [ "Blocks" ],
        "summary" : "Returns Block based on ID",
        "operationId" : "getBlock",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Block response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error\""
          }
        }
      },
      "put" : {
        "tags" : [ "Blocks" ],
        "summary" : "Replace an existing Block",
        "operationId" : "replaceBlock",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "block_feeds" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "feed_id" : {
                          "type" : "string"
                        },
                        "group_id" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "column" : {
                    "type" : "number"
                  },
                  "dashboard_id" : {
                    "type" : "number"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "properties" : {
                    "type" : "object"
                  },
                  "row" : {
                    "type" : "number"
                  },
                  "size_x" : {
                    "type" : "number"
                  },
                  "size_y" : {
                    "type" : "number"
                  },
                  "visual_type" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "block_feeds" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "feed_id" : {
                          "type" : "string"
                        },
                        "group_id" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "column" : {
                    "type" : "number"
                  },
                  "dashboard_id" : {
                    "type" : "number"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "properties" : {
                    "type" : "object"
                  },
                  "row" : {
                    "type" : "number"
                  },
                  "size_x" : {
                    "type" : "number"
                  },
                  "size_y" : {
                    "type" : "number"
                  },
                  "visual_type" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated block",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Blocks" ],
        "summary" : "Delete an existing Block",
        "operationId" : "destroyBlock",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted Block successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Blocks" ],
        "summary" : "Update properties of an existing Block",
        "operationId" : "updateBlock",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboard_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "block_feeds" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "feed_id" : {
                          "type" : "string"
                        },
                        "group_id" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "column" : {
                    "type" : "number"
                  },
                  "dashboard_id" : {
                    "type" : "number"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "properties" : {
                    "type" : "object"
                  },
                  "row" : {
                    "type" : "number"
                  },
                  "size_x" : {
                    "type" : "number"
                  },
                  "size_y" : {
                    "type" : "number"
                  },
                  "visual_type" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "block_feeds" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "feed_id" : {
                          "type" : "string"
                        },
                        "group_id" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "column" : {
                    "type" : "number"
                  },
                  "dashboard_id" : {
                    "type" : "number"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "properties" : {
                    "type" : "object"
                  },
                  "row" : {
                    "type" : "number"
                  },
                  "size_x" : {
                    "type" : "number"
                  },
                  "size_y" : {
                    "type" : "number"
                  },
                  "visual_type" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Block",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Block"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/dashboards/{id}" : {
      "get" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Returns Dashboard based on ID",
        "operationId" : "getDashboard",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Dashboard response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error\""
          }
        }
      },
      "put" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Replace an existing Dashboard",
        "operationId" : "replaceDashboard",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated dashboard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Delete an existing Dashboard",
        "operationId" : "destroyDashboard",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted Dashboard successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Dashboards" ],
        "summary" : "Update properties of an existing Dashboard",
        "operationId" : "updateDashboard",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Dashboard",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dashboard"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds" : {
      "get" : {
        "tags" : [ "Feeds" ],
        "summary" : "All feeds for current user",
        "description" : "The Feeds endpoint returns information about the user's feeds. The response includes the latest value of each feed, and other metadata about each feed.",
        "operationId" : "allFeeds",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of feeds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Feed"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Feed"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Feeds" ],
        "summary" : "Create a new Feed",
        "operationId" : "createFeed",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New feed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}" : {
      "get" : {
        "tags" : [ "Feeds" ],
        "summary" : "Get feed by feed key",
        "description" : "Returns feed based on the feed key",
        "operationId" : "getFeed",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Feed response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "put" : {
        "tags" : [ "Feeds" ],
        "summary" : "Replace an existing Feed",
        "operationId" : "replaceFeed",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated feed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Feeds" ],
        "summary" : "Delete an existing Feed",
        "operationId" : "destroyFeed",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted feed successfully"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Feeds" ],
        "summary" : "Update properties of an existing Feed",
        "operationId" : "updateFeed",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated feed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Get all data for the given feed",
        "operationId" : "allData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "Start time for filtering, returns records created after given time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "End time for filtering, returns records created before give time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit the number of records returned.",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of Data record fields to include in response as comma separated list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. ",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of data",
            "headers" : {
              "X-Pagination-Count" : {
                "description" : "The number of records returned.",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-Pagination-Limit" : {
                "description" : "The limit this request is using, either your given value or the default (1000).",
                "schema" : {
                  "type" : "integer"
                }
              },
              "X-Pagination-End" : {
                "description" : "The created_at value for the newest record returned.",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Pagination-Start" : {
                "description" : "The created_at value for the oldest record returned.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Data" ],
        "summary" : "Create new Data",
        "description" : "Create new data records on the given feed.\n\n**NOTE:** when feed history is on, data `value` size is limited to 1KB, when feed history is turned off data value size is limited to 100KB.",
        "operationId" : "createData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data record including a `value` field (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Data"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Data"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/batch" : {
      "post" : {
        "tags" : [ "Data" ],
        "summary" : "Create multiple new Data records",
        "operationId" : "batchCreateData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A collection of data records including `value` (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "created_at" : {
                      "type" : "string",
                      "format" : "dateTime"
                    },
                    "ele" : {
                      "type" : "string"
                    },
                    "epoch" : {
                      "type" : "number"
                    },
                    "lat" : {
                      "type" : "string"
                    },
                    "lon" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "created_at" : {
                      "type" : "string",
                      "format" : "dateTime"
                    },
                    "ele" : {
                      "type" : "string"
                    },
                    "epoch" : {
                      "type" : "number"
                    },
                    "lat" : {
                      "type" : "string"
                    },
                    "lon" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/chart" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Chart data for current feed",
        "description" : "The Chart API is what we use on io.adafruit.com to populate charts over varying timespans with a consistent number of data points. The maximum number of points returned is 480. This API works by aggregating slices of time into a single value by averaging.\n\nAll time-based parameters are optional, if none are given it will default to 1 hour at the finest-grained resolution possible.",
        "operationId" : "chartData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "Start time for filtering, returns records created after given time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "End time for filtering, returns records created before give time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "resolution",
          "in" : "query",
          "description" : "A resolution size in minutes. By giving a resolution value you will get back grouped data points aggregated over resolution-sized intervals. NOTE: time span is preferred over resolution, so if you request a span of time that includes more than max limit points you may get a larger resolution than you requested. Valid resolutions are 1, 5, 10, 30, 60, and 120.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "hours",
          "in" : "query",
          "description" : "The number of hours the chart should cover.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON record containing chart data and the parameters used to generate it.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "columns" : {
                      "type" : "array",
                      "description" : "The names of the columns returned as data.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The actual chart data.",
                      "items" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "feed" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "integer"
                        },
                        "key" : {
                          "type" : "string"
                        },
                        "name" : {
                          "type" : "string"
                        }
                      }
                    },
                    "parameters" : {
                      "type" : "object"
                    }
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "columns" : {
                      "type" : "array",
                      "description" : "The names of the columns returned as data.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "data" : {
                      "type" : "array",
                      "description" : "The actual chart data.",
                      "items" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "feed" : {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "integer"
                        },
                        "key" : {
                          "type" : "string"
                        },
                        "name" : {
                          "type" : "string"
                        }
                      }
                    },
                    "parameters" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/first" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "First Data in Queue",
        "description" : "Get the oldest data point in the feed. This request sets the queue pointer to the beginning of the feed.",
        "operationId" : "firstData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of Data record fields to include in response as comma separated list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. ",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/last" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Last Data in Queue",
        "description" : "Get the most recent data point in the feed. This request sets the queue pointer to the end of the feed.",
        "operationId" : "lastData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of Data record fields to include in response as comma separated list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. ",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/next" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Next Data in Queue",
        "description" : "Get the next newest data point in the feed. If queue processing hasn't been started, the first data point in the feed will be returned.",
        "operationId" : "nextData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of Data record fields to include in response as comma separated list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. ",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/previous" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Previous Data in Queue",
        "description" : "Get the previously processed data point in the feed. NOTE: this method doesn't move the processing queue pointer.",
        "operationId" : "previousData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of Data record fields to include in response as comma separated list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. ",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/retain" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Last Data in MQTT CSV format",
        "description" : "Get the most recent data point in the feed in an MQTT compatible CSV format: `value,lat,lon,ele`",
        "operationId" : "retainData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CSV string in `value,lat,lon,ele` format. The lat, lon, and ele values are left blank if they are not set.",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/data/{id}" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "Returns data based on feed key",
        "operationId" : "getData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of Data record fields to include in response as comma separated list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. ",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "put" : {
        "tags" : [ "Data" ],
        "summary" : "Replace existing Data",
        "operationId" : "replaceData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data record including a `value` field (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Data" ],
        "summary" : "Delete existing Data",
        "operationId" : "destroyData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted Group successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Data" ],
        "summary" : "Update properties of existing Data",
        "operationId" : "updateData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data record including a `value` field (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/feeds/{feed_key}/details" : {
      "get" : {
        "tags" : [ "Feeds" ],
        "summary" : "Get detailed feed by feed key",
        "description" : "Returns more detailed feed record based on the feed key",
        "operationId" : "getFeedDetails",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Feed response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "All groups for current user",
        "description" : "The Groups endpoint returns information about the user's groups. The response includes the latest value of each feed in the group, and other metadata about the group.\n",
        "operationId" : "allGroups",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of groups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Create a new Group",
        "operationId" : "createGroup",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New Group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups/{group_key}" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Returns Group based on ID",
        "operationId" : "getGroup",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Group response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error\""
          }
        }
      },
      "put" : {
        "tags" : [ "Groups" ],
        "summary" : "Replace an existing Group",
        "operationId" : "replaceGroup",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Delete an existing Group",
        "operationId" : "destroyGroup",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted Group successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Groups" ],
        "summary" : "Update properties of an existing Group",
        "operationId" : "updateGroup",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups/{group_key}/add" : {
      "post" : {
        "tags" : [ "Groups", "Feeds" ],
        "summary" : "Add an existing Feed to a Group",
        "operationId" : "addFeedToGroup",
        "parameters" : [ {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups/{group_key}/data" : {
      "post" : {
        "tags" : [ "Data" ],
        "summary" : "Create new data for multiple feeds in a group",
        "operationId" : "createGroupData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "required" : [ "feeds" ],
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "description" : "Optional created_at timestamp which will be applied to all feed values created."
                  },
                  "feeds" : {
                    "type" : "array",
                    "description" : "An array of feed data records with `key` and `value` properties.",
                    "items" : {
                      "required" : [ "key", "value" ],
                      "type" : "object",
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "location" : {
                    "required" : [ "lat", "lon" ],
                    "type" : "object",
                    "properties" : {
                      "ele" : {
                        "type" : "number"
                      },
                      "lat" : {
                        "type" : "number"
                      },
                      "lon" : {
                        "type" : "number"
                      }
                    },
                    "description" : "A location record with `lat`, `lon`, and [optional] `ele` properties."
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "feeds" ],
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "description" : "Optional created_at timestamp which will be applied to all feed values created."
                  },
                  "feeds" : {
                    "type" : "array",
                    "description" : "An array of feed data records with `key` and `value` properties.",
                    "items" : {
                      "required" : [ "key", "value" ],
                      "type" : "object",
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "location" : {
                    "required" : [ "lat", "lon" ],
                    "type" : "object",
                    "properties" : {
                      "ele" : {
                        "type" : "number"
                      },
                      "lat" : {
                        "type" : "number"
                      },
                      "lon" : {
                        "type" : "number"
                      }
                    },
                    "description" : "A location record with `lat`, `lon`, and [optional] `ele` properties."
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups/{group_key}/feeds" : {
      "get" : {
        "tags" : [ "Groups", "Feeds" ],
        "summary" : "All feeds for current user in a given group",
        "description" : "The Group Feeds endpoint returns information about the user's feeds. The response includes the latest value of each feed, and other metadata about each feed, but only for feeds within the given group.",
        "operationId" : "allGroupFeeds",
        "parameters" : [ {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of feeds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Feed"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Feed"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Feeds" ],
        "summary" : "Create a new Feed in a Group",
        "operationId" : "createGroupFeed",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "license" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New feed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feed"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups/{group_key}/feeds/{feed_key}/data" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "All data for current feed in a specific group",
        "operationId" : "allGroupFeedData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "Start time for filtering data. Returns data created after given time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "End time for filtering data. Returns data created before give time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit the number of records returned.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Data" ],
        "summary" : "Create new Data in a feed belonging to a particular group",
        "operationId" : "createGroupFeedData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data record including a `value` field (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups/{group_key}/feeds/{feed_key}/data/batch" : {
      "post" : {
        "tags" : [ "Data" ],
        "summary" : "Create multiple new Data records in a feed belonging to a particular group",
        "operationId" : "batchCreateGroupFeedData",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "path",
          "description" : "a valid feed key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A collection of data records including `value` (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "created_at" : {
                      "type" : "string",
                      "format" : "dateTime"
                    },
                    "ele" : {
                      "type" : "string"
                    },
                    "epoch" : {
                      "type" : "number"
                    },
                    "lat" : {
                      "type" : "string"
                    },
                    "lon" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "created_at" : {
                      "type" : "string",
                      "format" : "dateTime"
                    },
                    "ele" : {
                      "type" : "string"
                    },
                    "epoch" : {
                      "type" : "number"
                    },
                    "lat" : {
                      "type" : "string"
                    },
                    "lon" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DataResponse"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/groups/{group_key}/remove" : {
      "post" : {
        "tags" : [ "Groups", "Feeds" ],
        "summary" : "Remove a Feed from a Group",
        "operationId" : "removeFeedFromGroup",
        "parameters" : [ {
          "name" : "group_key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feed_key",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated group",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/throttle" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get the user's data rate limit and current activity level.",
        "operationId" : "getCurrentUserThrottle",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Data rate limit and current actions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "active_data_rate" : {
                      "type" : "integer",
                      "description" : "Actions taken inside the time window."
                    },
                    "data_rate_limit" : {
                      "type" : "integer",
                      "description" : "Max possible actions inside the time window (usually 1 minute)."
                    }
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "active_data_rate" : {
                      "type" : "integer",
                      "description" : "Actions taken inside the time window."
                    },
                    "data_rate_limit" : {
                      "type" : "integer",
                      "description" : "Max possible actions inside the time window (usually 1 minute)."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/tokens" : {
      "get" : {
        "tags" : [ "Tokens" ],
        "summary" : "All tokens for current user",
        "description" : "The Tokens endpoint returns information about the user's tokens.\n",
        "operationId" : "allTokens",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of tokens",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Token"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Tokens" ],
        "summary" : "Create a new Token",
        "operationId" : "createToken",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New Token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/tokens/{id}" : {
      "get" : {
        "tags" : [ "Tokens" ],
        "summary" : "Returns Token based on ID",
        "operationId" : "getToken",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Token response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error\""
          }
        }
      },
      "put" : {
        "tags" : [ "Tokens" ],
        "summary" : "Replace an existing Token",
        "operationId" : "replaceToken",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Tokens" ],
        "summary" : "Delete an existing Token",
        "operationId" : "destroyToken",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted Token successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Tokens" ],
        "summary" : "Update properties of an existing Token",
        "operationId" : "updateToken",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Token",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/triggers" : {
      "get" : {
        "tags" : [ "Triggers" ],
        "summary" : "All triggers for current user",
        "description" : "The Triggers endpoint returns information about the user's triggers.\n",
        "operationId" : "allTriggers",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of triggers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Trigger"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Trigger"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Triggers" ],
        "summary" : "Create a new Trigger",
        "operationId" : "createTrigger",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New Trigger",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/triggers/{id}" : {
      "get" : {
        "tags" : [ "Triggers" ],
        "summary" : "Returns Trigger based on ID",
        "operationId" : "getTrigger",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error\""
          }
        }
      },
      "put" : {
        "tags" : [ "Triggers" ],
        "summary" : "Replace an existing Trigger",
        "operationId" : "replaceTrigger",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated trigger",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Triggers" ],
        "summary" : "Delete an existing Trigger",
        "operationId" : "destroyTrigger",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted Trigger successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Triggers" ],
        "summary" : "Update properties of an existing Trigger",
        "operationId" : "updateTrigger",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Trigger",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Trigger"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/{type}/{type_id}/acl" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "summary" : "All permissions for current user and type",
        "description" : "The Permissions endpoint returns information about the user's permissions.\n",
        "operationId" : "allPermissions",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of permissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Permission"
                  }
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Permissions" ],
        "summary" : "Create a new Permission",
        "operationId" : "createPermission",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mode" : {
                    "type" : "string",
                    "default" : "r",
                    "enum" : [ "r", "w", "rw" ]
                  },
                  "scope" : {
                    "type" : "string",
                    "default" : "public",
                    "enum" : [ "secret", "public", "user", "organization" ]
                  },
                  "scope_value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mode" : {
                    "type" : "string",
                    "default" : "r",
                    "enum" : [ "r", "w", "rw" ]
                  },
                  "scope" : {
                    "type" : "string",
                    "default" : "public",
                    "enum" : [ "secret", "public", "user", "organization" ]
                  },
                  "scope_value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "New Permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    "/{username}/{type}/{type_id}/acl/{id}" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "summary" : "Returns Permission based on ID",
        "operationId" : "getPermission",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Permission response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error\""
          }
        }
      },
      "put" : {
        "tags" : [ "Permissions" ],
        "summary" : "Replace an existing Permission",
        "operationId" : "replacePermission",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mode" : {
                    "type" : "string",
                    "default" : "r",
                    "enum" : [ "r", "w", "rw" ]
                  },
                  "scope" : {
                    "type" : "string",
                    "default" : "public",
                    "enum" : [ "secret", "public", "user", "organization" ]
                  },
                  "scope_value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mode" : {
                    "type" : "string",
                    "default" : "r",
                    "enum" : [ "r", "w", "rw" ]
                  },
                  "scope" : {
                    "type" : "string",
                    "default" : "public",
                    "enum" : [ "secret", "public", "user", "organization" ]
                  },
                  "scope_value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Permissions" ],
        "summary" : "Delete an existing Permission",
        "operationId" : "destroyPermission",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted Permission successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Permissions" ],
        "summary" : "Update properties of an existing Permission",
        "operationId" : "updatePermission",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "a valid username string",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mode" : {
                    "type" : "string",
                    "default" : "r",
                    "enum" : [ "r", "w", "rw" ]
                  },
                  "scope" : {
                    "type" : "string",
                    "default" : "public",
                    "enum" : [ "secret", "public", "user", "organization" ]
                  },
                  "scope_value" : {
                    "type" : "string"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "mode" : {
                    "type" : "string",
                    "default" : "r",
                    "enum" : [ "r", "w", "rw" ]
                  },
                  "scope" : {
                    "type" : "string",
                    "default" : "public",
                    "enum" : [ "secret", "public", "user", "organization" ]
                  },
                  "scope_value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated Permission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Activity" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "type" : "string",
            "readOnly" : true
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime",
            "readOnly" : true
          },
          "data" : {
            "type" : "object",
            "readOnly" : true
          },
          "id" : {
            "type" : "number",
            "readOnly" : true
          },
          "model" : {
            "type" : "string",
            "readOnly" : true
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime",
            "readOnly" : true
          },
          "user_id" : {
            "type" : "number",
            "readOnly" : true
          }
        }
      },
      "Block" : {
        "type" : "object",
        "properties" : {
          "block_feeds" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/BlockFeed"
            }
          },
          "column" : {
            "type" : "number"
          },
          "description" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "row" : {
            "type" : "number"
          },
          "size_x" : {
            "type" : "number"
          },
          "size_y" : {
            "type" : "number"
          },
          "visual_type" : {
            "type" : "string"
          }
        }
      },
      "BlockFeed" : {
        "type" : "object",
        "properties" : {
          "feed" : {
            "$ref" : "#/components/schemas/Feed"
          },
          "group" : {
            "$ref" : "#/components/schemas/Group"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "Dashboard" : {
        "type" : "object",
        "properties" : {
          "blocks" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Block"
            }
          },
          "description" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "Data" : {
        "type" : "object",
        "properties" : {
          "completed_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "created_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "created_epoch" : {
            "type" : "number",
            "readOnly" : true
          },
          "ele" : {
            "type" : "number"
          },
          "expiration" : {
            "type" : "string"
          },
          "feed_id" : {
            "type" : "number"
          },
          "group_id" : {
            "type" : "number",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "lat" : {
            "type" : "number"
          },
          "lon" : {
            "type" : "number"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "DataResponse" : {
        "type" : "object",
        "properties" : {
          "completed_at" : {
            "type" : "string"
          },
          "created_at" : {
            "type" : "string"
          },
          "created_epoch" : {
            "type" : "number"
          },
          "ele" : {
            "type" : "number"
          },
          "expiration" : {
            "type" : "string"
          },
          "feed_id" : {
            "type" : "number"
          },
          "group_id" : {
            "type" : "number"
          },
          "id" : {
            "type" : "string"
          },
          "lat" : {
            "type" : "number"
          },
          "lon" : {
            "type" : "number"
          },
          "updated_at" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Feed" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string"
          },
          "details" : {
            "type" : "object",
            "properties" : {
              "data" : {
                "type" : "object",
                "properties" : {
                  "count" : {
                    "type" : "integer",
                    "description" : "Number of data points stored by this feed."
                  },
                  "first" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/Data"
                    }
                  },
                  "last" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "$ref" : "#/components/schemas/Data"
                    }
                  }
                }
              },
              "shared_with" : {
                "type" : "array",
                "description" : "Access control list for this feed",
                "items" : {
                  "type" : "object"
                }
              }
            },
            "description" : "Additional details about this feed.",
            "readOnly" : true
          },
          "enabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "group" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ShallowGroup"
            },
            "readOnly" : true
          },
          "groups" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ShallowGroup"
            }
          },
          "history" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "number",
            "readOnly" : true
          },
          "key" : {
            "type" : "string"
          },
          "last_value" : {
            "type" : "string",
            "readOnly" : true
          },
          "license" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "readOnly" : true
          },
          "status_notify" : {
            "type" : "boolean",
            "description" : "Is status notification active?"
          },
          "status_timeout" : {
            "type" : "integer",
            "description" : "Status notification timeout in minutes."
          },
          "unit_symbol" : {
            "type" : "string"
          },
          "unit_type" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "visibility" : {
            "type" : "string",
            "default" : "private",
            "enum" : [ "private", "public" ]
          }
        }
      },
      "Group" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string"
          },
          "feeds" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Feed"
            }
          },
          "id" : {
            "type" : "number",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "Permission" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "number",
            "readOnly" : true
          },
          "model" : {
            "type" : "string",
            "default" : "feed",
            "enum" : [ "feed", "group", "dashboard" ]
          },
          "object_id" : {
            "type" : "number"
          },
          "scope" : {
            "type" : "string",
            "default" : "public",
            "enum" : [ "secret", "public", "user", "organization" ]
          },
          "scope_value" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "user_id" : {
            "type" : "number",
            "readOnly" : true
          }
        }
      },
      "ShallowGroup" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "number",
            "readOnly" : true
          },
          "name" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "Token" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          }
        }
      },
      "Trigger" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "color" : {
            "type" : "string",
            "readOnly" : true
          },
          "created_at" : {
            "type" : "string",
            "format" : "dateTime",
            "readOnly" : true
          },
          "id" : {
            "type" : "number",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "time_zone" : {
            "type" : "string",
            "readOnly" : true
          },
          "updated_at" : {
            "type" : "string",
            "format" : "dateTime",
            "readOnly" : true
          },
          "username" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      }
    },
    "parameters" : {
      "ActivityTypePath" : {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "DashboardIDPath" : {
        "name" : "dashboard_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "DataInclude" : {
        "name" : "include",
        "in" : "query",
        "description" : "List of Data record fields to include in response as comma separated list. Acceptable values are: `value`, `lat`, `lon`, `ele`, `id`, and `created_at`. ",
        "schema" : {
          "type" : "string"
        }
      },
      "EndTime" : {
        "name" : "end_time",
        "in" : "query",
        "description" : "End time for filtering, returns records created before give time.",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "FeedParam" : {
        "name" : "feed_key",
        "in" : "query",
        "schema" : {
          "type" : "string"
        }
      },
      "FeedPath" : {
        "name" : "feed_key",
        "in" : "path",
        "description" : "a valid feed key",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "GroupParam" : {
        "name" : "group_key",
        "in" : "query",
        "schema" : {
          "type" : "string"
        }
      },
      "GroupPath" : {
        "name" : "group_key",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "IDPath" : {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "Limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Limit the number of records returned.",
        "schema" : {
          "type" : "integer"
        }
      },
      "PermTypeIDPath" : {
        "name" : "type_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "PermTypePath" : {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "StartTime" : {
        "name" : "start_time",
        "in" : "query",
        "description" : "Start time for filtering, returns records created after given time.",
        "schema" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "UsernamePath" : {
        "name" : "username",
        "in" : "path",
        "description" : "a valid username string",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "Block" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "block_feeds" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "feed_id" : {
                        "type" : "string"
                      },
                      "group_id" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "column" : {
                  "type" : "number"
                },
                "dashboard_id" : {
                  "type" : "number"
                },
                "description" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "properties" : {
                  "type" : "object"
                },
                "row" : {
                  "type" : "number"
                },
                "size_x" : {
                  "type" : "number"
                },
                "size_y" : {
                  "type" : "number"
                },
                "visual_type" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      },
      "Dashboard" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "description" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      },
      "Data" : {
        "description" : "Data record including a `value` field (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "created_at" : {
                  "type" : "string",
                  "format" : "dateTime"
                },
                "ele" : {
                  "type" : "string"
                },
                "epoch" : {
                  "type" : "number"
                },
                "lat" : {
                  "type" : "string"
                },
                "lon" : {
                  "type" : "string"
                },
                "value" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      },
      "DataCollection" : {
        "description" : "A collection of data records including `value` (required) and optionally including: `lat`, `lon`, `ele` (latitude, longitude, and elevation values), and `created_at` (a date/time string).",
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "created_at" : {
                    "type" : "string",
                    "format" : "dateTime"
                  },
                  "ele" : {
                    "type" : "string"
                  },
                  "epoch" : {
                    "type" : "number"
                  },
                  "lat" : {
                    "type" : "string"
                  },
                  "lon" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "required" : true
      },
      "Feed" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "description" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string"
                },
                "license" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      },
      "Group" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "description" : {
                  "type" : "string"
                },
                "key" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      },
      "GroupFeedData" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "required" : [ "feeds" ],
              "type" : "object",
              "properties" : {
                "created_at" : {
                  "type" : "string",
                  "description" : "Optional created_at timestamp which will be applied to all feed values created."
                },
                "feeds" : {
                  "type" : "array",
                  "description" : "An array of feed data records with `key` and `value` properties.",
                  "items" : {
                    "required" : [ "key", "value" ],
                    "type" : "object",
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "location" : {
                  "required" : [ "lat", "lon" ],
                  "type" : "object",
                  "properties" : {
                    "ele" : {
                      "type" : "number"
                    },
                    "lat" : {
                      "type" : "number"
                    },
                    "lon" : {
                      "type" : "number"
                    }
                  },
                  "description" : "A location record with `lat`, `lon`, and [optional] `ele` properties."
                }
              }
            }
          }
        },
        "required" : true
      },
      "Permission" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "mode" : {
                  "type" : "string",
                  "default" : "r",
                  "enum" : [ "r", "w", "rw" ]
                },
                "scope" : {
                  "type" : "string",
                  "default" : "public",
                  "enum" : [ "secret", "public", "user", "organization" ]
                },
                "scope_value" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      },
      "Token" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "token" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      },
      "Trigger" : {
        "content" : {
          "*/*" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "HeaderKey" : {
        "type" : "apiKey",
        "description" : "The AIO Key is used to restrict or grant access to your data. The key is unique, and you can generate a key per feed, and control it in many different ways. The easiest process is to just use your automatically generated master key. You can access this key right from the right-hand side of your dashboard or from an individual feed page.",
        "name" : "X-AIO-Key",
        "in" : "header"
      },
      "HeaderSignature" : {
        "type" : "apiKey",
        "description" : "The AIO Signature is an AWS inspired request signature.",
        "name" : "X-AIO-Signature",
        "in" : "header"
      },
      "QueryKey" : {
        "type" : "apiKey",
        "description" : "The AIO Key is used to restrict or grant access to your data. The key is unique, and you can generate a key per feed, and control it in many different ways. The easiest process is to just use your automatically generated master key. You can access this key right from the right-hand side of your dashboard or from an individual feed page.",
        "name" : "X-AIO-Key",
        "in" : "query"
      }
    }
  }
}