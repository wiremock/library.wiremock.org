{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Software Plan RP",
    "description" : "Azure software plans let users create and manage licenses for various software used in Azure.",
    "version" : "2019-12-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/providers/Microsoft.SoftwarePlan/register" : {
      "post" : {
        "tags" : [ "Software plan" ],
        "description" : "Register to Microsoft.SoftwarePlan resource provider.",
        "operationId" : "SoftwarePlan_Register",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK - Microsoft.SoftwarePlan is registered"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits" : {
      "get" : {
        "tags" : [ "Hybrid use benefits" ],
        "description" : "Get all hybrid use benefits associated with an ARM resource.",
        "operationId" : "HybridUseBenefit_List",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Supports applying filter on the type of SKU",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - returns an array of plans at that scope",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HybridUseBenefitListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits/{planId}" : {
      "get" : {
        "tags" : [ "Hybrid use benefit" ],
        "description" : "Gets a given plan ID",
        "operationId" : "HybridUseBenefit_Get",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "description" : "This is a unique identifier for a plan. Should be a guid.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - returns the plan that is created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HybridUseBenefitModel"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Hybrid use benefit" ],
        "description" : "Create a new hybrid use benefit under a given scope",
        "operationId" : "HybridUseBenefit_Create",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "description" : "This is a unique identifier for a plan. Should be a guid.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for creating a hybrid use benefit",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HybridUseBenefitModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - returns the plan that is created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HybridUseBenefitModel"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Hybrid use benefit" ],
        "description" : "Deletes a given plan ID",
        "operationId" : "HybridUseBenefit_Delete",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "description" : "This is a unique identifier for a plan. Should be a guid.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - successfully deleted the given plan"
          },
          "204" : {
            "description" : "OK - there was no plan to delete"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Hybrid use benefit" ],
        "description" : "Updates an existing hybrid use benefit",
        "operationId" : "HybridUseBenefit_Update",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "description" : "This is a unique identifier for a plan. Should be a guid.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for creating a hybrid use benefit",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HybridUseBenefitModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK - successfully updated the given hybrid use benefit",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HybridUseBenefitModel"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits/{planId}/revisions" : {
      "get" : {
        "tags" : [ "Hybrid use benefit revisions" ],
        "description" : "Gets the version history of a hybrid use benefit",
        "operationId" : "HybridUseBenefitRevision_List",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "path",
          "description" : "This is a unique identifier for a plan. Should be a guid.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - returns an array of plans ordered by revision",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HybridUseBenefitListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/operations" : {
      "get" : {
        "tags" : [ "Software plan operations" ],
        "summary" : "Get operations.",
        "description" : "List all the operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The api-version to be used by the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all the operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/ErrorCode"
          },
          "message" : {
            "type" : "string",
            "description" : "A user readable error message. Localized based on x-ms-effective-locale header in the request"
          }
        },
        "description" : "Error object returned by the RP"
      },
      "ErrorCode" : {
        "type" : "string",
        "description" : "Defined error codes to be returned to the client.",
        "enum" : [ "InvalidRequestParameter", "MissingRequestParameter" ]
      },
      "HybridUseBenefitListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Url to get the next page of items."
          },
          "value" : {
            "type" : "array",
            "description" : "List of hybrid use benefits",
            "items" : {
              "$ref" : "#/components/schemas/HybridUseBenefitModel"
            }
          }
        },
        "description" : "List of hybrid use benefits"
      },
      "HybridUseBenefitModel" : {
        "required" : [ "sku" ],
        "properties" : {
          "etag" : {
            "type" : "integer",
            "description" : "Indicates the revision of the hybrid use benefit",
            "format" : "int32",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/HybridUseBenefitProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Response on GET of a hybrid use benefit",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly" : true
            },
            "name" : {
              "type" : "string",
              "description" : "The name of the resource",
              "readOnly" : true
            },
            "type" : {
              "type" : "string",
              "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
              "readOnly" : true
            }
          }
        } ]
      },
      "HybridUseBenefitProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "Created date",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastUpdatedDate" : {
            "type" : "string",
            "description" : "Last updated date",
            "format" : "date-time",
            "readOnly" : true
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          }
        },
        "description" : "Hybrid use benefit properties"
      },
      "OperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the operation"
          },
          "operation" : {
            "type" : "string",
            "description" : "Operation to be performed"
          },
          "provider" : {
            "type" : "string",
            "description" : "Resource Provider name"
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource that is acted upon"
          }
        },
        "description" : "Display fields for an operation."
      },
      "OperationList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Url to get the next page of items."
          },
          "value" : {
            "type" : "array",
            "description" : "List of all operations",
            "items" : {
              "$ref" : "#/components/schemas/OperationResponse"
            }
          }
        },
        "description" : "List all the operations."
      },
      "OperationResponse" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the operation"
          },
          "origin" : {
            "type" : "string",
            "description" : "Origin of the response"
          }
        },
        "description" : "Operation response."
      },
      "ProvisioningState" : {
        "type" : "string",
        "description" : "Represent the current state of the Reservation.",
        "enum" : [ "Succeeded", "Cancelled", "Failed" ]
      },
      "Sku" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the SKU to be applied"
          }
        },
        "description" : "The SKU to be applied for this resource"
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The api-version to be used by the service",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "PlanIdParameter" : {
        "name" : "planId",
        "in" : "path",
        "description" : "This is a unique identifier for a plan. Should be a guid.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ScopeParameter" : {
        "name" : "scope",
        "in" : "path",
        "description" : "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "PutBodyParameter" : {
        "description" : "Request body for creating a hybrid use benefit",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/HybridUseBenefitModel"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}