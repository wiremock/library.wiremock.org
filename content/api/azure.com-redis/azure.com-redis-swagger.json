{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "RedisManagementClient",
    "description" : "REST API for Azure Redis Cache Service.",
    "version" : "2018-03-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Cache/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available REST API operations of the Microsoft.Cache provider.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. The response describes the list of operations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/CheckNameAvailability" : {
      "post" : {
        "tags" : [ "Redis" ],
        "description" : "Checks that the redis cache name is valid and is not already in use.",
        "operationId" : "Redis_CheckNameAvailability",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CheckNameAvailability Redis operation. The only supported resource type is 'Microsoft.Cache/redis'",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Name is available"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cache/Redis" : {
      "get" : {
        "tags" : [ "Redis" ],
        "description" : "Gets all Redis caches in the specified subscription.",
        "operationId" : "Redis_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis" : {
      "get" : {
        "tags" : [ "Redis" ],
        "description" : "Lists all Redis caches in a resource group.",
        "operationId" : "Redis_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules" : {
      "get" : {
        "tags" : [ "Redis", "FirewallRules" ],
        "description" : "Gets all firewall rules in the specified redis cache.",
        "operationId" : "FirewallRules_ListByRedisResource",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cacheName",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully got the current rules",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisFirewallRuleListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/firewallRules/{ruleName}" : {
      "get" : {
        "tags" : [ "Redis", "FirewallRules" ],
        "description" : "Gets a single firewall rule in a specified redis cache.",
        "operationId" : "FirewallRules_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cacheName",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleName",
          "in" : "path",
          "description" : "The name of the firewall rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully found the rule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisFirewallRule"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Redis", "FirewallRules" ],
        "description" : "Create or update a redis cache firewall rule",
        "operationId" : "FirewallRules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cacheName",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleName",
          "in" : "path",
          "description" : "The name of the firewall rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create or update redis firewall rule operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RedisFirewallRuleCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Resource was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisFirewallRule"
                }
              }
            }
          },
          "201" : {
            "description" : "Resource was successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisFirewallRule"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Redis", "FirewallRules" ],
        "description" : "Deletes a single firewall rule in a specified redis cache.",
        "operationId" : "FirewallRules_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cacheName",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleName",
          "in" : "path",
          "description" : "The name of the firewall rule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the rule"
          },
          "204" : {
            "description" : "Successfully deleted the rule"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{cacheName}/patchSchedules" : {
      "get" : {
        "tags" : [ "Redis", "PatchSchedules" ],
        "description" : "Gets all patch schedules in the specified redis cache (there is only one).",
        "operationId" : "PatchSchedules_ListByRedisResource",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cacheName",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully got the current patch schedules",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisPatchScheduleListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}" : {
      "get" : {
        "tags" : [ "Redis" ],
        "description" : "Gets a Redis cache (resource description).",
        "operationId" : "Redis_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The redis cache was successfully found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisResource"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Redis" ],
        "description" : "Create or replace (overwrite/recreate, with potential downtime) an existing Redis cache.",
        "operationId" : "Redis_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Create Redis operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RedisCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisResource"
                }
              }
            }
          },
          "201" : {
            "description" : "The new redis cache was successfully created. Check provisioningState to see detailed status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisResource"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Redis" ],
        "description" : "Deletes a Redis cache.",
        "operationId" : "Redis_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The redis cache was successfully deleted."
          },
          "202" : {
            "description" : "The redis cache 'delete' operation was successfully enqueued; follow the Location header to poll for final outcome."
          },
          "204" : {
            "description" : "The redis cache was successfully deleted."
          }
        }
      },
      "patch" : {
        "tags" : [ "Redis" ],
        "description" : "Update an existing Redis cache.",
        "operationId" : "Redis_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Update Redis operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RedisUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The existing redis cache was successfully updated. Check provisioningState to see detailed status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisResource"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/export" : {
      "post" : {
        "tags" : [ "Redis" ],
        "description" : "Export data from the redis cache to blobs in a container.",
        "operationId" : "Redis_ExportData",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for Redis export operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportRDBParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Export operation succeeded."
          },
          "202" : {
            "description" : "Export operation successfully enqueued; follow the Location header to poll for final outcome."
          },
          "204" : {
            "description" : "Export operation succeeded."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/forceReboot" : {
      "post" : {
        "tags" : [ "Redis" ],
        "description" : "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.",
        "operationId" : "Redis_ForceReboot",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Specifies which Redis node(s) to reboot.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RedisRebootParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Reboot operation successfully enqueued",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisForceRebootResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/import" : {
      "post" : {
        "tags" : [ "Redis" ],
        "description" : "Import data into Redis cache.",
        "operationId" : "Redis_ImportData",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for Redis import operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportRDBParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Import operation succeeded."
          },
          "202" : {
            "description" : "Import operation successfully enqueued; follow the Location header to poll for final outcome."
          },
          "204" : {
            "description" : "Import operation succeeded."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers" : {
      "get" : {
        "tags" : [ "Redis" ],
        "description" : "Gets the list of linked servers associated with this redis cache (requires Premium SKU).",
        "operationId" : "LinkedServer_List",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response of get linked servers.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisLinkedServerWithPropertiesList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/linkedServers/{linkedServerName}" : {
      "get" : {
        "tags" : [ "Redis" ],
        "description" : "Gets the detailed information about a linked server of a redis cache (requires Premium SKU).",
        "operationId" : "LinkedServer_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedServerName",
          "in" : "path",
          "description" : "The name of the linked server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response of get linked server.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisLinkedServerWithProperties"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Redis" ],
        "description" : "Adds a linked server to the Redis cache (requires Premium SKU).",
        "operationId" : "LinkedServer_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedServerName",
          "in" : "path",
          "description" : "The name of the linked server that is being added to the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Create Linked server operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RedisLinkedServerCreateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The linked server was successfully added.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisLinkedServerWithProperties"
                }
              }
            }
          },
          "201" : {
            "description" : "The linked server was successfully added.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisLinkedServerWithProperties"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Redis" ],
        "description" : "Deletes the linked server from a redis cache (requires Premium SKU).",
        "operationId" : "LinkedServer_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedServerName",
          "in" : "path",
          "description" : "The name of the linked server that is being added to the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Linked server was successfully deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listKeys" : {
      "post" : {
        "tags" : [ "Redis" ],
        "description" : "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.",
        "operationId" : "Redis_ListKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lists the keys for the specified Redis cache.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisAccessKeys"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/listUpgradeNotifications" : {
      "get" : {
        "tags" : [ "Redis" ],
        "description" : "Gets any upgrade notifications for a Redis cache.",
        "operationId" : "Redis_ListUpgradeNotifications",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "history",
          "in" : "query",
          "description" : "how many minutes in past to look for upgrade notifications",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "double"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "All upgrade notifications in given time range",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/patchSchedules/{default}" : {
      "get" : {
        "tags" : [ "Redis", "PatchSchedules" ],
        "description" : "Gets the patching schedule of a redis cache (requires Premium SKU).",
        "operationId" : "PatchSchedules_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "default",
          "in" : "path",
          "description" : "Default string modeled as parameter for auto generation to work correctly.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response of get patch schedules.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisPatchSchedule"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Redis", "PatchSchedules" ],
        "description" : "Create or replace the patching schedule for Redis cache (requires Premium SKU).",
        "operationId" : "PatchSchedules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "default",
          "in" : "path",
          "description" : "Default string modeled as parameter for auto generation to work correctly.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to set the patching schedule for Redis cache.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RedisPatchSchedule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The patch schedule was successfully updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisPatchSchedule"
                }
              }
            }
          },
          "201" : {
            "description" : "The patch schedule was successfully created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisPatchSchedule"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Redis", "PatchSchedules" ],
        "description" : "Deletes the patching schedule of a redis cache (requires Premium SKU).",
        "operationId" : "PatchSchedules_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "default",
          "in" : "path",
          "description" : "Default string modeled as parameter for auto generation to work correctly.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success."
          },
          "204" : {
            "description" : "Success."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{name}/regenerateKey" : {
      "post" : {
        "tags" : [ "Redis" ],
        "description" : "Regenerate Redis cache's access keys. This operation requires write permission to the cache resource.",
        "operationId" : "Redis_RegenerateKey",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the Redis cache.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Specifies which key to regenerate.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RedisRegenerateKeyParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Lists the regenerated keys for Redis Cache",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RedisAccessKeys"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CheckNameAvailabilityParameters" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Resource name."
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type. The only legal value of this property for checking redis cache name availability is 'Microsoft.Cache/redis'."
          }
        },
        "description" : "Parameters body to pass for resource name availability check."
      },
      "ExportRDBParameters" : {
        "required" : [ "container", "prefix" ],
        "type" : "object",
        "properties" : {
          "container" : {
            "type" : "string",
            "description" : "Container name to export to."
          },
          "format" : {
            "type" : "string",
            "description" : "File format."
          },
          "prefix" : {
            "type" : "string",
            "description" : "Prefix to use for exported files."
          }
        },
        "description" : "Parameters for Redis export operation."
      },
      "ImportRDBParameters" : {
        "required" : [ "files" ],
        "type" : "object",
        "properties" : {
          "files" : {
            "type" : "array",
            "description" : "files to import.",
            "items" : {
              "type" : "string"
            }
          },
          "format" : {
            "type" : "string",
            "description" : "File format."
          }
        },
        "description" : "Parameters for Redis import operation."
      },
      "NotificationListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of notifications.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of all notifications.",
            "items" : {
              "$ref" : "#/components/schemas/UpgradeNotification"
            }
          }
        },
        "description" : "The response of listUpgradeNotifications."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Friendly name of the operation"
              },
              "operation" : {
                "type" : "string",
                "description" : "Operation type: read, write, delete, listKeys/action, etc."
              },
              "provider" : {
                "type" : "string",
                "description" : "Friendly name of the resource provider"
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource type on which the operation is performed."
              }
            },
            "description" : "The object that describes the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}"
          }
        },
        "description" : "REST API operation"
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of operations supported by the resource provider.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results."
      },
      "ProxyResource" : {
        "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RedisAccessKeys" : {
        "type" : "object",
        "properties" : {
          "primaryKey" : {
            "type" : "string",
            "description" : "The current primary key that clients can use to authenticate with Redis cache.",
            "readOnly" : true
          },
          "secondaryKey" : {
            "type" : "string",
            "description" : "The current secondary key that clients can use to authenticate with Redis cache.",
            "readOnly" : true
          }
        },
        "description" : "Redis cache access keys."
      },
      "RedisCommonProperties" : {
        "type" : "object",
        "properties" : {
          "enableNonSslPort" : {
            "type" : "boolean",
            "description" : "Specifies whether the non-ssl Redis server port (6379) is enabled."
          },
          "minimumTlsVersion" : {
            "type" : "string",
            "description" : "Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')",
            "enum" : [ "1.0", "1.1", "1.2" ]
          },
          "redisConfiguration" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc."
          },
          "shardCount" : {
            "type" : "integer",
            "description" : "The number of shards to be created on a Premium Cluster Cache.",
            "format" : "int32"
          },
          "tenantSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A dictionary of tenant settings"
          }
        },
        "description" : "Create/Update/Get common properties of the redis cache."
      },
      "RedisCreateParameters" : {
        "required" : [ "location", "properties" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The geo-location where the resource lives"
          },
          "properties" : {
            "$ref" : "#/components/schemas/RedisCreateProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          },
          "zones" : {
            "type" : "array",
            "description" : "A list of availability zones denoting where the resource needs to come from.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Parameters supplied to the Create Redis operation."
      },
      "RedisCreateProperties" : {
        "required" : [ "sku" ],
        "properties" : {
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "staticIP" : {
            "pattern" : "^\\d+\\.\\d+\\.\\d+\\.\\d+$",
            "type" : "string",
            "description" : "Static IP address. Required when deploying a Redis cache inside an existing Azure Virtual Network."
          },
          "subnetId" : {
            "pattern" : "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$",
            "type" : "string",
            "description" : "The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1"
          }
        },
        "description" : "Properties supplied to Create Redis operation.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RedisCommonProperties"
        } ]
      },
      "RedisFirewallRule" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RedisFirewallRuleProperties"
          }
        },
        "description" : "A firewall rule on a redis cache has a name, and describes a contiguous range of IP addresses permitted to connect",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "RedisFirewallRuleCreateParameters" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RedisFirewallRuleProperties"
          }
        },
        "description" : "Parameters required for creating a firewall rule on redis cache."
      },
      "RedisFirewallRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list firewall rules operation.",
            "items" : {
              "$ref" : "#/components/schemas/RedisFirewallRule"
            }
          }
        },
        "description" : "The response of list firewall rules Redis operation."
      },
      "RedisFirewallRuleProperties" : {
        "required" : [ "endIP", "startIP" ],
        "type" : "object",
        "properties" : {
          "endIP" : {
            "type" : "string",
            "description" : "highest IP address included in the range"
          },
          "startIP" : {
            "type" : "string",
            "description" : "lowest IP address included in the range"
          }
        },
        "description" : "Specifies a range of IP addresses permitted to connect to the cache"
      },
      "RedisForceRebootResponse" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Status message",
            "readOnly" : true
          }
        },
        "description" : "Response to force reboot for Redis cache."
      },
      "RedisLinkedServer" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Linked server Id.",
            "readOnly" : true
          }
        },
        "description" : "Linked server Id"
      },
      "RedisLinkedServerCreateParameters" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RedisLinkedServerCreateProperties"
          }
        },
        "description" : "Parameter required for creating a linked server to redis cache."
      },
      "RedisLinkedServerCreateProperties" : {
        "required" : [ "linkedRedisCacheId", "linkedRedisCacheLocation", "serverRole" ],
        "type" : "object",
        "properties" : {
          "linkedRedisCacheId" : {
            "type" : "string",
            "description" : "Fully qualified resourceId of the linked redis cache."
          },
          "linkedRedisCacheLocation" : {
            "type" : "string",
            "description" : "Location of the linked redis cache."
          },
          "serverRole" : {
            "type" : "string",
            "description" : "Role of the linked server.",
            "enum" : [ "Primary", "Secondary" ]
          }
        },
        "description" : "Create properties for a linked server"
      },
      "RedisLinkedServerProperties" : {
        "properties" : {
          "provisioningState" : {
            "type" : "string",
            "description" : "Terminal state of the link between primary and secondary redis cache.",
            "readOnly" : true
          }
        },
        "description" : "Properties of a linked server to be returned in get/put response",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RedisLinkedServerCreateProperties"
        } ]
      },
      "RedisLinkedServerWithProperties" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RedisLinkedServerProperties"
          }
        },
        "description" : "Response to put/get linked server (with properties) for Redis cache.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "RedisLinkedServerWithPropertiesList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of linked servers (with properties) of a Redis cache.",
            "items" : {
              "$ref" : "#/components/schemas/RedisLinkedServerWithProperties"
            }
          }
        },
        "description" : "List of linked servers (with properties) of a Redis cache."
      },
      "RedisListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of Redis cache instances.",
            "items" : {
              "$ref" : "#/components/schemas/RedisResource"
            }
          }
        },
        "description" : "The response of list Redis operation."
      },
      "RedisPatchSchedule" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ScheduleEntries"
          }
        },
        "description" : "Response to put/get patch schedules for Redis cache.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "RedisPatchScheduleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list patch schedules operation.",
            "items" : {
              "$ref" : "#/components/schemas/RedisPatchSchedule"
            }
          }
        },
        "description" : "The response of list patch schedules Redis operation."
      },
      "RedisProperties" : {
        "properties" : {
          "accessKeys" : {
            "$ref" : "#/components/schemas/RedisAccessKeys"
          },
          "hostName" : {
            "type" : "string",
            "description" : "Redis host name.",
            "readOnly" : true
          },
          "linkedServers" : {
            "type" : "array",
            "description" : "List of the linked servers associated with the cache",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RedisLinkedServer"
            }
          },
          "port" : {
            "type" : "integer",
            "description" : "Redis non-SSL port.",
            "format" : "int32",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Redis instance provisioning status.",
            "readOnly" : true,
            "enum" : [ "Creating", "Deleting", "Disabled", "Failed", "Linking", "Provisioning", "RecoveringScaleFailure", "Scaling", "Succeeded", "Unlinking", "Unprovisioning", "Updating" ]
          },
          "redisVersion" : {
            "type" : "string",
            "description" : "Redis version.",
            "readOnly" : true
          },
          "sslPort" : {
            "type" : "integer",
            "description" : "Redis SSL port.",
            "format" : "int32",
            "readOnly" : true
          }
        },
        "description" : "Properties of the redis cache.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RedisCreateProperties"
        } ]
      },
      "RedisRebootParameters" : {
        "required" : [ "rebootType" ],
        "type" : "object",
        "properties" : {
          "rebootType" : {
            "type" : "string",
            "description" : "Which Redis node(s) to reboot. Depending on this value data loss is possible.",
            "enum" : [ "PrimaryNode", "SecondaryNode", "AllNodes" ]
          },
          "shardId" : {
            "type" : "integer",
            "description" : "If clustering is enabled, the ID of the shard to be rebooted.",
            "format" : "int32"
          }
        },
        "description" : "Specifies which Redis node(s) to reboot."
      },
      "RedisRegenerateKeyParameters" : {
        "required" : [ "keyType" ],
        "type" : "object",
        "properties" : {
          "keyType" : {
            "type" : "string",
            "description" : "The Redis access key to regenerate.",
            "enum" : [ "Primary", "Secondary" ]
          }
        },
        "description" : "Specifies which Redis access keys to reset."
      },
      "RedisResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RedisProperties"
          },
          "zones" : {
            "type" : "array",
            "description" : "A list of availability zones denoting where the resource needs to come from.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A single Redis item in List or Get Operation.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "RedisUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RedisUpdateProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "Parameters supplied to the Update Redis operation."
      },
      "RedisUpdateProperties" : {
        "properties" : {
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Patchable properties of the redis cache.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RedisCommonProperties"
        } ]
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "The Resource definition."
      },
      "ScheduleEntries" : {
        "required" : [ "scheduleEntries" ],
        "type" : "object",
        "properties" : {
          "scheduleEntries" : {
            "type" : "array",
            "description" : "List of patch schedules for a Redis cache.",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleEntry"
            }
          }
        },
        "description" : "List of patch schedules for a Redis cache."
      },
      "ScheduleEntry" : {
        "required" : [ "dayOfWeek", "startHourUtc" ],
        "type" : "object",
        "properties" : {
          "dayOfWeek" : {
            "type" : "string",
            "description" : "Day of the week when a cache can be patched.",
            "enum" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Everyday", "Weekend" ]
          },
          "maintenanceWindow" : {
            "type" : "string",
            "description" : "ISO8601 timespan specifying how much time cache patching can take. ",
            "format" : "duration"
          },
          "startHourUtc" : {
            "type" : "integer",
            "description" : "Start hour after which cache patching can start.",
            "format" : "int32"
          }
        },
        "description" : "Patch schedule entry for a Premium Redis Cache."
      },
      "Sku" : {
        "required" : [ "capacity", "family", "name" ],
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "integer",
            "description" : "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).",
            "format" : "int32"
          },
          "family" : {
            "type" : "string",
            "description" : "The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium).",
            "enum" : [ "C", "P" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)",
            "enum" : [ "Basic", "Standard", "Premium" ]
          }
        },
        "description" : "SKU parameters supplied to the create Redis operation."
      },
      "TrackedResource" : {
        "required" : [ "location" ],
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The geo-location where the resource lives"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "The resource model definition for a ARM tracked top level resource",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "UpgradeNotification" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of upgrade notification.",
            "readOnly" : true
          },
          "timestamp" : {
            "type" : "string",
            "description" : "Timestamp when upgrade notification occurred.",
            "format" : "date-time",
            "readOnly" : true
          },
          "upsellNotification" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Details about this upgrade notification",
            "readOnly" : true
          }
        },
        "description" : "Properties of upgrade notification."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client Api Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}