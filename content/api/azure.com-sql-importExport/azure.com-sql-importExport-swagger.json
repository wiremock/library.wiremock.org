{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure SQL Database Import/Export spec",
    "description" : "Provides create and read functionality for Import/Export operations on Azure SQL databases.",
    "version" : "2014-04-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export" : {
      "post" : {
        "tags" : [ "ImportExport" ],
        "description" : "Exports a database to a bacpac.",
        "operationId" : "Databases_Export",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database to be exported.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for exporting a database.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportExportResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}" : {
      "put" : {
        "tags" : [ "ImportExport" ],
        "description" : "Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.",
        "operationId" : "Databases_CreateImportOperation",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the database to import into",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extensionName",
          "in" : "path",
          "description" : "The name of the operation to perform",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "import" ]
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for importing a Bacpac into a database.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportExtensionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportExportResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import" : {
      "post" : {
        "tags" : [ "ImportExport" ],
        "description" : "Imports a bacpac into a new database. ",
        "operationId" : "Databases_Import",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serverName",
          "in" : "path",
          "description" : "The name of the server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The required parameters for importing a Bacpac into a database.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportExportResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ExportRequest" : {
        "required" : [ "administratorLogin", "administratorLoginPassword", "storageKey", "storageKeyType", "storageUri" ],
        "type" : "object",
        "properties" : {
          "administratorLogin" : {
            "type" : "string",
            "description" : "The name of the SQL administrator."
          },
          "administratorLoginPassword" : {
            "type" : "string",
            "description" : "The password of the SQL administrator."
          },
          "authenticationType" : {
            "type" : "string",
            "description" : "The authentication type.",
            "default" : "SQL",
            "enum" : [ "SQL", "ADPassword" ]
          },
          "storageKey" : {
            "type" : "string",
            "description" : "The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a \"?.\""
          },
          "storageKeyType" : {
            "type" : "string",
            "description" : "The type of the storage key to use.",
            "enum" : [ "StorageAccessKey", "SharedAccessKey" ]
          },
          "storageUri" : {
            "type" : "string",
            "description" : "The storage uri to use."
          }
        },
        "description" : "Export database parameters."
      },
      "ImportExportResponse" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ImportExportResponseProperties"
          }
        },
        "description" : "Response for Import/Export Get operation.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "ImportExportResponseProperties" : {
        "type" : "object",
        "properties" : {
          "blobUri" : {
            "type" : "string",
            "description" : "The blob uri.",
            "readOnly" : true
          },
          "databaseName" : {
            "type" : "string",
            "description" : "The name of the database.",
            "readOnly" : true
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "The error message returned from the server.",
            "readOnly" : true
          },
          "lastModifiedTime" : {
            "type" : "string",
            "description" : "The operation status last modified time.",
            "readOnly" : true
          },
          "queuedTime" : {
            "type" : "string",
            "description" : "The operation queued time.",
            "readOnly" : true
          },
          "requestId" : {
            "type" : "string",
            "description" : "The request type of the operation.",
            "format" : "uuid",
            "readOnly" : true
          },
          "requestType" : {
            "type" : "string",
            "description" : "The request type of the operation.",
            "readOnly" : true
          },
          "serverName" : {
            "type" : "string",
            "description" : "The name of the server.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status message returned from the server.",
            "readOnly" : true
          }
        },
        "description" : "Response for Import/Export Status operation."
      },
      "ImportExtensionProperties" : {
        "required" : [ "operationMode" ],
        "properties" : {
          "operationMode" : {
            "type" : "string",
            "description" : "The type of import operation being performed. This is always Import.",
            "enum" : [ "Import" ]
          }
        },
        "description" : "Represents the properties for an import operation",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExportRequest"
        } ]
      },
      "ImportExtensionRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the extension."
          },
          "properties" : {
            "$ref" : "#/components/schemas/ImportExtensionProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the extension."
          }
        },
        "description" : "Import database parameters."
      },
      "ImportRequest" : {
        "required" : [ "databaseName", "edition", "maxSizeBytes", "serviceObjectiveName" ],
        "properties" : {
          "databaseName" : {
            "type" : "string",
            "description" : "The name of the database to import."
          },
          "edition" : {
            "type" : "string",
            "description" : "The edition for the database being created.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n",
            "enum" : [ "Web", "Business", "Basic", "Standard", "Premium", "PremiumRS", "Free", "Stretch", "DataWarehouse", "System", "System2", "GeneralPurpose", "BusinessCritical", "Hyperscale" ]
          },
          "maxSizeBytes" : {
            "type" : "string",
            "description" : "The maximum size for the newly imported database."
          },
          "serviceObjectiveName" : {
            "type" : "string",
            "description" : "The name of the service objective to assign to the database.",
            "enum" : [ "System", "System0", "System1", "System2", "System3", "System4", "System2L", "System3L", "System4L", "Free", "Basic", "S0", "S1", "S2", "S3", "S4", "S6", "S7", "S9", "S12", "P1", "P2", "P3", "P4", "P6", "P11", "P15", "PRS1", "PRS2", "PRS4", "PRS6", "DW100", "DW200", "DW300", "DW400", "DW500", "DW600", "DW1000", "DW1200", "DW1000c", "DW1500", "DW1500c", "DW2000", "DW2000c", "DW3000", "DW2500c", "DW3000c", "DW6000", "DW5000c", "DW6000c", "DW7500c", "DW10000c", "DW15000c", "DW30000c", "DS100", "DS200", "DS300", "DS400", "DS500", "DS600", "DS1000", "DS1200", "DS1500", "DS2000", "ElasticPool" ]
          }
        },
        "description" : "Import database parameters.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExportRequest"
        } ]
      }
    },
    "parameters" : {
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}