{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "AuthorizationManagementClient",
    "description" : "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations allow you to manage role definitions. A role definition describes the set of actions that can be performed on resources.",
    "version" : "2018-01-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "description" : "Gets all permissions the caller has for a resource group.",
        "operationId" : "Permissions_ListForResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of permissions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionGetResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "description" : "Gets all permissions the caller has for a resource.",
        "operationId" : "Permissions_ListForResource",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceProviderNamespace",
          "in" : "path",
          "description" : "The namespace of the resource provider.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentResourcePath",
          "in" : "path",
          "description" : "The parent resource identity.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The resource type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the resource to get the permissions for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of permissions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermissionGetResult"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions" : {
      "get" : {
        "tags" : [ "RoleDefinitions" ],
        "description" : "Get all role definitions that are applicable at scope and above.",
        "operationId" : "RoleDefinitions_List",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of the role definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns an array of role definitions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleDefinitionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}" : {
      "get" : {
        "tags" : [ "RoleDefinitions" ],
        "description" : "Get role definition by name (GUID).",
        "operationId" : "RoleDefinitions_Get",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of the role definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleDefinitionId",
          "in" : "path",
          "description" : "The ID of the role definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the role definition.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleDefinition"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RoleDefinitions" ],
        "description" : "Creates or updates a role definition.",
        "operationId" : "RoleDefinitions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of the role definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleDefinitionId",
          "in" : "path",
          "description" : "The ID of the role definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The values for the role definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleDefinition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "OK - Returns information about the role definition.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleDefinition"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RoleDefinitions" ],
        "description" : "Deletes a role definition.",
        "operationId" : "RoleDefinitions_Delete",
        "parameters" : [ {
          "name" : "scope",
          "in" : "path",
          "description" : "The scope of the role definition.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleDefinitionId",
          "in" : "path",
          "description" : "The ID of the role definition to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK - Returns information about the role definition.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleDefinition"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Permission" : {
        "type" : "object",
        "properties" : {
          "actions" : {
            "type" : "array",
            "description" : "Allowed actions.",
            "items" : {
              "type" : "string"
            }
          },
          "dataActions" : {
            "type" : "array",
            "description" : "Allowed Data actions.",
            "items" : {
              "type" : "string"
            }
          },
          "notActions" : {
            "type" : "array",
            "description" : "Denied actions.",
            "items" : {
              "type" : "string"
            }
          },
          "notDataActions" : {
            "type" : "array",
            "description" : "Denied Data actions.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Role definition permissions."
      },
      "PermissionGetResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "An array of permissions.",
            "items" : {
              "$ref" : "#/components/schemas/Permission"
            }
          }
        },
        "description" : "Permissions information."
      },
      "RoleDefinition" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The role definition ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The role definition name.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/RoleDefinitionProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The role definition type.",
            "readOnly" : true
          }
        },
        "description" : "Role definition."
      },
      "RoleDefinitionFilter" : {
        "type" : "object",
        "properties" : {
          "roleName" : {
            "type" : "string",
            "description" : "Returns role definition with the specific name."
          },
          "type" : {
            "type" : "string",
            "description" : "Returns role definition with the specific type."
          }
        },
        "description" : "Role Definitions filter"
      },
      "RoleDefinitionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Role definition list.",
            "items" : {
              "$ref" : "#/components/schemas/RoleDefinition"
            }
          }
        },
        "description" : "Role definition list operation result."
      },
      "RoleDefinitionProperties" : {
        "type" : "object",
        "properties" : {
          "assignableScopes" : {
            "type" : "array",
            "description" : "Role definition assignable scopes.",
            "items" : {
              "type" : "string"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The role definition description."
          },
          "permissions" : {
            "type" : "array",
            "description" : "Role definition permissions.",
            "items" : {
              "$ref" : "#/components/schemas/Permission"
            }
          },
          "roleName" : {
            "type" : "string",
            "description" : "The role name."
          },
          "type" : {
            "type" : "string",
            "description" : "The role type."
          }
        },
        "description" : "Role definition properties."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for this operation.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "FilterParameter" : {
        "name" : "$filter",
        "in" : "query",
        "description" : "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.",
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceProviderNamespaceParameter" : {
        "name" : "resourceProviderNamespace",
        "in" : "path",
        "description" : "The namespace of the resource provider.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The ID of the target subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}