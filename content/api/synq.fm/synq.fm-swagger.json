{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SYNQ Video",
    "description" : "* [Sign up for a developer API key!](https://www.synq.fm/register)\n* [SYNQ API Guide](/)",
    "version" : "1.9.1"
  },
  "servers" : [ {
    "url" : "https://api.synq.fm/v1"
  } ],
  "paths" : {
    "/video/create" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Create a new video, optionally setting some metadata fields.",
        "description" : "Create a new video, optionally setting some metadata fields. You may optionally set some of the metadata associated with the video. Only fields inside the \"userdata\" field can be set.",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "api_key" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "userdata" : {
                    "type" : "string",
                    "description" : "Additional metadata that will be associated with the video"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "api_key" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "userdata" : {
                    "type" : "string",
                    "description" : "Additional metadata that will be associated with the video"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A video object, containing all metadata members.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoObject"
                }
              }
            }
          },
          "400" : {
            "description" : "An error occurred",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/video/details" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Return details about a video.",
        "description" : "Return details about a video. You may optionally request that only some of the metadata fields are returned.",
        "operationId" : "details",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "ID of the video to retrieve the metadata from"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "ID of the video to retrieve the metadata from"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A video object, containing all metadata members.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoObject"
                }
              }
            }
          },
          "400" : {
            "description" : "An error occurred",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/video/query" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Perform a JavaScript query to return video objects matching any desired criteria.",
        "description" : "Find videos matching any criteria, by running a JavaScript function over each video object. A detailed tutorial on how to use this functionality is available on the [documentation page](https://www.synq.fm/queries-video-api/).",
        "operationId" : "query",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "api_key", "filter" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "filter" : {
                    "type" : "string",
                    "description" : "JavaScript code to be run over each video object, to determine what should be returend."
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "api_key", "filter" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "filter" : {
                    "type" : "string",
                    "description" : "JavaScript code to be run over each video object, to determine what should be returend."
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An array of arbitrary elements, up to one element for each video object",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "An error occurred",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/video/stream" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Returns urls for streaming.",
        "description" : "Returns a stream url that you can stream to from your broadcasting software, and a playback url people can use to watch the stream.",
        "operationId" : "stream",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video you want to stream to. The video needs to have been previously created."
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video you want to stream to. The video needs to have been previously created."
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A JSON object with urls for streaming.",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "StreamInformationObject",
                  "required" : [ "playback_url", "stream_url" ],
                  "type" : "object",
                  "properties" : {
                    "playback_url" : {
                      "type" : "string",
                      "example" : "http://stmr1.synq.fm:8081/abr/58a6657b73039192a1000006/playlist.m3u8"
                    },
                    "stream_url" : {
                      "type" : "string",
                      "example" : "rtmp://stmr1.synq.fm:1935/live/58a6657b73039192a1000006?publishsign=aWQ9NTc4N2I5MDI5MzRjY2RlMjcwMDAwMDA4JnNpZ249VTJCTU84bTRPS0R6OW9NanRUdkVLUT09JmlwPTg5LjE5MS4yNi41Nw=="
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "An error occurred",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/video/update" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Update a video's metadata.",
        "description" : "Update a video's metadata through JavaScript code. Only fields inside the \"userdata\" object can be set.",
        "operationId" : "update",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "api_key", "source", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video whose metadata will be updated"
                  },
                  "source" : {
                    "type" : "string",
                    "description" : "JavaScript code to execute on the video object."
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "api_key", "source", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video whose metadata will be updated"
                  },
                  "source" : {
                    "type" : "string",
                    "description" : "JavaScript code to execute on the video object."
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A video object, containing all metadata members.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VideoObject"
                }
              }
            }
          },
          "400" : {
            "description" : "An error occurred",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/video/upload" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Return parameters needed for uploading a video file.",
        "description" : "Return parameters needed for uploading a video file to Amazon Simple Storage Service. See http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-post-example.html as well as the language-specific code-examples.\n#### *Example request*\n```shell\ncurl -s https://api.synq.fm/v1/video/upload \\\n  -F api_key=${SYNQ_API_KEY} \\\n  -F video_id=2d81c30ce62f4dfdb501dbca96c7ae56\n```\n\n#### *Example response*\n```json\n{\n  \"action\": \"https://synqfm.s3.amazonaws.com/\",\n  \"AWSAccessKeyId\": \"AKIAIP77Y7MMX3ITZMFA\",\n  \"Content-Type\": \"video/mp4\",\n  \"Policy\": \"eyJleHBpcmF0aW9uIiA6ICIyMDE2LTA0LTIyVDE5OjAyOjI2LjE3MloiLCAiY29uZGl0aW9ucyIgOiBbeyJidWNrZXQiIDogInN5bnFmbSJ9LCB7ImFjbCIgOiAicHVibGljLXJlYWQifSwgWyJzdGFydHMtd2l0aCIsICIka2V5IiwgInByb2plY3RzLzZlLzYzLzZlNjNiNzUyYTE4NTRkZGU4ODViNWNjNDcyZWRmNTY5L3VwbG9hZHMvdmlkZW9zLzJkLzgxLzJkODFjMzBjZTYyZjRkZmRiNTAxZGJjYTk2YzdhZTU2Lm1wNCJdLCBbInN0YXJ0cy13aXRoIiwgIiRDb250ZW50LVR5cGUiLCAidmlkZW8vbXA0Il0sIFsiY29udGVudC1sZW5ndGgtcmFuZ2UiLCAwLCAxMDk5NTExNjI3Nzc2XV19\",\n  \"Signature\": \"ysqDemlKXKr6hKzVFP0hCGgf/cs=\",\n  \"acl\": \"public-read\",\n  \"key\": \"projects/6e/63/6e63b752a1854dde885b5cc472edf569/uploads/videos/2d/81/2d81c30ce62f4dfdb501dbca96c7ae56.mp4\"\n}\n```\n\nTo upload the file, you can then make a multipart POST request to the URL in `action`, and for all the other parameters returned, set them as form parameters.\n\nGiven the parameters above, you would upload a file `test.mp4` using cURL like this:\n\n```shell\ncurl -s https://synqfm.s3.amazonaws.com/ \\\n  -F AWSAccessKeyId=\"AKIAIP77Y7MMX3ITZMFA\" \\\n  -F Content-Type=\"video/mp4\" \\\n  -F Policy=\"eyJleHBpcmF0aW9uIiA6ICIyMDE2LTA0LTIyVDE5OjAyOjI2LjE3MloiLCAiY29uZGl0aW9ucyIgOiBbeyJidWNrZXQiIDogInN5bnFmbSJ9LCB7ImFjbCIgOiAicHVibGljLXJlYWQifSwgWyJzdGFydHMtd2l0aCIsICIka2V5IiwgInByb2plY3RzLzZlLzYzLzZlNjNiNzUyYTE4NTRkZGU4ODViNWNjNDcyZWRmNTY5L3VwbG9hZHMvdmlkZW9zLzJkLzgxLzJkODFjMzBjZTYyZjRkZmRiNTAxZGJjYTk2YzdhZTU2Lm1wNCJdLCBbInN0YXJ0cy13aXRoIiwgIiRDb250ZW50LVR5cGUiLCAidmlkZW8vbXA0Il0sIFsiY29udGVudC1sZW5ndGgtcmFuZ2UiLCAwLCAxMDk5NTExNjI3Nzc2XV19\" \\\n  -F Signature=\"ysqDemlKXKr6hKzVFP0hCGgf/cs=\" \\\n  -F acl=\"public-read\" \\\n  -F key=\"projects/6e/63/6e63b752a1854dde885b5cc472edf569/uploads/videos/2d/81/2d81c30ce62f4dfdb501dbca96c7ae56.mp4\" \\\n  -F file=\"@my_video_file.mp4\"\n```\n\n",
        "operationId" : "upload",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video you are going to upload into. The video needs to have been previously created."
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video you are going to upload into. The video needs to have been previously created."
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An object containing all parameters needed for uploading the file.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UploadParameterObject"
                }
              }
            }
          },
          "400" : {
            "description" : "An error occurred",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    },
    "/video/uploader" : {
      "post" : {
        "tags" : [ "video" ],
        "summary" : "Return embeddable url to an uploader widget",
        "description" : "Returns an embeddable url, that contains an uploader widget that allows you to easily upload any mp4. Great way to simplify the uploading process for end users.",
        "operationId" : "uploader",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video you are going to upload into. The video needs to have been previously created."
                  },
                  "timeout" : {
                    "type" : "string",
                    "description" : "How long the uploader widget works for. Anything from '30 minutes' to '2 days'.",
                    "default" : "2 hours"
                  }
                }
              }
            },
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "required" : [ "api_key", "video_id" ],
                "type" : "object",
                "properties" : {
                  "api_key" : {
                    "type" : "string"
                  },
                  "video_id" : {
                    "type" : "string",
                    "description" : "The ID of the video you are going to upload into. The video needs to have been previously created."
                  },
                  "timeout" : {
                    "type" : "string",
                    "description" : "How long the uploader widget works for. Anything from '30 minutes' to '2 days'.",
                    "default" : "2 hours"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A JSON object with an embeddable url to an uploader page/widget.",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "UploaderInformationObject",
                  "type" : "object",
                  "properties" : {
                    "uploader_url" : {
                      "type" : "string",
                      "example" : "https://uploader.synq.fm/uploader/5920d3dfe2dc4b36bd83df6f37ae9bc1?token=18d3bfa5aa4046df9202e6b5ac74760a"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "An error occurred",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorObject"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorObject" : {
        "title" : "ErrorObject",
        "required" : [ "message", "name", "url" ],
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "object"
          },
          "message" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        },
        "example" : {
          "message" : "A lengthy, human-readable description of the error that has occurred.",
          "name" : "Some error occurred.",
          "url" : "http://docs.synq.fm/api/v1/error/some_error_code"
        }
      },
      "StreamConfigurationObject" : {
        "title" : "StreamConfigurationObject",
        "type" : "object",
        "properties" : {
          "rtmp_host" : {
            "type" : "string",
            "example" : "ec2-54-171-205-23.eu-west-1.compute.amazonaws.com"
          },
          "rtmp_key" : {
            "type" : "string",
            "example" : "live/ce29d1cb5da48a564d2c9f62be7ade06"
          },
          "rtmp_port" : {
            "type" : "string",
            "example" : "1935"
          },
          "rtmp_url" : {
            "type" : "string",
            "example" : "rtmp://ec2-54-171-205-23.eu-west-1.compute.amazonaws.com:1935/live/ce29d1cb5da48a564d2c9f62be7ade06"
          }
        }
      },
      "UploadParameterObject" : {
        "title" : "UploadParameterObject",
        "type" : "object",
        "properties" : {
          "AWSAccessKeyId" : {
            "type" : "string"
          },
          "Content-Type" : {
            "type" : "string"
          },
          "Policy" : {
            "type" : "string"
          },
          "Signature" : {
            "type" : "string"
          },
          "acl" : {
            "type" : "string"
          },
          "action" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          }
        }
      },
      "VideoObject" : {
        "title" : "VideoObject",
        "required" : [ "created_at", "state", "updated_at", "userdata", "video_id" ],
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string"
          },
          "input" : {
            "type" : "object"
          },
          "outputs" : {
            "type" : "object"
          },
          "state" : {
            "type" : "string"
          },
          "updated_at" : {
            "type" : "string"
          },
          "userdata" : {
            "type" : "object"
          },
          "video_id" : {
            "type" : "string"
          }
        },
        "example" : {
          "created_at" : "2017-03-07T12:03:34.477Z",
          "state" : "created",
          "updated_at" : "2017-03-07T12:03:34.477Z",
          "userdata" : { },
          "video_id" : "5747740852d14db58f47a5858f0bbcf7"
        }
      }
    },
    "responses" : {
      "ErrorResponse" : {
        "description" : "An error occurred",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorObject"
            }
          }
        }
      },
      "VideoObjectResponse" : {
        "description" : "A video object, containing all metadata members.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/VideoObject"
            }
          }
        }
      }
    }
  }
}