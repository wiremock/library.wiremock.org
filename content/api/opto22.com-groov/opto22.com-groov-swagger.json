{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "groov View Public API",
    "description" : "#### Revised: 2019-11-21\n\n### Overview\ngroov View Public API revision 1.\n",
    "contact" : {
      "name" : "Opto 22",
      "url" : "http://developer.opto22.com",
      "email" : "developer@opto22.com"
    },
    "version" : "R4.2a"
  },
  "servers" : [ {
    "url" : "/api"
  } ],
  "tags" : [ {
    "name" : "info",
    "description" : "Provides information about groov View itself."
  }, {
    "name" : "whoami",
    "description" : "Provides information about the user you are authenticated as."
  }, {
    "name" : "data-store",
    "description" : "Provides access to the Data Store devices and tags."
  }, {
    "name" : "logging",
    "description" : "Access to groov View's event log."
  } ],
  "paths" : {
    "/info" : {
      "get" : {
        "tags" : [ "info" ],
        "description" : "Get information about groov View. No authorization required.",
        "operationId" : "groovInfo",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/groovInfo"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data-store/devices" : {
      "get" : {
        "tags" : [ "data-store" ],
        "description" : "List devices available in the data store. Authorized for admins and editors.",
        "operationId" : "listDevices",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/dataStoreDevice"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/v1/data-store/devices/{id}/tags" : {
      "get" : {
        "tags" : [ "data-store" ],
        "description" : "List tags of the given device. Authorized for admins and editors.",
        "operationId" : "listDeviceTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the device to use.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/tagDefinition"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/v1/data-store/read" : {
      "post" : {
        "tags" : [ "data-store" ],
        "description" : "Read selected tags from the data store. Authorized for admins and editors.",
        "operationId" : "batchReadTags",
        "requestBody" : {
          "description" : "Tag references for the tags to read.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/tagReference"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/tagValue"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/v1/data-store/read/{id}" : {
      "get" : {
        "tags" : [ "data-store" ],
        "description" : "Read the current value of a single tag. Authorized for admins and editors.",
        "operationId" : "readTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the tag to read.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "int64"
          }
        }, {
          "name" : "index",
          "in" : "query",
          "description" : "Table index to start reading at.",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "default" : 0.0
          }
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of elements to read from a table.",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "default" : 1.0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tagValue"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/v1/data-store/tags" : {
      "get" : {
        "tags" : [ "data-store" ],
        "description" : "List all data store tags defined in the project. Authorized for admins and editors.",
        "operationId" : "listAllTags",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/tagDefinition"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/v1/data-store/write/{id}" : {
      "post" : {
        "tags" : [ "data-store" ],
        "description" : "Writes a new value to the given tag. Authorized for admins and editors.",
        "operationId" : "writeTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the tag to write.",
          "required" : true,
          "schema" : {
            "type" : "number",
            "format" : "int64"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Value to write to the tag. Must be a string, number, or boolean.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "index",
          "in" : "query",
          "description" : "For array tags, the index to write the value to.",
          "schema" : {
            "type" : "number",
            "format" : "int32",
            "default" : 0.0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/tagValue"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/v1/logging/groovLogs.json" : {
      "get" : {
        "tags" : [ "logging" ],
        "description" : "Downloads the complete groov View log in JSON format. Added in groov View R4.2a.",
        "operationId" : "downloadLogJson",
        "parameters" : [ {
          "name" : "minimum-log-level",
          "in" : "query",
          "description" : "How verbose the log should be.",
          "schema" : {
            "type" : "string",
            "default" : "INFO",
            "enum" : [ "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL" ]
          }
        }, {
          "name" : "last-timestamp",
          "in" : "query",
          "description" : "The earliest time to include in the log. Value is milliseconds since January 1, 1970 UTC.",
          "schema" : {
            "type" : "number",
            "format" : "int64",
            "default" : 0.0
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Optional string to search for in the log.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Downloaded log file.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/v1/logging/groovLogs.txt" : {
      "get" : {
        "tags" : [ "logging" ],
        "description" : "Downloads the complete groov View log. Added in groov View R4.2a.",
        "operationId" : "downloadLogText",
        "parameters" : [ {
          "name" : "minimum-log-level",
          "in" : "query",
          "description" : "How verbose the log should be.",
          "schema" : {
            "type" : "string",
            "default" : "INFO",
            "enum" : [ "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "FATAL" ]
          }
        }, {
          "name" : "last-timestamp",
          "in" : "query",
          "description" : "The earliest time to include in the log. Value is milliseconds since January 1, 1970 UTC.",
          "schema" : {
            "type" : "number",
            "format" : "int64",
            "default" : 0.0
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Optional string to search for in the log.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Downloaded log file.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    },
    "/whoami" : {
      "get" : {
        "tags" : [ "whoami" ],
        "description" : "Get information about the user you are authenticated as. Authorized for admins, editors, operators, and kiosk.",
        "operationId" : "whoAmI",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : null
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "required" : [ "apiKey", "email", "groups", "id", "needsPasswordChange", "role", "username" ],
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "int64"
            }
          },
          "id" : {
            "type" : "number",
            "format" : "int64"
          },
          "needsPasswordChange" : {
            "type" : "boolean",
            "description" : "True if your password is expired"
          },
          "role" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "booleanArrayValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "items" : {
                "type" : "boolean"
              }
            }
          }
        } ]
      },
      "booleanValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "dataStoreDevice" : {
        "description" : "A Data Store device within a groov View project",
        "allOf" : [ {
          "$ref" : "#/components/schemas/device"
        }, {
          "required" : [ "id", "name" ],
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "number",
              "format" : "int64"
            },
            "name" : {
              "type" : "string"
            }
          }
        } ]
      },
      "device" : {
        "required" : [ "deviceType" ],
        "type" : "object",
        "properties" : {
          "deviceType" : {
            "type" : "string"
          }
        },
        "description" : "A generic device within a groov View project",
        "discriminator" : {
          "propertyName" : "deviceType"
        }
      },
      "errorValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "errorCode", "errorMessage" ],
          "type" : "object",
          "properties" : {
            "errorCode" : {
              "type" : "string"
            },
            "errorMessage" : {
              "type" : "string"
            }
          }
        } ]
      },
      "floatArrayValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "float"
              }
            }
          }
        } ]
      },
      "floatValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "format" : "float"
            }
          }
        } ]
      },
      "groovInfo" : {
        "required" : [ "currentApiVersion", "groovAdminVersion", "groovBoxDescription", "groovNodeRedVersion", "isGroovBox", "isGroovBoxSetup", "isLicenseValid", "licenseType", "minimumApiVersion", "shouldShowTrialDialog", "timezoneName", "timezoneOffset", "trialPeriodExpiration", "warVersion" ],
        "type" : "object",
        "properties" : {
          "currentApiVersion" : {
            "type" : "number",
            "description" : "The current API version number",
            "format" : "int32"
          },
          "groovAdminVersion" : {
            "type" : "string",
            "description" : "The groov Admin version number if running on a groov hardware box"
          },
          "groovBoxDescription" : {
            "type" : "string",
            "description" : "The groov box type (GROOV-AT1, GROOV-AR1, or GRV-EPIC-PR1)"
          },
          "groovNodeRedVersion" : {
            "type" : "string",
            "description" : "The node red version number if running on a GROOV-AR1 which has node red installed"
          },
          "isGroovBox" : {
            "type" : "boolean",
            "description" : "True if running on a groov hardware box"
          },
          "isGroovBoxSetup" : {
            "type" : "boolean",
            "description" : "True if running on a groov hardware box which has been setup or true if running on groov Server for Windows"
          },
          "isLicenseValid" : {
            "type" : "boolean",
            "description" : "True if a license is installed, valid, and not expired"
          },
          "licenseType" : {
            "type" : "string",
            "description" : "The license type (NONE, MAINTENANCE_EXPIRED, or VALID)"
          },
          "minimumApiVersion" : {
            "type" : "number",
            "description" : "The minimum supported API version number",
            "format" : "int32"
          },
          "shouldShowTrialDialog" : {
            "type" : "boolean",
            "description" : "True if the trial dialog pops up when logging into groov View"
          },
          "timezoneName" : {
            "type" : "string",
            "description" : "The server's timezone"
          },
          "timezoneOffset" : {
            "type" : "number",
            "description" : "The server's timezone offset from UTC in minutes",
            "format" : "int32"
          },
          "trialPeriodExpiration" : {
            "type" : "number",
            "description" : "Milliseconds until trial period is expired",
            "format" : "int64"
          },
          "warVersion" : {
            "type" : "string",
            "description" : "The version number of the war"
          }
        }
      },
      "integerArrayValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "int64"
              }
            }
          }
        } ]
      },
      "integerValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "number",
              "format" : "int64"
            }
          }
        } ]
      },
      "stringArrayValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "stringValue" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/tagValue"
        }, {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "tagDefinition" : {
        "required" : [ "dataType", "deviceId", "id", "name" ],
        "type" : "object",
        "properties" : {
          "dataType" : {
            "type" : "string",
            "enum" : [ "boolean", "integer", "float", "string", "booleanArray", "integerArray", "floatArray", "stringArray" ]
          },
          "deviceId" : {
            "type" : "number",
            "format" : "int64"
          },
          "id" : {
            "type" : "number",
            "format" : "int64"
          },
          "length" : {
            "type" : "number",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "tagReference" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "number",
            "description" : "For array tags, the number of elements to read, starting at index.",
            "format" : "int32"
          },
          "id" : {
            "type" : "number",
            "description" : "Unique id for the tag.",
            "format" : "int64"
          },
          "index" : {
            "type" : "number",
            "description" : "For array tags, the index to start reading at.",
            "format" : "int32"
          }
        }
      },
      "tagValue" : {
        "required" : [ "valueType" ],
        "type" : "object",
        "properties" : {
          "valueType" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "valueType"
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "query"
      }
    }
  }
}