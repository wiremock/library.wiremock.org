{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SiteRecoveryManagementClient",
    "version" : "2018-07-10"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{virtualMachineName}/providers/Microsoft.RecoveryServices/replicationEligibilityResults" : {
      "get" : {
        "tags" : [ "ReplicationEligibilityResults" ],
        "summary" : "Gets the validation errors in case the VM is unsuitable for protection.",
        "description" : "Validates whether a given VM can be protected or not in which case returns list of errors.",
        "operationId" : "ReplicationEligibilityResults_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "Virtual Machine name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationEligibilityResultsCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{virtualMachineName}/providers/Microsoft.RecoveryServices/replicationEligibilityResults/default" : {
      "get" : {
        "tags" : [ "ReplicationEligibilityResults" ],
        "summary" : "Gets the validation errors in case the VM is unsuitable for protection.",
        "description" : "Validates whether a given VM can be protected or not in which case returns list of errors.",
        "operationId" : "ReplicationEligibilityResults_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "Virtual Machine name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationEligibilityResults"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "summary" : "Returns the list of available operations.",
        "description" : "Operation to return the list of available operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationsDiscoveryCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationAlertSettings" : {
      "get" : {
        "tags" : [ "ReplicationAlertSettings" ],
        "summary" : "Gets the list of configured email notification(alert) configurations.",
        "description" : "Gets the list of email notification(alert) configurations for the vault.",
        "operationId" : "ReplicationAlertSettings_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationAlertSettings/{alertSettingName}" : {
      "get" : {
        "tags" : [ "ReplicationAlertSettings" ],
        "summary" : "Gets an email notification(alert) configuration.",
        "description" : "Gets the details of the specified email notification(alert) configuration.",
        "operationId" : "ReplicationAlertSettings_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "alertSettingName",
          "in" : "path",
          "description" : "The name of the email notification configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alert"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationAlertSettings" ],
        "summary" : "Configures email notifications for this vault.",
        "description" : "Create or update an email notification(alert) configuration.",
        "operationId" : "ReplicationAlertSettings_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "alertSettingName",
          "in" : "path",
          "description" : "The name of the email notification(alert) configuration.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The input to configure the email notification(alert).",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigureAlertRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alert"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationEvents" : {
      "get" : {
        "tags" : [ "ReplicationEvents" ],
        "summary" : "Gets the list of Azure Site Recovery events.",
        "description" : "Gets the list of Azure Site Recovery events for the vault.",
        "operationId" : "ReplicationEvents_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter options.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationEvents/{eventName}" : {
      "get" : {
        "tags" : [ "ReplicationEvents" ],
        "summary" : "Get the details of an Azure Site recovery event.",
        "description" : "The operation to get the details of an Azure Site recovery event.",
        "operationId" : "ReplicationEvents_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eventName",
          "in" : "path",
          "description" : "The name of the Azure Site Recovery event.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics" : {
      "get" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Gets the list of ASR fabrics",
        "description" : "Gets a list of the Azure Site Recovery fabrics in the vault.",
        "operationId" : "ReplicationFabrics_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FabricCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}" : {
      "get" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Gets the details of an ASR fabric.",
        "description" : "Gets the details of an Azure Site Recovery fabric.",
        "operationId" : "ReplicationFabrics_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Fabric"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Creates an Azure Site Recovery fabric.",
        "description" : "The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V site)",
        "operationId" : "ReplicationFabrics_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Name of the ASR fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Fabric creation input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FabricCreationInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Fabric"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Purges the site.",
        "description" : "The operation to purge(force delete) an Azure Site Recovery fabric.",
        "operationId" : "ReplicationFabrics_Purge",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "ASR fabric to purge.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/checkConsistency" : {
      "post" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Checks the consistency of the ASR fabric.",
        "description" : "The operation to perform a consistency check on the fabric.",
        "operationId" : "ReplicationFabrics_CheckConsistency",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Fabric"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/migratetoaad" : {
      "post" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Migrates the site to AAD.",
        "description" : "The operation to migrate an Azure Site Recovery fabric to AAD.",
        "operationId" : "ReplicationFabrics_MigrateToAad",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "ASR fabric to migrate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/reassociateGateway" : {
      "post" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Perform failover of the process server.",
        "description" : "The operation to move replications from a process server to another process server.",
        "operationId" : "ReplicationFabrics_ReassociateGateway",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "The name of the fabric containing the process server.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The input to the failover process server operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FailoverProcessServerRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Fabric"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/remove" : {
      "post" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Deletes the site.",
        "description" : "The operation to delete or remove an Azure Site Recovery fabric.",
        "operationId" : "ReplicationFabrics_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "ASR fabric to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/renewCertificate" : {
      "post" : {
        "tags" : [ "ReplicationFabrics" ],
        "summary" : "Renews certificate for the fabric.",
        "description" : "Renews the connection certificate for the ASR replication fabric.",
        "operationId" : "ReplicationFabrics_RenewCertificate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "fabric name to renew certs for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Renew certificate input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RenewCertificateInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Fabric"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationLogicalNetworks" : {
      "get" : {
        "tags" : [ "ReplicationLogicalNetworks" ],
        "summary" : "Gets the list of logical networks under a fabric.",
        "description" : "Lists all the logical networks of the Azure Site Recovery fabric",
        "operationId" : "ReplicationLogicalNetworks_ListByReplicationFabrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Server Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogicalNetworkCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationLogicalNetworks/{logicalNetworkName}" : {
      "get" : {
        "tags" : [ "ReplicationLogicalNetworks" ],
        "summary" : "Gets a logical network with specified server id and logical network name.",
        "description" : "Gets the details of a logical network.",
        "operationId" : "ReplicationLogicalNetworks_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Server Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "logicalNetworkName",
          "in" : "path",
          "description" : "Logical network name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogicalNetwork"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks" : {
      "get" : {
        "tags" : [ "ReplicationNetworks" ],
        "summary" : "Gets the list of networks under a fabric.",
        "description" : "Lists the networks available for a fabric.",
        "operationId" : "ReplicationNetworks_ListByReplicationFabrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}" : {
      "get" : {
        "tags" : [ "ReplicationNetworks" ],
        "summary" : "Gets a network with specified server id and network name.",
        "description" : "Gets the details of a network.",
        "operationId" : "ReplicationNetworks_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Server Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkName",
          "in" : "path",
          "description" : "Primary network name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Network"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings" : {
      "get" : {
        "tags" : [ "ReplicationNetworkMappings" ],
        "summary" : "Gets all the network mappings under a network.",
        "description" : "Lists all ASR network mappings for the specified network.",
        "operationId" : "ReplicationNetworkMappings_ListByReplicationNetworks",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Primary fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkName",
          "in" : "path",
          "description" : "Primary network name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkMappingCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings/{networkMappingName}" : {
      "get" : {
        "tags" : [ "ReplicationNetworkMappings" ],
        "summary" : "Gets network mapping by name.",
        "description" : "Gets the details of an ASR network mapping",
        "operationId" : "ReplicationNetworkMappings_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Primary fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkName",
          "in" : "path",
          "description" : "Primary network name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkMappingName",
          "in" : "path",
          "description" : "Network mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkMapping"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationNetworkMappings" ],
        "summary" : "Creates network mapping.",
        "description" : "The operation to create an ASR network mapping.",
        "operationId" : "ReplicationNetworkMappings_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Primary fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkName",
          "in" : "path",
          "description" : "Primary network name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkMappingName",
          "in" : "path",
          "description" : "Network mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create network mapping input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateNetworkMappingInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkMapping"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationNetworkMappings" ],
        "summary" : "Delete network mapping.",
        "description" : "The operation to delete a network mapping.",
        "operationId" : "ReplicationNetworkMappings_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Primary fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkName",
          "in" : "path",
          "description" : "Primary network name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkMappingName",
          "in" : "path",
          "description" : "ARM Resource Name for network mapping.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "ReplicationNetworkMappings" ],
        "summary" : "Updates network mapping.",
        "description" : "The operation to update an ASR network mapping.",
        "operationId" : "ReplicationNetworkMappings_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Primary fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkName",
          "in" : "path",
          "description" : "Primary network name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkMappingName",
          "in" : "path",
          "description" : "Network mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update network mapping input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateNetworkMappingInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkMapping"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers" : {
      "get" : {
        "tags" : [ "ReplicationProtectionContainers" ],
        "summary" : "Gets the list of protection container for a fabric.",
        "description" : "Lists the protection containers in the specified fabric.",
        "operationId" : "ReplicationProtectionContainers_ListByReplicationFabrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainerCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}" : {
      "get" : {
        "tags" : [ "ReplicationProtectionContainers" ],
        "summary" : "Gets the protection container details.",
        "description" : "Gets the details of a protection container.",
        "operationId" : "ReplicationProtectionContainers_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainer"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationProtectionContainers" ],
        "summary" : "Create a protection container.",
        "description" : "Operation to create a protection container.",
        "operationId" : "ReplicationProtectionContainers_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric ARM name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Unique protection container ARM name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Creation input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProtectionContainerInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainer"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/discoverProtectableItem" : {
      "post" : {
        "tags" : [ "ReplicationProtectionContainers" ],
        "summary" : "Adds a protectable item to the replication protection container.",
        "description" : "The operation to a add a protectable item to a protection container(Add physical server.)",
        "operationId" : "ReplicationProtectionContainers_DiscoverProtectableItem",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "The name of the fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "The name of the protection container.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request object to add a protectable item.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiscoverProtectableItemRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainer"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/remove" : {
      "post" : {
        "tags" : [ "ReplicationProtectionContainers" ],
        "summary" : "Removes a protection container.",
        "description" : "Operation to remove a protection container.",
        "operationId" : "ReplicationProtectionContainers_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric ARM name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Unique protection container ARM name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems" : {
      "get" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Gets the list of migration items in the protection container.",
        "description" : "Gets the list of ASR migration items in the protection container.",
        "operationId" : "ReplicationMigrationItems_ListByReplicationProtectionContainers",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItemCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}" : {
      "get" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Gets the details of a migration item.",
        "operationId" : "ReplicationMigrationItems_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric unique name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItem"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Enables migration.",
        "description" : "The operation to create an ASR migration item (enable migration).",
        "operationId" : "ReplicationMigrationItems_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Enable migration input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnableMigrationInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Delete the migration item.",
        "description" : "The operation to delete an ASR migration item.",
        "operationId" : "ReplicationMigrationItems_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteOption",
          "in" : "query",
          "description" : "The delete option.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Updates migration item.",
        "description" : "The operation to update the recovery settings of an ASR migration item.",
        "operationId" : "ReplicationMigrationItems_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update migration item input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMigrationItemInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrate" : {
      "post" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Migrate item.",
        "description" : "The operation to initiate migration of the item.",
        "operationId" : "ReplicationMigrationItems_Migrate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Migrate input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MigrateInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrationRecoveryPoints" : {
      "get" : {
        "tags" : [ "MigrationRecoveryPoints" ],
        "summary" : "Gets the recovery points for a migration item.",
        "operationId" : "MigrationRecoveryPoints_ListByReplicationMigrationItems",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric unique name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationRecoveryPointCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/migrationRecoveryPoints/{migrationRecoveryPointName}" : {
      "get" : {
        "tags" : [ "MigrationRecoveryPoints" ],
        "summary" : "Gets a recovery point for a migration item.",
        "operationId" : "MigrationRecoveryPoints_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric unique name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationRecoveryPointName",
          "in" : "path",
          "description" : "The migration recovery point name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationRecoveryPoint"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/testMigrate" : {
      "post" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Test migrate item.",
        "description" : "The operation to initiate test migration of the item.",
        "operationId" : "ReplicationMigrationItems_TestMigrate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Test migrate input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestMigrateInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationMigrationItems/{migrationItemName}/testMigrateCleanup" : {
      "post" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Test migrate cleanup.",
        "description" : "The operation to initiate test migrate cleanup.",
        "operationId" : "ReplicationMigrationItems_TestMigrateCleanup",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "migrationItemName",
          "in" : "path",
          "description" : "Migration item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Test migrate cleanup input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestMigrateCleanupInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectableItems" : {
      "get" : {
        "tags" : [ "ReplicationProtectableItems" ],
        "summary" : "Gets the list of protectable items.",
        "description" : "Lists the protectable items in a protection container.",
        "operationId" : "ReplicationProtectableItems_ListByReplicationProtectionContainers",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter options.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectableItemCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectableItems/{protectableItemName}" : {
      "get" : {
        "tags" : [ "ReplicationProtectableItems" ],
        "summary" : "Gets the details of a protectable item.",
        "description" : "The operation to get the details of a protectable item.",
        "operationId" : "ReplicationProtectableItems_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectableItemName",
          "in" : "path",
          "description" : "Protectable item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectableItem"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems" : {
      "get" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Gets the list of Replication protected items.",
        "description" : "Gets the list of ASR replication protected items in the protection container.",
        "operationId" : "ReplicationProtectedItems_ListByReplicationProtectionContainers",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItemCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}" : {
      "get" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Gets the details of a Replication protected item.",
        "description" : "Gets the details of an ASR replication protected item.",
        "operationId" : "ReplicationProtectedItems_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric unique name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Enables protection.",
        "description" : "The operation to create an ASR replication protected item (Enable replication).",
        "operationId" : "ReplicationProtectedItems_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Name of the fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "A name for the replication protected item.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Enable Protection Input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnableProtectionInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Purges protection.",
        "description" : "The operation to delete or purge a replication protected item. This operation will force delete the replication protected item. Use the remove operation on replication protected item to perform a clean disable replication for the item.",
        "operationId" : "ReplicationProtectedItems_Purge",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Updates protection.",
        "description" : "The operation to update the recovery settings of an ASR replication protected item.",
        "operationId" : "ReplicationProtectedItems_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update protection input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateReplicationProtectedItemInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/ResolveHealthErrors" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Resolve health errors.",
        "description" : "Operation to resolve health issues of the replication protected item.",
        "operationId" : "ReplicationProtectedItems_ResolveHealthErrors",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Health issue input object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResolveHealthInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/addDisks" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Add disk(s) for protection.",
        "description" : "Operation to add disks(s) to the replication protected item.",
        "operationId" : "ReplicationProtectedItems_AddDisks",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Add disks input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddDisksInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/applyRecoveryPoint" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Change or apply recovery point.",
        "description" : "The operation to change the recovery point of a failed over replication protected item.",
        "operationId" : "ReplicationProtectedItems_ApplyRecoveryPoint",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "The ARM fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "The protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "The replicated protected item's name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The ApplyRecoveryPointInput.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplyRecoveryPointInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/failoverCommit" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Execute commit failover",
        "description" : "Operation to commit the failover of the replication protected item.",
        "operationId" : "ReplicationProtectedItems_FailoverCommit",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/plannedFailover" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Execute planned failover",
        "description" : "Operation to initiate a planned failover of the replication protected item.",
        "operationId" : "ReplicationProtectedItems_PlannedFailover",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Disable protection input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlannedFailoverInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/reProtect" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Execute Reverse Replication\\Reprotect",
        "description" : "Operation to reprotect or reverse replicate a failed over replication protected item.",
        "operationId" : "ReplicationProtectedItems_Reprotect",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Disable protection input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReverseReplicationInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints" : {
      "get" : {
        "tags" : [ "RecoveryPoints" ],
        "summary" : "Get recovery points for a replication protected item.",
        "description" : "Lists the available recovery points for a replication protected item.",
        "operationId" : "RecoveryPoints_ListByReplicationProtectedItems",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "The fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "The protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "The replication protected item's name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPointCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints/{recoveryPointName}" : {
      "get" : {
        "tags" : [ "RecoveryPoints" ],
        "summary" : "Get a recovery point.",
        "description" : "Get the details of specified recovery point.",
        "operationId" : "RecoveryPoints_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "The fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "The protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "The replication protected item's name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPointName",
          "in" : "path",
          "description" : "The recovery point name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPoint"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/remove" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Disables protection.",
        "description" : "The operation to disable replication on a replication protected item. This will also remove the item.",
        "operationId" : "ReplicationProtectedItems_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Disable protection input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DisableProtectionInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/removeDisks" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Removes disk(s).",
        "description" : "Operation to remove disk(s) from the replication protected item.",
        "operationId" : "ReplicationProtectedItems_RemoveDisks",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Remove disks input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoveDisksInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/repairReplication" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Resynchronize or repair replication.",
        "description" : "The operation to start resynchronize/repair replication for a replication protected item requiring resynchronization.",
        "operationId" : "ReplicationProtectedItems_RepairReplication",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "The name of the fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "The name of the container.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "The name of the replication protected item.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/targetComputeSizes" : {
      "get" : {
        "tags" : [ "TargetComputeSizes" ],
        "summary" : "Gets the list of target compute sizes for the replication protected item.",
        "description" : "Lists the available target compute sizes for a replication protected item.",
        "operationId" : "TargetComputeSizes_ListByReplicationProtectedItems",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetComputeSizeCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/testFailover" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Execute test failover",
        "description" : "Operation to perform a test failover of the replication protected item.",
        "operationId" : "ReplicationProtectedItems_TestFailover",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Test failover input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestFailoverInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/testFailoverCleanup" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Execute test failover cleanup.",
        "description" : "Operation to clean up the test failover of a replication protected item.",
        "operationId" : "ReplicationProtectedItems_TestFailoverCleanup",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Test failover cleanup input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TestFailoverCleanupInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/unplannedFailover" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Execute unplanned failover",
        "description" : "Operation to initiate a failover of the replication protected item.",
        "operationId" : "ReplicationProtectedItems_UnplannedFailover",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicatedProtectedItemName",
          "in" : "path",
          "description" : "Replication protected item name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Disable protection input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnplannedFailoverInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicationProtectedItemName}/updateMobilityService" : {
      "post" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Update the mobility service on a protected item.",
        "description" : "The operation to update(push update) the installed mobility service software on a replication protected item to the latest available version.",
        "operationId" : "ReplicationProtectedItems_UpdateMobilityService",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "The name of the fabric containing the protected item.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "The name of the container containing the protected item.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicationProtectedItemName",
          "in" : "path",
          "description" : "The name of the protected item on which the agent is to be updated.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request to update the mobility service on the protected item.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateMobilityServiceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItem"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings" : {
      "get" : {
        "tags" : [ "ReplicationProtectionContainerMappings" ],
        "summary" : "Gets the list of protection container mappings for a protection container.",
        "description" : "Lists the protection container mappings for a protection container.",
        "operationId" : "ReplicationProtectionContainerMappings_ListByReplicationProtectionContainers",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainerMappingCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}" : {
      "get" : {
        "tags" : [ "ReplicationProtectionContainerMappings" ],
        "summary" : "Gets a protection container mapping/",
        "description" : "Gets the details of a protection container mapping.",
        "operationId" : "ReplicationProtectionContainerMappings_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "Protection Container mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainerMapping"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationProtectionContainerMappings" ],
        "summary" : "Create protection container mapping.",
        "description" : "The operation to create a protection container mapping.",
        "operationId" : "ReplicationProtectionContainerMappings_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "Protection container mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Mapping creation input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProtectionContainerMappingInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainerMapping"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationProtectionContainerMappings" ],
        "summary" : "Purge protection container mapping.",
        "description" : "The operation to purge(force delete) a protection container mapping",
        "operationId" : "ReplicationProtectionContainerMappings_Purge",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "Protection container mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "ReplicationProtectionContainerMappings" ],
        "summary" : "Update protection container mapping.",
        "description" : "The operation to update protection container mapping.",
        "operationId" : "ReplicationProtectionContainerMappings_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "Protection container mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Mapping update input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateProtectionContainerMappingInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainerMapping"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}/remove" : {
      "post" : {
        "tags" : [ "ReplicationProtectionContainerMappings" ],
        "summary" : "Remove protection container mapping.",
        "description" : "The operation to delete or remove a protection container mapping.",
        "operationId" : "ReplicationProtectionContainerMappings_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "Protection container mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Removal input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoveProtectionContainerMappingInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/switchprotection" : {
      "post" : {
        "tags" : [ "ReplicationProtectionContainers" ],
        "summary" : "Switches protection from one container to another or one replication provider to another.",
        "description" : "Operation to switch protection from one container to another or one replication provider to another.",
        "operationId" : "ReplicationProtectionContainers_SwitchProtection",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Unique fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "protectionContainerName",
          "in" : "path",
          "description" : "Protection container name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Switch protection input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SwitchProtectionInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainer"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders" : {
      "get" : {
        "tags" : [ "ReplicationRecoveryServicesProviders" ],
        "summary" : "Gets the list of registered recovery services providers for the fabric.",
        "description" : "Lists the registered recovery services providers for the specified fabric.",
        "operationId" : "ReplicationRecoveryServicesProviders_ListByReplicationFabrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryServicesProviderCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders/{providerName}" : {
      "get" : {
        "tags" : [ "ReplicationRecoveryServicesProviders" ],
        "summary" : "Gets the details of a recovery services provider.",
        "description" : "Gets the details of registered recovery services provider.",
        "operationId" : "ReplicationRecoveryServicesProviders_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerName",
          "in" : "path",
          "description" : "Recovery services provider name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryServicesProvider"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationRecoveryServicesProviders" ],
        "summary" : "Adds a recovery services provider.",
        "description" : "The operation to add a recovery services provider.",
        "operationId" : "ReplicationRecoveryServicesProviders_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerName",
          "in" : "path",
          "description" : "Recovery services provider name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Add provider input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddRecoveryServicesProviderInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryServicesProvider"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationRecoveryServicesProviders" ],
        "summary" : "Purges recovery service provider from fabric",
        "description" : "The operation to purge(force delete) a recovery services provider from the vault.",
        "operationId" : "ReplicationRecoveryServicesProviders_Purge",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerName",
          "in" : "path",
          "description" : "Recovery services provider name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders/{providerName}/refreshProvider" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryServicesProviders" ],
        "summary" : "Refresh details from the recovery services provider.",
        "description" : "The operation to refresh the information from the recovery services provider.",
        "operationId" : "ReplicationRecoveryServicesProviders_RefreshProvider",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerName",
          "in" : "path",
          "description" : "Recovery services provider name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryServicesProvider"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders/{providerName}/remove" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryServicesProviders" ],
        "summary" : "Deletes provider from fabric. Note: Deleting provider for any fabric other than SingleHost is unsupported. To maintain backward compatibility for released clients the object \"deleteRspInput\" is used (if the object is empty we assume that it is old client and continue the old behavior).",
        "description" : "The operation to removes/delete(unregister) a recovery services provider from the vault",
        "operationId" : "ReplicationRecoveryServicesProviders_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerName",
          "in" : "path",
          "description" : "Recovery services provider name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications" : {
      "get" : {
        "tags" : [ "ReplicationStorageClassifications" ],
        "summary" : "Gets the list of storage classification objects under a fabric.",
        "description" : "Lists the storage classifications available in the specified fabric.",
        "operationId" : "ReplicationStorageClassifications_ListByReplicationFabrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Site name of interest.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageClassificationCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}" : {
      "get" : {
        "tags" : [ "ReplicationStorageClassifications" ],
        "summary" : "Gets the details of a storage classification.",
        "description" : "Gets the details of the specified storage classification.",
        "operationId" : "ReplicationStorageClassifications_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationName",
          "in" : "path",
          "description" : "Storage classification name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageClassification"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings" : {
      "get" : {
        "tags" : [ "ReplicationStorageClassificationMappings" ],
        "summary" : "Gets the list of storage classification mappings objects under a storage.",
        "description" : "Lists the storage classification mappings for the fabric.",
        "operationId" : "ReplicationStorageClassificationMappings_ListByReplicationStorageClassifications",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationName",
          "in" : "path",
          "description" : "Storage classification name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageClassificationMappingCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings/{storageClassificationMappingName}" : {
      "get" : {
        "tags" : [ "ReplicationStorageClassificationMappings" ],
        "summary" : "Gets the details of a storage classification mapping.",
        "description" : "Gets the details of the specified storage classification mapping.",
        "operationId" : "ReplicationStorageClassificationMappings_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationName",
          "in" : "path",
          "description" : "Storage classification name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationMappingName",
          "in" : "path",
          "description" : "Storage classification mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageClassificationMapping"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationStorageClassificationMappings" ],
        "summary" : "Create storage classification mapping.",
        "description" : "The operation to create a storage classification mapping.",
        "operationId" : "ReplicationStorageClassificationMappings_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationName",
          "in" : "path",
          "description" : "Storage classification name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationMappingName",
          "in" : "path",
          "description" : "Storage classification mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Pairing input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageClassificationMappingInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageClassificationMapping"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationStorageClassificationMappings" ],
        "summary" : "Delete a storage classification mapping.",
        "description" : "The operation to delete a storage classification mapping.",
        "operationId" : "ReplicationStorageClassificationMappings_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationName",
          "in" : "path",
          "description" : "Storage classification name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storageClassificationMappingName",
          "in" : "path",
          "description" : "Storage classification mapping name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationvCenters" : {
      "get" : {
        "tags" : [ "ReplicationvCenters" ],
        "summary" : "Gets the list of vCenter registered under a fabric.",
        "description" : "Lists the vCenter servers registered in a fabric.",
        "operationId" : "ReplicationvCenters_ListByReplicationFabrics",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VCenterCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationFabrics/{fabricName}/replicationvCenters/{vCenterName}" : {
      "get" : {
        "tags" : [ "ReplicationvCenters" ],
        "summary" : "Gets the details of a vCenter.",
        "description" : "Gets the details of a registered vCenter server(Add vCenter server.)",
        "operationId" : "ReplicationvCenters_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vCenterName",
          "in" : "path",
          "description" : "vCenter name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VCenter"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationvCenters" ],
        "summary" : "Add vCenter.",
        "description" : "The operation to create a vCenter object..",
        "operationId" : "ReplicationvCenters_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vCenterName",
          "in" : "path",
          "description" : "vCenter name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The input to the add vCenter operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddVCenterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VCenter"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationvCenters" ],
        "summary" : "Remove vCenter operation.",
        "description" : "The operation to remove(unregister) a registered vCenter server from the vault.",
        "operationId" : "ReplicationvCenters_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vCenterName",
          "in" : "path",
          "description" : "vCenter name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "ReplicationvCenters" ],
        "summary" : "Update vCenter operation.",
        "description" : "The operation to update a registered vCenter.",
        "operationId" : "ReplicationvCenters_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fabricName",
          "in" : "path",
          "description" : "Fabric name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vCenterName",
          "in" : "path",
          "description" : "vCenter name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The input to the update vCenter operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateVCenterRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VCenter"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationJobs" : {
      "get" : {
        "tags" : [ "ReplicationJobs" ],
        "summary" : "Gets the list of jobs.",
        "description" : "Gets the list of Azure Site Recovery Jobs for the vault.",
        "operationId" : "ReplicationJobs_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter options.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationJobs/export" : {
      "post" : {
        "tags" : [ "ReplicationJobs" ],
        "summary" : "Exports the details of the Azure Site Recovery jobs of the vault.",
        "description" : "The operation to export the details of the Azure Site Recovery jobs of the vault.",
        "operationId" : "ReplicationJobs_Export",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "job query filter.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobQueryParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationJobs/{jobName}" : {
      "get" : {
        "tags" : [ "ReplicationJobs" ],
        "summary" : "Gets the job details.",
        "description" : "Get the details of an Azure Site Recovery job.",
        "operationId" : "ReplicationJobs_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "Job identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationJobs/{jobName}/cancel" : {
      "post" : {
        "tags" : [ "ReplicationJobs" ],
        "summary" : "Cancels the specified job.",
        "description" : "The operation to cancel an Azure Site Recovery job.",
        "operationId" : "ReplicationJobs_Cancel",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "Job identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationJobs/{jobName}/restart" : {
      "post" : {
        "tags" : [ "ReplicationJobs" ],
        "summary" : "Restarts the specified job.",
        "description" : "The operation to restart an Azure Site Recovery job.",
        "operationId" : "ReplicationJobs_Restart",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "Job identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationJobs/{jobName}/resume" : {
      "post" : {
        "tags" : [ "ReplicationJobs" ],
        "summary" : "Resumes the specified job.",
        "description" : "The operation to resume an Azure Site Recovery job",
        "operationId" : "ReplicationJobs_Resume",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobName",
          "in" : "path",
          "description" : "Job identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Resume rob comments.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResumeJobParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationMigrationItems" : {
      "get" : {
        "tags" : [ "ReplicationMigrationItems" ],
        "summary" : "Gets the list of migration items in the vault.",
        "operationId" : "ReplicationMigrationItems_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipToken",
          "in" : "query",
          "description" : "The pagination token.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter options.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MigrationItemCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationNetworkMappings" : {
      "get" : {
        "tags" : [ "ReplicationNetworkMappings" ],
        "summary" : "Gets all the network mappings under a vault.",
        "description" : "Lists all ASR network mappings in the vault.",
        "operationId" : "ReplicationNetworkMappings_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkMappingCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationNetworks" : {
      "get" : {
        "tags" : [ "ReplicationNetworks" ],
        "summary" : "Gets the list of networks. View-only API.",
        "description" : "Lists the networks available in a vault",
        "operationId" : "ReplicationNetworks_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationPolicies" : {
      "get" : {
        "tags" : [ "ReplicationPolicies" ],
        "summary" : "Gets the list of replication policies",
        "description" : "Lists the replication policies for a vault.",
        "operationId" : "ReplicationPolicies_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationPolicies/{policyName}" : {
      "get" : {
        "tags" : [ "ReplicationPolicies" ],
        "summary" : "Gets the requested policy.",
        "description" : "Gets the details of a replication policy.",
        "operationId" : "ReplicationPolicies_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyName",
          "in" : "path",
          "description" : "Replication policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationPolicies" ],
        "summary" : "Creates the policy.",
        "description" : "The operation to create a replication policy",
        "operationId" : "ReplicationPolicies_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyName",
          "in" : "path",
          "description" : "Replication policy name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create policy input",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreatePolicyInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationPolicies" ],
        "summary" : "Delete the policy.",
        "description" : "The operation to delete a replication policy.",
        "operationId" : "ReplicationPolicies_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyName",
          "in" : "path",
          "description" : "Replication policy name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "ReplicationPolicies" ],
        "summary" : "Updates the policy.",
        "description" : "The operation to update a replication policy.",
        "operationId" : "ReplicationPolicies_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policyName",
          "in" : "path",
          "description" : "Policy Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update Policy Input",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdatePolicyInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationProtectedItems" : {
      "get" : {
        "tags" : [ "ReplicationProtectedItems" ],
        "summary" : "Gets the list of replication protected items.",
        "description" : "Gets the list of ASR replication protected items in the vault.",
        "operationId" : "ReplicationProtectedItems_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipToken",
          "in" : "query",
          "description" : "The pagination token. Possible values: \"FabricId\" or \"FabricId_CloudId\" or null",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter options.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplicationProtectedItemCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationProtectionContainerMappings" : {
      "get" : {
        "tags" : [ "ReplicationProtectionContainerMappings" ],
        "summary" : "Gets the list of all protection container mappings in a vault.",
        "description" : "Lists the protection container mappings in the vault.",
        "operationId" : "ReplicationProtectionContainerMappings_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainerMappingCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationProtectionContainers" : {
      "get" : {
        "tags" : [ "ReplicationProtectionContainers" ],
        "summary" : "Gets the list of all protection containers in a vault.",
        "description" : "Lists the protection containers in a vault.",
        "operationId" : "ReplicationProtectionContainers_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProtectionContainerCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans" : {
      "get" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Gets the list of recovery plans.",
        "description" : "Lists the recovery plans in the vault.",
        "operationId" : "ReplicationRecoveryPlans_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlanCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}" : {
      "get" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Gets the requested recovery plan.",
        "description" : "Gets the details of the recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Name of the recovery plan.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Creates a recovery plan with the given details.",
        "description" : "The operation to create a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Recovery Plan creation input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRecoveryPlanInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      },
      "delete" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Deletes the specified recovery plan.",
        "description" : "Delete a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_Delete",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "NoContent"
          }
        }
      },
      "patch" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Updates the given recovery plan.",
        "description" : "The operation to update a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_Update",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update recovery plan input",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateRecoveryPlanInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/failoverCommit" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Execute commit failover of the recovery plan.",
        "description" : "The operation to commit the fail over of a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_FailoverCommit",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/plannedFailover" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Execute planned failover of the recovery plan.",
        "description" : "The operation to start the planned failover of a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_PlannedFailover",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Failover input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecoveryPlanPlannedFailoverInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/reProtect" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Execute reprotect of the recovery plan.",
        "description" : "The operation to reprotect(reverse replicate) a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_Reprotect",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/testFailover" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Execute test failover of the recovery plan.",
        "description" : "The operation to start the test failover of a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_TestFailover",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Failover input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecoveryPlanTestFailoverInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/testFailoverCleanup" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Execute test failover cleanup of the recovery plan.",
        "description" : "The operation to cleanup test failover of a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_TestFailoverCleanup",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Test failover cleanup input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecoveryPlanTestFailoverCleanupInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/unplannedFailover" : {
      "post" : {
        "tags" : [ "ReplicationRecoveryPlans" ],
        "summary" : "Execute unplanned failover of the recovery plan.",
        "description" : "The operation to start the failover of a recovery plan.",
        "operationId" : "ReplicationRecoveryPlans_UnplannedFailover",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recoveryPlanName",
          "in" : "path",
          "description" : "Recovery plan name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Failover input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RecoveryPlanUnplannedFailoverInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryPlan"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationRecoveryServicesProviders" : {
      "get" : {
        "tags" : [ "ReplicationRecoveryServicesProviders" ],
        "summary" : "Gets the list of registered recovery services providers in the vault. This is a view only api.",
        "description" : "Lists the registered recovery services providers in the vault",
        "operationId" : "ReplicationRecoveryServicesProviders_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecoveryServicesProviderCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationStorageClassificationMappings" : {
      "get" : {
        "tags" : [ "ReplicationStorageClassificationMappings" ],
        "summary" : "Gets the list of storage classification mappings objects under a vault.",
        "description" : "Lists the storage classification mappings in the vault.",
        "operationId" : "ReplicationStorageClassificationMappings_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageClassificationMappingCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationStorageClassifications" : {
      "get" : {
        "tags" : [ "ReplicationStorageClassifications" ],
        "summary" : "Gets the list of storage classification objects under a vault.",
        "description" : "Lists the storage classifications in the vault.",
        "operationId" : "ReplicationStorageClassifications_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageClassificationCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationSupportedOperatingSystems" : {
      "get" : {
        "tags" : [ "SupportedOperatingSystems" ],
        "summary" : "Gets the data of supported OSes by SRS.",
        "operationId" : "SupportedOperatingSystems_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupportedOperatingSystems"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationVaultHealth" : {
      "get" : {
        "tags" : [ "ReplicationVaultHealth" ],
        "summary" : "Gets the health summary for the vault.",
        "description" : "Gets the health details of the vault.",
        "operationId" : "ReplicationVaultHealth_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaultHealthDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationVaultHealth/default/refresh" : {
      "post" : {
        "tags" : [ "ReplicationVaultHealth" ],
        "summary" : "Refreshes health summary of the vault.",
        "operationId" : "ReplicationVaultHealth_Refresh",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaultHealthDetails"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationVaultSettings" : {
      "get" : {
        "tags" : [ "ReplicationVaultSetting" ],
        "summary" : "Gets the list of vault setting.",
        "description" : "Gets the list of vault setting. This includes the Migration Hub connection settings.",
        "operationId" : "ReplicationVaultSetting_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaultSettingCollection"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationVaultSettings/{vaultSettingName}" : {
      "get" : {
        "tags" : [ "ReplicationVaultSetting" ],
        "summary" : "Gets the vault setting.",
        "description" : "Gets the vault setting. This includes the Migration Hub connection settings.",
        "operationId" : "ReplicationVaultSetting_Get",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vaultSettingName",
          "in" : "path",
          "description" : "Vault setting name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaultSetting"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReplicationVaultSetting" ],
        "summary" : "Updates vault setting. A vault setting object is a singleton per vault and it is always present by default.",
        "description" : "The operation to configure vault setting.",
        "operationId" : "ReplicationVaultSetting_Create",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "vaultSettingName",
          "in" : "path",
          "description" : "Vault setting name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Vault setting creation input.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VaultSettingCreationInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VaultSetting"
                }
              }
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationvCenters" : {
      "get" : {
        "tags" : [ "ReplicationvCenters" ],
        "summary" : "Gets the list of vCenter registered under the vault.",
        "description" : "Lists the vCenter servers registered in the vault.",
        "operationId" : "ReplicationvCenters_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "The name of the recovery services vault.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group where the recovery services vault is present.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VCenterCollection"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "A2AAddDisksInput" : {
        "properties" : {
          "vmDisks" : {
            "type" : "array",
            "description" : "The list of vm disk details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmDiskInputDetails"
            }
          },
          "vmManagedDisks" : {
            "type" : "array",
            "description" : "The list of vm managed disk details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmManagedDiskInputDetails"
            }
          }
        },
        "description" : "A2A add disk(s) input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AddDisksProviderSpecificInput"
        } ]
      },
      "A2AApplyRecoveryPointInput" : {
        "description" : "ApplyRecoveryPoint input specific to A2A provider.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApplyRecoveryPointProviderSpecificInput"
        } ]
      },
      "A2AContainerCreationInput" : {
        "description" : "A2A cloud creation input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificContainerCreationInput"
        } ]
      },
      "A2AContainerMappingInput" : {
        "properties" : {
          "agentAutoUpdateStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the auto update is enabled.",
            "enum" : [ "Disabled", "Enabled" ]
          },
          "automationAccountArmId" : {
            "type" : "string",
            "description" : "The automation account arm id."
          }
        },
        "description" : "A2A container mapping input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificContainerMappingInput"
        } ]
      },
      "A2AEnableProtectionInput" : {
        "properties" : {
          "diskEncryptionInfo" : {
            "$ref" : "#/components/schemas/DiskEncryptionInfo"
          },
          "fabricObjectId" : {
            "type" : "string",
            "description" : "The fabric specific object Id of the virtual machine."
          },
          "multiVmGroupName" : {
            "type" : "string",
            "description" : "The multi vm group name."
          },
          "recoveryAvailabilitySetId" : {
            "type" : "string",
            "description" : "The recovery availability set Id."
          },
          "recoveryAvailabilityZone" : {
            "type" : "string",
            "description" : "The recovery availability zone."
          },
          "recoveryAzureNetworkId" : {
            "type" : "string",
            "description" : "The recovery Azure virtual network ARM id."
          },
          "recoveryBootDiagStorageAccountId" : {
            "type" : "string",
            "description" : "The boot diagnostic storage account."
          },
          "recoveryCloudServiceId" : {
            "type" : "string",
            "description" : "The recovery cloud service Id. Valid for V1 scenarios."
          },
          "recoveryContainerId" : {
            "type" : "string",
            "description" : "The recovery container Id."
          },
          "recoveryResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery resource group Id. Valid for V2 scenarios."
          },
          "recoverySubnetName" : {
            "type" : "string",
            "description" : "The recovery subnet name."
          },
          "vmDisks" : {
            "type" : "array",
            "description" : "The list of vm disk details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmDiskInputDetails"
            }
          },
          "vmManagedDisks" : {
            "type" : "array",
            "description" : "The list of vm managed disk details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmManagedDiskInputDetails"
            }
          }
        },
        "description" : "A2A enable protection input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnableProtectionProviderSpecificInput"
        } ]
      },
      "A2AEventDetails" : {
        "properties" : {
          "fabricLocation" : {
            "type" : "string",
            "description" : "The fabric location."
          },
          "fabricName" : {
            "type" : "string",
            "description" : "Fabric arm name."
          },
          "fabricObjectId" : {
            "type" : "string",
            "description" : "The azure vm arm id."
          },
          "protectedItemName" : {
            "type" : "string",
            "description" : "The protected item arm name."
          },
          "remoteFabricLocation" : {
            "type" : "string",
            "description" : "Remote fabric location."
          },
          "remoteFabricName" : {
            "type" : "string",
            "description" : "Remote fabric arm name."
          }
        },
        "description" : "Model class for event details of a A2A event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventProviderSpecificDetails"
        } ]
      },
      "A2AFailoverProviderInput" : {
        "properties" : {
          "cloudServiceCreationOption" : {
            "type" : "string",
            "description" : "A value indicating whether to use recovery cloud service for TFO or not."
          },
          "recoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed."
          }
        },
        "description" : "A2A provider specific input for failover.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
        } ]
      },
      "A2APolicyCreationInput" : {
        "required" : [ "multiVmSyncStatus" ],
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency (in minutes).",
            "format" : "int32"
          },
          "crashConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The crash consistent snapshot frequency (in minutes).",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
            "enum" : [ "Enable", "Disable" ]
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          }
        },
        "description" : "A2A Policy creation input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
        } ]
      },
      "A2APolicyDetails" : {
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "crashConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The crash consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled."
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          },
          "recoveryPointThresholdInMinutes" : {
            "type" : "integer",
            "description" : "The recovery point threshold in minutes.",
            "format" : "int32"
          }
        },
        "description" : "A2A specific policy details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "A2AProtectedDiskDetails" : {
        "type" : "object",
        "properties" : {
          "allowedDiskLevelOperation" : {
            "type" : "array",
            "description" : "The disk level operations list.",
            "items" : {
              "type" : "string"
            }
          },
          "dataPendingAtSourceAgentInMB" : {
            "type" : "number",
            "description" : "The data pending at source virtual machine in MB.",
            "format" : "double"
          },
          "dataPendingInStagingStorageAccountInMB" : {
            "type" : "number",
            "description" : "The data pending for replication in MB at staging account.",
            "format" : "double"
          },
          "dekKeyVaultArmId" : {
            "type" : "string",
            "description" : "The KeyVault resource id for secret (BEK)."
          },
          "diskCapacityInBytes" : {
            "type" : "integer",
            "description" : "The disk capacity in bytes.",
            "format" : "int64"
          },
          "diskName" : {
            "type" : "string",
            "description" : "The disk name."
          },
          "diskState" : {
            "type" : "string",
            "description" : "The disk state."
          },
          "diskType" : {
            "type" : "string",
            "description" : "The type of disk."
          },
          "diskUri" : {
            "type" : "string",
            "description" : "The disk uri."
          },
          "isDiskEncrypted" : {
            "type" : "boolean",
            "description" : "A value indicating whether vm has encrypted os disk or not."
          },
          "isDiskKeyEncrypted" : {
            "type" : "boolean",
            "description" : "A value indicating whether disk key got encrypted or not."
          },
          "kekKeyVaultArmId" : {
            "type" : "string",
            "description" : "The KeyVault resource id for key (KEK)."
          },
          "keyIdentifier" : {
            "type" : "string",
            "description" : "The key URL / identifier (KEK)."
          },
          "monitoringJobType" : {
            "type" : "string",
            "description" : "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property."
          },
          "monitoringPercentageCompletion" : {
            "type" : "integer",
            "description" : "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
            "format" : "int32"
          },
          "primaryDiskAzureStorageAccountId" : {
            "type" : "string",
            "description" : "The primary disk storage account."
          },
          "primaryStagingAzureStorageAccountId" : {
            "type" : "string",
            "description" : "The primary staging storage account."
          },
          "recoveryAzureStorageAccountId" : {
            "type" : "string",
            "description" : "The recovery disk storage account."
          },
          "recoveryDiskUri" : {
            "type" : "string",
            "description" : "Recovery disk uri."
          },
          "resyncRequired" : {
            "type" : "boolean",
            "description" : "A value indicating whether resync is required for this disk."
          },
          "secretIdentifier" : {
            "type" : "string",
            "description" : "The secret URL / identifier (BEK)."
          }
        },
        "description" : "A2A protected disk details."
      },
      "A2AProtectedManagedDiskDetails" : {
        "type" : "object",
        "properties" : {
          "allowedDiskLevelOperation" : {
            "type" : "array",
            "description" : "The disk level operations list.",
            "items" : {
              "type" : "string"
            }
          },
          "dataPendingAtSourceAgentInMB" : {
            "type" : "number",
            "description" : "The data pending at source virtual machine in MB.",
            "format" : "double"
          },
          "dataPendingInStagingStorageAccountInMB" : {
            "type" : "number",
            "description" : "The data pending for replication in MB at staging account.",
            "format" : "double"
          },
          "dekKeyVaultArmId" : {
            "type" : "string",
            "description" : "The KeyVault resource id for secret (BEK)."
          },
          "diskCapacityInBytes" : {
            "type" : "integer",
            "description" : "The disk capacity in bytes.",
            "format" : "int64"
          },
          "diskId" : {
            "type" : "string",
            "description" : "The managed disk Arm id."
          },
          "diskName" : {
            "type" : "string",
            "description" : "The disk name."
          },
          "diskState" : {
            "type" : "string",
            "description" : "The disk state."
          },
          "diskType" : {
            "type" : "string",
            "description" : "The type of disk."
          },
          "failoverDiskName" : {
            "type" : "string",
            "description" : "The failover name for the managed disk."
          },
          "isDiskEncrypted" : {
            "type" : "boolean",
            "description" : "A value indicating whether vm has encrypted os disk or not."
          },
          "isDiskKeyEncrypted" : {
            "type" : "boolean",
            "description" : "A value indicating whether disk key got encrypted or not."
          },
          "kekKeyVaultArmId" : {
            "type" : "string",
            "description" : "The KeyVault resource id for key (KEK)."
          },
          "keyIdentifier" : {
            "type" : "string",
            "description" : "The key URL / identifier (KEK)."
          },
          "monitoringJobType" : {
            "type" : "string",
            "description" : "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property."
          },
          "monitoringPercentageCompletion" : {
            "type" : "integer",
            "description" : "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
            "format" : "int32"
          },
          "primaryStagingAzureStorageAccountId" : {
            "type" : "string",
            "description" : "The primary staging storage account."
          },
          "recoveryDiskEncryptionSetId" : {
            "type" : "string",
            "description" : "The recovery disk encryption set Id."
          },
          "recoveryReplicaDiskAccountType" : {
            "type" : "string",
            "description" : "The replica disk type. Its an optional value and will be same as source disk type if not user provided."
          },
          "recoveryReplicaDiskId" : {
            "type" : "string",
            "description" : "Recovery replica disk Arm Id."
          },
          "recoveryResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery disk resource group Arm Id."
          },
          "recoveryTargetDiskAccountType" : {
            "type" : "string",
            "description" : "The target disk type after failover. Its an optional value and will be same as source disk type if not user provided."
          },
          "recoveryTargetDiskId" : {
            "type" : "string",
            "description" : "Recovery target disk Arm Id."
          },
          "resyncRequired" : {
            "type" : "boolean",
            "description" : "A value indicating whether resync is required for this disk."
          },
          "secretIdentifier" : {
            "type" : "string",
            "description" : "The secret URL / identifier (BEK)."
          },
          "tfoDiskName" : {
            "type" : "string",
            "description" : "The test failover name for the managed disk."
          }
        },
        "description" : "A2A protected managed disk details."
      },
      "A2AProtectionContainerMappingDetails" : {
        "properties" : {
          "agentAutoUpdateStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the auto update is enabled.",
            "enum" : [ "Disabled", "Enabled" ]
          },
          "automationAccountArmId" : {
            "type" : "string",
            "description" : "The automation account arm id."
          },
          "jobScheduleName" : {
            "type" : "string",
            "description" : "The job schedule arm name."
          },
          "scheduleName" : {
            "type" : "string",
            "description" : "The schedule arm name."
          }
        },
        "description" : "A2A provider specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProtectionContainerMappingProviderSpecificDetails"
        } ]
      },
      "A2ARecoveryPointDetails" : {
        "properties" : {
          "disks" : {
            "type" : "array",
            "description" : "List of disk ids representing a recovery point.",
            "items" : {
              "type" : "string"
            }
          },
          "recoveryPointSyncType" : {
            "type" : "string",
            "description" : "A value indicating whether the recovery point is multi VM consistent.",
            "enum" : [ "MultiVmSyncRecoveryPoint", "PerVmRecoveryPoint" ]
          }
        },
        "description" : "A2A provider specific recovery point details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProviderSpecificRecoveryPointDetails"
        } ]
      },
      "A2ARemoveDisksInput" : {
        "properties" : {
          "vmDisksUris" : {
            "type" : "array",
            "description" : "The list of vm disk vhd URIs.",
            "items" : {
              "type" : "string"
            }
          },
          "vmManagedDisksIds" : {
            "type" : "array",
            "description" : "The list of vm managed disk Ids.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A2A remove disk(s) input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RemoveDisksProviderSpecificInput"
        } ]
      },
      "A2AReplicationDetails" : {
        "properties" : {
          "agentVersion" : {
            "type" : "string",
            "description" : "The agent version."
          },
          "fabricObjectId" : {
            "type" : "string",
            "description" : "The fabric specific object Id of the virtual machine."
          },
          "initialPrimaryFabricLocation" : {
            "type" : "string",
            "description" : "The initial primary fabric location.",
            "readOnly" : true
          },
          "initialRecoveryFabricLocation" : {
            "type" : "string",
            "description" : "The initial recovery fabric location.",
            "readOnly" : true
          },
          "isReplicationAgentUpdateRequired" : {
            "type" : "boolean",
            "description" : "A value indicating whether replication agent update is required."
          },
          "lastHeartbeat" : {
            "type" : "string",
            "description" : "The last heartbeat received from the source server.",
            "format" : "date-time"
          },
          "lastRpoCalculatedTime" : {
            "type" : "string",
            "description" : "The time (in UTC) when the last RPO value was calculated by Protection Service.",
            "format" : "date-time"
          },
          "lifecycleId" : {
            "type" : "string",
            "description" : "An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the \"same\" protected item even though other internal Ids/ARM Id might be changing."
          },
          "managementId" : {
            "type" : "string",
            "description" : "The management Id."
          },
          "monitoringJobType" : {
            "type" : "string",
            "description" : "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property."
          },
          "monitoringPercentageCompletion" : {
            "type" : "integer",
            "description" : "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
            "format" : "int32"
          },
          "multiVmGroupCreateOption" : {
            "type" : "string",
            "description" : "Whether Multi VM group is auto created or specified by user.",
            "enum" : [ "AutoCreated", "UserSpecified" ]
          },
          "multiVmGroupId" : {
            "type" : "string",
            "description" : "The multi vm group Id."
          },
          "multiVmGroupName" : {
            "type" : "string",
            "description" : "The multi vm group name."
          },
          "osType" : {
            "type" : "string",
            "description" : "The type of operating system."
          },
          "primaryFabricLocation" : {
            "type" : "string",
            "description" : "Primary fabric location."
          },
          "protectedDisks" : {
            "type" : "array",
            "description" : "The list of protected disks.",
            "items" : {
              "$ref" : "#/components/schemas/A2AProtectedDiskDetails"
            }
          },
          "protectedManagedDisks" : {
            "type" : "array",
            "description" : "The list of protected managed disks.",
            "items" : {
              "$ref" : "#/components/schemas/A2AProtectedManagedDiskDetails"
            }
          },
          "recoveryAvailabilitySet" : {
            "type" : "string",
            "description" : "The recovery availability set."
          },
          "recoveryAvailabilityZone" : {
            "type" : "string",
            "description" : "The recovery availability zone."
          },
          "recoveryAzureResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery resource group."
          },
          "recoveryAzureVMName" : {
            "type" : "string",
            "description" : "The name of recovery virtual machine."
          },
          "recoveryAzureVMSize" : {
            "type" : "string",
            "description" : "The size of recovery virtual machine."
          },
          "recoveryBootDiagStorageAccountId" : {
            "type" : "string",
            "description" : "The recovery boot diagnostic storage account Arm Id."
          },
          "recoveryCloudService" : {
            "type" : "string",
            "description" : "The recovery cloud service."
          },
          "recoveryFabricLocation" : {
            "type" : "string",
            "description" : "The recovery fabric location."
          },
          "recoveryFabricObjectId" : {
            "type" : "string",
            "description" : "The recovery fabric object Id."
          },
          "rpoInSeconds" : {
            "type" : "integer",
            "description" : "The last RPO value in seconds.",
            "format" : "int64"
          },
          "selectedRecoveryAzureNetworkId" : {
            "type" : "string",
            "description" : "The recovery virtual network."
          },
          "selectedTfoAzureNetworkId" : {
            "type" : "string",
            "description" : "The test failover virtual network."
          },
          "testFailoverRecoveryFabricObjectId" : {
            "type" : "string",
            "description" : "The test failover fabric object Id."
          },
          "tfoAzureVMName" : {
            "type" : "string",
            "description" : "The test failover VM name."
          },
          "unprotectedDisks" : {
            "type" : "array",
            "description" : "The list of unprotected disks.",
            "items" : {
              "$ref" : "#/components/schemas/A2AUnprotectedDiskDetails"
            }
          },
          "vmEncryptionType" : {
            "type" : "string",
            "description" : "The encryption type of the VM.",
            "readOnly" : true,
            "enum" : [ "NotEncrypted", "OnePassEncrypted", "TwoPassEncrypted" ]
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The virtual machine nic details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicDetails"
            }
          },
          "vmProtectionState" : {
            "type" : "string",
            "description" : "The protection state for the vm."
          },
          "vmProtectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description for the vm."
          },
          "vmSyncedConfigDetails" : {
            "$ref" : "#/components/schemas/AzureToAzureVmSyncedConfigDetails"
          }
        },
        "description" : "A2A provider specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
        } ]
      },
      "A2AReprotectInput" : {
        "properties" : {
          "policyId" : {
            "type" : "string",
            "description" : "The Policy Id."
          },
          "recoveryAvailabilitySetId" : {
            "type" : "string",
            "description" : "The recovery availability set."
          },
          "recoveryCloudServiceId" : {
            "type" : "string",
            "description" : "The recovery cloud service Id. Valid for V1 scenarios."
          },
          "recoveryContainerId" : {
            "type" : "string",
            "description" : "The recovery container Id."
          },
          "recoveryResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery resource group Id. Valid for V2 scenarios."
          },
          "vmDisks" : {
            "type" : "array",
            "description" : "The list of vm disk details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmDiskInputDetails"
            }
          }
        },
        "description" : "Azure specific reprotect input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReverseReplicationProviderSpecificInput"
        } ]
      },
      "A2ASwitchProtectionInput" : {
        "properties" : {
          "diskEncryptionInfo" : {
            "$ref" : "#/components/schemas/DiskEncryptionInfo"
          },
          "policyId" : {
            "type" : "string",
            "description" : "The Policy Id."
          },
          "recoveryAvailabilitySetId" : {
            "type" : "string",
            "description" : "The recovery availability set."
          },
          "recoveryBootDiagStorageAccountId" : {
            "type" : "string",
            "description" : "The boot diagnostic storage account."
          },
          "recoveryCloudServiceId" : {
            "type" : "string",
            "description" : "The recovery cloud service Id. Valid for V1 scenarios."
          },
          "recoveryContainerId" : {
            "type" : "string",
            "description" : "The recovery container Id."
          },
          "recoveryResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery resource group Id. Valid for V2 scenarios."
          },
          "vmDisks" : {
            "type" : "array",
            "description" : "The list of vm disk details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmDiskInputDetails"
            }
          },
          "vmManagedDisks" : {
            "type" : "array",
            "description" : "The list of vm managed disk details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmManagedDiskInputDetails"
            }
          }
        },
        "description" : "A2A specific switch protection input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SwitchProtectionProviderSpecificInput"
        } ]
      },
      "A2AUnprotectedDiskDetails" : {
        "type" : "object",
        "properties" : {
          "diskLunId" : {
            "type" : "integer",
            "description" : "The source lun Id for the data disk.",
            "format" : "int32"
          }
        },
        "description" : "A2A unprotected disk details."
      },
      "A2AUpdateContainerMappingInput" : {
        "properties" : {
          "agentAutoUpdateStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the auto update is enabled.",
            "enum" : [ "Disabled", "Enabled" ]
          },
          "automationAccountArmId" : {
            "type" : "string",
            "description" : "The automation account arm id."
          }
        },
        "description" : "A2A update protection container mapping.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificUpdateContainerMappingInput"
        } ]
      },
      "A2AUpdateReplicationProtectedItemInput" : {
        "properties" : {
          "diskEncryptionInfo" : {
            "$ref" : "#/components/schemas/DiskEncryptionInfo"
          },
          "managedDiskUpdateDetails" : {
            "type" : "array",
            "description" : "Managed disk update details.",
            "items" : {
              "$ref" : "#/components/schemas/A2AVmManagedDiskUpdateDetails"
            }
          },
          "recoveryBootDiagStorageAccountId" : {
            "type" : "string",
            "description" : "The boot diagnostic storage account."
          },
          "recoveryCloudServiceId" : {
            "type" : "string",
            "description" : "The target cloud service ARM Id (for V1)."
          },
          "recoveryResourceGroupId" : {
            "type" : "string",
            "description" : "The target resource group ARM Id (for V2)."
          },
          "tfoAzureVMName" : {
            "type" : "string",
            "description" : "The user given name for test failover VM."
          }
        },
        "description" : "InMage Azure V2 input to update replication protected item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateReplicationProtectedItemProviderInput"
        } ]
      },
      "A2AVmDiskInputDetails" : {
        "type" : "object",
        "properties" : {
          "diskUri" : {
            "type" : "string",
            "description" : "The disk Uri."
          },
          "primaryStagingAzureStorageAccountId" : {
            "type" : "string",
            "description" : "The primary staging storage account Id."
          },
          "recoveryAzureStorageAccountId" : {
            "type" : "string",
            "description" : "The recovery VHD storage account Id."
          }
        },
        "description" : "Azure VM disk input details."
      },
      "A2AVmManagedDiskInputDetails" : {
        "type" : "object",
        "properties" : {
          "diskEncryptionInfo" : {
            "$ref" : "#/components/schemas/DiskEncryptionInfo"
          },
          "diskId" : {
            "type" : "string",
            "description" : "The disk Id."
          },
          "primaryStagingAzureStorageAccountId" : {
            "type" : "string",
            "description" : "The primary staging storage account Arm Id."
          },
          "recoveryDiskEncryptionSetId" : {
            "type" : "string",
            "description" : "The recovery disk encryption set Id."
          },
          "recoveryReplicaDiskAccountType" : {
            "type" : "string",
            "description" : "The replica disk type. Its an optional value and will be same as source disk type if not user provided."
          },
          "recoveryResourceGroupId" : {
            "type" : "string",
            "description" : "The target resource group Arm Id."
          },
          "recoveryTargetDiskAccountType" : {
            "type" : "string",
            "description" : "The target disk type after failover. Its an optional value and will be same as source disk type if not user provided."
          }
        },
        "description" : "Azure VM managed disk input details."
      },
      "A2AVmManagedDiskUpdateDetails" : {
        "type" : "object",
        "properties" : {
          "diskEncryptionInfo" : {
            "$ref" : "#/components/schemas/DiskEncryptionInfo"
          },
          "diskId" : {
            "type" : "string",
            "description" : "The disk Id."
          },
          "failoverDiskName" : {
            "type" : "string",
            "description" : "The target disk name for unplanned failover operation."
          },
          "recoveryReplicaDiskAccountType" : {
            "type" : "string",
            "description" : "The replica disk type before failover."
          },
          "recoveryTargetDiskAccountType" : {
            "type" : "string",
            "description" : "The target disk type before failover."
          },
          "tfoDiskName" : {
            "type" : "string",
            "description" : "The target disk name for test failover operation."
          }
        },
        "description" : "Azure VM managed disk update input details."
      },
      "ASRTask" : {
        "type" : "object",
        "properties" : {
          "allowedActions" : {
            "type" : "array",
            "description" : "The state/actions applicable on this task.",
            "items" : {
              "type" : "string"
            }
          },
          "customDetails" : {
            "$ref" : "#/components/schemas/TaskTypeDetails"
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time.",
            "format" : "date-time"
          },
          "errors" : {
            "type" : "array",
            "description" : "The task error details.",
            "items" : {
              "$ref" : "#/components/schemas/JobErrorDetails"
            }
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The name."
          },
          "groupTaskCustomDetails" : {
            "$ref" : "#/components/schemas/GroupTaskDetails"
          },
          "name" : {
            "type" : "string",
            "description" : "The unique Task name."
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time.",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "description" : "The State. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other."
          },
          "stateDescription" : {
            "type" : "string",
            "description" : "The description of the task state. For example - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped."
          },
          "taskId" : {
            "type" : "string",
            "description" : "The Id."
          },
          "taskType" : {
            "type" : "string",
            "description" : "The type of task. Details in CustomDetails property depend on this type."
          }
        },
        "description" : "Task of the Job."
      },
      "AddDisksInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AddDisksInputProperties"
          }
        },
        "description" : "Input for add disk(s) operation."
      },
      "AddDisksInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/AddDisksProviderSpecificInput"
          }
        },
        "description" : "Add Disks input properties."
      },
      "AddDisksProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Add Disks provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "AddRecoveryServicesProviderInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AddRecoveryServicesProviderInputProperties"
          }
        },
        "description" : "Input required to add a provider."
      },
      "AddRecoveryServicesProviderInputProperties" : {
        "required" : [ "authenticationIdentityInput", "machineName", "resourceAccessIdentityInput" ],
        "type" : "object",
        "properties" : {
          "authenticationIdentityInput" : {
            "$ref" : "#/components/schemas/IdentityProviderInput"
          },
          "machineName" : {
            "type" : "string",
            "description" : "The name of the machine where the provider is getting added."
          },
          "resourceAccessIdentityInput" : {
            "$ref" : "#/components/schemas/IdentityProviderInput"
          }
        },
        "description" : "The properties of an add provider request."
      },
      "AddVCenterRequest" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AddVCenterRequestProperties"
          }
        },
        "description" : "Input required to add vCenter."
      },
      "AddVCenterRequestProperties" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string",
            "description" : "The friendly name of the vCenter."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address of the vCenter to be discovered."
          },
          "port" : {
            "type" : "string",
            "description" : "The port number for discovery."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The process server Id from where the discovery is orchestrated."
          },
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The account Id which has privileges to discover the vCenter."
          }
        },
        "description" : "The properties of an add vCenter request."
      },
      "Alert" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AlertProperties"
          }
        },
        "description" : "Implements the Alert class.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "AlertCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of alerts.",
            "items" : {
              "$ref" : "#/components/schemas/Alert"
            }
          }
        },
        "description" : "Collection of alerts."
      },
      "AlertProperties" : {
        "type" : "object",
        "properties" : {
          "customEmailAddresses" : {
            "type" : "array",
            "description" : "The custom email address for sending emails.",
            "items" : {
              "type" : "string"
            }
          },
          "locale" : {
            "type" : "string",
            "description" : "The locale for the email notification."
          },
          "sendToOwners" : {
            "type" : "string",
            "description" : "A value indicating whether to send email to subscription administrator."
          }
        },
        "description" : "The properties of an alert."
      },
      "ApplyRecoveryPointInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApplyRecoveryPointInputProperties"
          }
        },
        "description" : "Input to apply recovery point."
      },
      "ApplyRecoveryPointInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ApplyRecoveryPointProviderSpecificInput"
          },
          "recoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point Id."
          }
        },
        "description" : "Input properties to apply recovery point."
      },
      "ApplyRecoveryPointProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Provider specific input for apply recovery point.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "AsrJobDetails" : {
        "description" : "This class represents job details based on specific job type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "AutomationRunbookTaskDetails" : {
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "The automation account name of the runbook."
          },
          "cloudServiceName" : {
            "type" : "string",
            "description" : "The cloud service of the automation runbook account."
          },
          "isPrimarySideScript" : {
            "type" : "boolean",
            "description" : "A value indicating whether it is a primary side script or not."
          },
          "jobId" : {
            "type" : "string",
            "description" : "The job Id of the runbook execution."
          },
          "jobOutput" : {
            "type" : "string",
            "description" : "The execution output of the runbook."
          },
          "name" : {
            "type" : "string",
            "description" : "The recovery plan task name."
          },
          "runbookId" : {
            "type" : "string",
            "description" : "The runbook Id."
          },
          "runbookName" : {
            "type" : "string",
            "description" : "The runbook name."
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "The subscription Id of the automation runbook account."
          }
        },
        "description" : "This class represents the task details for an automation runbook.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "AzureFabricCreationInput" : {
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The Location."
          }
        },
        "description" : "Fabric provider specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificCreationInput"
        } ]
      },
      "AzureFabricSpecificDetails" : {
        "properties" : {
          "containerIds" : {
            "type" : "array",
            "description" : "The container Ids for the Azure fabric.",
            "items" : {
              "type" : "string"
            }
          },
          "location" : {
            "type" : "string",
            "description" : "The Location for the Azure fabric."
          }
        },
        "description" : "Azure Fabric Specific Details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificDetails"
        } ]
      },
      "AzureToAzureCreateNetworkMappingInput" : {
        "properties" : {
          "primaryNetworkId" : {
            "type" : "string",
            "description" : "The primary azure vnet Id."
          }
        },
        "description" : "Create network mappings input properties/behavior specific to Azure to Azure Network mapping.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificCreateNetworkMappingInput"
        } ]
      },
      "AzureToAzureNetworkMappingSettings" : {
        "properties" : {
          "primaryFabricLocation" : {
            "type" : "string",
            "description" : "The primary fabric location."
          },
          "recoveryFabricLocation" : {
            "type" : "string",
            "description" : "The recovery fabric location."
          }
        },
        "description" : "A2A Network Mapping fabric specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NetworkMappingFabricSpecificSettings"
        } ]
      },
      "AzureToAzureUpdateNetworkMappingInput" : {
        "properties" : {
          "primaryNetworkId" : {
            "type" : "string",
            "description" : "The primary azure vnet Id."
          }
        },
        "description" : "Updates network mappings input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificUpdateNetworkMappingInput"
        } ]
      },
      "AzureToAzureVmSyncedConfigDetails" : {
        "type" : "object",
        "properties" : {
          "inputEndpoints" : {
            "type" : "array",
            "description" : "The Azure VM input endpoints.",
            "items" : {
              "$ref" : "#/components/schemas/InputEndpoint"
            }
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The Azure VM tags."
          }
        },
        "description" : "Azure to Azure VM synced configuration details."
      },
      "AzureVmDiskDetails" : {
        "type" : "object",
        "properties" : {
          "diskEncryptionSetId" : {
            "type" : "string",
            "description" : "The DiskEncryptionSet ARM ID."
          },
          "diskId" : {
            "type" : "string",
            "description" : "The disk resource id."
          },
          "lunId" : {
            "type" : "string",
            "description" : "Ordinal\\LunId of the disk for the Azure VM."
          },
          "maxSizeMB" : {
            "type" : "string",
            "description" : "Max side in MB."
          },
          "targetDiskLocation" : {
            "type" : "string",
            "description" : "Blob uri of the Azure disk."
          },
          "targetDiskName" : {
            "type" : "string",
            "description" : "The target Azure disk name."
          },
          "vhdId" : {
            "type" : "string",
            "description" : "The VHD id."
          },
          "vhdName" : {
            "type" : "string",
            "description" : "VHD name."
          },
          "vhdType" : {
            "type" : "string",
            "description" : "VHD type."
          }
        },
        "description" : "Disk details for E2A provider."
      },
      "ComputeSizeErrorDetails" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "severity" : {
            "type" : "string",
            "description" : "The severity of the error."
          }
        },
        "description" : "Represents the error used to indicate why the target compute size is not applicable."
      },
      "ConfigurationSettings" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type. Overridden in derived classes.",
            "readOnly" : true
          }
        },
        "description" : "Replication provider specific settings.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ConfigureAlertRequest" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ConfigureAlertRequestProperties"
          }
        },
        "description" : "Request to configure alerts for the system."
      },
      "ConfigureAlertRequestProperties" : {
        "type" : "object",
        "properties" : {
          "customEmailAddresses" : {
            "type" : "array",
            "description" : "The custom email address for sending emails.",
            "items" : {
              "type" : "string"
            }
          },
          "locale" : {
            "type" : "string",
            "description" : "The locale for the email notification."
          },
          "sendToOwners" : {
            "type" : "string",
            "description" : "A value indicating whether to send email to subscription administrator."
          }
        },
        "description" : "Properties of a configure alert request."
      },
      "ConsistencyCheckTaskDetails" : {
        "properties" : {
          "vmDetails" : {
            "type" : "array",
            "description" : "The list of inconsistent Vm details.",
            "items" : {
              "$ref" : "#/components/schemas/InconsistentVmDetails"
            }
          }
        },
        "description" : "This class contains monitoring details of all the inconsistent Protected Entities in Vmm.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "CreateNetworkMappingInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CreateNetworkMappingInputProperties"
          }
        },
        "description" : "Create network mappings input."
      },
      "CreateNetworkMappingInputProperties" : {
        "type" : "object",
        "properties" : {
          "fabricSpecificDetails" : {
            "$ref" : "#/components/schemas/FabricSpecificCreateNetworkMappingInput"
          },
          "recoveryFabricName" : {
            "type" : "string",
            "description" : "Recovery fabric Name."
          },
          "recoveryNetworkId" : {
            "type" : "string",
            "description" : "Recovery network Id."
          }
        },
        "description" : "Common input details for network mapping operation."
      },
      "CreatePolicyInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CreatePolicyInputProperties"
          }
        },
        "description" : "Protection Policy input."
      },
      "CreatePolicyInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificInput" : {
            "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
          }
        },
        "description" : "Policy creation properties."
      },
      "CreateProtectionContainerInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CreateProtectionContainerInputProperties"
          }
        },
        "description" : "Create protection container input."
      },
      "CreateProtectionContainerInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificInput" : {
            "type" : "array",
            "description" : "Provider specific inputs for container creation.",
            "items" : {
              "$ref" : "#/components/schemas/ReplicationProviderSpecificContainerCreationInput"
            }
          }
        },
        "description" : "Create protection container input properties."
      },
      "CreateProtectionContainerMappingInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CreateProtectionContainerMappingInputProperties"
          }
        },
        "description" : "Configure pairing input."
      },
      "CreateProtectionContainerMappingInputProperties" : {
        "type" : "object",
        "properties" : {
          "policyId" : {
            "type" : "string",
            "description" : "Applicable policy."
          },
          "providerSpecificInput" : {
            "$ref" : "#/components/schemas/ReplicationProviderSpecificContainerMappingInput"
          },
          "targetProtectionContainerId" : {
            "type" : "string",
            "description" : "The target unique protection container name."
          }
        },
        "description" : "Configure pairing input properties."
      },
      "CreateRecoveryPlanInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CreateRecoveryPlanInputProperties"
          }
        },
        "description" : "Create recovery plan input class."
      },
      "CreateRecoveryPlanInputProperties" : {
        "required" : [ "groups", "primaryFabricId", "recoveryFabricId" ],
        "type" : "object",
        "properties" : {
          "failoverDeploymentModel" : {
            "type" : "string",
            "description" : "The failover deployment model.",
            "enum" : [ "NotApplicable", "Classic", "ResourceManager" ]
          },
          "groups" : {
            "type" : "array",
            "description" : "The recovery plan groups.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanGroup"
            }
          },
          "primaryFabricId" : {
            "type" : "string",
            "description" : "The primary fabric Id."
          },
          "recoveryFabricId" : {
            "type" : "string",
            "description" : "The recovery fabric Id."
          }
        },
        "description" : "Recovery plan creation properties."
      },
      "CurrentJobDetails" : {
        "type" : "object",
        "properties" : {
          "jobId" : {
            "type" : "string",
            "description" : "The ARM Id of the job being executed."
          },
          "jobName" : {
            "type" : "string",
            "description" : "The job name."
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the job.",
            "format" : "date-time"
          }
        },
        "description" : "Current job details of the migration item."
      },
      "CurrentScenarioDetails" : {
        "type" : "object",
        "properties" : {
          "jobId" : {
            "type" : "string",
            "description" : "ARM Id of the job being executed."
          },
          "scenarioName" : {
            "type" : "string",
            "description" : "Scenario name."
          },
          "startTime" : {
            "type" : "string",
            "description" : "Start time of the workflow.",
            "format" : "date-time"
          }
        },
        "description" : "Current scenario details of the protected entity."
      },
      "DataStore" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "string",
            "description" : "The capacity of data store in GBs."
          },
          "freeSpace" : {
            "type" : "string",
            "description" : "The free space of data store in GBs."
          },
          "symbolicName" : {
            "type" : "string",
            "description" : "The symbolic name of data store."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of data store."
          },
          "uuid" : {
            "type" : "string",
            "description" : "The uuid of data store."
          }
        },
        "description" : "The data store details of the MT."
      },
      "DisableProtectionInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DisableProtectionInputProperties"
          }
        },
        "description" : "Disable protection input."
      },
      "DisableProtectionInputProperties" : {
        "type" : "object",
        "properties" : {
          "disableProtectionReason" : {
            "type" : "string",
            "description" : "Disable protection reason. It can have values NotSpecified/MigrationComplete.",
            "enum" : [ "NotSpecified", "MigrationComplete" ]
          },
          "replicationProviderInput" : {
            "$ref" : "#/components/schemas/DisableProtectionProviderSpecificInput"
          }
        },
        "description" : "Disable protection input properties."
      },
      "DisableProtectionProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Disable protection provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "DiscoverProtectableItemRequest" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DiscoverProtectableItemRequestProperties"
          }
        },
        "description" : "Request to add a physical machine as a protectable item in a container."
      },
      "DiscoverProtectableItemRequestProperties" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string",
            "description" : "The friendly name of the physical machine."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address of the physical machine to be discovered."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type on the physical machine."
          }
        },
        "description" : "Discover protectable item properties."
      },
      "DiskDetails" : {
        "type" : "object",
        "properties" : {
          "maxSizeMB" : {
            "type" : "integer",
            "description" : "The hard disk max size in MB.",
            "format" : "int64"
          },
          "vhdId" : {
            "type" : "string",
            "description" : "The VHD Id."
          },
          "vhdName" : {
            "type" : "string",
            "description" : "The VHD name."
          },
          "vhdType" : {
            "type" : "string",
            "description" : "The type of the volume."
          }
        },
        "description" : "On-prem disk details data."
      },
      "DiskEncryptionInfo" : {
        "type" : "object",
        "properties" : {
          "diskEncryptionKeyInfo" : {
            "$ref" : "#/components/schemas/DiskEncryptionKeyInfo"
          },
          "keyEncryptionKeyInfo" : {
            "$ref" : "#/components/schemas/KeyEncryptionKeyInfo"
          }
        },
        "description" : "Recovery disk encryption info (BEK and KEK)."
      },
      "DiskEncryptionKeyInfo" : {
        "type" : "object",
        "properties" : {
          "keyVaultResourceArmId" : {
            "type" : "string",
            "description" : "The KeyVault resource ARM id for secret."
          },
          "secretIdentifier" : {
            "type" : "string",
            "description" : "The secret url / identifier."
          }
        },
        "description" : "Disk Encryption Key Information (BitLocker Encryption Key (BEK) on Windows)."
      },
      "DiskVolumeDetails" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "The volume label."
          },
          "name" : {
            "type" : "string",
            "description" : "The volume name."
          }
        },
        "description" : "Volume details."
      },
      "Display" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description. The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views. Prescriptive guidance for namespaces: Read any 'display.provider' resource Create or Update any 'display.provider' resource Delete any 'display.provider' resource Perform any other action on any 'display.provider' resource Prescriptive guidance for namespaces: Read any 'display.resource' Create or Update any 'display.resource' Delete any 'display.resource' 'ActionName' any 'display.resources'"
          },
          "operation" : {
            "type" : "string",
            "description" : "The operation. The localized friendly name for the operation, as it should be shown to the user. It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing. Prescriptive guidance: Read Create or Update Delete 'ActionName'"
          },
          "provider" : {
            "type" : "string",
            "description" : "The provider. The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with \"Microsoft\" for 1st party services. e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\""
          },
          "resource" : {
            "type" : "string",
            "description" : "The resource. The localized friendly form of the resource related to this action/operation – it should match the public documentation for the resource provider. It should use Title Casing. This value should be unique for a particular URL type (e.g. nested types should *not* reuse their parent’s display.resource field). e.g. \"Virtual Machines\" or \"Scheduler Job Collections\", or \"Virtual Machine VM Sizes\" or \"Scheduler Jobs\""
          }
        },
        "description" : "Contains the localized display information for this particular operation / action. These value will be used by several clients for (1) custom role definitions for RBAC; (2) complex query filters for the event service; and (3) audit history / records for management operations."
      },
      "EnableMigrationInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EnableMigrationInputProperties"
          }
        },
        "description" : "Enable migration input."
      },
      "EnableMigrationInputProperties" : {
        "required" : [ "policyId", "providerSpecificDetails" ],
        "type" : "object",
        "properties" : {
          "policyId" : {
            "type" : "string",
            "description" : "The policy Id."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/EnableMigrationProviderSpecificInput"
          }
        },
        "description" : "Enable migration input properties."
      },
      "EnableMigrationProviderSpecificInput" : {
        "required" : [ "instanceType" ],
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Enable migration provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "EnableProtectionInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EnableProtectionInputProperties"
          }
        },
        "description" : "Enable protection input."
      },
      "EnableProtectionInputProperties" : {
        "type" : "object",
        "properties" : {
          "policyId" : {
            "type" : "string",
            "description" : "The Policy Id."
          },
          "protectableItemId" : {
            "type" : "string",
            "description" : "The protectable item Id."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/EnableProtectionProviderSpecificInput"
          }
        },
        "description" : "Enable protection input properties."
      },
      "EnableProtectionProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Enable protection provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "EncryptionDetails" : {
        "type" : "object",
        "properties" : {
          "kekCertExpiryDate" : {
            "type" : "string",
            "description" : "The key encryption key certificate expiry date.",
            "format" : "date-time"
          },
          "kekCertThumbprint" : {
            "type" : "string",
            "description" : "The key encryption key certificate thumbprint."
          },
          "kekState" : {
            "type" : "string",
            "description" : "The key encryption key state for the Vmm."
          }
        },
        "description" : "Encryption details for the fabric."
      },
      "Event" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EventProperties"
          }
        },
        "description" : "Implements the Event class.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "EventCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of events.",
            "items" : {
              "$ref" : "#/components/schemas/Event"
            }
          }
        },
        "description" : "Collection of fabric details."
      },
      "EventProperties" : {
        "type" : "object",
        "properties" : {
          "affectedObjectFriendlyName" : {
            "type" : "string",
            "description" : "The friendly name of the source of the event on which it is raised (for example, VM, VMM etc)."
          },
          "description" : {
            "type" : "string",
            "description" : "The event name."
          },
          "eventCode" : {
            "type" : "string",
            "description" : "The Id of the monitoring event."
          },
          "eventSpecificDetails" : {
            "$ref" : "#/components/schemas/EventSpecificDetails"
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the event. for example: VM Health, Server Health, Job Failure etc."
          },
          "fabricId" : {
            "type" : "string",
            "description" : "The ARM ID of the fabric."
          },
          "healthErrors" : {
            "type" : "array",
            "description" : "The list of errors / warnings capturing details associated with the issue(s).",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/EventProviderSpecificDetails"
          },
          "severity" : {
            "type" : "string",
            "description" : "The severity of the event."
          },
          "timeOfOccurrence" : {
            "type" : "string",
            "description" : "The time of occurrence of the event.",
            "format" : "date-time"
          }
        },
        "description" : "The properties of a monitoring event."
      },
      "EventProviderSpecificDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type. Overridden in derived classes.",
            "readOnly" : true
          }
        },
        "description" : "Model class for provider specific details for an event.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "EventQueryParameter" : {
        "type" : "object",
        "properties" : {
          "affectedObjectFriendlyName" : {
            "type" : "string",
            "description" : "The affected object name of the events to be queried."
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time of the time range within which the events are to be queried.",
            "format" : "date-time"
          },
          "eventCode" : {
            "type" : "string",
            "description" : "The source id of the events to be queried."
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the events to be queried."
          },
          "fabricName" : {
            "type" : "string",
            "description" : "The affected object server id of the events to be queried."
          },
          "severity" : {
            "type" : "string",
            "description" : "The severity of the events to be queried."
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time of the time range within which the events are to be queried.",
            "format" : "date-time"
          }
        },
        "description" : "Implements the event query parameter."
      },
      "EventSpecificDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type. Overridden in derived classes.",
            "readOnly" : true
          }
        },
        "description" : "Model class for event specific details for an event.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ExportJobDetails" : {
        "properties" : {
          "blobUri" : {
            "type" : "string",
            "description" : "BlobUri of the exported jobs."
          },
          "sasToken" : {
            "type" : "string",
            "description" : "The sas token to access blob."
          }
        },
        "description" : "This class represents details for export jobs workflow.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "Fabric" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FabricProperties"
          }
        },
        "description" : "Fabric definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "FabricCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The fabric details.",
            "items" : {
              "$ref" : "#/components/schemas/Fabric"
            }
          }
        },
        "description" : "Collection of fabric details."
      },
      "FabricCreationInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FabricCreationInputProperties"
          }
        },
        "description" : "Site details provided during the time of site creation"
      },
      "FabricCreationInputProperties" : {
        "type" : "object",
        "properties" : {
          "customDetails" : {
            "$ref" : "#/components/schemas/FabricSpecificCreationInput"
          }
        },
        "description" : "Properties of site details provided during the time of site creation"
      },
      "FabricProperties" : {
        "type" : "object",
        "properties" : {
          "bcdrState" : {
            "type" : "string",
            "description" : "BCDR state of the fabric."
          },
          "customDetails" : {
            "$ref" : "#/components/schemas/FabricSpecificDetails"
          },
          "encryptionDetails" : {
            "$ref" : "#/components/schemas/EncryptionDetails"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly name of the fabric."
          },
          "health" : {
            "type" : "string",
            "description" : "Health of fabric."
          },
          "healthErrorDetails" : {
            "type" : "array",
            "description" : "Fabric health error details.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "internalIdentifier" : {
            "type" : "string",
            "description" : "Dra Registration Id."
          },
          "rolloverEncryptionDetails" : {
            "$ref" : "#/components/schemas/EncryptionDetails"
          }
        },
        "description" : "Fabric properties."
      },
      "FabricReplicationGroupTaskDetails" : {
        "properties" : {
          "jobTask" : {
            "$ref" : "#/components/schemas/JobEntity"
          },
          "skippedReason" : {
            "type" : "string",
            "description" : "The skipped reason."
          },
          "skippedReasonString" : {
            "type" : "string",
            "description" : "The skipped reason string."
          }
        },
        "description" : "This class represents the fabric replication group task details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "FabricSpecificCreateNetworkMappingInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The instance type."
          }
        },
        "description" : "Input details specific to fabrics during Network Mapping.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "FabricSpecificCreationInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type."
          }
        },
        "description" : "Fabric provider specific settings.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "FabricSpecificDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type. Overridden in derived classes.",
            "readOnly" : true
          }
        },
        "description" : "Fabric specific details.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "FabricSpecificUpdateNetworkMappingInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The instance type."
          }
        },
        "description" : "Input details specific to fabrics during Network Mapping.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "FailoverJobDetails" : {
        "properties" : {
          "protectedItemDetails" : {
            "type" : "array",
            "description" : "The test VM details.",
            "items" : {
              "$ref" : "#/components/schemas/FailoverReplicationProtectedItemDetails"
            }
          }
        },
        "description" : "This class represents the details for a failover job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "FailoverProcessServerRequest" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FailoverProcessServerRequestProperties"
          }
        },
        "description" : "Request to failover a process server."
      },
      "FailoverProcessServerRequestProperties" : {
        "type" : "object",
        "properties" : {
          "containerName" : {
            "type" : "string",
            "description" : "The container identifier."
          },
          "sourceProcessServerId" : {
            "type" : "string",
            "description" : "The source process server."
          },
          "targetProcessServerId" : {
            "type" : "string",
            "description" : "The new process server."
          },
          "updateType" : {
            "type" : "string",
            "description" : "A value for failover type. It can be systemlevel/serverlevel"
          },
          "vmsToMigrate" : {
            "type" : "array",
            "description" : "The VMS to migrate.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The properties of the Failover Process Server request."
      },
      "FailoverReplicationProtectedItemDetails" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string",
            "description" : "The friendly name."
          },
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "networkConnectionStatus" : {
            "type" : "string",
            "description" : "The network connection status."
          },
          "networkFriendlyName" : {
            "type" : "string",
            "description" : "The network friendly name."
          },
          "recoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point Id."
          },
          "recoveryPointTime" : {
            "type" : "string",
            "description" : "The recovery point time.",
            "format" : "date-time"
          },
          "subnet" : {
            "type" : "string",
            "description" : "The network subnet."
          },
          "testVmFriendlyName" : {
            "type" : "string",
            "description" : "The test Vm friendly name."
          },
          "testVmName" : {
            "type" : "string",
            "description" : "The test Vm name."
          }
        },
        "description" : "Failover details for a replication protected item."
      },
      "GroupTaskDetails" : {
        "type" : "object",
        "properties" : {
          "childTasks" : {
            "type" : "array",
            "description" : "The child tasks.",
            "items" : {
              "$ref" : "#/components/schemas/ASRTask"
            }
          },
          "instanceType" : {
            "type" : "string",
            "description" : "The type of task details."
          }
        },
        "description" : "This class represents the group task details when parent child relationship exists in the drill down.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "HealthError" : {
        "type" : "object",
        "properties" : {
          "creationTimeUtc" : {
            "type" : "string",
            "description" : "Error creation time (UTC)",
            "format" : "date-time"
          },
          "customerResolvability" : {
            "type" : "string",
            "description" : "Value indicating whether the health error is customer resolvable.",
            "enum" : [ "Allowed", "NotAllowed" ]
          },
          "entityId" : {
            "type" : "string",
            "description" : "ID of the entity."
          },
          "errorCategory" : {
            "type" : "string",
            "description" : "Category of error."
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Error code."
          },
          "errorId" : {
            "type" : "string",
            "description" : "The health error unique id."
          },
          "errorLevel" : {
            "type" : "string",
            "description" : "Level of error."
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Error message."
          },
          "errorSource" : {
            "type" : "string",
            "description" : "Source of error."
          },
          "errorType" : {
            "type" : "string",
            "description" : "Type of error."
          },
          "innerHealthErrors" : {
            "type" : "array",
            "description" : "The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.",
            "items" : {
              "$ref" : "#/components/schemas/InnerHealthError"
            }
          },
          "possibleCauses" : {
            "type" : "string",
            "description" : "Possible causes of error."
          },
          "recommendedAction" : {
            "type" : "string",
            "description" : "Recommended action to resolve error."
          },
          "recoveryProviderErrorMessage" : {
            "type" : "string",
            "description" : "DRA error message."
          },
          "summaryMessage" : {
            "type" : "string",
            "description" : "Summary message of the entity."
          }
        },
        "description" : "Health Error"
      },
      "HealthErrorSummary" : {
        "type" : "object",
        "properties" : {
          "affectedResourceCorrelationIds" : {
            "type" : "array",
            "description" : "The list of affected resource correlation Ids. This can be used to uniquely identify the count of items affected by a specific category and severity as well as count of item affected by an specific issue.",
            "items" : {
              "type" : "string"
            }
          },
          "affectedResourceSubtype" : {
            "type" : "string",
            "description" : "The sub type of any subcomponent within the ARM resource that this might be applicable. Value remains null if not applicable."
          },
          "affectedResourceType" : {
            "type" : "string",
            "description" : "The type of affected ARM resource."
          },
          "category" : {
            "type" : "string",
            "description" : "The category of the health error.",
            "enum" : [ "None", "Replication", "TestFailover", "Configuration", "FabricInfrastructure", "VersionExpiry", "AgentAutoUpdate" ]
          },
          "severity" : {
            "type" : "string",
            "description" : "Severity of error.",
            "enum" : [ "NONE", "Warning", "Error", "Info" ]
          },
          "summaryCode" : {
            "type" : "string",
            "description" : "The code of the health error."
          },
          "summaryMessage" : {
            "type" : "string",
            "description" : "The summary message of the health error."
          }
        },
        "description" : "class to define the summary of the health error details."
      },
      "HyperVReplica2012EventDetails" : {
        "properties" : {
          "containerName" : {
            "type" : "string",
            "description" : "The container friendly name."
          },
          "fabricName" : {
            "type" : "string",
            "description" : "The fabric friendly name."
          },
          "remoteContainerName" : {
            "type" : "string",
            "description" : "The remote container name."
          },
          "remoteFabricName" : {
            "type" : "string",
            "description" : "The remote fabric name."
          }
        },
        "description" : "Model class for event details of a HyperVReplica E2E event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventProviderSpecificDetails"
        } ]
      },
      "HyperVReplica2012R2EventDetails" : {
        "properties" : {
          "containerName" : {
            "type" : "string",
            "description" : "The container friendly name."
          },
          "fabricName" : {
            "type" : "string",
            "description" : "The fabric friendly name."
          },
          "remoteContainerName" : {
            "type" : "string",
            "description" : "The remote container name."
          },
          "remoteFabricName" : {
            "type" : "string",
            "description" : "The remote fabric name."
          }
        },
        "description" : "Model class for event details of a HyperVReplica blue E2E event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventProviderSpecificDetails"
        } ]
      },
      "HyperVReplicaAzureApplyRecoveryPointInput" : {
        "properties" : {
          "primaryKekCertificatePfx" : {
            "type" : "string",
            "description" : "The primary kek certificate pfx."
          },
          "secondaryKekCertificatePfx" : {
            "type" : "string",
            "description" : "The secondary kek certificate pfx."
          },
          "vaultLocation" : {
            "type" : "string",
            "description" : "The vault location where the recovery Vm resides."
          }
        },
        "description" : "ApplyRecoveryPoint input specific to HyperVReplicaAzure provider.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApplyRecoveryPointProviderSpecificInput"
        } ]
      },
      "HyperVReplicaAzureEnableProtectionInput" : {
        "properties" : {
          "disksToInclude" : {
            "type" : "array",
            "description" : "The list of VHD IDs of disks to be protected.",
            "items" : {
              "type" : "string"
            }
          },
          "enableRdpOnTargetOption" : {
            "type" : "string",
            "description" : "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum."
          },
          "hvHostVmId" : {
            "type" : "string",
            "description" : "The Hyper-V host Vm Id."
          },
          "logStorageAccountId" : {
            "type" : "string",
            "description" : "The storage account to be used for logging during replication."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type associated with vm."
          },
          "targetAzureNetworkId" : {
            "type" : "string",
            "description" : "The selected target Azure network Id."
          },
          "targetAzureSubnetId" : {
            "type" : "string",
            "description" : "The selected target Azure subnet Id."
          },
          "targetAzureV1ResourceGroupId" : {
            "type" : "string",
            "description" : "The Id of the target resource group (for classic deployment) in which the failover VM is to be created."
          },
          "targetAzureV2ResourceGroupId" : {
            "type" : "string",
            "description" : "The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created."
          },
          "targetAzureVmName" : {
            "type" : "string",
            "description" : "The target azure Vm Name."
          },
          "targetStorageAccountId" : {
            "type" : "string",
            "description" : "The storage account name."
          },
          "useManagedDisks" : {
            "type" : "string",
            "description" : "A value indicating whether managed disks should be used during failover."
          },
          "vhdId" : {
            "type" : "string",
            "description" : "The OS disk VHD id associated with vm."
          },
          "vmName" : {
            "type" : "string",
            "description" : "The Vm Name."
          }
        },
        "description" : "Azure specific enable protection input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnableProtectionProviderSpecificInput"
        } ]
      },
      "HyperVReplicaAzureEventDetails" : {
        "properties" : {
          "containerName" : {
            "type" : "string",
            "description" : "The container friendly name."
          },
          "fabricName" : {
            "type" : "string",
            "description" : "The fabric friendly name."
          },
          "remoteContainerName" : {
            "type" : "string",
            "description" : "The remote container name."
          }
        },
        "description" : "Model class for event details of a HyperVReplica E2A event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventProviderSpecificDetails"
        } ]
      },
      "HyperVReplicaAzureFailbackProviderInput" : {
        "properties" : {
          "dataSyncOption" : {
            "type" : "string",
            "description" : "Data sync option."
          },
          "providerIdForAlternateRecovery" : {
            "type" : "string",
            "description" : "Provider ID for alternate location"
          },
          "recoveryVmCreationOption" : {
            "type" : "string",
            "description" : "ALR options to create alternate recovery."
          }
        },
        "description" : "HvrA provider specific input for failback.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
        } ]
      },
      "HyperVReplicaAzureFailoverProviderInput" : {
        "properties" : {
          "primaryKekCertificatePfx" : {
            "type" : "string",
            "description" : "Primary kek certificate pfx."
          },
          "recoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed."
          },
          "secondaryKekCertificatePfx" : {
            "type" : "string",
            "description" : "Secondary kek certificate pfx."
          },
          "vaultLocation" : {
            "type" : "string",
            "description" : "Location of the vault."
          }
        },
        "description" : "HvrA provider specific input for failover.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
        } ]
      },
      "HyperVReplicaAzurePolicyDetails" : {
        "properties" : {
          "activeStorageAccountId" : {
            "type" : "string",
            "description" : "The active storage account Id."
          },
          "applicationConsistentSnapshotFrequencyInHours" : {
            "type" : "integer",
            "description" : "The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.",
            "format" : "int32"
          },
          "encryption" : {
            "type" : "string",
            "description" : "A value indicating whether encryption is enabled for virtual machines in this cloud."
          },
          "onlineReplicationStartTime" : {
            "type" : "string",
            "description" : "The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately."
          },
          "recoveryPointHistoryDurationInHours" : {
            "type" : "integer",
            "description" : "The duration (in hours) to which point the recovery history needs to be maintained.",
            "format" : "int32"
          },
          "replicationInterval" : {
            "type" : "integer",
            "description" : "The replication interval.",
            "format" : "int32"
          }
        },
        "description" : "Hyper-V Replica Azure specific protection profile details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "HyperVReplicaAzurePolicyInput" : {
        "properties" : {
          "applicationConsistentSnapshotFrequencyInHours" : {
            "type" : "integer",
            "description" : "The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.",
            "format" : "int32"
          },
          "onlineReplicationStartTime" : {
            "type" : "string",
            "description" : "The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately."
          },
          "recoveryPointHistoryDuration" : {
            "type" : "integer",
            "description" : "The duration (in hours) to which point the recovery history needs to be maintained.",
            "format" : "int32"
          },
          "replicationInterval" : {
            "type" : "integer",
            "description" : "The replication interval.",
            "format" : "int32"
          },
          "storageAccounts" : {
            "type" : "array",
            "description" : "The list of storage accounts to which the VMs in the primary cloud can replicate to.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Hyper-V Replica Azure specific input for creating a protection profile.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
        } ]
      },
      "HyperVReplicaAzureReplicationDetails" : {
        "properties" : {
          "azureVmDiskDetails" : {
            "type" : "array",
            "description" : "Azure VM Disk details.",
            "items" : {
              "$ref" : "#/components/schemas/AzureVmDiskDetails"
            }
          },
          "enableRdpOnTargetOption" : {
            "type" : "string",
            "description" : "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum."
          },
          "encryption" : {
            "type" : "string",
            "description" : "The encryption info."
          },
          "initialReplicationDetails" : {
            "$ref" : "#/components/schemas/InitialReplicationDetails"
          },
          "lastReplicatedTime" : {
            "type" : "string",
            "description" : "The Last replication time.",
            "format" : "date-time"
          },
          "lastRpoCalculatedTime" : {
            "type" : "string",
            "description" : "The last RPO calculated time.",
            "format" : "date-time"
          },
          "licenseType" : {
            "type" : "string",
            "description" : "License Type of the VM to be used."
          },
          "oSDetails" : {
            "$ref" : "#/components/schemas/OSDetails"
          },
          "recoveryAvailabilitySetId" : {
            "type" : "string",
            "description" : "The recovery availability set Id."
          },
          "recoveryAzureLogStorageAccountId" : {
            "type" : "string",
            "description" : "The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection."
          },
          "recoveryAzureResourceGroupId" : {
            "type" : "string",
            "description" : "The target resource group Id."
          },
          "recoveryAzureStorageAccount" : {
            "type" : "string",
            "description" : "The recovery Azure storage account."
          },
          "recoveryAzureVMSize" : {
            "type" : "string",
            "description" : "The Recovery Azure VM size."
          },
          "recoveryAzureVmName" : {
            "type" : "string",
            "description" : "Recovery Azure given name."
          },
          "rpoInSeconds" : {
            "type" : "integer",
            "description" : "Last RPO value.",
            "format" : "int64"
          },
          "selectedRecoveryAzureNetworkId" : {
            "type" : "string",
            "description" : "The selected recovery azure network Id."
          },
          "selectedSourceNicId" : {
            "type" : "string",
            "description" : "The selected source nic Id which will be used as the primary nic during failover."
          },
          "sourceVmCpuCount" : {
            "type" : "integer",
            "description" : "The CPU count of the VM on the primary side.",
            "format" : "int32"
          },
          "sourceVmRamSizeInMB" : {
            "type" : "integer",
            "description" : "The RAM size of the VM on the primary side.",
            "format" : "int32"
          },
          "useManagedDisks" : {
            "type" : "string",
            "description" : "A value indicating whether managed disks should be used during failover."
          },
          "vmId" : {
            "type" : "string",
            "description" : "The virtual machine Id."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The PE Network details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicDetails"
            }
          },
          "vmProtectionState" : {
            "type" : "string",
            "description" : "The protection state for the vm."
          },
          "vmProtectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description for the vm."
          }
        },
        "description" : "Hyper V Replica Azure provider specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
        } ]
      },
      "HyperVReplicaAzureReprotectInput" : {
        "properties" : {
          "hvHostVmId" : {
            "type" : "string",
            "description" : "The Hyper-V host Vm Id."
          },
          "logStorageAccountId" : {
            "type" : "string",
            "description" : "The storage account to be used for logging during replication."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type associated with vm."
          },
          "storageAccountId" : {
            "type" : "string",
            "description" : "The storage account name."
          },
          "vHDId" : {
            "type" : "string",
            "description" : "The OS disk VHD id associated with vm."
          },
          "vmName" : {
            "type" : "string",
            "description" : "The Vm Name."
          }
        },
        "description" : "Azure specific reprotect input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReverseReplicationProviderSpecificInput"
        } ]
      },
      "HyperVReplicaAzureUpdateReplicationProtectedItemInput" : {
        "properties" : {
          "diskIdToDiskEncryptionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The dictionary of disk resource Id to disk encryption set ARM Id."
          },
          "recoveryAzureV1ResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery Azure resource group Id for classic deployment."
          },
          "recoveryAzureV2ResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery Azure resource group Id for resource manager deployment."
          },
          "useManagedDisks" : {
            "type" : "string",
            "description" : "A value indicating whether managed disks should be used during failover."
          }
        },
        "description" : "HyperV replica Azure input to update replication protected item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateReplicationProtectedItemProviderInput"
        } ]
      },
      "HyperVReplicaBaseEventDetails" : {
        "properties" : {
          "containerName" : {
            "type" : "string",
            "description" : "The container friendly name."
          },
          "fabricName" : {
            "type" : "string",
            "description" : "The fabric friendly name."
          },
          "remoteContainerName" : {
            "type" : "string",
            "description" : "The remote container name."
          },
          "remoteFabricName" : {
            "type" : "string",
            "description" : "The remote fabric name."
          }
        },
        "description" : "Abstract model class for event details of a HyperVReplica E2E event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventProviderSpecificDetails"
        } ]
      },
      "HyperVReplicaBasePolicyDetails" : {
        "properties" : {
          "allowedAuthenticationType" : {
            "type" : "integer",
            "description" : "A value indicating the authentication type.",
            "format" : "int32"
          },
          "applicationConsistentSnapshotFrequencyInHours" : {
            "type" : "integer",
            "description" : "A value indicating the application consistent frequency.",
            "format" : "int32"
          },
          "compression" : {
            "type" : "string",
            "description" : "A value indicating whether compression has to be enabled."
          },
          "initialReplicationMethod" : {
            "type" : "string",
            "description" : "A value indicating whether IR is online."
          },
          "offlineReplicationExportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR export path."
          },
          "offlineReplicationImportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR import path."
          },
          "onlineReplicationStartTime" : {
            "type" : "string",
            "description" : "A value indicating the online IR start time."
          },
          "recoveryPoints" : {
            "type" : "integer",
            "description" : "A value indicating the number of recovery points.",
            "format" : "int32"
          },
          "replicaDeletionOption" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud"
          },
          "replicationPort" : {
            "type" : "integer",
            "description" : "A value indicating the recovery HTTPS port.",
            "format" : "int32"
          }
        },
        "description" : "Base class for HyperVReplica policy details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "HyperVReplicaBaseReplicationDetails" : {
        "properties" : {
          "initialReplicationDetails" : {
            "$ref" : "#/components/schemas/InitialReplicationDetails"
          },
          "lastReplicatedTime" : {
            "type" : "string",
            "description" : "The Last replication time.",
            "format" : "date-time"
          },
          "vMDiskDetails" : {
            "type" : "array",
            "description" : "VM disk details.",
            "items" : {
              "$ref" : "#/components/schemas/DiskDetails"
            }
          },
          "vmId" : {
            "type" : "string",
            "description" : "The virtual machine Id."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The PE Network details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicDetails"
            }
          },
          "vmProtectionState" : {
            "type" : "string",
            "description" : "The protection state for the vm."
          },
          "vmProtectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description for the vm."
          }
        },
        "description" : "Hyper V replica provider specific settings base class.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
        } ]
      },
      "HyperVReplicaBluePolicyDetails" : {
        "properties" : {
          "allowedAuthenticationType" : {
            "type" : "integer",
            "description" : "A value indicating the authentication type.",
            "format" : "int32"
          },
          "applicationConsistentSnapshotFrequencyInHours" : {
            "type" : "integer",
            "description" : "A value indicating the application consistent frequency.",
            "format" : "int32"
          },
          "compression" : {
            "type" : "string",
            "description" : "A value indicating whether compression has to be enabled."
          },
          "initialReplicationMethod" : {
            "type" : "string",
            "description" : "A value indicating whether IR is online."
          },
          "offlineReplicationExportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR export path."
          },
          "offlineReplicationImportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR import path."
          },
          "onlineReplicationStartTime" : {
            "type" : "string",
            "description" : "A value indicating the online IR start time."
          },
          "recoveryPoints" : {
            "type" : "integer",
            "description" : "A value indicating the number of recovery points.",
            "format" : "int32"
          },
          "replicaDeletionOption" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud"
          },
          "replicationFrequencyInSeconds" : {
            "type" : "integer",
            "description" : "A value indicating the replication interval.",
            "format" : "int32"
          },
          "replicationPort" : {
            "type" : "integer",
            "description" : "A value indicating the recovery HTTPS port.",
            "format" : "int32"
          }
        },
        "description" : "Hyper-V Replica Blue specific protection profile details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "HyperVReplicaBluePolicyInput" : {
        "properties" : {
          "allowedAuthenticationType" : {
            "type" : "integer",
            "description" : "A value indicating the authentication type.",
            "format" : "int32"
          },
          "applicationConsistentSnapshotFrequencyInHours" : {
            "type" : "integer",
            "description" : "A value indicating the application consistent frequency.",
            "format" : "int32"
          },
          "compression" : {
            "type" : "string",
            "description" : "A value indicating whether compression has to be enabled."
          },
          "initialReplicationMethod" : {
            "type" : "string",
            "description" : "A value indicating whether IR is online."
          },
          "offlineReplicationExportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR export path."
          },
          "offlineReplicationImportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR import path."
          },
          "onlineReplicationStartTime" : {
            "type" : "string",
            "description" : "A value indicating the online IR start time."
          },
          "recoveryPoints" : {
            "type" : "integer",
            "description" : "A value indicating the number of recovery points.",
            "format" : "int32"
          },
          "replicaDeletion" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has to be auto deleted."
          },
          "replicationFrequencyInSeconds" : {
            "type" : "integer",
            "description" : "A value indicating the replication interval.",
            "format" : "int32"
          },
          "replicationPort" : {
            "type" : "integer",
            "description" : "A value indicating the recovery HTTPS port.",
            "format" : "int32"
          }
        },
        "description" : "HyperV Replica Blue policy input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
        } ]
      },
      "HyperVReplicaBlueReplicationDetails" : {
        "properties" : {
          "initialReplicationDetails" : {
            "$ref" : "#/components/schemas/InitialReplicationDetails"
          },
          "lastReplicatedTime" : {
            "type" : "string",
            "description" : "The Last replication time.",
            "format" : "date-time"
          },
          "vMDiskDetails" : {
            "type" : "array",
            "description" : "VM disk details.",
            "items" : {
              "$ref" : "#/components/schemas/DiskDetails"
            }
          },
          "vmId" : {
            "type" : "string",
            "description" : "The virtual machine Id."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The PE Network details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicDetails"
            }
          },
          "vmProtectionState" : {
            "type" : "string",
            "description" : "The protection state for the vm."
          },
          "vmProtectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description for the vm."
          }
        },
        "description" : "HyperV replica 2012 R2 (Blue) replication details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
        } ]
      },
      "HyperVReplicaPolicyDetails" : {
        "properties" : {
          "allowedAuthenticationType" : {
            "type" : "integer",
            "description" : "A value indicating the authentication type.",
            "format" : "int32"
          },
          "applicationConsistentSnapshotFrequencyInHours" : {
            "type" : "integer",
            "description" : "A value indicating the application consistent frequency.",
            "format" : "int32"
          },
          "compression" : {
            "type" : "string",
            "description" : "A value indicating whether compression has to be enabled."
          },
          "initialReplicationMethod" : {
            "type" : "string",
            "description" : "A value indicating whether IR is online."
          },
          "offlineReplicationExportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR export path."
          },
          "offlineReplicationImportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR import path."
          },
          "onlineReplicationStartTime" : {
            "type" : "string",
            "description" : "A value indicating the online IR start time."
          },
          "recoveryPoints" : {
            "type" : "integer",
            "description" : "A value indicating the number of recovery points.",
            "format" : "int32"
          },
          "replicaDeletionOption" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud"
          },
          "replicationPort" : {
            "type" : "integer",
            "description" : "A value indicating the recovery HTTPS port.",
            "format" : "int32"
          }
        },
        "description" : "Hyper-V Replica Blue specific protection profile details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "HyperVReplicaPolicyInput" : {
        "properties" : {
          "allowedAuthenticationType" : {
            "type" : "integer",
            "description" : "A value indicating the authentication type.",
            "format" : "int32"
          },
          "applicationConsistentSnapshotFrequencyInHours" : {
            "type" : "integer",
            "description" : "A value indicating the application consistent frequency.",
            "format" : "int32"
          },
          "compression" : {
            "type" : "string",
            "description" : "A value indicating whether compression has to be enabled."
          },
          "initialReplicationMethod" : {
            "type" : "string",
            "description" : "A value indicating whether IR is online."
          },
          "offlineReplicationExportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR export path."
          },
          "offlineReplicationImportPath" : {
            "type" : "string",
            "description" : "A value indicating the offline IR import path."
          },
          "onlineReplicationStartTime" : {
            "type" : "string",
            "description" : "A value indicating the online IR start time."
          },
          "recoveryPoints" : {
            "type" : "integer",
            "description" : "A value indicating the number of recovery points.",
            "format" : "int32"
          },
          "replicaDeletion" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has to be auto deleted."
          },
          "replicationPort" : {
            "type" : "integer",
            "description" : "A value indicating the recovery HTTPS port.",
            "format" : "int32"
          }
        },
        "description" : "Hyper-V Replica specific policy Input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
        } ]
      },
      "HyperVReplicaReplicationDetails" : {
        "properties" : {
          "initialReplicationDetails" : {
            "$ref" : "#/components/schemas/InitialReplicationDetails"
          },
          "lastReplicatedTime" : {
            "type" : "string",
            "description" : "The Last replication time.",
            "format" : "date-time"
          },
          "vMDiskDetails" : {
            "type" : "array",
            "description" : "VM disk details.",
            "items" : {
              "$ref" : "#/components/schemas/DiskDetails"
            }
          },
          "vmId" : {
            "type" : "string",
            "description" : "The virtual machine Id."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The PE Network details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicDetails"
            }
          },
          "vmProtectionState" : {
            "type" : "string",
            "description" : "The protection state for the vm."
          },
          "vmProtectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description for the vm."
          }
        },
        "description" : "HyperV replica 2012 replication details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
        } ]
      },
      "HyperVSiteDetails" : {
        "description" : "HyperVSite fabric specific details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificDetails"
        } ]
      },
      "HyperVVirtualMachineDetails" : {
        "properties" : {
          "diskDetails" : {
            "type" : "array",
            "description" : "The Last successful failover time.",
            "items" : {
              "$ref" : "#/components/schemas/DiskDetails"
            }
          },
          "generation" : {
            "type" : "string",
            "description" : "The id of the object in fabric."
          },
          "hasFibreChannelAdapter" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has a fibre channel adapter attached. String value of {SrsDataContract.PresenceStatus} enum.",
            "enum" : [ "Unknown", "Present", "NotPresent" ]
          },
          "hasPhysicalDisk" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has a physical disk attached. String value of {SrsDataContract.PresenceStatus} enum.",
            "enum" : [ "Unknown", "Present", "NotPresent" ]
          },
          "hasSharedVhd" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has a shared VHD attached. String value of {SrsDataContract.PresenceStatus} enum.",
            "enum" : [ "Unknown", "Present", "NotPresent" ]
          },
          "osDetails" : {
            "$ref" : "#/components/schemas/OSDetails"
          },
          "sourceItemId" : {
            "type" : "string",
            "description" : "The source id of the object."
          }
        },
        "description" : "Single Host fabric provider specific VM settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConfigurationSettings"
        } ]
      },
      "IPConfig" : {
        "type" : "object",
        "properties" : {
          "lBBackendAddressPoolIds" : {
            "type" : "array",
            "description" : "The backend address pools associated with the IP configuration.",
            "items" : {
              "type" : "string"
            }
          },
          "publicIpAddressId" : {
            "type" : "string",
            "description" : "The Id of the public IP address associated with the IP configuration."
          },
          "staticIPAddress" : {
            "type" : "string",
            "description" : "The static IP address of the IP configuration."
          }
        },
        "description" : "IP configuration details."
      },
      "IdentityProviderDetails" : {
        "type" : "object",
        "properties" : {
          "aadAuthority" : {
            "type" : "string",
            "description" : "The base authority for Azure Active Directory authentication."
          },
          "applicationId" : {
            "type" : "string",
            "description" : "The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          },
          "audience" : {
            "type" : "string",
            "description" : "The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          },
          "objectId" : {
            "type" : "string",
            "description" : "The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          }
        },
        "description" : "Identity provider details."
      },
      "IdentityProviderInput" : {
        "required" : [ "aadAuthority", "applicationId", "audience", "objectId", "tenantId" ],
        "type" : "object",
        "properties" : {
          "aadAuthority" : {
            "type" : "string",
            "description" : "The base authority for Azure Active Directory authentication."
          },
          "applicationId" : {
            "type" : "string",
            "description" : "The application/client Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          },
          "audience" : {
            "type" : "string",
            "description" : "The intended Audience of the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          },
          "objectId" : {
            "type" : "string",
            "description" : "The object Id of the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The tenant Id for the service principal with which the on-premise management/data plane components would communicate with our Azure services."
          }
        },
        "description" : "Identity provider input."
      },
      "InMageAgentDetails" : {
        "type" : "object",
        "properties" : {
          "agentExpiryDate" : {
            "type" : "string",
            "description" : "Agent expiry date.",
            "format" : "date-time"
          },
          "agentUpdateStatus" : {
            "type" : "string",
            "description" : "A value indicating whether installed agent needs to be updated."
          },
          "agentVersion" : {
            "type" : "string",
            "description" : "The agent version."
          },
          "postUpdateRebootStatus" : {
            "type" : "string",
            "description" : "A value indicating whether reboot is required after update is applied."
          }
        },
        "description" : "The details of the InMage agent."
      },
      "InMageAgentVersionDetails" : {
        "type" : "object",
        "properties" : {
          "expiryDate" : {
            "type" : "string",
            "description" : "Version expiry date.",
            "format" : "date-time"
          },
          "postUpdateRebootStatus" : {
            "type" : "string",
            "description" : "A value indicating whether reboot is required after update is applied."
          },
          "status" : {
            "type" : "string",
            "description" : "A value indicating whether security update required.",
            "enum" : [ "Supported", "NotSupported", "Deprecated", "UpdateRequired", "SecurityUpdateRequired" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The agent version."
          }
        },
        "description" : "InMage agent version details."
      },
      "InMageAzureV2ApplyRecoveryPointInput" : {
        "properties" : {
          "vaultLocation" : {
            "type" : "string",
            "description" : "The vault location where the recovery Vm resides."
          }
        },
        "description" : "ApplyRecoveryPoint input specific to InMageAzureV2 provider.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApplyRecoveryPointProviderSpecificInput"
        } ]
      },
      "InMageAzureV2DiskInputDetails" : {
        "type" : "object",
        "properties" : {
          "diskEncryptionSetId" : {
            "type" : "string",
            "description" : "The DiskEncryptionSet ARM ID."
          },
          "diskId" : {
            "type" : "string",
            "description" : "The DiskId."
          },
          "diskType" : {
            "type" : "string",
            "description" : "The DiskType.",
            "enum" : [ "Standard_LRS", "Premium_LRS", "StandardSSD_LRS" ]
          },
          "logStorageAccountId" : {
            "type" : "string",
            "description" : "The LogStorageAccountId."
          }
        },
        "description" : "Disk input details."
      },
      "InMageAzureV2EnableProtectionInput" : {
        "properties" : {
          "diskEncryptionSetId" : {
            "type" : "string",
            "description" : "The DiskEncryptionSet ARM ID."
          },
          "diskType" : {
            "type" : "string",
            "description" : "The DiskType.",
            "enum" : [ "Standard_LRS", "Premium_LRS", "StandardSSD_LRS" ]
          },
          "disksToInclude" : {
            "type" : "array",
            "description" : "The disks to include list.",
            "items" : {
              "$ref" : "#/components/schemas/InMageAzureV2DiskInputDetails"
            }
          },
          "enableRdpOnTargetOption" : {
            "type" : "string",
            "description" : "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum."
          },
          "logStorageAccountId" : {
            "type" : "string",
            "description" : "The storage account to be used for logging during replication."
          },
          "masterTargetId" : {
            "type" : "string",
            "description" : "The Master target Id."
          },
          "multiVmGroupId" : {
            "type" : "string",
            "description" : "The multi vm group Id."
          },
          "multiVmGroupName" : {
            "type" : "string",
            "description" : "The multi vm group name."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The Process Server Id."
          },
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The CS account Id."
          },
          "storageAccountId" : {
            "type" : "string",
            "description" : "The storage account name."
          },
          "targetAzureNetworkId" : {
            "type" : "string",
            "description" : "The selected target Azure network Id."
          },
          "targetAzureSubnetId" : {
            "type" : "string",
            "description" : "The selected target Azure subnet Id."
          },
          "targetAzureV1ResourceGroupId" : {
            "type" : "string",
            "description" : "The Id of the target resource group (for classic deployment) in which the failover VM is to be created."
          },
          "targetAzureV2ResourceGroupId" : {
            "type" : "string",
            "description" : "The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created."
          },
          "targetAzureVmName" : {
            "type" : "string",
            "description" : "The target azure Vm Name."
          }
        },
        "description" : "VMware Azure specific enable protection input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnableProtectionProviderSpecificInput"
        } ]
      },
      "InMageAzureV2EventDetails" : {
        "properties" : {
          "category" : {
            "type" : "string",
            "description" : "InMage Event Category."
          },
          "component" : {
            "type" : "string",
            "description" : "InMage Event Component."
          },
          "correctiveAction" : {
            "type" : "string",
            "description" : "Corrective Action string for the event."
          },
          "details" : {
            "type" : "string",
            "description" : "InMage Event Details."
          },
          "eventType" : {
            "type" : "string",
            "description" : "InMage Event type. Takes one of the values of {InMageDataContract.InMageMonitoringEventType}."
          },
          "siteName" : {
            "type" : "string",
            "description" : "VMware Site name."
          },
          "summary" : {
            "type" : "string",
            "description" : "InMage Event Summary."
          }
        },
        "description" : "Model class for event details of a VMwareAzureV2 event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventProviderSpecificDetails"
        } ]
      },
      "InMageAzureV2FailoverProviderInput" : {
        "properties" : {
          "recoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed."
          },
          "vaultLocation" : {
            "type" : "string",
            "description" : "Location of the vault."
          }
        },
        "description" : "InMageAzureV2 provider specific input for failover.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
        } ]
      },
      "InMageAzureV2ManagedDiskDetails" : {
        "type" : "object",
        "properties" : {
          "diskId" : {
            "type" : "string",
            "description" : "The disk id."
          },
          "replicaDiskType" : {
            "type" : "string",
            "description" : "The replica disk type."
          },
          "seedManagedDiskId" : {
            "type" : "string",
            "description" : "Seed managed disk Id."
          }
        },
        "description" : "InMageAzureV2 Managed disk details."
      },
      "InMageAzureV2PolicyDetails" : {
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "crashConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The crash consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled."
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          },
          "recoveryPointThresholdInMinutes" : {
            "type" : "integer",
            "description" : "The recovery point threshold in minutes.",
            "format" : "int32"
          }
        },
        "description" : "InMage Azure v2 specific protection profile details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "InMageAzureV2PolicyInput" : {
        "required" : [ "multiVmSyncStatus" ],
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency (in minutes).",
            "format" : "int32"
          },
          "crashConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The crash consistent snapshot frequency (in minutes).",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
            "enum" : [ "Enable", "Disable" ]
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          },
          "recoveryPointThresholdInMinutes" : {
            "type" : "integer",
            "description" : "The recovery point threshold in minutes.",
            "format" : "int32"
          }
        },
        "description" : "VMWare Azure specific policy Input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
        } ]
      },
      "InMageAzureV2ProtectedDiskDetails" : {
        "type" : "object",
        "properties" : {
          "diskCapacityInBytes" : {
            "type" : "integer",
            "description" : "The disk capacity in bytes.",
            "format" : "int64"
          },
          "diskId" : {
            "type" : "string",
            "description" : "The disk id."
          },
          "diskName" : {
            "type" : "string",
            "description" : "The disk name."
          },
          "diskResized" : {
            "type" : "string",
            "description" : "A value indicating whether disk is resized."
          },
          "fileSystemCapacityInBytes" : {
            "type" : "integer",
            "description" : "The disk file system capacity in bytes.",
            "format" : "int64"
          },
          "healthErrorCode" : {
            "type" : "string",
            "description" : "The health error code for the disk."
          },
          "lastRpoCalculatedTime" : {
            "type" : "string",
            "description" : "The last RPO calculated time.",
            "format" : "date-time"
          },
          "protectionStage" : {
            "type" : "string",
            "description" : "The protection stage."
          },
          "psDataInMegaBytes" : {
            "type" : "number",
            "description" : "The PS data transit in MB.",
            "format" : "double"
          },
          "resyncDurationInSeconds" : {
            "type" : "integer",
            "description" : "The resync duration in seconds.",
            "format" : "int64"
          },
          "resyncProgressPercentage" : {
            "type" : "integer",
            "description" : "The resync progress percentage.",
            "format" : "int32"
          },
          "resyncRequired" : {
            "type" : "string",
            "description" : "A value indicating whether resync is required for this disk."
          },
          "rpoInSeconds" : {
            "type" : "integer",
            "description" : "The RPO in seconds.",
            "format" : "int64"
          },
          "sourceDataInMegaBytes" : {
            "type" : "number",
            "description" : "The source data transit in MB.",
            "format" : "double"
          },
          "targetDataInMegaBytes" : {
            "type" : "number",
            "description" : "The target data transit in MB.",
            "format" : "double"
          }
        },
        "description" : "InMageAzureV2 protected disk details."
      },
      "InMageAzureV2RecoveryPointDetails" : {
        "properties" : {
          "isMultiVmSyncPoint" : {
            "type" : "string",
            "description" : "A value indicating whether the recovery point is multi VM consistent."
          }
        },
        "description" : "InMage Azure V2 provider specific recovery point details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProviderSpecificRecoveryPointDetails"
        } ]
      },
      "InMageAzureV2ReplicationDetails" : {
        "properties" : {
          "agentExpiryDate" : {
            "type" : "string",
            "description" : "Agent expiry date.",
            "format" : "date-time"
          },
          "agentVersion" : {
            "type" : "string",
            "description" : "The agent version."
          },
          "azureVMDiskDetails" : {
            "type" : "array",
            "description" : "Azure VM Disk details.",
            "items" : {
              "$ref" : "#/components/schemas/AzureVmDiskDetails"
            }
          },
          "compressedDataRateInMB" : {
            "type" : "number",
            "description" : "The compressed data change rate in MB.",
            "format" : "double"
          },
          "datastores" : {
            "type" : "array",
            "description" : "The data stores of the on-premise machine. Value can be list of strings that contain data store names.",
            "items" : {
              "type" : "string"
            }
          },
          "discoveryType" : {
            "type" : "string",
            "description" : "A value indicating the discovery type of the machine. Value can be vCenter or physical."
          },
          "diskResized" : {
            "type" : "string",
            "description" : "A value indicating whether any disk is resized for this VM."
          },
          "enableRdpOnTargetOption" : {
            "type" : "string",
            "description" : "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum."
          },
          "infrastructureVmId" : {
            "type" : "string",
            "description" : "The infrastructure VM Id."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The source IP address."
          },
          "isAgentUpdateRequired" : {
            "type" : "string",
            "description" : "A value indicating whether installed agent needs to be updated."
          },
          "isRebootAfterUpdateRequired" : {
            "type" : "string",
            "description" : "A value indicating whether the source server requires a restart after update."
          },
          "lastHeartbeat" : {
            "type" : "string",
            "description" : "The last heartbeat received from the source server.",
            "format" : "date-time"
          },
          "lastRpoCalculatedTime" : {
            "type" : "string",
            "description" : "The last RPO calculated time.",
            "format" : "date-time"
          },
          "lastUpdateReceivedTime" : {
            "type" : "string",
            "description" : "The last update time received from on-prem components.",
            "format" : "date-time"
          },
          "licenseType" : {
            "type" : "string",
            "description" : "License Type of the VM to be used."
          },
          "masterTargetId" : {
            "type" : "string",
            "description" : "The master target Id."
          },
          "multiVmGroupId" : {
            "type" : "string",
            "description" : "The multi vm group Id."
          },
          "multiVmGroupName" : {
            "type" : "string",
            "description" : "The multi vm group name."
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi vm sync is enabled or disabled."
          },
          "osDiskId" : {
            "type" : "string",
            "description" : "The id of the disk containing the OS."
          },
          "osType" : {
            "type" : "string",
            "description" : "The type of the OS on the VM."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "The OS Version of the protected item."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The process server Id."
          },
          "protectedDisks" : {
            "type" : "array",
            "description" : "The list of protected disks.",
            "items" : {
              "$ref" : "#/components/schemas/InMageAzureV2ProtectedDiskDetails"
            }
          },
          "protectedManagedDisks" : {
            "type" : "array",
            "description" : "The list of protected managed disks.",
            "items" : {
              "$ref" : "#/components/schemas/InMageAzureV2ManagedDiskDetails"
            }
          },
          "protectionStage" : {
            "type" : "string",
            "description" : "The protection stage."
          },
          "recoveryAvailabilitySetId" : {
            "type" : "string",
            "description" : "The recovery availability set Id."
          },
          "recoveryAzureLogStorageAccountId" : {
            "type" : "string",
            "description" : "The ARM id of the log storage account used for replication. This will be set to null if no log storage account was provided during enable protection."
          },
          "recoveryAzureResourceGroupId" : {
            "type" : "string",
            "description" : "The target resource group Id."
          },
          "recoveryAzureStorageAccount" : {
            "type" : "string",
            "description" : "The recovery Azure storage account."
          },
          "recoveryAzureVMName" : {
            "type" : "string",
            "description" : "Recovery Azure given name."
          },
          "recoveryAzureVMSize" : {
            "type" : "string",
            "description" : "The Recovery Azure VM size."
          },
          "replicaId" : {
            "type" : "string",
            "description" : "The replica id of the protected item."
          },
          "resyncProgressPercentage" : {
            "type" : "integer",
            "description" : "The resync progress percentage.",
            "format" : "int32"
          },
          "rpoInSeconds" : {
            "type" : "integer",
            "description" : "The RPO in seconds.",
            "format" : "int64"
          },
          "selectedRecoveryAzureNetworkId" : {
            "type" : "string",
            "description" : "The selected recovery azure network Id."
          },
          "selectedSourceNicId" : {
            "type" : "string",
            "description" : "The selected source nic Id which will be used as the primary nic during failover."
          },
          "sourceVmCpuCount" : {
            "type" : "integer",
            "description" : "The CPU count of the VM on the primary side.",
            "format" : "int32"
          },
          "sourceVmRamSizeInMB" : {
            "type" : "integer",
            "description" : "The RAM size of the VM on the primary side.",
            "format" : "int32"
          },
          "targetVmId" : {
            "type" : "string",
            "description" : "The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM."
          },
          "uncompressedDataRateInMB" : {
            "type" : "number",
            "description" : "The uncompressed data change rate in MB.",
            "format" : "double"
          },
          "useManagedDisks" : {
            "type" : "string",
            "description" : "A value indicating whether managed disks should be used during failover."
          },
          "vCenterInfrastructureId" : {
            "type" : "string",
            "description" : "The vCenter infrastructure Id."
          },
          "validationErrors" : {
            "type" : "array",
            "description" : "The validation errors of the on-premise machine Value can be list of validation errors.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "vhdName" : {
            "type" : "string",
            "description" : "The OS disk VHD name."
          },
          "vmId" : {
            "type" : "string",
            "description" : "The virtual machine Id."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The PE Network details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicDetails"
            }
          },
          "vmProtectionState" : {
            "type" : "string",
            "description" : "The protection state for the vm."
          },
          "vmProtectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description for the vm."
          }
        },
        "description" : "InMageAzureV2 provider specific settings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
        } ]
      },
      "InMageAzureV2ReprotectInput" : {
        "properties" : {
          "disksToInclude" : {
            "type" : "array",
            "description" : "The disks to include list.",
            "items" : {
              "type" : "string"
            }
          },
          "logStorageAccountId" : {
            "type" : "string",
            "description" : "The storage account to be used for logging during replication."
          },
          "masterTargetId" : {
            "type" : "string",
            "description" : "The Master target Id."
          },
          "policyId" : {
            "type" : "string",
            "description" : "The Policy Id."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The Process Server Id."
          },
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The CS account Id."
          },
          "storageAccountId" : {
            "type" : "string",
            "description" : "The storage account id."
          }
        },
        "description" : "InMageAzureV2 specific provider input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReverseReplicationProviderSpecificInput"
        } ]
      },
      "InMageAzureV2UpdateReplicationProtectedItemInput" : {
        "properties" : {
          "recoveryAzureV1ResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery Azure resource group Id for classic deployment."
          },
          "recoveryAzureV2ResourceGroupId" : {
            "type" : "string",
            "description" : "The recovery Azure resource group Id for resource manager deployment."
          },
          "useManagedDisks" : {
            "type" : "string",
            "description" : "A value indicating whether managed disks should be used during failover."
          }
        },
        "description" : "InMage Azure V2 input to update replication protected item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateReplicationProtectedItemProviderInput"
        } ]
      },
      "InMageBasePolicyDetails" : {
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled."
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          },
          "recoveryPointThresholdInMinutes" : {
            "type" : "integer",
            "description" : "The recovery point threshold in minutes.",
            "format" : "int32"
          }
        },
        "description" : "Base class for the policies of providers using InMage replication.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "InMageDisableProtectionProviderSpecificInput" : {
        "properties" : {
          "replicaVmDeletionStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the replica VM should be destroyed or retained. Values from Delete and Retain."
          }
        },
        "description" : "InMage disable protection provider specific input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DisableProtectionProviderSpecificInput"
        } ]
      },
      "InMageDiskDetails" : {
        "type" : "object",
        "properties" : {
          "diskConfiguration" : {
            "type" : "string",
            "description" : "Whether disk is dynamic disk or basic disk."
          },
          "diskId" : {
            "type" : "string",
            "description" : "The disk Id."
          },
          "diskName" : {
            "type" : "string",
            "description" : "The disk name."
          },
          "diskSizeInMB" : {
            "type" : "string",
            "description" : "The disk size in MB."
          },
          "diskType" : {
            "type" : "string",
            "description" : "Whether disk is system disk or data disk."
          },
          "volumeList" : {
            "type" : "array",
            "description" : "Volumes of the disk.",
            "items" : {
              "$ref" : "#/components/schemas/DiskVolumeDetails"
            }
          }
        },
        "description" : "VMware/Physical specific Disk Details"
      },
      "InMageDiskExclusionInput" : {
        "type" : "object",
        "properties" : {
          "diskSignatureOptions" : {
            "type" : "array",
            "description" : "The guest disk signature based option for disk exclusion.",
            "items" : {
              "$ref" : "#/components/schemas/InMageDiskSignatureExclusionOptions"
            }
          },
          "volumeOptions" : {
            "type" : "array",
            "description" : "The volume label based option for disk exclusion.",
            "items" : {
              "$ref" : "#/components/schemas/InMageVolumeExclusionOptions"
            }
          }
        },
        "description" : "DiskExclusionInput when doing enable protection of virtual machine in InMage provider."
      },
      "InMageDiskSignatureExclusionOptions" : {
        "type" : "object",
        "properties" : {
          "diskSignature" : {
            "type" : "string",
            "description" : "The guest signature of disk to be excluded from replication."
          }
        },
        "description" : "Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider."
      },
      "InMageEnableProtectionInput" : {
        "required" : [ "masterTargetId", "multiVmGroupId", "multiVmGroupName", "processServerId", "retentionDrive" ],
        "properties" : {
          "datastoreName" : {
            "type" : "string",
            "description" : "The target data store name."
          },
          "diskExclusionInput" : {
            "$ref" : "#/components/schemas/InMageDiskExclusionInput"
          },
          "disksToInclude" : {
            "type" : "array",
            "description" : "The disks to include list.",
            "items" : {
              "type" : "string"
            }
          },
          "masterTargetId" : {
            "type" : "string",
            "description" : "The Master Target Id."
          },
          "multiVmGroupId" : {
            "type" : "string",
            "description" : "The multi vm group Id."
          },
          "multiVmGroupName" : {
            "type" : "string",
            "description" : "The multi vm group name."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The Process Server Id."
          },
          "retentionDrive" : {
            "type" : "string",
            "description" : "The retention drive to use on the MT."
          },
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The CS account Id."
          },
          "vmFriendlyName" : {
            "type" : "string",
            "description" : "The Vm Name."
          }
        },
        "description" : "VMware Azure specific enable protection input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnableProtectionProviderSpecificInput"
        } ]
      },
      "InMageFailoverProviderInput" : {
        "properties" : {
          "recoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed."
          },
          "recoveryPointType" : {
            "type" : "string",
            "description" : "The recovery point type. Values from LatestTime, LatestTag or Custom. In the case of custom, the recovery point provided by RecoveryPointId will be used. In the other two cases, recovery point id will be ignored.",
            "enum" : [ "LatestTime", "LatestTag", "Custom" ]
          }
        },
        "description" : "Provider specific input for InMage failover.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
        } ]
      },
      "InMagePolicyDetails" : {
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled."
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          },
          "recoveryPointThresholdInMinutes" : {
            "type" : "integer",
            "description" : "The recovery point threshold in minutes.",
            "format" : "int32"
          }
        },
        "description" : "InMage specific protection profile details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "InMagePolicyInput" : {
        "required" : [ "multiVmSyncStatus" ],
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency (in minutes).",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
            "enum" : [ "Enable", "Disable" ]
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          },
          "recoveryPointThresholdInMinutes" : {
            "type" : "integer",
            "description" : "The recovery point threshold in minutes.",
            "format" : "int32"
          }
        },
        "description" : "VMWare Azure specific protection profile Input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
        } ]
      },
      "InMageProtectedDiskDetails" : {
        "type" : "object",
        "properties" : {
          "diskCapacityInBytes" : {
            "type" : "integer",
            "description" : "The disk capacity in bytes.",
            "format" : "int64"
          },
          "diskId" : {
            "type" : "string",
            "description" : "The disk id."
          },
          "diskName" : {
            "type" : "string",
            "description" : "The disk name."
          },
          "diskResized" : {
            "type" : "string",
            "description" : "A value indicating whether disk is resized."
          },
          "fileSystemCapacityInBytes" : {
            "type" : "integer",
            "description" : "The file system capacity in bytes.",
            "format" : "int64"
          },
          "healthErrorCode" : {
            "type" : "string",
            "description" : "The health error code for the disk."
          },
          "lastRpoCalculatedTime" : {
            "type" : "string",
            "description" : "The last RPO calculated time.",
            "format" : "date-time"
          },
          "protectionStage" : {
            "type" : "string",
            "description" : "The protection stage."
          },
          "psDataInMB" : {
            "type" : "number",
            "description" : "The PS data transit in MB.",
            "format" : "double"
          },
          "resyncDurationInSeconds" : {
            "type" : "integer",
            "description" : "The resync duration in seconds.",
            "format" : "int64"
          },
          "resyncProgressPercentage" : {
            "type" : "integer",
            "description" : "The resync progress percentage.",
            "format" : "int32"
          },
          "resyncRequired" : {
            "type" : "string",
            "description" : "A value indicating whether resync is required for this disk."
          },
          "rpoInSeconds" : {
            "type" : "integer",
            "description" : "The RPO in seconds.",
            "format" : "int64"
          },
          "sourceDataInMB" : {
            "type" : "number",
            "description" : "The source data transit in MB.",
            "format" : "double"
          },
          "targetDataInMB" : {
            "type" : "number",
            "description" : "The target data transit in MB.",
            "format" : "double"
          }
        },
        "description" : "InMage protected disk details."
      },
      "InMageReplicationDetails" : {
        "properties" : {
          "activeSiteType" : {
            "type" : "string",
            "description" : "The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always."
          },
          "agentDetails" : {
            "$ref" : "#/components/schemas/InMageAgentDetails"
          },
          "azureStorageAccountId" : {
            "type" : "string",
            "description" : "A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null."
          },
          "compressedDataRateInMB" : {
            "type" : "number",
            "description" : "The compressed data change rate in MB.",
            "format" : "double"
          },
          "consistencyPoints" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "format" : "date-time"
            },
            "description" : "The collection of Consistency points."
          },
          "datastores" : {
            "type" : "array",
            "description" : "The data stores of the on-premise machine Value can be list of strings that contain data store names",
            "items" : {
              "type" : "string"
            }
          },
          "discoveryType" : {
            "type" : "string",
            "description" : "A value indicating the discovery type of the machine."
          },
          "diskResized" : {
            "type" : "string",
            "description" : "A value indicating whether any disk is resized for this VM."
          },
          "infrastructureVmId" : {
            "type" : "string",
            "description" : "The infrastructure VM Id."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The source IP address."
          },
          "lastHeartbeat" : {
            "type" : "string",
            "description" : "The last heartbeat received from the source server.",
            "format" : "date-time"
          },
          "lastRpoCalculatedTime" : {
            "type" : "string",
            "description" : "The last RPO calculated time.",
            "format" : "date-time"
          },
          "lastUpdateReceivedTime" : {
            "type" : "string",
            "description" : "The last update time received from on-prem components.",
            "format" : "date-time"
          },
          "masterTargetId" : {
            "type" : "string",
            "description" : "The master target Id."
          },
          "multiVmGroupId" : {
            "type" : "string",
            "description" : "The multi vm group Id, if any."
          },
          "multiVmGroupName" : {
            "type" : "string",
            "description" : "The multi vm group name, if any."
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the multi vm sync is enabled or disabled."
          },
          "osDetails" : {
            "$ref" : "#/components/schemas/OSDiskDetails"
          },
          "osVersion" : {
            "type" : "string",
            "description" : "The OS Version of the protected item."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The process server Id."
          },
          "protectedDisks" : {
            "type" : "array",
            "description" : "The list of protected disks.",
            "items" : {
              "$ref" : "#/components/schemas/InMageProtectedDiskDetails"
            }
          },
          "protectionStage" : {
            "type" : "string",
            "description" : "The protection stage."
          },
          "rebootAfterUpdateStatus" : {
            "type" : "string",
            "description" : "A value indicating whether the source server requires a restart after update."
          },
          "replicaId" : {
            "type" : "string",
            "description" : "The replica id of the protected item."
          },
          "resyncDetails" : {
            "$ref" : "#/components/schemas/InitialReplicationDetails"
          },
          "retentionWindowEnd" : {
            "type" : "string",
            "description" : "The retention window end time.",
            "format" : "date-time"
          },
          "retentionWindowStart" : {
            "type" : "string",
            "description" : "The retention window start time.",
            "format" : "date-time"
          },
          "rpoInSeconds" : {
            "type" : "integer",
            "description" : "The RPO in seconds.",
            "format" : "int64"
          },
          "sourceVmCpuCount" : {
            "type" : "integer",
            "description" : "The CPU count of the VM on the primary side.",
            "format" : "int32"
          },
          "sourceVmRamSizeInMB" : {
            "type" : "integer",
            "description" : "The RAM size of the VM on the primary side.",
            "format" : "int32"
          },
          "uncompressedDataRateInMB" : {
            "type" : "number",
            "description" : "The uncompressed data change rate in MB.",
            "format" : "double"
          },
          "vCenterInfrastructureId" : {
            "type" : "string",
            "description" : "The vCenter infrastructure Id."
          },
          "validationErrors" : {
            "type" : "array",
            "description" : "The validation errors of the on-premise machine Value can be list of validation errors",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "vmId" : {
            "type" : "string",
            "description" : "The virtual machine Id."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The PE Network details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicDetails"
            }
          },
          "vmProtectionState" : {
            "type" : "string",
            "description" : "The protection state for the vm."
          },
          "vmProtectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description for the vm."
          }
        },
        "description" : "InMage provider specific settings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
        } ]
      },
      "InMageReprotectInput" : {
        "required" : [ "masterTargetId", "processServerId", "profileId", "retentionDrive" ],
        "properties" : {
          "datastoreName" : {
            "type" : "string",
            "description" : "The target data store name."
          },
          "diskExclusionInput" : {
            "$ref" : "#/components/schemas/InMageDiskExclusionInput"
          },
          "disksToInclude" : {
            "type" : "array",
            "description" : "The disks to include list.",
            "items" : {
              "type" : "string"
            }
          },
          "masterTargetId" : {
            "type" : "string",
            "description" : "The Master Target Id."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The Process Server Id."
          },
          "profileId" : {
            "type" : "string",
            "description" : "The Policy Id."
          },
          "retentionDrive" : {
            "type" : "string",
            "description" : "The retention drive to use on the MT."
          },
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The CS account Id."
          }
        },
        "description" : "InMageAzureV2 specific provider input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReverseReplicationProviderSpecificInput"
        } ]
      },
      "InMageVolumeExclusionOptions" : {
        "type" : "object",
        "properties" : {
          "onlyExcludeIfSingleVolume" : {
            "type" : "string",
            "description" : "The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false."
          },
          "volumeLabel" : {
            "type" : "string",
            "description" : "The volume label. The disk having any volume with this label will be excluded from replication."
          }
        },
        "description" : "Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider."
      },
      "InconsistentVmDetails" : {
        "type" : "object",
        "properties" : {
          "cloudName" : {
            "type" : "string",
            "description" : "The Cloud name."
          },
          "details" : {
            "type" : "array",
            "description" : "The list of details regarding state of the Protected Entity in SRS and On prem.",
            "items" : {
              "type" : "string"
            }
          },
          "errorIds" : {
            "type" : "array",
            "description" : "The list of error ids.",
            "items" : {
              "type" : "string"
            }
          },
          "vmName" : {
            "type" : "string",
            "description" : "The Vm name."
          }
        },
        "description" : "This class stores the monitoring details for consistency check of inconsistent Protected Entity."
      },
      "InitialReplicationDetails" : {
        "type" : "object",
        "properties" : {
          "initialReplicationProgressPercentage" : {
            "type" : "string",
            "description" : "The initial replication progress percentage."
          },
          "initialReplicationType" : {
            "type" : "string",
            "description" : "Initial replication type."
          }
        },
        "description" : "Initial replication details."
      },
      "InlineWorkflowTaskDetails" : {
        "properties" : {
          "workflowIds" : {
            "type" : "array",
            "description" : "The list of child workflow ids.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "This class represents the inline workflow task details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/GroupTaskDetails"
        } ]
      },
      "InnerHealthError" : {
        "type" : "object",
        "properties" : {
          "creationTimeUtc" : {
            "type" : "string",
            "description" : "Error creation time (UTC)",
            "format" : "date-time"
          },
          "entityId" : {
            "type" : "string",
            "description" : "ID of the entity."
          },
          "errorCategory" : {
            "type" : "string",
            "description" : "Category of error."
          },
          "errorCode" : {
            "type" : "string",
            "description" : "Error code."
          },
          "errorLevel" : {
            "type" : "string",
            "description" : "Level of error."
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Error message."
          },
          "errorSource" : {
            "type" : "string",
            "description" : "Source of error."
          },
          "errorType" : {
            "type" : "string",
            "description" : "Type of error."
          },
          "possibleCauses" : {
            "type" : "string",
            "description" : "Possible causes of error."
          },
          "recommendedAction" : {
            "type" : "string",
            "description" : "Recommended action to resolve error."
          },
          "recoveryProviderErrorMessage" : {
            "type" : "string",
            "description" : "DRA error message."
          },
          "summaryMessage" : {
            "type" : "string",
            "description" : "Summary message of the entity."
          }
        },
        "description" : "Implements InnerHealthError class. HealthError object has a list of InnerHealthErrors as child errors. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException."
      },
      "InputEndpoint" : {
        "type" : "object",
        "properties" : {
          "endpointName" : {
            "type" : "string",
            "description" : "The input endpoint name."
          },
          "privatePort" : {
            "type" : "integer",
            "description" : "The input endpoint private port.",
            "format" : "int32"
          },
          "protocol" : {
            "type" : "string",
            "description" : "The input endpoint protocol."
          },
          "publicPort" : {
            "type" : "integer",
            "description" : "The input endpoint public port.",
            "format" : "int32"
          }
        },
        "description" : "Azure VM input endpoint details."
      },
      "Job" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/JobProperties"
          }
        },
        "description" : "Job details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "JobCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of jobs.",
            "items" : {
              "$ref" : "#/components/schemas/Job"
            }
          }
        },
        "description" : "Collection of jobs."
      },
      "JobDetails" : {
        "type" : "object",
        "properties" : {
          "affectedObjectDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The affected object properties like source server, source cloud, target server, target cloud etc. based on the workflow object details."
          },
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the type of job details (see JobDetailsTypes enum for possible values).",
            "readOnly" : true
          }
        },
        "description" : "Job details based on specific job type.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "JobEntity" : {
        "type" : "object",
        "properties" : {
          "jobFriendlyName" : {
            "type" : "string",
            "description" : "The job display name."
          },
          "jobId" : {
            "type" : "string",
            "description" : "The job id."
          },
          "jobScenarioName" : {
            "type" : "string",
            "description" : "The job name. Enum type ScenarioName."
          },
          "targetInstanceType" : {
            "type" : "string",
            "description" : "The workflow affected object type."
          },
          "targetObjectId" : {
            "type" : "string",
            "description" : "The object id."
          },
          "targetObjectName" : {
            "type" : "string",
            "description" : "The object name."
          }
        },
        "description" : "This class contains the minimal job details required to navigate to the desired drill down."
      },
      "JobErrorDetails" : {
        "type" : "object",
        "properties" : {
          "creationTime" : {
            "type" : "string",
            "description" : "The creation time of job error.",
            "format" : "date-time"
          },
          "errorLevel" : {
            "type" : "string",
            "description" : "Error level of error."
          },
          "providerErrorDetails" : {
            "$ref" : "#/components/schemas/ProviderError"
          },
          "serviceErrorDetails" : {
            "$ref" : "#/components/schemas/ServiceError"
          },
          "taskId" : {
            "type" : "string",
            "description" : "The Id of the task."
          }
        },
        "description" : "This class contains the error details per object."
      },
      "JobProperties" : {
        "type" : "object",
        "properties" : {
          "activityId" : {
            "type" : "string",
            "description" : "The activity id."
          },
          "allowedActions" : {
            "type" : "array",
            "description" : "The Allowed action the job.",
            "items" : {
              "type" : "string"
            }
          },
          "customDetails" : {
            "$ref" : "#/components/schemas/JobDetails"
          },
          "endTime" : {
            "type" : "string",
            "description" : "The end time.",
            "format" : "date-time"
          },
          "errors" : {
            "type" : "array",
            "description" : "The errors.",
            "items" : {
              "$ref" : "#/components/schemas/JobErrorDetails"
            }
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The DisplayName."
          },
          "scenarioName" : {
            "type" : "string",
            "description" : "The ScenarioName."
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time.",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "description" : "The status of the Job. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other."
          },
          "stateDescription" : {
            "type" : "string",
            "description" : "The description of the state of the Job. For e.g. - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped."
          },
          "targetInstanceType" : {
            "type" : "string",
            "description" : "The type of the affected object which is of {Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType} class."
          },
          "targetObjectId" : {
            "type" : "string",
            "description" : "The affected Object Id."
          },
          "targetObjectName" : {
            "type" : "string",
            "description" : "The name of the affected object."
          },
          "tasks" : {
            "type" : "array",
            "description" : "The tasks.",
            "items" : {
              "$ref" : "#/components/schemas/ASRTask"
            }
          }
        },
        "description" : "Job custom data details."
      },
      "JobQueryParameter" : {
        "type" : "object",
        "properties" : {
          "affectedObjectTypes" : {
            "type" : "string",
            "description" : "The type of objects."
          },
          "endTime" : {
            "type" : "string",
            "description" : "Date time to get jobs up to."
          },
          "fabricId" : {
            "type" : "string",
            "description" : "The Id of the fabric to search jobs under."
          },
          "jobStatus" : {
            "type" : "string",
            "description" : "The states of the job to be filtered can be in."
          },
          "startTime" : {
            "type" : "string",
            "description" : "Date time to get jobs from."
          }
        },
        "description" : "Query parameter to enumerate jobs."
      },
      "JobStatusEventDetails" : {
        "properties" : {
          "affectedObjectType" : {
            "type" : "string",
            "description" : "AffectedObjectType for the event."
          },
          "jobFriendlyName" : {
            "type" : "string",
            "description" : "JobName for the Event."
          },
          "jobId" : {
            "type" : "string",
            "description" : "Job arm id for the event."
          },
          "jobStatus" : {
            "type" : "string",
            "description" : "JobStatus for the Event."
          }
        },
        "description" : "Model class for event details of a job status event.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EventSpecificDetails"
        } ]
      },
      "JobTaskDetails" : {
        "properties" : {
          "jobTask" : {
            "$ref" : "#/components/schemas/JobEntity"
          }
        },
        "description" : "This class represents a task which is actually a workflow so that one can navigate to its individual drill down.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "KeyEncryptionKeyInfo" : {
        "type" : "object",
        "properties" : {
          "keyIdentifier" : {
            "type" : "string",
            "description" : "The key url / identifier."
          },
          "keyVaultResourceArmId" : {
            "type" : "string",
            "description" : "The KeyVault resource ARM id for key."
          }
        },
        "description" : "Key Encryption Key (KEK) information."
      },
      "LogicalNetwork" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LogicalNetworkProperties"
          }
        },
        "description" : "Logical network data model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "LogicalNetworkCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The Logical Networks list details.",
            "items" : {
              "$ref" : "#/components/schemas/LogicalNetwork"
            }
          }
        },
        "description" : "List of logical networks."
      },
      "LogicalNetworkProperties" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string",
            "description" : "The Friendly Name."
          },
          "logicalNetworkDefinitionsStatus" : {
            "type" : "string",
            "description" : "A value indicating whether logical network definitions are isolated."
          },
          "logicalNetworkUsage" : {
            "type" : "string",
            "description" : "A value indicating whether logical network is used as private test network by test failover."
          },
          "networkVirtualizationStatus" : {
            "type" : "string",
            "description" : "A value indicating whether Network Virtualization is enabled for the logical network."
          }
        },
        "description" : "Logical Network Properties."
      },
      "ManualActionTaskDetails" : {
        "properties" : {
          "instructions" : {
            "type" : "string",
            "description" : "The instructions."
          },
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "observation" : {
            "type" : "string",
            "description" : "The observation."
          }
        },
        "description" : "This class represents the manual action task details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "MasterTargetServer" : {
        "type" : "object",
        "properties" : {
          "agentExpiryDate" : {
            "type" : "string",
            "description" : "Agent expiry date.",
            "format" : "date-time"
          },
          "agentVersion" : {
            "type" : "string",
            "description" : "The version of the scout component on the server."
          },
          "agentVersionDetails" : {
            "$ref" : "#/components/schemas/VersionDetails"
          },
          "dataStores" : {
            "type" : "array",
            "description" : "The list of data stores in the fabric.",
            "items" : {
              "$ref" : "#/components/schemas/DataStore"
            }
          },
          "diskCount" : {
            "type" : "integer",
            "description" : "Disk count of the master target.",
            "format" : "int32"
          },
          "healthErrors" : {
            "type" : "array",
            "description" : "Health errors.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The server Id."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address of the server."
          },
          "lastHeartbeat" : {
            "type" : "string",
            "description" : "The last heartbeat received from the server.",
            "format" : "date-time"
          },
          "marsAgentExpiryDate" : {
            "type" : "string",
            "description" : "MARS agent expiry date.",
            "format" : "date-time"
          },
          "marsAgentVersion" : {
            "type" : "string",
            "description" : "MARS agent version."
          },
          "marsAgentVersionDetails" : {
            "$ref" : "#/components/schemas/VersionDetails"
          },
          "name" : {
            "type" : "string",
            "description" : "The server name."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the server."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "OS Version of the master target."
          },
          "retentionVolumes" : {
            "type" : "array",
            "description" : "The retention volumes of Master target Server.",
            "items" : {
              "$ref" : "#/components/schemas/RetentionVolume"
            }
          },
          "validationErrors" : {
            "type" : "array",
            "description" : "Validation errors.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "versionStatus" : {
            "type" : "string",
            "description" : "Version status"
          }
        },
        "description" : "Details of a Master Target Server."
      },
      "MigrateInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MigrateInputProperties"
          }
        },
        "description" : "Input for migrate."
      },
      "MigrateInputProperties" : {
        "required" : [ "providerSpecificDetails" ],
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/MigrateProviderSpecificInput"
          }
        },
        "description" : "Migrate input properties."
      },
      "MigrateProviderSpecificInput" : {
        "required" : [ "instanceType" ],
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Migrate provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "MigrationItem" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MigrationItemProperties"
          }
        },
        "description" : "Migration item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "MigrationItemCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of migration items.",
            "items" : {
              "$ref" : "#/components/schemas/MigrationItem"
            }
          }
        },
        "description" : "Migration item collection."
      },
      "MigrationItemProperties" : {
        "type" : "object",
        "properties" : {
          "allowedOperations" : {
            "type" : "array",
            "description" : "The allowed operations on the migration item, based on the current migration state of the item.",
            "readOnly" : true,
            "items" : {
              "type" : "string",
              "enum" : [ "DisableMigration", "TestMigrate", "TestMigrateCleanup", "Migrate" ]
            }
          },
          "currentJob" : {
            "$ref" : "#/components/schemas/CurrentJobDetails"
          },
          "health" : {
            "type" : "string",
            "description" : "The consolidated health.",
            "readOnly" : true
          },
          "healthErrors" : {
            "type" : "array",
            "description" : "The list of health errors.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "machineName" : {
            "type" : "string",
            "description" : "The on-premise virtual machine name.",
            "readOnly" : true
          },
          "migrationState" : {
            "type" : "string",
            "description" : "The migration status.",
            "readOnly" : true,
            "enum" : [ "None", "EnableMigrationInProgress", "EnableMigrationFailed", "DisableMigrationInProgress", "DisableMigrationFailed", "InitialSeedingInProgress", "InitialSeedingFailed", "Replicating", "MigrationInProgress", "MigrationSucceeded", "MigrationFailed" ]
          },
          "migrationStateDescription" : {
            "type" : "string",
            "description" : "The migration state description.",
            "readOnly" : true
          },
          "policyFriendlyName" : {
            "type" : "string",
            "description" : "The name of policy governing this item.",
            "readOnly" : true
          },
          "policyId" : {
            "type" : "string",
            "description" : "The ARM Id of policy governing this item.",
            "readOnly" : true
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/MigrationProviderSpecificSettings"
          },
          "recoveryServicesProviderId" : {
            "type" : "string",
            "description" : "The recovery services provider ARM Id.",
            "readOnly" : true
          },
          "testMigrateState" : {
            "type" : "string",
            "description" : "The test migrate state.",
            "readOnly" : true,
            "enum" : [ "None", "TestMigrationInProgress", "TestMigrationSucceeded", "TestMigrationFailed", "TestMigrationCleanupInProgress" ]
          },
          "testMigrateStateDescription" : {
            "type" : "string",
            "description" : "The test migrate state description.",
            "readOnly" : true
          }
        },
        "description" : "Migration item properties."
      },
      "MigrationItemsQueryParameter" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The replication provider type."
          },
          "sourceFabricName" : {
            "type" : "string",
            "description" : "The source fabric name filter."
          }
        },
        "description" : "Query parameter to enumerate migration items."
      },
      "MigrationProviderSpecificSettings" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the instance type.",
            "readOnly" : true
          }
        },
        "description" : "Migration provider specific settings.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "MigrationRecoveryPoint" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/MigrationRecoveryPointProperties"
          }
        },
        "description" : "Recovery point for a migration item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "MigrationRecoveryPointCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The migration recovery point details.",
            "items" : {
              "$ref" : "#/components/schemas/MigrationRecoveryPoint"
            }
          }
        },
        "description" : "Collection of migration recovery points."
      },
      "MigrationRecoveryPointProperties" : {
        "type" : "object",
        "properties" : {
          "recoveryPointTime" : {
            "type" : "string",
            "description" : "The recovery point time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "recoveryPointType" : {
            "type" : "string",
            "description" : "The recovery point type.",
            "readOnly" : true,
            "enum" : [ "NotSpecified", "ApplicationConsistent", "CrashConsistent" ]
          }
        },
        "description" : "Migration item recovery point properties."
      },
      "MobilityServiceUpdate" : {
        "type" : "object",
        "properties" : {
          "osType" : {
            "type" : "string",
            "description" : "The OS type."
          },
          "rebootStatus" : {
            "type" : "string",
            "description" : "The reboot status of the update - whether it is required or not."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the latest update."
          }
        },
        "description" : "The Mobility Service update details."
      },
      "Network" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/NetworkProperties"
          }
        },
        "description" : "Network model.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "NetworkCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The Networks list details.",
            "items" : {
              "$ref" : "#/components/schemas/Network"
            }
          }
        },
        "description" : "List of networks."
      },
      "NetworkMapping" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/NetworkMappingProperties"
          }
        },
        "description" : "Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate extensions in subsequent versions.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "NetworkMappingCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The Network Mappings list.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkMapping"
            }
          }
        },
        "description" : "List of network mappings. As with NetworkMapping, it should be possible to reuse a prev version of this class. It doesn't seem likely this class could be anything more than a slightly bespoke collection of NetworkMapping. Hence it makes sense to override Load with Base.NetworkMapping instead of existing CurrentVersion.NetworkMapping."
      },
      "NetworkMappingFabricSpecificSettings" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the Instance type.",
            "readOnly" : true
          }
        },
        "description" : "Network Mapping fabric specific settings.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "NetworkMappingProperties" : {
        "type" : "object",
        "properties" : {
          "fabricSpecificSettings" : {
            "$ref" : "#/components/schemas/NetworkMappingFabricSpecificSettings"
          },
          "primaryFabricFriendlyName" : {
            "type" : "string",
            "description" : "The primary fabric friendly name."
          },
          "primaryNetworkFriendlyName" : {
            "type" : "string",
            "description" : "The primary network friendly name."
          },
          "primaryNetworkId" : {
            "type" : "string",
            "description" : "The primary network id for network mapping."
          },
          "recoveryFabricArmId" : {
            "type" : "string",
            "description" : "The recovery fabric ARM id."
          },
          "recoveryFabricFriendlyName" : {
            "type" : "string",
            "description" : "The recovery fabric friendly name."
          },
          "recoveryNetworkFriendlyName" : {
            "type" : "string",
            "description" : "The recovery network friendly name."
          },
          "recoveryNetworkId" : {
            "type" : "string",
            "description" : "The recovery network id for network mapping."
          },
          "state" : {
            "type" : "string",
            "description" : "The pairing state for network mapping."
          }
        },
        "description" : "Network Mapping Properties."
      },
      "NetworkProperties" : {
        "type" : "object",
        "properties" : {
          "fabricType" : {
            "type" : "string",
            "description" : "The Fabric Type."
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The Friendly Name."
          },
          "networkType" : {
            "type" : "string",
            "description" : "The Network Type."
          },
          "subnets" : {
            "type" : "array",
            "description" : "The List of subnets.",
            "items" : {
              "$ref" : "#/components/schemas/Subnet"
            }
          }
        },
        "description" : "Network Properties"
      },
      "OSDetails" : {
        "type" : "object",
        "properties" : {
          "oSMajorVersion" : {
            "type" : "string",
            "description" : "The OS Major Version."
          },
          "oSMinorVersion" : {
            "type" : "string",
            "description" : "The OS Minor Version."
          },
          "oSVersion" : {
            "type" : "string",
            "description" : "The OS Version."
          },
          "osEdition" : {
            "type" : "string",
            "description" : "The OSEdition."
          },
          "osType" : {
            "type" : "string",
            "description" : "VM Disk details."
          },
          "productType" : {
            "type" : "string",
            "description" : "Product type."
          }
        },
        "description" : "Disk Details."
      },
      "OSDiskDetails" : {
        "type" : "object",
        "properties" : {
          "osType" : {
            "type" : "string",
            "description" : "The type of the OS on the VM."
          },
          "osVhdId" : {
            "type" : "string",
            "description" : "The id of the disk containing the OS."
          },
          "vhdName" : {
            "type" : "string",
            "description" : "The OS disk VHD name."
          }
        },
        "description" : "Details of the OS Disk."
      },
      "OSVersionWrapper" : {
        "type" : "object",
        "properties" : {
          "servicePack" : {
            "type" : "string",
            "description" : "Service pack."
          },
          "version" : {
            "type" : "string",
            "description" : "The version."
          }
        },
        "description" : "Wrapper model for OSVersion to include version and service pack info."
      },
      "Object" : {
        "type" : "object",
        "description" : "Base of all objects."
      },
      "OperationsDiscovery" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/Display"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the API. The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service. Examples of operations include: * Microsoft.Compute/virtualMachine/capture/action * Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write * Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete Each action should include, in order: (1) Resource Provider Namespace (2) Type hierarchy for which the action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write, Action or Delete indicating which type applies. If it is a PUT/PATCH on a collection or named value, Write should be used. If it is a GET, Read should be used. If it is a DELETE, Delete should be used. If it is a POST, Action should be used. As a note: all resource providers would need to include the \"{Resource Provider Namespace}/register/action\" operation in their response. This API is used to register for their service, and should include details about the operation (e.g. a localized name for the resource provider + any special considerations like PII release)"
          },
          "origin" : {
            "type" : "string",
            "description" : "Origin. The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is \"user,system\""
          },
          "properties" : {
            "$ref" : "#/components/schemas/OperationsDiscoveryProperties"
          }
        },
        "description" : "Operations discovery class."
      },
      "OperationsDiscoveryCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The ClientDiscovery details.",
            "items" : {
              "$ref" : "#/components/schemas/OperationsDiscovery"
            }
          }
        },
        "description" : "Collection of ClientDiscovery details."
      },
      "OperationsDiscoveryProperties" : {
        "type" : "object",
        "description" : "ClientDiscovery properties."
      },
      "PlannedFailoverInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PlannedFailoverInputProperties"
          }
        },
        "description" : "Input definition for planned failover."
      },
      "PlannedFailoverInputProperties" : {
        "type" : "object",
        "properties" : {
          "failoverDirection" : {
            "type" : "string",
            "description" : "Failover direction."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
          }
        },
        "description" : "Input definition for planned failover input properties."
      },
      "Policy" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PolicyProperties"
          }
        },
        "description" : "Protection profile details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "PolicyCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The policy details.",
            "items" : {
              "$ref" : "#/components/schemas/Policy"
            }
          }
        },
        "description" : "Protection Profile Collection details."
      },
      "PolicyProperties" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string",
            "description" : "The FriendlyName."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
          }
        },
        "description" : "Protection profile custom data details."
      },
      "PolicyProviderSpecificDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type. Overridden in derived classes.",
            "readOnly" : true
          }
        },
        "description" : "Base class for Provider specific details for policies.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "PolicyProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Base class for provider specific input",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ProcessServer" : {
        "type" : "object",
        "properties" : {
          "agentExpiryDate" : {
            "type" : "string",
            "description" : "Agent expiry date.",
            "format" : "date-time"
          },
          "agentVersion" : {
            "type" : "string",
            "description" : "The version of the scout component on the server."
          },
          "agentVersionDetails" : {
            "$ref" : "#/components/schemas/VersionDetails"
          },
          "availableMemoryInBytes" : {
            "type" : "integer",
            "description" : "The available memory.",
            "format" : "int64"
          },
          "availableSpaceInBytes" : {
            "type" : "integer",
            "description" : "The available space.",
            "format" : "int64"
          },
          "cpuLoad" : {
            "type" : "string",
            "description" : "The percentage of the CPU load."
          },
          "cpuLoadStatus" : {
            "type" : "string",
            "description" : "The CPU load status."
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The Process Server's friendly name."
          },
          "healthErrors" : {
            "type" : "array",
            "description" : "Health errors.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "hostId" : {
            "type" : "string",
            "description" : "The agent generated Id."
          },
          "id" : {
            "type" : "string",
            "description" : "The Process Server Id."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address of the server."
          },
          "lastHeartbeat" : {
            "type" : "string",
            "description" : "The last heartbeat received from the server.",
            "format" : "date-time"
          },
          "machineCount" : {
            "type" : "string",
            "description" : "The servers configured with this PS."
          },
          "memoryUsageStatus" : {
            "type" : "string",
            "description" : "The memory usage status."
          },
          "mobilityServiceUpdates" : {
            "type" : "array",
            "description" : "The list of the mobility service updates available on the Process Server.",
            "items" : {
              "$ref" : "#/components/schemas/MobilityServiceUpdate"
            }
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the server."
          },
          "osVersion" : {
            "type" : "string",
            "description" : "OS Version of the process server. Note: This will get populated if user has CS version greater than 9.12.0.0."
          },
          "psServiceStatus" : {
            "type" : "string",
            "description" : "The PS service status."
          },
          "replicationPairCount" : {
            "type" : "string",
            "description" : "The number of replication pairs configured in this PS."
          },
          "spaceUsageStatus" : {
            "type" : "string",
            "description" : "The space usage status."
          },
          "sslCertExpiryDate" : {
            "type" : "string",
            "description" : "The PS SSL cert expiry date.",
            "format" : "date-time"
          },
          "sslCertExpiryRemainingDays" : {
            "type" : "integer",
            "description" : "CS SSL cert expiry date.",
            "format" : "int32"
          },
          "systemLoad" : {
            "type" : "string",
            "description" : "The percentage of the system load."
          },
          "systemLoadStatus" : {
            "type" : "string",
            "description" : "The system load status."
          },
          "totalMemoryInBytes" : {
            "type" : "integer",
            "description" : "The total memory.",
            "format" : "int64"
          },
          "totalSpaceInBytes" : {
            "type" : "integer",
            "description" : "The total space.",
            "format" : "int64"
          },
          "versionStatus" : {
            "type" : "string",
            "description" : "Version status"
          }
        },
        "description" : "Details of the Process Server."
      },
      "ProtectableItem" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ProtectableItemProperties"
          }
        },
        "description" : "Replication protected item",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ProtectableItemCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The Protectable item details.",
            "items" : {
              "$ref" : "#/components/schemas/ProtectableItem"
            }
          }
        },
        "description" : "Protectable item collection."
      },
      "ProtectableItemProperties" : {
        "type" : "object",
        "properties" : {
          "customDetails" : {
            "$ref" : "#/components/schemas/ConfigurationSettings"
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The name."
          },
          "protectionReadinessErrors" : {
            "type" : "array",
            "description" : "The Current protection readiness errors.",
            "items" : {
              "type" : "string"
            }
          },
          "protectionStatus" : {
            "type" : "string",
            "description" : "The protection status."
          },
          "recoveryServicesProviderId" : {
            "type" : "string",
            "description" : "The recovery provider ARM Id."
          },
          "replicationProtectedItemId" : {
            "type" : "string",
            "description" : "The ARM resource of protected items."
          },
          "supportedReplicationProviders" : {
            "type" : "array",
            "description" : "The list of replication providers supported for the protectable item.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Replication protected item custom data details."
      },
      "ProtectableItemQueryParameter" : {
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "description" : "State of the Protectable item query filter."
          }
        },
        "description" : "Query parameter to enumerate Protectable items."
      },
      "ProtectedItemsQueryParameter" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The replication provider type."
          },
          "multiVmGroupCreateOption" : {
            "type" : "string",
            "description" : "Whether Multi VM group is auto created or specified by user.",
            "enum" : [ "AutoCreated", "UserSpecified" ]
          },
          "recoveryPlanName" : {
            "type" : "string",
            "description" : "The recovery plan filter."
          },
          "sourceFabricName" : {
            "type" : "string",
            "description" : "The source fabric name filter."
          },
          "vCenterName" : {
            "type" : "string",
            "description" : "The vCenter name filter."
          }
        },
        "description" : "Query parameter to enumerate protected items."
      },
      "ProtectionContainer" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ProtectionContainerProperties"
          }
        },
        "description" : "Protection container details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ProtectionContainerCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The Protection Container details.",
            "items" : {
              "$ref" : "#/components/schemas/ProtectionContainer"
            }
          }
        },
        "description" : "Protection Container collection."
      },
      "ProtectionContainerFabricSpecificDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type. Overridden in derived classes.",
            "readOnly" : true
          }
        },
        "description" : "Base class for fabric specific details of container."
      },
      "ProtectionContainerMapping" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ProtectionContainerMappingProperties"
          }
        },
        "description" : "Protection container mapping object.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ProtectionContainerMappingCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to fetch rest of the data."
          },
          "value" : {
            "type" : "array",
            "description" : "List of container mappings.",
            "items" : {
              "$ref" : "#/components/schemas/ProtectionContainerMapping"
            }
          }
        },
        "description" : "Protection container mapping collection class."
      },
      "ProtectionContainerMappingProperties" : {
        "type" : "object",
        "properties" : {
          "health" : {
            "type" : "string",
            "description" : "Health of pairing."
          },
          "healthErrorDetails" : {
            "type" : "array",
            "description" : "Health error.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "policyFriendlyName" : {
            "type" : "string",
            "description" : "Friendly name of replication policy."
          },
          "policyId" : {
            "type" : "string",
            "description" : "Policy ARM Id."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ProtectionContainerMappingProviderSpecificDetails"
          },
          "sourceFabricFriendlyName" : {
            "type" : "string",
            "description" : "Friendly name of source fabric."
          },
          "sourceProtectionContainerFriendlyName" : {
            "type" : "string",
            "description" : "Friendly name of source protection container."
          },
          "state" : {
            "type" : "string",
            "description" : "Association Status"
          },
          "targetFabricFriendlyName" : {
            "type" : "string",
            "description" : "Friendly name of target fabric."
          },
          "targetProtectionContainerFriendlyName" : {
            "type" : "string",
            "description" : "Friendly name of paired container."
          },
          "targetProtectionContainerId" : {
            "type" : "string",
            "description" : "Paired protection container ARM ID."
          }
        },
        "description" : "Protection container mapping properties."
      },
      "ProtectionContainerMappingProviderSpecificDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the class type. Overridden in derived classes.",
            "readOnly" : true
          }
        },
        "description" : "Container mapping provider specific details.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ProtectionContainerProperties" : {
        "type" : "object",
        "properties" : {
          "fabricFriendlyName" : {
            "type" : "string",
            "description" : "Fabric friendly name."
          },
          "fabricSpecificDetails" : {
            "$ref" : "#/components/schemas/ProtectionContainerFabricSpecificDetails"
          },
          "fabricType" : {
            "type" : "string",
            "description" : "The fabric type."
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The name."
          },
          "pairingStatus" : {
            "type" : "string",
            "description" : "The pairing status of this cloud."
          },
          "protectedItemCount" : {
            "type" : "integer",
            "description" : "Number of protected PEs",
            "format" : "int32"
          },
          "role" : {
            "type" : "string",
            "description" : "The role of this cloud."
          }
        },
        "description" : "Protection profile custom data details."
      },
      "ProviderError" : {
        "type" : "object",
        "properties" : {
          "errorCode" : {
            "type" : "integer",
            "description" : "The Error code.",
            "format" : "int32"
          },
          "errorId" : {
            "type" : "string",
            "description" : "The Provider error Id."
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "The Error message."
          },
          "possibleCauses" : {
            "type" : "string",
            "description" : "The possible causes for the error."
          },
          "recommendedAction" : {
            "type" : "string",
            "description" : "The recommended action to resolve the error."
          }
        },
        "description" : "This class contains the error details per object."
      },
      "ProviderSpecificFailoverInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Provider specific failover input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ProviderSpecificRecoveryPointDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the provider type.",
            "readOnly" : true
          }
        },
        "description" : "Replication provider specific recovery point details.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "RcmAzureMigrationPolicyDetails" : {
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "crashConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The crash consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "multiVmSyncStatus" : {
            "type" : "string",
            "description" : "A value indicating whether multi-VM sync has to be enabled.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "recoveryPointHistory" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          },
          "recoveryPointThresholdInMinutes" : {
            "type" : "integer",
            "description" : "The recovery point threshold in minutes.",
            "format" : "int32"
          }
        },
        "description" : "RCM based Azure migration specific policy details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      },
      "RecoveryPlan" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecoveryPlanProperties"
          }
        },
        "description" : "Recovery plan details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RecoveryPlanA2AFailoverInput" : {
        "required" : [ "recoveryPointType" ],
        "properties" : {
          "cloudServiceCreationOption" : {
            "type" : "string",
            "description" : "A value indicating whether to use recovery cloud service for TFO or not."
          },
          "multiVmSyncPointOption" : {
            "type" : "string",
            "description" : "A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover.",
            "enum" : [ "UseMultiVmSyncRecoveryPoint", "UsePerVmRecoveryPoint" ]
          },
          "recoveryPointType" : {
            "type" : "string",
            "description" : "The recovery point type.",
            "enum" : [ "Latest", "LatestApplicationConsistent", "LatestCrashConsistent", "LatestProcessed" ]
          }
        },
        "description" : "Recovery plan A2A failover input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
        } ]
      },
      "RecoveryPlanAction" : {
        "required" : [ "actionName", "customDetails", "failoverDirections", "failoverTypes" ],
        "type" : "object",
        "properties" : {
          "actionName" : {
            "type" : "string",
            "description" : "The action name."
          },
          "customDetails" : {
            "$ref" : "#/components/schemas/RecoveryPlanActionDetails"
          },
          "failoverDirections" : {
            "type" : "array",
            "description" : "The list of failover directions.",
            "items" : {
              "type" : "string",
              "enum" : [ "PrimaryToRecovery", "RecoveryToPrimary" ]
            }
          },
          "failoverTypes" : {
            "type" : "array",
            "description" : "The list of failover types.",
            "items" : {
              "type" : "string",
              "enum" : [ "ReverseReplicate", "Commit", "PlannedFailover", "UnplannedFailover", "DisableProtection", "TestFailover", "TestFailoverCleanup", "Failback", "FinalizeFailback", "ChangePit", "RepairReplication", "SwitchProtection", "CompleteMigration" ]
            }
          }
        },
        "description" : "Recovery plan action details."
      },
      "RecoveryPlanActionDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).",
            "readOnly" : true
          }
        },
        "description" : "Recovery plan action custom details.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "RecoveryPlanAutomationRunbookActionDetails" : {
        "required" : [ "fabricLocation" ],
        "properties" : {
          "fabricLocation" : {
            "type" : "string",
            "description" : "The fabric location.",
            "enum" : [ "Primary", "Recovery" ]
          },
          "runbookId" : {
            "type" : "string",
            "description" : "The runbook ARM Id."
          },
          "timeout" : {
            "type" : "string",
            "description" : "The runbook timeout."
          }
        },
        "description" : "Recovery plan Automation runbook action details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanActionDetails"
        } ]
      },
      "RecoveryPlanCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of recovery plans.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlan"
            }
          }
        },
        "description" : "Recovery plan collection details."
      },
      "RecoveryPlanGroup" : {
        "required" : [ "groupType" ],
        "type" : "object",
        "properties" : {
          "endGroupActions" : {
            "type" : "array",
            "description" : "The end group actions.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanAction"
            }
          },
          "groupType" : {
            "type" : "string",
            "description" : "The group type.",
            "enum" : [ "Shutdown", "Boot", "Failover" ]
          },
          "replicationProtectedItems" : {
            "type" : "array",
            "description" : "The list of protected items.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanProtectedItem"
            }
          },
          "startGroupActions" : {
            "type" : "array",
            "description" : "The start group actions.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanAction"
            }
          }
        },
        "description" : "Recovery plan group details."
      },
      "RecoveryPlanGroupTaskDetails" : {
        "properties" : {
          "groupId" : {
            "type" : "string",
            "description" : "The group identifier."
          },
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "rpGroupType" : {
            "type" : "string",
            "description" : "The group type."
          }
        },
        "description" : "This class represents the recovery plan group task.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/GroupTaskDetails"
        } ]
      },
      "RecoveryPlanHyperVReplicaAzureFailbackInput" : {
        "required" : [ "dataSyncOption", "recoveryVmCreationOption" ],
        "properties" : {
          "dataSyncOption" : {
            "type" : "string",
            "description" : "The data sync option.",
            "enum" : [ "ForDownTime", "ForSynchronization" ]
          },
          "recoveryVmCreationOption" : {
            "type" : "string",
            "description" : "The ALR option.",
            "enum" : [ "CreateVmIfNotFound", "NoAction" ]
          }
        },
        "description" : "Recovery plan HVR Azure failback input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
        } ]
      },
      "RecoveryPlanHyperVReplicaAzureFailoverInput" : {
        "properties" : {
          "primaryKekCertificatePfx" : {
            "type" : "string",
            "description" : "The primary KEK certificate PFX."
          },
          "recoveryPointType" : {
            "type" : "string",
            "description" : "The recovery point type.",
            "enum" : [ "Latest", "LatestApplicationConsistent", "LatestProcessed" ]
          },
          "secondaryKekCertificatePfx" : {
            "type" : "string",
            "description" : "The secondary KEK certificate PFX."
          },
          "vaultLocation" : {
            "type" : "string",
            "description" : "The vault location."
          }
        },
        "description" : "Recovery plan HVR Azure failover input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
        } ]
      },
      "RecoveryPlanInMageAzureV2FailoverInput" : {
        "required" : [ "recoveryPointType", "vaultLocation" ],
        "properties" : {
          "recoveryPointType" : {
            "type" : "string",
            "description" : "The recovery point type.",
            "enum" : [ "Latest", "LatestApplicationConsistent", "LatestCrashConsistent", "LatestProcessed" ]
          },
          "useMultiVmSyncPoint" : {
            "type" : "string",
            "description" : "A value indicating whether multi VM sync enabled VMs should use multi VM sync points for failover."
          },
          "vaultLocation" : {
            "type" : "string",
            "description" : "The vault location."
          }
        },
        "description" : "Recovery plan InMageAzureV2 failover input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
        } ]
      },
      "RecoveryPlanInMageFailoverInput" : {
        "required" : [ "recoveryPointType" ],
        "properties" : {
          "recoveryPointType" : {
            "type" : "string",
            "description" : "The recovery point type.",
            "enum" : [ "LatestTime", "LatestTag", "Custom" ]
          }
        },
        "description" : "Recovery plan InMage failover input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
        } ]
      },
      "RecoveryPlanManualActionDetails" : {
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The manual action description."
          }
        },
        "description" : "Recovery plan manual action details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanActionDetails"
        } ]
      },
      "RecoveryPlanPlannedFailoverInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecoveryPlanPlannedFailoverInputProperties"
          }
        },
        "description" : "Recovery plan planned failover input."
      },
      "RecoveryPlanPlannedFailoverInputProperties" : {
        "required" : [ "failoverDirection" ],
        "type" : "object",
        "properties" : {
          "failoverDirection" : {
            "type" : "string",
            "description" : "The failover direction.",
            "enum" : [ "PrimaryToRecovery", "RecoveryToPrimary" ]
          },
          "providerSpecificDetails" : {
            "type" : "array",
            "description" : "The provider specific properties.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
            }
          }
        },
        "description" : "Recovery plan planned failover input properties."
      },
      "RecoveryPlanProperties" : {
        "type" : "object",
        "properties" : {
          "allowedOperations" : {
            "type" : "array",
            "description" : "The list of allowed operations.",
            "items" : {
              "type" : "string"
            }
          },
          "currentScenario" : {
            "$ref" : "#/components/schemas/CurrentScenarioDetails"
          },
          "currentScenarioStatus" : {
            "type" : "string",
            "description" : "The recovery plan status."
          },
          "currentScenarioStatusDescription" : {
            "type" : "string",
            "description" : "The recovery plan status description."
          },
          "failoverDeploymentModel" : {
            "type" : "string",
            "description" : "The failover deployment model."
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The friendly name."
          },
          "groups" : {
            "type" : "array",
            "description" : "The recovery plan groups.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanGroup"
            }
          },
          "lastPlannedFailoverTime" : {
            "type" : "string",
            "description" : "The start time of the last planned failover.",
            "format" : "date-time"
          },
          "lastTestFailoverTime" : {
            "type" : "string",
            "description" : "The start time of the last test failover.",
            "format" : "date-time"
          },
          "lastUnplannedFailoverTime" : {
            "type" : "string",
            "description" : "The start time of the last unplanned failover.",
            "format" : "date-time"
          },
          "primaryFabricFriendlyName" : {
            "type" : "string",
            "description" : "The primary fabric friendly name."
          },
          "primaryFabricId" : {
            "type" : "string",
            "description" : "The primary fabric Id."
          },
          "recoveryFabricFriendlyName" : {
            "type" : "string",
            "description" : "The recovery fabric friendly name."
          },
          "recoveryFabricId" : {
            "type" : "string",
            "description" : "The recovery fabric Id."
          },
          "replicationProviders" : {
            "type" : "array",
            "description" : "The list of replication providers.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Recovery plan custom details."
      },
      "RecoveryPlanProtectedItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ARM Id of the recovery plan protected item."
          },
          "virtualMachineId" : {
            "type" : "string",
            "description" : "The virtual machine Id."
          }
        },
        "description" : "Recovery plan protected item."
      },
      "RecoveryPlanProviderSpecificFailoverInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Recovery plan provider specific failover input base class.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "RecoveryPlanScriptActionDetails" : {
        "required" : [ "fabricLocation", "path" ],
        "properties" : {
          "fabricLocation" : {
            "type" : "string",
            "description" : "The fabric location.",
            "enum" : [ "Primary", "Recovery" ]
          },
          "path" : {
            "type" : "string",
            "description" : "The script path."
          },
          "timeout" : {
            "type" : "string",
            "description" : "The script timeout."
          }
        },
        "description" : "Recovery plan script action details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/RecoveryPlanActionDetails"
        } ]
      },
      "RecoveryPlanShutdownGroupTaskDetails" : {
        "properties" : {
          "groupId" : {
            "type" : "string",
            "description" : "The group identifier."
          },
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "rpGroupType" : {
            "type" : "string",
            "description" : "The group type."
          }
        },
        "description" : "This class represents the recovery plan shutdown group task details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/GroupTaskDetails"
        } ]
      },
      "RecoveryPlanTestFailoverCleanupInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecoveryPlanTestFailoverCleanupInputProperties"
          }
        },
        "description" : "Recovery plan test failover cleanup input."
      },
      "RecoveryPlanTestFailoverCleanupInputProperties" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "The test failover cleanup comments."
          }
        },
        "description" : "Recovery plan test failover cleanup input properties."
      },
      "RecoveryPlanTestFailoverInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecoveryPlanTestFailoverInputProperties"
          }
        },
        "description" : "Recovery plan test failover input."
      },
      "RecoveryPlanTestFailoverInputProperties" : {
        "required" : [ "failoverDirection", "networkType" ],
        "type" : "object",
        "properties" : {
          "failoverDirection" : {
            "type" : "string",
            "description" : "The failover direction.",
            "enum" : [ "PrimaryToRecovery", "RecoveryToPrimary" ]
          },
          "networkId" : {
            "type" : "string",
            "description" : "The Id of the network to be used for test failover."
          },
          "networkType" : {
            "type" : "string",
            "description" : "The network type to be used for test failover."
          },
          "providerSpecificDetails" : {
            "type" : "array",
            "description" : "The provider specific properties.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
            }
          },
          "skipTestFailoverCleanup" : {
            "type" : "string",
            "description" : "A value indicating whether the test failover cleanup is to be skipped."
          }
        },
        "description" : "Recovery plan test failover input properties."
      },
      "RecoveryPlanUnplannedFailoverInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecoveryPlanUnplannedFailoverInputProperties"
          }
        },
        "description" : "Recovery plan unplanned failover input."
      },
      "RecoveryPlanUnplannedFailoverInputProperties" : {
        "required" : [ "failoverDirection", "sourceSiteOperations" ],
        "type" : "object",
        "properties" : {
          "failoverDirection" : {
            "type" : "string",
            "description" : "The failover direction.",
            "enum" : [ "PrimaryToRecovery", "RecoveryToPrimary" ]
          },
          "providerSpecificDetails" : {
            "type" : "array",
            "description" : "The provider specific properties.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanProviderSpecificFailoverInput"
            }
          },
          "sourceSiteOperations" : {
            "type" : "string",
            "description" : "A value indicating whether source site operations are required.",
            "enum" : [ "Required", "NotRequired" ]
          }
        },
        "description" : "Recovery plan unplanned failover input properties."
      },
      "RecoveryPoint" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecoveryPointProperties"
          }
        },
        "description" : "Base class representing a recovery point.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RecoveryPointCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The recovery point details.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPoint"
            }
          }
        },
        "description" : "Collection of recovery point details."
      },
      "RecoveryPointProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ProviderSpecificRecoveryPointDetails"
          },
          "recoveryPointTime" : {
            "type" : "string",
            "description" : "The recovery point time.",
            "format" : "date-time"
          },
          "recoveryPointType" : {
            "type" : "string",
            "description" : "The recovery point type: ApplicationConsistent, CrashConsistent."
          }
        },
        "description" : "Recovery point properties."
      },
      "RecoveryServicesProvider" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RecoveryServicesProviderProperties"
          }
        },
        "description" : "Provider details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "RecoveryServicesProviderCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The Servers details.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryServicesProvider"
            }
          }
        },
        "description" : "Collection of providers."
      },
      "RecoveryServicesProviderProperties" : {
        "type" : "object",
        "properties" : {
          "allowedScenarios" : {
            "type" : "array",
            "description" : "The scenarios allowed on this provider.",
            "items" : {
              "type" : "string"
            }
          },
          "authenticationIdentityDetails" : {
            "$ref" : "#/components/schemas/IdentityProviderDetails"
          },
          "connectionStatus" : {
            "type" : "string",
            "description" : "A value indicating whether DRA is responsive."
          },
          "draIdentifier" : {
            "type" : "string",
            "description" : "The DRA Id."
          },
          "fabricFriendlyName" : {
            "type" : "string",
            "description" : "The fabric friendly name."
          },
          "fabricType" : {
            "type" : "string",
            "description" : "Type of the site."
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly name of the DRA."
          },
          "healthErrorDetails" : {
            "type" : "array",
            "description" : "The recovery services provider health error details.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "lastHeartBeat" : {
            "type" : "string",
            "description" : "Time when last heartbeat was sent by the DRA.",
            "format" : "date-time"
          },
          "protectedItemCount" : {
            "type" : "integer",
            "description" : "Number of protected VMs currently managed by the DRA.",
            "format" : "int32"
          },
          "providerVersion" : {
            "type" : "string",
            "description" : "The provider version."
          },
          "providerVersionDetails" : {
            "$ref" : "#/components/schemas/VersionDetails"
          },
          "providerVersionExpiryDate" : {
            "type" : "string",
            "description" : "Expiry date of the version.",
            "format" : "date-time"
          },
          "providerVersionState" : {
            "type" : "string",
            "description" : "DRA version status."
          },
          "resourceAccessIdentityDetails" : {
            "$ref" : "#/components/schemas/IdentityProviderDetails"
          },
          "serverVersion" : {
            "type" : "string",
            "description" : "The fabric provider."
          }
        },
        "description" : "Recovery services provider properties."
      },
      "RemoveDisksInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RemoveDisksInputProperties"
          }
        },
        "description" : "Input for remove disk(s) operation."
      },
      "RemoveDisksInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/RemoveDisksProviderSpecificInput"
          }
        },
        "description" : "Remove Disk input properties."
      },
      "RemoveDisksProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Remove Disk provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "RemoveProtectionContainerMappingInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RemoveProtectionContainerMappingInputProperties"
          }
        },
        "description" : "Container unpairing input."
      },
      "RemoveProtectionContainerMappingInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificInput" : {
            "$ref" : "#/components/schemas/ReplicationProviderContainerUnmappingInput"
          }
        },
        "description" : "Unpairing input properties."
      },
      "RenewCertificateInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RenewCertificateInputProperties"
          }
        },
        "description" : "Certificate renewal input."
      },
      "RenewCertificateInputProperties" : {
        "type" : "object",
        "properties" : {
          "renewCertificateType" : {
            "type" : "string",
            "description" : "Renew certificate type."
          }
        },
        "description" : "Renew Certificate input properties."
      },
      "ReplicationEligibilityResults" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets Unique ARM identifier for this object.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Gets the name of this object.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/ReplicationEligibilityResultsProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "Gets the object type.",
            "readOnly" : true
          }
        },
        "description" : "Replication eligibility results response model."
      },
      "ReplicationEligibilityResultsCollection" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The replication eligibility results details.",
            "items" : {
              "$ref" : "#/components/schemas/ReplicationEligibilityResults"
            }
          }
        },
        "description" : "Replication eligibility results collection response model."
      },
      "ReplicationEligibilityResultsErrorInfo" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "The error message.",
            "readOnly" : true
          },
          "possibleCauses" : {
            "type" : "string",
            "description" : "The possible causes.",
            "readOnly" : true
          },
          "recommendedAction" : {
            "type" : "string",
            "description" : "The recommended action.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The error status.",
            "readOnly" : true
          }
        },
        "description" : "Error model that can be exposed to the user."
      },
      "ReplicationEligibilityResultsProperties" : {
        "type" : "object",
        "properties" : {
          "clientRequestId" : {
            "type" : "string",
            "description" : "The client request Id.",
            "readOnly" : true
          },
          "errors" : {
            "type" : "array",
            "description" : "The error details.",
            "items" : {
              "$ref" : "#/components/schemas/ReplicationEligibilityResultsErrorInfo"
            }
          }
        },
        "description" : "Properties model for replication eligibility results API."
      },
      "ReplicationGroupDetails" : {
        "description" : "Replication group details. This will be used in case of San and Wvr.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConfigurationSettings"
        } ]
      },
      "ReplicationProtectedItem" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ReplicationProtectedItemProperties"
          }
        },
        "description" : "Replication protected item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ReplicationProtectedItemCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The Replication protected item details.",
            "items" : {
              "$ref" : "#/components/schemas/ReplicationProtectedItem"
            }
          }
        },
        "description" : "Replication protected item collection."
      },
      "ReplicationProtectedItemProperties" : {
        "type" : "object",
        "properties" : {
          "activeLocation" : {
            "type" : "string",
            "description" : "The Current active location of the PE."
          },
          "allowedOperations" : {
            "type" : "array",
            "description" : "The allowed operations on the Replication protected item.",
            "items" : {
              "type" : "string"
            }
          },
          "currentScenario" : {
            "$ref" : "#/components/schemas/CurrentScenarioDetails"
          },
          "failoverHealth" : {
            "type" : "string",
            "description" : "The consolidated failover health for the VM."
          },
          "failoverRecoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point ARM Id to which the Vm was failed over."
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The name."
          },
          "healthErrors" : {
            "type" : "array",
            "description" : "List of health errors.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "lastSuccessfulFailoverTime" : {
            "type" : "string",
            "description" : "The Last successful failover time.",
            "format" : "date-time"
          },
          "lastSuccessfulTestFailoverTime" : {
            "type" : "string",
            "description" : "The Last successful test failover time.",
            "format" : "date-time"
          },
          "policyFriendlyName" : {
            "type" : "string",
            "description" : "The name of Policy governing this PE."
          },
          "policyId" : {
            "type" : "string",
            "description" : "The ID of Policy governing this PE."
          },
          "primaryFabricFriendlyName" : {
            "type" : "string",
            "description" : "The friendly name of the primary fabric."
          },
          "primaryFabricProvider" : {
            "type" : "string",
            "description" : "The fabric provider of the primary fabric."
          },
          "primaryProtectionContainerFriendlyName" : {
            "type" : "string",
            "description" : "The name of primary protection container friendly name."
          },
          "protectableItemId" : {
            "type" : "string",
            "description" : "The protected item ARM Id."
          },
          "protectedItemType" : {
            "type" : "string",
            "description" : "The type of protected item type."
          },
          "protectionState" : {
            "type" : "string",
            "description" : "The protection status."
          },
          "protectionStateDescription" : {
            "type" : "string",
            "description" : "The protection state description."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ReplicationProviderSpecificSettings"
          },
          "recoveryContainerId" : {
            "type" : "string",
            "description" : "The recovery container Id."
          },
          "recoveryFabricFriendlyName" : {
            "type" : "string",
            "description" : "The friendly name of recovery fabric."
          },
          "recoveryFabricId" : {
            "type" : "string",
            "description" : "The Arm Id of recovery fabric."
          },
          "recoveryProtectionContainerFriendlyName" : {
            "type" : "string",
            "description" : "The name of recovery container friendly name."
          },
          "recoveryServicesProviderId" : {
            "type" : "string",
            "description" : "The recovery provider ARM Id."
          },
          "replicationHealth" : {
            "type" : "string",
            "description" : "The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration."
          },
          "testFailoverState" : {
            "type" : "string",
            "description" : "The Test failover state."
          },
          "testFailoverStateDescription" : {
            "type" : "string",
            "description" : "The Test failover state description."
          }
        },
        "description" : "Replication protected item custom data details."
      },
      "ReplicationProviderContainerUnmappingInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Provider specific input for unpairing operations."
      },
      "ReplicationProviderSpecificContainerCreationInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Provider specific input for container creation operation.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ReplicationProviderSpecificContainerMappingInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Provider specific input for pairing operations.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ReplicationProviderSpecificSettings" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the Instance type.",
            "readOnly" : true
          }
        },
        "description" : "Replication provider specific settings.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ReplicationProviderSpecificUpdateContainerMappingInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Provider specific input for update pairing operations.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "ResolveHealthError" : {
        "type" : "object",
        "properties" : {
          "healthErrorId" : {
            "type" : "string",
            "description" : "Health error id."
          }
        },
        "description" : "Resolve health errors input properties."
      },
      "ResolveHealthInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ResolveHealthInputProperties"
          }
        },
        "description" : "Resolve health input."
      },
      "ResolveHealthInputProperties" : {
        "type" : "object",
        "properties" : {
          "healthErrors" : {
            "type" : "array",
            "description" : "Health errors.",
            "items" : {
              "$ref" : "#/components/schemas/ResolveHealthError"
            }
          }
        },
        "description" : "Resolve health input properties."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource Id",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Resource Location"
          },
          "name" : {
            "type" : "string",
            "description" : "Resource Name",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource Type",
            "readOnly" : true
          }
        },
        "description" : "Azure resource."
      },
      "ResourceHealthSummary" : {
        "type" : "object",
        "properties" : {
          "issues" : {
            "type" : "array",
            "description" : "The list of summary of health errors across the resources under the container.",
            "items" : {
              "$ref" : "#/components/schemas/HealthErrorSummary"
            }
          },
          "resourceCount" : {
            "type" : "integer",
            "description" : "The count of total resources under the container.",
            "format" : "int32"
          }
        },
        "description" : "Base class to define the health summary of the resources contained under an Arm resource."
      },
      "ResumeJobParams" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ResumeJobParamsProperties"
          }
        },
        "description" : "Resume job params."
      },
      "ResumeJobParamsProperties" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "Resume job comments."
          }
        },
        "description" : "Resume job properties."
      },
      "RetentionVolume" : {
        "type" : "object",
        "properties" : {
          "capacityInBytes" : {
            "type" : "integer",
            "description" : "The volume capacity.",
            "format" : "int64"
          },
          "freeSpaceInBytes" : {
            "type" : "integer",
            "description" : "The free space available in this volume.",
            "format" : "int64"
          },
          "thresholdPercentage" : {
            "type" : "integer",
            "description" : "The threshold percentage.",
            "format" : "int32"
          },
          "volumeName" : {
            "type" : "string",
            "description" : "The volume name."
          }
        },
        "description" : "The retention details of the MT."
      },
      "ReverseReplicationInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ReverseReplicationInputProperties"
          }
        },
        "description" : "Reverse replication input."
      },
      "ReverseReplicationInputProperties" : {
        "type" : "object",
        "properties" : {
          "failoverDirection" : {
            "type" : "string",
            "description" : "Failover direction."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ReverseReplicationProviderSpecificInput"
          }
        },
        "description" : "Reverse replication input properties."
      },
      "ReverseReplicationProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Provider specific reverse replication input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "RoleAssignment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ARM Id of the role assignment."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the role assignment."
          },
          "principalId" : {
            "type" : "string",
            "description" : "Principal Id."
          },
          "roleDefinitionId" : {
            "type" : "string",
            "description" : "Role definition id."
          },
          "scope" : {
            "type" : "string",
            "description" : "Role assignment scope."
          }
        },
        "description" : "Azure role assignment details."
      },
      "RunAsAccount" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "The CS RunAs account Id."
          },
          "accountName" : {
            "type" : "string",
            "description" : "The CS RunAs account name."
          }
        },
        "description" : "CS Accounts Details."
      },
      "SanEnableProtectionInput" : {
        "description" : "San enable protection provider specific input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnableProtectionProviderSpecificInput"
        } ]
      },
      "ScriptActionTaskDetails" : {
        "properties" : {
          "isPrimarySideScript" : {
            "type" : "boolean",
            "description" : "A value indicating whether it is a primary side script or not."
          },
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "output" : {
            "type" : "string",
            "description" : "The output."
          },
          "path" : {
            "type" : "string",
            "description" : "The path."
          }
        },
        "description" : "This class represents the script action task details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "ServiceError" : {
        "type" : "object",
        "properties" : {
          "activityId" : {
            "type" : "string",
            "description" : "Activity Id."
          },
          "code" : {
            "type" : "string",
            "description" : "Error code."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message."
          },
          "possibleCauses" : {
            "type" : "string",
            "description" : "Possible causes of error."
          },
          "recommendedAction" : {
            "type" : "string",
            "description" : "Recommended action to resolve error."
          }
        },
        "description" : "ASR error model"
      },
      "StorageClassification" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageClassificationProperties"
          }
        },
        "description" : "Storage object definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "StorageClassificationCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The storage details.",
            "items" : {
              "$ref" : "#/components/schemas/StorageClassification"
            }
          }
        },
        "description" : "Collection of storage details."
      },
      "StorageClassificationMapping" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageClassificationMappingProperties"
          }
        },
        "description" : "Storage mapping object.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "StorageClassificationMappingCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The storage details.",
            "items" : {
              "$ref" : "#/components/schemas/StorageClassificationMapping"
            }
          }
        },
        "description" : "Collection of storage mapping details."
      },
      "StorageClassificationMappingInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/StorageMappingInputProperties"
          }
        },
        "description" : "Storage mapping input."
      },
      "StorageClassificationMappingProperties" : {
        "type" : "object",
        "properties" : {
          "targetStorageClassificationId" : {
            "type" : "string",
            "description" : "Target storage object Id."
          }
        },
        "description" : "Storage mapping properties."
      },
      "StorageClassificationProperties" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly name of the Storage classification."
          }
        },
        "description" : "Storage object properties."
      },
      "StorageMappingInputProperties" : {
        "type" : "object",
        "properties" : {
          "targetStorageClassificationId" : {
            "type" : "string",
            "description" : "The ID of the storage object."
          }
        },
        "description" : "Storage mapping input properties."
      },
      "Subnet" : {
        "type" : "object",
        "properties" : {
          "addressList" : {
            "type" : "array",
            "description" : "The list of addresses for the subnet.",
            "items" : {
              "type" : "string"
            }
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "The subnet friendly name."
          },
          "name" : {
            "type" : "string",
            "description" : "The subnet name."
          }
        },
        "description" : "Subnets of the network."
      },
      "SupportedOSDetails" : {
        "type" : "object",
        "properties" : {
          "osName" : {
            "type" : "string",
            "description" : "The name."
          },
          "osType" : {
            "type" : "string",
            "description" : "The type."
          },
          "osVersions" : {
            "type" : "array",
            "description" : "List of version for OS.",
            "items" : {
              "$ref" : "#/components/schemas/OSVersionWrapper"
            }
          }
        },
        "description" : "Supported Operating system details."
      },
      "SupportedOSProperties" : {
        "type" : "object",
        "properties" : {
          "supportedOsList" : {
            "type" : "array",
            "description" : "The supported OS List.",
            "items" : {
              "$ref" : "#/components/schemas/SupportedOSProperty"
            }
          }
        },
        "description" : "Properties model for supported OS API."
      },
      "SupportedOSProperty" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the replication provider type.",
            "readOnly" : true
          },
          "supportedOs" : {
            "type" : "array",
            "description" : "List of supported OS.",
            "items" : {
              "$ref" : "#/components/schemas/SupportedOSDetails"
            }
          }
        },
        "description" : "Property object for supported OS api."
      },
      "SupportedOperatingSystems" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SupportedOSProperties"
          }
        },
        "description" : "Response object for supported operating systems API.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SwitchProtectionInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SwitchProtectionInputProperties"
          }
        },
        "description" : "Switch protection input."
      },
      "SwitchProtectionInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/SwitchProtectionProviderSpecificInput"
          },
          "replicationProtectedItemName" : {
            "type" : "string",
            "description" : "The unique replication protected item name."
          }
        },
        "description" : "Switch protection input properties."
      },
      "SwitchProtectionJobDetails" : {
        "properties" : {
          "newReplicationProtectedItemId" : {
            "type" : "string",
            "description" : "ARM Id of the new replication protected item."
          }
        },
        "description" : "This class represents details for switch protection job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "SwitchProtectionProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "Gets the Instance type."
          }
        },
        "description" : "Provider specific switch protection input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "TargetComputeSize" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The Id."
          },
          "name" : {
            "type" : "string",
            "description" : "The name."
          },
          "properties" : {
            "$ref" : "#/components/schemas/TargetComputeSizeProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The Type of the object."
          }
        },
        "description" : "Represents applicable recovery vm sizes."
      },
      "TargetComputeSizeCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of target compute sizes.",
            "items" : {
              "$ref" : "#/components/schemas/TargetComputeSize"
            }
          }
        },
        "description" : "Target compute size collection."
      },
      "TargetComputeSizeProperties" : {
        "type" : "object",
        "properties" : {
          "cpuCoresCount" : {
            "type" : "integer",
            "description" : "The maximum cpu cores count supported by target compute size.",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "description" : "The reasons why the target compute size is not applicable for the protected item.",
            "items" : {
              "$ref" : "#/components/schemas/ComputeSizeErrorDetails"
            }
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Target compute size display name."
          },
          "highIopsSupported" : {
            "type" : "string",
            "description" : "The value indicating whether the target compute size supports high Iops."
          },
          "maxDataDiskCount" : {
            "type" : "integer",
            "description" : "The maximum data disks count supported by target compute size.",
            "format" : "int32"
          },
          "maxNicsCount" : {
            "type" : "integer",
            "description" : "The maximum Nics count supported by target compute size.",
            "format" : "int32"
          },
          "memoryInGB" : {
            "type" : "number",
            "description" : "The maximum memory in GB supported by target compute size.",
            "format" : "double"
          },
          "name" : {
            "type" : "string",
            "description" : "Target compute size name."
          }
        },
        "description" : "Represents applicable recovery vm sizes properties."
      },
      "TaskTypeDetails" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The type of task details."
          }
        },
        "description" : "Task details based on specific task type.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "TestFailoverCleanupInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/TestFailoverCleanupInputProperties"
          }
        },
        "description" : "Input definition for test failover cleanup."
      },
      "TestFailoverCleanupInputProperties" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "Test failover cleanup comments."
          }
        },
        "description" : "Input definition for test failover cleanup input properties."
      },
      "TestFailoverInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/TestFailoverInputProperties"
          }
        },
        "description" : "Input definition for planned failover."
      },
      "TestFailoverInputProperties" : {
        "type" : "object",
        "properties" : {
          "failoverDirection" : {
            "type" : "string",
            "description" : "Failover direction."
          },
          "networkId" : {
            "type" : "string",
            "description" : "The id of the network to be used for test failover"
          },
          "networkType" : {
            "type" : "string",
            "description" : "Network type to be used for test failover."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
          },
          "skipTestFailoverCleanup" : {
            "type" : "string",
            "description" : "A value indicating whether the test failover cleanup is to be skipped."
          }
        },
        "description" : "Input definition for planned failover input properties."
      },
      "TestFailoverJobDetails" : {
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "The test failover comments."
          },
          "networkFriendlyName" : {
            "type" : "string",
            "description" : "The test network friendly name."
          },
          "networkName" : {
            "type" : "string",
            "description" : "The test network name."
          },
          "networkType" : {
            "type" : "string",
            "description" : "The test network type (see TestFailoverInput enum for possible values)."
          },
          "protectedItemDetails" : {
            "type" : "array",
            "description" : "The test VM details.",
            "items" : {
              "$ref" : "#/components/schemas/FailoverReplicationProtectedItemDetails"
            }
          },
          "testFailoverStatus" : {
            "type" : "string",
            "description" : "The test failover status."
          }
        },
        "description" : "This class represents the details for a test failover job.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/JobDetails"
        } ]
      },
      "TestMigrateCleanupInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/TestMigrateCleanupInputProperties"
          }
        },
        "description" : "Input for test migrate cleanup."
      },
      "TestMigrateCleanupInputProperties" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "string",
            "description" : "Test migrate cleanup comments."
          }
        },
        "description" : "Test migrate cleanup input properties."
      },
      "TestMigrateInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/TestMigrateInputProperties"
          }
        },
        "description" : "Input for test migrate."
      },
      "TestMigrateInputProperties" : {
        "required" : [ "providerSpecificDetails" ],
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/TestMigrateProviderSpecificInput"
          }
        },
        "description" : "Test migrate input properties."
      },
      "TestMigrateProviderSpecificInput" : {
        "required" : [ "instanceType" ],
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Test migrate provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "UnplannedFailoverInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UnplannedFailoverInputProperties"
          }
        },
        "description" : "Input definition for planned failover."
      },
      "UnplannedFailoverInputProperties" : {
        "type" : "object",
        "properties" : {
          "failoverDirection" : {
            "type" : "string",
            "description" : "Failover direction."
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/ProviderSpecificFailoverInput"
          },
          "sourceSiteOperations" : {
            "type" : "string",
            "description" : "Source site operations status"
          }
        },
        "description" : "Input definition for planned failover input properties."
      },
      "UpdateMigrationItemInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateMigrationItemInputProperties"
          }
        },
        "description" : "Update migration item input."
      },
      "UpdateMigrationItemInputProperties" : {
        "required" : [ "providerSpecificDetails" ],
        "type" : "object",
        "properties" : {
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/UpdateMigrationItemProviderSpecificInput"
          }
        },
        "description" : "Update migration item input properties."
      },
      "UpdateMigrationItemProviderSpecificInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Update migration item provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "UpdateMobilityServiceRequest" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateMobilityServiceRequestProperties"
          }
        },
        "description" : "Request to update the mobility service on a protected item."
      },
      "UpdateMobilityServiceRequestProperties" : {
        "type" : "object",
        "properties" : {
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The CS run as account Id."
          }
        },
        "description" : "The properties of an update mobility service request."
      },
      "UpdateNetworkMappingInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateNetworkMappingInputProperties"
          }
        },
        "description" : "Update network mapping input."
      },
      "UpdateNetworkMappingInputProperties" : {
        "type" : "object",
        "properties" : {
          "fabricSpecificDetails" : {
            "$ref" : "#/components/schemas/FabricSpecificUpdateNetworkMappingInput"
          },
          "recoveryFabricName" : {
            "type" : "string",
            "description" : "Recovery fabric name."
          },
          "recoveryNetworkId" : {
            "type" : "string",
            "description" : "Recovery network Id."
          }
        },
        "description" : "Common input details for network mapping operation."
      },
      "UpdatePolicyInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdatePolicyInputProperties"
          }
        },
        "description" : "Update policy input."
      },
      "UpdatePolicyInputProperties" : {
        "type" : "object",
        "properties" : {
          "replicationProviderSettings" : {
            "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
          }
        },
        "description" : "Policy update properties."
      },
      "UpdateProtectionContainerMappingInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateProtectionContainerMappingInputProperties"
          }
        },
        "description" : "Container pairing update input."
      },
      "UpdateProtectionContainerMappingInputProperties" : {
        "type" : "object",
        "properties" : {
          "providerSpecificInput" : {
            "$ref" : "#/components/schemas/ReplicationProviderSpecificUpdateContainerMappingInput"
          }
        },
        "description" : "Container pairing update input."
      },
      "UpdateRecoveryPlanInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateRecoveryPlanInputProperties"
          }
        },
        "description" : "Update recovery plan input class."
      },
      "UpdateRecoveryPlanInputProperties" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "description" : "The recovery plan groups.",
            "items" : {
              "$ref" : "#/components/schemas/RecoveryPlanGroup"
            }
          }
        },
        "description" : "Recovery plan update properties."
      },
      "UpdateReplicationProtectedItemInput" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateReplicationProtectedItemInputProperties"
          }
        },
        "description" : "Update replication protected item input."
      },
      "UpdateReplicationProtectedItemInputProperties" : {
        "type" : "object",
        "properties" : {
          "enableRdpOnTargetOption" : {
            "type" : "string",
            "description" : "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum."
          },
          "licenseType" : {
            "type" : "string",
            "description" : "License type.",
            "enum" : [ "NotSpecified", "NoLicenseType", "WindowsServer" ]
          },
          "providerSpecificDetails" : {
            "$ref" : "#/components/schemas/UpdateReplicationProtectedItemProviderInput"
          },
          "recoveryAvailabilitySetId" : {
            "type" : "string",
            "description" : "The target availability set id."
          },
          "recoveryAzureVMName" : {
            "type" : "string",
            "description" : "Target azure VM name given by the user."
          },
          "recoveryAzureVMSize" : {
            "type" : "string",
            "description" : "Target Azure Vm size."
          },
          "selectedRecoveryAzureNetworkId" : {
            "type" : "string",
            "description" : "Target Azure Network Id."
          },
          "selectedSourceNicId" : {
            "type" : "string",
            "description" : "The selected source nic Id which will be used as the primary nic during failover."
          },
          "selectedTfoAzureNetworkId" : {
            "type" : "string",
            "description" : "The Azure Network Id for test failover."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The list of vm nic details.",
            "items" : {
              "$ref" : "#/components/schemas/VMNicInputDetails"
            }
          }
        },
        "description" : "Update protected item input properties."
      },
      "UpdateReplicationProtectedItemProviderInput" : {
        "type" : "object",
        "properties" : {
          "instanceType" : {
            "type" : "string",
            "description" : "The class type."
          }
        },
        "description" : "Update replication protected item provider specific input.",
        "discriminator" : {
          "propertyName" : "instanceType"
        }
      },
      "UpdateVCenterRequest" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UpdateVCenterRequestProperties"
          }
        },
        "description" : "Input required to update vCenter."
      },
      "UpdateVCenterRequestProperties" : {
        "type" : "object",
        "properties" : {
          "friendlyName" : {
            "type" : "string",
            "description" : "The friendly name of the vCenter."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address of the vCenter to be discovered."
          },
          "port" : {
            "type" : "string",
            "description" : "The port number for discovery."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The process server Id from where the update can be orchestrated."
          },
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The CS account Id which has privileges to update the vCenter."
          }
        },
        "description" : "The properties of an update vCenter request."
      },
      "VCenter" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VCenterProperties"
          }
        },
        "description" : "vCenter definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VCenterCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The vCenter details.",
            "items" : {
              "$ref" : "#/components/schemas/VCenter"
            }
          }
        },
        "description" : "Collection of vCenter details."
      },
      "VCenterProperties" : {
        "type" : "object",
        "properties" : {
          "discoveryStatus" : {
            "type" : "string",
            "description" : "The VCenter discovery status."
          },
          "fabricArmResourceName" : {
            "type" : "string",
            "description" : "The ARM resource name of the fabric containing this VCenter."
          },
          "friendlyName" : {
            "type" : "string",
            "description" : "Friendly name of the vCenter."
          },
          "healthErrors" : {
            "type" : "array",
            "description" : "The health errors for this VCenter.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          },
          "infrastructureId" : {
            "type" : "string",
            "description" : "The infrastructure Id of vCenter."
          },
          "internalId" : {
            "type" : "string",
            "description" : "VCenter internal ID."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address of the vCenter."
          },
          "lastHeartbeat" : {
            "type" : "string",
            "description" : "The time when the last heartbeat was received by vCenter.",
            "format" : "date-time"
          },
          "port" : {
            "type" : "string",
            "description" : "The port number for discovery."
          },
          "processServerId" : {
            "type" : "string",
            "description" : "The process server Id."
          },
          "runAsAccountId" : {
            "type" : "string",
            "description" : "The account Id which has privileges to discover the vCenter."
          }
        },
        "description" : "vCenter properties."
      },
      "VMNicDetails" : {
        "type" : "object",
        "properties" : {
          "enableAcceleratedNetworkingOnRecovery" : {
            "type" : "boolean",
            "description" : "A value indicating whether the NIC has accelerated networking enabled."
          },
          "enableAcceleratedNetworkingOnTfo" : {
            "type" : "boolean",
            "description" : "Whether the test failover NIC has accelerated networking enabled."
          },
          "ipAddressType" : {
            "type" : "string",
            "description" : "Ip address type."
          },
          "nicId" : {
            "type" : "string",
            "description" : "The nic Id."
          },
          "primaryNicStaticIPAddress" : {
            "type" : "string",
            "description" : "Primary nic static IP address."
          },
          "recoveryLBBackendAddressPoolIds" : {
            "type" : "array",
            "description" : "The target backend address pools for the NIC.",
            "items" : {
              "type" : "string"
            }
          },
          "recoveryNetworkSecurityGroupId" : {
            "type" : "string",
            "description" : "The id of the NSG associated with the NIC."
          },
          "recoveryNicIpAddressType" : {
            "type" : "string",
            "description" : "IP allocation type for recovery VM."
          },
          "recoveryPublicIpAddressId" : {
            "type" : "string",
            "description" : "The id of the public IP address resource associated with the NIC."
          },
          "recoveryVMNetworkId" : {
            "type" : "string",
            "description" : "Recovery VM network Id."
          },
          "recoveryVMSubnetName" : {
            "type" : "string",
            "description" : "Recovery VM subnet name."
          },
          "replicaNicId" : {
            "type" : "string",
            "description" : "The replica nic Id."
          },
          "replicaNicStaticIPAddress" : {
            "type" : "string",
            "description" : "Replica nic static IP address."
          },
          "selectionType" : {
            "type" : "string",
            "description" : "Selection type for failover."
          },
          "sourceNicArmId" : {
            "type" : "string",
            "description" : "The source nic ARM Id."
          },
          "tfoIPConfigs" : {
            "type" : "array",
            "description" : "The IP configurations to be used by NIC during test failover.",
            "items" : {
              "$ref" : "#/components/schemas/IPConfig"
            }
          },
          "tfoNetworkSecurityGroupId" : {
            "type" : "string",
            "description" : "The NSG to be used by NIC during test failover."
          },
          "tfoVMNetworkId" : {
            "type" : "string",
            "description" : "The network to be used by NIC during test failover."
          },
          "tfoVMSubnetName" : {
            "type" : "string",
            "description" : "The subnet to be used by NIC during test failover."
          },
          "vMNetworkName" : {
            "type" : "string",
            "description" : "VM network name."
          },
          "vMSubnetName" : {
            "type" : "string",
            "description" : "VM subnet name."
          }
        },
        "description" : "Hyper V VM network details."
      },
      "VMNicInputDetails" : {
        "type" : "object",
        "properties" : {
          "enableAcceleratedNetworkingOnRecovery" : {
            "type" : "boolean",
            "description" : "Whether the NIC has accelerated networking enabled."
          },
          "enableAcceleratedNetworkingOnTfo" : {
            "type" : "boolean",
            "description" : "Whether the test NIC has accelerated networking enabled."
          },
          "nicId" : {
            "type" : "string",
            "description" : "The nic Id."
          },
          "recoveryLBBackendAddressPoolIds" : {
            "type" : "array",
            "description" : "The target backend address pools for the NIC.",
            "items" : {
              "type" : "string"
            }
          },
          "recoveryNetworkSecurityGroupId" : {
            "type" : "string",
            "description" : "The id of the NSG associated with the NIC."
          },
          "recoveryPublicIpAddressId" : {
            "type" : "string",
            "description" : "The id of the public IP address resource associated with the NIC."
          },
          "recoveryVMSubnetName" : {
            "type" : "string",
            "description" : "Recovery VM subnet name."
          },
          "replicaNicStaticIPAddress" : {
            "type" : "string",
            "description" : "Replica nic static IP address."
          },
          "selectionType" : {
            "type" : "string",
            "description" : "Selection type for failover."
          },
          "tfoIPConfigs" : {
            "type" : "array",
            "description" : "The IP configurations to be used by NIC during test failover.",
            "items" : {
              "$ref" : "#/components/schemas/IPConfig"
            }
          },
          "tfoNetworkSecurityGroupId" : {
            "type" : "string",
            "description" : "The NSG to be used by NIC during test failover."
          },
          "tfoVMSubnetName" : {
            "type" : "string",
            "description" : "The subnet to be used by NIC during test failover."
          }
        },
        "description" : "Hyper V VM network input details."
      },
      "VMwareCbtContainerCreationInput" : {
        "description" : "VMwareCbt container creation input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificContainerCreationInput"
        } ]
      },
      "VMwareCbtContainerMappingInput" : {
        "required" : [ "keyVaultId", "keyVaultUri", "serviceBusConnectionStringSecretName", "storageAccountId", "storageAccountSasSecretName", "targetLocation" ],
        "properties" : {
          "keyVaultId" : {
            "type" : "string",
            "description" : "The target key vault ARM Id."
          },
          "keyVaultUri" : {
            "type" : "string",
            "description" : "The target key vault URL."
          },
          "serviceBusConnectionStringSecretName" : {
            "type" : "string",
            "description" : "The secret name of the service bus connection string."
          },
          "storageAccountId" : {
            "type" : "string",
            "description" : "The storage account ARM Id."
          },
          "storageAccountSasSecretName" : {
            "type" : "string",
            "description" : "The secret name of the storage account."
          },
          "targetLocation" : {
            "type" : "string",
            "description" : "The target location."
          }
        },
        "description" : "VMwareCbt container mapping input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ReplicationProviderSpecificContainerMappingInput"
        } ]
      },
      "VMwareCbtDiskInput" : {
        "required" : [ "diskId", "isOSDisk", "logStorageAccountId", "logStorageAccountSasSecretName" ],
        "type" : "object",
        "properties" : {
          "diskId" : {
            "type" : "string",
            "description" : "The disk Id."
          },
          "diskType" : {
            "type" : "string",
            "description" : "The disk type.",
            "enum" : [ "Standard_LRS", "Premium_LRS", "StandardSSD_LRS" ]
          },
          "isOSDisk" : {
            "type" : "string",
            "description" : "A value indicating whether the disk is the OS disk."
          },
          "logStorageAccountId" : {
            "type" : "string",
            "description" : "The log storage account ARM Id."
          },
          "logStorageAccountSasSecretName" : {
            "type" : "string",
            "description" : "The key vault secret name of the log storage account."
          }
        },
        "description" : "VMwareCbt disk input."
      },
      "VMwareCbtEnableMigrationInput" : {
        "required" : [ "dataMoverRunAsAccountId", "disksToInclude", "snapshotRunAsAccountId", "targetNetworkId", "targetResourceGroupId", "vmwareMachineId" ],
        "properties" : {
          "dataMoverRunAsAccountId" : {
            "type" : "string",
            "description" : "The data mover RunAs account Id."
          },
          "disksToInclude" : {
            "type" : "array",
            "description" : "The disks to include list.",
            "items" : {
              "$ref" : "#/components/schemas/VMwareCbtDiskInput"
            }
          },
          "licenseType" : {
            "type" : "string",
            "description" : "License type.",
            "enum" : [ "NotSpecified", "NoLicenseType", "WindowsServer" ]
          },
          "snapshotRunAsAccountId" : {
            "type" : "string",
            "description" : "The snapshot RunAs account Id."
          },
          "targetAvailabilitySetId" : {
            "type" : "string",
            "description" : "The target availability set ARM Id."
          },
          "targetBootDiagnosticsStorageAccountId" : {
            "type" : "string",
            "description" : "The target boot diagnostics storage account ARM Id."
          },
          "targetNetworkId" : {
            "type" : "string",
            "description" : "The target network ARM Id."
          },
          "targetResourceGroupId" : {
            "type" : "string",
            "description" : "The target resource group ARM Id."
          },
          "targetSubnetName" : {
            "type" : "string",
            "description" : "The target subnet name."
          },
          "targetVmName" : {
            "type" : "string",
            "description" : "The target VM name."
          },
          "targetVmSize" : {
            "type" : "string",
            "description" : "The target VM size."
          },
          "vmwareMachineId" : {
            "type" : "string",
            "description" : "The ARM Id of the VM discovered in VMware."
          }
        },
        "description" : "VMwareCbt specific enable migration input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EnableMigrationProviderSpecificInput"
        } ]
      },
      "VMwareCbtMigrateInput" : {
        "required" : [ "performShutdown" ],
        "properties" : {
          "performShutdown" : {
            "type" : "string",
            "description" : "A value indicating whether VM is to be shutdown."
          }
        },
        "description" : "VMwareCbt specific migrate input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MigrateProviderSpecificInput"
        } ]
      },
      "VMwareCbtMigrationDetails" : {
        "properties" : {
          "dataMoverRunAsAccountId" : {
            "type" : "string",
            "description" : "The data mover RunAs account Id.",
            "readOnly" : true
          },
          "lastRecoveryPointReceived" : {
            "type" : "string",
            "description" : "The last recovery point received time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "licenseType" : {
            "type" : "string",
            "description" : "License Type of the VM to be used."
          },
          "migrationRecoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point Id to which the VM was migrated.",
            "readOnly" : true
          },
          "osType" : {
            "type" : "string",
            "description" : "The type of the OS on the VM.",
            "readOnly" : true
          },
          "protectedDisks" : {
            "type" : "array",
            "description" : "The list of protected disks.",
            "items" : {
              "$ref" : "#/components/schemas/VMwareCbtProtectedDiskDetails"
            }
          },
          "snapshotRunAsAccountId" : {
            "type" : "string",
            "description" : "The snapshot RunAs account Id.",
            "readOnly" : true
          },
          "targetAvailabilitySetId" : {
            "type" : "string",
            "description" : "The target availability set Id."
          },
          "targetBootDiagnosticsStorageAccountId" : {
            "type" : "string",
            "description" : "The target boot diagnostics storage account ARM Id."
          },
          "targetLocation" : {
            "type" : "string",
            "description" : "The target location.",
            "readOnly" : true
          },
          "targetNetworkId" : {
            "type" : "string",
            "description" : "The target network Id."
          },
          "targetResourceGroupId" : {
            "type" : "string",
            "description" : "The target resource group Id."
          },
          "targetVmName" : {
            "type" : "string",
            "description" : "Target VM name."
          },
          "targetVmSize" : {
            "type" : "string",
            "description" : "The target VM size."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The network details.",
            "items" : {
              "$ref" : "#/components/schemas/VMwareCbtNicDetails"
            }
          },
          "vmwareMachineId" : {
            "type" : "string",
            "description" : "The ARM Id of the VM discovered in VMware.",
            "readOnly" : true
          }
        },
        "description" : "VMwareCbt provider specific settings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MigrationProviderSpecificSettings"
        } ]
      },
      "VMwareCbtNicDetails" : {
        "type" : "object",
        "properties" : {
          "isPrimaryNic" : {
            "type" : "string",
            "description" : "A value indicating whether this is the primary NIC."
          },
          "isSelectedForMigration" : {
            "type" : "string",
            "description" : "A value indicating whether this NIC is selected for migration."
          },
          "nicId" : {
            "type" : "string",
            "description" : "The NIC Id.",
            "readOnly" : true
          },
          "sourceIPAddress" : {
            "type" : "string",
            "description" : "The source IP address.",
            "readOnly" : true
          },
          "sourceIPAddressType" : {
            "type" : "string",
            "description" : "The source IP address type.",
            "readOnly" : true,
            "enum" : [ "Dynamic", "Static" ]
          },
          "sourceNetworkId" : {
            "type" : "string",
            "description" : "Source network Id.",
            "readOnly" : true
          },
          "targetIPAddress" : {
            "type" : "string",
            "description" : "The target IP address."
          },
          "targetIPAddressType" : {
            "type" : "string",
            "description" : "The target IP address type.",
            "enum" : [ "Dynamic", "Static" ]
          },
          "targetSubnetName" : {
            "type" : "string",
            "description" : "Target subnet name."
          }
        },
        "description" : "VMwareCbt NIC details."
      },
      "VMwareCbtNicInput" : {
        "required" : [ "isPrimaryNic", "nicId" ],
        "type" : "object",
        "properties" : {
          "isPrimaryNic" : {
            "type" : "string",
            "description" : "A value indicating whether this is the primary NIC."
          },
          "isSelectedForMigration" : {
            "type" : "string",
            "description" : "A value indicating whether this NIC is selected for migration."
          },
          "nicId" : {
            "type" : "string",
            "description" : "The NIC Id."
          },
          "targetStaticIPAddress" : {
            "type" : "string",
            "description" : "The static IP address."
          },
          "targetSubnetName" : {
            "type" : "string",
            "description" : "Target subnet name."
          }
        },
        "description" : "VMwareCbt NIC input."
      },
      "VMwareCbtPolicyCreationInput" : {
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency (in minutes).",
            "format" : "int32"
          },
          "crashConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The crash consistent snapshot frequency (in minutes).",
            "format" : "int32"
          },
          "recoveryPointHistoryInMinutes" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          }
        },
        "description" : "VMware Cbt policy creation input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificInput"
        } ]
      },
      "VMwareCbtProtectedDiskDetails" : {
        "type" : "object",
        "properties" : {
          "capacityInBytes" : {
            "type" : "integer",
            "description" : "The disk capacity in bytes.",
            "format" : "int64",
            "readOnly" : true
          },
          "diskId" : {
            "type" : "string",
            "description" : "The disk id.",
            "readOnly" : true
          },
          "diskName" : {
            "type" : "string",
            "description" : "The disk name.",
            "readOnly" : true
          },
          "diskPath" : {
            "type" : "string",
            "description" : "The disk path.",
            "readOnly" : true
          },
          "diskType" : {
            "type" : "string",
            "description" : "The disk type.",
            "enum" : [ "Standard_LRS", "Premium_LRS", "StandardSSD_LRS" ]
          },
          "isOSDisk" : {
            "type" : "string",
            "description" : "A value indicating whether the disk is the OS disk.",
            "readOnly" : true
          },
          "logStorageAccountId" : {
            "type" : "string",
            "description" : "The log storage account ARM Id.",
            "readOnly" : true
          },
          "logStorageAccountSasSecretName" : {
            "type" : "string",
            "description" : "The key vault secret name of the log storage account.",
            "readOnly" : true
          },
          "seedManagedDiskId" : {
            "type" : "string",
            "description" : "The ARM Id of the seed managed disk.",
            "readOnly" : true
          },
          "targetManagedDiskId" : {
            "type" : "string",
            "description" : "The ARM Id of the target managed disk.",
            "readOnly" : true
          }
        },
        "description" : "VMwareCbt protected disk details."
      },
      "VMwareCbtProtectionContainerMappingDetails" : {
        "properties" : {
          "keyVaultId" : {
            "type" : "string",
            "description" : "The target key vault ARM Id.",
            "readOnly" : true
          },
          "keyVaultUri" : {
            "type" : "string",
            "description" : "The target key vault URI.",
            "readOnly" : true
          },
          "serviceBusConnectionStringSecretName" : {
            "type" : "string",
            "description" : "The secret name of the service bus connection string.",
            "readOnly" : true
          },
          "storageAccountId" : {
            "type" : "string",
            "description" : "The storage account ARM Id.",
            "readOnly" : true
          },
          "storageAccountSasSecretName" : {
            "type" : "string",
            "description" : "The secret name of the storage account.",
            "readOnly" : true
          },
          "targetLocation" : {
            "type" : "string",
            "description" : "The target location.",
            "readOnly" : true
          }
        },
        "description" : "VMwareCbt provider specific container mapping details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProtectionContainerMappingProviderSpecificDetails"
        } ]
      },
      "VMwareCbtTestMigrateInput" : {
        "required" : [ "networkId", "recoveryPointId" ],
        "properties" : {
          "networkId" : {
            "type" : "string",
            "description" : "The test network Id."
          },
          "recoveryPointId" : {
            "type" : "string",
            "description" : "The recovery point Id."
          }
        },
        "description" : "VMwareCbt specific test migrate input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TestMigrateProviderSpecificInput"
        } ]
      },
      "VMwareCbtUpdateMigrationItemInput" : {
        "properties" : {
          "licenseType" : {
            "type" : "string",
            "description" : "The license type.",
            "enum" : [ "NotSpecified", "NoLicenseType", "WindowsServer" ]
          },
          "targetAvailabilitySetId" : {
            "type" : "string",
            "description" : "The target availability set ARM Id."
          },
          "targetBootDiagnosticsStorageAccountId" : {
            "type" : "string",
            "description" : "The target boot diagnostics storage account ARM Id."
          },
          "targetNetworkId" : {
            "type" : "string",
            "description" : "The target network ARM Id."
          },
          "targetResourceGroupId" : {
            "type" : "string",
            "description" : "The target resource group ARM Id."
          },
          "targetVmName" : {
            "type" : "string",
            "description" : "The target VM name."
          },
          "targetVmSize" : {
            "type" : "string",
            "description" : "The target VM size."
          },
          "vmNics" : {
            "type" : "array",
            "description" : "The list of NIC details.",
            "items" : {
              "$ref" : "#/components/schemas/VMwareCbtNicInput"
            }
          }
        },
        "description" : "VMwareCbt specific update migration item input.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateMigrationItemProviderSpecificInput"
        } ]
      },
      "VMwareDetails" : {
        "properties" : {
          "agentCount" : {
            "type" : "string",
            "description" : "The number of source and target servers configured to talk to this CS."
          },
          "agentExpiryDate" : {
            "type" : "string",
            "description" : "Agent expiry date.",
            "format" : "date-time"
          },
          "agentVersion" : {
            "type" : "string",
            "description" : "The agent Version."
          },
          "agentVersionDetails" : {
            "$ref" : "#/components/schemas/VersionDetails"
          },
          "availableMemoryInBytes" : {
            "type" : "integer",
            "description" : "The available memory.",
            "format" : "int64"
          },
          "availableSpaceInBytes" : {
            "type" : "integer",
            "description" : "The available space.",
            "format" : "int64"
          },
          "cpuLoad" : {
            "type" : "string",
            "description" : "The percentage of the CPU load."
          },
          "cpuLoadStatus" : {
            "type" : "string",
            "description" : "The CPU load status."
          },
          "csServiceStatus" : {
            "type" : "string",
            "description" : "The CS service status."
          },
          "databaseServerLoad" : {
            "type" : "string",
            "description" : "The database server load."
          },
          "databaseServerLoadStatus" : {
            "type" : "string",
            "description" : "The database server load status."
          },
          "hostName" : {
            "type" : "string",
            "description" : "The host name."
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address."
          },
          "lastHeartbeat" : {
            "type" : "string",
            "description" : "The last heartbeat received from CS server.",
            "format" : "date-time"
          },
          "masterTargetServers" : {
            "type" : "array",
            "description" : "The list of Master Target servers associated with the fabric.",
            "items" : {
              "$ref" : "#/components/schemas/MasterTargetServer"
            }
          },
          "memoryUsageStatus" : {
            "type" : "string",
            "description" : "The memory usage status."
          },
          "processServerCount" : {
            "type" : "string",
            "description" : "The number of process servers."
          },
          "processServers" : {
            "type" : "array",
            "description" : "The list of Process Servers associated with the fabric.",
            "items" : {
              "$ref" : "#/components/schemas/ProcessServer"
            }
          },
          "protectedServers" : {
            "type" : "string",
            "description" : "The number of protected servers."
          },
          "psTemplateVersion" : {
            "type" : "string",
            "description" : "PS template version."
          },
          "replicationPairCount" : {
            "type" : "string",
            "description" : "The number of replication pairs configured in this CS."
          },
          "runAsAccounts" : {
            "type" : "array",
            "description" : "The list of run as accounts created on the server.",
            "items" : {
              "$ref" : "#/components/schemas/RunAsAccount"
            }
          },
          "spaceUsageStatus" : {
            "type" : "string",
            "description" : "The space usage status."
          },
          "sslCertExpiryDate" : {
            "type" : "string",
            "description" : "CS SSL cert expiry date.",
            "format" : "date-time"
          },
          "sslCertExpiryRemainingDays" : {
            "type" : "integer",
            "description" : "CS SSL cert expiry date.",
            "format" : "int32"
          },
          "systemLoad" : {
            "type" : "string",
            "description" : "The percentage of the system load."
          },
          "systemLoadStatus" : {
            "type" : "string",
            "description" : "The system load status."
          },
          "totalMemoryInBytes" : {
            "type" : "integer",
            "description" : "The total memory.",
            "format" : "int64"
          },
          "totalSpaceInBytes" : {
            "type" : "integer",
            "description" : "The total space.",
            "format" : "int64"
          },
          "versionStatus" : {
            "type" : "string",
            "description" : "Version status"
          },
          "webLoad" : {
            "type" : "string",
            "description" : "The web load."
          },
          "webLoadStatus" : {
            "type" : "string",
            "description" : "The web load status."
          }
        },
        "description" : "Store the fabric details specific to the VMware fabric.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificDetails"
        } ]
      },
      "VMwareV2FabricCreationInput" : {
        "required" : [ "migrationSolutionId", "vmwareSiteId" ],
        "properties" : {
          "migrationSolutionId" : {
            "type" : "string",
            "description" : "The ARM Id of the migration solution."
          },
          "vmwareSiteId" : {
            "type" : "string",
            "description" : "The ARM Id of the VMware site."
          }
        },
        "description" : "VMwareV2 fabric provider specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificCreationInput"
        } ]
      },
      "VMwareV2FabricSpecificDetails" : {
        "properties" : {
          "migrationSolutionId" : {
            "type" : "string",
            "description" : "The Migration solution ARM Id.",
            "readOnly" : true
          },
          "serviceEndpoint" : {
            "type" : "string",
            "description" : "The service endpoint.",
            "readOnly" : true
          },
          "serviceResourceId" : {
            "type" : "string",
            "description" : "The service resource Id.",
            "readOnly" : true
          },
          "vmwareSiteId" : {
            "type" : "string",
            "description" : "The ARM Id of the VMware site.",
            "readOnly" : true
          }
        },
        "description" : "VMwareV2 fabric specific details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificDetails"
        } ]
      },
      "VMwareVirtualMachineDetails" : {
        "properties" : {
          "agentGeneratedId" : {
            "type" : "string",
            "description" : "The ID generated by the InMage agent after it gets installed on guest. This is the ID to be used during InMage CreateProtection."
          },
          "agentInstalled" : {
            "type" : "string",
            "description" : "The value indicating if InMage scout agent is installed on guest."
          },
          "agentVersion" : {
            "type" : "string",
            "description" : "The agent version."
          },
          "discoveryType" : {
            "type" : "string",
            "description" : "A value indicating the discovery type of the machine. Value can be vCenter or physical."
          },
          "diskDetails" : {
            "type" : "array",
            "description" : "The disk details.",
            "items" : {
              "$ref" : "#/components/schemas/InMageDiskDetails"
            }
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "The IP address."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OsType installed on VM."
          },
          "poweredOn" : {
            "type" : "string",
            "description" : "The value indicating whether VM is powered on."
          },
          "vCenterInfrastructureId" : {
            "type" : "string",
            "description" : "The VCenter infrastructure Id."
          },
          "validationErrors" : {
            "type" : "array",
            "description" : "The validation errors.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          }
        },
        "description" : "VMware provider specific settings",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConfigurationSettings"
        } ]
      },
      "VaultHealthDetails" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VaultHealthProperties"
          }
        },
        "description" : "Vault health details definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VaultHealthProperties" : {
        "type" : "object",
        "properties" : {
          "containersHealth" : {
            "$ref" : "#/components/schemas/ResourceHealthSummary"
          },
          "fabricsHealth" : {
            "$ref" : "#/components/schemas/ResourceHealthSummary"
          },
          "protectedItemsHealth" : {
            "$ref" : "#/components/schemas/ResourceHealthSummary"
          },
          "vaultErrors" : {
            "type" : "array",
            "description" : "The list of errors on the vault.",
            "items" : {
              "$ref" : "#/components/schemas/HealthError"
            }
          }
        },
        "description" : "class to define the health summary of the Vault."
      },
      "VaultSetting" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VaultSettingProperties"
          }
        },
        "description" : "Vault setting.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VaultSettingCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The value of next link."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of vault setting.",
            "items" : {
              "$ref" : "#/components/schemas/VaultSetting"
            }
          }
        },
        "description" : "Vault setting collection."
      },
      "VaultSettingCreationInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VaultSettingCreationInputProperties"
          }
        },
        "description" : "Input to create vault setting."
      },
      "VaultSettingCreationInputProperties" : {
        "required" : [ "migrationSolutionId" ],
        "type" : "object",
        "properties" : {
          "migrationSolutionId" : {
            "type" : "string",
            "description" : "The migration solution Id."
          }
        },
        "description" : "Input to create vault setting."
      },
      "VaultSettingProperties" : {
        "type" : "object",
        "properties" : {
          "migrationSolutionId" : {
            "type" : "string",
            "description" : "The migration solution ARM Id."
          }
        },
        "description" : "Vault setting properties."
      },
      "VersionDetails" : {
        "type" : "object",
        "properties" : {
          "expiryDate" : {
            "type" : "string",
            "description" : "Version expiry date.",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "A value indicating whether security update required.",
            "enum" : [ "Supported", "NotSupported", "Deprecated", "UpdateRequired", "SecurityUpdateRequired" ]
          },
          "version" : {
            "type" : "string",
            "description" : "The agent version."
          }
        },
        "description" : "Version related details."
      },
      "VirtualMachineTaskDetails" : {
        "properties" : {
          "jobTask" : {
            "$ref" : "#/components/schemas/JobEntity"
          },
          "skippedReason" : {
            "type" : "string",
            "description" : "The skipped reason."
          },
          "skippedReasonString" : {
            "type" : "string",
            "description" : "The skipped reason string."
          }
        },
        "description" : "This class represents the virtual machine task details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "VmNicUpdatesTaskDetails" : {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the Nic."
          },
          "nicId" : {
            "type" : "string",
            "description" : "Nic Id."
          },
          "vmId" : {
            "type" : "string",
            "description" : "Virtual machine Id."
          }
        },
        "description" : "This class represents the vm NicUpdates task details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TaskTypeDetails"
        } ]
      },
      "VmmDetails" : {
        "description" : "VMM fabric specific details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificDetails"
        } ]
      },
      "VmmToAzureCreateNetworkMappingInput" : {
        "description" : "Create network mappings input properties/behavior specific to Vmm to Azure Network mapping.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificCreateNetworkMappingInput"
        } ]
      },
      "VmmToAzureNetworkMappingSettings" : {
        "description" : "E2A Network Mapping fabric specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NetworkMappingFabricSpecificSettings"
        } ]
      },
      "VmmToAzureUpdateNetworkMappingInput" : {
        "description" : "Update network mappings input properties/behavior specific to vmm to azure.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificUpdateNetworkMappingInput"
        } ]
      },
      "VmmToVmmCreateNetworkMappingInput" : {
        "description" : "Create network mappings input properties/behavior specific to vmm to vmm Network mapping.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificCreateNetworkMappingInput"
        } ]
      },
      "VmmToVmmNetworkMappingSettings" : {
        "description" : "E2E Network Mapping fabric specific settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NetworkMappingFabricSpecificSettings"
        } ]
      },
      "VmmToVmmUpdateNetworkMappingInput" : {
        "description" : "Update network mappings input properties/behavior specific to vmm to vmm.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FabricSpecificUpdateNetworkMappingInput"
        } ]
      },
      "VmmVirtualMachineDetails" : {
        "properties" : {
          "diskDetails" : {
            "type" : "array",
            "description" : "The Last successful failover time.",
            "items" : {
              "$ref" : "#/components/schemas/DiskDetails"
            }
          },
          "generation" : {
            "type" : "string",
            "description" : "The id of the object in fabric."
          },
          "hasFibreChannelAdapter" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has a fibre channel adapter attached. String value of {SrsDataContract.PresenceStatus} enum.",
            "enum" : [ "Unknown", "Present", "NotPresent" ]
          },
          "hasPhysicalDisk" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has a physical disk attached. String value of {SrsDataContract.PresenceStatus} enum.",
            "enum" : [ "Unknown", "Present", "NotPresent" ]
          },
          "hasSharedVhd" : {
            "type" : "string",
            "description" : "A value indicating whether the VM has a shared VHD attached. String value of {SrsDataContract.PresenceStatus} enum.",
            "enum" : [ "Unknown", "Present", "NotPresent" ]
          },
          "osDetails" : {
            "$ref" : "#/components/schemas/OSDetails"
          },
          "sourceItemId" : {
            "type" : "string",
            "description" : "The source id of the object."
          }
        },
        "description" : "VMM fabric provider specific VM settings.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConfigurationSettings"
        } ]
      },
      "VmwareCbtPolicyDetails" : {
        "properties" : {
          "appConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The app consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "crashConsistentFrequencyInMinutes" : {
            "type" : "integer",
            "description" : "The crash consistent snapshot frequency in minutes.",
            "format" : "int32"
          },
          "recoveryPointHistoryInMinutes" : {
            "type" : "integer",
            "description" : "The duration in minutes until which the recovery points need to be stored.",
            "format" : "int32"
          }
        },
        "description" : "VMware Cbt specific policy details.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyProviderSpecificDetails"
        } ]
      }
    },
    "parameters" : {
      "ApiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client Api Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group where the recovery services vault is present.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceName" : {
        "name" : "resourceName",
        "in" : "path",
        "description" : "The name of the recovery services vault.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription Id.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}