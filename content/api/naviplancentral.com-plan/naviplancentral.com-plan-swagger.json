{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "NaviPlan API",
    "description" : "An API for accessing NaviPlan plan data for a client.",
    "version" : "v1"
  },
  "servers" : [ {
    "url" : "https://demo.uat.naviplancentral.com/plan"
  }, {
    "url" : "http://demo.uat.naviplancentral.com/plan"
  } ],
  "paths" : {
    "/api/Advisors" : {
      "get" : {
        "tags" : [ "Advisors" ],
        "summary" : "Retrieve Advisors",
        "description" : "This operation retrieves a list of all of the Advisors in the plan.",
        "operationId" : "Advisors_Get",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvisorsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvisorsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for advisor details"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Advisors/{householdId}/{clientId}" : {
      "get" : {
        "tags" : [ "Advisors" ],
        "summary" : "Retrieve Advisors for a Client",
        "description" : "This operation retrieves a list of all of the Advisors for the client.",
        "operationId" : "Advisors_GetByHouseholdidClientid",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "path",
          "description" : "Integer id of the household",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "clientId",
          "in" : "path",
          "description" : "Guid id of the client.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvisorsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvisorsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for advisor details"
          },
          "403" : {
            "description" : "Request is restricted for access to advisor information"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Advisors/{id}" : {
      "get" : {
        "tags" : [ "Advisors" ],
        "summary" : "Retrieve an Advisor",
        "description" : "This operation retrieves an Advisor from the plan.",
        "operationId" : "Advisors_GetById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Guid id of the advisor",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvisorModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvisorModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for advisor details"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Assumptions" : {
      "get" : {
        "tags" : [ "Assumptions" ],
        "summary" : "Retrieve plan assumptions",
        "description" : "This operation retrieves an object containing all assumptions for the specified plan.",
        "operationId" : "Assumptions_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssumptionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssumptionsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/BusinessEntities" : {
      "get" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Retrieve business entities",
        "description" : "This operation retrieves a list of all of the business entities in the plan.",
        "operationId" : "BusinessEntities_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessEntitiesModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessEntitiesModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/BusinessEntities/{id}" : {
      "get" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Retrieve a business entity",
        "description" : "This operation retrieves a business entity from the plan.",
        "operationId" : "BusinessEntities_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of business entity to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessEntityModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessEntityModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Calculations/MonteCarlo" : {
      "get" : {
        "tags" : [ "Calculations" ],
        "summary" : "Retrieve Monte Carlo results from standalone calc service",
        "description" : "Currently just stubbed out, POC in development",
        "operationId" : "Calculations_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              },
              "text/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/DefinedBenefitPensions" : {
      "get" : {
        "tags" : [ "DefinedBenefitPensions" ],
        "summary" : "Retrieve defined benefit pensions",
        "description" : "This operation retrieves a list of all of the defined benefit pensions in the plan.",
        "operationId" : "DefinedBenefitPensions_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefinedBenefitPensionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefinedBenefitPensionsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/DefinedBenefitPensions/{id}" : {
      "get" : {
        "tags" : [ "DefinedBenefitPensions" ],
        "summary" : "Retrieve a definedBenefitPension",
        "description" : "This operation retrieves a defined benefit pension from the plan.",
        "operationId" : "DefinedBenefitPensions_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of defined benefit pension to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefinedBenefitPensionModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DefinedBenefitPensionModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Eula/Accept" : {
      "post" : {
        "tags" : [ "Eula" ],
        "summary" : "Accepts the EULA",
        "operationId" : "Eula_Accept",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "InternalServerError"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Family" : {
      "get" : {
        "tags" : [ "Family" ],
        "summary" : "Retrieve family",
        "description" : "This operation retrieves an object containing all familymembers for the specified plan.",
        "operationId" : "Family_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FamilyModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FamilyModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/Education/{id}/Adjustments" : {
      "get" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Retrieve the adjustments",
        "description" : "This function retrieves a goal and the adjustments made to it",
        "operationId" : "GoalAdjustments_GetEducationByIdClientidPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the goal to retrieve adjustments for.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsEducationGoalAdjustmentsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsEducationGoalAdjustmentsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/Education/{id}/Calculations" : {
      "post" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Perform calculations",
        "description" : "This function returns the posted object and the adjusted calculation values",
        "operationId" : "GoalAdjustments_PostEducationByIdGoaladjustmentsPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the goal to retrieve adjustments for.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The adjusted values for this goal",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/GoalSuccessRates" : {
      "get" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Returns a list of goals with their relevant success rates.",
        "operationId" : "GoalAdjustments_GetGoalSuccessRatesByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Goal Success Rates successfully retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalSuccessRateResultsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalSuccessRateResultsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/MajorPurchase/{id}/Adjustments" : {
      "get" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Retrieve the adjustments",
        "description" : "This function retrieves a goal and the adjustments made to it",
        "operationId" : "GoalAdjustments_GetMajorPurchaseByIdClientidPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the goal to retrieve adjustments for.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsMajorPurchaseGoalAdjustmentsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsMajorPurchaseGoalAdjustmentsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/MajorPurchase/{id}/Calculations" : {
      "post" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Perform calculations",
        "description" : "This function returns the posted object and the adjusted calculation values",
        "operationId" : "GoalAdjustments_PostMajorPurchaseByIdGoaladjustmentsPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the goal to retrieve adjustments for.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The adjusted values for this goal",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/Restrictions" : {
      "get" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Returns a list of goal adjustment restrictions.",
        "description" : "This function returns a list of adjustment restrictions for all goals.",
        "operationId" : "GoalAdjustments_GetGoalAdjustmentRestrictionsByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Restrictions successfully retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsRestrictionsResultModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsRestrictionsResultModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/Retirement/Adjustments" : {
      "get" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Retrieve the adjustments",
        "description" : "This function retrieves a goal and the adjustments made to it for a particular client",
        "operationId" : "GoalAdjustments_GetRetirementByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/Retirement/Calculations" : {
      "post" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Perform calculations",
        "description" : "This function returns the posted object and the adjusted calculation values",
        "operationId" : "GoalAdjustments_PostRetirementByGoaladjustmentsPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The adjusted values for this goal",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/GoalAdjustments/{id}/WhatAreMyOptions" : {
      "get" : {
        "tags" : [ "GoalAdjustments" ],
        "summary" : "Returns WAMO values for current goal",
        "operationId" : "GoalAdjustments_GetWhatAreMyOptionsByIdClientidPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the goal to retrieve WAMO values for.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "What are my options results successfully retrieved.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Goals" : {
      "get" : {
        "tags" : [ "Goals" ],
        "summary" : "Retrieve goals",
        "description" : "This operation retrieves a list of all of the goals in the plan.",
        "operationId" : "Goals_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoalsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoalsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Goals/{id}" : {
      "get" : {
        "tags" : [ "Goals" ],
        "summary" : "Retrieve goals",
        "description" : "This operation retrieves a goal from the plan.",
        "operationId" : "Goals_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of goal to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoalModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoalModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/HoldingCompanies" : {
      "get" : {
        "tags" : [ "HoldingCompanies" ],
        "summary" : "Retrieve holding companies",
        "description" : "This operation retrieves a list of all of the holding companies in the plan.",
        "operationId" : "HoldingCompanies_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HoldingCompaniesModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HoldingCompaniesModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/HoldingCompanies/{id}" : {
      "get" : {
        "tags" : [ "HoldingCompanies" ],
        "summary" : "Retrieve a holding company",
        "description" : "This operation retrieves a holding company from the plan.",
        "operationId" : "HoldingCompanies_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of holding company to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HoldingCompanyModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HoldingCompanyModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Households" : {
      "get" : {
        "tags" : [ "Households" ],
        "summary" : "Retrieve all Households associated with the user",
        "description" : "This operation retrieves a list of households the current user has access to or one household specified by a householdId parameter",
        "operationId" : "Households_GetByHouseholdid",
        "parameters" : [ {
          "name" : "householdId",
          "in" : "query",
          "description" : "The Id of the specific household to retrieve",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HouseholdsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HouseholdsModel"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized for household data access"
          },
          "403" : {
            "description" : "Access to household is restricted"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Liabilities" : {
      "get" : {
        "tags" : [ "Liabilities" ],
        "summary" : "Retrieve liabilities",
        "description" : "This operation retrieves a list of all of the liabilities in the plan.",
        "operationId" : "Liabilities_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiabilitiesModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiabilitiesModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Liabilities/{id}" : {
      "get" : {
        "tags" : [ "Liabilities" ],
        "summary" : "Retrieve a liability",
        "description" : "This operation retrieves a liability from the plan.",
        "operationId" : "Liabilities_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of liability to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiabilityModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiabilityModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LifestyleAssets" : {
      "get" : {
        "tags" : [ "LifestyleAssets" ],
        "summary" : "Retrieve lifestyle assets",
        "description" : "This operation retrieves a list of all of the lifestyle assets in the plan.",
        "operationId" : "LifestyleAssets_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LifestyleAssetsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LifestyleAssetsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LifestyleAssets/{id}" : {
      "get" : {
        "tags" : [ "LifestyleAssets" ],
        "summary" : "Retrieve lifestyle assets",
        "description" : "This operation retrieves a lifestyle asset from the plan.",
        "operationId" : "LifestyleAssets_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of lifestyle asset to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LifestyleAssetModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LifestyleAssetModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/Goals" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieves all goals from the live plan",
        "operationId" : "LivePlan_GetGoalsByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/Goals/Funding" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieve a list of funding accounts",
        "description" : "This function retrieves a list of funding accounts for the goals in the plan",
        "operationId" : "LivePlan_GetGoalFundingListByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalsModelsGoalFundingListModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalsModelsGoalFundingListModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/Goals/{id}/WhatAreMyOptions" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieve WAMO values for a given goal",
        "description" : "This function retrieves the WAMO values for the specified goal",
        "operationId" : "LivePlan_GetWhatAreMyOptionsByIdClientidPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the goal",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/NetWorth/Accounts" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieves accounts for a given plan",
        "operationId" : "LivePlan_GetAccountsByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsAccountBaseModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsAccountBaseModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/NetWorth/Liabilities" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieves liabilities for a given plan",
        "operationId" : "LivePlan_GetLiabilitiesByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsLiabilityBaseModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsLiabilityBaseModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/NetWorth/LifestyleAssets" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieves lifestyle assets for a given plan",
        "operationId" : "LivePlan_GetLifestyleAssetsByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/NetWorth/RealEstate" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieves real estate accounts for a given plan",
        "operationId" : "LivePlan_GetRealEstateAssetsByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsRealEstateBaseModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsRealEstateBaseModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/Projections/NetWorth" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieves net worth projections",
        "operationId" : "LivePlan_GetProjectedNetWorthByClientidPlanid",
        "parameters" : [ {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiProjectionsModelsNetWorthProjectionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiProjectionsModelsNetWorthProjectionsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/LivePlan/Projections/{id}/NeedsVsAbilities" : {
      "get" : {
        "tags" : [ "LivePlan" ],
        "summary" : "Retrieves needs vs abilities projections",
        "operationId" : "LivePlan_GetProjectedNeedsVsAbilitiesByIdClientidPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "clientId",
          "in" : "query",
          "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiProjectionsModelsNeedsVsAbilitiesProjectionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiProjectionsModelsNeedsVsAbilitiesProjectionsModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          },
          "503" : {
            "description" : "Unable to acquire a NaviPlan engine"
          }
        },
        "deprecated" : false
      }
    },
    "/api/NetWorth" : {
      "get" : {
        "tags" : [ "NetWorth" ],
        "summary" : "Retrieve net worth",
        "description" : "This operation retrieves an object containing net worth values for specific dates within the plan:\r\n              * Plan Start Date\r\n              * Retirement Date\r\n              * Plan End Date.",
        "operationId" : "NetWorth_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetWorthModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetWorthModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Password/HasUserSetPassword" : {
      "post" : {
        "tags" : [ "Password" ],
        "summary" : "Determines if the currently logged in user has set their own password",
        "operationId" : "Password_HasUserSetPassword",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Password/PasswordRequirements" : {
      "get" : {
        "tags" : [ "Password" ],
        "summary" : "Gets the password complexity requirements",
        "operationId" : "Password_PasswordRequirements",
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "InternalServerError"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Password/Reset" : {
      "post" : {
        "tags" : [ "Password" ],
        "summary" : "Resets the password for the supplied user name",
        "operationId" : "Password_ResetByModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResetPasswordModel"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResetPasswordModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "BadRequest"
          }
        },
        "deprecated" : false
      }
    },
    "/api/Password/Set" : {
      "post" : {
        "tags" : [ "Password" ],
        "summary" : "Sets the password for the currently logged in user",
        "operationId" : "Password_SetByModel",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetPasswordModel"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetPasswordModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "BadRequest"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "deprecated" : false
      }
    },
    "/api/PlanInformation" : {
      "get" : {
        "tags" : [ "PlanInformation" ],
        "summary" : "Retrieve plan information",
        "description" : "This operation retrieves the high level plan information for a given plan",
        "operationId" : "PlanInformation_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlanInformationModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlanInformationModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/PlanStatuses" : {
      "get" : {
        "tags" : [ "PlanStatuses" ],
        "summary" : "Retrieve plan data statuses",
        "description" : "This operation retrieves the data statuses of the published plan if on demand updates\r\n            are enabled",
        "operationId" : "PlanStatuses_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlanStatusesModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlanStatusesModel"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan status access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/PortfolioAccounts" : {
      "get" : {
        "tags" : [ "PortfolioAccounts" ],
        "summary" : "Retrieve portfolio accounts",
        "description" : "This operation retrieves a list of all of the portfolio accounts in the plan.",
        "operationId" : "PortfolioAccounts_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortfolioAccountsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortfolioAccountsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/PortfolioAccounts/{id}" : {
      "get" : {
        "tags" : [ "PortfolioAccounts" ],
        "summary" : "Retrieve a portfolio account",
        "description" : "This operation retrieves a portfolio account from the plan.",
        "operationId" : "PortfolioAccounts_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of portfolio account to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortfolioAccountModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortfolioAccountModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedAnnualSummary" : {
      "get" : {
        "tags" : [ "ProjectedAnnualSummary" ],
        "summary" : "Retrieve projected annual summaries",
        "description" : "This operation retrieves an object containing annual summary information \r\n              for each year of the projected plan.",
        "operationId" : "ProjectedAnnualSummary_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectedAnnualSummariesModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectedAnnualSummariesModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedAnnualSummary/{id}" : {
      "get" : {
        "tags" : [ "ProjectedAnnualSummary" ],
        "summary" : "Retrieve projected annual summary by id",
        "description" : "This operation retrieves an object containing annual summary information \r\n              for a single specified year of the projected plan.",
        "operationId" : "ProjectedAnnualSummary_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Index into the list of annual projections",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectedAnnualSummaryModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectedAnnualSummaryModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedCashFlow" : {
      "get" : {
        "tags" : [ "ProjectedCashFlow" ],
        "summary" : "Retrieve projected cash flow",
        "description" : "This operation retrieves an object containing cash flow information \r\n              for each year of the projected plan.",
        "operationId" : "ProjectedCashFlow_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CashFlowProjectionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CashFlowProjectionsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedCashFlow/{id}" : {
      "get" : {
        "tags" : [ "ProjectedCashFlow" ],
        "summary" : "Retrieve projected cash flow by id",
        "description" : "This operation retrieves an object containing cash flow information \r\n              for a single specified year of the projected plan.",
        "operationId" : "ProjectedCashFlow_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Index into the list of annual projections",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CashFlowProjectionModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CashFlowProjectionModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedGoals/AssetsFundingGoals" : {
      "get" : {
        "tags" : [ "ProjectedGoals" ],
        "summary" : "Retrieve assets funding goals over time",
        "description" : "This operation retrieves the assets funding each goal throughout the plan years",
        "operationId" : "ProjectedGoals_GetAssetsFundingGoalsByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetsFundingGoalModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetsFundingGoalModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedGoals/NeedsVsAbilities" : {
      "get" : {
        "tags" : [ "ProjectedGoals" ],
        "summary" : "Retrieve needs vs abilities data",
        "description" : "This operation retrieves a needs and abilities data for all goals throughout\r\n              the plan years.",
        "operationId" : "ProjectedGoals_GetNeedsVsAbilitiesByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NeedsVsAbilitiesModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NeedsVsAbilitiesModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedNetWorth" : {
      "get" : {
        "tags" : [ "ProjectedNetWorth" ],
        "summary" : "Retrieve projected net worth",
        "description" : "This operation retrieves an object containing net worth information \r\n              for each year of the projected plan. These are EOY numbers.",
        "operationId" : "ProjectedNetWorth_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetWorthProjectionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetWorthProjectionsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ProjectedNetWorth/{id}" : {
      "get" : {
        "tags" : [ "ProjectedNetWorth" ],
        "summary" : "Retrieve projected net worth by id",
        "description" : "This operation retrieves an object containing net worth information \r\n              for a single specified year of the projected plan. These are EOY numbers.",
        "operationId" : "ProjectedNetWorth_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Index into the list of annual projections",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetWorthProjectionModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetWorthProjectionModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/RestrictedStocks" : {
      "get" : {
        "tags" : [ "RestrictedStocks" ],
        "summary" : "Retrieve restricted stocks",
        "description" : "This operation retrieves a list of all of the restricted stocks in the plan.",
        "operationId" : "RestrictedStocks_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestrictedStocksModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestrictedStocksModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/RestrictedStocks/{id}" : {
      "get" : {
        "tags" : [ "RestrictedStocks" ],
        "summary" : "Retrieve a restricted stock",
        "description" : "This operation retrieves a restricted stock from the plan.",
        "operationId" : "RestrictedStocks_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of restricted stock to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestrictedStockModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RestrictedStockModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/ServiceInformation/Statistics" : {
      "get" : {
        "tags" : [ "ServiceInformation" ],
        "summary" : "This resource can be used to check the status of the service.",
        "operationId" : "ServiceInformation_Statistics",
        "responses" : {
          "200" : {
            "description" : "Provides additional information about the service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceInformation"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceInformation"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/api/StockOptions" : {
      "get" : {
        "tags" : [ "StockOptions" ],
        "summary" : "Retrieve stock options",
        "description" : "This operation retrieves a list of all of the stock options in the plan.",
        "operationId" : "StockOptions_GetByPlanid",
        "parameters" : [ {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockOptionsModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockOptionsModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/StockOptions/{id}" : {
      "get" : {
        "tags" : [ "StockOptions" ],
        "summary" : "Retrieve a stock option",
        "description" : "This operation retrieves a stock option from the plan.",
        "operationId" : "StockOptions_GetByIdPlanid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of stock option to retrieve",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "planId",
          "in" : "query",
          "description" : "Id of the plan to retrieve data from (e.g. 1001-11-3).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockOptionModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockOptionModel"
                }
              }
            }
          },
          "202" : {
            "description" : "Plan migration is processing"
          },
          "400" : {
            "description" : "Invalid request"
          },
          "401" : {
            "description" : "Unauthorized for plan data access"
          },
          "404" : {
            "description" : "Object not found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/auth/Login" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Start a session with the DomainProviders user store",
        "operationId" : "Auth_LoginByModel",
        "requestBody" : {
          "description" : "DomainProvider username and password",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginModel"
              }
            },
            "text/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginModel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "ApiSession",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicSessionInfoModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicSessionInfoModel"
                }
              }
            }
          },
          "401" : {
            "description" : "Invalid request parameters"
          },
          "500" : {
            "description" : "Invalid HTTP scheme"
          }
        },
        "deprecated" : false
      }
    },
    "/api/auth/LoginConfiguration" : {
      "get" : {
        "tags" : [ "Auth" ],
        "summary" : "Gets the login rules",
        "operationId" : "Auth_PasswordRequirements",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "deprecated" : false
      }
    },
    "/api/auth/Logout" : {
      "post" : {
        "tags" : [ "Auth" ],
        "operationId" : "Auth_Logout",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "deprecated" : false
      }
    },
    "/api/auth/ResumeSession" : {
      "post" : {
        "tags" : [ "Auth" ],
        "summary" : "Validate and extend the duration of a session",
        "operationId" : "Auth_ResumeSession",
        "responses" : {
          "200" : {
            "description" : "resume session",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicSessionInfoModel"
                }
              },
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicSessionInfoModel"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "deprecated" : false
      }
    }
  },
  "components" : {
    "schemas" : {
      "AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "duration" : {
            "type" : "number",
            "format" : "double"
          },
          "expensesCovered" : {
            "type" : "number",
            "format" : "double"
          },
          "lumpSumContribution" : {
            "type" : "number",
            "format" : "double"
          },
          "lumpSumDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "monthlySavingsContribution" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "lumpSumContribution" : {
            "type" : "number",
            "format" : "double"
          },
          "lumpSumDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "monthlySavingsContribution" : {
            "type" : "number",
            "format" : "double"
          },
          "targetDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalNeed" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "clientRetirementAge" : {
            "type" : "number",
            "format" : "double"
          },
          "coClientRetirementAge" : {
            "type" : "number",
            "format" : "double"
          },
          "discretionaryExpenseCoverage" : {
            "type" : "number",
            "format" : "double"
          },
          "fixedExpenseCoverage" : {
            "type" : "number",
            "format" : "double"
          },
          "lumpSumContribution" : {
            "type" : "number",
            "format" : "double"
          },
          "lumpSumDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "monthlySavingsContribution" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsCalcProjection" : {
        "type" : "object",
        "properties" : {
          "projectedAbilities" : {
            "type" : "number",
            "format" : "double"
          },
          "projectedNeed" : {
            "type" : "number",
            "format" : "double"
          },
          "projectedRetirementAssetValues" : {
            "type" : "number",
            "format" : "double"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections" : {
        "type" : "object",
        "properties" : {
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "percentCovered" : {
            "type" : "number",
            "format" : "double"
          },
          "projections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsCalcProjection"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "goalAdjustments" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
          },
          "projectedResults" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "goalAdjustments" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
          },
          "projectedResults" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsCoverageProjectionsResultModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "goalAdjustments" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsGoalAdjustmentsResultAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
          },
          "projectedResults" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsEducationGoalAdjustmentsModel" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "projectedResults" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfEducationGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfEducationGoalAdjustments"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalAdjustmentsModelAdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalSuccessRateModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "successRate" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalSuccessRateResultsModel" : {
        "type" : "object",
        "properties" : {
          "goalSuccessRateResults" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsGoalSuccessRateModel"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsMajorPurchaseGoalAdjustmentsModel" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfMajorPurchaseGoalAdjustments"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "projectedResults" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsRestrictionsEducationRestriction" : {
        "type" : "object",
        "properties" : {
          "canChangeDuration" : {
            "type" : "boolean"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsRestrictionsResultModel" : {
        "type" : "object",
        "properties" : {
          "educationRestrictions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsModelsRestrictionsEducationRestriction"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsRetirementGoalAdjustmentsModel" : {
        "type" : "object",
        "properties" : {
          "adjustedValues" : {
            "$ref" : "#/components/schemas/AdvicentDomainLogicGoalWhatIfRetirementGoalAdjustments"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "projectedResults" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalAdjustmentsCoverageProjections"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalAdjustmentsModelsWhatAreMyOptionsModel" : {
        "type" : "object",
        "properties" : {
          "additionalMonthlySavings" : {
            "type" : "number",
            "format" : "double"
          },
          "clientRetirementAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "clientRetirementAgeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "coClientRetirementAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "coClientRetirementAgeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "expenseCoverageDollars" : {
            "type" : "number",
            "format" : "double"
          },
          "expenseCoveragePercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "lumpSumSavings" : {
            "type" : "number",
            "format" : "double"
          },
          "purchaseDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalsModelsGoalFundingAccount" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "fundingAmount" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalsModelsGoalFundingListItem" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "fundingAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalsModelsGoalFundingAccount"
            }
          },
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalsModelsGoalFundingListModel" : {
        "type" : "object",
        "properties" : {
          "goals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalsModelsGoalFundingListItem"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "double"
          },
          "coveragePercentage" : {
            "type" : "number",
            "format" : "double"
          },
          "description" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "inflationRate" : {
            "type" : "number",
            "format" : "double"
          },
          "owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiModelsOwnerModel"
            }
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "AdvicentNaviPlanRestApiGoalsModelsLiveGoalBaseModel" : {
        "type" : "object",
        "properties" : {
          "clientDescription" : {
            "type" : "string"
          },
          "clientId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "goals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiGoalsModelsLiveGoalBase"
            }
          },
          "planDescription" : {
            "type" : "string"
          },
          "planLastUpdateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AdvicentNaviPlanRestApiModelsOwnerModel" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lastName" : {
            "type" : "string"
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsAccountBaseModel" : {
        "type" : "object",
        "properties" : {
          "accounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsAccountModel"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsAccountModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "holdings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsHoldingModel"
            }
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legacyId" : {
            "type" : "string"
          },
          "owner" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiModelsOwnerModel"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsHoldingModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "marketValue" : {
            "type" : "number",
            "format" : "double"
          },
          "valuationDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsLiabilityBaseModel" : {
        "type" : "object",
        "properties" : {
          "liabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsLiabilityModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legacyId" : {
            "type" : "string"
          },
          "outstandingPrincipal" : {
            "type" : "number",
            "format" : "double"
          },
          "outstandingPrincipalAsOfDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "owner" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiModelsOwnerModel"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetBaseModel" : {
        "type" : "object",
        "properties" : {
          "lifestyleAssets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetModel"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsLifestyleAssetModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "owner" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiModelsOwnerModel"
          },
          "purchaseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "purchaseValue" : {
            "type" : "number",
            "format" : "double"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32"
          },
          "valuationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "valuationValue" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsRealEstateBaseModel" : {
        "type" : "object",
        "properties" : {
          "realEstateAssets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiNetWorthModelsRealEstateModel" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legacyId" : {
            "type" : "string"
          },
          "marketValue" : {
            "type" : "number",
            "format" : "double"
          },
          "owner" : {
            "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiModelsOwnerModel"
          },
          "purchaseAmount" : {
            "type" : "number",
            "format" : "double"
          },
          "purchaseDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "valuationDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AdvicentNaviPlanRestApiProjectionsModelsNeedsVsAbilitiesProjectionsModel" : {
        "type" : "object",
        "properties" : {
          "goalId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "percentCovered" : {
            "type" : "number",
            "format" : "double"
          },
          "projections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiProjectionsModelsNeedsVsAbilitiesProjectionsYear"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiProjectionsModelsNeedsVsAbilitiesProjectionsYear" : {
        "type" : "object",
        "properties" : {
          "projectedAbilities" : {
            "type" : "number",
            "format" : "double"
          },
          "projectedNeed" : {
            "type" : "number",
            "format" : "double"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvicentNaviPlanRestApiProjectionsModelsNetWorthProjectionsModel" : {
        "type" : "object",
        "properties" : {
          "netWorthProjections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvicentNaviPlanRestApiProjectionsModelsNetWorthProjectionsYearModel"
            }
          }
        }
      },
      "AdvicentNaviPlanRestApiProjectionsModelsNetWorthProjectionsYearModel" : {
        "type" : "object",
        "properties" : {
          "endOfYearRetirementAssets" : {
            "type" : "number",
            "format" : "double"
          },
          "endOfYearTotalAssets" : {
            "type" : "number",
            "format" : "double"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AdvisorModel" : {
        "type" : "object",
        "properties" : {
          "addressLine1" : {
            "type" : "string"
          },
          "addressLine2" : {
            "type" : "string"
          },
          "advisorId" : {
            "type" : "string"
          },
          "advisorTitle" : {
            "type" : "string"
          },
          "businessPhone" : {
            "type" : "string"
          },
          "cellPhone" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "emailAddress" : {
            "type" : "string"
          },
          "faxPhone" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "homePhone" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "middleName" : {
            "type" : "string"
          },
          "officeName" : {
            "type" : "string"
          },
          "officeWebsite" : {
            "type" : "string"
          },
          "pagerNumber" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "stateProvince" : {
            "type" : "string"
          }
        }
      },
      "AdvisorsModel" : {
        "type" : "object",
        "properties" : {
          "advisors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdvisorModel"
            }
          }
        }
      },
      "AssetsFundingGoalModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "projections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProjectedGoalsSummary[AssetsFundingGoalSummary]"
            }
          }
        }
      },
      "AssetsFundingGoalSummary" : {
        "type" : "object",
        "properties" : {
          "contributions" : {
            "$ref" : "#/components/schemas/IAccumulationCategoryData"
          },
          "endOfYearAssets" : {
            "$ref" : "#/components/schemas/IAccumulationCategoryData"
          },
          "goalType" : {
            "type" : "string"
          },
          "growthAndReinvestments" : {
            "$ref" : "#/components/schemas/IAccumulationCategoryData"
          },
          "identifier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "netWithdrawals" : {
            "type" : "number",
            "format" : "double"
          },
          "withdrawals" : {
            "$ref" : "#/components/schemas/IAccumulationCategoryData"
          }
        }
      },
      "AssumptionsModel" : {
        "type" : "object",
        "properties" : {
          "assumptions" : {
            "$ref" : "#/components/schemas/IAssumptions"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "BusinessEntitiesModel" : {
        "type" : "object",
        "properties" : {
          "businessEntities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IBusinessEntity"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "BusinessEntityModel" : {
        "type" : "object",
        "properties" : {
          "businessEntity" : {
            "$ref" : "#/components/schemas/IBusinessEntity"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "CashFlowProjectionModel" : {
        "type" : "object",
        "properties" : {
          "cashFlow" : {
            "$ref" : "#/components/schemas/ProjectedCashFlowSummary"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "CashFlowProjectionsModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "projections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CashFlowProjectionModel"
            }
          }
        }
      },
      "CashFlowSummary" : {
        "type" : "object",
        "properties" : {
          "surplusDeficit" : {
            "type" : "number",
            "format" : "double"
          },
          "totalIncome" : {
            "type" : "number",
            "format" : "double"
          },
          "totalOutflowsWithTaxes" : {
            "type" : "number",
            "format" : "double"
          },
          "totalOutflowsWithoutTaxes" : {
            "type" : "number",
            "format" : "double"
          },
          "totalTaxes" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "ClientPlanSelectorParams" : {
        "required" : [ "planId" ],
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "description" : "Id of the client user for the plan. Required if current session user is an advisor. Ignored for client user sessions."
          },
          "planId" : {
            "type" : "string",
            "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
          }
        },
        "description" : "Parameters to select a plan from a client file"
      },
      "Currency" : {
        "type" : "object",
        "properties" : {
          "formattedDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedNoDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "raw" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          }
        }
      },
      "CurrencyWithDate" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/Date"
          },
          "formattedDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedNoDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "raw" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          }
        }
      },
      "CurrencyWithGrowth" : {
        "type" : "object",
        "properties" : {
          "formattedDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedNoDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "growth" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          },
          "raw" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          }
        }
      },
      "Date" : {
        "type" : "object",
        "properties" : {
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "formatted" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedMMMMddyyyy" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedMMMdd" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedMMMddyyyy" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedMMMyyyy" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedNA" : {
            "type" : "string",
            "readOnly" : true
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "toDateTime" : {
            "type" : "string",
            "format" : "date-time",
            "readOnly" : true
          },
          "urlEncoded" : {
            "type" : "string",
            "readOnly" : true
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DefinedBenefitPensionModel" : {
        "type" : "object",
        "properties" : {
          "definedBenefitPension" : {
            "$ref" : "#/components/schemas/IDefinedBenefitPension"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "DefinedBenefitPensionsModel" : {
        "type" : "object",
        "properties" : {
          "definedBenefitPensions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IDefinedBenefitPension"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "DescriptiveBoolean" : {
        "type" : "object",
        "properties" : {
          "rawValue" : {
            "type" : "boolean"
          },
          "valueAsYesNo" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "FamilyModel" : {
        "type" : "object",
        "properties" : {
          "family" : {
            "$ref" : "#/components/schemas/IFamily"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "FormattedDateRange" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "FormattedLifestyleType" : {
        "type" : "object",
        "properties" : {
          "formatted" : {
            "type" : "string",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Undefined", "PersonalUse", "ListedPersonal", "PrimaryResidence", "SecondaryResidence", "BusinessInterest", "Automobile" ]
          }
        }
      },
      "FormattedMaritalOrTaxFilingStatus" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Undefined", "Single", "HeadOfHousehold", "MarriedFilingJointly", "MarriedFilingSeparately", "SingleParent", "Married", "CommonLaw", "Partner", "Divorced", "Widowed", "Separated" ]
          }
        }
      },
      "GoalCoveragePercent" : {
        "type" : "object",
        "properties" : {
          "formattedRaw" : {
            "type" : "number",
            "format" : "double"
          },
          "raw" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "GoalId" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "GoalModel" : {
        "type" : "object",
        "properties" : {
          "goal" : {
            "$ref" : "#/components/schemas/IGoal"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "GoalNeedsVsAbilitiesSummary" : {
        "type" : "object",
        "properties" : {
          "abilities" : {
            "type" : "number",
            "format" : "double"
          },
          "fixedNeeds" : {
            "type" : "number",
            "format" : "double"
          },
          "fixedNeedsWithTaxes" : {
            "type" : "number",
            "format" : "double"
          },
          "goalType" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalNeeds" : {
            "type" : "number",
            "format" : "double"
          },
          "totalNeedsWithTaxes" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "GoalsModel" : {
        "type" : "object",
        "properties" : {
          "goals" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IGoal"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "GrowthRateValues" : {
        "type" : "object",
        "properties" : {
          "additionalGrowthPercent" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "isInflationAdjusted" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "totalGrowth" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "HoldingCompaniesModel" : {
        "type" : "object",
        "properties" : {
          "holdingCompanies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IHoldingCompany"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "HoldingCompanyModel" : {
        "type" : "object",
        "properties" : {
          "holdingCompany" : {
            "$ref" : "#/components/schemas/IHoldingCompany"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "HouseholdExternalModel" : {
        "type" : "object",
        "properties" : {
          "accessiblePlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublishedPlanModel"
            }
          },
          "clientDescription" : {
            "type" : "string"
          },
          "householdId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "legacyClientId" : {
            "type" : "string"
          }
        }
      },
      "HouseholdModel" : {
        "type" : "object",
        "properties" : {
          "accessiblePlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublishedPlanModel"
            }
          },
          "clientDescription" : {
            "type" : "string"
          },
          "householdId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "HouseholdsExternalDataModel" : {
        "type" : "object",
        "properties" : {
          "externalHouseholdsData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HouseholdExternalModel"
            }
          }
        }
      },
      "HouseholdsModel" : {
        "type" : "object",
        "properties" : {
          "households" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HouseholdModel"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "IAccumulationCategoryData" : {
        "type" : "object",
        "properties" : {
          "allAssets" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "lockedIn" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "nonQualified" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "qualified" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "roth" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "tfsa" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IActivityData" : {
        "type" : "object",
        "properties" : {
          "amountWithGrowth" : {
            "$ref" : "#/components/schemas/CurrencyWithGrowth"
          },
          "applicableDateRange" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "directTo" : {
            "type" : "string",
            "readOnly" : true
          },
          "frequency" : {
            "$ref" : "#/components/schemas/IFormattedFrequency"
          }
        }
      },
      "IAddress" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string",
            "readOnly" : true
          },
          "combinedCityStateProvince" : {
            "type" : "string",
            "readOnly" : true
          },
          "country" : {
            "type" : "string",
            "readOnly" : true
          },
          "stateOrProvince" : {
            "type" : "string",
            "readOnly" : true
          },
          "stateOrProvinceAbbrev" : {
            "type" : "string",
            "readOnly" : true
          },
          "street1" : {
            "type" : "string",
            "readOnly" : true
          },
          "street2" : {
            "type" : "string",
            "readOnly" : true
          },
          "zipOrPostalCode" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IAssetCategories" : {
        "type" : "object",
        "properties" : {
          "allAssets" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IValueDescriptionPair[Currency]"
            }
          },
          "businessAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "lifestyleAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "nonQualifiedAnnuities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "nonQualifiedAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "privateCorporations" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "qualifiedAnnuities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "qualifiedAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "realEstate" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "totalAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          }
        }
      },
      "IAssetClass" : {
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "maxConstraint" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "minConstraint" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "parentSuperAssetClassIndex" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "weight" : {
            "$ref" : "#/components/schemas/IAssetClassWeight"
          }
        }
      },
      "IAssetClassWeight" : {
        "type" : "object",
        "properties" : {
          "dollarValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "percentage" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "IAssetId" : {
        "type" : "object",
        "properties" : {
          "rawId" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          }
        }
      },
      "IAssetMix" : {
        "type" : "object",
        "properties" : {
          "assetClassDisplayLevel" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "assetClassInfoForDisplayLevel" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "classes" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IAssetClass"
            }
          },
          "superAssetClasses" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IAssetClass"
            }
          }
        }
      },
      "IAssetValuation" : {
        "type" : "object",
        "properties" : {
          "costBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "marketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "valuationDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "IAssets" : {
        "type" : "object",
        "properties" : {
          "allAssets" : {
            "$ref" : "#/components/schemas/IAssetCategories"
          },
          "clientAssets" : {
            "$ref" : "#/components/schemas/IAssetCategories"
          },
          "coClientAssets" : {
            "$ref" : "#/components/schemas/IAssetCategories"
          },
          "communityPropertyAssets" : {
            "$ref" : "#/components/schemas/IAssetCategories"
          },
          "jointAssets" : {
            "$ref" : "#/components/schemas/IAssetCategories"
          }
        }
      },
      "IAssumptions" : {
        "type" : "object",
        "properties" : {
          "anyHeadAlreadyRetired" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "bothRetired" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "bucketing" : {
            "$ref" : "#/components/schemas/IBucketing"
          },
          "client" : {
            "$ref" : "#/components/schemas/IHeadAssumptions"
          },
          "coClient" : {
            "$ref" : "#/components/schemas/IHeadAssumptions"
          },
          "firstToDieDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "firstToDieMember" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Client", "CoClient" ]
          },
          "firstToRetireDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "inflationRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "lastToDieDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "lastToDieMember" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Client", "CoClient" ]
          },
          "lastToRetireDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "retirementYearAdjustedIfAlreadyRetired" : {
            "$ref" : "#/components/schemas/Year"
          },
          "splitSurplusSavingsStrategiesEnabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "taxMethod" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Average", "Simplified", "Detailed" ]
          }
        }
      },
      "IBucketing" : {
        "type" : "object",
        "properties" : {
          "distributionBucketTargetBalance" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "indexedAt" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "returnRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "standardDeviation" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "IBusinessEntity" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IBusinessEntityActivity"
            }
          },
          "assetId" : {
            "$ref" : "#/components/schemas/IAssetId"
          },
          "businessType" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Undefined", "LLC", "Partnership", "SCorporation", "CCorporation" ]
          },
          "businessTypeFormatted" : {
            "type" : "string",
            "readOnly" : true
          },
          "currentAnnualDistributions" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "currentAnnualDividends" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "currentAnnualGrowthRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "currentAnnualNetIncome" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "entityName" : {
            "type" : "string",
            "readOnly" : true
          },
          "liquidationEvent" : {
            "$ref" : "#/components/schemas/ILiquidationEvent"
          },
          "marketValuationDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "marketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true
          },
          "purchaseAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "purchaseDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "standardDeviation" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "IBusinessEntityActivity" : {
        "type" : "object",
        "properties" : {
          "applicableDateRange" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "distributions" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "expense" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "frequency" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Frequency]"
          },
          "income" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "indexRate" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          }
        }
      },
      "IBusinessPhoneNumbers" : {
        "type" : "object",
        "properties" : {
          "business" : {
            "type" : "string",
            "readOnly" : true
          },
          "fax" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "ICanadianGovernmentPensions" : {
        "type" : "object",
        "properties" : {
          "canadianOrQuebecPensionPlan" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "oldAgeSecurity" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "ICashFlow" : {
        "type" : "object",
        "properties" : {
          "incomes" : {
            "$ref" : "#/components/schemas/ICashFlowIncomes"
          },
          "outflows" : {
            "$ref" : "#/components/schemas/ICashFlowOutflows"
          },
          "surplusDeficit" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "taxes" : {
            "$ref" : "#/components/schemas/ITaxes"
          }
        }
      },
      "ICashFlowByOwner" : {
        "type" : "object",
        "properties" : {
          "clientCashFlow" : {
            "$ref" : "#/components/schemas/ICashFlow"
          },
          "coClientCashFlow" : {
            "$ref" : "#/components/schemas/ICashFlow"
          },
          "totalCashFlow" : {
            "$ref" : "#/components/schemas/ICashFlow"
          }
        }
      },
      "ICashFlowCategory" : {
        "type" : "object",
        "properties" : {
          "isItemizedEnabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "itemized" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ICashFlowItem"
            }
          },
          "total" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "ICashFlowIncomes" : {
        "type" : "object",
        "properties" : {
          "annuityPayments" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "disabilityIncomes" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "earnedIncome" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "insuranceBenefits" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "investmentIncomes" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "lifestyleAssetLiquidations" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "lockedInLiquidations" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "longTermCareBenefits" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "miscellaneousIncomes" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "nonQualifiedLiquidations" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "pension" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "privateCorporations" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "qualifiedLiquidations" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "qualifiedLiquidationsNonRequiredMinimumDistributions" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "requiredMinimumDistributions" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "retirementIncome" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "rothLiquidations" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "socialSecurity" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "tfsaLiquidations" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "total" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "withdrawals" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "ICashFlowItem" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "descriptionWithOwner" : {
            "type" : "string",
            "readOnly" : true
          },
          "isCPP" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isOAS" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "sourceId" : {
            "type" : "string",
            "readOnly" : true
          },
          "typeDescription" : {
            "type" : "string",
            "readOnly" : true
          },
          "value" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "ICashFlowOutflows" : {
        "type" : "object",
        "properties" : {
          "contributions" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "educationExpenses" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "employerExpenses" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "employmentBusinessExpenses" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "investmentExpenses" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "lifestyleExpenses" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "lifestyleExpensesDiscretionary" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "lifestyleExpensesFixed" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "lockedInContributions" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "medicalExpenses" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "miscellaneousExpenses" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "miscellaneousExpensesDiscretionary" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "miscellaneousExpensesFixed" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "nonQualifiedContributions" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "nonQualifiedReinvestments" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "privateCorporationOutflows" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "qualifiedContributions" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "rothContributions" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "surplusOutflows" : {
            "$ref" : "#/components/schemas/ICashFlowCategory"
          },
          "surplusSavings" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "tfsaContributions" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "totalNeeds" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "totalWithTaxes" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "totalWithoutTaxes" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "ICommonShareClassDetails" : {
        "type" : "object",
        "properties" : {
          "shareClassStructure" : {
            "$ref" : "#/components/schemas/IShareClassStructure"
          }
        }
      },
      "IContributions" : {
        "type" : "object",
        "properties" : {
          "interCompanyDividendsReceived" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IInterCompanyDividendReceived"
            }
          },
          "sharePurchases" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ISharePurchase"
            }
          },
          "shareholderLoans" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IShareholderLoan"
            }
          }
        }
      },
      "ICorporationRealEstateAsset" : {
        "type" : "object",
        "properties" : {
          "currentYearNetRentalIncome" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isActiveBusinessIncome" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "marketValueAsOf" : {
            "$ref" : "#/components/schemas/CurrencyWithDate"
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "preTaxGrowthRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "purchaseAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "purchaseDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "standardDeviation" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "startOfYearCostBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "startOfYearMarketValue" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IDebtModStrategies" : {
        "type" : "object",
        "properties" : {
          "lumpSumDebtModStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ILumpSumDebtModStrategy"
            }
          },
          "periodicDebtModStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IPeriodicDebtModStrategy"
            }
          }
        }
      },
      "IDefinedBenefitPension" : {
        "type" : "object",
        "properties" : {
          "benefit" : {
            "$ref" : "#/components/schemas/IOptionalField[Benefit[CurrencyWithGrowth]]"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "isBenefitFormula" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isBenefitIntegratedWithCppQpp" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isFormulaIntegratedWithCppQpp" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Client", "CoClient" ]
          },
          "pensionType" : {
            "type" : "string",
            "readOnly" : true
          },
          "percentPayableToSurvivor" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "projectedYearsOfService" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "startDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "IDependent" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/IAddress"
          },
          "ageAsOfPlanDate" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "birthdate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "citizenship" : {
            "type" : "string",
            "readOnly" : true
          },
          "dependentOf" : {
            "type" : "string",
            "readOnly" : true
          },
          "dependentOfId" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "email" : {
            "type" : "string",
            "readOnly" : true
          },
          "employer" : {
            "$ref" : "#/components/schemas/IEmployer"
          },
          "gender" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Gender]"
          },
          "name" : {
            "$ref" : "#/components/schemas/IPersonName"
          },
          "ownershipId" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "phone" : {
            "$ref" : "#/components/schemas/IPhoneNumbers"
          },
          "relationship" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IEmployer" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/IAddress"
          },
          "name" : {
            "type" : "string",
            "readOnly" : true
          },
          "phone" : {
            "$ref" : "#/components/schemas/IBusinessPhoneNumbers"
          }
        }
      },
      "IEstateDetails" : {
        "type" : "object",
        "properties" : {
          "enableFiftyPercentSolution" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "estateFreeze" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "estateFreezeDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "shareOptionsAtFirstDeath" : {
            "type" : "string",
            "readOnly" : true
          },
          "shareOptionsAtSecondDeathAndDeathInTheSameYear" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IFamily" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/IAddress"
          },
          "client" : {
            "$ref" : "#/components/schemas/IFamilyMember"
          },
          "coClient" : {
            "$ref" : "#/components/schemas/IFamilyMember"
          },
          "dependents" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IDependent"
            }
          },
          "headFullNames" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IFamilyMember" : {
        "type" : "object",
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/IAddress"
          },
          "ageAsOfPlanDate" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "birthdate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "citizenship" : {
            "type" : "string",
            "readOnly" : true
          },
          "email" : {
            "type" : "string",
            "readOnly" : true
          },
          "employer" : {
            "$ref" : "#/components/schemas/IEmployer"
          },
          "gender" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Gender]"
          },
          "name" : {
            "$ref" : "#/components/schemas/IPersonName"
          },
          "ownershipId" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "phone" : {
            "$ref" : "#/components/schemas/IPhoneNumbers"
          }
        }
      },
      "IFormattedFrequency" : {
        "type" : "object",
        "properties" : {
          "everyNPeriods" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "formatted" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedAbbrv" : {
            "type" : "string",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Annual", "SemiAnnual", "Quarterly", "Bimonthly", "Monthly", "TwiceMonthly", "BiWeekly", "Weekly", "Daily", "Continuously", "Onetime", "EveryXYears" ]
          }
        }
      },
      "IGeneralSetups" : {
        "type" : "object",
        "properties" : {
          "appliedBusinessLimit" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "goodWillFutureSalesMarketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "percentageOfLimitToUse" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "previousYearAdjustedAggregateInvestmentIncome" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IGoal" : {
        "type" : "object",
        "properties" : {
          "assetsRemainingAfterFundingGoal" : {
            "$ref" : "#/components/schemas/IOptionalField[Currency]"
          },
          "coverage" : {
            "$ref" : "#/components/schemas/IOptionalField[GoalCoveragePercent]"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "endDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "identifier" : {
            "$ref" : "#/components/schemas/GoalId"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "type" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Retirement", "SurvivorIncome", "CriticalIllness", "LongTermCareInsurance", "Cashflow", "DisabilityIncome", "Education", "MajorPurchase", "EmergencyFund", "Undefined", "NotSupported" ]
          },
          "yearAssetsDepleted" : {
            "$ref" : "#/components/schemas/IOptionalField[Year]"
          }
        }
      },
      "IGovernmentPensions" : {
        "type" : "object",
        "properties" : {
          "estimatedCanadianGovernmentPensions" : {
            "$ref" : "#/components/schemas/ICanadianGovernmentPensions"
          },
          "estimatedSocialSecurity" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IHeadAssumptions" : {
        "type" : "object",
        "properties" : {
          "alreadyRetired" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "deceasedAge" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "deceasedDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "estateIncomeTaxes" : {
            "$ref" : "#/components/schemas/IIncomeTaxes"
          },
          "governmentPensions" : {
            "$ref" : "#/components/schemas/IGovernmentPensions"
          },
          "maritalOrTaxFilingStatus" : {
            "$ref" : "#/components/schemas/FormattedMaritalOrTaxFilingStatus"
          },
          "preRetirementIncomeTaxes" : {
            "$ref" : "#/components/schemas/IIncomeTaxes"
          },
          "retirementAge" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "retirementDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "retirementIncomeTaxes" : {
            "$ref" : "#/components/schemas/IIncomeTaxes"
          }
        }
      },
      "IHistoricalData" : {
        "type" : "object",
        "properties" : {
          "generalSetups" : {
            "$ref" : "#/components/schemas/IGeneralSetups"
          },
          "notionalAccounts" : {
            "$ref" : "#/components/schemas/INotionalAccounts"
          },
          "outstandingShareholderLoans" : {
            "$ref" : "#/components/schemas/IOutstandingShareholderLoans"
          }
        }
      },
      "IHolding" : {
        "type" : "object",
        "properties" : {
          "assetMix" : {
            "$ref" : "#/components/schemas/IAssetMix"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "holdAmount" : {
            "$ref" : "#/components/schemas/PercentOr[Currency]"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isClassified" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "preRetirementReturnRates" : {
            "$ref" : "#/components/schemas/IPeriodRateOfReturnDetails"
          },
          "retirementReturnRates" : {
            "$ref" : "#/components/schemas/IPeriodRateOfReturnDetails"
          },
          "symbol" : {
            "type" : "string",
            "readOnly" : true
          },
          "valuation" : {
            "$ref" : "#/components/schemas/IAssetValuation"
          }
        }
      },
      "IHoldingCompany" : {
        "type" : "object",
        "properties" : {
          "annualDividendYield" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "ccpc" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "commonSharesOutstanding" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "contributions" : {
            "$ref" : "#/components/schemas/IContributions"
          },
          "corporateYearEnd" : {
            "$ref" : "#/components/schemas/Date"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "dividendType" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Taxable", "NonTaxable" ]
          },
          "dividendTypeFormatted" : {
            "type" : "string",
            "readOnly" : true
          },
          "estateDetails" : {
            "$ref" : "#/components/schemas/IEstateDetails"
          },
          "historicalData" : {
            "$ref" : "#/components/schemas/IHistoricalData"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "investmentAccounts" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IInvestmentAccount"
            }
          },
          "liabilities" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ILiability"
            }
          },
          "lifeInsurancePolicies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ILifeInsurancePolicy"
            }
          },
          "marketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "numPreferredShareClasses" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "otherAssets" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IRealEstateAsset"
            }
          },
          "ownershipAsOfDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "ownershipDetails" : {
            "$ref" : "#/components/schemas/IOwnershipDetails"
          },
          "preferredSharesOutstanding" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "provinceOfIncorporation" : {
            "type" : "string",
            "readOnly" : true
          },
          "provinceOfTaxation" : {
            "type" : "string",
            "readOnly" : true
          },
          "realEstateAssets" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ICorporationRealEstateAsset"
            }
          },
          "valueOfAllCommonShares" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "valueOfAllPreferredShares" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "withdrawals" : {
            "$ref" : "#/components/schemas/IWithdrawals"
          }
        }
      },
      "IIncomeTaxes" : {
        "type" : "object",
        "properties" : {
          "averageTaxRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "combinedStateAndAverageTaxRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "combinedStateAndLongTermCapitalGainsTaxRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "combinedStateAndMarginalTaxRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "longTermCapitalGainsTaxRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "marginalTaxRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "stateTaxRate" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "IInsurancePremium" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/CurrencyWithGrowth"
          },
          "annualAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "ceaseDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "formattedPayingMember" : {
            "type" : "string",
            "readOnly" : true
          },
          "frequency" : {
            "$ref" : "#/components/schemas/IFormattedFrequency"
          },
          "payingMember" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "premiumRefundAmount" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "IInterCompanyDividendReceived" : {
        "type" : "object",
        "properties" : {
          "activityData" : {
            "$ref" : "#/components/schemas/IActivityData"
          },
          "dividendType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[InterCompanyDividendType]"
          },
          "generalRateOfIncomePoolAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "receivedFrom" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IInvestmentAccount" : {
        "type" : "object",
        "properties" : {
          "annualFee" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "costBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "excludeInAA" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "holdings" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IHolding"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "marketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "rateOfReturn" : {
            "$ref" : "#/components/schemas/IRateOfReturnDetails"
          },
          "type" : {
            "type" : "string",
            "readOnly" : true
          },
          "valuationDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "IInvestmentAccountOwnershipData" : {
        "type" : "object",
        "properties" : {
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "ownersName" : {
            "type" : "string",
            "readOnly" : true
          },
          "ownershipPercent" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "ILiabilities" : {
        "type" : "object",
        "properties" : {
          "clientLiabilities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "coClientLiabilities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "communityPropertyLiabilities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "jointLiabilities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "totalLiabilities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          }
        }
      },
      "ILiability" : {
        "type" : "object",
        "properties" : {
          "annualPaymentAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "balanceAsOf" : {
            "$ref" : "#/components/schemas/CurrencyWithDate"
          },
          "balanceAsOfPlanDate" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "debtModStrategies" : {
            "$ref" : "#/components/schemas/IDebtModStrategies"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "insuredForDisability" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "insuredForLife" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "interestRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "isInterestRateVariable" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "isPaymentVariable" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "linkedAssetId" : {
            "type" : "string",
            "readOnly" : true
          },
          "linkedAssetName" : {
            "type" : "string",
            "readOnly" : true
          },
          "loanDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "originalBalance" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "paidOffByRetirement" : {
            "$ref" : "#/components/schemas/IOptionalField[DescriptiveBoolean]"
          },
          "payOffDate" : {
            "$ref" : "#/components/schemas/IOptionalField[Date]"
          },
          "payOffOptionType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[PayOffOptionsType]"
          },
          "paymentAmount" : {
            "$ref" : "#/components/schemas/IOptionalField[Currency]"
          },
          "paymentFrequency" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Frequency]"
          },
          "paymentType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[PaymentType]"
          },
          "type" : {
            "$ref" : "#/components/schemas/FormattedEnumType[LiabilityType]"
          }
        }
      },
      "ILifeInsurancePolicy" : {
        "type" : "object",
        "properties" : {
          "beneficiaryName" : {
            "type" : "string",
            "readOnly" : true
          },
          "benefitPeriod" : {
            "$ref" : "#/components/schemas/TimePeriod"
          },
          "cashSurrenderValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "coverageCeaseDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "dailyBenefitValue" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "effectiveDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "formattedBenefitValue" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedInsuredType" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedPolicyType" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "insured" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Client", "CoClient", "FirstToDie", "SecondToDie", "Other" ]
          },
          "isCSVPayableWithDeathBenefit" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "monthlyBenefitValue" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          },
          "ownerName" : {
            "type" : "string",
            "readOnly" : true
          },
          "policyType" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "WholeLife", "UniversalLife", "Term1Life", "Term5Life", "Term10Life", "Term20Life", "Term100Life", "VariableLife", "VariableUniversalLife", "GroupLongTermDisability", "GroupShortTermDisability", "IndividualDisability", "LongTermCare", "CriticalIllness", "MedicalCoveragePlan", "CashToInsuredCoverage" ]
          },
          "premiumData" : {
            "$ref" : "#/components/schemas/IInsurancePremium"
          },
          "premiumsWaivedAtDisability" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "rawBenefitValue" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          },
          "waitingPeriod" : {
            "$ref" : "#/components/schemas/TimePeriod"
          }
        }
      },
      "ILifestyleAsset" : {
        "type" : "object",
        "properties" : {
          "afterTaxProceedsAccountName" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "futureValueProjectedGrossSaleValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isMajorPurchaseGoal" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "marketValueAsOf" : {
            "$ref" : "#/components/schemas/CurrencyWithDate"
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "preTaxGrowthRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "presentValueProjectedGrossSaleValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "projectedSaleDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "purchaseAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "purchaseDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "sellingCostPercent" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "standardDeviation" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "type" : {
            "$ref" : "#/components/schemas/FormattedLifestyleType"
          }
        }
      },
      "ILiquidationEvent" : {
        "type" : "object",
        "properties" : {
          "firstSaleDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "lastSaleDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "liquidationType" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "SellAtPlanEnd", "SellAllOnSpecificDate", "SellInInstallments" ]
          },
          "liquidationTypeDescription" : {
            "type" : "string",
            "readOnly" : true
          },
          "saleDatesDescription" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "ILoanRepaymentToShareholder" : {
        "type" : "object",
        "properties" : {
          "activityData" : {
            "$ref" : "#/components/schemas/IActivityData"
          },
          "shareholder" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Undefined", "Head1", "Head2", "Other" ]
          }
        }
      },
      "ILumpSumDebtModStrategy" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "debtModificationDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "indexRate" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          }
        }
      },
      "ILumpSumRedemptionStrategy" : {
        "type" : "object",
        "properties" : {
          "amountOrPercentOfValue" : {
            "$ref" : "#/components/schemas/PercentOr[Currency]"
          },
          "indexRate" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          },
          "redemptionDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "ILumpSumSavingsStrategy" : {
        "type" : "object",
        "properties" : {
          "amountOrPercentOfSalary" : {
            "$ref" : "#/components/schemas/PercentOr[Currency]"
          },
          "formattedSavingsTypeWithDash" : {
            "type" : "string",
            "readOnly" : true
          },
          "indexRate" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          },
          "savingsDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "savingsType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[SavingsStrategyType]"
          }
        }
      },
      "IManualDividendDistribution" : {
        "type" : "object",
        "properties" : {
          "activityData" : {
            "$ref" : "#/components/schemas/IActivityData"
          },
          "directCoClientAfterTaxProceedsTo" : {
            "type" : "string",
            "readOnly" : true
          },
          "dividendType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[DistributionDividendType]"
          },
          "shareId" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "shareType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[PrivateCorporationShareType]"
          }
        }
      },
      "INetWorth" : {
        "type" : "object",
        "properties" : {
          "netWorthAtPlanDate" : {
            "$ref" : "#/components/schemas/INetWorthAtDate"
          },
          "netWorthAtPlanEnd" : {
            "$ref" : "#/components/schemas/IOptionalField[INetWorthAtDate]"
          },
          "netWorthAtRetirement" : {
            "$ref" : "#/components/schemas/IOptionalField[INetWorthAtDate]"
          }
        }
      },
      "INetWorthAtDate" : {
        "type" : "object",
        "properties" : {
          "assets" : {
            "$ref" : "#/components/schemas/IAssets"
          },
          "assetsFundingRetirement" : {
            "$ref" : "#/components/schemas/IRetirementAssets"
          },
          "clientNetWorth" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "coClientNetWorth" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "communityPropertyNetWorth" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "jointNetWorth" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "liabilities" : {
            "$ref" : "#/components/schemas/ILiabilities"
          },
          "totalNetWorth" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "INetWorthCategory" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "itemized" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/INetWorthItem"
            }
          },
          "total" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "INetWorthItem" : {
        "type" : "object",
        "properties" : {
          "accountType" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "value" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "INotionalAccounts" : {
        "type" : "object",
        "properties" : {
          "capitalDividendAccountEndOfYearValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "capitalLossesCarryoverEndOfYearValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "dividendRefund" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "generalRateOfIncomePoolEndOfYearValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "nonEligibleRefundableDividendTaxOnHandEndOfYearValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "nrdtohDividendRefund" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "refundableDividendTaxOnHandEndOfYearValue" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IOutstandingShareholderLoans" : {
        "type" : "object",
        "properties" : {
          "clientAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "coClientAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "otherAmount" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IOwnershipData" : {
        "type" : "object",
        "properties" : {
          "marketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "ownersName" : {
            "type" : "string",
            "readOnly" : true
          },
          "ownershipPercent" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "shares" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          }
        }
      },
      "IOwnershipDetails" : {
        "type" : "object",
        "properties" : {
          "common" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IOwnershipData"
            }
          },
          "commonSharesDetails" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ICommonShareClassDetails"
            }
          },
          "preferred" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IOwnershipData"
            }
          },
          "preferredSharesDetails" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IPreferredShareClassDetails"
            }
          },
          "shareholderPercentOwnership" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IInvestmentAccountOwnershipData"
            }
          }
        }
      },
      "IPeriodRateOfReturnDetails" : {
        "type" : "object",
        "properties" : {
          "breakdown" : {
            "$ref" : "#/components/schemas/IRateOfReturnBreakdown"
          },
          "standardDeviation" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "total" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "IPeriodicDebtModStrategy" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "applicableDateRange" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "debtModificationFrequency" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Frequency]"
          },
          "indexRate" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          }
        }
      },
      "IPeriodicRedemptionStrategy" : {
        "type" : "object",
        "properties" : {
          "amountOrPercentOfValue" : {
            "$ref" : "#/components/schemas/PercentOr[Currency]"
          },
          "applicableDateRange" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "indexRate" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          },
          "redemptionFrequency" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Frequency]"
          }
        }
      },
      "IPeriodicSavingsStrategy" : {
        "type" : "object",
        "properties" : {
          "amountOrPercentOfSalary" : {
            "$ref" : "#/components/schemas/PercentOr[Currency]"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "formattedFrequencyAbbrv" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedSavingsTypeWithDash" : {
            "type" : "string",
            "readOnly" : true
          },
          "indexRate" : {
            "$ref" : "#/components/schemas/GrowthRateValues"
          },
          "isMaxContribution" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "savingsFrequency" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Frequency]"
          },
          "savingsType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[SavingsStrategyType]"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "IPersonName" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "readOnly" : true
          },
          "formal" : {
            "type" : "string",
            "readOnly" : true
          },
          "full" : {
            "type" : "string",
            "readOnly" : true
          },
          "lastName" : {
            "type" : "string",
            "readOnly" : true
          },
          "middle" : {
            "type" : "string",
            "readOnly" : true
          },
          "title" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IPhoneNumbers" : {
        "type" : "object",
        "properties" : {
          "additionalNumbers" : {
            "$ref" : "#/components/schemas/IBusinessPhoneNumbers"
          },
          "business" : {
            "type" : "string",
            "readOnly" : true
          },
          "cell" : {
            "type" : "string",
            "readOnly" : true
          },
          "fax" : {
            "type" : "string",
            "readOnly" : true
          },
          "home" : {
            "type" : "string",
            "readOnly" : true
          },
          "pager" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IPlanModules" : {
        "type" : "object",
        "properties" : {
          "isCriticalIllnessModuleEnabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isDisabilityIncomeModuleEnabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isEstatePlanningModuleEabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isLongTermCareModuleEnabled" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "isSurvivorIncomeModuleEnabled" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "IPortfolioAccount" : {
        "type" : "object",
        "properties" : {
          "accountReturnRatesNoLongerCorrelateToAssumedAssetMixDueToOverrideInGsm" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "annualFee" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "applicableRangeRetirementLiquidatedAssets" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "costBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "descriptionWithOwner" : {
            "type" : "string",
            "readOnly" : true
          },
          "excludeInAA" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "holdings" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IHolding"
            }
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "isSystemGenerated" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "marketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "portfolioAssets" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IPortfolioAsset"
            }
          },
          "rateOfReturn" : {
            "$ref" : "#/components/schemas/IRateOfReturnDetails"
          },
          "savingsStrategies" : {
            "$ref" : "#/components/schemas/ISavingsStrategies"
          },
          "seppRedemptionStrategy" : {
            "$ref" : "#/components/schemas/ISEPPRedemptionStrategy"
          },
          "type" : {
            "type" : "string",
            "readOnly" : true
          },
          "valuationDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "IPortfolioAsset" : {
        "type" : "object",
        "properties" : {
          "applicableRangeRetirementLiquidatedAssets" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "costBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "goalFundingDescription" : {
            "type" : "string",
            "readOnly" : true
          },
          "goalFundingGoalId" : {
            "$ref" : "#/components/schemas/GoalId"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "incomeReinvested" : {
            "$ref" : "#/components/schemas/IReturnIncomeReinvestedDetails"
          },
          "isSystemGenerated" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "marketValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "parentAccountId" : {
            "type" : "string",
            "readOnly" : true
          },
          "rateOfReturn" : {
            "$ref" : "#/components/schemas/IRateOfReturnDetails"
          },
          "redemptionStrategies" : {
            "$ref" : "#/components/schemas/IRedemptionStrategies"
          }
        }
      },
      "IPreferredShareClassDetails" : {
        "type" : "object",
        "properties" : {
          "annualDividendYield" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "dividendType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[DistributionDividendType]"
          },
          "redemptionValuePerShare" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "shareClassStructure" : {
            "$ref" : "#/components/schemas/IShareClassStructure"
          }
        }
      },
      "IRateOfReturnBreakdown" : {
        "type" : "object",
        "properties" : {
          "capitalGain" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "deferredGrowth" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "dividend" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "interest" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "taxFree" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "IRateOfReturnDetails" : {
        "type" : "object",
        "properties" : {
          "preRetirement" : {
            "$ref" : "#/components/schemas/IPeriodRateOfReturnDetails"
          },
          "retirement" : {
            "$ref" : "#/components/schemas/IPeriodRateOfReturnDetails"
          }
        }
      },
      "IRealEstateAsset" : {
        "type" : "object",
        "properties" : {
          "currentYearNetRentalIncome" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "marketValueAsOf" : {
            "$ref" : "#/components/schemas/CurrencyWithDate"
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "preTaxGrowthRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "purchaseAmount" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "purchaseDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "standardDeviation" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "startOfYearCostBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "startOfYearMarketValue" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IRedemptionStrategies" : {
        "type" : "object",
        "properties" : {
          "lumpSumRedemptionStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ILumpSumRedemptionStrategy"
            }
          },
          "periodicRedemptionStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IPeriodicRedemptionStrategy"
            }
          }
        }
      },
      "IRestrictedStock" : {
        "type" : "object",
        "properties" : {
          "annualDividendPerUnit" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "applicableRangeRetirementLiquidatedAssets" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "awardedDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "currentUnitValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "growthRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "numberOfUnits" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "All", "Head1", "Head2", "NonHead1", "NonHead2", "NonHead3", "NonHead4", "NonHead5", "NonHead6", "NonHead7", "NonHead8", "NonHead9", "CommunityProperty", "Joint", "Other", "AllDependents", "AllFamilyMembers", "Corporation" ]
          },
          "pricePaidForAward" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "type" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "IRetirementAssetCategories" : {
        "type" : "object",
        "properties" : {
          "allAssets" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IValueDescriptionPair[Currency]"
            }
          },
          "nonQualifiedAnnuities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "nonQualifiedAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "qualifiedAnnuities" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "qualifiedAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          },
          "totalAssets" : {
            "$ref" : "#/components/schemas/INetWorthCategory"
          }
        }
      },
      "IRetirementAssets" : {
        "type" : "object",
        "properties" : {
          "allAssets" : {
            "$ref" : "#/components/schemas/IRetirementAssetCategories"
          },
          "clientAssets" : {
            "$ref" : "#/components/schemas/IRetirementAssetCategories"
          },
          "coClientAssets" : {
            "$ref" : "#/components/schemas/IRetirementAssetCategories"
          },
          "communityPropertyAssets" : {
            "$ref" : "#/components/schemas/IRetirementAssetCategories"
          },
          "jointAssets" : {
            "$ref" : "#/components/schemas/IRetirementAssetCategories"
          },
          "withdrawalRate" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "IReturnIncomeReinvestedDetails" : {
        "type" : "object",
        "properties" : {
          "duringPreRetirementPeriod" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "duringRetirementPeriod" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          }
        }
      },
      "IRrspMaximizerStrategy" : {
        "type" : "object",
        "properties" : {
          "applicable" : {
            "type" : "string",
            "readOnly" : true
          },
          "applicableRange" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "assetName" : {
            "type" : "string",
            "readOnly" : true
          },
          "constrainedByCashflow" : {
            "$ref" : "#/components/schemas/DescriptiveBoolean"
          },
          "month" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "ISEPPRedemptionStrategy" : {
        "type" : "object",
        "properties" : {
          "applicableDateRange" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "distributionMethod" : {
            "$ref" : "#/components/schemas/FormattedEnumType[SEPPDistributionMethod]"
          },
          "lifeExpectancyTable" : {
            "$ref" : "#/components/schemas/FormattedEnumType[SEPPLifeExpectancyTable]"
          },
          "redemptionFrequency" : {
            "$ref" : "#/components/schemas/FormattedEnumType[Frequency]"
          }
        }
      },
      "ISavingsStrategies" : {
        "type" : "object",
        "properties" : {
          "lumpSumSavingsStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ILumpSumSavingsStrategy"
            }
          },
          "periodicSavingsStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IPeriodicSavingsStrategy"
            }
          },
          "rrspMaximizerStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IRrspMaximizerStrategy"
            }
          },
          "surplusSavingsStrategies" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ISurplusSavingsStrategy"
            }
          }
        }
      },
      "IShareClassStructure" : {
        "type" : "object",
        "properties" : {
          "clientOwnershipData" : {
            "$ref" : "#/components/schemas/IOwnershipData"
          },
          "coClientOwnershipData" : {
            "$ref" : "#/components/schemas/IOwnershipData"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "otherOwnershipData" : {
            "$ref" : "#/components/schemas/IOwnershipData"
          },
          "parentCorporationOwnershipData" : {
            "$ref" : "#/components/schemas/IOwnershipData"
          }
        }
      },
      "ISharePurchase" : {
        "type" : "object",
        "properties" : {
          "activityData" : {
            "$ref" : "#/components/schemas/IActivityData"
          },
          "shareHolder" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Undefined", "Head1", "Head2", "Other" ]
          },
          "shareId" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "shareType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[PrivateCorporationShareType]"
          }
        }
      },
      "IShareRedemption" : {
        "type" : "object",
        "properties" : {
          "activityData" : {
            "$ref" : "#/components/schemas/IActivityData"
          },
          "shareId" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "shareType" : {
            "$ref" : "#/components/schemas/FormattedEnumType[PrivateCorporationShareType]"
          },
          "shareholder" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Undefined", "Head1", "Head2", "Other" ]
          }
        }
      },
      "IShareholderLoan" : {
        "type" : "object",
        "properties" : {
          "activityData" : {
            "$ref" : "#/components/schemas/IActivityData"
          },
          "shareHolder" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Undefined", "Head1", "Head2", "Other" ]
          }
        }
      },
      "IStockOption" : {
        "type" : "object",
        "properties" : {
          "annualDividendPerUnit" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "applicableRangeRetirementLiquidatedAssets" : {
            "$ref" : "#/components/schemas/FormattedDateRange"
          },
          "company" : {
            "type" : "string",
            "readOnly" : true
          },
          "currentUnitPrice" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "currentUnitPriceDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "endOfPlanYearExercisableGrossValue" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "exerciseCost" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "expirationDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "grantDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "grantedOptions" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "growthRate" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "optionsExercisable" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "optionsExercised" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "optionsVested" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "owner" : {
            "type" : "string",
            "readOnly" : true
          },
          "preTaxProfit" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "startOfYearAMTBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "startOfYearCostBasis" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "startOfYearUnitPrice" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "strikePrice" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "symbol" : {
            "type" : "string",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "NonQualifiedStockOption", "IncentiveStockOption" ]
          },
          "typeFormatted" : {
            "type" : "string",
            "readOnly" : true
          },
          "vestingSchedule" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IVestingData"
            }
          }
        }
      },
      "ISurplusSavingsStrategy" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "percentOfSurplus" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "percentOfSurplusClient" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "percentOfSurplusCoClient" : {
            "$ref" : "#/components/schemas/Percent"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "ITaxes" : {
        "type" : "object",
        "properties" : {
          "estate" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "federalIncome" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "giftAndGenerationSkippingTransfer" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "medicare" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "pensionEarlyDistributionPenalty" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "pensionPenaltyOnExcessDistributions" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "refundableCredits" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "socialSecurityEmployer" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "socialSecuritySelfEmployed" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "stateIncome" : {
            "$ref" : "#/components/schemas/Currency"
          },
          "total" : {
            "$ref" : "#/components/schemas/Currency"
          }
        }
      },
      "IVestingData" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/Date"
          },
          "percentVested" : {
            "$ref" : "#/components/schemas/Percent"
          }
        }
      },
      "IWithdrawals" : {
        "type" : "object",
        "properties" : {
          "loanRepaymentsToShareholder" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ILoanRepaymentToShareholder"
            }
          },
          "manualDividendDistributions" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IManualDividendDistribution"
            }
          },
          "shareRedemptions" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IShareRedemption"
            }
          }
        }
      },
      "LiabilitiesModel" : {
        "type" : "object",
        "properties" : {
          "liabilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ILiability"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "LiabilityModel" : {
        "type" : "object",
        "properties" : {
          "liability" : {
            "$ref" : "#/components/schemas/ILiability"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "LifestyleAssetModel" : {
        "type" : "object",
        "properties" : {
          "lifestyleAsset" : {
            "$ref" : "#/components/schemas/ILifestyleAsset"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "LifestyleAssetsModel" : {
        "type" : "object",
        "properties" : {
          "lifestyleAssets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ILifestyleAsset"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "LoginModel" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "NeedsVsAbilitiesModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "projections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProjectedGoalsSummary[GoalNeedsVsAbilitiesSummary]"
            }
          }
        }
      },
      "NetWorthModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "netWorth" : {
            "$ref" : "#/components/schemas/INetWorth"
          }
        }
      },
      "NetWorthProjectionModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "netWorth" : {
            "$ref" : "#/components/schemas/ProjectedNetWorthSummary"
          }
        }
      },
      "NetWorthProjectionsModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "projections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NetWorthProjectionModel"
            }
          }
        }
      },
      "NetWorthSummary" : {
        "type" : "object",
        "properties" : {
          "totalAssets" : {
            "type" : "number",
            "format" : "double"
          },
          "totalLiabilities" : {
            "type" : "number",
            "format" : "double"
          },
          "totalNetWorth" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "Object" : {
        "type" : "object"
      },
      "ObjectLink" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "rel" : {
            "type" : "string"
          }
        }
      },
      "Percent" : {
        "type" : "object",
        "properties" : {
          "formattedDoubleDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedNoDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "formattedSingleDecimal" : {
            "type" : "string",
            "readOnly" : true
          },
          "raw" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          },
          "rawCappedAt100" : {
            "type" : "number",
            "format" : "double",
            "readOnly" : true
          }
        }
      },
      "PlanInformationModel" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "readOnly" : true
          },
          "isJointAnalysis" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "locale" : {
            "type" : "string",
            "readOnly" : true
          },
          "planDate" : {
            "$ref" : "#/components/schemas/Date"
          },
          "planDescription" : {
            "type" : "string",
            "readOnly" : true
          },
          "planId" : {
            "type" : "string",
            "readOnly" : true
          },
          "planLevel" : {
            "type" : "string",
            "readOnly" : true,
            "enum" : [ "Calculator", "FinancialAssessment", "AssetAllocation", "Level1", "Level2", "Level3", "Undefined" ]
          },
          "planModules" : {
            "$ref" : "#/components/schemas/IPlanModules"
          },
          "planType" : {
            "type" : "string",
            "readOnly" : true
          },
          "publishDate" : {
            "$ref" : "#/components/schemas/Date"
          }
        }
      },
      "PlanSelectorParam" : {
        "required" : [ "planId" ],
        "type" : "object",
        "properties" : {
          "planId" : {
            "type" : "string",
            "description" : "Id of the Plan to retrieve or update data for (e.g. 1001-11-3)."
          }
        }
      },
      "PlanStatusesModel" : {
        "type" : "object",
        "properties" : {
          "hasIntegratedAccounts" : {
            "type" : "string",
            "enum" : [ "Unknown", "Yes", "No" ]
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "planDataStatus" : {
            "type" : "string",
            "enum" : [ "UpdateNotRequired", "UpdateRequired", "UpdateInProgress", "UpdateFailed", "NoSuchPlan" ]
          },
          "serializedDataStatus" : {
            "type" : "string",
            "enum" : [ "UpdateNotRequired", "UpdateRequired", "UpdateInProgress", "UpdateFailed", "NoSuchPlan" ]
          }
        }
      },
      "PortfolioAccountModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "portfolioAccount" : {
            "$ref" : "#/components/schemas/IPortfolioAccount"
          }
        }
      },
      "PortfolioAccountsModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "portfolioAccounts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IPortfolioAccount"
            }
          }
        }
      },
      "ProjectedAnnualSummariesModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "projections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProjectedAnnualSummaryModel"
            }
          }
        }
      },
      "ProjectedAnnualSummary" : {
        "type" : "object",
        "properties" : {
          "cashFlow" : {
            "$ref" : "#/components/schemas/CashFlowSummary"
          },
          "clientAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "coClientAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "netWorth" : {
            "$ref" : "#/components/schemas/NetWorthSummary"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ProjectedAnnualSummaryModel" : {
        "type" : "object",
        "properties" : {
          "annualSummary" : {
            "$ref" : "#/components/schemas/ProjectedAnnualSummary"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          }
        }
      },
      "ProjectedCashFlowSummary" : {
        "type" : "object",
        "properties" : {
          "cashFlow" : {
            "$ref" : "#/components/schemas/ICashFlowByOwner"
          },
          "clientAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "coClientAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ProjectedNetWorthSummary" : {
        "type" : "object",
        "properties" : {
          "clientAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "coClientAge" : {
            "type" : "integer",
            "format" : "int32"
          },
          "endOfYearNetWorth" : {
            "$ref" : "#/components/schemas/INetWorthAtDate"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PublicSessionInfoModel" : {
        "type" : "object",
        "properties" : {
          "eulaAccepted" : {
            "type" : "boolean"
          },
          "hasAccountAggregation" : {
            "type" : "boolean"
          },
          "hasGoalWhatIfing" : {
            "type" : "boolean"
          },
          "hasUserSetPassword" : {
            "type" : "boolean"
          },
          "isAdmin" : {
            "type" : "boolean"
          },
          "isAdvisor" : {
            "type" : "boolean"
          },
          "isClient" : {
            "type" : "boolean"
          },
          "isPasswordExpired" : {
            "type" : "boolean"
          },
          "userId" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          }
        }
      },
      "PublishedPlanModel" : {
        "type" : "object",
        "properties" : {
          "internalPlanId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "planId" : {
            "type" : "string"
          },
          "planPublishDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ResetPasswordModel" : {
        "required" : [ "locale", "userName" ],
        "type" : "object",
        "properties" : {
          "locale" : {
            "type" : "string",
            "description" : "Supported locales are: \"en-US\", \"en-CA\", and \"fr-CA\""
          },
          "userName" : {
            "type" : "string"
          }
        }
      },
      "RestrictedStockModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "restrictedStock" : {
            "$ref" : "#/components/schemas/IRestrictedStock"
          }
        }
      },
      "RestrictedStocksModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "restrictedStocks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IRestrictedStock"
            }
          }
        }
      },
      "ServiceInformation" : {
        "type" : "object",
        "properties" : {
          "altairConnectionStatus" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "pomVersion" : {
            "type" : "string"
          },
          "serviceVersion" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "SetPasswordModel" : {
        "type" : "object",
        "properties" : {
          "newPassword" : {
            "type" : "string"
          },
          "oldPassword" : {
            "type" : "string"
          }
        }
      },
      "StockOptionModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "stockOption" : {
            "$ref" : "#/components/schemas/IStockOption"
          }
        }
      },
      "StockOptionsModel" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ObjectLink"
            }
          },
          "stockOptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IStockOption"
            }
          }
        }
      },
      "TimePeriod" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "duration" : {
            "type" : "string",
            "enum" : [ "Days", "Weeks", "Months", "Years", "YearsOfAge" ]
          }
        }
      },
      "Year" : {
        "type" : "object",
        "properties" : {
          "raw" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    }
  }
}