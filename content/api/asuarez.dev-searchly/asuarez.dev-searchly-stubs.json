{
  "mappings" : [ {
    "id" : "889d2f51-14c1-45d4-be16-47b530ebbe18",
    "name" : "API endpoint to search songs from the database given a query",
    "request" : {
      "urlPath" : "/song/search",
      "method" : "GET",
      "queryParameters" : {
        "query" : {
          "equalTo" : "ltn6q"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"results\" : [ {\n      \"name\" : \"Scottie Kirlin\",\n      \"id\" : 1630695105280057172\n    }, {\n      \"name\" : \"Curtis Koch\",\n      \"id\" : 711538084177948399\n    } ]\n  },\n  \"error\" : true,\n  \"message\" : \"Recusandae commodi ut ullam nihil. Eum voluptatibus aut. Eaque laudantium repudiandae eveniet aut. Eius recusandae voluptatem repudiandae quisquam in et. Sunt iure ut aut nobis architecto qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "889d2f51-14c1-45d4-be16-47b530ebbe18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:19.955846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.song.search",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "results" : {
                    "description" : "Contains all the songs.",
                    "items" : {
                      "description" : "Song item.",
                      "properties" : {
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "name" : {
                          "description" : "Song and Artist name.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a10097f3-8e46-4088-8979-7bd348c1238b",
    "name" : "API endpoint to search similarity using a song identifier",
    "request" : {
      "urlPath" : "/similarity/by_song",
      "method" : "GET",
      "queryParameters" : {
        "song_id" : {
          "equalTo" : "4604954102025638211"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Ms. Sergio Bosco\",\n      \"artist_url\" : \"https://web.example.mocklab.io/444827\",\n      \"percentage\" : 2.739288163377189E38,\n      \"song_name\" : \"Lindsey Crona\",\n      \"id\" : 1224675772299670732,\n      \"index_id\" : 3086923228679318094,\n      \"lyrics\" : \"mvezcgzo0h2voi2ygtf1y7r1q9bz4agpr5u2k4jqkg1wjcbj62wkoqfu98hh00vlf90zpjcisk4kg7n09v84dim3i5dpzxj7t8826\",\n      \"song_url\" : \"https://web.example.mocklab.io/751372\"\n    }, {\n      \"artist_name\" : \"Samuel Emard\",\n      \"artist_url\" : \"https://web.example.mocklab.io/521971\",\n      \"percentage\" : 3.0187363924995416E38,\n      \"song_name\" : \"Zula Harber\",\n      \"id\" : 1599241982033477323,\n      \"index_id\" : 2470945870502398210,\n      \"lyrics\" : \"quzua4x7mvaapypvhpddcdjqwwcs780cla1dj5ipedn1zjqv6x8hx06f9802t83dsdzya6weqky16gxisirb1nod6rgamljbja3ysxofokorm0j1kywvvvqs1282udwcp\",\n      \"song_url\" : \"https://web.example.mocklab.io/058449\"\n    }, {\n      \"artist_name\" : \"Lauryn Bergstrom DDS\",\n      \"artist_url\" : \"https://web.example.mocklab.io/725493\",\n      \"percentage\" : 1.1148962586884236E38,\n      \"song_name\" : \"Gilbert Waelchi\",\n      \"id\" : 5372285613497286833,\n      \"index_id\" : 3962783667541082942,\n      \"lyrics\" : \"qr1icv1tv9wlsaxz2veakpyv4aenxzbv6l97ra6thmve0eg2c0klm1fdg0jg0lmgryu69p8k5bwt69dbaelws9nqhxkebyyo6rc68egyggmiwr1znu4ue47wu05gs5uj6yuneddp1taisbjtzmv3kjijwgay677sc\",\n      \"song_url\" : \"https://web.example.mocklab.io/384017\"\n    }, {\n      \"artist_name\" : \"Astrid Fahey\",\n      \"artist_url\" : \"https://web.example.mocklab.io/225515\",\n      \"percentage\" : 6.632327129998136E37,\n      \"song_name\" : \"Mr. Roxane Simonis\",\n      \"id\" : 667940736386743797,\n      \"index_id\" : 6892623425588490238,\n      \"lyrics\" : \"5w82bkcg8oo0xm0zdz60bwl1ah6y194aeq0c51kc679obt0uc6qnyvoc\",\n      \"song_url\" : \"https://web.example.mocklab.io/497991\"\n    }, {\n      \"artist_name\" : \"Apolonia Simonis\",\n      \"artist_url\" : \"https://web.example.mocklab.io/769050\",\n      \"percentage\" : 2.278844562018919E38,\n      \"song_name\" : \"Yessenia Jacobi V\",\n      \"id\" : 1976378600559213928,\n      \"index_id\" : 8799861228348849710,\n      \"lyrics\" : \"465ysblqwtrfc0xihhh14qotpdijw6lcga9msgeogrqhl6aapp4i3fbcp67dpntz9qj5335o1mv4mzjhkmnlpd0zlcidul4bnawpj08bue44pfgkrlb6srura22\",\n      \"song_url\" : \"https://web.example.mocklab.io/134879\"\n    } ]\n  },\n  \"error\" : false,\n  \"message\" : \"Et beatae molestias omnis consequuntur. Maiores fuga nemo sit. Repellendus aut quasi facere accusantium blanditiis aut voluptatibus. Non recusandae voluptas et nisi. Accusantium nisi inventore minima \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a10097f3-8e46-4088-8979-7bd348c1238b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:19.955497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_song",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "1748eae6-711c-4671-a681-adfb3f4e9498",
    "name" : "API endpoint to search similarity using content",
    "request" : {
      "urlPath" : "/similarity/by_content",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response\" : {\n    \"similarity_list\" : [ {\n      \"artist_name\" : \"Laverne Wunsch\",\n      \"artist_url\" : \"https://web.example.mocklab.io/108637\",\n      \"percentage\" : 2.7828621495725896E38,\n      \"song_name\" : \"Efrain Corkery\",\n      \"id\" : 405580934972552050,\n      \"index_id\" : 972458129539456890,\n      \"lyrics\" : \"2s7x8pd3q8z52zoqhvs8xbrld5n3nxrushgxsr09q2uucrxggz5hjfzunhabcjudjt6rhbv98x7ql48cvyse0xm6pkp1pvqome48kfb\",\n      \"song_url\" : \"https://web.example.mocklab.io/542026\"\n    }, {\n      \"artist_name\" : \"Pansy Mante\",\n      \"artist_url\" : \"https://web.example.mocklab.io/567011\",\n      \"percentage\" : 1.0679197750734639E38,\n      \"song_name\" : \"Ignacio Monahan\",\n      \"id\" : 8191263638312155885,\n      \"index_id\" : 2845053144519970232,\n      \"lyrics\" : \"g553qwpwpg6l0qhnbq064ezapqsrp4e4rqzjcy5xiprsl4dvmo9dg2m2q7broq6pexbe31v08nqebnxtzjugq\",\n      \"song_url\" : \"https://web.example.mocklab.io/527005\"\n    }, {\n      \"artist_name\" : \"Joel Stiedemann\",\n      \"artist_url\" : \"https://web.example.mocklab.io/790319\",\n      \"percentage\" : 3.289640638728335E38,\n      \"song_name\" : \"Hilton Konopelski\",\n      \"id\" : 8992011116248124577,\n      \"index_id\" : 8455823200238577068,\n      \"lyrics\" : \"vtd4zi33c4gz653c6tnyxk69j7ze62xii0mtnyh763cb5i1l66ceuemb7op3k5xlnkn6mgtkdwlpztrc3yv8clwoeyrqsp3drdlf74wmtf0gtuacnxwl2auc4cghihqgv3fsfhm1rs1gzyv7dgo8d3lm2tpzt6gi4792ufzgpjid5c1fdpedoodo7rpde7z9sz0\",\n      \"song_url\" : \"https://web.example.mocklab.io/042260\"\n    }, {\n      \"artist_name\" : \"Adaline Ledner\",\n      \"artist_url\" : \"https://web.example.mocklab.io/420509\",\n      \"percentage\" : 8.802751744967766E37,\n      \"song_name\" : \"Fredrick Batz\",\n      \"id\" : 9218027092498292553,\n      \"index_id\" : 3894281888181916950,\n      \"lyrics\" : \"5dvm78wluc63wdo7b69sb3p3zhy4ta9a3mbr75hz6o4allmaw26woym6d1oedzm5xz7apgg0a3fjpy783rabdz0m9pl0il5zy9bfefh77vov8f0hj1zf656l8ol7xiplejnydplpxh42rdlu9762kn4x93g7w4v9zffnqdfwzbmcwi1e\",\n      \"song_url\" : \"https://web.example.mocklab.io/760379\"\n    }, {\n      \"artist_name\" : \"Andre Rau V\",\n      \"artist_url\" : \"https://web.example.mocklab.io/653741\",\n      \"percentage\" : 3.1293234571914183E38,\n      \"song_name\" : \"Pat Effertz\",\n      \"id\" : 8183079951989577018,\n      \"index_id\" : 3660627562786850066,\n      \"lyrics\" : \"93qwoh1ayx62zpnmvfco4eeux8sckvdral8nl8l01sczw6mw7hgc175sehthuo4by\",\n      \"song_url\" : \"https://web.example.mocklab.io/057449\"\n    }, {\n      \"artist_name\" : \"Mr. Vanesa Thompson\",\n      \"artist_url\" : \"https://web.example.mocklab.io/100140\",\n      \"percentage\" : 2.8423772623565774E38,\n      \"song_name\" : \"Kelle McClure\",\n      \"id\" : 1256560945297610697,\n      \"index_id\" : 5900638247189601570,\n      \"lyrics\" : \"s2d2d85koafwmxnwyh2zg06js8ytypwgzn\",\n      \"song_url\" : \"https://web.example.mocklab.io/787545\"\n    }, {\n      \"artist_name\" : \"Janeth Klocko\",\n      \"artist_url\" : \"https://web.example.mocklab.io/635997\",\n      \"percentage\" : 7.10638321954558E37,\n      \"song_name\" : \"Daren Jacobi\",\n      \"id\" : 5990281326215075674,\n      \"index_id\" : 5700548210613308919,\n      \"lyrics\" : \"8nese8uiq9kdlgfvqhkazutosui7ikf39uicsqr2eyesbc0s0he88uue05065if29qh3kdmer48b8a39rgc4cdc55bcnd8nnlxsti0eq77vrb9pcol0qdi5rto\",\n      \"song_url\" : \"https://web.example.mocklab.io/313375\"\n    } ]\n  },\n  \"error\" : true,\n  \"message\" : \"Ut est incidunt dolor unde omnis. Doloribus enim ullam officiis numquam. Saepe esse veniam earum impedit nihil. Ducimus labore qui veritatis placeat ab. Veniam nihil quibusdam voluptates nihil qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1748eae6-711c-4671-a681-adfb3f4e9498",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:19.953262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "src.searchly.api.v1.controllers.similarity.by_content",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "Whether or not the request was successfully processed or not.",
                "type" : "boolean"
              },
              "message" : {
                "description" : "Error message if the request was unsuccessful.",
                "type" : "string"
              },
              "response" : {
                "description" : "Contains the response data if the request was successful.",
                "properties" : {
                  "similarity_list" : {
                    "description" : "Contains all the similarity items representing songs.",
                    "items" : {
                      "description" : "Song similarity item.",
                      "properties" : {
                        "artist_name" : {
                          "description" : "Artist's song name.",
                          "type" : "string"
                        },
                        "artist_url" : {
                          "description" : "Artist URL.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Song internal identifier.",
                          "type" : "integer"
                        },
                        "index_id" : {
                          "description" : "Index internal identifier.",
                          "type" : "integer"
                        },
                        "lyrics" : {
                          "description" : "Song lyrics.",
                          "type" : "string"
                        },
                        "percentage" : {
                          "description" : "Similarity percentage.",
                          "format" : "float",
                          "type" : "number"
                        },
                        "song_name" : {
                          "description" : "Song name.",
                          "type" : "string"
                        },
                        "song_url" : {
                          "description" : "Song URL.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  } ]
}