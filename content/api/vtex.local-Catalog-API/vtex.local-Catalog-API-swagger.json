{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://vtex.local"
  }, {
    "description" : "VTEX server url",
    "url" : "https://{accountName}.{environment}.com.br",
    "variables" : {
      "accountName" : {
        "default" : "{accountName}",
        "description" : "Name of the VTEX account. Used as part of the URL."
      },
      "environment" : {
        "default" : "{environment}",
        "description" : "Environment to use. Used as part of the URL."
      }
    }
  } ],
  "info" : {
    "description" : "\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/docs/guides/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.\r\n\r\nMethods for collecting product/SKU catalog data, categories, brands and other information. All content that comes between `{{}}` keys must be replaced with the correct data before performing the request.\r\n\r\n\r\n## Index\r\n\r\n- [Product](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/products/GetProductAndSkuIds) - Here you can consult, create, or update a Product. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/1wmX3QvQVxbKVmalhIE5Ru).\r\n- [Product Specification](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/products/-productId-/specification) - You can consult, create, or update additional information of a Product.  For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/2NQoBv8m4Yz3oQaLgDRagP#product-specification).\r\n- [SKU](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/sku/stockkeepingunitids) - Here you can consult, create, or update an SKU. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/3mJbIqMlz6oKDmyZ2bKJoA).\r\n- [SKU Complement](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/stockkeepingunit/-skuId-/complement) - You can consult, create, or update an SKU Complement. An SKU Complement is a new SKU that has a Parent SKU.\r\n- [SKU EAN](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/sku/stockkeepingunitbyean/-ean-) -  Here you can consult, create, or update an SKU unique identification code (barcode).\r\n- [SKU Attachment](https://developers.vtex.com/docs/api-reference/catalog-api#post-/api/catalog/pvt/skuattachment) - You can consult, create, or update an SKU Attachment. An attachment is used to add custom information about the item. For more information, check [this article](https://help.vtex.com/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm?locale=en).\r\n- [SKU File](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/stockkeepingunit/-skuId-/file) - Here you can consult, create, or update an SKU File. An SKU File is an image associated with an SKU.\r\n- [SKU Kit](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/stockkeepingunitkit) - You can consult, create, or update an SKU Kit. A kit is an SKU composed of one or more SKUs. For more information, check [this article](https://help.vtex.com/tutorial/what-is-a-kit--5ov5s3eHM4AqAAgqWwoc28?locale=en).\r\n- [SKU Seller](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/skuseller/-sellerId-/-sellerSkuId-) - Here you can consult and delete an SKU Seller. An SKU Seller is a seller associated with an SKU. For more information, check [this article](https://help.vtex.com/tutorial/what-is-a-seller--5FkLvhZ3Few4CWWIuYOK2w?locale=en).\r\n- [SKU Service](https://developers.vtex.com/docs/api-reference/catalog-api#put-/api/catalog/pvt/skuservice/-skuServiceId-) - You can create, update, or delete an SKU Service. A service is an item that may come with a product, optionally, and with a cost. For more information, check [this article](https://help.vtex.com/tutorial/what-is-a-service--46Ha8CEEQoC6Y40i6akG0y?locale=en).\r\n- [SKU Service Attachment](https://developers.vtex.com/docs/api-reference/catalog-api#post-/api/catalog/pvt/skuservicetypeattachment) - Here you can associate or disassociate an Attachment to an SKU Service.\r\n- [SKU Service Type](https://developers.vtex.com/docs/api-reference/catalog-api#post-/api/catalog/pvt/skuservicetype) - You can create, update, or delete an SKU Service Type. A service type is the behavior configuration of a service.\r\n- [SKU Service Value](https://developers.vtex.com/docs/api-reference/catalog-api#post-/api/catalog/pvt/skuservicevalue) - Here you can create, update, or delete an SKU Service Value. Service value is how much the customer will be charged for the service.\r\n- [SKU Specification](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/stockkeepingunit/-skuId-/specification) - You can consult, create, or delete an SKU Specification. SKU Specification is used to create site browsing filters and to differentiate SKUs within the product page. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/2NQoBv8m4Yz3oQaLgDRagP?locale=en#sku-specifications).\r\n- [Legacy Subcollection](https://developers.vtex.com/docs/api-reference/catalog-api#post-/api/catalog/pvt/subcollection/-subCollectionId-/stockkeepingunit) - Here you can can consult, create, or delete an SKU, Brand or Category from a Subcollection, as well as create, delete and update subcollections. A subcollection is a group type associated with a collection. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/3moFonW33dgOYDrU21Z1X0#group-types).\r\n- [Category](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pub/category/tree/-categoryLevels-) - You consult, create, or update a Category. A category is a hierarchical level of product classification. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/2gkZDjXRqfsq62TlAkj4uf).\r\n- [Similar Category](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/product/-productId-/similarcategory/) - Here you can create and delete a Similar Category to a Product. This way the Product will be shown in both categories (main and similar).\r\n- [Category Specification](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pub/specification/field/listByCategoryId/-categoryId-) - You can consult all Specifications by Category. For more information about Specification, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/2NQoBv8m4Yz3oQaLgDRagP).\r\n- [Brand](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/brand/list) - You can consult, create, update, or delete a Brand. A brand is a product property. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/7i3sB8fgkqUp5NoH5yJtfh).\r\n- [Attachment](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/attachment/-attachmentid-) - You can consult, create, or update an Attachment. An attachment is used to add custom information about the item. For more information, check [this article](https://help.vtex.com/tutorial/what-is-an-attachment--aGICk0RVbqKg6GYmQcWUm?locale=en).\r\n- [Collection Beta](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/collection/search) - The new [Beta Collections module](https://help.vtex.com/announcements/new-beta-collections-module-easily-create-and-manage-product-collections--6KvFxylC5SNsbVm8L8XZpZ#) launch allowed us to engineer new endpoints that create and manage Collections. For more information, check [this article](https://help.vtex.com/en/tutorial/creating-collections-beta--yJBHqNMViOAnnnq4fyOye?&utm_source=autocomplete#).\r\n- [Legacy Collection](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/collection/-collectionId-) - Here you can consult, create, update, or delete a Collection. A collection is a group of items. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/4hN41yU8IPeb8HKmmaXoca?locale=en).\r\n- [Specification](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/specification/-specificationId-) - Here you can consult, create, or delete a Specification. A specification is used to create site browsing filters and to differentiate SKUs and Products within the product page. For more information, check [this article](https://help.vtex.com/tracks/catalog-101--5AF0XfnjfWeopIFBgs3LIQ/2NQoBv8m4Yz3oQaLgDRagP?locale=en).\r\n- [Specification Field](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pub/specification/fieldGet/-fieldId-) - You can consult, create, or update a Specification Field. A specification field allows you to present more detailed items. \r\n- [Specification Field Value](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/specification/fieldValue/-fieldValueId-) - Here you can consult, create, or update a Specification Field Value. \r\n- [Specification Value](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/specificationvalue/-specificationValueId-) - You can consult, create, or update a Specification Value.\r\n- [Specification Group](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/specification/groupbycategory/-categoryId-) - Here you can consult, create, or update a Specification Group.\r\n- [Non Structured Specification](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/specification/nonstructured/-Id-) - You can consult or delete a Non Structured Specification.\r\n- [Sales Channel](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/saleschannel/list) - Here you can consult Sales Channel.\r\n- [Seller](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/seller/list) - You can consult, create, or update a Seller. A seller is the _product owner_. For more information, check [this article](https://help.vtex.com/tutorial/what-is-a-seller--5FkLvhZ3Few4CWWIuYOK2w?locale=en).\r\n- [Supplier](https://developers.vtex.com/docs/api-reference/catalog-api#post-/api/catalog/pvt/supplier) - Here you can consult, create, or update a Supplier.\r\n- [Trade Policy](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog/pvt/product/-productId-/salespolicy) - You can create, update, or delete a Trade Policy. Trade policy is required when one of the above factors is different among the sale channel. For more information, check [this article](https://help.vtex.com/tutorial/what-is-a-sales-policy--563tbcL0TYKEKeOY4IAgAE?locale=en).\r\n- [Product Indexing](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/products/GetIndexedInfo/-productId-) - Here you can consult Product Indexed information.\r\n- [Commercial Conditions](https://developers.vtex.com/docs/api-reference/catalog-api#get-/api/catalog_system/pvt/commercialcondition/list) - Here you can consult commercial conditions registered in the store.\r\n\r\n\r\n## Common parameters\r\n\r\n| Parameter name              | Description                                                                             |\r\n|---------------------------|-----------------------------------------------------------------------------------------|\r\n| `{{accountName}}`         | Store account name                                                                      |\r\n| `{{environment}`          | The environment that will be called. Change for vtexcommercestable or vtexcommmercebeta |\r\n| `{{X-VTEX-API-AppKey}}`   | Located in the headers of the requests, user authentication key                         |\r\n| `{{X-VTEX-API-AppToken}}` | Located in the headers of the requests, authentication password                         |",
    "title" : "Catalog API",
    "version" : "1.0",
    "x-origin" : [ {
      "format" : "openapi",
      "url" : "https://raw.githubusercontent.com/vtex/openapi-schemas/master/VTEX - Catalog API.json",
      "version" : "3.0"
    } ],
    "x-providerName" : "vtex.local",
    "x-serviceName" : "Catalog-API",
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_apis.guru_assets_images_no-logo.svg"
    }
  },
  "security" : [ {
    "appKey" : null,
    "appToken" : null
  } ],
  "tags" : [ {
    "name" : "SKU Service"
  }, {
    "name" : "SKU Service Attachment"
  }, {
    "name" : "SKU Service Value"
  }, {
    "name" : "SKU Service Type"
  }, {
    "name" : "Category"
  }, {
    "name" : "Brand"
  }, {
    "name" : "Attachment"
  }, {
    "name" : "Product"
  }, {
    "name" : "Product Specification"
  }, {
    "name" : "Trade Policy"
  }, {
    "name" : "Similar Category"
  }, {
    "name" : "SKU"
  }, {
    "name" : "SKU EAN"
  }, {
    "name" : "SKU File"
  }, {
    "name" : "SKU Kit"
  }, {
    "name" : "SKU Specification"
  }, {
    "name" : "SKU Attachment"
  }, {
    "name" : "SKU Complement"
  }, {
    "name" : "Non Structured Specification"
  }, {
    "name" : "Specification Field"
  }, {
    "name" : "Specification Group"
  }, {
    "name" : "Specification Value"
  }, {
    "name" : "Specification Field Value"
  }, {
    "name" : "Category Specification"
  }, {
    "name" : "Specification"
  }, {
    "name" : "Legacy Collection"
  }, {
    "name" : "Legacy Subcollection"
  }, {
    "name" : "Collection Beta"
  }, {
    "name" : "Supplier"
  }, {
    "name" : "Sales Channel"
  }, {
    "name" : "Seller"
  }, {
    "name" : "SKU Seller"
  }, {
    "name" : "Product Indexing"
  }, {
    "name" : "Commercial Conditions"
  }, {
    "name" : "Gift List"
  } ],
  "paths" : {
    "/api/addon/pvt/giftlist/get/{listId}" : {
      "get" : {
        "description" : "Retrieves information about a Gift List by its ID.",
        "operationId" : "GetGiftList",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Gift List unique numerical identifier.",
          "in" : "path",
          "name" : "listId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Object with information about the Gift List.",
                  "example" : {
                    "IsPublic" : false,
                    "address" : null,
                    "clientId" : 3,
                    "dateCreated" : "2011-05-04T13:23:00",
                    "eventCity" : "",
                    "eventDate" : "2012-12-21T00:00:00",
                    "eventLocation" : "",
                    "eventState" : "",
                    "fileId" : null,
                    "fileUrl" : null,
                    "giftCardId" : 2,
                    "giftCardRechargeSkuId" : null,
                    "giftListId" : 1,
                    "giftListMembers" : [ ],
                    "giftListSkuIds" : [ ],
                    "giftListTypeId" : 1,
                    "giftListTypeName" : "Lista de Casamento",
                    "isActive" : false,
                    "isAddressOk" : true,
                    "memberNames" : "sei lá",
                    "message" : "mensageeeem",
                    "name" : "My list",
                    "profileSystemUserAddressName" : "CASA",
                    "profileSystemUserId" : "010956A4-A74A-4375-8B7B-3B3B7B89B483",
                    "shipsToOwner" : false,
                    "telemarketingId" : null,
                    "telemarketingObservation" : "",
                    "urlFolder" : "lili",
                    "userId" : "010956A4-A74A-4375-8B7B-3B3B7B89B483",
                    "version" : 1
                  },
                  "properties" : {
                    "IsPublic" : {
                      "description" : "Defines if the gift list is public.",
                      "example" : true,
                      "title" : "IsPublic",
                      "type" : "boolean"
                    },
                    "address" : {
                      "description" : "Address of the gift list.",
                      "example" : "Botafogo",
                      "nullable" : true,
                      "title" : "address",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "Date when the gift list was created.",
                      "example" : "2013-10-31T19:03:00",
                      "title" : "dateCreated",
                      "type" : "string"
                    },
                    "eventCity" : {
                      "description" : "City of the event associated with the Gift List.",
                      "example" : "Rio de Janeiro",
                      "title" : "eventCity",
                      "type" : "string"
                    },
                    "eventDate" : {
                      "description" : "Date of the event associated with the Gift List.",
                      "example" : "2014-07-20T00:00:00",
                      "title" : "eventDate",
                      "type" : "string"
                    },
                    "eventLocation" : {
                      "description" : "Location of the event associated with the Gift List.",
                      "example" : "Botafogo",
                      "title" : "eventLocation",
                      "type" : "string"
                    },
                    "eventState" : {
                      "description" : "State of the event associated with the Gift List.",
                      "example" : "RJ",
                      "title" : "eventState",
                      "type" : "string"
                    },
                    "fileId" : {
                      "description" : "File ID.",
                      "example" : 155233,
                      "nullable" : true,
                      "title" : "fileId",
                      "type" : "integer"
                    },
                    "fileUrl" : {
                      "description" : "File URL.",
                      "example" : "/arquivos/ids/155233-800-800/gl-0_635266293044683588.jpg",
                      "nullable" : true,
                      "title" : "fileUrl",
                      "type" : "string"
                    },
                    "giftCardId" : {
                      "description" : "Gift Card ID.",
                      "example" : 2,
                      "title" : "giftCardId",
                      "type" : "integer"
                    },
                    "giftCardRechargeSkuId" : {
                      "description" : "ID of the SKU that recharges the gift card.",
                      "example" : 1,
                      "nullable" : true,
                      "title" : "giftCardRechargeSkuId",
                      "type" : "integer"
                    },
                    "giftListId" : {
                      "description" : "Gift List ID.",
                      "example" : 1,
                      "title" : "giftListId",
                      "type" : "integer"
                    },
                    "giftListMembers" : {
                      "description" : "Array of members of the gift list.",
                      "items" : {
                        "description" : "Object with information about each gift list member.",
                        "example" : {
                          "clientId" : null,
                          "giftListId" : 2,
                          "giftListMemberId" : 1,
                          "isActive" : true,
                          "isAdmin" : true,
                          "name" : "Rafael",
                          "surname" : "Villa-Verde",
                          "text1" : null,
                          "text2" : null,
                          "title" : null,
                          "userId" : "010956A4-A74A-4375-8B7B-3B3B7B89B483"
                        },
                        "properties" : {
                          "clientId" : {
                            "description" : "Client ID.",
                            "nullable" : true,
                            "title" : "clientId",
                            "type" : "string"
                          },
                          "giftListId" : {
                            "description" : "Gift List ID.",
                            "title" : "giftListId",
                            "type" : "integer"
                          },
                          "giftListMemberId" : {
                            "description" : "Gift List member ID.",
                            "title" : "giftListMemberId",
                            "type" : "integer"
                          },
                          "isActive" : {
                            "description" : "Defines if the Gift List user is active or not.",
                            "title" : "isActive",
                            "type" : "boolean"
                          },
                          "isAdmin" : {
                            "description" : "Defines if the Gift List member is an administrator of the Gift List or not.",
                            "title" : "isAdmin",
                            "type" : "boolean"
                          },
                          "name" : {
                            "description" : "Name of the Gift List member.",
                            "title" : "name",
                            "type" : "string"
                          },
                          "surname" : {
                            "description" : "Surname of the Gift List member.",
                            "title" : "surname",
                            "type" : "string"
                          },
                          "text1" : {
                            "description" : "Complementary text.",
                            "nullable" : true,
                            "title" : "text1",
                            "type" : "string"
                          },
                          "text2" : {
                            "description" : "Complementary text.",
                            "nullable" : true,
                            "title" : "text2",
                            "type" : "string"
                          },
                          "title" : {
                            "description" : "Title of the Gift List member.",
                            "nullable" : true,
                            "title" : "title",
                            "type" : "string"
                          },
                          "userId" : {
                            "description" : "User ID.",
                            "title" : "userId",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "giftListMembers",
                      "type" : "array"
                    },
                    "giftListSkuIds" : {
                      "description" : "Array with the IDs of SKUs that are part of the gift list.",
                      "items" : {
                        "description" : "SKU ID.",
                        "type" : "string"
                      },
                      "title" : "giftListSkuIds",
                      "type" : "array"
                    },
                    "giftListTypeId" : {
                      "description" : "Gift List Type ID.",
                      "example" : 1,
                      "title" : "giftListTypeId",
                      "type" : "integer"
                    },
                    "giftListTypeName" : {
                      "description" : "Gift List Type name.",
                      "example" : "Wedding list",
                      "title" : "giftListTypeName",
                      "type" : "string"
                    },
                    "isActive" : {
                      "description" : "Defines if the gift list is active.",
                      "example" : true,
                      "title" : "isActive",
                      "type" : "boolean"
                    },
                    "isAddressOk" : {
                      "description" : "Validates the address of the gift list.",
                      "example" : false,
                      "title" : "isAddressOk",
                      "type" : "boolean"
                    },
                    "memberNames" : {
                      "description" : "Name of the members of the gift list.",
                      "example" : "Rafael Villa-Verde",
                      "title" : "memberNames",
                      "type" : "string"
                    },
                    "message" : {
                      "description" : "Gift List message.",
                      "example" : "This is a gift list for my wedding.",
                      "title" : "message",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Gift List name.",
                      "example" : "My list",
                      "title" : "name",
                      "type" : "string"
                    },
                    "profileSystemUserAddressName" : {
                      "description" : "Name of the user's address.",
                      "example" : "CASA",
                      "title" : "profileSystemUserAddressName",
                      "type" : "string"
                    },
                    "profileSystemUserId" : {
                      "description" : "User ID on Profile System.",
                      "example" : "a6e7d995-e884-409d-911f-36b25c40169a",
                      "title" : "profileSystemUserId",
                      "type" : "string"
                    },
                    "shipsToOwner" : {
                      "description" : "Defines if items purchased from the gift list will be shipped to the owner of the gift list.",
                      "example" : false,
                      "title" : "shipsToOwner",
                      "type" : "boolean"
                    },
                    "telemarketingId" : {
                      "description" : "Telemarketing ID.",
                      "example" : 1,
                      "nullable" : true,
                      "title" : "telemarketingId",
                      "type" : "integer"
                    },
                    "telemarketingObservation" : {
                      "description" : "Telemarketing observation.",
                      "example" : "",
                      "title" : "telemarketingObservation",
                      "type" : "string"
                    },
                    "urlFolder" : {
                      "description" : "Slug of the gift list that will be part of its URL.",
                      "example" : "myweddinglist",
                      "title" : "urlFolder",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "User ID.",
                      "example" : "a6e7d995-e884-409d-911f-36b25c40169a",
                      "title" : "userId",
                      "type" : "string"
                    },
                    "version" : {
                      "description" : "Version of the gift list.",
                      "example" : 1,
                      "title" : "version",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Gift List",
        "tags" : [ "Gift List" ]
      }
    },
    "/api/addon/pvt/review/GetProductRate/{productId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves the review rate of a product by this product's ID.",
        "operationId" : "ReviewRateProduct",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Review rate numeber.",
                  "example" : 3,
                  "type" : "number"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product Review Rate by Product ID",
        "tags" : [ "Product" ]
      }
    },
    "/api/catalog/pvt/attachment" : {
      "post" : {
        "description" : "Creates a new SKU attachment.\r\n >⚠️ To understand the specific syntax for Assembly Options attachments, read the [Assembly Options](https://help.vtex.com/en/tutorial/assembly-options--5x5FhNr4f5RUGDEGWzV1nH#assembly-options-syntax) documentation. \r\n## Request body example\r\n\r\n```json\r\n{\r\n  \"Name\": \"Test\",\r\n  \"IsRequired\": true,\r\n  \"IsActive\": true,\r\n  \"Domains\": [\r\n    {\r\n      \"FieldName\": \"Basic test\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[1-2]#9[1-1][1]basic;#11[0-1][1]basic\"\r\n    },\r\n    {\r\n      \"FieldName\": \"teste\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium\"\r\n    }\r\n  ]\r\n}\r\n```\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 8,\r\n  \"Name\": \"Test\",\r\n  \"IsRequired\": true,\r\n  \"IsActive\": true,\r\n  \"Domains\": [\r\n    {\r\n      \"FieldName\": \"Basic test\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[1-2]#9[1-1][1]basic;#11[0-1][1]basic\"\r\n    },\r\n    {\r\n      \"FieldName\": \"teste\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium\"\r\n    }\r\n  ]\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachmentRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create attachment",
        "tags" : [ "Attachment" ]
      }
    },
    "/api/catalog/pvt/attachment/{attachmentid}" : {
      "delete" : {
        "description" : "Deletes a previously existing SKU attachment.",
        "parameters" : [ {
          "description" : "Attachment ID.",
          "in" : "path",
          "name" : "attachmentid",
          "required" : true,
          "schema" : {
            "example" : "vtexcommercestable",
            "type" : "string"
          }
        }, {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete attachment",
        "tags" : [ "Attachment" ]
      },
      "get" : {
        "description" : "Gets information about a registered attachment. \r\n >⚠️ To understand the specific syntax for Assembly Options attachments, read the [Assembly Options](https://help.vtex.com/en/tutorial/assembly-options--5x5FhNr4f5RUGDEGWzV1nH#assembly-options-syntax) documentation.\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 8,\r\n  \"Name\": \"Test\",\r\n  \"IsRequired\": true,\r\n  \"IsActive\": true,\r\n  \"Domains\": [\r\n    {\r\n      \"FieldName\": \"Basic test\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[1-2]#9[1-1][1]basic;#11[0-1][1]basic\"\r\n    },\r\n    {\r\n      \"FieldName\": \"teste\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium\"\r\n    }\r\n  ]\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Attachment ID.",
          "in" : "path",
          "name" : "attachmentid",
          "required" : true,
          "schema" : {
            "example" : "8",
            "type" : "string"
          }
        }, {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get attachment",
        "tags" : [ "Attachment" ]
      },
      "put" : {
        "description" : "Updates a previously existing SKU attachment with new information. \r\n >⚠️ To understand the specific syntax for Assembly Options attachments, read the [Assembly Options](https://help.vtex.com/en/tutorial/assembly-options--5x5FhNr4f5RUGDEGWzV1nH#assembly-options-syntax) documentation. \r\n## Request body example\r\n\r\n```json\r\n{\r\n  \"Name\": \"Test\",\r\n  \"IsRequired\": true,\r\n  \"IsActive\": true,\r\n  \"Domains\": [\r\n    {\r\n      \"FieldName\": \"Basic test\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[1-2]#9[1-1][1]basic;#11[0-1][1]basic\"\r\n    },\r\n    {\r\n      \"FieldName\": \"teste\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium\"\r\n    }\r\n  ]\r\n}\r\n```\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 8,\r\n  \"Name\": \"Test\",\r\n  \"IsRequired\": true,\r\n  \"IsActive\": true,\r\n  \"Domains\": [\r\n    {\r\n      \"FieldName\": \"Basic test\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[1-2]#9[1-1][1]basic;#11[0-1][1]basic\"\r\n    },\r\n    {\r\n      \"FieldName\": \"teste\",\r\n      \"MaxCaracters\": \"\",\r\n      \"DomainValues\": \"[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium\"\r\n    }\r\n  ]\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Attachment ID.",
          "in" : "path",
          "name" : "attachmentid",
          "required" : true,
          "schema" : {
            "example" : "vtexcommercestable",
            "type" : "string"
          }
        }, {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachmentRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update attachment",
        "tags" : [ "Attachment" ]
      }
    },
    "/api/catalog/pvt/attachments" : {
      "get" : {
        "description" : "Retrieves information about all registered attachments. \r\n >⚠️ To understand the specific syntax for Assembly Options attachments, read the [Assembly Options](https://help.vtex.com/en/tutorial/assembly-options--5x5FhNr4f5RUGDEGWzV1nH#assembly-options-syntax) documentation. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Page\": 1,\r\n    \"Size\": 11,\r\n    \"TotalRows\": 11,\r\n    \"TotalPage\": 1,\r\n    \"Data\": [\r\n        {\r\n            \"Id\": 1,\r\n            \"Name\": \"Acessórios do bicho\",\r\n            \"IsRequired\": true,\r\n            \"IsActive\": true,\r\n            \"Domains\": [\r\n                {\r\n                    \"FieldName\": \"extra\",\r\n                    \"MaxCaracters\": \"\",\r\n                    \"DomainValues\": \"[0-3]#1[1-2][1]pricetable1;#3[0-2][0]pricetable2;#5[0-2][0]pricetable3\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Id\": 2,\r\n            \"Name\": \"Sobrenome\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": []\r\n        },\r\n        {\r\n            \"Id\": 3,\r\n            \"Name\": \"Assinatura Teste\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": [\r\n                {\r\n                    \"FieldName\": \" vtex.subscription.key.frequency\",\r\n                    \"MaxCaracters\": \"\",\r\n                    \"DomainValues\": \"1 day, 7 day, 1 month, 6 month\"\r\n                },\r\n                {\r\n                    \"FieldName\": \"vtex.subscription.key.validity.begin\",\r\n                    \"MaxCaracters\": \"\",\r\n                    \"DomainValues\": \"1\"\r\n                },\r\n                {\r\n                    \"FieldName\": \"vtex.subscription.key.validity.end\",\r\n                    \"MaxCaracters\": \"\",\r\n                    \"DomainValues\": \"31\"\r\n                },\r\n                {\r\n                    \"FieldName\": \"vtex.subscription.key.purchaseday\",\r\n                    \"MaxCaracters\": \"\",\r\n                    \"DomainValues\": \"1, 2, 20, 31\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Id\": 5,\r\n            \"Name\": \"teste\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": []\r\n        },\r\n        {\r\n            \"Id\": 6,\r\n            \"Name\": \"teste2\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": []\r\n        },\r\n        {\r\n            \"Id\": 7,\r\n            \"Name\": \"vtex.subscription.teste3\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": []\r\n        },\r\n        {\r\n            \"Id\": 8,\r\n            \"Name\": \"teste api nova\",\r\n            \"IsRequired\": true,\r\n            \"IsActive\": true,\r\n            \"Domains\": [\r\n                {\r\n                    \"FieldName\": \"Basic teste\",\r\n                    \"MaxCaracters\": \"\",\r\n                    \"DomainValues\": \"[1-2]#9[1-1][1]basic;#11[0-1][1]basic\"\r\n                },\r\n                {\r\n                    \"FieldName\": \"teste\",\r\n                    \"MaxCaracters\": \"\",\r\n                    \"DomainValues\": \"[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Id\": 9,\r\n            \"Name\": \"vtex.subscription.teste\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": []\r\n        },\r\n        {\r\n            \"Id\": 10,\r\n            \"Name\": \"Montagens\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": []\r\n        },\r\n        {\r\n            \"Id\": 11,\r\n            \"Name\": \"vtex.subscription.subscription\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": [\r\n                {\r\n                    \"FieldName\": \"vtex.subscription.key.frequency\",\r\n                    \"MaxCaracters\": \"15\",\r\n                    \"DomainValues\": \"1 month\"\r\n                },\r\n                {\r\n                    \"FieldName\": \"vtex.subscription.key.purchaseday\",\r\n                    \"MaxCaracters\": \"15\",\r\n                    \"DomainValues\": \"1,15,28\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"Id\": 12,\r\n            \"Name\": \"T-Shirt Customization\",\r\n            \"IsRequired\": false,\r\n            \"IsActive\": true,\r\n            \"Domains\": [\r\n                {\r\n                    \"FieldName\": \"T-Shirt Name\",\r\n                    \"MaxCaracters\": \"15\",\r\n                    \"DomainValues\": \"[]\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "Data" : {
                      "description" : "Array containing attachments data.",
                      "items" : {
                        "$ref" : "#/components/schemas/AttachmentResponse"
                      },
                      "title" : "Data",
                      "type" : "array"
                    },
                    "Page" : {
                      "description" : "Current page of results.",
                      "example" : 1,
                      "title" : "Page",
                      "type" : "integer"
                    },
                    "Size" : {
                      "description" : "Total number of results in the current page.",
                      "example" : 11,
                      "title" : "Size",
                      "type" : "integer"
                    },
                    "TotalPage" : {
                      "description" : "Total number of pages with results.",
                      "example" : 1,
                      "title" : "TotalPage",
                      "type" : "integer"
                    },
                    "TotalRows" : {
                      "description" : "Total number of rows with results.",
                      "example" : 11,
                      "title" : "TotalRows",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get all attachments",
        "tags" : [ "Attachment" ]
      }
    },
    "/api/catalog/pvt/brand" : {
      "post" : {
        "description" : "Creates a new Brand.\r\n## Request and response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 2000013,\r\n  \"Name\": \"Orma Carbon\",\r\n  \"Text\": \"Orma Carbon\",\r\n  \"Keywords\": \"orma\",\r\n  \"SiteTitle\": \"Orma Carbon\",\r\n  \"Active\": true,\r\n  \"MenuHome\": true,\r\n  \"AdWordsRemarketingCode\": \"\",\r\n  \"LomadeeCampaignCode\": \"\",\r\n  \"Score\": null,\r\n  \"LinkId\": \"orma-carbon\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrandCreateUpdate"
              }
            }
          },
          "description" : "Request body."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "Active" : true,
                  "AdWordsRemarketingCode" : "",
                  "Id" : 2000013,
                  "Keywords" : "orma",
                  "LinkId" : "orma-carbon",
                  "LomadeeCampaignCode" : "",
                  "MenuHome" : true,
                  "Name" : "Orma Carbon",
                  "Score" : null,
                  "SiteTitle" : "Orma Carbon",
                  "Text" : "Orma Carbon"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/BrandCreateUpdate"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Brand",
        "tags" : [ "Brand" ]
      }
    },
    "/api/catalog/pvt/brand/{brandId}" : {
      "delete" : {
        "description" : "Deletes an existing Brand.",
        "parameters" : [ {
          "description" : "Brand’s unique numerical identifier.",
          "in" : "path",
          "name" : "brandId",
          "required" : true,
          "schema" : {
            "example" : "123",
            "type" : "string"
          }
        }, {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Brand",
        "tags" : [ "Brand" ]
      },
      "get" : {
        "description" : "Retrieves information about a specific Brand and its context.\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 2000013,\r\n  \"Name\": \"Orma Carbon\",\r\n  \"Text\": \"Orma Carbon\",\r\n  \"Keywords\": \"orma\",\r\n  \"SiteTitle\": \"Orma Carbon\",\r\n  \"Active\": true,\r\n  \"MenuHome\": true,\r\n  \"AdWordsRemarketingCode\": \"\",\r\n  \"LomadeeCampaignCode\": \"\",\r\n  \"Score\": null,\r\n  \"LinkId\": \"orma-carbon\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Brand ID.",
          "in" : "path",
          "name" : "brandId",
          "required" : true,
          "schema" : {
            "example" : "123",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "Active" : true,
                  "AdWordsRemarketingCode" : "",
                  "Id" : 2000013,
                  "Keywords" : "orma",
                  "LinkId" : "orma-carbon",
                  "LomadeeCampaignCode" : "",
                  "MenuHome" : true,
                  "Name" : "Orma Carbon",
                  "Score" : null,
                  "SiteTitle" : "Orma Carbon",
                  "Text" : "Orma Carbon"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/BrandCreateUpdate"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Brand and context",
        "tags" : [ "Brand" ]
      },
      "put" : {
        "description" : "Updates a previously existing Brand.\r\n## Request and response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 2000013,\r\n  \"Name\": \"Orma Carbon\",\r\n  \"Text\": \"Orma Carbon\",\r\n  \"Keywords\": \"orma\",\r\n  \"SiteTitle\": \"Orma Carbon\",\r\n  \"Active\": true,\r\n  \"MenuHome\": true,\r\n  \"AdWordsRemarketingCode\": \"\",\r\n  \"LomadeeCampaignCode\": \"\",\r\n  \"Score\": null,\r\n  \"LinkId\": \"orma-carbon\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Brand’s unique numerical identifier.",
          "in" : "path",
          "name" : "brandId",
          "required" : true,
          "schema" : {
            "example" : "123",
            "type" : "string"
          }
        }, {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BrandCreateUpdate"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "Active" : true,
                  "AdWordsRemarketingCode" : "",
                  "Id" : 2000013,
                  "Keywords" : "orma",
                  "LinkId" : "orma-carbon",
                  "LomadeeCampaignCode" : "",
                  "MenuHome" : true,
                  "Name" : "Orma Carbon",
                  "Score" : null,
                  "SiteTitle" : "Orma Carbon",
                  "Text" : "Orma Carbon"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/BrandCreateUpdate"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Brand",
        "tags" : [ "Brand" ]
      }
    },
    "/api/catalog/pvt/category" : {
      "post" : {
        "description" : "Creates a new Category.\r\n\r\nIf there is a need to create a new category with a specific custom ID, specify the `Id` (integer) in the request. Otherwise, VTEX will generate the ID automatically.\r\n\r\n## Request body example (automatically generated ID)\r\n\r\n```json\r\n{\r\n    \"Name\": \"Home Appliances\",\r\n    \"FatherCategoryId\": null,\r\n    \"Title\": \"Home Appliances\",\r\n    \"Description\": \"Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.\",\r\n    \"Keywords\": \"Kitchen, Laundry, Appliances\",\r\n    \"IsActive\": true,\r\n    \"LomadeeCampaignCode\": null,\r\n    \"AdWordsRemarketingCode\": null,\r\n    \"ShowInStoreFront\": true,\r\n    \"ShowBrandFilter\": true,\r\n    \"ActiveStoreFrontLink\": true,\r\n    \"GlobalCategoryId\": 604,\r\n    \"StockKeepingUnitSelectionMode\": \"SPECIFICATION\",\r\n    \"Score\": null\r\n}\r\n```\r\n\r\n## Request body example (custom ID)\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Home Appliances\",\r\n    \"FatherCategoryId\": null,\r\n    \"Title\": \"Home Appliances\",\r\n    \"Description\": \"Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.\",\r\n    \"Keywords\": \"Kitchen, Laundry, Appliances\",\r\n    \"IsActive\": true,\r\n    \"LomadeeCampaignCode\": null,\r\n    \"AdWordsRemarketingCode\": null,\r\n    \"ShowInStoreFront\": true,\r\n    \"ShowBrandFilter\": true,\r\n    \"ActiveStoreFrontLink\": true,\r\n    \"GlobalCategoryId\": 604,\r\n    \"StockKeepingUnitSelectionMode\": \"SPECIFICATION\",\r\n    \"Score\": null\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Home Appliances\",\r\n    \"FatherCategoryId\": null,\r\n    \"Title\": \"Home Appliances\",\r\n    \"Description\": \"Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.\",\r\n    \"Keywords\": \"Kitchen, Laundry, Appliances\",\r\n    \"IsActive\": true,\r\n    \"LomadeeCampaignCode\": \"\",\r\n    \"AdWordsRemarketingCode\": \"\",\r\n    \"ShowInStoreFront\": true,\r\n    \"ShowBrandFilter\": true,\r\n    \"ActiveStoreFrontLink\": true,\r\n    \"GlobalCategoryId\": 604,\r\n    \"StockKeepingUnitSelectionMode\": \"LIST\",\r\n    \"Score\": null,\r\n    \"LinkId\": \"Alimentacao\",\r\n    \"HasChildren\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateCategoryRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ActiveStoreFrontLink" : true,
                  "AdWordsRemarketingCode" : "",
                  "Description" : "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",
                  "FatherCategoryId" : null,
                  "GlobalCategoryId" : 3367,
                  "HasChildren" : true,
                  "Id" : 1,
                  "IsActive" : true,
                  "Keywords" : "Kitchen, Laundry, Appliances",
                  "LinkId" : "Alimentacao",
                  "LomadeeCampaignCode" : "",
                  "Name" : "Home Appliances",
                  "Score" : null,
                  "ShowBrandFilter" : true,
                  "ShowInStoreFront" : true,
                  "StockKeepingUnitSelectionMode" : "LIST",
                  "Title" : "Home Appliances"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Category"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Category",
        "tags" : [ "Category" ]
      }
    },
    "/api/catalog/pvt/category/{categoryId}" : {
      "get" : {
        "description" : "Retrieves general information about a Category. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Home Appliances\",\r\n    \"FatherCategoryId\": null,\r\n    \"Title\": \"Home Appliances\",\r\n    \"Description\": \"Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.\",\r\n    \"Keywords\": \"Kitchen, Laundry, Appliances\",\r\n    \"IsActive\": true,\r\n    \"LomadeeCampaignCode\": \"\",\r\n    \"AdWordsRemarketingCode\": \"\",\r\n    \"ShowInStoreFront\": true,\r\n    \"ShowBrandFilter\": true,\r\n    \"ActiveStoreFrontLink\": true,\r\n    \"GlobalCategoryId\": 3367,\r\n    \"StockKeepingUnitSelectionMode\": \"LIST\",\r\n    \"Score\": null,\r\n    \"LinkId\": \"Alimentacao\",\r\n    \"HasChildren\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category’s unique numerical identifier.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : 9289,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ActiveStoreFrontLink" : true,
                  "AdWordsRemarketingCode" : "",
                  "Description" : "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",
                  "FatherCategoryId" : null,
                  "GlobalCategoryId" : 3367,
                  "HasChildren" : true,
                  "Id" : 1,
                  "IsActive" : true,
                  "Keywords" : "Kitchen, Laundry, Appliances",
                  "LinkId" : "Alimentacao",
                  "LomadeeCampaignCode" : "",
                  "Name" : "Home Appliances",
                  "Score" : null,
                  "ShowBrandFilter" : true,
                  "ShowInStoreFront" : true,
                  "StockKeepingUnitSelectionMode" : "LIST",
                  "Title" : "Home Appliances"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Category"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Category by ID",
        "tags" : [ "Category" ]
      },
      "put" : {
        "description" : "Updates a previously existing Category.\r\n\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Home Appliances\",\r\n    \"FatherCategoryId\": null,\r\n    \"Title\": \"Home Appliances\",\r\n    \"Description\": \"Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.\",\r\n    \"Keywords\": \"Kitchen, Laundry, Appliances\",\r\n    \"IsActive\": true,\r\n    \"LomadeeCampaignCode\": null,\r\n    \"AdWordsRemarketingCode\": null,\r\n    \"ShowInStoreFront\": true,\r\n    \"ShowBrandFilter\": true,\r\n    \"ActiveStoreFrontLink\": true,\r\n    \"GlobalCategoryId\": 604,\r\n    \"StockKeepingUnitSelectionMode\": \"SPECIFICATION\",\r\n    \"Score\": null\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Home Appliances\",\r\n    \"FatherCategoryId\": null,\r\n    \"Title\": \"Home Appliances\",\r\n    \"Description\": \"Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.\",\r\n    \"Keywords\": \"Kitchen, Laundry, Appliances\",\r\n    \"IsActive\": true,\r\n    \"LomadeeCampaignCode\": \"\",\r\n    \"AdWordsRemarketingCode\": \"\",\r\n    \"ShowInStoreFront\": true,\r\n    \"ShowBrandFilter\": true,\r\n    \"ActiveStoreFrontLink\": true,\r\n    \"GlobalCategoryId\": 604,\r\n    \"StockKeepingUnitSelectionMode\": \"LIST\",\r\n    \"Score\": null,\r\n    \"LinkId\": \"Alimentacao\",\r\n    \"HasChildren\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category’s unique numerical identifier.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : 9289,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ActiveStoreFrontLink" : {
                    "description" : "If true, the Category link becomes active in store.",
                    "example" : true,
                    "title" : "ActiveStoreFrontLink",
                    "type" : "boolean"
                  },
                  "AdWordsRemarketingCode" : {
                    "deprecated" : true,
                    "description" : "This is a legacy field. Do not take this information into consideration.",
                    "example" : "Sale",
                    "type" : "string"
                  },
                  "Description" : {
                    "description" : "Text used in meta description tag for Category page.",
                    "example" : "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",
                    "title" : "Description",
                    "type" : "string"
                  },
                  "FatherCategoryId" : {
                    "description" : "ID of the parent category, apply in case of category and subcategory.",
                    "example" : 2,
                    "nullable" : true,
                    "title" : "FatherCategoryId",
                    "type" : "integer"
                  },
                  "GlobalCategoryId" : {
                    "description" : "Google Global Category ID.",
                    "example" : 222,
                    "title" : "GlobalCategoryId",
                    "type" : "integer"
                  },
                  "IsActive" : {
                    "description" : "If true, the Category page becomes available in store.",
                    "example" : true,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "Keywords" : {
                    "description" : "Substitute words for the Category.",
                    "example" : "Kitchen, Laundry, Appliances",
                    "title" : "Keywords",
                    "type" : "string"
                  },
                  "LomadeeCampaignCode" : {
                    "deprecated" : true,
                    "description" : "This is a legacy field. Do not take this information into consideration.",
                    "example" : "Sale",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "Category name.",
                    "example" : "Home Appliances",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Score" : {
                    "description" : "Score for search sorting order.",
                    "example" : 3,
                    "title" : "Score",
                    "type" : "integer"
                  },
                  "ShowBrandFilter" : {
                    "description" : "If true, the Category page displays a Brand filter.",
                    "example" : true,
                    "title" : "ShowBrandFilter",
                    "type" : "boolean"
                  },
                  "ShowInStoreFront" : {
                    "description" : "If true, the Category is shown in the top and side menu.",
                    "example" : true,
                    "title" : "ShowInStoreFront",
                    "type" : "boolean"
                  },
                  "StockKeepingUnitSelectionMode" : {
                    "description" : "Defines how the SKU will be exhibited",
                    "example" : "SPECIFICATION",
                    "title" : "StockKeepingUnitSelectionMode",
                    "type" : "string"
                  },
                  "Title" : {
                    "description" : "Text used in title tag for Category page.",
                    "example" : "Home Appliances",
                    "title" : "Title",
                    "type" : "string"
                  }
                },
                "required" : [ "Name", "Keywords", "Title", "Description", "AdWordsRemarketingCode", "LomadeeCampaignCode", "FatherCategoryId", "GlobalCategoryId", "ShowInStoreFront", "IsActive", "ActiveStoreFrontLink", "ShowBrandFilter", "Score", "StockKeepingUnitSelectionMode" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ActiveStoreFrontLink" : true,
                  "AdWordsRemarketingCode" : "",
                  "Description" : "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",
                  "FatherCategoryId" : null,
                  "GlobalCategoryId" : 3367,
                  "HasChildren" : true,
                  "Id" : 1,
                  "IsActive" : true,
                  "Keywords" : "Kitchen, Laundry, Appliances",
                  "LinkId" : "Alimentacao",
                  "LomadeeCampaignCode" : "",
                  "Name" : "Home Appliances",
                  "Score" : null,
                  "ShowBrandFilter" : true,
                  "ShowInStoreFront" : true,
                  "StockKeepingUnitSelectionMode" : "LIST",
                  "Title" : "Home Appliances"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Category"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Category",
        "tags" : [ "Category" ]
      }
    },
    "/api/catalog/pvt/collection" : {
      "post" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nCreates a new Collection.\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Winter\",\r\n    \"Searchable\": false,\r\n    \"Highlight\": false,\r\n    \"DateFrom\": \"2021-09-27T10:47:00\",\r\n    \"DateTo\": \"2027-09-27T10:47:00\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 159,\r\n    \"Name\": \"Winter\",\r\n    \"Description\": null,\r\n    \"Searchable\": false,\r\n    \"Highlight\": false,\r\n    \"DateFrom\": \"2021-09-27T10:47:00\",\r\n    \"DateTo\": \"2027-09-27T10:47:00\",\r\n    \"TotalProducts\": 0,\r\n    \"Type\": \"Manual\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "DateFrom" : {
                    "description" : "Initial value date for the Collection.",
                    "example" : "2017-09-27T10:47:00",
                    "title" : "DateFrom",
                    "type" : "string"
                  },
                  "DateTo" : {
                    "description" : "Final value date for the Collection.",
                    "example" : "2017-09-27T10:47:00",
                    "title" : "DateTo",
                    "type" : "string"
                  },
                  "Highlight" : {
                    "description" : "Defines if the Collection is highlighted or not.",
                    "example" : false,
                    "title" : "Highlight",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "Collection Name.",
                    "example" : "Test",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Searchable" : {
                    "description" : "Defines if the Collection is searchable or not.",
                    "example" : true,
                    "title" : "Searchable",
                    "type" : "boolean"
                  }
                },
                "required" : [ "Name", "Searchable", "Highlight", "DateFrom", "DateTo" ],
                "title" : "Resquest body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "DateFrom" : {
                      "description" : "Initial value date for the Collection.",
                      "example" : "2017-09-27T10:47:00",
                      "title" : "DateFrom",
                      "type" : "string"
                    },
                    "DateTo" : {
                      "description" : "Final value date for the Collection.",
                      "example" : "2017-09-27T10:47:00",
                      "title" : "DateTo",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Collection description.",
                      "example" : "Winter outfits.",
                      "nullable" : true,
                      "title" : "Description",
                      "type" : "string"
                    },
                    "Highlight" : {
                      "description" : "Defines if the Collection is highlighted or not.",
                      "example" : false,
                      "title" : "Highlight",
                      "type" : "boolean"
                    },
                    "Id" : {
                      "description" : "Collection ID.",
                      "example" : 150,
                      "title" : "Id",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Collection Name.",
                      "example" : "Test",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "Searchable" : {
                      "description" : "Defines if the Collection is searchable or not.",
                      "example" : true,
                      "title" : "Searchable",
                      "type" : "boolean"
                    },
                    "TotalProducts" : {
                      "description" : "Total quantity of products in the collection.",
                      "example" : 150,
                      "title" : "TotalProducts",
                      "type" : "integer"
                    },
                    "Type" : {
                      "description" : "Type of collection.",
                      "example" : "Manual",
                      "title" : "Type",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Collection",
        "tags" : [ "Legacy Collection" ]
      }
    },
    "/api/catalog/pvt/collection/" : {
      "post" : {
        "deprecated" : false,
        "description" : "Creates a new collection.",
        "operationId" : "POST-CreateCollection",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "description" : "",
                "properties" : {
                  "DateFrom" : {
                    "description" : "Collection start date and time. If a future date and time are set, the collection will have a scheduled status.",
                    "example" : "2020-11-26T15:23:00",
                    "title" : "DateFrom",
                    "type" : "string"
                  },
                  "DateTo" : {
                    "description" : "Collection end date and time.",
                    "example" : "2069-11-26T15:23:00",
                    "title" : "DateTo",
                    "type" : "string"
                  },
                  "Description" : {
                    "description" : "Collection's description for internal use, with the collection's details. It will not be used for search engines.",
                    "example" : "HomeHalloween",
                    "title" : "Description",
                    "type" : "string"
                  },
                  "Highlight" : {
                    "description" : "Option if you want the collection to highlight specific products using a tag.",
                    "example" : false,
                    "title" : "Highlight",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "Collection's Name.",
                    "example" : "Halloween costumes",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Searchable" : {
                    "description" : "Option making the collection searchable in the store.",
                    "example" : false,
                    "title" : "Searchable",
                    "type" : "boolean"
                  }
                },
                "required" : [ "Name", "Description", "Searchable", "Highlight", "DateFrom", "DateTo", "TotalProducts", "Type" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Create Collection",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog/pvt/collection/inactive" : {
      "get" : {
        "description" : "Retrieves a list of Collection IDs of the inactive Collections.",
        "operationId" : "GET-AllInactiveCollections",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Get All Inactive Collections",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog/pvt/collection/stockkeepingunit/importfileexample" : {
      "get" : {
        "description" : "Imports a sample of the imported XLS file. You need to save the response file to your device.",
        "operationId" : "GET-Importfileexample",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Import Collection file example",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog/pvt/collection/{collectionId}" : {
      "delete" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nDeletes a previously existing Collection.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection’s unique numerical identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 151,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Collection",
        "tags" : [ "Legacy Collection" ]
      },
      "get" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nRetrieves general information of a Collection.\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 159,\r\n    \"Name\": \"Winter\",\r\n    \"Description\": null,\r\n    \"Searchable\": false,\r\n    \"Highlight\": false,\r\n    \"DateFrom\": \"2021-09-27T10:47:00\",\r\n    \"DateTo\": \"2027-09-27T10:47:00\",\r\n    \"TotalProducts\": 0,\r\n    \"Type\": \"Manual\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection’s unique numerical identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 151,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "DateFrom" : {
                      "description" : "Initial value date for the Collection.",
                      "example" : "2017-09-27T10:47:00",
                      "title" : "DateFrom",
                      "type" : "string"
                    },
                    "DateTo" : {
                      "description" : "Final value date for the Collection.",
                      "example" : "2017-09-27T10:47:00",
                      "title" : "DateTo",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Collection description.",
                      "example" : "Winter outfits.",
                      "nullable" : true,
                      "title" : "Description",
                      "type" : "string"
                    },
                    "Highlight" : {
                      "description" : "Defines if the Collection is highlighted or not.",
                      "example" : false,
                      "title" : "Highlight",
                      "type" : "boolean"
                    },
                    "Id" : {
                      "description" : "Collection ID.",
                      "example" : 150,
                      "title" : "Id",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Collection Name.",
                      "example" : "Test",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "Searchable" : {
                      "description" : "Defines if the Collection is searchable or not.",
                      "example" : true,
                      "title" : "Searchable",
                      "type" : "boolean"
                    },
                    "TotalProducts" : {
                      "description" : "Total quantity of products in the collection.",
                      "example" : 150,
                      "title" : "TotalProducts",
                      "type" : "integer"
                    },
                    "Type" : {
                      "description" : "Type of collection.",
                      "example" : "Manual",
                      "title" : "Type",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Collection",
        "tags" : [ "Legacy Collection" ]
      },
      "put" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nUpdates a previously created Collection.\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Winter\",\r\n    \"Searchable\": false,\r\n    \"Highlight\": false,\r\n    \"DateFrom\": \"2021-09-27T10:47:00\",\r\n    \"DateTo\": \"2027-09-27T10:47:00\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 159,\r\n    \"Name\": \"Winter\",\r\n    \"Description\": null,\r\n    \"Searchable\": false,\r\n    \"Highlight\": false,\r\n    \"DateFrom\": \"2021-09-27T10:47:00\",\r\n    \"DateTo\": \"2027-09-27T10:47:00\",\r\n    \"TotalProducts\": 0,\r\n    \"Type\": \"Manual\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection’s unique numerical identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 151,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "DateFrom" : {
                    "description" : "Initial value date for the Collection.",
                    "example" : "2017-09-27T10:47:00",
                    "title" : "DateFrom",
                    "type" : "string"
                  },
                  "DateTo" : {
                    "description" : "Final value date for the Collection.",
                    "example" : "2017-09-27T10:47:00",
                    "title" : "DateTo",
                    "type" : "string"
                  },
                  "Highlight" : {
                    "description" : "Defines if the Collection is highlighted or not",
                    "example" : false,
                    "title" : "Highlight",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "Collection Name.",
                    "example" : "Test",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Searchable" : {
                    "description" : "Defines if the Collection is searchable or not.",
                    "example" : true,
                    "title" : "Searchable",
                    "type" : "boolean"
                  }
                },
                "required" : [ "Name", "Searchable", "Highlight", "DateFrom", "DateTo" ],
                "title" : "Resquest body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "DateFrom" : {
                      "description" : "Initial value date for the Collection.",
                      "example" : "2017-09-27T10:47:00",
                      "title" : "DateFrom",
                      "type" : "string"
                    },
                    "DateTo" : {
                      "description" : "Final value date for the Collection.",
                      "example" : "2017-09-27T10:47:00",
                      "title" : "DateTo",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Collection description.",
                      "example" : "Winter outfits.",
                      "nullable" : true,
                      "title" : "Description",
                      "type" : "string"
                    },
                    "Highlight" : {
                      "description" : "Defines if the Collection is highlighted or not.",
                      "example" : false,
                      "title" : "Highlight",
                      "type" : "boolean"
                    },
                    "Id" : {
                      "description" : "Collection ID.",
                      "example" : 150,
                      "title" : "Id",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Collection Name.",
                      "example" : "Test",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "Searchable" : {
                      "description" : "Defines if the Collection is searchable or not.",
                      "example" : true,
                      "title" : "Searchable",
                      "type" : "boolean"
                    },
                    "TotalProducts" : {
                      "description" : "Total quantity of products in the collection.",
                      "example" : 150,
                      "title" : "TotalProducts",
                      "type" : "integer"
                    },
                    "Type" : {
                      "description" : "Type of collection.",
                      "example" : "Manual",
                      "title" : "Type",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Collection",
        "tags" : [ "Legacy Collection" ]
      }
    },
    "/api/catalog/pvt/collection/{collectionId}/position" : {
      "post" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nEdits the position of an SKU that already exists in the Subcollection,  which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.\r\n## Request body example\r\n\r\n```json\r\n{\r\n     \"skuId\": 1,\r\n     \"position\": 1,\r\n     \"subCollectionId\": 17\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection’s unique numerical identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 151,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "position" : {
                    "description" : "SKU position.",
                    "example" : 1,
                    "type" : "integer"
                  },
                  "skuId" : {
                    "description" : "SKU ID.",
                    "example" : 1,
                    "type" : "integer"
                  },
                  "subCollectionId" : {
                    "description" : "Subcollection ID.",
                    "example" : 17,
                    "type" : "integer"
                  }
                },
                "required" : [ "skuId", "position", "subCollectionId" ],
                "title" : "",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Reposition SKU on the Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/collection/{collectionId}/products" : {
      "get" : {
        "description" : "Retrieves information about the products from a collection.",
        "operationId" : "GET-Productsfromacollection",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection's unique identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Page number.",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "example" : 2,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of the items of the page.",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "example" : 15,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Filter used to refine the Collection's products.",
          "in" : "query",
          "name" : "Filter",
          "required" : false,
          "schema" : {
            "example" : "Pre launch",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Defines if the status of the product is active or not.",
          "in" : "query",
          "name" : "Active",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Defines if the product is visible on the store or not.",
          "in" : "query",
          "name" : "Visible",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Product's Category unique identifier.",
          "in" : "query",
          "name" : "CategoryId",
          "required" : false,
          "schema" : {
            "example" : 12,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Product's Brand unique identifier.",
          "in" : "query",
          "name" : "BrandId",
          "required" : false,
          "schema" : {
            "example" : 3,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Product's Supplier unique identifier.",
          "in" : "query",
          "name" : "SupplierId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Product's Trade Policy unique identifier.",
          "in" : "query",
          "name" : "SalesChannelId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Product past release date.",
          "in" : "query",
          "name" : "ReleaseFrom",
          "required" : false,
          "schema" : {
            "example" : "2069-11-26T15:23:00",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Product future release date.",
          "in" : "query",
          "name" : "ReleaseTo",
          "required" : false,
          "schema" : {
            "example" : "2069-11-26T15:23:00",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Product Specification Field Value. You must also fill in `SpecificationFieldId` to use this parameter.",
          "in" : "query",
          "name" : "SpecificationProduct",
          "required" : false,
          "schema" : {
            "example" : "M",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Product Specification Field unique identifier.",
          "in" : "query",
          "name" : "SpecificationFieldId",
          "required" : false,
          "schema" : {
            "example" : 40,
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Get products from a collection",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog/pvt/collection/{collectionId}/stockkeepingunit/importexclude" : {
      "post" : {
        "description" : "Removes products from a collection from the request body file. The file must be an imported template.",
        "operationId" : "POST-Removeproductsbyimportfile",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "multipart/form-data",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection's unique identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "properties" : {
                  "file" : {
                    "description" : "XLS file with information about products to be added to a Collection. The file must be an imported template from [Import Collection file example](https://developers.vtex.com/vtex-developer-docs/reference/get-importfileexample) endpoint.",
                    "format" : "binary"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Remove products from Collection by imported file",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog/pvt/collection/{collectionId}/stockkeepingunit/importinsert" : {
      "post" : {
        "description" : "Adds products to a collection from the request body file. The file must be an imported template.",
        "operationId" : "POST-Addproductsbyimportfile",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "multipart/form-data",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection's unique identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "properties" : {
                  "file" : {
                    "description" : "XLS file with information about products to be added to a Collection. The file must be an imported template from [Import Collection file example](https://developers.vtex.com/vtex-developer-docs/reference/get-importfileexample) endpoint.",
                    "format" : "binary"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Add products to Collection by imported file",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog/pvt/collection/{collectionId}/subcollection" : {
      "get" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nRetrieves all Subcollections given a Collection ID. A Subcollection is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 12,\r\n        \"CollectionId\": 149,\r\n        \"Name\": \"Subcollection\",\r\n        \"Type\": \"Inclusive\",\r\n        \"PreSale\": false,\r\n        \"Release\": true\r\n    },\r\n    {\r\n        \"Id\": 13,\r\n        \"CollectionId\": 149,\r\n        \"Name\": \"Test\",\r\n        \"Type\": \"Exclusive\",\r\n        \"PreSale\": true,\r\n        \"Release\": false\r\n    },\r\n    {\r\n        \"Id\": 14,\r\n        \"CollectionId\": 149,\r\n        \"Name\": \"asdfghj\",\r\n        \"Type\": \"Inclusive\",\r\n        \"PreSale\": false,\r\n        \"Release\": false\r\n    }\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Collection’s unique numerical identifier.",
          "in" : "path",
          "name" : "collectionId",
          "required" : true,
          "schema" : {
            "example" : 151,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "CollectionId" : 151,
                  "Id" : 17,
                  "Name" : "group 1",
                  "PreSale" : false,
                  "Release" : false,
                  "Type" : "Inclusive"
                }, {
                  "CollectionId" : 151,
                  "Id" : 18,
                  "Name" : "group 2",
                  "PreSale" : false,
                  "Release" : false,
                  "Type" : "Inclusive"
                } ],
                "schema" : {
                  "items" : {
                    "properties" : {
                      "CollectionId" : {
                        "description" : "Collection ID.",
                        "type" : "integer"
                      },
                      "Id" : {
                        "description" : "Subcollection ID.",
                        "type" : "integer"
                      },
                      "Name" : {
                        "description" : "Subcollection Name.",
                        "type" : "string"
                      },
                      "PreSale" : {
                        "description" : "Defines if the collection is on PreSale.",
                        "type" : "boolean"
                      },
                      "Release" : {
                        "description" : "Defines if the collection is a new released one.",
                        "type" : "boolean"
                      },
                      "Type" : {
                        "description" : "Either `“Exclusive”` (all the products contained in it will not be used) or `“Inclusive”` (all the products contained in it will be used).",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "title" : "",
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Subcollection by Collection ID",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/product" : {
      "post" : {
        "description" : "This endpoint allows two types of request:\r\n\r\n**Type 1:** Creating a new Product as well as a new Category path (including subcategories) and a new Brand by using `CategoryPath` and `BrandName` parameters.\r\n\r\n**Type 2:** Creating a new Product given an existing `BrandId` and an existing `CategoryId`.\r\n\r\nWhen creating a product, regardless of the type of request, if there is a need to create a new product with a specific custom product ID, specify the `Id` (integer) in the request body. Otherwise, VTEX will generate the ID automatically.\r\n\r\n ## Request body examples\r\n\r\n ### Type 1\r\n\r\n Request to create a product, associating it to a new Category and a new Brand by using `CategoryPath` and `BrandName`:\r\n\r\n```json\r\n{\r\n    \"Name\": \"Black T-Shirt\",\r\n    \"CategoryPath\": \"Mens/Clothing/T-Shirts\",\r\n    \"BrandName\": \"Nike\",\r\n    \"RefId\": \"31011706925\",\r\n    \"Title\": \"Black T-Shirt\",\r\n    \"LinkId\": \"tshirt-black\",\r\n    \"Description\": \"This is a cool Tshirt\",\r\n    \"ReleaseDate\": \"2022-01-01T00:00:00\",\r\n    \"IsVisible\": true,\r\n    \"IsActive\": true,\r\n    \"TaxCode\": \"\",\r\n    \"MetaTagDescription\": \"tshirt black\",\r\n    \"ShowWithoutStock\": true,\r\n    \"Score\": 1\r\n}\r\n```\r\n\r\n ### Type 2\r\n\r\nRequest to create a product, associating it to an existing `CategoryId` and `BrandId`:\r\n\r\n```json\r\n{\r\n   \"Name\": \"insert product test\",\r\n   \"DepartmentId\": 1,\r\n   \"CategoryId\": 2,\r\n   \"BrandId\": 2000000,\r\n   \"LinkId\": \"insert-product-test\",\r\n   \"RefId\": \"310117869\",\r\n   \"IsVisible\": true,\r\n   \"Description\": \"texto de descrição\",\r\n   \"DescriptionShort\": \"Utilize o CEP 04548-005 para frete grátis\",\r\n   \"ReleaseDate\": \"2019-01-01T00:00:00\",\r\n   \"KeyWords\": \"teste,teste2\",\r\n   \"Title\": \"product de teste\",\r\n   \"IsActive\": true,\r\n   \"TaxCode\": \"\",\r\n   \"MetaTagDescription\": \"tag test\",\r\n   \"SupplierId\": 1,\r\n   \"ShowWithoutStock\": true,\r\n   \"AdWordsRemarketingCode\": null,\r\n   \"LomadeeCampaignCode\": null,\r\n   \"Score\": 1\r\n}\r\n```\r\n\r\n ## Response body example\r\n\r\n```json\r\n{\r\n   \"Id\": 52,\r\n   \"Name\": \"insert product test\",\r\n   \"DepartmentId\": 1,\r\n   \"CategoryId\": 2,\r\n   \"BrandId\": 2000000,\r\n   \"LinkId\": \"insert-product-test\",\r\n   \"RefId\": \"310117869\",\r\n   \"IsVisible\": true,\r\n   \"Description\": \"texto de descrição\",\r\n   \"DescriptionShort\": \"Utilize o CEP 04548-005 para frete grátis\",\r\n   \"ReleaseDate\": \"2019-01-01T00:00:00\",\r\n   \"KeyWords\": \"teste,teste2\",\r\n   \"Title\": \"product de teste\",\r\n   \"IsActive\": true,\r\n   \"TaxCode\": \"\",\r\n   \"MetaTagDescription\": \"tag test\",\r\n   \"SupplierId\": 1,\r\n   \"ShowWithoutStock\": true,\r\n   \"AdWordsRemarketingCode\": null,\r\n   \"LomadeeCampaignCode\": null,\r\n   \"Score\": 1\r\n}\r\n```\r\n  \r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AdWordsRemarketingCode" : {
                    "deprecated" : true,
                    "description" : "This is a legacy field. Do not take this information into consideration.",
                    "type" : "string"
                  },
                  "BrandId" : {
                    "description" : "ID of an existing Brand that will be associated with this product. It is mandatory to use either this field or the `BrandName` field.",
                    "example" : 12121219,
                    "title" : "BrandId",
                    "type" : "integer"
                  },
                  "BrandName" : {
                    "description" : "Name of the brand that will be associated with this product. It is mandatory to use either this field or the `BrandId` field. If you wish to create a new brand, that is, in case the brand does not exist yet, use this field instead of `BrandId`.",
                    "example" : "Sample Brand",
                    "type" : "string"
                  },
                  "CategoryId" : {
                    "description" : "ID of an existing Category that will be associated with this product. It is mandatory to use either this field or the `CategoryPath` field.",
                    "example" : 2000090,
                    "title" : "CategoryId",
                    "type" : "integer"
                  },
                  "CategoryPath" : {
                    "description" : "Path of categories associated with this product, from the highest level of category to the lowest level, separated by `/`. It is mandatory to use either this field or the `CategoryId` field.",
                    "example" : "Mens/Clothing/T-Shirts",
                    "type" : "string"
                  },
                  "Description" : {
                    "description" : "Product description.",
                    "example" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "title" : "Description",
                    "type" : "string"
                  },
                  "DescriptionShort" : {
                    "description" : "Short product description. This information can be displayed on both the product page and the shelf, using the following controls:\r\n Store Framework:  `$product.DescriptionShort`.\r\n Legacy CMS Portal: `<vtex.cmc:productDescriptionShort/>`.\r\n",
                    "example" : "The Nike Zoom Stefan Janoski is made with a premium leather.",
                    "title" : "DescriptionShort",
                    "type" : "string"
                  },
                  "Id" : {
                    "description" : "Product’s unique numerical identifier. If not informed, it will be automatically generated by VTEX.",
                    "example" : 42,
                    "title" : "Id",
                    "type" : "integer"
                  },
                  "IsActive" : {
                    "description" : "Activate (`true`) or inactivate (`false`) product.",
                    "example" : true,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "IsVisible" : {
                    "description" : "Shows (`true`) or hides (`false`) the product in search result and product pages, but the product can still be added to the shopping cart. Usually applicable for gifts.",
                    "example" : true,
                    "title" : "IsVisible",
                    "type" : "boolean"
                  },
                  "KeyWords" : {
                    "description" : "Store Framework: Deprecated. \r\nLegacy CMS Portal: Keywords or synonyms related to the product, separated by comma (`,`). \"Television\", for example, can have a substitute word like \"TV\". This field is important to make your searches more comprehensive.\r\n",
                    "example" : "Zoom,Stefan,Janoski",
                    "title" : "KeyWords",
                    "type" : "string"
                  },
                  "LinkId" : {
                    "description" : "Slug that will be used to build the product page URL. If it not informed, it will be generated according to the product's name replacing spaces and special characters by hyphens (`-`).",
                    "example" : "stefan-janoski-canvas-varsity-red",
                    "title" : "LinkId",
                    "type" : "string"
                  },
                  "LomadeeCampaignCode" : {
                    "deprecated" : true,
                    "description" : "This is a legacy field. Do not take this information into consideration.",
                    "type" : "string"
                  },
                  "MetaTagDescription" : {
                    "description" : "Brief description of the product for SEO. It is recommended not to exceed 150 characters.",
                    "example" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "title" : "MetaTagDescription",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "Product's name. Limited to 150 characters.",
                    "example" : "Zoom Stefan Janoski Canvas RM SB Varsity Red",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "RefId" : {
                    "description" : "Product Reference Code.",
                    "example" : "sr_1_90",
                    "title" : "RefId",
                    "type" : "string"
                  },
                  "ReleaseDate" : {
                    "description" : "Used to assist in the ordering of the search result of the site. Using the `O=OrderByReleaseDateDESC` query string, you can pull this value and show the display order by release date. This attribute is also used as a condition for dynamic collections.",
                    "example" : "2019-01-01T00:00:00",
                    "title" : "ReleaseDate",
                    "type" : "string"
                  },
                  "Score" : {
                    "description" : "Value used to set the priority on the search result page.",
                    "example" : 1,
                    "title" : "Score",
                    "type" : "integer"
                  },
                  "ShowWithoutStock" : {
                    "description" : "If `true`, activates the [Notify Me](https://help.vtex.com/en/tutorial/setting-up-the-notify-me-option--2VqVifQuf6Co2KG048Yu6e) option when the product is out of stock.",
                    "example" : true,
                    "title" : "ShowWithoutStock",
                    "type" : "boolean"
                  },
                  "SupplierId" : {
                    "deprecated" : true,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "TaxCode" : {
                    "description" : "Product tax code, used for tax calculation.",
                    "example" : "12345",
                    "title" : "TaxCode",
                    "type" : "string"
                  },
                  "Title" : {
                    "description" : "Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.",
                    "example" : "Zoom Stefan Janoski Canvas RM SB Varsity Red",
                    "title" : "Title",
                    "type" : "string"
                  }
                },
                "required" : [ "Name" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "AdWordsRemarketingCode" : "",
                    "BrandId" : 12121219,
                    "CategoryId" : 2000090,
                    "DepartmentId" : 2000089,
                    "Description" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "DescriptionShort" : "The Nike Zoom Stefan Janoski is made with a premium leather.",
                    "Id" : 42,
                    "IsActive" : true,
                    "IsVisible" : true,
                    "KeyWords" : "Zoom,Stefan,Janoski",
                    "LinkId" : "stefan-janoski-canvas-varsity-red",
                    "LomadeeCampaignCode" : "",
                    "MetaTagDescription" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "Name" : "Zoom Stefan Janoski Canvas RM SB Varsity Red",
                    "RefId" : "sr_1_90",
                    "ReleaseDate" : "2020-01-01T00:00:00",
                    "Score" : 1,
                    "ShowWithoutStock" : true,
                    "SupplierId" : 1,
                    "TaxCode" : "",
                    "Title" : "Zoom Stefan Janoski Canvas RM SB Varsity Re"
                  },
                  "properties" : {
                    "AdWordsRemarketingCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "BrandId" : {
                      "description" : "Brand ID associated with this product.",
                      "type" : "integer"
                    },
                    "CategoryId" : {
                      "description" : "Category ID associated with this product.",
                      "type" : "integer"
                    },
                    "DepartmentId" : {
                      "description" : "Department ID according to the product's category.",
                      "type" : "integer"
                    },
                    "Description" : {
                      "description" : "Product description.",
                      "type" : "string"
                    },
                    "DescriptionShort" : {
                      "description" : "Short product description. This information can be displayed on both the product page and the shelf, using the following controls:\r\n Store Framework:  `$product.DescriptionShort`.\r\n Legacy CMS Portal: `<vtex.cmc:productDescriptionShort/>`.\r\n",
                      "title" : "DescriptionShort",
                      "type" : "string"
                    },
                    "Id" : {
                      "description" : "Product’s unique numerical identifier.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Activate (`true`) or inactivate (`false`) product.",
                      "type" : "boolean"
                    },
                    "IsVisible" : {
                      "description" : "Shows (`true`) or hides (`false`) the product in search result and product pages, but the product can still be added to the shopping cart. Usually applicable for gifts.",
                      "type" : "boolean"
                    },
                    "KeyWords" : {
                      "description" : "Store Framework: Deprecated. \r\nLegacy CMS Portal:  Keywords or synonyms related to the product, separated by comma (`,`). \"Television\", for example, can have a substitute word like \"TV\". This field is important to make your searches more comprehensive.\r\n",
                      "type" : "string"
                    },
                    "LinkId" : {
                      "description" : "Slug that will be used to build the product page URL. If it not informed, it will be generated according to the product's name replacing spaces and special characters by hyphens (`-`).",
                      "type" : "string"
                    },
                    "LomadeeCampaignCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "MetaTagDescription" : {
                      "description" : "Brief description of the product for SEO. It's recommended that you don't exceed 150 characters.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Product's name. Limited to 150 characters.",
                      "type" : "string"
                    },
                    "RefId" : {
                      "description" : "Product Reference Code.",
                      "type" : "string"
                    },
                    "ReleaseDate" : {
                      "description" : "Used to assist in the ordering of the search result of the site. Using the `O=OrderByReleaseDateDESC` query string, you can pull this value and show the display order by release date. This attribute is also used as a condition for dynamic collections.",
                      "type" : "string"
                    },
                    "Score" : {
                      "description" : "Value used to set the priority on the search result page.",
                      "type" : "integer"
                    },
                    "ShowWithoutStock" : {
                      "description" : "If `true`, activates the [Notify Me](https://help.vtex.com/en/tutorial/setting-up-the-notify-me-option--2VqVifQuf6Co2KG048Yu6e) option when the product is out of stock.",
                      "type" : "boolean"
                    },
                    "SupplierId" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "TaxCode" : {
                      "description" : "Product tax  code, used for tax calculation.",
                      "type" : "string"
                    },
                    "Title" : {
                      "description" : "Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Product with Category and Brand",
        "tags" : [ "Product" ]
      }
    },
    "/api/catalog/pvt/product/{productId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a specific Product by its ID. This information is exactly what is needed to create a new Product. \r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.",
        "operationId" : "GetProductbyid",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "AdWordsRemarketingCode" : "",
                    "BrandId" : 12121219,
                    "CategoryId" : 2000090,
                    "DepartmentId" : 2000089,
                    "Description" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "DescriptionShort" : "The Nike Zoom Stefan Janoski is made with a premium leather.",
                    "Id" : 42,
                    "IsActive" : true,
                    "IsVisible" : true,
                    "KeyWords" : "Zoom,Stefan,Janoski",
                    "LinkId" : "stefan-janoski-canvas-varsity-red",
                    "LomadeeCampaignCode" : "",
                    "MetaTagDescription" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "Name" : "Zoom Stefan Janoski Canvas RM SB Varsity Red",
                    "RefId" : "sr_1_90",
                    "ReleaseDate" : "2020-01-01T00:00:00",
                    "Score" : 1,
                    "ShowWithoutStock" : true,
                    "SupplierId" : 1,
                    "TaxCode" : "",
                    "Title" : "Zoom Stefan Janoski Canvas RM SB Varsity Re"
                  },
                  "properties" : {
                    "AdWordsRemarketingCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "BrandId" : {
                      "description" : "Brand ID associated with this product.",
                      "type" : "integer"
                    },
                    "CategoryId" : {
                      "description" : "Category ID associated with this product.",
                      "type" : "integer"
                    },
                    "DepartmentId" : {
                      "description" : "Department ID according to the product's category.",
                      "type" : "integer"
                    },
                    "Description" : {
                      "description" : "Product description.",
                      "type" : "string"
                    },
                    "DescriptionShort" : {
                      "description" : "Short product description. This information can be displayed on both the product page and the shelf, using the following controls:\r\n Store Framework:  `$product.DescriptionShort`.\r\n Legacy CMS Portal: `<vtex.cmc:productDescriptionShort/>`.\r\n",
                      "type" : "string"
                    },
                    "Id" : {
                      "description" : "Product’s unique numerical identifier.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Activate (`true`) or inactivate (`false`) product.",
                      "type" : "boolean"
                    },
                    "IsVisible" : {
                      "description" : "Shows (`true`) or hides (`false`) the product in search result and product pages, but the product can still be added to the shopping cart. Usually applicable for gifts.",
                      "type" : "boolean"
                    },
                    "KeyWords" : {
                      "description" : "Store Framework: Deprecated. \r\nLegacy CMS Portal: Keywords or synonyms related to the product, separated by comma (`,`). \"Television\", for example, can have a substitute word like \"TV\". This field is important to make your searches more comprehensive.\r\n",
                      "type" : "string"
                    },
                    "LinkId" : {
                      "description" : "Slug that will be used to build the product page URL. If it not informed, it will be generated according to the product's name replacing spaces and special characters by hyphens (`-`).",
                      "type" : "string"
                    },
                    "LomadeeCampaignCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "MetaTagDescription" : {
                      "description" : "Brief description of the product for SEO. It is recommended not to exceed 150 characters.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Product's name. Limited to 150 characters.",
                      "type" : "string"
                    },
                    "RefId" : {
                      "description" : "Product Reference Code.",
                      "type" : "string"
                    },
                    "ReleaseDate" : {
                      "description" : "Used to assist in the ordering of the search result of the site. Using the `O=OrderByReleaseDateDESC` query string, you can pull this value and show the display order by release date. This attribute is also used as a condition for dynamic collections.",
                      "type" : "string"
                    },
                    "Score" : {
                      "description" : "Value used to set the priority on the search result page.",
                      "example" : 1,
                      "type" : "integer"
                    },
                    "ShowWithoutStock" : {
                      "description" : "If `true`, activates the [Notify Me](https://help.vtex.com/en/tutorial/setting-up-the-notify-me-option--2VqVifQuf6Co2KG048Yu6e) option when the product is out of stock.",
                      "type" : "boolean"
                    },
                    "SupplierId" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "TaxCode" : {
                      "description" : "Product tax code, used for tax calculation.",
                      "type" : "string"
                    },
                    "Title" : {
                      "description" : "Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product by ID",
        "tags" : [ "Product" ]
      },
      "put" : {
        "description" : "Updates an existing Product.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AdWordsRemarketingCode" : {
                    "deprecated" : true,
                    "description" : "This is a legacy field. Do not take this information into consideration.",
                    "type" : "string"
                  },
                  "BrandId" : {
                    "description" : "Brand ID associated with this product.",
                    "example" : 12121219,
                    "title" : "BrandId",
                    "type" : "integer"
                  },
                  "CategoryId" : {
                    "description" : "Category ID associated with this product.",
                    "example" : 2000090,
                    "title" : "CategoryId",
                    "type" : "integer"
                  },
                  "DepartmentId" : {
                    "description" : "Department ID according to the product's category.",
                    "example" : 2000089,
                    "title" : "DepartmentId",
                    "type" : "integer"
                  },
                  "Description" : {
                    "description" : "Product description.",
                    "example" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "title" : "Description",
                    "type" : "string"
                  },
                  "DescriptionShort" : {
                    "description" : "Short product description. This information can be displayed on both the product page and the shelf, using the following controls:\r\n Store Framework:  `$product.DescriptionShort`.\r\n Legacy CMS Portal: `<vtex.cmc:productDescriptionShort/>`.\r\n",
                    "example" : "The Nike Zoom Stefan Janoski is made with a premium leather.",
                    "title" : "DescriptionShort",
                    "type" : "string"
                  },
                  "IsActive" : {
                    "description" : "Activate (`true`) or inactivate (`false`) product.",
                    "example" : true,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "IsVisible" : {
                    "description" : "Shows (`true`) or hides (`false`) the product in search result and product pages, but the product can still be added to the shopping cart. Usually applicable for gifts.",
                    "example" : true,
                    "title" : "IsVisible",
                    "type" : "boolean"
                  },
                  "KeyWords" : {
                    "description" : "Store Framework: Deprecated. \r\nLegacy CMS Portal: Keywords or synonyms related to the product, separated by comma (`,`). \"Television\", for example, can have a substitute word like \"TV\". This field is important to make your searches more comprehensive.\r\n",
                    "example" : "Zoom,Stefan,Janoski",
                    "title" : "KeyWords",
                    "type" : "string"
                  },
                  "LinkId" : {
                    "description" : "Slug that will be used to build the product page URL. If it not informed, it will be generated according to the product's name replacing spaces and special characters by hyphens (`-`).",
                    "example" : "stefan-janoski-canvas-varsity-red",
                    "title" : "LinkId",
                    "type" : "string"
                  },
                  "LomadeeCampaignCode" : {
                    "deprecated" : true,
                    "description" : "This is a legacy field. Do not take this information into consideration.",
                    "type" : "string"
                  },
                  "MetaTagDescription" : {
                    "description" : "Brief description of the product for SEO. It is recommended not to exceed 150 characters.",
                    "example" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "title" : "MetaTagDescription",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "Product's name. Limited to 150 characters.",
                    "example" : "Zoom Stefan Janoski Canvas RM SB Varsity Red",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "RefId" : {
                    "description" : "Product Reference Code.",
                    "example" : "sr_1_90",
                    "title" : "RefId",
                    "type" : "string"
                  },
                  "ReleaseDate" : {
                    "description" : "Used to assist in the ordering of the search result of the site. Using the `O=OrderByReleaseDateDESC` query string, you can pull this value and show the display order by release date. This attribute is also used as a condition for dynamic collections.",
                    "example" : "2019-01-01T00:00:00",
                    "title" : "ReleaseDate",
                    "type" : "string"
                  },
                  "Score" : {
                    "description" : "Value used to set the priority on the search result page.",
                    "example" : 1,
                    "title" : "Score",
                    "type" : "integer"
                  },
                  "ShowWithoutStock" : {
                    "description" : "If `true`, activates the [Notify Me](https://help.vtex.com/en/tutorial/setting-up-the-notify-me-option--2VqVifQuf6Co2KG048Yu6e) option when the product is out of stock.",
                    "example" : true,
                    "title" : "ShowWithoutStock",
                    "type" : "boolean"
                  },
                  "SupplierId" : {
                    "deprecated" : true,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "TaxCode" : {
                    "description" : "Product tax code, used for tax calculation.",
                    "example" : "12345",
                    "title" : "TaxCode",
                    "type" : "string"
                  },
                  "Title" : {
                    "description" : "Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.",
                    "example" : "Zoom Stefan Janoski Canvas RM SB Varsity Red",
                    "title" : "Title",
                    "type" : "string"
                  }
                },
                "required" : [ "Name", "CategoryId", "BrandId" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "AdWordsRemarketingCode" : "",
                    "BrandId" : 12121219,
                    "CategoryId" : 2000090,
                    "DepartmentId" : 2000089,
                    "Description" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "DescriptionShort" : "The Nike Zoom Stefan Janoski is made with a premium leather.",
                    "Id" : 42,
                    "IsActive" : true,
                    "IsVisible" : true,
                    "KeyWords" : "Zoom,Stefan,Janoski",
                    "LinkId" : "stefan-janoski-canvas-varsity-red",
                    "LomadeeCampaignCode" : "",
                    "MetaTagDescription" : "The Nike Zoom Stefan Janoski Men's Shoe is made with a premium leather upper for superior durability and a flexible midsole for all-day comfort. A tacky gum rubber outsole delivers outstanding traction.",
                    "Name" : "Zoom Stefan Janoski Canvas RM SB Varsity Red",
                    "RefId" : "sr_1_90",
                    "ReleaseDate" : "2020-01-01T00:00:00",
                    "Score" : 1,
                    "ShowWithoutStock" : true,
                    "SupplierId" : 1,
                    "TaxCode" : "",
                    "Title" : "Zoom Stefan Janoski Canvas RM SB Varsity Re"
                  },
                  "properties" : {
                    "AdWordsRemarketingCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "BrandId" : {
                      "description" : "Brand ID associated with this product.",
                      "type" : "integer"
                    },
                    "CategoryId" : {
                      "description" : "Category ID associated with this product.",
                      "type" : "integer"
                    },
                    "DepartmentId" : {
                      "description" : "Department ID according to the product's category.",
                      "type" : "integer"
                    },
                    "Description" : {
                      "description" : "Product description.",
                      "type" : "string"
                    },
                    "DescriptionShort" : {
                      "description" : "Short product description. This information can be displayed on both the product page and the shelf, using the following controls:\r\n Store Framework:  `$product.DescriptionShort`.\r\n Legacy CMS Portal: `<vtex.cmc:productDescriptionShort/>`.\r\n",
                      "title" : "DescriptionShort",
                      "type" : "string"
                    },
                    "Id" : {
                      "description" : "Product’s unique numerical identifier.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Activate (`true`) or inactivate (`false`) product.",
                      "type" : "boolean"
                    },
                    "IsVisible" : {
                      "description" : "Shows (`true`) or hides (`false`) the product in search result and product pages, but the product can still be added to the shopping cart. Usually applicable for gifts.",
                      "type" : "boolean"
                    },
                    "KeyWords" : {
                      "description" : "Store Framework: Deprecated. \r\nLegacy CMS Portal:  Keywords or synonyms related to the product, separated by comma (`,`). \"Television\", for example, can have a substitute word like \"TV\". This field is important to make your searches more comprehensive.\r\n",
                      "type" : "string"
                    },
                    "LinkId" : {
                      "description" : "Slug that will be used to build the product page URL. If it not informed, it will be generated according to the product's name replacing spaces and special characters by hyphens (`-`).",
                      "type" : "string"
                    },
                    "LomadeeCampaignCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "MetaTagDescription" : {
                      "description" : "Brief description of the product for SEO. It's recommended that you don't exceed 150 characters.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Product's name. Limited to 150 characters.",
                      "type" : "string"
                    },
                    "RefId" : {
                      "description" : "Product Reference Code.",
                      "type" : "string"
                    },
                    "ReleaseDate" : {
                      "description" : "Used to assist in the ordering of the search result of the site. Using the `O=OrderByReleaseDateDESC` query string, you can pull this value and show the display order by release date. This attribute is also used as a condition for dynamic collections.",
                      "type" : "string"
                    },
                    "Score" : {
                      "description" : "Value used to set the priority on the search result page.",
                      "type" : "integer"
                    },
                    "ShowWithoutStock" : {
                      "description" : "If `true`, activates the [Notify Me](https://help.vtex.com/en/tutorial/setting-up-the-notify-me-option--2VqVifQuf6Co2KG048Yu6e) option when the product is out of stock.",
                      "type" : "boolean"
                    },
                    "SupplierId" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "TaxCode" : {
                      "description" : "Product tax  code, used for tax calculation.",
                      "type" : "string"
                    },
                    "Title" : {
                      "description" : "Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Product",
        "tags" : [ "Product" ]
      }
    },
    "/api/catalog/pvt/product/{productId}/salespolicy" : {
      "get" : {
        "description" : "Retrieves a list of Trade Policies associated to a Product based on the Product's ID. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"ProductId\": 1,\r\n        \"StoreId\": 1\r\n    },\r\n    {\r\n        \"ProductId\": 1,\r\n        \"StoreId\": 2\r\n    },\r\n    {\r\n        \"ProductId\": 1,\r\n        \"StoreId\": 3\r\n    },\r\n    {\r\n        \"ProductId\": 1,\r\n        \"StoreId\": 4\r\n    }\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "description" : "Object containing the Product ID and the Trade Policy ID.",
                    "properties" : {
                      "ProductId" : {
                        "description" : "Product’s unique numerical identifier.",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "StoreId" : {
                        "description" : "Trade policy's unique numerical identifier.",
                        "example" : 1,
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Trade Policies by Product ID",
        "tags" : [ "Trade Policy" ]
      }
    },
    "/api/catalog/pvt/product/{productId}/salespolicy/{tradepolicyId}" : {
      "delete" : {
        "description" : "Disassociates a Trade Policy of a Product.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Trade Policy’s unique numerical identifier.",
          "in" : "path",
          "name" : "tradepolicyId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Remove Product from Trade Policy",
        "tags" : [ "Trade Policy" ]
      },
      "post" : {
        "description" : "Associates an existing Trade Policy with a Product.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Trade Policy’s unique numerical identifier.",
          "in" : "path",
          "name" : "tradepolicyId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Associate Product with Trade Policy",
        "tags" : [ "Trade Policy" ]
      }
    },
    "/api/catalog/pvt/product/{productId}/similarcategory/" : {
      "get" : {
        "description" : "Retrieves Similar Categories from a Product.\r\n\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"ProductId\": 1,\r\n        \"CategoryId\": 1\r\n    },\r\n    {\r\n        \"ProductId\": 1,\r\n        \"CategoryId\": 20\r\n    }\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "CategoryId" : 1,
                  "ProductId" : 1
                }, {
                  "CategoryId" : 20,
                  "ProductId" : 1
                } ],
                "schema" : {
                  "description" : "Array of objects with similar category information.",
                  "items" : {
                    "description" : "Object containing Product ID and Similar Category ID.",
                    "properties" : {
                      "CategoryId" : {
                        "description" : "Similar Category ID.",
                        "example" : 20,
                        "type" : "integer"
                      },
                      "ProductId" : {
                        "description" : "Product ID.",
                        "example" : 1,
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Similar Categories",
        "tags" : [ "Similar Category" ]
      }
    },
    "/api/catalog/pvt/product/{productId}/similarcategory/{categoryId}" : {
      "delete" : {
        "description" : "Deletes a Similar Category from a Product.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Similar Category’s unique numerical identifier.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Similar Category",
        "tags" : [ "Similar Category" ]
      },
      "post" : {
        "description" : "Adds a Similar Category to a Product.\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"ProductId\": 1,\r\n    \"StoreId\": 1\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Similar Category’s unique numerical identifier.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ProductId" : 1,
                  "StoreId" : 1
                },
                "schema" : {
                  "description" : "Object containing information related to the similar category.",
                  "properties" : {
                    "ProductId" : {
                      "description" : "Product ID.",
                      "example" : 1,
                      "type" : "integer"
                    },
                    "StoreId" : {
                      "description" : "Trade Policy ID.",
                      "example" : 1,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Add Similar Category",
        "tags" : [ "Similar Category" ]
      }
    },
    "/api/catalog/pvt/product/{productId}/specification" : {
      "delete" : {
        "description" : "Deletes all Product Specifications given a specific Product ID.",
        "operationId" : "DeleteAllProductSpecifications",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete all Product Specifications by Product ID",
        "tags" : [ "Product Specification" ]
      },
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves information of all specifications of a product by the product's ID.\r\n\r\n ### Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 227,\r\n        \"ProductId\": 1,\r\n        \"FieldId\": 33,\r\n        \"FieldValueId\": 135,\r\n        \"Text\": \"ValueA\"\r\n    },\r\n    {\r\n        \"Id\": 228,\r\n        \"ProductId\": 1,\r\n        \"FieldId\": 34,\r\n        \"FieldValueId\": 1,\r\n        \"Text\": \"Giant\"\r\n    }\r\n]\r\n```",
        "operationId" : "GetProductSpecificationbyProductID",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : [ {
                    "FieldId" : 33,
                    "FieldValueId" : 135,
                    "Id" : 227,
                    "ProductId" : 1,
                    "Text" : "ValueA"
                  }, {
                    "FieldId" : 34,
                    "FieldValueId" : 1,
                    "Id" : 228,
                    "ProductId" : 1,
                    "Text" : "Giant"
                  } ],
                  "items" : {
                    "description" : "Object with the product specification information.",
                    "properties" : {
                      "FieldId" : {
                        "description" : "Specification ID.",
                        "type" : "integer"
                      },
                      "FieldValueId" : {
                        "description" : "Current specification value ID.",
                        "type" : "integer"
                      },
                      "Id" : {
                        "description" : "ID of the association of the specification and the product. This ID is used to update or delete the specification.",
                        "type" : "integer"
                      },
                      "ProductId" : {
                        "description" : "Product ID.",
                        "type" : "integer"
                      },
                      "Text" : {
                        "description" : "Current specification value text.",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "title" : "",
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product Specification and its information by Product ID",
        "tags" : [ "Product Specification" ]
      },
      "post" : {
        "description" : "Associates a previously defined Specification to a Product.\r\n\r\n### Request body example\r\n\r\n```json\r\n{\r\n    \"FieldId\": 19,\r\n    \"FieldValueId\": 1,\r\n    \"Text\": \"test\"\r\n}\r\n```\r\n\r\n### Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 41,\r\n    \"FieldId\": 19,\r\n    \"FieldValueId\": 1,\r\n    \"Text\": \"test\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FieldId" : {
                    "description" : "Specification ID.",
                    "example" : 19,
                    "title" : "Fieldid",
                    "type" : "integer"
                  },
                  "FieldValueId" : {
                    "description" : "Specification Value ID. Mandatory for `FieldTypeId` `5`, `6` and `7`. Must not be used for any other field types",
                    "example" : 12,
                    "title" : "Fieldvalueid",
                    "type" : "integer"
                  },
                  "Text" : {
                    "description" : "Value of specification. Only for `FieldTypeId` different from `5`, `6` and `7`.",
                    "example" : "Metal",
                    "title" : "Text",
                    "type" : "string"
                  }
                },
                "required" : [ "FieldId" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "FieldId" : 19,
                    "FieldValueId" : 1,
                    "Id" : 41,
                    "Text" : "test"
                  },
                  "properties" : {
                    "FieldId" : {
                      "description" : "Specification ID.",
                      "type" : "integer"
                    },
                    "FieldValueId" : {
                      "description" : "Specification Value ID. Mandatory for `FieldTypeId` `5`, `6` and `7`. Must not be used for any other field types",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "ID of the association of the specification and the product. This ID is used to update or delete the specification.",
                      "type" : "integer"
                    },
                    "ProductId" : {
                      "description" : "Product ID.",
                      "type" : "integer"
                    },
                    "Text" : {
                      "description" : "Value of specification. Only for `FieldTypeId` different from `5`, `6` and `7`.",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate Product Specification",
        "tags" : [ "Product Specification" ]
      }
    },
    "/api/catalog/pvt/product/{productId}/specification/{specificationId}" : {
      "delete" : {
        "description" : "Deletes a specific Product Specification given a Product ID and a Specification ID.",
        "operationId" : "DeleteaProductSpecification",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Product Specification’s unique numerical identifier.",
          "in" : "path",
          "name" : "specificationId",
          "required" : true,
          "schema" : {
            "example" : 7,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete a specific Product Specification",
        "tags" : [ "Product Specification" ]
      }
    },
    "/api/catalog/pvt/product/{productId}/specificationvalue" : {
      "put" : {
        "description" : "Associates a specification to a product using specification name and group name. Automatically creates the informed group, specification and values if they had not been created before.\r\n\r\n ## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldName\": \"Material\",\r\n    \"GroupName\": \"Additional Information\",\r\n    \"RootLevelSpecification\": false,\r\n    \"FieldValues\": [\r\n        \"Cotton\",\r\n       \"Polyester\"\r\n        ]\r\n}\r\n```\r\n \r\n \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 53,\r\n        \"ProductId\": 3,\r\n        \"FieldId\": 21,\r\n        \"FieldValueId\": 60,\r\n        \"Text\": \"Cotton\"\r\n    },\r\n    {\r\n        \"Id\": 54,\r\n        \"ProductId\": 3,\r\n        \"FieldId\": 21,\r\n        \"FieldValueId\": 61,\r\n        \"Text\": \"Polyester\"\r\n    }\r\n]\r\n```\r\n",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "description" : "",
                "example" : {
                  "FieldName" : "Material",
                  "FieldValues" : [ "Cotton", "Polyester" ],
                  "GroupName" : "Composition",
                  "RootLevelSpecification" : true
                },
                "properties" : {
                  "FieldName" : {
                    "description" : "Specification name.",
                    "example" : "Material",
                    "type" : "string"
                  },
                  "FieldValues" : {
                    "description" : "Array of specification values.",
                    "example" : [ "Cotton", "Polyester" ],
                    "items" : {
                      "description" : "Specification value.",
                      "example" : "Cotton",
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "GroupName" : {
                    "description" : "Group name.",
                    "example" : "Composition",
                    "type" : "string"
                  },
                  "RootLevelSpecification" : {
                    "description" : "Root level specification.",
                    "example" : true,
                    "type" : "boolean"
                  }
                },
                "required" : [ "FieldName", "GroupName", "RootLevelSpecification", "FieldValues" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Array with information of all product specifications.",
                  "example" : [ {
                    "FieldId" : 85,
                    "FieldValueId" : 193,
                    "Id" : 239,
                    "ProductId" : 1,
                    "Text" : "Value123"
                  } ],
                  "items" : {
                    "description" : "Object with information of the specification.",
                    "properties" : {
                      "FieldId" : {
                        "description" : "Specification ID.",
                        "type" : "integer"
                      },
                      "FieldValueId" : {
                        "description" : "Current specification value ID.",
                        "type" : "integer"
                      },
                      "Id" : {
                        "description" : "ID of the association of the Product and the specification.",
                        "type" : "integer"
                      },
                      "ProductId" : {
                        "description" : "Product ID.",
                        "type" : "integer"
                      },
                      "Text" : {
                        "description" : "Current specification value text.",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "title" : "",
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate product specification using specification name and group name",
        "tags" : [ "Product Specification" ]
      }
    },
    "/api/catalog/pvt/skuattachment" : {
      "delete" : {
        "description" : "Dissociates attachments and SKUs based on an SKU ID or an attachment ID.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU ID. By using this query param, you can dissociate all the attachments from an SKU based on its SKU ID.",
          "explode" : true,
          "in" : "query",
          "name" : "skuId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Attachment ID. By using this query param, you can dissociate the given attachment from all previously associated SKUs.",
          "explode" : true,
          "in" : "query",
          "name" : "attachmentId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Dissociate attachments and SKUs",
        "tags" : [ "SKU Attachment" ]
      },
      "post" : {
        "description" : "Associates an existing SKU to an existing Attachment. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"AttachmentId\": 1,\r\n    \"SkuId\": 7\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 31,\r\n    \"AttachmentId\": 1,\r\n    \"SkuId\": 7\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AttachmentId" : {
                    "description" : "Attachment ID.",
                    "example" : 1,
                    "title" : "AttachmentId",
                    "type" : "integer"
                  },
                  "SkuId" : {
                    "description" : "Unique identifier of an SKU.",
                    "example" : 1,
                    "title" : "SkuId",
                    "type" : "integer"
                  }
                },
                "required" : [ "AttachmentId", "SkuId" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "AttachmentId" : 1,
                  "Id" : 31,
                  "SkuId" : 7
                },
                "schema" : {
                  "description" : "Object containing information about the association between the SKU and the attachment.",
                  "properties" : {
                    "AttachmentId" : {
                      "description" : "Attachment ID.",
                      "example" : 1,
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Identifier of the SKU's association to the attachment.",
                      "example" : 31,
                      "type" : "integer"
                    },
                    "SkuId" : {
                      "description" : "Unique identifier of the SKU.",
                      "example" : 7,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate SKU Attachment",
        "tags" : [ "SKU Attachment" ]
      }
    },
    "/api/catalog/pvt/skuattachment/{skuAttachmentAssociationId}" : {
      "delete" : {
        "description" : "Deletes the association of an SKU to an Attachment.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of the association between the attachment and the SKU, which corresponds to the `Id` in the response body of the [Associate SKU Attachment](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-post-sku-attachment) and the [Get SKU Attachment by SKU ID](https://developers.vtex.com/vtex-rest-api/reference/get_api-catalog-pvt-stockkeepingunit-skuid-attachment) endpoints.",
          "in" : "path",
          "name" : "skuAttachmentAssociationId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Attachment by Attachment Association ID",
        "tags" : [ "SKU Attachment" ]
      }
    },
    "/api/catalog/pvt/skucomplement" : {
      "post" : {
        "description" : "Creates a new SKU Complement on a Parent SKU. \r\n\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"SkuId\": 2,\r\n    \"ParentSkuId\": 1,\r\n    \"ComplementTypeId\": 2\r\n}\r\n```\r\n \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 62,\r\n    \"SkuId\": 2,\r\n    \"ParentSkuId\": 1,\r\n    \"ComplementTypeId\": 2\r\n}\r\n```",
        "operationId" : "CreateSKUComplement",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "example" : {
                  "ComplementTypeId" : 2,
                  "ParentSkuId" : 1,
                  "SkuId" : 2
                },
                "properties" : {
                  "ComplementTypeId" : {
                    "description" : "Complement Type ID. This represents the type of the complement. The possible values are: `1` for Accessory; `2` for Suggestion; `3` for Similar Product; `5` for Show Together.",
                    "example" : 1,
                    "title" : "ComplementTypeId",
                    "type" : "integer"
                  },
                  "ParentSkuId" : {
                    "description" : "ID of the Parent SKU, where the Complement is inserted.",
                    "example" : 1,
                    "title" : "ParentSkuId",
                    "type" : "integer"
                  },
                  "SkuId" : {
                    "description" : "ID of the SKU which will be inserted as a Complement in the Parent SKU.",
                    "example" : 1,
                    "title" : "SkuId",
                    "type" : "integer"
                  }
                },
                "required" : [ "ParentSkuId", "SkuId", "ComplementTypeId" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "ComplementTypeId" : 1,
                  "Id" : 61,
                  "ParentSkuId" : 1,
                  "SkuId" : 7
                } ],
                "schema" : {
                  "$ref" : "#/components/schemas/SkuComplement"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create SKU Complement",
        "tags" : [ "SKU Complement" ]
      }
    },
    "/api/catalog/pvt/skucomplement/{skuComplementId}" : {
      "delete" : {
        "description" : "Deletes a previously existing SKU Complement by SKU Complement ID.",
        "operationId" : "DeleteSKUComplementbySKUComplementID",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Complement’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuComplementId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Complement by SKU Complement ID",
        "tags" : [ "SKU Complement" ]
      },
      "get" : {
        "description" : "Retrieves an existing SKU Complement by its SKU Complement ID. \r\n \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 62,\r\n    \"SkuId\": 2,\r\n    \"ParentSkuId\": 1,\r\n    \"ComplementTypeId\": 2\r\n}\r\n```",
        "operationId" : "GetSKUComplementbySKUComplementID",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Complement’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuComplementId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "ComplementTypeId" : 1,
                  "Id" : 61,
                  "ParentSkuId" : 1,
                  "SkuId" : 7
                } ],
                "schema" : {
                  "$ref" : "#/components/schemas/SkuComplement"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Complement by SKU Complement ID",
        "tags" : [ "SKU Complement" ]
      }
    },
    "/api/catalog/pvt/skuservice" : {
      "post" : {
        "description" : "Associates an SKU Service to an SKU.",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "IsActive" : {
                    "description" : "Defines if the SKU Service is active or not.",
                    "example" : true,
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "SKU Service Name. Maximum of 50 characters.",
                    "example" : "Engraving",
                    "type" : "string"
                  },
                  "SkuId" : {
                    "description" : "SKU ID.",
                    "example" : 1,
                    "type" : "integer"
                  },
                  "SkuServiceTypeId" : {
                    "description" : "SKU Service Type ID.",
                    "example" : 1,
                    "type" : "integer"
                  },
                  "SkuServiceValueId" : {
                    "description" : "SKU Service Value ID.",
                    "example" : 1,
                    "type" : "integer"
                  },
                  "Text" : {
                    "description" : "Internal description of the SKU Service. Maximum of 100 characters.",
                    "example" : "Name engraving additional service.",
                    "type" : "string"
                  }
                },
                "required" : [ "SkuServiceTypeId", "SkuServiceValueId", "SkuId", "Name", "Text", "IsActive" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUService"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate SKU Service",
        "tags" : [ "SKU Service" ]
      }
    },
    "/api/catalog/pvt/skuservice/{skuServiceId}" : {
      "delete" : {
        "description" : "Dissociates an SKU Service from an SKU.",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service unique identifier.",
          "in" : "path",
          "name" : "skuServiceId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Dissociate SKU Service",
        "tags" : [ "SKU Service" ]
      },
      "get" : {
        "description" : "Retrieves an SKU Service. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"SkuServiceTypeId\": 1,\r\n    \"SkuServiceValueId\": 1,\r\n    \"SkuId\": 1,\r\n    \"Name\": \"name\",\r\n    \"Text\": \"text\",\r\n    \"IsActive\": false\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service unique identifier.",
          "in" : "path",
          "name" : "skuServiceId",
          "required" : true,
          "schema" : {
            "example" : 5,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUService"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Service",
        "tags" : [ "SKU Service" ]
      },
      "put" : {
        "description" : "Updates an SKU Service. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"name\",\r\n    \"Text\": \"text\",\r\n    \"IsActive\": false\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"SkuServiceTypeId\": 1,\r\n    \"SkuServiceValueId\": 1,\r\n    \"SkuId\": 1,\r\n    \"Name\": \"name\",\r\n    \"Text\": \"text\",\r\n    \"IsActive\": false\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service unique identifier.",
          "in" : "path",
          "name" : "skuServiceId",
          "required" : true,
          "schema" : {
            "example" : 5,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "IsActive" : {
                    "description" : "Defines if the SKU Service is active or not.",
                    "example" : true,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "SKU Service Name. Maximum of 50 characters.",
                    "example" : "Test name",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "SkuId" : {
                    "description" : "SKU ID.",
                    "example" : 1,
                    "title" : "SkuId",
                    "type" : "integer"
                  },
                  "SkuServiceTypeId" : {
                    "description" : "SKU Service Type ID.",
                    "example" : 2,
                    "title" : "SkuServiceTypeId",
                    "type" : "integer"
                  },
                  "SkuServiceValueId" : {
                    "description" : "SKU Service Value ID.",
                    "example" : 1,
                    "title" : "SkuServiceValueId",
                    "type" : "integer"
                  },
                  "Text" : {
                    "description" : "Internal description for the SKU Service. Maximum of 100 characters.",
                    "example" : "Text",
                    "title" : "Text",
                    "type" : "string"
                  }
                },
                "required" : [ "SkuServiceTypeId", "SkuServiceValueId", "SkuId", "Name", "Text", "IsActive" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUService"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SKU Service",
        "tags" : [ "SKU Service" ]
      }
    },
    "/api/catalog/pvt/skuservicetype" : {
      "post" : {
        "description" : "Creates a new SKU Service Type. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Test API Sku Services\",\r\n    \"IsActive\": true,\r\n    \"ShowOnProductFront\": true,\r\n    \"ShowOnCartFront\": true,\r\n    \"ShowOnAttachmentFront\": true,\r\n    \"ShowOnFileUpload\": true,\r\n    \"IsGiftCard\": true,\r\n    \"IsRequired\": true\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 2,\r\n    \"Name\": \"Teste API Sku Services\",\r\n    \"IsActive\": true,\r\n    \"ShowOnProductFront\": true,\r\n    \"ShowOnCartFront\": true,\r\n    \"ShowOnAttachmentFront\": true,\r\n    \"ShowOnFileUpload\": true,\r\n    \"IsGiftCard\": true,\r\n    \"IsRequired\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SKUServiceTypeRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUServiceTypeResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create SKU Service Type",
        "tags" : [ "SKU Service Type" ]
      }
    },
    "/api/catalog/pvt/skuservicetype/{skuServiceTypeId}" : {
      "delete" : {
        "description" : "Deletes an existing SKU Service Type.",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Type unique identifier.",
          "in" : "path",
          "name" : "skuServiceTypeId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Service Type",
        "tags" : [ "SKU Service Type" ]
      },
      "get" : {
        "description" : "Retrieves information about an existing SKU Service Type. \r\n## Response body example:\r\n\r\n```json\r\n{\r\n    \"Id\": 2,\r\n    \"Name\": \"Test API SKU Services\",\r\n    \"IsActive\": true,\r\n    \"ShowOnProductFront\": true,\r\n    \"ShowOnCartFront\": true,\r\n    \"ShowOnAttachmentFront\": true,\r\n    \"ShowOnFileUpload\": true,\r\n    \"IsGiftCard\": true,\r\n    \"IsRequired\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Type unique identifier.",
          "in" : "path",
          "name" : "skuServiceTypeId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUServiceTypeResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Service Type",
        "tags" : [ "SKU Service Type" ]
      },
      "put" : {
        "description" : "Updates an existing SKU Service Type.  \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Test API Sku Services\",\r\n    \"IsActive\": true,\r\n    \"ShowOnProductFront\": true,\r\n    \"ShowOnCartFront\": true,\r\n    \"ShowOnAttachmentFront\": true,\r\n    \"ShowOnFileUpload\": true,\r\n    \"IsGiftCard\": true,\r\n    \"IsRequired\": true\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 2,\r\n    \"Name\": \"Teste API Sku Services\",\r\n    \"IsActive\": true,\r\n    \"ShowOnProductFront\": true,\r\n    \"ShowOnCartFront\": true,\r\n    \"ShowOnAttachmentFront\": true,\r\n    \"ShowOnFileUpload\": true,\r\n    \"IsGiftCard\": true,\r\n    \"IsRequired\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Type unique identifier.",
          "in" : "path",
          "name" : "skuServiceTypeId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SKUServiceTypeRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUServiceTypeResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SKU Service Type",
        "tags" : [ "SKU Service Type" ]
      }
    },
    "/api/catalog/pvt/skuservicetypeattachment" : {
      "delete" : {
        "description" : "Dissociates an Attachment by its Attachment ID or SKU Service Type ID from an SKU Service Type.",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Attachment unique identifier.",
          "in" : "query",
          "name" : "attachmentId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "SKU Service Type unique identifier.",
          "in" : "query",
          "name" : "skuServiceTypeId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Dissociate Attachment by Attachment ID or SKU Service Type ID",
        "tags" : [ "SKU Service Attachment" ]
      },
      "post" : {
        "description" : "Associates an Attachment for an existing SKU Service Type. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"AttachmentId\": 1,\r\n    \"SkuServiceTypeId\": 1\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"AttachmentId\": 1,\r\n    \"SkuServiceTypeId\": 1\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "AttachmentId" : {
                    "description" : "Attachment ID.",
                    "example" : 1,
                    "title" : "AttachmentId",
                    "type" : "integer"
                  },
                  "SkuServiceTypeId" : {
                    "description" : "An explanation about the purpose of this instance.",
                    "example" : 1,
                    "title" : "SkuServiceTypeId",
                    "type" : "integer"
                  }
                },
                "required" : [ "AttachmentId", "SkuServiceTypeId" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "AttachmentId" : {
                      "description" : "Attachment ID.",
                      "example" : 1,
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "SKU Service Type Attachment association ID.",
                      "example" : 1,
                      "type" : "integer"
                    },
                    "SkuServiceTypeId" : {
                      "description" : "SKU Service Type ID.",
                      "example" : 1,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate SKU Service Attachment",
        "tags" : [ "SKU Service Attachment" ]
      }
    },
    "/api/catalog/pvt/skuservicetypeattachment/{skuServiceTypeAttachmentId}" : {
      "delete" : {
        "description" : "Dissociates an Attachment from an SKU Service Type",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Attachment unique identifier.",
          "in" : "path",
          "name" : "skuServiceTypeAttachmentId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Dissociate Attachment from SKU Service Type",
        "tags" : [ "SKU Service Attachment" ]
      }
    },
    "/api/catalog/pvt/skuservicevalue" : {
      "post" : {
        "description" : "Creates an SKU Service Value for an existing SKU Service Type. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"SkuServiceTypeId\": 2,\r\n    \"Name\": \"Test ServiceValue API\",\r\n    \"Value\": 10.5,\r\n    \"Cost\": 10.5\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 2,\r\n    \"SkuServiceTypeId\": 2,\r\n    \"Name\": \"Test ServiceValue API\",\r\n    \"Value\": 10.5,\r\n    \"Cost\": 10.5\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SKUServiceValueRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUServiceValueResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create SKU Service Value",
        "tags" : [ "SKU Service Value" ]
      }
    },
    "/api/catalog/pvt/skuservicevalue/{skuServiceValueId}" : {
      "delete" : {
        "description" : "Deletes an existing SKU Service Value.",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Value unique identifier.",
          "in" : "path",
          "name" : "skuServiceValueId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Service Value",
        "tags" : [ "SKU Service Value" ]
      },
      "get" : {
        "description" : "Retrieves an existing SKU Service Value. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 2,\r\n    \"SkuServiceTypeId\": 2,\r\n    \"Name\": \"Test ServiceValue API\",\r\n    \"Value\": 10.5,\r\n    \"Cost\": 10.5\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Value unique identifier.",
          "in" : "path",
          "name" : "skuServiceValueId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUServiceValueResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Service Value",
        "tags" : [ "SKU Service Value" ]
      },
      "put" : {
        "description" : "Updates an existing SKU Service Value. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"SkuServiceTypeId\": 2,\r\n    \"Name\": \"Test ServiceValue API\",\r\n    \"Value\": 10.5,\r\n    \"Cost\": 10.5\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 2,\r\n    \"SkuServiceTypeId\": 2,\r\n    \"Name\": \"Test ServiceValue API\",\r\n    \"Value\": 10.5,\r\n    \"Cost\": 10.5\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Service Value unique identifier.",
          "in" : "path",
          "name" : "skuServiceValueId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SKUServiceValueRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUServiceValueResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SKU Service Value",
        "tags" : [ "SKU Service Value" ]
      }
    },
    "/api/catalog/pvt/specification" : {
      "post" : {
        "description" : "Creates a new Product or SKU Specification. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldTypeId\": 1,\r\n    \"CategoryId\": 4,\r\n    \"FieldGroupId\": 20,\r\n    \"Name\": \"Material\",\r\n    \"Description\": \"Composition of the product.\",\r\n    \"Position\": 1,\r\n    \"IsFilter\": true,\r\n    \"IsRequired\": true,\r\n    \"IsOnProductDetails\": false,\r\n    \"IsStockKeepingUnit\": false,\r\n    \"IsActive\": true,\r\n    \"IsTopMenuLinkActive\": false,\r\n    \"IsSideMenuLinkActive\": true,\r\n    \"DefaultValue\": \"Cotton\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 88,\r\n    \"FieldTypeId\": 1,\r\n    \"CategoryId\": 4,\r\n    \"FieldGroupId\": 20,\r\n    \"Name\": \"Material\",\r\n    \"Description\": \"Composition of the product.\",\r\n    \"Position\": 1,\r\n    \"IsFilter\": true,\r\n    \"IsRequired\": true,\r\n    \"IsOnProductDetails\": false,\r\n    \"IsStockKeepingUnit\": false,\r\n    \"IsWizard\": false,\r\n    \"IsActive\": true,\r\n    \"IsTopMenuLinkActive\": false,\r\n    \"IsSideMenuLinkActive\": true,\r\n    \"DefaultValue\": \"Cotton\"\r\n}\r\n```\r\n",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "CategoryId" : {
                    "description" : "Category ID associated with this specification.",
                    "example" : 1,
                    "title" : "CategoryId",
                    "type" : "integer"
                  },
                  "DefaultValue" : {
                    "description" : "Specification default value.",
                    "example" : "Cotton",
                    "title" : "DefaultValue",
                    "type" : "string"
                  },
                  "Description" : {
                    "deprecated" : true,
                    "example" : "Composition of the product.",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "FieldGroupId" : {
                    "description" : "ID of the group of specifications that contains the new specification.",
                    "example" : 22,
                    "title" : "FieldGroupId",
                    "type" : "integer"
                  },
                  "FieldTypeId" : {
                    "description" : "Field Type ID can be `1 - Text`, `2 - Multi-Line Text`, `4 - Number`, `5 - Combo`, `6 - Radio`, `7 - Checkbox`, `8 - Indexed Text`, `9 - Indexed Multi-Line Text`.",
                    "example" : 1,
                    "title" : "FieldTypeId",
                    "type" : "integer"
                  },
                  "IsActive" : {
                    "description" : "Enable (`true`) or disable (`false`) specification.",
                    "example" : true,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "IsFilter" : {
                    "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To allow the specification to be used as a facet (filter) on the search navigation bar.\r\n",
                    "example" : false,
                    "title" : "IsFilter",
                    "type" : "boolean"
                  },
                  "IsOnProductDetails" : {
                    "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal -If specification is visible on the product page.\r\n",
                    "example" : true,
                    "title" : "IsOnProductDetails",
                    "type" : "boolean"
                  },
                  "IsRequired" : {
                    "description" : "Makes the specification mandatory (`true`) or optional (`false`).",
                    "example" : false,
                    "title" : "IsRequired",
                    "type" : "boolean"
                  },
                  "IsSideMenuLinkActive" : {
                    "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification field clickable in the search navigation bar.\r\n",
                    "example" : false,
                    "title" : "IsSideMenuLinkActive",
                    "type" : "boolean"
                  },
                  "IsStockKeepingUnit" : {
                    "description" : "If `true`, it will be added as a SKU specification. If `false`, it will be added as a product specification field.",
                    "example" : false,
                    "title" : "IsStockKeepingUnit",
                    "type" : "boolean"
                  },
                  "IsTopMenuLinkActive" : {
                    "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification visible in the store's upper menu.\r\n",
                    "example" : false,
                    "title" : "IsTopMenuLinkActive",
                    "type" : "boolean"
                  },
                  "IsWizard" : {
                    "deprecated" : true,
                    "nullable" : true,
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "Specification name.",
                    "example" : "Material",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Position" : {
                    "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - This position number is used in ordering the specifications both in the navigation menu and in the specification listing on the product page.\r\n",
                    "example" : 1,
                    "title" : "Position",
                    "type" : "integer"
                  }
                },
                "required" : [ "FieldTypeId", "FieldGroupId", "Name" ],
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CategoryId" : 4,
                  "DefaultValue" : "Cotton",
                  "Description" : "Composition of the product.",
                  "FieldGroupId" : 20,
                  "FieldTypeId" : 1,
                  "Id" : 88,
                  "IsActive" : true,
                  "IsFilter" : true,
                  "IsOnProductDetails" : false,
                  "IsRequired" : true,
                  "IsSideMenuLinkActive" : true,
                  "IsStockKeepingUnit" : false,
                  "IsTopMenuLinkActive" : false,
                  "IsWizard" : false,
                  "Name" : "Material",
                  "Position" : 1
                },
                "schema" : {
                  "properties" : {
                    "CategoryId" : {
                      "description" : "Category ID associated with this specification.",
                      "type" : "integer"
                    },
                    "DefaultValue" : {
                      "description" : "Specification default value.",
                      "type" : "string"
                    },
                    "Description" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FieldGroupId" : {
                      "description" : "ID of the group of specifications that contains the new specification.",
                      "type" : "integer"
                    },
                    "FieldTypeId" : {
                      "description" : "Field Type ID can be `1 - Text`, `2 - Multi-Line Text`, `4 - Number`, `5 - Combo`, `6 - Radio`, `7 - Checkbox`, `8 - Indexed Text`, `9 - Indexed Multi-Line Text`.",
                      "title" : "The FieldTypeId schema",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Specification ID.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Enable (`true`) or disable (`false`) specification.",
                      "type" : "boolean"
                    },
                    "IsFilter" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To allow the specification to be used as a facet (filter) on the search navigation bar.\r\n",
                      "type" : "boolean"
                    },
                    "IsOnProductDetails" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal -If specification is visible on the product page.\r\n",
                      "type" : "boolean"
                    },
                    "IsRequired" : {
                      "description" : "Makes the specification mandatory (`true`) or optional (`false`).",
                      "type" : "boolean"
                    },
                    "IsSideMenuLinkActive" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification field clickable in the search navigation bar.\r\n",
                      "type" : "boolean"
                    },
                    "IsStockKeepingUnit" : {
                      "description" : "If `true`, it will be added as a SKU specification. If `false`, it will be added as a product specification field.",
                      "type" : "boolean"
                    },
                    "IsTopMenuLinkActive" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification visible in the store's upper menu.\r\n",
                      "type" : "boolean"
                    },
                    "IsWizard" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - This position number is used in ordering the specifications both in the navigation menu and in the specification listing on the product page.\r\n",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Specification",
        "tags" : [ "Specification" ]
      }
    },
    "/api/catalog/pvt/specification/nonstructured" : {
      "delete" : {
        "description" : "Deletes unmapped Specifications of a Seller'S SKU in a Marketplace by SKU ID.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "query",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Non Structured Specification by SKU ID",
        "tags" : [ "Non Structured Specification" ]
      },
      "get" : {
        "description" : "Gets general information about unmapped Specifications of a Seller's SKU in a Marketplace by SKU ID. \r\n## Response body example\r\n\r\n```json\r\n[\r\n{\r\n    \"Id\": 1010,\r\n    \"SkuId\": 310119072,\r\n    \"SpecificationName\": \"size\",\r\n    \"SpecificationValue\": \"Small\"\r\n}\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "query",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "properties" : {
                      "Id" : {
                        "description" : "Non Structured Specification’s unique numerical identifier.",
                        "example" : 1010,
                        "title" : "Id",
                        "type" : "integer"
                      },
                      "SkuId" : {
                        "description" : "SKU's unique numerical identifier.",
                        "example" : 310119072,
                        "title" : "SkuId",
                        "type" : "integer"
                      },
                      "SpecificationName" : {
                        "description" : "Name of the Non Structured Specification.",
                        "example" : "size",
                        "title" : "SpecificationName",
                        "type" : "string"
                      },
                      "SpecificationValue" : {
                        "description" : "Value of the Non Structured Specification.",
                        "example" : "Small",
                        "title" : "SpecificationValue",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Non Structured Specification by SKU ID",
        "tags" : [ "Non Structured Specification" ]
      }
    },
    "/api/catalog/pvt/specification/nonstructured/{Id}" : {
      "delete" : {
        "description" : "Deletes unmapped Specifications of a Seller'S SKU in a Marketplace by its unique ID.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Non Structured Specification’s unique numerical identifier.",
          "in" : "path",
          "name" : "Id",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Non Structured Specification",
        "tags" : [ "Non Structured Specification" ]
      },
      "get" : {
        "description" : "Retrieves general information about unmapped Specifications of a Seller's SKU in a Marketplace. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1010,\r\n    \"SkuId\": 310119072,\r\n    \"SpecificationName\": \"size\",\r\n    \"SpecificationValue\": \"Small\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Non Structured Specification’s unique numerical identifier.",
          "in" : "path",
          "name" : "Id",
          "required" : true,
          "schema" : {
            "example" : 1010,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "properties" : {
                      "Id" : {
                        "description" : "Non Structured Specification’s unique numerical identifier.",
                        "example" : 1010,
                        "title" : "Id",
                        "type" : "integer"
                      },
                      "SkuId" : {
                        "description" : "SKU's unique numerical identifier.",
                        "example" : 310119072,
                        "title" : "SkuId",
                        "type" : "integer"
                      },
                      "SpecificationName" : {
                        "description" : "Name of the Non Structured Specification.",
                        "example" : "size",
                        "title" : "SpecificationName",
                        "type" : "string"
                      },
                      "SpecificationValue" : {
                        "description" : "Value of the Non Structured Specification.",
                        "example" : "Small",
                        "title" : "SpecificationValue",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Non Structured Specification by ID",
        "tags" : [ "Non Structured Specification" ]
      }
    },
    "/api/catalog/pvt/specification/{specificationId}" : {
      "get" : {
        "description" : "Retrieves information of a Product or SKU Specification. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 88,\r\n    \"FieldTypeId\": 1,\r\n    \"CategoryId\": 4,\r\n    \"FieldGroupId\": 20,\r\n    \"Name\": \"Material\",\r\n    \"Description\": \"Composition of the product.\",\r\n    \"Position\": 1,\r\n    \"IsFilter\": true,\r\n    \"IsRequired\": true,\r\n    \"IsOnProductDetails\": false,\r\n    \"IsStockKeepingUnit\": false,\r\n    \"IsWizard\": false,\r\n    \"IsActive\": true,\r\n    \"IsTopMenuLinkActive\": false,\r\n    \"IsSideMenuLinkActive\": true,\r\n    \"DefaultValue\": \"Cotton\"\r\n}\r\n```\r\n",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Specification’s unique numerical identifier.",
          "in" : "path",
          "name" : "specificationId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CategoryId" : 10,
                  "DefaultValue" : null,
                  "Description" : "Peso",
                  "FieldGroupId" : 11,
                  "FieldTypeId" : 6,
                  "Id" : 32,
                  "IsActive" : true,
                  "IsFilter" : false,
                  "IsOnProductDetails" : false,
                  "IsRequired" : true,
                  "IsSideMenuLinkActive" : false,
                  "IsStockKeepingUnit" : true,
                  "IsTopMenuLinkActive" : false,
                  "IsWizard" : false,
                  "Name" : "Peso",
                  "Position" : 1
                },
                "schema" : {
                  "properties" : {
                    "CategoryId" : {
                      "description" : "Specification Category ID.",
                      "example" : 0,
                      "title" : "CategoryId",
                      "type" : "integer"
                    },
                    "DefaultValue" : {
                      "description" : "Specification Default Value.",
                      "example" : "",
                      "nullable" : true,
                      "title" : "DefaultValue",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Specification Description.",
                      "example" : "",
                      "title" : "Description",
                      "type" : "string"
                    },
                    "FieldGroupId" : {
                      "description" : "Numerical ID of the Group of Specifications that contains the new Specification.",
                      "example" : 0,
                      "title" : "FieldGroupId",
                      "type" : "integer"
                    },
                    "FieldTypeId" : {
                      "description" : "Field Type can be `1 - Text`, `2 - Multi-Line Text`, `4 - Number`, `5 - Combo`, `6 - Radio`, `7 - Checkbox`, `8 - Indexed Text`, `9 - Indexed Multi-Line Text`.",
                      "example" : 1,
                      "title" : "FieldTypeId",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Created Specification’s ID.",
                      "example" : 32,
                      "title" : "Id",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Defines if the Specification is active or not.",
                      "example" : false,
                      "title" : "IsActive",
                      "type" : "boolean"
                    },
                    "IsFilter" : {
                      "description" : "Defines if the Specification can be used as a Filter.",
                      "example" : false,
                      "title" : "IsFilter",
                      "type" : "boolean"
                    },
                    "IsOnProductDetails" : {
                      "description" : "Defines if the Specification will be shown on the Product screen in the specification area.",
                      "example" : false,
                      "title" : "IsOnProductDetails",
                      "type" : "boolean"
                    },
                    "IsRequired" : {
                      "description" : "Defines if the Specification is required or not.",
                      "example" : false,
                      "title" : "IsRequired",
                      "type" : "boolean"
                    },
                    "IsSideMenuLinkActive" : {
                      "description" : "Defines if the Specification is shown in the side menu.",
                      "example" : false,
                      "title" : "IsSideMenuLinkActive",
                      "type" : "boolean"
                    },
                    "IsStockKeepingUnit" : {
                      "description" : "Defines if the Specification is applied to a specific SKU.",
                      "example" : false,
                      "title" : "IsStockKeepingUnit",
                      "type" : "boolean"
                    },
                    "IsTopMenuLinkActive" : {
                      "description" : "Defines if the Specification is shown in the main menu of the site.",
                      "example" : false,
                      "title" : "IsTopMenuLinkActive",
                      "type" : "boolean"
                    },
                    "IsWizard" : {
                      "deprecated" : true,
                      "description" : "Deprecated",
                      "example" : false,
                      "title" : "IsWizard",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification Name.",
                      "example" : "",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "The current Specification's position in comparison to the other Specifications.",
                      "example" : 0,
                      "title" : "Position",
                      "type" : "integer"
                    }
                  },
                  "required" : [ "Id", "FieldTypeId", "CategoryId", "FieldGroupId", "Name", "Description", "Position", "IsFilter", "IsRequired", "IsOnProductDetails", "IsStockKeepingUnit", "IsWizard", "IsActive", "IsTopMenuLinkActive", "IsSideMenuLinkActive", "DefaultValue" ],
                  "title" : "Request body",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specification",
        "tags" : [ "Specification" ]
      },
      "put" : {
        "description" : "Updates a Product or SKU Specification. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldTypeId\": 1,\r\n    \"CategoryId\": 4,\r\n    \"FieldGroupId\": 20,\r\n    \"Name\": \"Material\",\r\n    \"Description\": \"Composition of the product.\",\r\n    \"Position\": 1,\r\n    \"IsFilter\": true,\r\n    \"IsRequired\": true,\r\n    \"IsOnProductDetails\": false,\r\n    \"IsStockKeepingUnit\": false,\r\n    \"IsActive\": true,\r\n    \"IsTopMenuLinkActive\": false,\r\n    \"IsSideMenuLinkActive\": true,\r\n    \"DefaultValue\": \"Leather\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 88,\r\n    \"FieldTypeId\": 1,\r\n    \"CategoryId\": 4,\r\n    \"FieldGroupId\": 20,\r\n    \"Name\": \"Material\",\r\n    \"Description\": \"Composition of the product.\",\r\n    \"Position\": 1,\r\n    \"IsFilter\": true,\r\n    \"IsRequired\": true,\r\n    \"IsOnProductDetails\": false,\r\n    \"IsStockKeepingUnit\": false,\r\n    \"IsWizard\": false,\r\n    \"IsActive\": true,\r\n    \"IsTopMenuLinkActive\": false,\r\n    \"IsSideMenuLinkActive\": true,\r\n    \"DefaultValue\": \"Leather\"\r\n}\r\n```\r\n",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Specification’s unique numerical identifier.",
          "in" : "path",
          "name" : "specificationId",
          "required" : true,
          "schema" : {
            "example" : 88,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "CategoryId" : {
                    "description" : "Specification Category ID.",
                    "example" : 0,
                    "title" : "CategoryId",
                    "type" : "integer"
                  },
                  "DefaultValue" : {
                    "description" : "Specification Default Value.",
                    "example" : "Leather",
                    "title" : "DefaultValue",
                    "type" : "string"
                  },
                  "Description" : {
                    "description" : "Specification Description.",
                    "example" : "Composition of the product.",
                    "title" : "Description",
                    "type" : "string"
                  },
                  "FieldGroupId" : {
                    "description" : "Numerical ID of the Group of Specifications that contains the new Specification.",
                    "example" : 0,
                    "title" : "FieldGroupId",
                    "type" : "integer"
                  },
                  "FieldTypeId" : {
                    "description" : "Field Type can be `1 - Text`, `2 - Multi-Line Text`, `4 - Number`, `5 - Combo`, `6 - Radio`, `7 - Checkbox`, `8 - Indexed Text`, `9 - Indexed Multi-Line Text`.",
                    "example" : 1,
                    "title" : "FieldTypeId",
                    "type" : "integer"
                  },
                  "IsActive" : {
                    "description" : "Defines if the Specification is active or not.",
                    "example" : false,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "IsFilter" : {
                    "description" : "Defines if the Specification can be used as a Filter.",
                    "example" : false,
                    "title" : "IsFilter",
                    "type" : "boolean"
                  },
                  "IsOnProductDetails" : {
                    "description" : "Defines if the Specification will be  shown on the Product screen in the specification area.",
                    "example" : false,
                    "title" : "IsOnProductDetails",
                    "type" : "boolean"
                  },
                  "IsRequired" : {
                    "description" : "Defines if the Specification is required or not.",
                    "example" : false,
                    "title" : "IsRequired",
                    "type" : "boolean"
                  },
                  "IsSideMenuLinkActive" : {
                    "description" : "Defines if the Specification is shown in the side menu.",
                    "example" : false,
                    "title" : "IsSideMenuLinkActive",
                    "type" : "boolean"
                  },
                  "IsStockKeepingUnit" : {
                    "description" : "Defines if the Specification is applied to a specific SKU.",
                    "example" : false,
                    "title" : "IsStockKeepingUnit",
                    "type" : "boolean"
                  },
                  "IsTopMenuLinkActive" : {
                    "description" : "Defines if the Specification is shown in the main menu of the site.",
                    "example" : false,
                    "title" : "IsTopMenuLinkActive",
                    "type" : "boolean"
                  },
                  "IsWizard" : {
                    "deprecated" : true,
                    "description" : "Deprecated",
                    "example" : false,
                    "title" : "IsWizard",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "Specification Name.",
                    "example" : "Material",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Position" : {
                    "description" : "The current Specification's position in comparison to the other Specifications.",
                    "example" : 1,
                    "title" : "Position",
                    "type" : "integer"
                  }
                },
                "required" : [ "FieldTypeId", "CategoryId", "FieldGroupId", "Name", "Description", "Position", "IsFilter", "IsRequired", "IsOnProductDetails", "IsStockKeepingUnit", "IsWizard", "IsActive", "IsTopMenuLinkActive", "IsSideMenuLinkActive", "DefaultValue" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CategoryId" : 4,
                  "DefaultValue" : "Leather",
                  "Description" : "Composition of the product.",
                  "FieldGroupId" : 20,
                  "FieldTypeId" : 1,
                  "Id" : 88,
                  "IsActive" : true,
                  "IsFilter" : true,
                  "IsOnProductDetails" : false,
                  "IsRequired" : true,
                  "IsSideMenuLinkActive" : true,
                  "IsStockKeepingUnit" : false,
                  "IsTopMenuLinkActive" : false,
                  "IsWizard" : false,
                  "Name" : "Material",
                  "Position" : 1
                },
                "schema" : {
                  "properties" : {
                    "CategoryId" : {
                      "description" : "Category ID associated with this specification.",
                      "type" : "integer"
                    },
                    "DefaultValue" : {
                      "description" : "Specification default value.",
                      "type" : "string"
                    },
                    "Description" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FieldGroupId" : {
                      "description" : "ID of the group of specifications that contains the new specification.",
                      "type" : "integer"
                    },
                    "FieldTypeId" : {
                      "description" : "Field Type ID can be `1 - Text`, `2 - Multi-Line Text`, `4 - Number`, `5 - Combo`, `6 - Radio`, `7 - Checkbox`, `8 - Indexed Text`, `9 - Indexed Multi-Line Text`.",
                      "title" : "The FieldTypeId schema",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Specification ID.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Enable (`true`) or disable (`false`) specification.",
                      "type" : "boolean"
                    },
                    "IsFilter" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To allow the specification to be used as a facet (filter) on the search navigation bar.\r\n",
                      "type" : "boolean"
                    },
                    "IsOnProductDetails" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal -If specification is visible on the product page.\r\n",
                      "type" : "boolean"
                    },
                    "IsRequired" : {
                      "description" : "Makes the specification mandatory (`true`) or optional (`false`).",
                      "type" : "boolean"
                    },
                    "IsSideMenuLinkActive" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification field clickable in the search navigation bar.\r\n",
                      "type" : "boolean"
                    },
                    "IsStockKeepingUnit" : {
                      "description" : "If `true`, it will be added as a SKU specification. If `false`, it will be added as a product specification field.",
                      "type" : "boolean"
                    },
                    "IsTopMenuLinkActive" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification visible in the store's upper menu.\r\n",
                      "type" : "boolean"
                    },
                    "IsWizard" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - This position number is used in ordering the specifications both in the navigation menu and in the specification listing on the product page.\r\n",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Specification",
        "tags" : [ "Specification" ]
      }
    },
    "/api/catalog/pvt/specificationgroup" : {
      "post" : {
        "deprecated" : false,
        "description" : "Create a specification group. \r\n>⚠️ It is also possible to create a Specification Group by using an alternative legacy route: `/api/catalog_system/pvt/specification/group`. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"CategoryId\": 1,\r\n    \"Name\": \"Sizes\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 6,\r\n  \"CategoryId\": 1,\r\n  \"Name\": \"Sizes\",\r\n  \"Position\": 3\r\n}\r\n```",
        "operationId" : "SpecificationGroupInsert2",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "CategoryId" : 1,
                "Name" : "Sizes"
              },
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationGroupInsertRequest"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CategoryId" : 1,
                  "Id" : 10,
                  "Name" : "Sizes",
                  "Position" : 3
                },
                "schema" : {
                  "properties" : {
                    "CategoryId" : {
                      "description" : "Category ID.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Specification Group ID.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Specification Group Name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - Specification Group Position.",
                      "format" : "int32",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Specification Group",
        "tags" : [ "Specification Group" ]
      }
    },
    "/api/catalog/pvt/specificationgroup/{groupId}" : {
      "put" : {
        "description" : "Update a specification group. \r\n>⚠️ It is also possible to update a Specification Group by using an alternative legacy route: `/api/catalog_system/pvt/specification/group`.\r\n\r\n## Request and response body example\r\n\r\n```json\r\n{\r\n    \"CategoryId\": 1,\r\n    \"Id\": 17,\r\n    \"Name\": \"NewGroupName\",\r\n    \"Position\": 1\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Group’s unique numerical identifier.",
          "in" : "path",
          "name" : "groupId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "CategoryId" : {
                    "description" : "Category ID where the Specification Group is contained.",
                    "example" : 1,
                    "title" : "CategoryId",
                    "type" : "integer"
                  },
                  "Id" : {
                    "description" : "Specification Group ID.",
                    "example" : 24,
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "Name" : {
                    "description" : "Specification Group Name.",
                    "example" : "Sizes",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Position" : {
                    "description" : "Specification Group Position.",
                    "example" : 1,
                    "title" : "Position",
                    "type" : "integer"
                  }
                },
                "required" : [ "CategoryId", "Name", "Id", "Position" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "CategoryId" : {
                      "description" : "Category ID where the Specification Group is contained.",
                      "example" : 1,
                      "title" : "CategoryId",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Specification Group ID.",
                      "example" : 24,
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Specification Group Name.",
                      "example" : "Sizes",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Specification Group Position.",
                      "example" : 1,
                      "title" : "Position",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Specification Group",
        "tags" : [ "Specification Group" ]
      }
    },
    "/api/catalog/pvt/specificationvalue" : {
      "post" : {
        "description" : "Creates a new Specification Value for a Category. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldId\": 193,\r\n    \"Name\": \"Metal\",\r\n    \"IsActive\": true,\r\n    \"Position\": 1\r\n  }\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"FieldValueId\": 360,\r\n  \"FieldId\": 193,\r\n  \"Name\": \"Metal\",\r\n  \"Text\": null,\r\n  \"IsActive\": true,\r\n  \"Position\": 1\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FieldId" : {
                    "description" : "Specification ID associated with this specification value.",
                    "example" : 193,
                    "title" : "FieldId",
                    "type" : "integer"
                  },
                  "IsActive" : {
                    "description" : "Enable (`true`) or disable (`false`) specification value.",
                    "example" : true,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "Specification Value name.",
                    "example" : "Metal",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Position" : {
                    "description" : "The position of the value to be shown on product registration page (`/admin/Site/Produto.aspx`).",
                    "example" : 1,
                    "title" : "Position",
                    "type" : "integer"
                  },
                  "Text" : {
                    "deprecated" : true,
                    "description" : "Specification Value Text.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "FieldId", "Name" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "FieldId" : 193,
                  "FieldValueId" : 360,
                  "IsActive" : true,
                  "Name" : "Metal",
                  "Position" : 1,
                  "Text" : null
                },
                "schema" : {
                  "properties" : {
                    "FieldId" : {
                      "description" : "Specification ID associated with this specification value.",
                      "type" : "integer"
                    },
                    "FieldValueId" : {
                      "description" : "Specification value ID.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Enable (`true`) or disable (`false`) specification value.",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification Value name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "The position of the value to be shown on product registration page (`/admin/Site/Produto.aspx`).",
                      "type" : "integer"
                    },
                    "Text" : {
                      "deprecated" : true,
                      "description" : "Specification Value Text.",
                      "nullable" : true,
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Specification Value",
        "tags" : [ "Specification Value" ]
      }
    },
    "/api/catalog/pvt/specificationvalue/{specificationValueId}" : {
      "get" : {
        "description" : "Retrieves general information about a Specification Value. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"FieldValueId\": 143,\r\n    \"FieldId\": 34,\r\n    \"Name\": \"Cotton\",\r\n    \"Text\": \"Cotton fibers\",\r\n    \"IsActive\": true,\r\n    \"Position\": 100\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Specification Value’s unique numerical identifier.",
          "in" : "path",
          "name" : "specificationValueId",
          "required" : true,
          "schema" : {
            "example" : 143,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "FieldId" : 34,
                  "FieldValueId" : 143,
                  "IsActive" : true,
                  "Name" : "Cotton",
                  "Position" : 100,
                  "Text" : "Cotton fibers"
                },
                "schema" : {
                  "properties" : {
                    "FieldId" : {
                      "description" : "Specification Field ID.",
                      "type" : "integer"
                    },
                    "FieldValueId" : {
                      "description" : "Specification Field Value ID.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Defines if the Specification Field Value is active (`true`) or inactive (`false`).",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification Field Value Name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Specification Field Value Position.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "Text" : {
                      "description" : "Specification Field Value Description.",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specification Value",
        "tags" : [ "Specification Value" ]
      },
      "put" : {
        "description" : "Updates a new Specification Value for a Category. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldId\": 193,\r\n    \"Name\": \"Metal\",\r\n    \"Text\": null,\r\n    \"IsActive\": true,\r\n    \"Position\": 1\r\n  }\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"FieldValueId\": 360,\r\n  \"FieldId\": 193,\r\n  \"Name\": \"Metal\",\r\n  \"Text\": null,\r\n  \"IsActive\": true,\r\n  \"Position\": 1\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : " Specification Value’s unique numerical identifier.",
          "in" : "path",
          "name" : "specificationValueId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FieldId" : {
                    "description" : "Specification ID associated with this specification value.",
                    "example" : 193,
                    "title" : "FieldId",
                    "type" : "integer"
                  },
                  "IsActive" : {
                    "description" : "Enable (`true`) or disable (`false`) specification value.",
                    "example" : true,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "Name" : {
                    "description" : "Specification Value name.",
                    "example" : "Metal",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "Position" : {
                    "description" : "The position of the value to be shown on product registration page (`/admin/Site/Produto.aspx`).",
                    "example" : 1,
                    "title" : "Position",
                    "type" : "integer"
                  },
                  "Text" : {
                    "deprecated" : true,
                    "description" : "Specification Value Text.",
                    "nullable" : true,
                    "type" : "string"
                  }
                },
                "required" : [ "FieldId", "Name" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "FieldId" : 193,
                  "FieldValueId" : 360,
                  "IsActive" : true,
                  "Name" : "Metal",
                  "Position" : 1,
                  "Text" : null
                },
                "schema" : {
                  "properties" : {
                    "FieldId" : {
                      "description" : "Specification ID associated with this specification value.",
                      "type" : "integer"
                    },
                    "FieldValueId" : {
                      "description" : "Specification value ID.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Enable (`true`) or disable (`false`) specification value.",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification Value name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "The position of the value to be shown on product registration page (`/admin/Site/Produto.aspx`).",
                      "type" : "integer"
                    },
                    "Text" : {
                      "deprecated" : true,
                      "description" : "Specification Value Text.",
                      "nullable" : true,
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Specification Value",
        "tags" : [ "Specification Value" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit" : {
      "get" : {
        "description" : "Retrieves information about a specific SKU by its `RefId`. \r\n\r\n### Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"ProductId\": 1,\r\n    \"IsActive\": true,\r\n    \"Name\": \"Royal Canin Feline Urinary 500g\",\r\n    \"RefId\": \"0001\",\r\n    \"PackagedHeight\": 6.0000,\r\n    \"PackagedLength\": 24.0000,\r\n    \"PackagedWidth\": 14.0000,\r\n    \"PackagedWeightKg\": 550.0000,\r\n    \"Height\": null,\r\n    \"Length\": null,\r\n    \"Width\": null,\r\n    \"WeightKg\": null,\r\n    \"CubicWeight\": 1.0000,\r\n    \"IsKit\": false,\r\n    \"CreationDate\": \"2020-03-12T15:42:00\",\r\n    \"RewardValue\": null,\r\n    \"EstimatedDateArrival\": null,\r\n    \"ManufacturerCode\": \"\",\r\n    \"CommercialConditionId\": 1,\r\n    \"MeasurementUnit\": \"un\",\r\n    \"UnitMultiplier\": 1.0000,\r\n    \"ModalType\": null,\r\n    \"KitItensSellApart\": false,\r\n    \"Videos\": null\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Reference ID.",
          "in" : "query",
          "name" : "refId",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CommercialConditionId" : 1,
                  "CreationDate" : "2020-03-12T15:42:00",
                  "CubicWeight" : 1,
                  "EstimatedDateArrival" : null,
                  "Height" : 0,
                  "Id" : 1,
                  "IsActive" : true,
                  "IsKit" : false,
                  "KitItensSellApart" : false,
                  "Length" : 0,
                  "ManufacturerCode" : "",
                  "MeasurementUnit" : "un",
                  "ModalType" : null,
                  "Name" : "Royal Canin Feline Urinary 500g",
                  "PackagedHeight" : 6,
                  "PackagedLength" : 24,
                  "PackagedWeightKg" : 550,
                  "PackagedWidth" : 14,
                  "ProductId" : 1,
                  "RefId" : "0001",
                  "RewardValue" : 0,
                  "UnitMultiplier" : 1,
                  "Videos" : null,
                  "WeightKg" : 0,
                  "Width" : 0
                },
                "schema" : {
                  "properties" : {
                    "ActivateIfPossible" : {
                      "description" : "When set to `true`, this attribute will automatically update the SKU as active once associated with an image or an active component.",
                      "type" : "boolean"
                    },
                    "CommercialConditionId" : {
                      "description" : "Commercial Condition ID.",
                      "type" : "integer"
                    },
                    "CreationDate" : {
                      "description" : "SKU Creation Date.",
                      "type" : "string"
                    },
                    "CubicWeight" : {
                      "description" : "[Cubic Weight](https://help.vtex.com/en/tutorial/understanding-the-cubic-weight-factor--tutorials_128).",
                      "type" : "number"
                    },
                    "EstimatedDateArrival" : {
                      "description" : "SKU estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the product is on pre-sale. You must take into consideration both the launch date and the freight calculation for the arrival date.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "Height" : {
                      "description" : "SKU Height.",
                      "type" : "number"
                    },
                    "Id" : {
                      "description" : "SKU ID.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Defines if the SKU is active (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "IsKit" : {
                      "description" : "Shows if the SKU is a Kit (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "KitItensSellApart" : {
                      "description" : "Defines if Kit components can be sold apart.",
                      "type" : "boolean"
                    },
                    "Length" : {
                      "description" : "SKU Length.",
                      "type" : "number"
                    },
                    "ManufacturerCode" : {
                      "description" : "Manufacturer Code.",
                      "type" : "string"
                    },
                    "MeasurementUnit" : {
                      "description" : "Measurement Unit.",
                      "type" : "string"
                    },
                    "ModalType" : {
                      "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "SKU Name.",
                      "type" : "string"
                    },
                    "PackagedHeight" : {
                      "description" : "Packaged Height.",
                      "type" : "number"
                    },
                    "PackagedLength" : {
                      "description" : "Packaged Length.",
                      "type" : "number"
                    },
                    "PackagedWeightKg" : {
                      "description" : "Packaged Weight, in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                      "type" : "number"
                    },
                    "PackagedWidth" : {
                      "description" : "Packaged Width.",
                      "type" : "number"
                    },
                    "ProductId" : {
                      "description" : "Product ID.",
                      "type" : "integer"
                    },
                    "RefId" : {
                      "description" : "SKU RefId.",
                      "type" : "string"
                    },
                    "RewardValue" : {
                      "description" : "Defines the value of the reward for clients who purchase the SKU.",
                      "type" : "number"
                    },
                    "UnitMultiplier" : {
                      "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
                      "type" : "number"
                    },
                    "Videos" : {
                      "description" : "Video URLs.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "WeightKg" : {
                      "description" : "Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                      "type" : "number"
                    },
                    "Width" : {
                      "description" : "SKU Width.",
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU by RefId",
        "tags" : [ "SKU" ]
      },
      "post" : {
        "description" : "\r\n\r\nCreates a new SKU.\r\n\r\nIf there is a need to create a new SKU with a specific custom ID, specify the `Id` (integer) in the request. Otherwise, VTEX will generate the ID automatically.\r\n\r\n### Request body example (custom ID)\r\n\r\n```json\r\n{\r\n   \"Id\": 1, \r\n   \"ProductId\": 310117069,\r\n   \"IsActive\": true,\r\n   \"ActivateIfPossible\": true,\r\n   \"Name\": \"sku test\",\r\n   \"RefId\": \"125478\",\r\n   \"Ean\": \"8949461894984\",\r\n   \"PackagedHeight\": 10,\r\n   \"PackagedLength\": 10,\r\n   \"PackagedWidth\": 10,\r\n   \"PackagedWeightKg\": 10,\r\n   \"Height\": null,\r\n   \"Length\": null,\r\n   \"Width\": null,\r\n   \"WeightKg\": null,\r\n   \"CubicWeight\": 0.1667,\r\n   \"IsKit\": false,\r\n   \"CreationDate\": null,\r\n   \"RewardValue\": null,\r\n   \"EstimatedDateArrival\": null,\r\n   \"ManufacturerCode\": \"123\",\r\n   \"CommercialConditionId\": 1,\r\n   \"MeasurementUnit\": \"un\",\r\n   \"UnitMultiplier\": 2.0000,\r\n   \"ModalType\": null,\r\n   \"KitItensSellApart\": false,\r\n   \"Videos\": [ \"https://www.youtube.com/\" ]\r\n}\r\n``` \r\n\r\n### Request body example (automatically generated ID)\r\n\r\n```json\r\n{\r\n   \"ProductId\": 310117069,\r\n   \"IsActive\": true,\r\n   \"ActivateIfPossible\": true,\r\n   \"Name\": \"sku test\",\r\n   \"RefId\": \"125478\",\r\n   \"Ean\": \"8949461894984\",\r\n   \"PackagedHeight\": 10,\r\n   \"PackagedLength\": 10,\r\n   \"PackagedWidth\": 10,\r\n   \"PackagedWeightKg\": 10,\r\n   \"Height\": null,\r\n   \"Length\": null,\r\n   \"Width\": null,\r\n   \"WeightKg\": null,\r\n   \"CubicWeight\": 0.1667,\r\n   \"IsKit\": false,\r\n   \"CreationDate\": null,\r\n   \"RewardValue\": null,\r\n   \"EstimatedDateArrival\": null,\r\n   \"ManufacturerCode\": \"123\",\r\n   \"CommercialConditionId\": 1,\r\n   \"MeasurementUnit\": \"un\",\r\n   \"UnitMultiplier\": 2.0000,\r\n   \"ModalType\": null,\r\n   \"KitItensSellApart\": false,\r\n   \"Videos\": [ \"https://www.youtube.com/\" ]\r\n}\r\n``` \r\n\r\n### Response body example\r\n\r\n```json\r\n{\r\n   \"Id\":1,\r\n   \"ProductId\": 310117069,\r\n   \"IsActive\": true,\r\n   \"ActivateIfPossible\": true,\r\n   \"Name\": \"sku test\",\r\n   \"RefId\": \"125478\",\r\n   \"Ean\": \"8949461894984\",\r\n   \"PackagedHeight\": 10,\r\n   \"PackagedLength\": 10,\r\n   \"PackagedWidth\": 10,\r\n   \"PackagedWeightKg\": 10,\r\n   \"Height\": null,\r\n   \"Length\": null,\r\n   \"Width\": null,\r\n   \"WeightKg\": null,\r\n   \"CubicWeight\": 0.1667,\r\n   \"IsKit\": false,\r\n   \"CreationDate\": null,\r\n   \"RewardValue\": null,\r\n   \"EstimatedDateArrival\": null,\r\n   \"ManufacturerCode\": \"123\",\r\n   \"CommercialConditionId\": 1,\r\n   \"MeasurementUnit\": \"un\",\r\n   \"UnitMultiplier\": 2.0000,\r\n   \"ModalType\": null,\r\n   \"KitItensSellApart\": false,\r\n   \"Videos\": [ \"https://www.youtube.com/\" ]\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ActivateIfPossible" : {
                    "description" : "When set to `true`, this attribute will automatically update the SKU as active once associated with an image or an active component.",
                    "example" : true,
                    "title" : "ActivateIfPossible",
                    "type" : "boolean"
                  },
                  "CommercialConditionId" : {
                    "description" : "Used to define SKU specific promotions or installment rules. In case of no specific condition, use `1` (default value). This field does not accept `0`. Find out more by reading [Registering a commercial condition](https://help.vtex.com/tutorial/registering-a-commercial-condition--tutorials_445).",
                    "example" : 1,
                    "title" : "CommercialConditionId",
                    "type" : "integer"
                  },
                  "CreationDate" : {
                    "description" : "Date and time of the SKU's creation.",
                    "example" : "2020-01-25T15:51:29.2614605",
                    "title" : "CreationDate",
                    "type" : "string"
                  },
                  "CubicWeight" : {
                    "description" : "[Cubic weight](https://help.vtex.com/en/tutorial/understanding-the-cubic-weight-factor--tutorials_128).",
                    "example" : 0.1667,
                    "title" : "CubicWeight",
                    "type" : "number"
                  },
                  "Ean" : {
                    "description" : "EAN code. Required only if `RefId` is not informed, but can be used alongside `RefId` as well.",
                    "example" : "8949461894984",
                    "title" : "Ean",
                    "type" : "string"
                  },
                  "EstimatedDateArrival" : {
                    "description" : "To add the product as pre-sale, enter the product estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. You must take into consideration both the launch date and the freight calculation for the arrival date.",
                    "nullable" : true,
                    "title" : "EstimatedDateArrival",
                    "type" : "string"
                  },
                  "Height" : {
                    "description" : "SKU real height.",
                    "example" : 1,
                    "title" : "Height",
                    "type" : "number"
                  },
                  "Id" : {
                    "description" : "SKU unique identifier. If not informed, it will be automatically generated by VTEX.",
                    "example" : 1,
                    "title" : "Id",
                    "type" : "integer"
                  },
                  "IsActive" : {
                    "description" : "Shows if the SKU is active (`true`) or not (`false`).",
                    "example" : false,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "IsKit" : {
                    "description" : "Flag to set whether the product SKU is made up of one or more SKUs, thereby becoming a bundle. Must be enabled if you are adding a bundle. Once activated, the flag cannot be reverted.",
                    "example" : false,
                    "title" : "IsKit",
                    "type" : "boolean"
                  },
                  "KitItensSellApart" : {
                    "description" : "Defines if Kit components can be sold apart.",
                    "example" : false,
                    "title" : "KitItensSellApart",
                    "type" : "boolean"
                  },
                  "Length" : {
                    "description" : "SKU real length.",
                    "example" : 1,
                    "title" : "Length",
                    "type" : "number"
                  },
                  "ManufacturerCode" : {
                    "description" : "Provided by the manufacturers to identify their product. This field should be filled in if the product has a specific manufacturer’s code.",
                    "example" : "123",
                    "title" : "ManufacturerCode",
                    "type" : "string"
                  },
                  "MeasurementUnit" : {
                    "description" : "Used only in cases when you need to convert the unit of measure for sale. If a product is sold in boxes for example, but customers want to buy per square meter (m²). In common cases, use `'un'`.",
                    "example" : "un",
                    "title" : "MeasurementUnit",
                    "type" : "string"
                  },
                  "ModalType" : {
                    "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
                    "nullable" : true,
                    "title" : "ModalType",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "SKU name, meaning the variation of the previously added product. For example: **Product** - _Fridge_, **SKU** - _110V_.",
                    "example" : "Size 10",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "PackagedHeight" : {
                    "description" : "Height used for shipping calculation.",
                    "example" : 10,
                    "title" : "PackagedHeight",
                    "type" : "number"
                  },
                  "PackagedLength" : {
                    "description" : "Length used for shipping calculation.",
                    "example" : 10,
                    "title" : "PackagedLength",
                    "type" : "number"
                  },
                  "PackagedWeightKg" : {
                    "description" : "Weight used for shipping calculation, in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                    "example" : 10,
                    "title" : "PackagedWeightKg",
                    "type" : "integer"
                  },
                  "PackagedWidth" : {
                    "description" : "Width used for shipping calculation.",
                    "example" : 10,
                    "title" : "PackagedWidth",
                    "type" : "number"
                  },
                  "ProductId" : {
                    "description" : "ID of the Product associated with this SKU.",
                    "example" : 42,
                    "title" : "ProductId",
                    "type" : "integer"
                  },
                  "RefId" : {
                    "description" : "Reference code used internally for organizational purposes. Must be unique. Required only if `Ean` is not informed, but can be used alongside `Ean` as well.",
                    "example" : "B096QW8Y8Z",
                    "title" : "RefId",
                    "type" : "string"
                  },
                  "RewardValue" : {
                    "description" : "Credit that the customer receives when finalizing an order of one specific SKU unit. By filling this field out with `1`, the customer gets U$ 1 credit on the site.",
                    "example" : 1,
                    "title" : "RewardValue",
                    "type" : "number"
                  },
                  "UnitMultiplier" : {
                    "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
                    "example" : 2,
                    "title" : "UnitMultiplier",
                    "type" : "number"
                  },
                  "Videos" : {
                    "description" : "Videos URLs",
                    "example" : [ "https://www.youtube.com/" ],
                    "items" : {
                      "description" : "URL",
                      "example" : "https://www.youtube.com/",
                      "title" : "",
                      "type" : "string"
                    },
                    "title" : "Videos",
                    "type" : "array"
                  },
                  "WeightKg" : {
                    "description" : "Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                    "example" : 1,
                    "title" : "WeightKg",
                    "type" : "number"
                  },
                  "Width" : {
                    "description" : "SKU real width.",
                    "example" : 1,
                    "title" : "Width",
                    "type" : "number"
                  }
                },
                "required" : [ "ProductId", "Name", "PackagedHeight", "PackagedLength", "PackagedWidth", "PackagedWeightKg" ],
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ActivateIfPossible" : false,
                  "CommercialConditionId" : 1,
                  "CreationDate" : "2020-01-25T15:51:29.2614605",
                  "CubicWeight" : 0.1667,
                  "Ean" : "8949461894984",
                  "EstimatedDateArrival" : null,
                  "Height" : 1,
                  "Id" : 70,
                  "IsActive" : false,
                  "IsKit" : false,
                  "KitItensSellApart" : false,
                  "Length" : 1,
                  "ManufacturerCode" : "",
                  "MeasurementUnit" : "un",
                  "ModalType" : null,
                  "Name" : "Size 10",
                  "PackagedHeight" : 10,
                  "PackagedLength" : 10,
                  "PackagedWeightKg" : 10,
                  "PackagedWidth" : 10,
                  "ProductId" : 42,
                  "RefId" : "B096QW8Y8Z",
                  "RewardValue" : 0,
                  "UnitMultiplier" : 2,
                  "Videos" : [ "https://www.youtube.com/" ],
                  "WeightKg" : 1,
                  "Width" : 1
                },
                "schema" : {
                  "properties" : {
                    "ActivateIfPossible" : {
                      "description" : "When set to `true`, this attribute will automatically update the SKU as active once associated with an image or an active component.",
                      "title" : "ActivateIfPossible",
                      "type" : "boolean"
                    },
                    "CommercialConditionId" : {
                      "description" : "Used to define SKU specific promotions or installment rules. In case of no specific condition, use `1` (default value). This field does not accept `0`. Find out more by reading [Registering a commercial condition](https://help.vtex.com/tutorial/registering-a-commercial-condition--tutorials_445).",
                      "title" : "CommercialConditionId",
                      "type" : "integer"
                    },
                    "CreationDate" : {
                      "description" : "Date and time of the SKU's creation.",
                      "title" : "CreationDate",
                      "type" : "string"
                    },
                    "CubicWeight" : {
                      "description" : "[Cubic weight](https://help.vtex.com/en/tutorial/understanding-the-cubic-weight-factor--tutorials_128).",
                      "title" : "CubicWeight",
                      "type" : "number"
                    },
                    "Ean" : {
                      "description" : "EAN code. Required only if `RefId` is not informed, but can be used alongside `RefId` as well.",
                      "title" : "Ean",
                      "type" : "string"
                    },
                    "EstimatedDateArrival" : {
                      "description" : "SKU estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the product is on pre-sale. You must take into consideration both the launch date and the freight calculation for the arrival date.",
                      "nullable" : true,
                      "title" : "EstimatedDateArrival",
                      "type" : "string"
                    },
                    "Height" : {
                      "description" : "SKU real height.",
                      "title" : "Height",
                      "type" : "number"
                    },
                    "Id" : {
                      "description" : "SKU unique identifier.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Shows if the SKU is active (`true`) or not (`false`).",
                      "title" : "IsActive",
                      "type" : "boolean"
                    },
                    "IsKit" : {
                      "description" : "Flag to set whether the product SKU is made up of one or more SKUs, thereby becoming a bundle. Must be enabled if you are adding a bundle. Once activated, the flag cannot be reverted.",
                      "title" : "IsKit",
                      "type" : "boolean"
                    },
                    "KitItensSellApart" : {
                      "description" : "Defines if Kit components can be sold apart.",
                      "title" : "KitItensSellApart",
                      "type" : "boolean"
                    },
                    "Length" : {
                      "description" : "SKU real length.",
                      "title" : "Length",
                      "type" : "number"
                    },
                    "ManufacturerCode" : {
                      "description" : "Provided by the manufacturers to identify their product. This field should be filled in if the product has a specific manufacturer’s code.",
                      "title" : "ManufacturerCode",
                      "type" : "string"
                    },
                    "MeasurementUnit" : {
                      "description" : "Used only in cases when you need to convert the unit of measure for sale. If a product is sold in boxes for example, but customers want to buy per square meter (m²). In common cases, use `'un'`.",
                      "example" : "un",
                      "title" : "MeasurementUnit",
                      "type" : "string"
                    },
                    "ModalType" : {
                      "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
                      "nullable" : true,
                      "title" : "ModalType",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "SKU name, meaning the variation of the previously added product. For example: **Product** - _Fridge_, **SKU** - _110V_.",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "PackagedHeight" : {
                      "description" : "Height used for shipping calculation.",
                      "title" : "PackagedHeight",
                      "type" : "number"
                    },
                    "PackagedLength" : {
                      "description" : "Length used for shipping calculation.",
                      "title" : "PackagedLength",
                      "type" : "number"
                    },
                    "PackagedWeightKg" : {
                      "description" : "Weight used for shipping calculation, in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                      "title" : "PackagedWeightKg",
                      "type" : "integer"
                    },
                    "PackagedWidth" : {
                      "description" : "Width used for shipping calculation.",
                      "title" : "PackagedWidth",
                      "type" : "number"
                    },
                    "ProductId" : {
                      "description" : "ID of the Product associated with this SKU.",
                      "title" : "ProductId",
                      "type" : "integer"
                    },
                    "RefId" : {
                      "description" : "Reference code used internally for organizational purposes. Must be unique. Required only if `Ean` is not informed, but can be used alongside `Ean` as well.",
                      "title" : "RefId",
                      "type" : "string"
                    },
                    "RewardValue" : {
                      "description" : "Credit that the customer receives when finalizing an order of one specific SKU unit. By filling this field out with `1`, the customer gets U$ 1 credit on the site.",
                      "title" : "RewardValue",
                      "type" : "number"
                    },
                    "UnitMultiplier" : {
                      "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
                      "title" : "UnitMultiplier",
                      "type" : "number"
                    },
                    "Videos" : {
                      "description" : "Videos URLs.",
                      "items" : {
                        "description" : "Video URL.",
                        "title" : "",
                        "type" : "string"
                      },
                      "title" : "Videos",
                      "type" : "array"
                    },
                    "WeightKg" : {
                      "description" : "Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                      "title" : "WeightKg",
                      "type" : "number"
                    },
                    "Width" : {
                      "description" : "SKU real width.",
                      "title" : "Width",
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create SKU",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/copy/{skuIdfrom}/{skuIdto}/file/" : {
      "put" : {
        "description" : "Copy all existing files from an SKU to another SKU. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 1964,\r\n        \"ArchiveId\": 155404,\r\n        \"SkuId\": 1,\r\n        \"IsMain\": true,\r\n        \"Label\": \"\"\r\n    },\r\n    {\r\n        \"Id\": 1965,\r\n        \"ArchiveId\": 155429,\r\n        \"SkuId\": 1,\r\n        \"IsMain\": false,\r\n        \"Label\": \"\"\r\n    }\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "__Origin__ SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuIdfrom",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "__Target__ SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuIdto",
          "required" : true,
          "schema" : {
            "example" : 2,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Array with objects containing information about each of the target SKU's Files.",
                  "example" : [ {
                    "ArchiveId" : 155404,
                    "Id" : 1964,
                    "IsMain" : true,
                    "Label" : "",
                    "SkuId" : 1
                  }, {
                    "ArchiveId" : 155429,
                    "Id" : 1965,
                    "IsMain" : false,
                    "Label" : "",
                    "SkuId" : 1
                  } ],
                  "items" : {
                    "description" : "Object containing each SKU File's information.",
                    "properties" : {
                      "ArchiveId" : {
                        "description" : "Unique identifier of the image file.",
                        "example" : 155404,
                        "type" : "integer"
                      },
                      "Id" : {
                        "description" : "Unique identifier of the association of the Image to the SKU.",
                        "example" : 1,
                        "title" : "Id",
                        "type" : "integer"
                      },
                      "IsMain" : {
                        "description" : "Defines if the Image is the Main Image of the SKU.",
                        "example" : true,
                        "title" : "IsMain",
                        "type" : "boolean"
                      },
                      "Label" : {
                        "description" : "Image label.",
                        "example" : "cat",
                        "nullable" : true,
                        "title" : "Label",
                        "type" : "string"
                      },
                      "SkuId" : {
                        "description" : "Unique identifier of the SKU.",
                        "example" : 1,
                        "title" : "SkuId",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Copy Files from an SKU to another SKU",
        "tags" : [ "SKU File" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/disassociate/{skuId}/file/{skuFileId}" : {
      "delete" : {
        "description" : "Disassociates an SKU File from an SKU.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "ID of the association of the SKU and the image, which can be obtained by placing a request to the [Get SKU File](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-sku-file) endpoint and copying the `Id` field.",
          "in" : "path",
          "name" : "skuFileId",
          "required" : true,
          "schema" : {
            "example" : 32,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Disassociate SKU File",
        "tags" : [ "SKU File" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a specific SKU by its ID.\r\n\r\n### Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"ProductId\": 1,\r\n    \"IsActive\": true,\r\n    \"ActivateIfPossible\": true,\r\n    \"Name\": \"Ração Royal Canin Feline Urinary 500g\",\r\n    \"RefId\": \"0001\",\r\n    \"PackagedHeight\": 6.5000,\r\n    \"PackagedLength\": 24.0000,\r\n    \"PackagedWidth\": 14.0000,\r\n    \"PackagedWeightKg\": 550.0000,\r\n    \"Height\": 2.2000,\r\n    \"Length\": 4.4000,\r\n    \"Width\": 3.3000,\r\n    \"WeightKg\": 1.1000,\r\n    \"CubicWeight\": 0.4550,\r\n    \"IsKit\": false,\r\n    \"CreationDate\": \"2021-06-08T15:25:00\",\r\n    \"RewardValue\": null,\r\n    \"EstimatedDateArrival\": null,\r\n    \"ManufacturerCode\": \"\",\r\n    \"CommercialConditionId\": 1,\r\n    \"MeasurementUnit\": \"un\",\r\n    \"UnitMultiplier\": 300.0000,\r\n    \"ModalType\": null,\r\n    \"KitItensSellApart\": false,\r\n    \"Videos\": [\r\n        \"www.google.com\"\r\n    ]\r\n}\r\n```  \r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.",
        "operationId" : "Sku",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU unique identifier number.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ActivateIfPossible" : false,
                  "CommercialConditionId" : 1,
                  "CreationDate" : "2020-01-25T15:51:29.2614605",
                  "CubicWeight" : 0.1667,
                  "EstimatedDateArrival" : null,
                  "Height" : 1,
                  "Id" : 70,
                  "IsActive" : false,
                  "IsKit" : false,
                  "KitItensSellApart" : false,
                  "Length" : 1,
                  "ManufacturerCode" : "",
                  "MeasurementUnit" : "un",
                  "ModalType" : null,
                  "Name" : "Size 10",
                  "PackagedHeight" : 10,
                  "PackagedLength" : 10,
                  "PackagedWeightKg" : 10,
                  "PackagedWidth" : 10,
                  "ProductId" : 42,
                  "RefId" : "B096QW8Y8Z",
                  "RewardValue" : 0,
                  "UnitMultiplier" : 2,
                  "Videos" : [ "https://www.youtube.com/" ],
                  "WeightKg" : 1,
                  "Width" : 1
                },
                "schema" : {
                  "properties" : {
                    "ActivateIfPossible" : {
                      "description" : "When set to `true`, this attribute will automatically update the SKU as active once associated with an image or an active component.",
                      "title" : "ActivateIfPossible",
                      "type" : "boolean"
                    },
                    "CommercialConditionId" : {
                      "description" : "Used to define SKU specific promotions or installment rules. In case of no specific condition, use `1` (default value). This field does not accept `0`. Find out more by reading [Registering a commercial condition](https://help.vtex.com/tutorial/registering-a-commercial-condition--tutorials_445).",
                      "title" : "CommercialConditionId",
                      "type" : "integer"
                    },
                    "CreationDate" : {
                      "description" : "Date and time of the SKU's creation.",
                      "title" : "CreationDate",
                      "type" : "string"
                    },
                    "CubicWeight" : {
                      "description" : "[Cubic weight](https://help.vtex.com/en/tutorial/understanding-the-cubic-weight-factor--tutorials_128).",
                      "title" : "CubicWeight",
                      "type" : "number"
                    },
                    "EstimatedDateArrival" : {
                      "description" : "SKU estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the product is on pre-sale. You must take into consideration both the launch date and the freight calculation for the arrival date.",
                      "nullable" : true,
                      "title" : "EstimatedDateArrival",
                      "type" : "string"
                    },
                    "Height" : {
                      "description" : "SKU real height.",
                      "title" : "Height",
                      "type" : "number"
                    },
                    "Id" : {
                      "description" : "SKU unique identifier.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Shows if the SKU is active (`true`) or not (`false`).",
                      "title" : "IsActive",
                      "type" : "boolean"
                    },
                    "IsKit" : {
                      "description" : "Flag to set whether the product SKU is made up of one or more SKUs, thereby becoming a bundle. Must be enabled if you are adding a bundle. Once activated, the flag cannot be reverted.",
                      "title" : "IsKit",
                      "type" : "boolean"
                    },
                    "KitItensSellApart" : {
                      "description" : "Defines if Kit components can be sold apart.",
                      "title" : "KitItensSellApart",
                      "type" : "boolean"
                    },
                    "Length" : {
                      "description" : "SKU real length.",
                      "title" : "Length",
                      "type" : "number"
                    },
                    "ManufacturerCode" : {
                      "description" : "Provided by the manufacturers to identify their product. This field should be filled in if the product has a specific manufacturer’s code.",
                      "title" : "ManufacturerCode",
                      "type" : "string"
                    },
                    "MeasurementUnit" : {
                      "description" : "Used only in cases when you need to convert the unit of measure for sale. If a product is sold in boxes for example, but customers want to buy per square meter (m²). In common cases, use `'un'`.",
                      "example" : "un",
                      "title" : "MeasurementUnit",
                      "type" : "string"
                    },
                    "ModalType" : {
                      "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
                      "nullable" : true,
                      "title" : "ModalType",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "SKU name, meaning the variation of the previously added product. For example: **Product** - _Fridge_, **SKU** - _110V_.",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "PackagedHeight" : {
                      "description" : "Height used for shipping calculation.",
                      "title" : "PackagedHeight",
                      "type" : "number"
                    },
                    "PackagedLength" : {
                      "description" : "Length used for shipping calculation.",
                      "title" : "PackagedLength",
                      "type" : "number"
                    },
                    "PackagedWeightKg" : {
                      "description" : "Weight used for shipping calculation.",
                      "title" : "PackagedWeightKg",
                      "type" : "integer"
                    },
                    "PackagedWidth" : {
                      "description" : "Width used for shipping calculation.",
                      "title" : "PackagedWidth",
                      "type" : "number"
                    },
                    "ProductId" : {
                      "description" : "ID of the Product associated with this SKU.",
                      "title" : "ProductId",
                      "type" : "integer"
                    },
                    "RefId" : {
                      "description" : "Reference code used internally for organizational purposes. Must be unique. It is not required only if EAN code already exists. If not, this field must be provided.",
                      "title" : "RefId",
                      "type" : "string"
                    },
                    "RewardValue" : {
                      "description" : "Credit that the customer receives when finalizing an order of one specific SKU unit. By filling this field out with `1`, the customer gets U$ 1 credit on the site.",
                      "title" : "RewardValue",
                      "type" : "number"
                    },
                    "UnitMultiplier" : {
                      "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
                      "title" : "UnitMultiplier",
                      "type" : "number"
                    },
                    "Videos" : {
                      "description" : "Videos URLs.",
                      "items" : {
                        "description" : "Video URL.",
                        "title" : "",
                        "type" : "string"
                      },
                      "title" : "Videos",
                      "type" : "array"
                    },
                    "WeightKg" : {
                      "description" : "Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                      "title" : "WeightKg",
                      "type" : "number"
                    },
                    "Width" : {
                      "description" : "SKU real width.",
                      "title" : "Width",
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU",
        "tags" : [ "SKU" ]
      },
      "put" : {
        "description" : "Updates an existing SKU. \r\n\r\n### Request body example\r\n\r\n```json\r\n{\r\n   \"Id\": 310118448,\r\n   \"ProductId\": 310117069,\r\n   \"IsActive\": true,\r\n   \"ActivateIfPossible\": true,\r\n   \"Name\": \"sku test\",\r\n   \"RefId\": \"125478\",\r\n   \"PackagedHeight\": 10,\r\n   \"PackagedLength\": 10,\r\n   \"PackagedWidth\": 10,\r\n   \"PackagedWeightKg\": 10,\r\n   \"Height\": null,\r\n   \"Length\": null,\r\n   \"Width\": null,\r\n   \"WeightKg\": null,\r\n   \"CubicWeight\": 0.1667,\r\n   \"IsKit\": false,\r\n   \"CreationDate\": null,\r\n   \"RewardValue\": null,\r\n   \"EstimatedDateArrival\": null,\r\n   \"ManufacturerCode\": \"123\",\r\n   \"CommercialConditionId\": 1,\r\n   \"MeasurementUnit\": \"un\",\r\n   \"UnitMultiplier\": 2.0000,\r\n   \"ModalType\": null,\r\n   \"KitItensSellApart\": false,\r\n   \"Videos\": [ \"https://www.youtube.com/\" ]\r\n}\r\n```\r\n\r\n### Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 310118449,\r\n    \"ProductId\": 1,\r\n    \"IsActive\": true,\r\n    \"ActivateIfPossible\": true,\r\n    \"Name\": \"sku test\",\r\n    \"RefId\": \"1254789\",\r\n    \"PackagedHeight\": 10.0,\r\n    \"PackagedLength\": 10.0,\r\n    \"PackagedWidth\": 10.0,\r\n    \"PackagedWeightKg\": 10.0,\r\n    \"Height\": null,\r\n    \"Length\": null,\r\n    \"Width\": null,\r\n    \"WeightKg\": null,\r\n    \"CubicWeight\": 0.1667,\r\n    \"IsKit\": false,\r\n    \"CreationDate\": \"2020-04-22T12:12:47.5219561\",\r\n    \"RewardValue\": null,\r\n    \"EstimatedDateArrival\": null,\r\n    \"ManufacturerCode\": \"123\",\r\n    \"CommercialConditionId\": 1,\r\n    \"MeasurementUnit\": \"un\",\r\n    \"UnitMultiplier\": 2.0000,\r\n    \"ModalType\": null,\r\n    \"KitItensSellApart\": false,\r\n    \"Videos\": [ \"https://www.youtube.com/\" ]\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "ActivateIfPossible" : {
                    "description" : "When set to `true`, this attribute will automatically update the SKU as active once associated with an image or an active component.",
                    "example" : false,
                    "title" : "ActivateIfPossible",
                    "type" : "boolean"
                  },
                  "CommercialConditionId" : {
                    "description" : "Used to define SKU specific promotions or installment rules. In case of no specific condition, use `1` (default value). This field does not accept `0`. Find out more by reading [Registering a commercial condition](https://help.vtex.com/tutorial/registering-a-commercial-condition--tutorials_445).",
                    "example" : 1,
                    "title" : "CommercialConditionId",
                    "type" : "integer"
                  },
                  "CreationDate" : {
                    "description" : "Date and time of the SKU's creation.",
                    "example" : "2020-01-25T15:51:00",
                    "title" : "CreationDate",
                    "type" : "string"
                  },
                  "CubicWeight" : {
                    "description" : "[Cubic weight](https://help.vtex.com/en/tutorial/understanding-the-cubic-weight-factor--tutorials_128).",
                    "example" : 0.1667,
                    "title" : "CubicWeight",
                    "type" : "number"
                  },
                  "EstimatedDateArrival" : {
                    "description" : "To add the product as pre-sale, enter the product estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. You must take into consideration both the launch date and the freight calculation for the arrival date.",
                    "nullable" : true,
                    "title" : "EstimatedDateArrival",
                    "type" : "string"
                  },
                  "Height" : {
                    "description" : "SKU real height.",
                    "example" : 1,
                    "title" : "Height",
                    "type" : "number"
                  },
                  "IsActive" : {
                    "description" : "Shows if the SKU is active (`true`) or not (`false`).",
                    "example" : false,
                    "title" : "IsActive",
                    "type" : "boolean"
                  },
                  "IsKit" : {
                    "description" : "Flag to set whether the product SKU is made up of one or more SKUs, thereby becoming a bundle. Must be enabled if you are adding a bundle. Once activated, the flag cannot be reverted.",
                    "example" : false,
                    "title" : "IsKit",
                    "type" : "boolean"
                  },
                  "KitItensSellApart" : {
                    "description" : "Defines if Kit components can be sold apart.",
                    "example" : false,
                    "title" : "KitItensSellApart",
                    "type" : "boolean"
                  },
                  "Length" : {
                    "description" : "SKU real length.",
                    "example" : 1,
                    "title" : "Length",
                    "type" : "number"
                  },
                  "ManufacturerCode" : {
                    "description" : "Provided by the manufacturers to identify their product. This field should be filled in if the product has a specific manufacturer’s code.",
                    "example" : "123",
                    "title" : "ManufacturerCode",
                    "type" : "string"
                  },
                  "MeasurementUnit" : {
                    "description" : "Used only in cases when you need to convert the unit of measure for sale. If a product is sold in boxes for example, but customers want to buy per square meter (m²). In common cases, use `'un'`.",
                    "example" : "un",
                    "title" : "MeasurementUnit",
                    "type" : "string"
                  },
                  "ModalType" : {
                    "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
                    "nullable" : true,
                    "title" : "ModalType",
                    "type" : "string"
                  },
                  "Name" : {
                    "description" : "SKU name, meaning the variation of the previously added product. For example: **Product** - _Fridge_, **SKU** - _110V_.",
                    "example" : "Size 10",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "PackagedHeight" : {
                    "description" : "Height used for shipping calculation.",
                    "example" : 10,
                    "title" : "PackagedHeight",
                    "type" : "number"
                  },
                  "PackagedLength" : {
                    "description" : "Length used for shipping calculation.",
                    "example" : 10,
                    "title" : "PackagedLength",
                    "type" : "number"
                  },
                  "PackagedWeightKg" : {
                    "description" : "Weight used for shipping calculation, in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                    "example" : 10,
                    "title" : "PackagedWeightKg",
                    "type" : "integer"
                  },
                  "PackagedWidth" : {
                    "description" : "Width used for shipping calculation.",
                    "example" : 10,
                    "title" : "PackagedWidth",
                    "type" : "number"
                  },
                  "ProductId" : {
                    "description" : "ID of the Product associated with this SKU.",
                    "example" : 42,
                    "title" : "ProductId",
                    "type" : "integer"
                  },
                  "RefId" : {
                    "description" : "Reference code used internally for organizational purposes. Must be unique. It is not required only if EAN code already exists. If not, this field must be provided.",
                    "example" : "B096QW8Y8Z",
                    "title" : "RefId",
                    "type" : "string"
                  },
                  "RewardValue" : {
                    "description" : "Credit that the customer receives when finalizing an order of one specific SKU unit. By filling this field out with `1`, the customer gets U$ 1 credit on the site.",
                    "example" : 1,
                    "title" : "RewardValue",
                    "type" : "number"
                  },
                  "UnitMultiplier" : {
                    "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
                    "example" : 2,
                    "title" : "UnitMultiplier",
                    "type" : "number"
                  },
                  "Videos" : {
                    "description" : "Videos URLs",
                    "example" : [ "https://www.youtube.com/" ],
                    "items" : {
                      "description" : "URL",
                      "example" : "https://www.youtube.com/",
                      "title" : "",
                      "type" : "string"
                    },
                    "title" : "Videos",
                    "type" : "array"
                  },
                  "WeightKg" : {
                    "description" : "Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                    "example" : 1,
                    "title" : "WeightKg",
                    "type" : "number"
                  },
                  "Width" : {
                    "description" : "SKU real width.",
                    "example" : 1,
                    "title" : "Width",
                    "type" : "number"
                  }
                },
                "required" : [ "ProductId", "Name", "PackagedHeight", "PackagedLength", "PackagedWidth", "PackagedWeightKg" ],
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ActivateIfPossible" : false,
                  "CommercialConditionId" : 1,
                  "CreationDate" : "2020-01-25T15:51:29.2614605",
                  "CubicWeight" : 0.1667,
                  "EstimatedDateArrival" : null,
                  "Height" : 1,
                  "Id" : 70,
                  "IsActive" : false,
                  "IsKit" : false,
                  "KitItensSellApart" : false,
                  "Length" : 1,
                  "ManufacturerCode" : "",
                  "MeasurementUnit" : "un",
                  "ModalType" : null,
                  "Name" : "Size 10",
                  "PackagedHeight" : 10,
                  "PackagedLength" : 10,
                  "PackagedWeightKg" : 10,
                  "PackagedWidth" : 10,
                  "ProductId" : 42,
                  "RefId" : "B096QW8Y8Z",
                  "RewardValue" : 0,
                  "UnitMultiplier" : 2,
                  "Videos" : [ "https://www.youtube.com/" ],
                  "WeightKg" : 1,
                  "Width" : 1
                },
                "schema" : {
                  "properties" : {
                    "ActivateIfPossible" : {
                      "description" : "When set to `true`, this attribute will automatically update the SKU as active once associated with an image or an active component.",
                      "title" : "ActivateIfPossible",
                      "type" : "boolean"
                    },
                    "CommercialConditionId" : {
                      "description" : "Used to define SKU specific promotions or installment rules. In case of no specific condition, use `1` (default value). This field does not accept `0`. Find out more by reading [Registering a commercial condition](https://help.vtex.com/tutorial/registering-a-commercial-condition--tutorials_445).",
                      "title" : "CommercialConditionId",
                      "type" : "integer"
                    },
                    "CreationDate" : {
                      "description" : "Date and time of the SKU's creation.",
                      "type" : "string"
                    },
                    "CubicWeight" : {
                      "description" : "[Cubic weight](https://help.vtex.com/en/tutorial/understanding-the-cubic-weight-factor--tutorials_128).",
                      "title" : "CubicWeight",
                      "type" : "number"
                    },
                    "EstimatedDateArrival" : {
                      "description" : "SKU estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the product is on pre-sale. You must take into consideration both the launch date and the freight calculation for the arrival date.",
                      "nullable" : true,
                      "title" : "EstimatedDateArrival",
                      "type" : "string"
                    },
                    "Height" : {
                      "description" : "SKU real height.",
                      "title" : "Height",
                      "type" : "number"
                    },
                    "Id" : {
                      "description" : "SKU unique identifier.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Shows if the SKU is active (`true`) or not (`false`).",
                      "title" : "IsActive",
                      "type" : "boolean"
                    },
                    "IsKit" : {
                      "description" : "Flag to set whether the product SKU is made up of one or more SKUs, thereby becoming a bundle. Must be enabled if you are adding a bundle. Once activated, the flag cannot be reverted.",
                      "title" : "IsKit",
                      "type" : "boolean"
                    },
                    "KitItensSellApart" : {
                      "description" : "Defines if Kit components can be sold apart.",
                      "title" : "KitItensSellApart",
                      "type" : "boolean"
                    },
                    "Length" : {
                      "description" : "SKU real length.",
                      "title" : "Length",
                      "type" : "number"
                    },
                    "ManufacturerCode" : {
                      "description" : "Provided by the manufacturers to identify their product. This field should be filled in if the product has a specific manufacturer’s code.",
                      "title" : "ManufacturerCode",
                      "type" : "string"
                    },
                    "MeasurementUnit" : {
                      "description" : "Used only in cases when you need to convert the unit of measure for sale. If a product is sold in boxes for example, but customers want to buy per square meter (m²). In common cases, use `'un'`.",
                      "example" : "un",
                      "title" : "MeasurementUnit",
                      "type" : "string"
                    },
                    "ModalType" : {
                      "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
                      "nullable" : true,
                      "title" : "ModalType",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "SKU name, meaning the variation of the previously added product. For example: **Product** - _Fridge_, **SKU** - _110V_.",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "PackagedHeight" : {
                      "description" : "Height used for shipping calculation.",
                      "title" : "PackagedHeight",
                      "type" : "number"
                    },
                    "PackagedLength" : {
                      "description" : "Length used for shipping calculation.",
                      "title" : "PackagedLength",
                      "type" : "number"
                    },
                    "PackagedWeightKg" : {
                      "description" : "Weight used for shipping calculation, in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                      "title" : "PackagedWeightKg",
                      "type" : "integer"
                    },
                    "PackagedWidth" : {
                      "description" : "Width used for shipping calculation.",
                      "title" : "PackagedWidth",
                      "type" : "number"
                    },
                    "ProductId" : {
                      "description" : "ID of the Product associated with this SKU.",
                      "title" : "ProductId",
                      "type" : "integer"
                    },
                    "RefId" : {
                      "description" : "Reference code used internally for organizational purposes. Must be unique. It is not required only if EAN code already exists. If not, this field must be provided.",
                      "title" : "RefId",
                      "type" : "string"
                    },
                    "RewardValue" : {
                      "description" : "Credit that the customer receives when finalizing an order of one specific SKU unit. By filling this field out with `1`, the customer gets U$ 1 credit on the site.",
                      "title" : "RewardValue",
                      "type" : "number"
                    },
                    "UnitMultiplier" : {
                      "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
                      "title" : "UnitMultiplier",
                      "type" : "number"
                    },
                    "Videos" : {
                      "description" : "Videos URLs.",
                      "items" : {
                        "description" : "Video URL.",
                        "title" : "",
                        "type" : "string"
                      },
                      "title" : "Videos",
                      "type" : "array"
                    },
                    "WeightKg" : {
                      "description" : "Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
                      "title" : "WeightKg",
                      "type" : "number"
                    },
                    "Width" : {
                      "description" : "SKU real width.",
                      "title" : "Width",
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SKU",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/attachment" : {
      "get" : {
        "description" : "Retrieves existing SKU Attachments by SKU ID. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 97,\r\n        \"AttachmentId\": 1,\r\n        \"SkuId\": 1\r\n    }\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU unique identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "AttachmentId" : 1,
                  "Id" : 97,
                  "SkuId" : 1
                } ],
                "schema" : {
                  "description" : "Array of objects with information about the association between the attachments and the SKU.",
                  "items" : {
                    "description" : "Object containing information about the association between the SKU and the attachment.",
                    "properties" : {
                      "AttachmentId" : {
                        "description" : "Attachment ID.",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "Id" : {
                        "description" : "Identifier of the SKU's association to the attachment.",
                        "example" : 31,
                        "type" : "integer"
                      },
                      "SkuId" : {
                        "description" : "Unique identifier of the SKU.",
                        "example" : 7,
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Attachments by SKU ID",
        "tags" : [ "SKU Attachment" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/complement" : {
      "get" : {
        "description" : "Retrieves an existing SKU Complement by its SKU ID. \r\n\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 61,\r\n        \"SkuId\": 7,\r\n        \"ParentSkuId\": 1,\r\n        \"ComplementTypeId\": 1\r\n    }\r\n]\r\n```",
        "operationId" : "GetSKUComplementbySKUID",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "ComplementTypeId" : 1,
                  "Id" : 61,
                  "ParentSkuId" : 1,
                  "SkuId" : 7
                } ],
                "schema" : {
                  "$ref" : "#/components/schemas/SkuComplement"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Complement by SKU ID",
        "tags" : [ "SKU Complement" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/complement/{complementTypeId}" : {
      "get" : {
        "description" : "Retrieves all the existing SKU Complements with the same Complement Type ID of a specific SKU. \r\n\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 61,\r\n        \"SkuId\": 7,\r\n        \"ParentSkuId\": 1,\r\n        \"ComplementTypeId\": 1\r\n    }\r\n]\r\n```",
        "operationId" : "GetSKUComplementsbyComplementTypeID",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of the SKU which will be inserted as a Complement in the Parent SKU.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Complement Type ID. This represents the type of the complement. The possible values are: `1` for Accessory; `2` for Suggestion; `3` for Similar Product; `5` for Show Together.",
          "in" : "path",
          "name" : "complementTypeId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "ComplementTypeId" : 1,
                  "Id" : 61,
                  "ParentSkuId" : 1,
                  "SkuId" : 7
                } ],
                "schema" : {
                  "$ref" : "#/components/schemas/SkuComplement"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Complements by Complement Type ID",
        "tags" : [ "SKU Complement" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/ean" : {
      "delete" : {
        "description" : "Deletes all EAN values of an SKU.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete all SKU EAN values",
        "tags" : [ "SKU EAN" ]
      },
      "get" : {
        "description" : "Retrieves the EAN of the SKU. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    \"1234567890123\"\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ "1234567890123" ],
                "schema" : {
                  "description" : "Array with EANs associated with the SKU.",
                  "items" : {
                    "description" : "EAN.",
                    "example" : "1234567890123",
                    "type" : "string"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get EAN by SKU ID",
        "tags" : [ "SKU EAN" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/ean/{ean}" : {
      "delete" : {
        "description" : "Deletes the EAN value of an SKU.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "EAN number.",
          "in" : "path",
          "name" : "ean",
          "required" : true,
          "schema" : {
            "example" : "ABC123",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU EAN",
        "tags" : [ "SKU EAN" ]
      },
      "post" : {
        "description" : "Creates or updates the EAN value of an SKU.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "EAN.",
          "in" : "path",
          "name" : "ean",
          "required" : true,
          "schema" : {
            "example" : "1234567",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Create SKU EAN",
        "tags" : [ "SKU EAN" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/file" : {
      "delete" : {
        "description" : "Deletes all SKU Image Files.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete All SKU Files",
        "tags" : [ "SKU File" ]
      },
      "get" : {
        "description" : "Gets general information about all Files in the SKU. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 549,\r\n        \"ArchiveId\": 155485,\r\n        \"SkuId\": 310118490,\r\n        \"Name\": \"chimera-cat-quimera-5\",\r\n        \"IsMain\": true,\r\n        \"Label\": \"miau\"\r\n    },\r\n    {\r\n        \"Id\": 550,\r\n        \"ArchiveId\": 155486,\r\n        \"SkuId\": 310118490,\r\n        \"Name\": \"Gato-siames\",\r\n        \"IsMain\": false,\r\n        \"Label\": \"Gato siames\"\r\n    },\r\n    {\r\n        \"Id\": 555,\r\n        \"ArchiveId\": 155491,\r\n        \"SkuId\": 310118490,\r\n        \"Name\": \"Cat-Sleeping-Pics\",\r\n        \"IsMain\": false,\r\n        \"Label\": null\r\n    }\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Array with objects containing SKU Files information.",
                  "example" : [ {
                    "ArchiveId" : 155485,
                    "Id" : 549,
                    "IsMain" : true,
                    "Label" : "miau",
                    "Name" : "chimera-cat-quimera-5",
                    "SkuId" : 310118490
                  }, {
                    "ArchiveId" : 155486,
                    "Id" : 550,
                    "IsMain" : false,
                    "Label" : "Gato siames",
                    "Name" : "Gato-siames",
                    "SkuId" : 310118490
                  }, {
                    "ArchiveId" : 155491,
                    "Id" : 555,
                    "IsMain" : false,
                    "Label" : null,
                    "Name" : "Cat-Sleeping-Pics",
                    "SkuId" : 310118490
                  } ],
                  "items" : {
                    "description" : "Object containing each SKU File's information.",
                    "properties" : {
                      "ArchiveId" : {
                        "description" : "Unique identifier of the Image.",
                        "example" : 1,
                        "title" : "ArchiveId",
                        "type" : "integer"
                      },
                      "Id" : {
                        "description" : "Unique identifier of the association of the Image to the SKU.",
                        "example" : 1,
                        "title" : "Id",
                        "type" : "integer"
                      },
                      "IsMain" : {
                        "description" : "Defines if the Image is the Main Image of the SKU.",
                        "example" : true,
                        "title" : "IsMain",
                        "type" : "boolean"
                      },
                      "Label" : {
                        "description" : "Image label.",
                        "example" : "cat",
                        "nullable" : true,
                        "title" : "Label",
                        "type" : "string"
                      },
                      "Name" : {
                        "description" : "Image name.",
                        "example" : "cat-picture",
                        "title" : "Name",
                        "type" : "string"
                      },
                      "SkuId" : {
                        "description" : "Unique identifier of the SKU.",
                        "example" : 1,
                        "title" : "SkuId",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Files",
        "tags" : [ "SKU File" ]
      },
      "post" : {
        "description" : "Creates a new Image for an SKU based on its URL or on a form-data request body. \r\n## Request body example\r\n\r\n```json\r\n{\r\n      \"IsMain\": true,\r\n      \"Label\": \"\",\r\n      \"Name\": \"Royal-Canin-Feline-Urinary-SO\",\r\n      \"Text\": null,\r\n      \"Url\": \"https://1.bp.blogspot.com/_SLQk9aAv9-o/S7NNbJPv7NI/AAAAAAAAAN8/V1LcO0ViDc4/s1600/waterbottle.jpg\"\r\n      \r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n      \"Id\": 503,\r\n      \"ArchiveId\": 155491,\r\n      \"SkuId\": 1,\r\n      \"Name\": \"Royal-Canin-Feline-Urinary-SO\",\r\n      \"IsMain\": true,\r\n      \"Label\": \"\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 123456,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SKUFileURL"
              }
            },
            "form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/SKUFile"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ArchiveId" : 155569,
                  "Id" : 625,
                  "IsMain" : true,
                  "Label" : "Main",
                  "SkuId" : 123456
                },
                "schema" : {
                  "properties" : {
                    "ArchiveId" : {
                      "description" : "Unique identifier of the image file.",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "ID of the association of the SKU and the image (`SkuFileId`). This is the ID that is used to update or delete it.",
                      "type" : "integer"
                    },
                    "IsMain" : {
                      "description" : "Set the image as the main image for the product.",
                      "type" : "boolean"
                    },
                    "Label" : {
                      "description" : "Image label.",
                      "type" : "string"
                    },
                    "SkuId" : {
                      "description" : "SKU ID.",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create SKU File",
        "tags" : [ "SKU File" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/file/{skuFileId}" : {
      "delete" : {
        "description" : "Deletes a specific SKU Image File.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "ID of the association of the SKU and the image, which can be obtained by placing a request to the [Get SKU File](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-sku-file) endpoint and copying the `Id` field.",
          "in" : "path",
          "name" : "skuFileId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Image File",
        "tags" : [ "SKU File" ]
      },
      "put" : {
        "description" : "Updates a new Image on an SKU based on its URL or on a form-data request body. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"IsMain\": true,\r\n    \"Label\": null,\r\n    \"Name\": \"toilet-paper\",\r\n    \"Text\": null,\r\n    \"Url\": \"https://images-na.ssl-images-amazon.com/images/I/81DLLXaGI7L._SL1500_.jpg\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 508,\r\n    \"ArchiveId\": 155491,\r\n    \"SkuId\": 7,\r\n    \"IsMain\": true,\r\n    \"Label\": null\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 123456,
            "type" : "integer"
          }
        }, {
          "description" : "ID of the association of the SKU and the image, which can be obtained by placing a request to the [Get SKU File](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-sku-file) endpoint and copying the `Id` field.",
          "in" : "path",
          "name" : "skuFileId",
          "required" : true,
          "schema" : {
            "example" : 517,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SKUFileURL"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "ArchiveId" : 155569,
                  "Id" : 625,
                  "IsMain" : true,
                  "Label" : "Main",
                  "SkuId" : 123456
                },
                "schema" : {
                  "properties" : {
                    "ArchiveId" : {
                      "description" : "Unique identifier of the image file.",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "ID of the association of the SKU and the image (`SkuFileId`). This is the ID that is used to update or delete it.",
                      "type" : "integer"
                    },
                    "IsMain" : {
                      "description" : "Set the image as the main image for the product.",
                      "type" : "boolean"
                    },
                    "Label" : {
                      "description" : "Image label.",
                      "type" : "string"
                    },
                    "SkuId" : {
                      "description" : "SKU ID.",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SKU File",
        "tags" : [ "SKU File" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/specification" : {
      "delete" : {
        "description" : "Deletes all SKU Specifications.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete all SKU Specifications",
        "tags" : [ "SKU Specification" ]
      },
      "get" : {
        "description" : "Retrieves information about an SKU's Specifications. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 427,\r\n        \"SkuId\": 7,\r\n        \"FieldId\": 32,\r\n        \"FieldValueId\": 131,\r\n        \"Text\": \"500g\"\r\n    },\r\n    {\r\n        \"Id\": 428,\r\n        \"SkuId\": 7,\r\n        \"FieldId\": 40,\r\n        \"FieldValueId\": 133,\r\n        \"Text\": \"A\"\r\n    }\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SKUSpecificationResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Specifications",
        "tags" : [ "SKU Specification" ]
      },
      "post" : {
        "description" : "Associates a previously created Specification to an SKU. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldId\": 65,\r\n    \"FieldValueId\": 138\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 730,\r\n    \"SkuId\": 31,\r\n    \"FieldId\": 65,\r\n    \"FieldValueId\": 138,\r\n    \"Text\": \"Size\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1234568387,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FieldId" : {
                    "description" : "Specification ID.",
                    "example" : 13,
                    "title" : "FieldId",
                    "type" : "integer"
                  },
                  "FieldValueId" : {
                    "description" : "Specification Value ID. Required only for `FieldTypeId` as `5`, `6` and `7`.",
                    "example" : 101,
                    "title" : "FieldValueId",
                    "type" : "integer"
                  }
                },
                "required" : [ "FieldId" ],
                "title" : "",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SKUSpecificationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate SKU Specification",
        "tags" : [ "SKU Specification" ]
      },
      "put" : {
        "description" : "Updates an existing Specification on an existing SKU. This endpoint only updates the `FieldValueId`. \r\n## Request body example\r\n\r\n```json\r\n{\r\n  \"Id\": 65,\r\n  \"SkuId\": 21,\r\n  \"FieldId\": 32,\r\n  \"FieldValueId\": 131,\r\n  \"Text\": \"Red\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"Id\": 65,\r\n  \"SkuId\": 21,\r\n  \"FieldId\": 32,\r\n  \"FieldValueId\": 131,\r\n  \"Text\": \"Red\"\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 21,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "FieldId" : {
                    "description" : "Specification unique identifier. This field cannot be updated.",
                    "example" : 32,
                    "title" : "FieldId",
                    "type" : "integer"
                  },
                  "FieldValueId" : {
                    "description" : "Specification value unique identifier. This field can only be updated with other values of the same `FieldId`.",
                    "example" : 131,
                    "title" : "FieldValueId",
                    "type" : "integer"
                  },
                  "Id" : {
                    "description" : "Specification and SKU association unique identifier. This field cannot be updated.",
                    "example" : 65,
                    "title" : "Id",
                    "type" : "integer"
                  },
                  "SkuId" : {
                    "description" : "SKU unique identifier. This field cannot be updated.",
                    "example" : 21,
                    "title" : "SkuId",
                    "type" : "integer"
                  },
                  "Text" : {
                    "description" : "Specification Value Name. This field is automatically updated if the `FieldValue` is updated. Otherwise, the value cannot be modified.",
                    "example" : "Red",
                    "title" : "Text",
                    "type" : "string"
                  }
                },
                "required" : [ "Id", "FieldId", "FieldValueId" ],
                "title" : "Request Body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SKUSpecificationResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SKU Specification",
        "tags" : [ "SKU Specification" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/specification/{specificationId}" : {
      "delete" : {
        "description" : "Deletes a specific SKU Specification.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Specification’s unique numerical identifier.",
          "in" : "path",
          "name" : "specificationId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Specification",
        "tags" : [ "SKU Specification" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunit/{skuId}/specificationvalue" : {
      "put" : {
        "description" : "Associates a specification to an SKU using specification name and group name. Automatically creates the informed group, specification and values if they had not been created before.\r\n\r\n ## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldName\": \"Size\",\r\n    \"GroupName\": \"Sizes\",\r\n    \"RootLevelSpecification\": false,\r\n    \"FieldValues\": [\r\n        \"M\"\r\n        ]\r\n}\r\n```\r\n \r\n \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 419,\r\n        \"SkuId\": 5,\r\n        \"FieldId\": 22,\r\n        \"FieldValueId\": 62,\r\n        \"Text\": \"M\"\r\n    }\r\n]\r\n```\r\n",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "description" : "",
                "example" : {
                  "FieldName" : "Size",
                  "FieldValues" : [ "M" ],
                  "GroupName" : "Sizes",
                  "RootLevelSpecification" : true
                },
                "properties" : {
                  "FieldName" : {
                    "description" : "Specification name.",
                    "example" : "Material",
                    "type" : "string"
                  },
                  "FieldValues" : {
                    "description" : "Array of specification values. SKU Specifications must contain only one value.",
                    "example" : [ "M" ],
                    "items" : {
                      "description" : "Specification value.",
                      "example" : "M",
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "GroupName" : {
                    "description" : "Group name.",
                    "example" : "Composition",
                    "type" : "string"
                  },
                  "RootLevelSpecification" : {
                    "description" : "Root level specification.",
                    "example" : true,
                    "type" : "boolean"
                  }
                },
                "required" : [ "FieldName", "GroupName", "RootLevelSpecification", "FieldValues" ],
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Array with information of all SKU specifications.",
                  "example" : [ {
                    "FieldId" : 29,
                    "FieldValueId" : 76,
                    "Id" : 418,
                    "SkuId" : 5,
                    "Text" : "M"
                  } ],
                  "items" : {
                    "description" : "Object with information of the specification.",
                    "properties" : {
                      "FieldId" : {
                        "description" : "Specification ID.",
                        "type" : "integer"
                      },
                      "FieldValueId" : {
                        "description" : "Current specification value ID.",
                        "type" : "integer"
                      },
                      "Id" : {
                        "description" : "ID of the association of the SKU and the specification.",
                        "type" : "integer"
                      },
                      "SkuId" : {
                        "description" : "SKU ID.",
                        "type" : "integer"
                      },
                      "Text" : {
                        "description" : "Current specification value text.",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "title" : "",
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate SKU specification using specification name and group name",
        "tags" : [ "SKU Specification" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunitkit" : {
      "delete" : {
        "description" : "Deletes all Kit’s components based on the Parent SKU ID or deletes a specific Kit’s component based on the SKU ID.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "explode" : true,
          "in" : "query",
          "name" : "skuId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Parent SKU’s unique numerical identifier.",
          "explode" : true,
          "in" : "query",
          "name" : "parentSkuId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Kit by SKU ID or Parent SKU ID",
        "tags" : [ "SKU Kit" ]
      },
      "get" : {
        "description" : "Retrieves general information about the components of an SKU Kit by SKU ID or Parent SKU ID. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 7,\r\n    \"StockKeepingUnitParent\": 7,\r\n    \"StockKeepingUnitId\": 1,\r\n    \"Quantity\": 1,\r\n    \"UnitPrice\": 50.0000\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "explode" : true,
          "in" : "query",
          "name" : "skuId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Parent SKU’s unique numerical identifier.",
          "explode" : true,
          "in" : "query",
          "name" : "parentSkuId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "Id" : 7,
                  "Quantity" : 1,
                  "StockKeepingUnitId" : 1,
                  "StockKeepingUnitParent" : 7,
                  "UnitPrice" : 50
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SkuKit"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Kit by SKU ID or Parent SKU ID",
        "tags" : [ "SKU Kit" ]
      },
      "post" : {
        "description" : "Adds a component to a specific Kit. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"StockKeepingUnitParent\": 7,\r\n    \"StockKeepingUnitId\": 1,\r\n    \"Quantity\": 1,\r\n    \"UnitPrice\": 50.0000\r\n}\r\n``` \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 7,\r\n    \"StockKeepingUnitParent\": 7,\r\n    \"StockKeepingUnitId\": 1,\r\n    \"Quantity\": 1,\r\n    \"UnitPrice\": 50.0000\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "Quantity" : {
                    "description" : "Component quantity.",
                    "example" : 3,
                    "title" : "Quantity",
                    "type" : "integer"
                  },
                  "StockKeepingUnitId" : {
                    "description" : "Component SKU ID.",
                    "example" : 31018374,
                    "title" : "StockKeepingUnitId",
                    "type" : "integer"
                  },
                  "StockKeepingUnitParent" : {
                    "description" : "SKU ID of the SKU Kit.",
                    "example" : 31018373,
                    "title" : "StockKeepingUnitParent",
                    "type" : "integer"
                  },
                  "UnitPrice" : {
                    "description" : "Component price per unit.",
                    "example" : 15.5,
                    "title" : "UnitPrice",
                    "type" : "number"
                  }
                },
                "required" : [ "StockKeepingUnitParent", "StockKeepingUnitId", "Quantity", "UnitPrice" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "Id" : 7,
                  "Quantity" : 1,
                  "StockKeepingUnitId" : 1,
                  "StockKeepingUnitParent" : 7,
                  "UnitPrice" : 50
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SkuKit"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create SKU Kit",
        "tags" : [ "SKU Kit" ]
      }
    },
    "/api/catalog/pvt/stockkeepingunitkit/{kitId}" : {
      "delete" : {
        "description" : "Deletes a specific Kit’s component based on its Kit ID.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Kit’s unique numerical identifier.",
          "in" : "path",
          "name" : "kitId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU Kit by KitId",
        "tags" : [ "SKU Kit" ]
      },
      "get" : {
        "description" : "Retrieves general information about a component of a Kit.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Kit’s unique numerical identifier",
          "in" : "path",
          "name" : "kitId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "Id" : 7,
                  "Quantity" : 1,
                  "StockKeepingUnitId" : 1,
                  "StockKeepingUnitParent" : 7,
                  "UnitPrice" : 50
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SkuKit"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU Kit",
        "tags" : [ "SKU Kit" ]
      }
    },
    "/api/catalog/pvt/subcollection" : {
      "post" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nCreates a new Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection. A Subcollection can be either “Exclusive” (all the products contained in it will not be used) or “Inclusive” (all the products contained in it will be used).\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"CollectionId\": 149,\r\n    \"Name\": \"Test\",\r\n    \"Type\": \"Exclusive\",\r\n    \"PreSale\": true,\r\n    \"Release\": false\r\n}\r\n```\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 13,\r\n    \"CollectionId\": 149,\r\n    \"Name\": \"Test\",\r\n    \"Type\": \"Exclusive\",\r\n    \"PreSale\": true,\r\n    \"Release\": false\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "CollectionId" : {
                    "description" : "SubCollection ID.",
                    "example" : 17,
                    "title" : "CollectionId",
                    "type" : "integer"
                  },
                  "Name" : {
                    "description" : "SubCollection Name.",
                    "example" : "group 1",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "PreSale" : {
                    "description" : "Defines PreSale date.",
                    "example" : false,
                    "title" : "PreSale",
                    "type" : "boolean"
                  },
                  "Release" : {
                    "description" : "Defines Release date.",
                    "example" : false,
                    "title" : "Release",
                    "type" : "boolean"
                  },
                  "Type" : {
                    "description" : "Either `“Exclusive”` (all the products contained in it will not be used) or `“Inclusive”` (all the products contained in it will be used).",
                    "example" : "Inclusive",
                    "title" : "Type",
                    "type" : "string"
                  }
                },
                "required" : [ "CollectionId", "Name", "Type", "PreSale", "Release" ],
                "title" : "",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CollectionId" : 151,
                  "Id" : 17,
                  "Name" : "group 1",
                  "PreSale" : false,
                  "Release" : false,
                  "Type" : "Inclusive"
                },
                "schema" : {
                  "properties" : {
                    "CollectionId" : {
                      "description" : "Collection ID.",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Subcollection ID.",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Subcollection Name.",
                      "type" : "string"
                    },
                    "PreSale" : {
                      "description" : "Defines if the collection is on PreSale.",
                      "type" : "boolean"
                    },
                    "Release" : {
                      "description" : "Defines if the collection is a new released one.",
                      "type" : "boolean"
                    },
                    "Type" : {
                      "description" : "Either `“Exclusive”` (all the products contained in it will not be used) or `“Inclusive”` (all the products contained in it will be used).",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/subcollection/{subCollectionId}" : {
      "delete" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nDeletes a previously created Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      },
      "get" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nRetrieves information about a Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 13,\r\n    \"CollectionId\": 149,\r\n    \"Name\": \"Test\",\r\n    \"Type\": \"Exclusive\",\r\n    \"PreSale\": true,\r\n    \"Release\": false\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 17,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CollectionId" : 151,
                  "Id" : 17,
                  "Name" : "group 1",
                  "PreSale" : false,
                  "Release" : false,
                  "Type" : "Inclusive"
                },
                "schema" : {
                  "properties" : {
                    "CollectionId" : {
                      "description" : "Collection ID.",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Subcollection ID.",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Subcollection Name.",
                      "type" : "string"
                    },
                    "PreSale" : {
                      "description" : "Defines if the collection is on PreSale.",
                      "type" : "boolean"
                    },
                    "Release" : {
                      "description" : "Defines if the collection is a new released one.",
                      "type" : "boolean"
                    },
                    "Type" : {
                      "description" : "Either `“Exclusive”` (all the products contained in it will not be used) or `“Inclusive”` (all the products contained in it will be used).",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      },
      "put" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nUpdates a previously created Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.\r\n\r\n## Request or response body example\r\n\r\n```json\r\n{\r\n    \"CollectionId\": 149,\r\n    \"Name\": \"Test\",\r\n    \"Type\": \"Exclusive\",\r\n    \"PreSale\": true,\r\n    \"Release\": false\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 17,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "CollectionId" : {
                    "description" : "Collection ID.",
                    "example" : 17,
                    "title" : "CollectionId",
                    "type" : "integer"
                  },
                  "Name" : {
                    "description" : "Subcollection Name.",
                    "example" : "group 1",
                    "title" : "Name",
                    "type" : "string"
                  },
                  "PreSale" : {
                    "description" : "Defines PreSale date.",
                    "example" : false,
                    "title" : "PreSale",
                    "type" : "boolean"
                  },
                  "Release" : {
                    "description" : "Defines Release date.",
                    "example" : false,
                    "title" : "Release",
                    "type" : "boolean"
                  },
                  "Type" : {
                    "description" : "Either `“Exclusive”` (all the products contained in it will not be used) or `“Inclusive”` (all the products contained in it will be used).",
                    "example" : "Inclusive",
                    "title" : "Type",
                    "type" : "string"
                  }
                },
                "required" : [ "CollectionId", "Name", "Type", "PreSale", "Release" ],
                "title" : "",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CollectionId" : 151,
                  "Id" : 17,
                  "Name" : "group 1",
                  "PreSale" : false,
                  "Release" : false,
                  "Type" : "Inclusive"
                },
                "schema" : {
                  "properties" : {
                    "CollectionId" : {
                      "description" : "Collection ID.",
                      "type" : "integer"
                    },
                    "Id" : {
                      "description" : "Subcollection ID.",
                      "type" : "integer"
                    },
                    "Name" : {
                      "description" : "Subcollection Name.",
                      "type" : "string"
                    },
                    "PreSale" : {
                      "description" : "Defines if the collection is on PreSale.",
                      "type" : "boolean"
                    },
                    "Release" : {
                      "description" : "Defines if the collection is a new released one.",
                      "type" : "boolean"
                    },
                    "Type" : {
                      "description" : "Either `“Exclusive”` (all the products contained in it will not be used) or `“Inclusive”` (all the products contained in it will be used).",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/subcollection/{subCollectionId}/brand" : {
      "post" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nAssociates a single Brand to a Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"BrandId\": 2000000\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"SubCollectionId\": 17,\r\n    \"BrandId\": 2000000\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "BrandId" : {
                    "description" : "Unique identifier of a Brand.",
                    "example" : 2000000,
                    "title" : "BrandId",
                    "type" : "integer"
                  }
                },
                "required" : [ "BrandId" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "BrandId" : 2000000,
                    "SubCollectionId" : 17
                  },
                  "properties" : {
                    "BrandId" : {
                      "description" : "Unique identifier of the Brand.",
                      "example" : 2000000,
                      "type" : "integer"
                    },
                    "SubCollectionId" : {
                      "description" : "Subcollection’s unique numerical identifier.",
                      "example" : 17,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate Brand to Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/subcollection/{subCollectionId}/brand/{brandId}" : {
      "delete" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nDeletes a Brand from a Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Brand’s unique numerical identifier.",
          "in" : "path",
          "name" : "brandId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Brand from Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/subcollection/{subCollectionId}/brand/{categoryId}" : {
      "delete" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nDeletes a Category from a Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Category’s unique numerical identifier.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Category from Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/subcollection/{subCollectionId}/category" : {
      "post" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nAssociates a single Category to a Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"CategoryId\": 1\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"SubCollectionId\": 17,\r\n    \"CategoryId\": 1\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "CategoryId" : {
                    "description" : "Unique identifier of a Category.",
                    "example" : 0,
                    "title" : "CategoryId",
                    "type" : "integer"
                  }
                },
                "required" : [ "CategoryId" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "CategoryId" : 1,
                    "SubCollectionId" : 17
                  },
                  "properties" : {
                    "CategoryId" : {
                      "description" : "Unique identifier of the Category.",
                      "example" : 1,
                      "title" : "CategoryId",
                      "type" : "integer"
                    },
                    "SubCollectionId" : {
                      "description" : "Subcollection’s unique numerical identifier.",
                      "example" : 17,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate Category to Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/subcollection/{subCollectionId}/stockkeepingunit" : {
      "post" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nAssociates a single SKU to a Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"SkuId\": 1\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"SubCollectionId\": 17,\r\n    \"SkuId\": 1\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "SkuId" : {
                    "description" : "Unique identifier of an SKU.",
                    "example" : 1,
                    "title" : "SkuId",
                    "type" : "integer"
                  }
                },
                "required" : [ "SkuId" ],
                "title" : "Request body",
                "type" : "object"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "SkuId" : 1,
                    "SubCollectionId" : 17
                  },
                  "properties" : {
                    "SkuId" : {
                      "description" : "Unique identifier of the SKU.",
                      "example" : 1,
                      "type" : "integer"
                    },
                    "SubCollectionId" : {
                      "description" : "Subcollection’s unique numerical identifier.",
                      "example" : 17,
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Add SKU to Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/subcollection/{subCollectionId}/stockkeepingunit/{skuId}" : {
      "delete" : {
        "description" : " >⚠️ There are two ways to configure collections, through Legacy CMS Portal or using the Beta Collection module. This endpoint is compatible with [collections configured through the Legacy CMS Portal](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L).\n\nDeletes an SKU from a Subcollection, which is a [Group](https://help.vtex.com/en/tutorial/adding-collections-cms--2YBy6P6X0NFRpkD2ZBxF6L#group-types) within a  Collection.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Subcollection’s unique numerical identifier, which can be obtained by placing a request to [Get Subcollection by Collection ID](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-subcollection-collectionid).",
          "in" : "path",
          "name" : "subCollectionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "SKU’s unique numerical identifier.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete SKU from Subcollection",
        "tags" : [ "Legacy Subcollection" ]
      }
    },
    "/api/catalog/pvt/supplier" : {
      "post" : {
        "description" : "Creates a new Supplier. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Supplier\",\r\n    \"CorporateName\": \"TopStore\",\r\n    \"StateInscription\": \"\",\r\n    \"Cnpj\": \"33304981001272\",\r\n    \"Phone\": \"3333333333\",\r\n    \"CellPhone\": \"4444444444\",\r\n    \"CorportePhone\": \"5555555555\",\r\n    \"Email\": \"email@email.com\",\r\n    \"IsActive\": true\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Supplier\",\r\n    \"CorporateName\": \"TopStore\",\r\n    \"StateInscription\": \"\",\r\n    \"Cnpj\": \"33304981001272\",\r\n    \"Phone\": \"3333333333\",\r\n    \"CellPhone\": \"4444444444\",\r\n    \"CorportePhone\": \"5555555555\",\r\n    \"Email\": \"email@email.com\",\r\n    \"IsActive\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Supplier",
        "tags" : [ "Supplier" ]
      }
    },
    "/api/catalog/pvt/supplier/{supplierId}" : {
      "delete" : {
        "description" : "Deletes an existing Supplier.",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Supplier's unique numerical identifier.",
          "in" : "path",
          "name" : "supplierId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Delete Supplier",
        "tags" : [ "Supplier" ]
      },
      "put" : {
        "description" : "Updates general information of an existing Supplier. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Supplier\",\r\n    \"CorporateName\": \"TopStore\",\r\n    \"StateInscription\": \"\",\r\n    \"Cnpj\": \"33304981001272\",\r\n    \"Phone\": \"3333333333\",\r\n    \"CellPhone\": \"4444444444\",\r\n    \"CorportePhone\": \"5555555555\",\r\n    \"Email\": \"email@email.com\",\r\n    \"IsActive\": true\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Supplier\",\r\n    \"CorporateName\": \"TopStore\",\r\n    \"StateInscription\": \"\",\r\n    \"Cnpj\": \"33304981001272\",\r\n    \"Phone\": \"3333333333\",\r\n    \"CellPhone\": \"4444444444\",\r\n    \"CorportePhone\": \"5555555555\",\r\n    \"Email\": \"email@email.com\",\r\n    \"IsActive\": true\r\n}\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Supplier's unique numerical identifier.",
          "in" : "path",
          "name" : "supplierId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SupplierRequest"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SupplierResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Supplier",
        "tags" : [ "Supplier" ]
      }
    },
    "/api/catalog_system/pub/category/tree/{categoryLevels}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves the Category Tree of your store. Get all the category levels registered in the Catalog or define the level up to which you want to get.  \r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Alimentação\",\r\n        \"hasChildren\": true,\r\n        \"url\": \"https://lojadobreno.vtexcommercestable.com.br/alimentacao\",\r\n        \"children\": [\r\n            {\r\n                \"id\": 6,\r\n                \"name\": \"Bebedouro\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/alimentacao/bebedouro\",\r\n                \"children\": [],\r\n                \"Title\": \"Bebedouro para Gatos\",\r\n                \"MetaTagDescription\": \"\"\r\n            },\r\n            {\r\n                \"id\": 7,\r\n                \"name\": \"Comedouro\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/alimentacao/comedouro\",\r\n                \"children\": [],\r\n                \"Title\": \"Comedouro para Gatos\",\r\n                \"MetaTagDescription\": \"\"\r\n            },\r\n            {\r\n                \"id\": 8,\r\n                \"name\": \"Biscoitos\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/alimentacao/biscoitos\",\r\n                \"children\": [],\r\n                \"Title\": \"Biscoitos para Gatos\",\r\n                \"MetaTagDescription\": \"\"\r\n            },\r\n            {\r\n                \"id\": 9,\r\n                \"name\": \"Petiscos\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/alimentacao/petiscos\",\r\n                \"children\": [],\r\n                \"Title\": \"Petiscos para Gatos\",\r\n                \"MetaTagDescription\": \"\"\r\n            },\r\n            {\r\n                \"id\": 10,\r\n                \"name\": \"Ração Seca\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/alimentacao/racao-seca\",\r\n                \"children\": [],\r\n                \"Title\": \"Ração Seca para Gatos\",\r\n                \"MetaTagDescription\": \"\"\r\n            },\r\n            {\r\n                \"id\": 11,\r\n                \"name\": \"Ração Úmida\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/alimentacao/racao-umida\",\r\n                \"children\": [],\r\n                \"Title\": \"Ração Úmida para Gatos\",\r\n                \"MetaTagDescription\": \"\"\r\n            }\r\n        ],\r\n        \"Title\": \"Alimentação para Gatos\",\r\n        \"MetaTagDescription\": \"\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Brinquedos\",\r\n        \"hasChildren\": true,\r\n        \"url\": \"https://lojadobreno.vtexcommercestable.com.br/brinquedos\",\r\n        \"children\": [\r\n            {\r\n                \"id\": 12,\r\n                \"name\": \"Bolinhas\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/brinquedos/bolinhas\",\r\n                \"children\": [],\r\n                \"Title\": \"Bolinhas para Gatos\",\r\n                \"MetaTagDescription\": \"\"\r\n            },\r\n            {\r\n                \"id\": 13,\r\n                \"name\": \"Ratinhos\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/brinquedos/ratinhos\",\r\n                \"children\": [],\r\n                \"Title\": \"Ratinhos\",\r\n                \"MetaTagDescription\": \"\"\r\n            },\r\n            {\r\n                \"id\": 19,\r\n                \"name\": \"Arranhador para gato\",\r\n                \"hasChildren\": false,\r\n                \"url\": \"https://lojadobreno.vtexcommercestable.com.br/brinquedos/arranhador-para-gato\",\r\n                \"children\": [],\r\n                \"Title\": \"Brinquedo Arranhador para gatos\",\r\n                \"MetaTagDescription\": \"Arranhador gatos é indispensável no lar com felinos. Ideais para afiar as unhas e garantir a diversão\"\r\n            }\r\n        ],\r\n        \"Title\": \"Brinquedos para Gatos\",\r\n        \"MetaTagDescription\": \"\"\r\n    }\r\n]\r\n```",
        "operationId" : "CategoryTree",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Value of the category level you need to retrieve.",
          "in" : "path",
          "name" : "categoryLevels",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "MetaTagDescription" : "",
                  "Title" : "Alimentação para Gatos",
                  "children" : [ {
                    "MetaTagDescription" : "",
                    "Title" : "Bebedouro para Gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 6,
                    "name" : "Bebedouro",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/bebedouro"
                  }, {
                    "MetaTagDescription" : "",
                    "Title" : "Comedouro para Gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 7,
                    "name" : "Comedouro",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/comedouro"
                  }, {
                    "MetaTagDescription" : "",
                    "Title" : "Biscoitos para Gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 8,
                    "name" : "Biscoitos",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/biscoitos"
                  }, {
                    "MetaTagDescription" : "",
                    "Title" : "Petiscos para Gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 9,
                    "name" : "Petiscos",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/petiscos"
                  }, {
                    "MetaTagDescription" : "",
                    "Title" : "Ração Seca para Gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 10,
                    "name" : "Ração Seca",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/racao-seca"
                  }, {
                    "MetaTagDescription" : "",
                    "Title" : "Ração Úmida para Gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 11,
                    "name" : "Ração Úmida",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/racao-umida"
                  } ],
                  "hasChildren" : true,
                  "id" : 1,
                  "name" : "Alimentação",
                  "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao"
                }, {
                  "MetaTagDescription" : "",
                  "Title" : "Brinquedos para Gatos",
                  "children" : [ {
                    "MetaTagDescription" : "",
                    "Title" : "Bolinhas para Gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 12,
                    "name" : "Bolinhas",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/brinquedos/bolinhas"
                  }, {
                    "MetaTagDescription" : "",
                    "Title" : "Ratinhos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 13,
                    "name" : "Ratinhos",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/brinquedos/ratinhos"
                  }, {
                    "MetaTagDescription" : "Arranhador gatos é indispensável no lar com felinos. Ideais para afiar as unhas e garantir a diversão",
                    "Title" : "Brinquedo Arranhador para gatos",
                    "children" : [ ],
                    "hasChildren" : false,
                    "id" : 19,
                    "name" : "Arranhador para gato",
                    "url" : "https://lojadobreno.vtexcommercestable.com.br/brinquedos/arranhador-para-gato"
                  } ],
                  "hasChildren" : true,
                  "id" : 2,
                  "name" : "Brinquedos",
                  "url" : "https://lojadobreno.vtexcommercestable.com.br/brinquedos"
                } ],
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/GetCategoryTree"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Category Tree",
        "tags" : [ "Category" ]
      }
    },
    "/api/catalog_system/pub/products/variations/{productId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves data about the product and all SKUs related to it by the product's ID.\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"productId\": 9,\r\n    \"name\": \"Camisa Masculina\",\r\n    \"salesChannel\": \"2\",\r\n    \"available\": true,\r\n    \"displayMode\": \"lista\",\r\n    \"dimensions\": [\r\n        \"Cores\",\r\n        \"Tamanho\",\r\n        \"País de origem\",\r\n        \"Gênero\"\r\n    ],\r\n    \"dimensionsInputType\": {\r\n        \"Cores\": \"Combo\",\r\n        \"Tamanho\": \"Combo\",\r\n        \"País de origem\": \"Combo\",\r\n        \"Gênero\": \"Combo\"\r\n    },\r\n    \"dimensionsMap\": {\r\n        \"Cores\": [\r\n            \"Amarelo\",\r\n            \"Azul\",\r\n            \"Vermelho\"\r\n        ],\r\n        \"Tamanho\": [\r\n            \"P\",\r\n            \"M\",\r\n            \"G\"\r\n        ],\r\n        \"País de origem\": [\r\n            \"Brasil\"\r\n        ],\r\n        \"Gênero\": [\r\n            \"Masculino\"\r\n        ]\r\n    },\r\n    \"skus\": [\r\n        {\r\n            \"sku\": 310118454,\r\n            \"skuname\": \"Amarela - G\",\r\n            \"dimensions\": {\r\n                \"Cores\": \"Amarelo\",\r\n                \"Tamanho\": \"G\",\r\n                \"País de origem\": \"Brasil\",\r\n                \"Gênero\": \"Masculino\"\r\n            },\r\n            \"available\": false,\r\n            \"availablequantity\": 0,\r\n            \"cacheVersionUsedToCallCheckout\": null,\r\n            \"listPriceFormated\": \"R$ 0,00\",\r\n            \"listPrice\": 0,\r\n            \"taxFormated\": \"R$ 0,00\",\r\n            \"taxAsInt\": 0,\r\n            \"bestPriceFormated\": \"R$ 9.999.876,00\",\r\n            \"bestPrice\": 999987600,\r\n            \"spotPrice\": 999987600,\r\n            \"installments\": 0,\r\n            \"installmentsValue\": 0,\r\n            \"installmentsInsterestRate\": null,\r\n            \"image\": \"https://lojadobreno.vteximg.com.br/arquivos/ids/155467-292-292/image-5d7ad76ad1954c53adecab4138319034.jpg?v=637321899584500000\",\r\n            \"sellerId\": \"1\",\r\n            \"seller\": \"lojadobreno\",\r\n            \"measures\": {\r\n                \"cubicweight\": 1.0000,\r\n                \"height\": 5.0000,\r\n                \"length\": 20.0000,\r\n                \"weight\": 200.0000,\r\n                \"width\": 20.0000\r\n            },\r\n            \"unitMultiplier\": 1.0000,\r\n            \"rewardValue\": 0\r\n        },\r\n        {\r\n            \"sku\": 310118455,\r\n            \"skuname\": \"Vermelha - M\",\r\n            \"dimensions\": {\r\n                \"Cores\": \"Vermelho\",\r\n                \"Tamanho\": \"M\",\r\n                \"País de origem\": \"Brasil\",\r\n                \"Gênero\": \"Masculino\"\r\n            },\r\n            \"available\": true,\r\n            \"availablequantity\": 99999,\r\n            \"cacheVersionUsedToCallCheckout\": \"38395F1AEF59DF5CEAEDE472328145CD_\",\r\n            \"listPriceFormated\": \"R$ 0,00\",\r\n            \"listPrice\": 0,\r\n            \"taxFormated\": \"R$ 0,00\",\r\n            \"taxAsInt\": 0,\r\n            \"bestPriceFormated\": \"R$ 20,00\",\r\n            \"bestPrice\": 2000,\r\n            \"spotPrice\": 2000,\r\n            \"installments\": 1,\r\n            \"installmentsValue\": 2000,\r\n            \"installmentsInsterestRate\": 0,\r\n            \"image\": \"https://lojadobreno.vteximg.com.br/arquivos/ids/155468-292-292/image-601a6099aace48b89d26fc9f22e8e611.jpg?v=637321906602470000\",\r\n            \"sellerId\": \"pedrostore\",\r\n            \"seller\": \"pedrostore\",\r\n            \"measures\": {\r\n                \"cubicweight\": 0.4167,\r\n                \"height\": 5.0000,\r\n                \"length\": 20.0000,\r\n                \"weight\": 200.0000,\r\n                \"width\": 20.0000\r\n            },\r\n            \"unitMultiplier\": 1.0000,\r\n            \"rewardValue\": 0\r\n        }\r\n    ]\r\n}\r\n```",
        "operationId" : "ProductVariations",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Response body.",
                  "example" : {
                    "available" : true,
                    "dimensions" : [ "Cores", "Tamanho", "País de origem", "Gênero" ],
                    "dimensionsInputType" : {
                      "Cores" : "Combo",
                      "Gênero" : "Combo",
                      "País de origem" : "Combo",
                      "Tamanho" : "Combo"
                    },
                    "dimensionsMap" : {
                      "Cores" : [ "Amarelo", "Azul", "Vermelho" ],
                      "Gênero" : [ "Masculino" ],
                      "País de origem" : [ "Brasil" ],
                      "Tamanho" : [ "P", "M", "G" ]
                    },
                    "displayMode" : "lista",
                    "name" : "Camisa Masculina",
                    "productId" : 9,
                    "salesChannel" : "2",
                    "skus" : [ {
                      "available" : false,
                      "availablequantity" : 0,
                      "bestPrice" : 999987600,
                      "bestPriceFormated" : "R$ 9.999.876,00",
                      "cacheVersionUsedToCallCheckout" : null,
                      "dimensions" : {
                        "Cores" : "Amarelo",
                        "Gênero" : "Masculino",
                        "País de origem" : "Brasil",
                        "Tamanho" : "G"
                      },
                      "image" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155467-292-292/image-5d7ad76ad1954c53adecab4138319034.jpg?v=637321899584500000",
                      "installments" : 0,
                      "installmentsInsterestRate" : null,
                      "installmentsValue" : 0,
                      "listPrice" : 0,
                      "listPriceFormated" : "R$ 0,00",
                      "measures" : {
                        "cubicweight" : 1,
                        "height" : 5,
                        "length" : 20,
                        "weight" : 200,
                        "width" : 20
                      },
                      "rewardValue" : 0,
                      "seller" : "lojadobreno",
                      "sellerId" : "1",
                      "sku" : 310118454,
                      "skuname" : "Amarela - G",
                      "spotPrice" : 999987600,
                      "taxAsInt" : 0,
                      "taxFormated" : "R$ 0,00",
                      "unitMultiplier" : 1
                    }, {
                      "available" : true,
                      "availablequantity" : 99999,
                      "bestPrice" : 2000,
                      "bestPriceFormated" : "R$ 20,00",
                      "cacheVersionUsedToCallCheckout" : "38395F1AEF59DF5CEAEDE472328145CD_",
                      "dimensions" : {
                        "Cores" : "Vermelho",
                        "Gênero" : "Masculino",
                        "País de origem" : "Brasil",
                        "Tamanho" : "M"
                      },
                      "image" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155468-292-292/image-601a6099aace48b89d26fc9f22e8e611.jpg?v=637321906602470000",
                      "installments" : 1,
                      "installmentsInsterestRate" : 0,
                      "installmentsValue" : 2000,
                      "listPrice" : 0,
                      "listPriceFormated" : "R$ 0,00",
                      "measures" : {
                        "cubicweight" : 0.4167,
                        "height" : 5,
                        "length" : 20,
                        "weight" : 200,
                        "width" : 20
                      },
                      "rewardValue" : 0,
                      "seller" : "pedrostore",
                      "sellerId" : "pedrostore",
                      "sku" : 310118455,
                      "skuname" : "Vermelha - M",
                      "spotPrice" : 2000,
                      "taxAsInt" : 0,
                      "taxFormated" : "R$ 0,00",
                      "unitMultiplier" : 1
                    } ]
                  },
                  "properties" : {
                    "available" : {
                      "description" : "Defines if the product is available (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "dimensions" : {
                      "description" : "Lists SKU specifications.",
                      "items" : {
                        "description" : "Name of the SKU specification.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "dimensionsInputType" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Lists SKU specifications and their field type, in the following format: `\"{specificationName}\":\"{fieldType}\"`.",
                      "type" : "object"
                    },
                    "dimensionsMap" : {
                      "additionalProperties" : {
                        "type" : "array"
                      },
                      "description" : "Lists SKU specifications and their possible values inside arrays.",
                      "type" : "object"
                    },
                    "displayMode" : {
                      "description" : "Defines the mannner SKUs are displayed.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Product name.",
                      "type" : "string"
                    },
                    "productId" : {
                      "description" : "Product’s unique numerical identifier.",
                      "type" : "integer"
                    },
                    "salesChannel" : {
                      "description" : "Trade policy ID.",
                      "type" : "string"
                    },
                    "skus" : {
                      "description" : "Array containing information about the product's SKUs.",
                      "items" : {
                        "description" : "Object containing information about a specific SKU.",
                        "properties" : {
                          "available" : {
                            "description" : "Defines if the SKU is available (`true`) or not (`false`).",
                            "type" : "boolean"
                          },
                          "availablequantity" : {
                            "description" : "Available quantity of the SKU in stock.",
                            "type" : "integer"
                          },
                          "bestPrice" : {
                            "description" : "Best price.",
                            "type" : "integer"
                          },
                          "bestPriceFormated" : {
                            "description" : "Best price formatted according to the valid currency.",
                            "type" : "string"
                          },
                          "cacheVersionUsedToCallCheckout" : {
                            "description" : "Cache version used to call Checkout.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "dimensions" : {
                            "additionalProperties" : {
                              "type" : "string"
                            },
                            "description" : "Lists SKU specifications and their respective values.",
                            "type" : "object"
                          },
                          "image" : {
                            "description" : "SKU image URL.",
                            "type" : "string"
                          },
                          "installments" : {
                            "description" : "Number of installments.",
                            "type" : "integer"
                          },
                          "installmentsInsterestRate" : {
                            "description" : "Interest rate of installments.",
                            "nullable" : true,
                            "type" : "integer"
                          },
                          "installmentsValue" : {
                            "description" : "Value of installments.",
                            "type" : "integer"
                          },
                          "listPrice" : {
                            "description" : "List price.",
                            "type" : "integer"
                          },
                          "listPriceFormated" : {
                            "description" : "List price formatted according to the valid currency.",
                            "type" : "string"
                          },
                          "measures" : {
                            "description" : "SKU measures.",
                            "properties" : {
                              "cubicweight" : {
                                "description" : "Cubic weight.",
                                "type" : "number"
                              },
                              "height" : {
                                "description" : "Height.",
                                "type" : "number"
                              },
                              "length" : {
                                "description" : "Length.",
                                "type" : "number"
                              },
                              "weight" : {
                                "description" : "Weight.",
                                "type" : "number"
                              },
                              "width" : {
                                "description" : "Width.",
                                "type" : "number"
                              }
                            },
                            "type" : "object"
                          },
                          "rewardValue" : {
                            "description" : "SKU reward value for rewards program.",
                            "type" : "integer"
                          },
                          "sellerId" : {
                            "description" : "Seller ID.",
                            "type" : "string"
                          },
                          "sku" : {
                            "description" : "SKU ID.",
                            "type" : "integer"
                          },
                          "skuname" : {
                            "description" : "SKU Name.",
                            "type" : "string"
                          },
                          "spotPrice" : {
                            "description" : "Spot price.",
                            "type" : "integer"
                          },
                          "taxAsInt" : {
                            "description" : "Tax value.",
                            "type" : "integer"
                          },
                          "taxFormated" : {
                            "description" : "Tax value formatted according to the valid currency.",
                            "type" : "string"
                          },
                          "unitMultiplier" : {
                            "description" : "SKU Unit Multiplier.",
                            "type" : "number"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product's SKUs by Product ID",
        "tags" : [ "Product" ]
      }
    },
    "/api/catalog_system/pub/saleschannel/{salesChannelId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a specific sales channel by its ID. \r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Loja Principal\",\r\n    \"IsActive\": true,\r\n    \"ProductClusterId\": null,\r\n    \"CountryCode\": \"BRA\",\r\n    \"CultureInfo\": \"pt-BR\",\r\n    \"TimeZone\": \"E. South America Standard Time\",\r\n    \"CurrencyCode\": \"BRL\",\r\n    \"CurrencySymbol\": \"R$\",\r\n    \"CurrencyLocale\": 1046,\r\n    \"CurrencyFormatInfo\": {\r\n        \"CurrencyDecimalDigits\": 1,\r\n        \"CurrencyDecimalSeparator\": \",\",\r\n        \"CurrencyGroupSeparator\": \".\",\r\n        \"CurrencyGroupSize\": 3,\r\n        \"StartsWithCurrencySymbol\": true\r\n    },\r\n    \"Origin\": null,\r\n    \"Position\": 2,\r\n    \"ConditionRule\": null,\r\n    \"CurrencyDecimalDigits\": 1\r\n}\r\n```",
        "operationId" : "SalesChannelbyId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "",
          "in" : "path",
          "name" : "salesChannelId",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "ConditionRule" : {
                      "description" : "Defines what is the conditional rule to activate de Sales Channel.",
                      "example" : "approved=true",
                      "nullable" : true,
                      "title" : "ConditionRule",
                      "type" : "string"
                    },
                    "CountryCode" : {
                      "description" : "Country Code in ISO 3166-1 alfa-3 Standard.",
                      "example" : "BRA",
                      "title" : "Id",
                      "type" : "string"
                    },
                    "CultureInfo" : {
                      "description" : "Language Country code in LCIDstring Standard.",
                      "example" : "pt-BR",
                      "title" : "CultureInfo",
                      "type" : "string"
                    },
                    "CurrencyCode" : {
                      "description" : "Currency Code in ISO 4217 standard.",
                      "example" : "BRL",
                      "title" : "CurrencyCode",
                      "type" : "string"
                    },
                    "CurrencyDecimalDigits" : {
                      "description" : "Quantity of Currency Decimal Digits.",
                      "example" : 1,
                      "title" : "CurrencyDecimalDigits",
                      "type" : "integer"
                    },
                    "CurrencyFormatInfo" : {
                      "description" : "Object with currency format.",
                      "properties" : {
                        "CurrencyDecimalDigits" : {
                          "description" : "Quantity of Currency Decimal Digits.",
                          "example" : 1,
                          "title" : "CurrencyDecimalDigits",
                          "type" : "integer"
                        },
                        "CurrencyDecimalSeparator" : {
                          "description" : "Defines which Currency Decimal Separator will be applied.",
                          "example" : ",",
                          "title" : "CurrencyDecimalSeparator",
                          "type" : "string"
                        },
                        "CurrencyGroupSeparator" : {
                          "description" : "Defines which Currency Group Separator will be applied.",
                          "example" : ".",
                          "title" : "CurrencyGroupSeparator",
                          "type" : "string"
                        },
                        "CurrencyGroupSize" : {
                          "description" : "Define how many characters will be grouped.",
                          "example" : 3,
                          "title" : "CurrencyGroupSize",
                          "type" : "integer"
                        },
                        "StartsWithCurrencySymbol" : {
                          "description" : "Defines if all prices will be initiated with Currency Symbol (`true`) or not (`false`).",
                          "example" : true,
                          "title" : "StartsWithCurrencySymbol",
                          "type" : "boolean"
                        }
                      },
                      "title" : "CurrencyFormatInfo",
                      "type" : "object"
                    },
                    "CurrencyLocale" : {
                      "description" : "Currency Locale Code in LCID standard.",
                      "example" : 1046,
                      "title" : "CurrencyLocale",
                      "type" : "integer"
                    },
                    "CurrencySymbol" : {
                      "description" : "Currency symbol.",
                      "example" : "R$",
                      "title" : "CurrencySymbol",
                      "type" : "string"
                    },
                    "Id" : {
                      "description" : "Sales Channel unique identifier.",
                      "example" : 1,
                      "title" : "Id",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Defines if the Sales Channel is active (`true`) or not (`false`).",
                      "title" : "IsActive",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Sales Channel name.",
                      "example" : "Loja Principal",
                      "title" : "Id",
                      "type" : "string"
                    },
                    "Origin" : {
                      "description" : "Origin of products in the Sales Channel.",
                      "nullable" : true,
                      "title" : "Origin",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Defines the position on index.",
                      "example" : 1,
                      "nullable" : true,
                      "title" : "Position",
                      "type" : "integer"
                    },
                    "ProductClusterId" : {
                      "description" : "Product Cluster ID, if the Sales Channel has releated Product Cluster.",
                      "nullable" : true,
                      "title" : "ProductClusterId",
                      "type" : "integer"
                    },
                    "TimeZone" : {
                      "description" : "Name of Time Zone.",
                      "example" : "E. South America Standard Time",
                      "title" : "TimeZone",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Sales Channel by ID",
        "tags" : [ "Sales Channel" ]
      }
    },
    "/api/catalog_system/pub/sku/stockkeepingunitidsbyrefids" : {
      "post" : {
        "deprecated" : false,
        "description" : "Receives a list of Reference IDs and returns a list with the corresponding SKU IDs.\r\n\r\n>⚠️ The list of Reference IDs in the request body cannot have repeated Reference IDs, or the API will return an error 500. \r\n\r\n## Request body example\r\n\r\n```json\r\n[\r\n    \"123\",\r\n    \"D25133K-B2\",\r\n    \"14-556\",\r\n    \"DCF880L2-BR\"\r\n]\r\n```\r\n\r\n### Response body example\r\n\r\n```json\r\n{\r\n    \"123\": \"435\",\r\n    \"D25133K-B2\": \"4351\",\r\n    \"14-556\": \"3155\",\r\n    \"DCF880L2-BR\": \"4500\"\r\n}\r\n```",
        "operationId" : "SkuIdlistbyRefIdlist",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "description" : "Array with SKU reference IDs from which you need to retrieve the related SKU IDs. Don't repeat values in the array, or the API will return an error 500.",
                "items" : {
                  "description" : "SKU Reference ID.",
                  "example" : "799",
                  "title" : "RefId",
                  "type" : "string"
                },
                "required" : [ "RefId" ],
                "title" : "body",
                "type" : "array"
              }
            }
          },
          "description" : ""
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "123" : "435",
                  "14-556" : "3155",
                  "D25133K-B2" : "4351",
                  "DCF880L2-BR" : "4500"
                },
                "schema" : {
                  "additionalProperties" : {
                    "description" : "Reference ID.",
                    "type" : "string"
                  },
                  "description" : "Object composed by a list of SKU IDs related to each Reference ID list searched. Structure: \"{RefId}\": \"{SkuId}\".",
                  "type" : "object"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "Cache-Control" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Connection" : {
                "content" : {
                  "text/plain" : {
                    "example" : "keep-alive",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Encoding" : {
                "content" : {
                  "text/plain" : {
                    "example" : "gzip",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Length" : {
                "content" : {
                  "text/plain" : {
                    "example" : "189",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Date" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Thu, 31 May 2018 14:45:26 GMT",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Expires" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-1",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Pragma" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Server" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Microsoft-IIS/8.5",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Vary" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Accept-Encoding",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-AspNet-Version" : {
                "content" : {
                  "text/plain" : {
                    "example" : "4.0.30319",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-By" : {
                "content" : {
                  "text/plain" : {
                    "example" : "ASP.NET",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Janus-Router-Backend-App" : {
                "content" : {
                  "text/plain" : {
                    "example" : "prtapi-v1.4.974-stable+738",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "no" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-86FN1DUJ89D",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "p3p" : {
                "content" : {
                  "text/plain" : {
                    "example" : "policyref=\"/w3c/p3p.xml\",CP=\"ADMa OUR NOR CNT NID DSP NOI COR\"",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "powered" : {
                "content" : {
                  "text/plain" : {
                    "example" : "vtex",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "x-vtex-operation-id" : {
                "content" : {
                  "text/plain" : {
                    "example" : "0e0702f1-95e7-4e2b-97cf-0a370aa78abb",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        },
        "summary" : "Retrieve SKU ID list by Reference ID list",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog_system/pub/specification/field/listByCategoryId/{categoryId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves all specifications from a category by its ID.\r\n\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Name\": \"Specification A\",\r\n        \"CategoryId\": 1,\r\n        \"FieldId\": 33,\r\n        \"IsActive\": true,\r\n        \"IsStockKeepingUnit\": false\r\n    },\r\n    {\r\n        \"Name\": \"Specification B\",\r\n        \"CategoryId\": 1,\r\n        \"FieldId\": 34,\r\n        \"IsActive\": true,\r\n        \"IsStockKeepingUnit\": false\r\n    },\r\n    {\r\n        \"Name\": \"Specification C\",\r\n        \"CategoryId\": 1,\r\n        \"FieldId\": 35,\r\n        \"IsActive\": false,\r\n        \"IsStockKeepingUnit\": false\r\n    }\r\n]\r\n```",
        "operationId" : "SpecificationsByCategoryId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "CategoryId" : 1,
                  "FieldId" : 33,
                  "IsActive" : true,
                  "IsStockKeepingUnit" : false,
                  "Name" : "Specification A"
                }, {
                  "CategoryId" : 1,
                  "FieldId" : 34,
                  "IsActive" : true,
                  "IsStockKeepingUnit" : false,
                  "Name" : "Specification B"
                }, {
                  "CategoryId" : 1,
                  "FieldId" : 35,
                  "IsActive" : false,
                  "IsStockKeepingUnit" : false,
                  "Name" : "Specification C"
                } ],
                "schema" : {
                  "$ref" : "#/components/schemas/CategorySpecification"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specifications By Category ID",
        "tags" : [ "Category Specification" ]
      }
    },
    "/api/catalog_system/pub/specification/field/listTreeByCategoryId/{categoryId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Lists all specifications including the current category and the level zero specifications from a category by its ID. \r\n\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Name\": \"Specification A\",\r\n        \"CategoryId\": 1,\r\n        \"FieldId\": 33,\r\n        \"IsActive\": true,\r\n        \"IsStockKeepingUnit\": false\r\n    },\r\n    {\r\n        \"Name\": \"Specification B\",\r\n        \"CategoryId\": 1,\r\n        \"FieldId\": 34,\r\n        \"IsActive\": true,\r\n        \"IsStockKeepingUnit\": false\r\n    },\r\n    {\r\n        \"Name\": \"Specification C\",\r\n        \"CategoryId\": 1,\r\n        \"FieldId\": 35,\r\n        \"IsActive\": false,\r\n        \"IsStockKeepingUnit\": false\r\n    }\r\n]\r\n```",
        "operationId" : "SpecificationsTreeByCategoryId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Category ID.",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "CategoryId" : 1,
                  "FieldId" : 33,
                  "IsActive" : true,
                  "IsStockKeepingUnit" : false,
                  "Name" : "Specification A"
                }, {
                  "CategoryId" : 1,
                  "FieldId" : 34,
                  "IsActive" : true,
                  "IsStockKeepingUnit" : false,
                  "Name" : "Specification B"
                }, {
                  "CategoryId" : 1,
                  "FieldId" : 35,
                  "IsActive" : false,
                  "IsStockKeepingUnit" : false,
                  "Name" : "Specification C"
                } ],
                "schema" : {
                  "$ref" : "#/components/schemas/CategorySpecification"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specifications Tree By Category ID",
        "tags" : [ "Category Specification" ]
      }
    },
    "/api/catalog_system/pub/specification/fieldGet/{fieldId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves details from a specification field by this field's ID. \r\n>⚠️ This is a legacy endpoint. We recommend using [Get Specification](https://developers.vtex.com/vtex-rest-api/reference/get_api-catalog-pvt-specification-specificationid) instead.\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Material\",\r\n    \"CategoryId\": 4,\r\n    \"FieldId\": 88,\r\n    \"IsActive\": true,\r\n    \"IsRequired\": true,\r\n    \"FieldTypeId\": 1,\r\n    \"FieldTypeName\": \"Texto\",\r\n    \"FieldValueId\": null,\r\n    \"Description\": \"Composition of the product.\",\r\n    \"IsStockKeepingUnit\": false,\r\n    \"IsFilter\": true,\r\n    \"IsOnProductDetails\": false,\r\n    \"Position\": 1,\r\n    \"IsWizard\": false,\r\n    \"IsTopMenuLinkActive\": false,\r\n    \"IsSideMenuLinkActive\": true,\r\n    \"DefaultValue\": null,\r\n    \"FieldGroupId\": 20,\r\n    \"FieldGroupName\": \"Clothes specifications\"\r\n}\r\n```\r\n\r\n",
        "operationId" : "SpecificationsField",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Specification Field ID.",
          "in" : "path",
          "name" : "fieldId",
          "required" : true,
          "schema" : {
            "example" : 88,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CategoryId" : 4,
                  "DefaultValue" : null,
                  "Description" : "Composition of the product.",
                  "FieldGroupId" : 20,
                  "FieldGroupName" : "Clothes specifications",
                  "FieldId" : 88,
                  "FieldTypeId" : 1,
                  "FieldTypeName" : "Texto",
                  "FieldValueId" : null,
                  "IsActive" : true,
                  "IsFilter" : true,
                  "IsOnProductDetails" : false,
                  "IsRequired" : true,
                  "IsSideMenuLinkActive" : true,
                  "IsStockKeepingUnit" : false,
                  "IsTopMenuLinkActive" : false,
                  "IsWizard" : false,
                  "Name" : "Material",
                  "Position" : 1
                },
                "schema" : {
                  "properties" : {
                    "DefaultValue" : {
                      "description" : "Specification default value.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "Description" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FieldGroupId" : {
                      "description" : "ID of the group of specifications that contains the new specification.",
                      "type" : "integer"
                    },
                    "FieldGroupName" : {
                      "description" : "Specification Field Group Name.",
                      "type" : "string"
                    },
                    "FieldId" : {
                      "description" : "Specification field ID.",
                      "type" : "integer"
                    },
                    "FieldTypeId" : {
                      "description" : "Field Type ID can be `1 - Text`, `2 - Multi-Line Text`, `4 - Number`, `5 - Combo`, `6 - Radio`, `7 - Checkbox`, `8 - Indexed Text`, `9 - Indexed Multi-Line Text`.",
                      "title" : "FieldTypeId",
                      "type" : "integer"
                    },
                    "FieldTypeName" : {
                      "description" : "Field Type name, which can be `Text`, `Multi-Line Text`, `Number`, `Combo`, `Radio`, `Checkbox`, `Indexed Text` or `Indexed Multi-Line Text`.",
                      "title" : "FieldTypeName",
                      "type" : "string"
                    },
                    "FieldValueId" : {
                      "description" : "Specification value ID.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Enable (`true`) or disable (`false`) specification.",
                      "type" : "boolean"
                    },
                    "IsFilter" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To allow the specification to be used as a facet (filter) on the search navigation bar.\r\n",
                      "type" : "boolean"
                    },
                    "IsOnProductDetails" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal -If specification is visible on the product page.\r\n",
                      "type" : "boolean"
                    },
                    "IsRequired" : {
                      "description" : "Makes the specification mandatory (`true`) or optional (`false`).",
                      "type" : "boolean"
                    },
                    "IsSideMenuLinkActive" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification field clickable in the search navigation bar.\r\n",
                      "type" : "boolean"
                    },
                    "IsStockKeepingUnit" : {
                      "description" : "If `true`, it will be added as a SKU specification. If `false`, it will be added as a product specification field.",
                      "type" : "boolean"
                    },
                    "IsTopMenuLinkActive" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification visible in the store's upper menu.\r\n",
                      "type" : "boolean"
                    },
                    "IsWizard" : {
                      "deprecated" : true,
                      "nullable" : true,
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification field name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - This position number is used in ordering the specifications both in the navigation menu and in the specification listing on the product page.\r\n",
                      "type" : "integer"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specification Field",
        "tags" : [ "Specification Field" ]
      }
    },
    "/api/catalog_system/pub/specification/fieldvalue/{fieldId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Gets a list of all specification values from a Specification Field by this field's ID. \r\n\r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"FieldValueId\": 52,\r\n        \"Value\": \"0 a 6 meses\",\r\n        \"IsActive\": true,\r\n        \"Position\": 1\r\n    },\r\n    {\r\n        \"FieldValueId\": 53,\r\n        \"Value\": \"1 a 2 anos\",\r\n        \"IsActive\": true,\r\n        \"Position\": 4\r\n    },\r\n    {\r\n        \"FieldValueId\": 54,\r\n        \"Value\": \"3 a 4 anos\",\r\n        \"IsActive\": true,\r\n        \"Position\": 3\r\n    },\r\n    {\r\n        \"FieldValueId\": 55,\r\n        \"Value\": \"5 a 6 anos\",\r\n        \"IsActive\": true,\r\n        \"Position\": 2\r\n    },\r\n    {\r\n        \"FieldValueId\": 56,\r\n        \"Value\": \"7 a 8 anos\",\r\n        \"IsActive\": true,\r\n        \"Position\": 5\r\n    },\r\n    {\r\n        \"FieldValueId\": 57,\r\n        \"Value\": \"9 a 10 anos\",\r\n        \"IsActive\": true,\r\n        \"Position\": 6\r\n    },\r\n    {\r\n        \"FieldValueId\": 58,\r\n        \"Value\": \"Acima de 10 anos\",\r\n        \"IsActive\": true,\r\n        \"Position\": 7\r\n    }\r\n]\r\n```",
        "operationId" : "SpecificationsValuesByFieldId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Specification Field ID.",
          "in" : "path",
          "name" : "fieldId",
          "required" : true,
          "schema" : {
            "example" : 34,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "FieldValueId" : 52,
                  "IsActive" : true,
                  "Position" : 1,
                  "Value" : "0 a 6 meses"
                }, {
                  "FieldValueId" : 53,
                  "IsActive" : true,
                  "Position" : 4,
                  "Value" : "1 a 2 anos"
                }, {
                  "FieldValueId" : 54,
                  "IsActive" : true,
                  "Position" : 3,
                  "Value" : "3 a 4 anos"
                }, {
                  "FieldValueId" : 55,
                  "IsActive" : true,
                  "Position" : 2,
                  "Value" : "5 a 6 anos"
                }, {
                  "FieldValueId" : 56,
                  "IsActive" : true,
                  "Position" : 5,
                  "Value" : "7 a 8 anos"
                }, {
                  "FieldValueId" : 57,
                  "IsActive" : true,
                  "Position" : 6,
                  "Value" : "9 a 10 anos"
                }, {
                  "FieldValueId" : 58,
                  "IsActive" : true,
                  "Position" : 7,
                  "Value" : "Acima de 10 anos"
                } ],
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/GetSpecFieldValue"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specification Values By Field ID",
        "tags" : [ "Specification Field Value" ]
      }
    },
    "/api/catalog_system/pub/specification/groupGet/{groupId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves details from a specification group by the ID of the group. \r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"CategoryId\": 1,\r\n  \"Id\": 6,\r\n  \"Name\": \"Sizes\",\r\n  \"Position\": 3\r\n}\r\n```",
        "operationId" : "SpecificationsGroupGet",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Specification Group ID.",
          "in" : "path",
          "name" : "groupId",
          "required" : true,
          "schema" : {
            "example" : "6",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "CategoryId" : 1,
                  "Id" : 6,
                  "Name" : "Sizes",
                  "Position" : 3
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SpecificationsGroup"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specification Group",
        "tags" : [ "Specification Group" ]
      }
    },
    "/api/catalog_system/pvt/brand/list" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves all Brands registered in the store's Catalog. \r\n>⚠️ This route's response is limited to 20k results. If you need to obtain more results, please use the [Get Brand List](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-brand-list) endpoint instead to get a paginated response. \r\n## Response body example\r\n\r\n```json\r\n[\r\n  {\r\n    \"id\": 9280,\r\n    \"name\": \"Brand\",\r\n    \"isActive\": true,\r\n    \"title\": \"Brand\",\r\n    \"metaTagDescription\": \"Brand\",\r\n    \"imageUrl\": null\r\n  },\r\n  {\r\n    \"id\": 2000000,\r\n    \"name\": \"Orma Carbon\",\r\n    \"isActive\": true,\r\n    \"title\": \"Orma Carbon\",\r\n    \"metaTagDescription\": \"Orma Carbon\",\r\n    \"imageUrl\": null\r\n  },\r\n  {\r\n    \"id\": 2000001,\r\n    \"name\": \"Pedigree\",\r\n    \"isActive\": true,\r\n    \"title\": \"Pedigree\",\r\n    \"metaTagDescription\": \"\",\r\n    \"imageUrl\": null\r\n  }\r\n]\r\n```",
        "operationId" : "BrandList",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "id" : 9280,
                  "imageUrl" : null,
                  "isActive" : true,
                  "metaTagDescription" : "Brand",
                  "name" : "Brand",
                  "title" : "Brand"
                }, {
                  "id" : 2000000,
                  "imageUrl" : null,
                  "isActive" : true,
                  "metaTagDescription" : "Orma Carbon",
                  "name" : "Orma Carbon",
                  "title" : "Orma Carbon"
                }, {
                  "id" : 2000001,
                  "imageUrl" : null,
                  "isActive" : true,
                  "metaTagDescription" : "",
                  "name" : "Pedigree",
                  "title" : "Pedigree"
                } ],
                "schema" : {
                  "description" : "An array with all brands registered in the store.",
                  "items" : {
                    "$ref" : "#/components/schemas/BrandGet"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Brand List",
        "tags" : [ "Brand" ]
      }
    },
    "/api/catalog_system/pvt/brand/pagedlist" : {
      "get" : {
        "description" : "Retrieves all Brands registered in the store's Catalog by page number.\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"items\": [\r\n    {\r\n      \"id\": 2000000,\r\n      \"name\": \"Farm\",\r\n      \"isActive\": true,\r\n      \"title\": \"Farm\",\r\n      \"metaTagDescription\": \"Farm\",\r\n      \"imageUrl\": null\r\n    },\r\n    {\r\n      \"id\": 2000001,\r\n      \"name\": \"Adidas\",\r\n      \"isActive\": true,\r\n      \"title\": \"\",\r\n      \"metaTagDescription\": \"\",\r\n      \"imageUrl\": null\r\n    },\r\n    {\r\n      \"id\": 2000002,\r\n      \"name\": \"Brastemp\",\r\n      \"isActive\": true,\r\n      \"title\": \"Brastemp\",\r\n      \"metaTagDescription\": \"Brastemp\",\r\n      \"imageUrl\": null\r\n    }\r\n  ],\r\n    \"paging\": {\r\n      \"page\": 1,\r\n        \"perPage\": 3,\r\n          \"total\": 6,\r\n            \"pages\": 2\r\n    }\r\n}\r\n```",
        "operationId" : "BrandListPerPage",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Quantity of brands per page.",
          "in" : "query",
          "name" : "pageSize",
          "required" : true,
          "schema" : {
            "example" : 5,
            "type" : "integer"
          }
        }, {
          "description" : "Page number of the brand list.",
          "in" : "query",
          "name" : "page",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "items" : [ {
                    "id" : 2000000,
                    "imageUrl" : null,
                    "isActive" : true,
                    "metaTagDescription" : "Farm",
                    "name" : "Farm",
                    "title" : "Farm"
                  }, {
                    "id" : 2000001,
                    "imageUrl" : null,
                    "isActive" : true,
                    "metaTagDescription" : "",
                    "name" : "Adidas",
                    "title" : ""
                  }, {
                    "id" : 2000002,
                    "imageUrl" : null,
                    "isActive" : true,
                    "metaTagDescription" : "Brastemp",
                    "name" : "Brastemp",
                    "title" : "Brastemp"
                  } ],
                  "paging" : {
                    "page" : 1,
                    "pages" : 2,
                    "perPage" : 3,
                    "total" : 6
                  }
                },
                "schema" : {
                  "properties" : {
                    "items" : {
                      "description" : "Array of objects with information of the store's brands.",
                      "items" : {
                        "$ref" : "#/components/schemas/BrandGet"
                      },
                      "title" : "items",
                      "type" : "array"
                    },
                    "paging" : {
                      "description" : "Object with pagination information.",
                      "example" : {
                        "page" : 1,
                        "pages" : 2,
                        "perPage" : 3,
                        "total" : 6
                      },
                      "properties" : {
                        "page" : {
                          "description" : "Page number of the brand list.",
                          "example" : 1,
                          "title" : "page",
                          "type" : "integer"
                        },
                        "pages" : {
                          "description" : "Total number of pages.",
                          "example" : 2,
                          "title" : "pages",
                          "type" : "integer"
                        },
                        "perPage" : {
                          "description" : "Quantity of brands per page.",
                          "example" : 3,
                          "title" : "perPage",
                          "type" : "integer"
                        },
                        "total" : {
                          "description" : "Total of brands in the store.",
                          "example" : 6,
                          "title" : "total",
                          "type" : "integer"
                        }
                      },
                      "required" : [ "page", "perPage", "total", "pages" ],
                      "title" : "paging",
                      "type" : "object"
                    }
                  },
                  "required" : [ "items", "paging" ],
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Brand List Per Page",
        "tags" : [ "Brand" ]
      }
    },
    "/api/catalog_system/pvt/brand/{brandId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a specific Brand by its ID.\r\n## Response body example\r\n\r\n```json\r\n{\r\n  \"id\": 7000000,\r\n  \"name\": \"Pedigree\",\r\n  \"isActive\": true,\r\n  \"title\": \"Pedigree\",\r\n  \"metaTagDescription\": \"Pedigree\",\r\n  \"imageUrl\": null\r\n}\r\n```",
        "operationId" : "Brand",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Brand ID.",
          "in" : "path",
          "name" : "brandId",
          "required" : true,
          "schema" : {
            "example" : "123",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "id" : 7000000,
                  "imageUrl" : null,
                  "isActive" : true,
                  "metaTagDescription" : "Pedigree",
                  "name" : "Pedigree",
                  "title" : "Pedigree"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/BrandGet"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Brand",
        "tags" : [ "Brand" ]
      }
    },
    "/api/catalog_system/pvt/collection/search" : {
      "get" : {
        "description" : "Retrieves a list of all collections matching a filter.",
        "operationId" : "GET-AllCollections",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Page number.",
          "in" : "query",
          "name" : "page",
          "required" : true,
          "schema" : {
            "example" : 2,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of the items of the page.",
          "in" : "query",
          "name" : "pageSize",
          "required" : true,
          "schema" : {
            "example" : 15,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Defines if the items of the page are in ascending order.",
          "in" : "query",
          "name" : "orderByAsc",
          "required" : true,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Get All Collections",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog_system/pvt/collection/search/{searchTerms}" : {
      "get" : {
        "description" : "Retrieves a list of collections matching a filter.",
        "operationId" : "GET-Collectionsbyseachterms",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "String that will search for a collection related to it.",
          "in" : "path",
          "name" : "searchTerms",
          "required" : true,
          "schema" : {
            "example" : "costume",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Page number.",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "example" : 2,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Number of the items of the page.",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "example" : 15,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Defines if the items of the page are in ascending order.",
          "in" : "query",
          "name" : "orderByAsc",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Get Collections by search terms",
        "tags" : [ "Collection Beta" ]
      }
    },
    "/api/catalog_system/pvt/commercialcondition/list" : {
      "get" : {
        "description" : "Lists all commercial conditions on the store. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Padrão\",\r\n        \"IsDefault\": true\r\n    },\r\n    {\r\n        \"Id\": 2,\r\n        \"Name\": \"Teste Fast\",\r\n        \"IsDefault\": false\r\n    }\r\n]\r\n```",
        "operationId" : "GetAllCommercialConditions",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : [ {
                    "Id" : 1,
                    "IsDefault" : true,
                    "Name" : "Padrão"
                  }, {
                    "Id" : 2,
                    "IsDefault" : false,
                    "Name" : "Secundária"
                  }, {
                    "Id" : 3,
                    "IsDefault" : false,
                    "Name" : "Parcelamento 18x"
                  } ],
                  "items" : {
                    "description" : "Object with information of the commercial condition.",
                    "example" : {
                      "Id" : 1,
                      "IsDefault" : true,
                      "Name" : "Padrão"
                    },
                    "properties" : {
                      "Id" : {
                        "description" : "Commercial condition ID.",
                        "example" : 1,
                        "title" : "Id",
                        "type" : "integer"
                      },
                      "IsDefault" : {
                        "description" : "Defines if the commercial condition is default (`true`) or not (`false`).",
                        "example" : true,
                        "title" : "IsDefault",
                        "type" : "boolean"
                      },
                      "Name" : {
                        "description" : "Commercial condition name.",
                        "example" : "Padrão",
                        "title" : "Name",
                        "type" : "string"
                      }
                    },
                    "title" : "",
                    "type" : "object"
                  },
                  "title" : "Array with information of all the commercial conditions.",
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get all commercial conditions",
        "tags" : [ "Commercial Conditions" ]
      }
    },
    "/api/catalog_system/pvt/commercialcondition/{commercialConditionId}" : {
      "get" : {
        "description" : "Retrieves information of a commercial condition by its ID. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 1,\r\n    \"Name\": \"Padrão\",\r\n    \"IsDefault\": true\r\n}\r\n```",
        "operationId" : "GetCommercialConditions",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Commercial condition unique numerical identifier.",
          "in" : "path",
          "name" : "commercialConditionId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Object with information of the commercial condition.",
                  "example" : {
                    "Id" : 1,
                    "IsDefault" : true,
                    "Name" : "Padrão"
                  },
                  "properties" : {
                    "Id" : {
                      "description" : "Commercial condition ID.",
                      "example" : 1,
                      "title" : "Id",
                      "type" : "integer"
                    },
                    "IsDefault" : {
                      "description" : "If the commercial condition is default (`true`) or not (`false`).",
                      "example" : true,
                      "title" : "IsDefault",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Commercial condition name.",
                      "example" : "Padrão",
                      "title" : "Name",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get commercial condition",
        "tags" : [ "Commercial Conditions" ]
      }
    },
    "/api/catalog_system/pvt/products/GetIndexedInfo/{productId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieve details of a Product's Indexed Information in XML format. \r\n## Response body example\r\n\r\n```xml\r\n\"\r\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\r\n<response>\\n\r\n    <lst name=\\\"responseHeader\\\">\r\n        <bool name=\\\"zkConnected\\\">true</bool>\r\n        <int name=\\\"status\\\">0</int>\r\n        <int name=\\\"QTime\\\">2</int>\r\n        <lst name=\\\"params\\\">\r\n            <str name=\\\"fl\\\">*</str>\r\n            <arr name=\\\"fq\\\">\r\n                <str>instanceId:394dbdc8-b1f4-4dea-adfa-1ec104f3bfe1</str>\r\n                <str>productId:1</str>\r\n            </arr>\r\n        </lst>\r\n    </lst>\r\n    <result name=\\\"response\\\" numFound=\\\"0\\\" start=\\\"0\\\" maxScore=\\\"0.0\\\"></result>\r\n    <lst name=\\\"facet_counts\\\">\r\n        <lst name=\\\"facet_queries\\\"/>\r\n        <lst name=\\\"facet_fields\\\"/>\r\n        <lst name=\\\"facet_ranges\\\"/>\r\n        <lst name=\\\"facet_intervals\\\"/>\r\n        <lst name=\\\"facet_heatmaps\\\"/></lst>\\n\r\n</response>\\n\"\r\n```",
        "operationId" : "IndexedInfo",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "xml" : null
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product Indexed Information",
        "tags" : [ "Product Indexing" ]
      }
    },
    "/api/catalog_system/pvt/products/GetProductAndSkuIds" : {
      "get" : {
        "description" : "Retrieves the IDs of products and SKUs. \r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.",
        "operationId" : "ProductAndSkuIds",
        "parameters" : [ {
          "description" : "ID of the category from which you need to retrieve Products and SKUs.",
          "explode" : true,
          "in" : "query",
          "name" : "categoryId",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Insert the ID that will start the request result.",
          "explode" : true,
          "in" : "query",
          "name" : "_from",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Insert the ID that will end the request result.",
          "explode" : true,
          "in" : "query",
          "name" : "_to",
          "required" : false,
          "schema" : {
            "example" : 10,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "data" : {
                    "1" : [ 1, 123456, 310118449, 310118489, 7, 2 ],
                    "2" : [ 3, 310118450, 310118451, 4, 8 ],
                    "3" : [ 5 ],
                    "4" : [ 310118448 ],
                    "5" : [ 310118465 ],
                    "6" : [ ],
                    "7" : [ 310118452 ],
                    "8" : [ 310118453, 310118459, 310118463 ],
                    "9" : [ 310118454, 310118455, 310118456, 310118457, 310118458, 310118460, 310118461, 310118462, 310118464 ],
                    "10" : [ ],
                    "11" : [ ],
                    "12" : [ 310118490 ]
                  },
                  "range" : {
                    "from" : 1,
                    "to" : 20,
                    "total" : 12
                  }
                },
                "schema" : {
                  "properties" : {
                    "data" : {
                      "description" : "Object composed by Product IDs and SKU IDs, where the parent ID is from Products and the SKU IDs are the Child IDs.",
                      "properties" : {
                        "Product ID" : {
                          "description" : "Array with SKU IDs of a certain product.",
                          "properties" : {
                            "SKU ID." : {
                              "description" : "Product SKU ID.",
                              "type" : "integer"
                            }
                          },
                          "type" : "array"
                        }
                      },
                      "type" : "object"
                    },
                    "range" : {
                      "description" : "Object with information about the product and SKUs list.",
                      "properties" : {
                        "from" : {
                          "description" : "Initial product ID.",
                          "type" : "integer"
                        },
                        "to" : {
                          "description" : "Final product ID.",
                          "type" : "integer"
                        },
                        "total" : {
                          "description" : "Total quantity of SKUs.",
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product and SKU IDs",
        "tags" : [ "Product" ]
      }
    },
    "/api/catalog_system/pvt/products/productget/{productId}" : {
      "get" : {
        "description" : "Retrieves a specific product's general information as name, description and the trade policies that it is included.",
        "operationId" : "ProductandTradePolicy",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "AdWordsRemarketingCode" : "",
                  "BrandId" : 2000000,
                  "CategoryId" : 10,
                  "DepartmentId" : 1,
                  "Description" : "Descrição.",
                  "DescriptionShort" : "",
                  "Id" : 1,
                  "IsActive" : true,
                  "IsVisible" : true,
                  "KeyWords" : "bbbbbbbbbbbb*, a@",
                  "LinkId" : "racao-royal-canin-feline-urinary",
                  "ListStoreId" : [ 1, 2, 3 ],
                  "LomadeeCampaignCode" : "",
                  "MetaTagDescription" : "Descrição.",
                  "Name" : "Ração Royal Canin Feline Urinary",
                  "RefId" : "",
                  "ReleaseDate" : "2020-01-06T00:00:00",
                  "ShowWithoutStock" : true,
                  "SupplierId" : 1,
                  "TaxCode" : "",
                  "Title" : "Ração Royal Canin Feline Urinary"
                },
                "schema" : {
                  "properties" : {
                    "AdWordsRemarketingCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "BrandId" : {
                      "description" : "Product brand ID.",
                      "example" : 2000000,
                      "title" : "BrandId",
                      "type" : "integer"
                    },
                    "CategoryId" : {
                      "description" : "Product category ID.",
                      "example" : 10,
                      "title" : "CategoryId",
                      "type" : "integer"
                    },
                    "DepartmentId" : {
                      "description" : "Product department ID.",
                      "example" : 1,
                      "title" : "DepartmentId",
                      "type" : "integer"
                    },
                    "Description" : {
                      "description" : "Product description.",
                      "example" : "Description",
                      "title" : "Description",
                      "type" : "string"
                    },
                    "DescriptionShort" : {
                      "description" : "Product complement name.",
                      "example" : "",
                      "title" : "DescriptionShort",
                      "type" : "string"
                    },
                    "Id" : {
                      "description" : "Product ID.",
                      "example" : 1,
                      "title" : "Id",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "If the product is active (`true`) or not (`false`) at the store.",
                      "example" : true,
                      "title" : "IsActive",
                      "type" : "boolean"
                    },
                    "IsVisible" : {
                      "description" : "If the Product is visible on the store.",
                      "example" : true,
                      "title" : "IsVisible",
                      "type" : "boolean"
                    },
                    "KeyWords" : {
                      "description" : "Substitutes words for the product.",
                      "example" : "ração, racao, animal",
                      "title" : "KeyWords",
                      "type" : "string"
                    },
                    "LinkId" : {
                      "description" : "Product text link.",
                      "example" : "racao-royal-canin-feline-urinary",
                      "title" : "LinkId",
                      "type" : "string"
                    },
                    "ListStoreId" : {
                      "description" : "List with the Trade Policies IDs that the product is included.",
                      "example" : [ 1, 2 ],
                      "title" : "ListStoreId",
                      "type" : "array"
                    },
                    "LomadeeCampaignCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "MetaTagDescription" : {
                      "description" : "Product meta tag description.",
                      "example" : "Description",
                      "title" : "MetaTagDescription",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Product's name. Limited to 150 characters.",
                      "example" : "Ração Royal Canin Feline Urinary",
                      "title" : "Name",
                      "type" : "string"
                    },
                    "RefId" : {
                      "description" : "Product referecial code.",
                      "example" : "",
                      "title" : "RefId",
                      "type" : "string"
                    },
                    "ReleaseDate" : {
                      "description" : "Product release date.",
                      "example" : "2020-01-06T00:00:00",
                      "title" : "ReleaseDate",
                      "type" : "string"
                    },
                    "ShowWithoutStock" : {
                      "description" : "Defines if the Product will remain being shown in the store even if it’s out of stock.",
                      "example" : true,
                      "title" : "ShowWithoutStock",
                      "type" : "boolean"
                    },
                    "SupplierId" : {
                      "description" : "Product supplier ID.",
                      "example" : 1,
                      "title" : "SupplierId",
                      "type" : "integer"
                    },
                    "TaxCode" : {
                      "description" : "Product fiscal code.",
                      "example" : "",
                      "title" : "TaxCode",
                      "type" : "string"
                    },
                    "Title" : {
                      "description" : "Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.",
                      "example" : "Ração Royal Canin Feline Urinary",
                      "title" : "Title",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product and its general context",
        "tags" : [ "Product" ]
      }
    },
    "/api/catalog_system/pvt/products/productgetbyrefid/{refId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a specific product by its Reference ID.",
        "operationId" : "ProductbyRefId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product Referecial Code",
          "in" : "path",
          "name" : "refId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "AdWordsRemarketingCode" : "",
                  "BrandId" : 9280,
                  "CategoryId" : 9287,
                  "DepartmentId" : 9287,
                  "Description" : "The Black and Decker LD120-VoltA 20-Volt Max Lithium Drill/Driver with 30 Accessories come with the Black and Decker 20-volt max Lithium Ion Battery. These batteries are always ready, holding a charge up to 18 months. This drill provides an extra level of control with a 24 position clutch that helps to prevent stripping and overdriving screws. It has a soft grip handle that provides added comfort during use and a light weight to prevent user fatigue. This drill is ideal for drilling and screwdriving through wood, metal, and plastic. The LD120-VoltA set includes: LD120 20-Volt MAX Lithium Drill/Driver, (1) LB20 20-Volt MAX Lithium Ion Battery, (1) LCS20 Charger, (6) Brad Point Drill Bits, (10) 1-Inch Screwdriving Bits, (9) 2-Inch Screwdriving Bits, (4) Nut Drivers, (1) Magnetic Bit Tip Holder and is backed by Black and Decker's 2 year limited warranty.",
                  "DescriptionShort" : "The Black and Decker LD120-VoltA 20-Volt Max Lithium Drill/Driver with 30 Accessories come with the Black and Decker 20-volt max Lithium Ion Battery. These batteries are always ready, holding a charge up to 18 months. This drill provides an extra level of control with a 24 position clutch that helps to prevent stripping and overdriving screws. It has a soft grip handle that provides added comfort during use and a light weight to prevent user fatigue. This drill is ideal for drilling and screwdriving through wood, metal, and plastic. The LD120-VoltA set includes: LD120 20-Volt MAX Lithium Drill/Driver, (1) LB20 20-Volt MAX Lithium Ion Battery, (1) LCS20 Charger, (6) Brad Point Drill Bits, (10) 1-Inch Screwdriving Bits, (9) 2-Inch Screwdriving Bits, (4) Nut Drivers, (1) Magnetic Bit Tip Holder and is backed by Black and Decker's 2 year limited warranty.",
                  "Id" : 17,
                  "IsActive" : true,
                  "IsVisible" : true,
                  "KeyWords" : "product,sample",
                  "LinkId" : "black-decker-20v-max-cordless-drill-driver-with-30-piece-acessories-ld120va",
                  "ListStoreId" : [ 1 ],
                  "LomadeeCampaignCode" : "",
                  "MetaTagDescription" : "The Black and Decker LD120-VoltA 20-Volt Max Lithium Drill/Driver with 30 Accessories come with the Black and Decker 20-volt max Lithium Ion Battery. These batteries are always ready, holding a charge up to 18 months. This drill provides an extra level of control with a 24 position clutch that helps to prevent stripping and overdriving screws. It has a soft grip handle that provides added comfort during use and a light weight to prevent user fatigue. This drill is ideal for drilling and screwdriving through wood, metal, and plastic. The LD120-VoltA set includes: LD120 20-Volt MAX Lithium Drill/Driver, (1) LB20 20-Volt MAX Lithium Ion Battery, (1) LCS20 Charger, (6) Brad Point Drill Bits, (10) 1-Inch Screwdriving Bits, (9) 2-Inch Screwdriving Bits, (4) Nut Drivers, (1) Magnetic Bit Tip Holder and is backed by Black and Decker's 2 year limited warranty.",
                  "Name" : "BLACK+DECKER 20V MAX Cordless Drill / Driver with 30-Piece Accessories (LD120VA)",
                  "RefId" : "880010",
                  "ReleaseDate" : "2020-01-01T00:00:00",
                  "ShowWithoutStock" : true,
                  "SupplierId" : 1,
                  "TaxCode" : "",
                  "Title" : "BLACK+DECKER 20V MAX Cordless Drill / Driver with 30-Piece Accessories (LD120VA)"
                },
                "schema" : {
                  "properties" : {
                    "AdWordsRemarketingCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "BrandId" : {
                      "description" : "ID of the product Brand.",
                      "type" : "integer"
                    },
                    "CategoryId" : {
                      "description" : "ID of product Category.",
                      "type" : "integer"
                    },
                    "DepartmentId" : {
                      "description" : "ID of product department.",
                      "type" : "integer"
                    },
                    "Description" : {
                      "description" : "Product Description, HTML is allowed.",
                      "type" : "string"
                    },
                    "DescriptionShort" : {
                      "description" : "Product Short Description.",
                      "type" : "string"
                    },
                    "Id" : {
                      "description" : "ID of the Product.",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "If the product is Active.",
                      "type" : "boolean"
                    },
                    "IsVisible" : {
                      "description" : "If the product are visible in search and list pages.",
                      "type" : "boolean"
                    },
                    "KeyWords" : {
                      "description" : "Alternatives Keywords to improve the product findability.",
                      "type" : "string"
                    },
                    "LinkId" : {
                      "description" : "Category URL.",
                      "type" : "string"
                    },
                    "ListStoreId" : {
                      "description" : "Array with the ID of all the trade policies that are related to the product.",
                      "items" : {
                        "description" : "Trade policy ID.",
                        "type" : "integer"
                      },
                      "type" : "array"
                    },
                    "LomadeeCampaignCode" : {
                      "deprecated" : true,
                      "description" : "This is a legacy field. Do not take this information into consideration.",
                      "type" : "string"
                    },
                    "MetaTagDescription" : {
                      "description" : "Meta Description for the Product page.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Name of the Product.",
                      "type" : "string"
                    },
                    "RefId" : {
                      "description" : "Product Reference ID.",
                      "type" : "string"
                    },
                    "ReleaseDate" : {
                      "description" : "Product Release Date, for list ordering and product cluster highlight.",
                      "type" : "string"
                    },
                    "ShowWithoutStock" : {
                      "description" : "If the product can be visible without stock.",
                      "type" : "boolean"
                    },
                    "SupplierId" : {
                      "description" : "Product Supplier ID.",
                      "type" : "integer"
                    },
                    "TaxCode" : {
                      "description" : "SKU Tax Code.",
                      "type" : "string"
                    },
                    "Title" : {
                      "description" : "Product's Title tag. Limited to 150 characters. It is presented in the browser tab and corresponds to the title of the product page. This field is important for SEO.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Product by RefId",
        "tags" : [ "Product" ]
      }
    },
    "/api/catalog_system/pvt/products/{productId}/specification" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves all specifications of a product by the product's ID.\r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.\r\n\r\n### Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Value\": [\r\n            \"Iron\",\r\n            \"Plastic\"\r\n        ],\r\n        \"Id\": 30,\r\n        \"Name\": \"Material\"\r\n    }\r\n]\r\n```",
        "operationId" : "GetProductSpecification",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : [ {
                    "Id" : 30,
                    "Name" : "Material",
                    "Value" : [ "Iron", "Plastic" ]
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/GetorUpdateProductSpecification"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "Cache-Control" : {
                "content" : {
                  "text/plain" : {
                    "schema" : {
                      "example" : "no-cache",
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Length" : {
                "content" : {
                  "text/plain" : {
                    "example" : "102",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Date" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Mon, 22 Jan 2018 23:18:18 GMT",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Expires" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-1",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Pragma" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Server" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Microsoft-IIS/10.0",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-AspNet-Version" : {
                "content" : {
                  "text/plain" : {
                    "example" : "4.0.30319",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-By" : {
                "content" : {
                  "text/plain" : {
                    "example" : "ASP.NET",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "no" : {
                "content" : {
                  "text/plain" : {
                    "example" : "CELOCOUTO",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "p3p" : {
                "content" : {
                  "text/plain" : {
                    "example" : "policyref=\"/w3c/p3p.xml\",CP=\"ADMa OUR NOR CNT NID DSP NOI COR\"",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "powered" : {
                "content" : {
                  "text/plain" : {
                    "example" : "vtex",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "x-vtex-operation-id" : {
                "content" : {
                  "text/plain" : {
                    "example" : "7ec24c86-1dc8-4ec7-a4b7-79b06b53a742",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary" : "Get Product Specification by Product ID",
        "tags" : [ "Product Specification" ]
      },
      "post" : {
        "deprecated" : false,
        "description" : "Updates the value of a product specification by the product's ID. The ID or name can be used to identify what product specification will be updated. Specification fields must be previously created in your Catalog.\r\n\r\n### Request body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Value\": [\r\n            \"Iron\",\r\n            \"Plastic\"\r\n        ],\r\n        \"Id\": 30,\r\n        \"Name\": \"Material\"\r\n    }\r\n]\r\n```",
        "operationId" : "UpdateProductSpecification",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/GetorUpdateProductSpecification"
                },
                "type" : "array"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Update Product Specification by Product ID",
        "tags" : [ "Product Specification" ]
      }
    },
    "/api/catalog_system/pvt/saleschannel/list" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a list with details about the store's sales channels. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"Id\": 1,\r\n        \"Name\": \"Loja Principal\",\r\n        \"IsActive\": true,\r\n        \"ProductClusterId\": null,\r\n        \"CountryCode\": \"BRA\",\r\n        \"CultureInfo\": \"pt-BR\",\r\n        \"TimeZone\": \"E. South America Standard Time\",\r\n        \"CurrencyCode\": \"BRL\",\r\n        \"CurrencySymbol\": \"R$\",\r\n        \"CurrencyLocale\": 1046,\r\n        \"CurrencyFormatInfo\": {\r\n            \"CurrencyDecimalDigits\": 1,\r\n            \"CurrencyDecimalSeparator\": \",\",\r\n            \"CurrencyGroupSeparator\": \".\",\r\n            \"CurrencyGroupSize\": 3,\r\n            \"StartsWithCurrencySymbol\": true\r\n        },\r\n        \"Origin\": null,\r\n        \"Position\": 2,\r\n        \"ConditionRule\": null,\r\n        \"CurrencyDecimalDigits\": 1\r\n    }\r\n]\r\n```",
        "operationId" : "SalesChannelList",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "properties" : {
                      "ConditionRule" : {
                        "description" : "Defines what is the conditional rule to activate de Sales Channel.",
                        "example" : "approved=true",
                        "nullable" : true,
                        "title" : "ConditionRule",
                        "type" : "string"
                      },
                      "CountryCode" : {
                        "description" : "Country Code in ISO 3166-1 alfa-3 Standard.",
                        "example" : "BRA",
                        "title" : "Id",
                        "type" : "string"
                      },
                      "CultureInfo" : {
                        "description" : "Language Country code in LCIDstring Standard.",
                        "example" : "pt-BR",
                        "title" : "CultureInfo",
                        "type" : "string"
                      },
                      "CurrencyCode" : {
                        "description" : "Currency Code in ISO 4217 standard.",
                        "example" : "BRL",
                        "title" : "CurrencyCode",
                        "type" : "string"
                      },
                      "CurrencyDecimalDigits" : {
                        "description" : "Quantity of Currency Decimal Digits.",
                        "example" : 1,
                        "title" : "CurrencyDecimalDigits",
                        "type" : "integer"
                      },
                      "CurrencyFormatInfo" : {
                        "description" : "Object with currency format.",
                        "properties" : {
                          "CurrencyDecimalDigits" : {
                            "description" : "Quantity of Currency Decimal Digits.",
                            "example" : 1,
                            "title" : "CurrencyDecimalDigits",
                            "type" : "integer"
                          },
                          "CurrencyDecimalSeparator" : {
                            "description" : "Defines which Currency Decimal Separator will be applied.",
                            "example" : ",",
                            "title" : "CurrencyDecimalSeparator",
                            "type" : "string"
                          },
                          "CurrencyGroupSeparator" : {
                            "description" : "Defines which Currency Group Separator will be applied.",
                            "example" : ".",
                            "title" : "CurrencyGroupSeparator",
                            "type" : "string"
                          },
                          "CurrencyGroupSize" : {
                            "description" : "Define how many characters will be grouped.",
                            "example" : 3,
                            "title" : "CurrencyGroupSize",
                            "type" : "integer"
                          },
                          "StartsWithCurrencySymbol" : {
                            "description" : "Defines if all prices will be initiated with Currency Symbol (`true`) or not (`false`).",
                            "example" : true,
                            "title" : "StartsWithCurrencySymbol",
                            "type" : "boolean"
                          }
                        },
                        "title" : "CurrencyFormatInfo",
                        "type" : "object"
                      },
                      "CurrencyLocale" : {
                        "description" : "Currency Locale Code in LCID standard.",
                        "example" : 1046,
                        "title" : "CurrencyLocale",
                        "type" : "integer"
                      },
                      "CurrencySymbol" : {
                        "description" : "Currency symbol.",
                        "example" : "R$",
                        "title" : "CurrencySymbol",
                        "type" : "string"
                      },
                      "Id" : {
                        "description" : "Sales Channel unique identifier.",
                        "example" : 1,
                        "title" : "Id",
                        "type" : "integer"
                      },
                      "IsActive" : {
                        "description" : "Defines if the Sales Channel is active (`true`) or not (`false`).",
                        "title" : "IsActive",
                        "type" : "boolean"
                      },
                      "Name" : {
                        "description" : "Sales Channel name.",
                        "example" : "Loja Principal",
                        "title" : "Id",
                        "type" : "string"
                      },
                      "Origin" : {
                        "description" : "Origin of products in the Sales Channel.",
                        "nullable" : true,
                        "title" : "Origin",
                        "type" : "string"
                      },
                      "Position" : {
                        "description" : "Defines the position on index.",
                        "example" : 1,
                        "nullable" : true,
                        "title" : "Position",
                        "type" : "integer"
                      },
                      "ProductClusterId" : {
                        "description" : "Product Cluster ID, if the Sales Channel has releated Product Cluster.",
                        "nullable" : true,
                        "title" : "ProductClusterId",
                        "type" : "integer"
                      },
                      "TimeZone" : {
                        "description" : "Name of Time Zone.",
                        "example" : "E. South America Standard Time",
                        "title" : "TimeZone",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Sales Channel List",
        "tags" : [ "Sales Channel" ]
      }
    },
    "/api/catalog_system/pvt/seller" : {
      "post" : {
        "description" : "Creates a new seller.",
        "operationId" : "CreateSeller",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "ArchiveId" : 1,
                "CNPJ" : "12345678912345",
                "CSCIdentification" : "myseller",
                "CatalogSystemEndpoint" : "http://myseller.vtexcommercestable.com.br/api/catalog_system/",
                "DeliveryPolicy" : "",
                "Description" : "",
                "Email" : "myseller@vtex.com",
                "ExchangeReturnPolicy" : "",
                "FreightCommissionPercentage" : 0,
                "FulfillmentEndpoint" : "http://fulfillment.vtexcommerce.com.br/api/fulfillment?affiliateid=VTX&sc=1&an=myseller",
                "FulfillmentSellerId" : 2,
                "IsActive" : true,
                "IsBetterScope" : false,
                "Name" : "My Seller",
                "Password" : "",
                "ProductCommissionPercentage" : 1.5,
                "SecutityPrivacyPolicy" : "",
                "SellerId" : "myseller",
                "SellerType" : 1,
                "UrlLogo" : "",
                "UseHybridPaymentOptions" : false,
                "UserName" : ""
              },
              "schema" : {
                "$ref" : "#/components/schemas/CreateSellerRequest"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "ArchiveId" : null,
                    "CNPJ" : "12035072751",
                    "CSCIdentification" : "pedrostore",
                    "CatalogSystemEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/catalog_system/",
                    "CategoryCommissionPercentage" : "[{\"CategoryId\":14,\"ProductCommission\":15.0,\"FreightCommission\":0.0}]",
                    "DeliveryPolicy" : "",
                    "Description" : "",
                    "Email" : "breno@breno.com",
                    "ExchangeReturnPolicy" : "",
                    "FreightCommissionPercentage" : 0,
                    "FulfillmentEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/fulfillment?affiliateid=LDB&sc=1",
                    "FulfillmentSellerId" : null,
                    "IsActive" : true,
                    "IsBetterScope" : false,
                    "MerchantName" : "",
                    "Name" : "pedrostore",
                    "Password" : null,
                    "ProductCommissionPercentage" : 0,
                    "SecutityPrivacyPolicy" : "",
                    "SellerId" : "pedrostore",
                    "SellerType" : 1,
                    "TrustPolicy" : "Default",
                    "UrlLogo" : null,
                    "UseHybridPaymentOptions" : false,
                    "UserName" : null
                  },
                  "properties" : {
                    "ArchiveId" : {
                      "description" : "Seller archive ID.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "CNPJ" : {
                      "description" : "Company registration number.",
                      "type" : "string"
                    },
                    "CSCIdentification" : {
                      "description" : "CSC identification.",
                      "type" : "string"
                    },
                    "CatalogSystemEndpoint" : {
                      "description" : "URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.",
                      "type" : "string"
                    },
                    "CategoryCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "string"
                    },
                    "DeliveryPolicy" : {
                      "description" : "Text describing the delivery policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).",
                      "type" : "string"
                    },
                    "Email" : {
                      "description" : "Email of the admin responsible for the seller. ",
                      "type" : "string"
                    },
                    "ExchangeReturnPolicy" : {
                      "description" : "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "FreightCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "FulfillmentEndpoint" : {
                      "description" : "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FulfillmentSellerId" : {
                      "description" : "Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "If the selle is active (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "IsBetterScope" : {
                      "description" : "Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).",
                      "type" : "boolean"
                    },
                    "MerchantName" : {
                      "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-de-pagamento--6k5JidhYRUxileNolY2VLx) article to know more.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.",
                      "type" : "string"
                    },
                    "Password" : {
                      "description" : "Seller password.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "ProductCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "SecutityPrivacyPolicy" : {
                      "description" : "Text describing the security policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "SellerId" : {
                      "description" : "Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.",
                      "type" : "string"
                    },
                    "SellerType" : {
                      "description" : "Seller type.",
                      "type" : "integer"
                    },
                    "TrustPolicy" : {
                      "description" : "Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.",
                      "type" : "string"
                    },
                    "UrlLogo" : {
                      "description" : "Seller URL logo.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "UseHybridPaymentOptions" : {
                      "description" : "Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller. ",
                      "type" : "boolean"
                    },
                    "UserName" : {
                      "description" : "Seller username.",
                      "nullable" : true,
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Seller",
        "tags" : [ "Seller" ]
      },
      "put" : {
        "deprecated" : false,
        "description" : "Updates a seller.",
        "operationId" : "UpdateSeller",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateSellerRequest"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "ArchiveId" : null,
                    "CNPJ" : "12035072751",
                    "CSCIdentification" : "pedrostore",
                    "CatalogSystemEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/catalog_system/",
                    "CategoryCommissionPercentage" : "[{\"CategoryId\":14,\"ProductCommission\":15.0,\"FreightCommission\":0.0}]",
                    "DeliveryPolicy" : "",
                    "Description" : "",
                    "Email" : "breno@breno.com",
                    "ExchangeReturnPolicy" : "",
                    "FreightCommissionPercentage" : 0,
                    "FulfillmentEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/fulfillment?affiliateid=LDB&sc=1",
                    "FulfillmentSellerId" : null,
                    "IsActive" : true,
                    "IsBetterScope" : false,
                    "MerchantName" : "",
                    "Name" : "pedrostore",
                    "Password" : null,
                    "ProductCommissionPercentage" : 0,
                    "SecutityPrivacyPolicy" : "",
                    "SellerId" : "pedrostore",
                    "SellerType" : 1,
                    "TrustPolicy" : "Default",
                    "UrlLogo" : null,
                    "UseHybridPaymentOptions" : false,
                    "UserName" : null
                  },
                  "properties" : {
                    "ArchiveId" : {
                      "description" : "Seller archive ID.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "CNPJ" : {
                      "description" : "Company registration number.",
                      "type" : "string"
                    },
                    "CSCIdentification" : {
                      "description" : "CSC identification.",
                      "type" : "string"
                    },
                    "CatalogSystemEndpoint" : {
                      "description" : "URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.",
                      "type" : "string"
                    },
                    "CategoryCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "string"
                    },
                    "DeliveryPolicy" : {
                      "description" : "Text describing the delivery policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).",
                      "type" : "string"
                    },
                    "Email" : {
                      "description" : "Email of the admin responsible for the seller.",
                      "type" : "string"
                    },
                    "ExchangeReturnPolicy" : {
                      "description" : "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "FreightCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "FulfillmentEndpoint" : {
                      "description" : "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FulfillmentSellerId" : {
                      "description" : "Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "If the selle is active (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "IsBetterScope" : {
                      "description" : "Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).",
                      "type" : "boolean"
                    },
                    "MerchantName" : {
                      "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-de-pagamento--6k5JidhYRUxileNolY2VLx) article to know more.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.",
                      "type" : "string"
                    },
                    "Password" : {
                      "description" : "Seller password.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "ProductCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "SecutityPrivacyPolicy" : {
                      "description" : "Text describing the security policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "SellerId" : {
                      "description" : "Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.",
                      "type" : "string"
                    },
                    "SellerType" : {
                      "description" : "Seller type.",
                      "type" : "integer"
                    },
                    "TrustPolicy" : {
                      "description" : "Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.",
                      "type" : "string"
                    },
                    "UrlLogo" : {
                      "description" : "Seller URL logo.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "UseHybridPaymentOptions" : {
                      "description" : "Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller.",
                      "type" : "boolean"
                    },
                    "UserName" : {
                      "description" : "Seller username.",
                      "nullable" : true,
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Seller",
        "tags" : [ "Seller" ]
      }
    },
    "/api/catalog_system/pvt/seller/list" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves the seller's details by its ID.",
        "operationId" : "SellerList",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Trade policy ID.",
          "explode" : true,
          "in" : "query",
          "name" : "sc",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Seller type.",
          "explode" : true,
          "in" : "query",
          "name" : "sellerType",
          "required" : false,
          "schema" : {
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "If the seller is better scope.",
          "explode" : true,
          "in" : "query",
          "name" : "isBetterScope",
          "required" : false,
          "schema" : {
            "example" : false,
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "ArchiveId" : null,
                    "CNPJ" : "12035072751",
                    "CSCIdentification" : "pedrostore",
                    "CatalogSystemEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/catalog_system/",
                    "CategoryCommissionPercentage" : "[{\"CategoryId\":14,\"ProductCommission\":15.0,\"FreightCommission\":0.0}]",
                    "DeliveryPolicy" : "",
                    "Description" : "",
                    "Email" : "breno@breno.com",
                    "ExchangeReturnPolicy" : "",
                    "FreightCommissionPercentage" : 0,
                    "FulfillmentEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/fulfillment?affiliateid=LDB&sc=1",
                    "FulfillmentSellerId" : null,
                    "IsActive" : true,
                    "IsBetterScope" : false,
                    "MerchantName" : "",
                    "Name" : "pedrostore",
                    "Password" : null,
                    "ProductCommissionPercentage" : 0,
                    "SecutityPrivacyPolicy" : "",
                    "SellerId" : "pedrostore",
                    "SellerType" : 1,
                    "TrustPolicy" : "Default",
                    "UrlLogo" : null,
                    "UseHybridPaymentOptions" : false,
                    "UserName" : null
                  },
                  "properties" : {
                    "ArchiveId" : {
                      "description" : "Seller archive ID.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "CNPJ" : {
                      "description" : "Company registration number.",
                      "type" : "string"
                    },
                    "CSCIdentification" : {
                      "description" : "CSC identification.",
                      "type" : "string"
                    },
                    "CatalogSystemEndpoint" : {
                      "description" : "URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.",
                      "type" : "string"
                    },
                    "CategoryCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "string"
                    },
                    "DeliveryPolicy" : {
                      "description" : "Text describing the delivery policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).",
                      "type" : "string"
                    },
                    "Email" : {
                      "description" : "Email of the admin responsible for the seller.",
                      "type" : "string"
                    },
                    "ExchangeReturnPolicy" : {
                      "description" : "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "FreightCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "FulfillmentEndpoint" : {
                      "description" : "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FulfillmentSellerId" : {
                      "description" : "Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "If the selle is active (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "IsBetterScope" : {
                      "description" : "Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).",
                      "type" : "boolean"
                    },
                    "MerchantName" : {
                      "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-de-pagamento--6k5JidhYRUxileNolY2VLx) article to know more.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.",
                      "type" : "string"
                    },
                    "Password" : {
                      "description" : "Seller password.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "ProductCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "SecutityPrivacyPolicy" : {
                      "description" : "Text describing the security policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "SellerId" : {
                      "description" : "Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.",
                      "type" : "string"
                    },
                    "SellerType" : {
                      "description" : "Seller type.",
                      "type" : "integer"
                    },
                    "TrustPolicy" : {
                      "description" : "Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.",
                      "type" : "string"
                    },
                    "UrlLogo" : {
                      "description" : "Seller URL logo.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "UseHybridPaymentOptions" : {
                      "description" : "Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller.",
                      "type" : "boolean"
                    },
                    "UserName" : {
                      "description" : "Seller username.",
                      "nullable" : true,
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Seller List",
        "tags" : [ "Seller" ]
      }
    },
    "/api/catalog_system/pvt/seller/{sellerId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves the seller's details by its ID.",
        "operationId" : "GetSellerbyId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
          "in" : "path",
          "name" : "sellerId",
          "required" : true,
          "schema" : {
            "example" : "pedrostore",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Object with information of all sellers in the store.",
                  "example" : {
                    "ArchiveId" : null,
                    "CNPJ" : "12035072751",
                    "CSCIdentification" : "pedrostore",
                    "CatalogSystemEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/catalog_system/",
                    "CategoryCommissionPercentage" : "[{\"CategoryId\":14,\"ProductCommission\":15.0,\"FreightCommission\":0.0}]",
                    "DeliveryPolicy" : "",
                    "Description" : "",
                    "Email" : "breno@breno.com",
                    "ExchangeReturnPolicy" : "",
                    "FreightCommissionPercentage" : 0,
                    "FulfillmentEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/fulfillment?affiliateid=LDB&sc=1",
                    "FulfillmentSellerId" : null,
                    "IsActive" : true,
                    "IsBetterScope" : false,
                    "MerchantName" : "",
                    "Name" : "pedrostore",
                    "Password" : null,
                    "ProductCommissionPercentage" : 0,
                    "SecutityPrivacyPolicy" : "",
                    "SellerId" : "pedrostore",
                    "SellerType" : 1,
                    "TrustPolicy" : "Default",
                    "UrlLogo" : "",
                    "UseHybridPaymentOptions" : false,
                    "UserName" : null
                  },
                  "properties" : {
                    "ArchiveId" : {
                      "description" : "Seller archive ID.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "CNPJ" : {
                      "description" : "Company registration number.",
                      "type" : "string"
                    },
                    "CSCIdentification" : {
                      "description" : "CSC identification.",
                      "type" : "string"
                    },
                    "CatalogSystemEndpoint" : {
                      "description" : "URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.",
                      "type" : "string"
                    },
                    "CategoryCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "string"
                    },
                    "DeliveryPolicy" : {
                      "description" : "Text describing the delivery policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).",
                      "type" : "string"
                    },
                    "Email" : {
                      "description" : "Email of the admin responsible for the seller.",
                      "type" : "string"
                    },
                    "ExchangeReturnPolicy" : {
                      "description" : "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "FreightCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "FulfillmentEndpoint" : {
                      "description" : "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FulfillmentSellerId" : {
                      "description" : "Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "If the selle is active (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "IsBetterScope" : {
                      "description" : "Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).",
                      "type" : "boolean"
                    },
                    "MerchantName" : {
                      "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-de-pagamento--6k5JidhYRUxileNolY2VLx) article to know more.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.",
                      "type" : "string"
                    },
                    "Password" : {
                      "description" : "Seller password.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "ProductCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "SecutityPrivacyPolicy" : {
                      "description" : "Text describing the security policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "SellerId" : {
                      "description" : "Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.",
                      "type" : "string"
                    },
                    "SellerType" : {
                      "description" : "Seller type.",
                      "type" : "integer"
                    },
                    "TrustPolicy" : {
                      "description" : "Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.",
                      "type" : "string"
                    },
                    "UrlLogo" : {
                      "description" : "Seller URL logo.",
                      "type" : "string"
                    },
                    "UseHybridPaymentOptions" : {
                      "description" : "Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller. ",
                      "type" : "boolean"
                    },
                    "UserName" : {
                      "description" : "Seller username.",
                      "nullable" : true,
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Seller by ID",
        "tags" : [ "Seller" ]
      }
    },
    "/api/catalog_system/pvt/sellers/{sellerId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves the seller's details by its ID.",
        "operationId" : "GetSellersbyId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
          "in" : "path",
          "name" : "sellerId",
          "required" : true,
          "schema" : {
            "example" : "pedrostore",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Object with information of all sellers in the store.",
                  "example" : {
                    "ArchiveId" : null,
                    "CNPJ" : "12035072751",
                    "CSCIdentification" : "pedrostore",
                    "CatalogSystemEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/catalog_system/",
                    "CategoryCommissionPercentage" : "[{\"CategoryId\":14,\"ProductCommission\":15.0,\"FreightCommission\":0.0}]",
                    "DeliveryPolicy" : "",
                    "Description" : "",
                    "Email" : "breno@breno.com",
                    "ExchangeReturnPolicy" : "",
                    "FreightCommissionPercentage" : 0,
                    "FulfillmentEndpoint" : "http://pedrostore.vtexcommercestable.com.br/api/fulfillment?affiliateid=LDB&sc=1",
                    "FulfillmentSellerId" : null,
                    "IsActive" : true,
                    "IsBetterScope" : false,
                    "MerchantName" : "",
                    "Name" : "pedrostore",
                    "Password" : null,
                    "ProductCommissionPercentage" : 0,
                    "SecutityPrivacyPolicy" : "",
                    "SellerId" : "pedrostore",
                    "SellerType" : 1,
                    "TrustPolicy" : "Default",
                    "UrlLogo" : "",
                    "UseHybridPaymentOptions" : false,
                    "UserName" : null
                  },
                  "properties" : {
                    "ArchiveId" : {
                      "description" : "Seller archive ID.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "CNPJ" : {
                      "description" : "Company registration number.",
                      "type" : "string"
                    },
                    "CSCIdentification" : {
                      "description" : "CSC identification.",
                      "type" : "string"
                    },
                    "CatalogSystemEndpoint" : {
                      "description" : "URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.",
                      "type" : "string"
                    },
                    "CategoryCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "string"
                    },
                    "DeliveryPolicy" : {
                      "description" : "Text describing the delivery policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "Description" : {
                      "description" : "Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).",
                      "type" : "string"
                    },
                    "Email" : {
                      "description" : "Email of the admin responsible for the seller. ",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "ExchangeReturnPolicy" : {
                      "description" : "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "FreightCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "FulfillmentEndpoint" : {
                      "description" : "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "FulfillmentSellerId" : {
                      "description" : "Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "If the selle is active (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "IsBetterScope" : {
                      "description" : "Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).",
                      "type" : "boolean"
                    },
                    "MerchantName" : {
                      "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-de-pagamento--6k5JidhYRUxileNolY2VLx) article to know more.",
                      "type" : "string"
                    },
                    "Name" : {
                      "description" : "Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "Password" : {
                      "description" : "Seller password.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "ProductCommissionPercentage" : {
                      "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
                      "type" : "number"
                    },
                    "SecutityPrivacyPolicy" : {
                      "description" : "Text describing the security policy previously agreed between the marketplace and the seller.",
                      "type" : "string"
                    },
                    "SellerId" : {
                      "description" : "Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.",
                      "type" : "string"
                    },
                    "SellerType" : {
                      "description" : "Seller type.",
                      "type" : "integer"
                    },
                    "TrustPolicy" : {
                      "description" : "Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.",
                      "type" : "string"
                    },
                    "UrlLogo" : {
                      "description" : "Seller URL logo.",
                      "type" : "string"
                    },
                    "UseHybridPaymentOptions" : {
                      "description" : "Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller. ",
                      "type" : "boolean"
                    },
                    "UserName" : {
                      "description" : "Seller username.",
                      "nullable" : true,
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Seller by ID",
        "tags" : [ "Seller" ]
      }
    },
    "/api/catalog_system/pvt/sku/associateattachments" : {
      "post" : {
        "deprecated" : false,
        "description" : "Associates attachments to an SKU based on a given SKU ID and attachment names.\n\rThis request removes existing SKU attachment associations and recreates the associations with the attachments being sent. \r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"SkuId\": 1,\r\n    \"AttachmentNames\": [\r\n        \"T-Shirt Customization\"\r\n    ]\r\n}\r\n```",
        "operationId" : "AssociateattachmentstoSKU",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "AttachmentNames" : [ "T-Shirt Customization" ],
                "SkuId" : 1
              },
              "schema" : {
                "properties" : {
                  "AttachmentNames" : {
                    "description" : "Array with all the names of the attachments that you need to associate to the SKU.",
                    "items" : {
                      "description" : "Attachment Name.",
                      "example" : "T-Shirt Customization",
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "SkuId" : {
                    "description" : "Unique identifier of the SKU.",
                    "example" : 1,
                    "type" : "integer"
                  }
                },
                "required" : [ "SkuId", "AttachmentNames" ],
                "type" : "object"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Associate attachments to an SKU",
        "tags" : [ "SKU Attachment" ]
      }
    },
    "/api/catalog_system/pvt/sku/complements/{parentSkuId}/{type}" : {
      "get" : {
        "description" : "Retrieves all the existing SKU complements with the same complement type ID of a specific SKU. \r\n \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"ParentSkuId\": 1,\r\n    \"ComplementSkuIds\": [\r\n        7\r\n    ],\r\n    \"Type\": \"1\"\r\n}\r\n```",
        "operationId" : "GetSKUcomplementsbytype",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of the Parent SKU, where the Complement is inserted.",
          "in" : "path",
          "name" : "parentSkuId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Complement Type ID. This represents the type of the complement. The possible values are: `1` for Accessory; `2` for Suggestion; `3` for Similar Product; `5` for Show Together.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "ComplementSkuIds" : [ 7 ],
                    "ParentSkuId" : 1,
                    "Type" : "1"
                  },
                  "properties" : {
                    "ComplementSkuIds" : {
                      "description" : "Array with SKU complements IDs.",
                      "example" : [ 7 ],
                      "items" : {
                        "description" : "SKU Complement ID.",
                        "example" : 7,
                        "title" : "",
                        "type" : "integer"
                      },
                      "title" : "ComplementSkuIds",
                      "type" : "array"
                    },
                    "ParentSkuId" : {
                      "description" : "ID of the Parent SKU, where the Complement is inserted.",
                      "example" : 1,
                      "title" : "ParentSkuId",
                      "type" : "integer"
                    },
                    "Type" : {
                      "description" : "Complement Type ID. This represents the type of the complement. The possible values are: `1` for Accessory; `2` for Suggestion; `3` for Similar Product; `5` for Show Together.",
                      "example" : "1",
                      "title" : "Type",
                      "type" : "string"
                    }
                  },
                  "required" : [ "ParentSkuId", "ComplementSkuIds", "Type" ],
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU complements by type",
        "tags" : [ "SKU Complement" ]
      }
    },
    "/api/catalog_system/pvt/sku/stockkeepingunitByProductId/{productId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a list with the SKUs related to a product by the product's ID.\r\n\r\n### Response body example\r\n\r\n```json\r\n[\r\n    {\r\n        \"IsPersisted\": true,\r\n        \"IsRemoved\": false,\r\n        \"Id\": 2000035,\r\n        \"ProductId\": 2000024,\r\n        \"IsActive\": true,\r\n        \"Name\": \"33 - Preto\",\r\n        \"Height\": 8,\r\n        \"RealHeight\": null,\r\n        \"Width\": 15,\r\n        \"RealWidth\": null,\r\n        \"Length\": 8,\r\n        \"RealLength\": null,\r\n        \"WeightKg\": 340,\r\n        \"RealWeightKg\": null,\r\n        \"ModalId\": 1,\r\n        \"RefId\": \"\",\r\n        \"CubicWeight\": 0.2,\r\n        \"IsKit\": false,\r\n        \"IsDynamicKit\": null,\r\n        \"InternalNote\": null,\r\n        \"DateUpdated\": \"2015-11-06T19:10:00\",\r\n        \"RewardValue\": 0.01,\r\n        \"CommercialConditionId\": 1,\r\n        \"EstimatedDateArrival\": \"\",\r\n        \"FlagKitItensSellApart\": false,\r\n        \"ManufacturerCode\": \"\",\r\n        \"ReferenceStockKeepingUnitId\": null,\r\n        \"Position\": 0,\r\n        \"EditionSkuId\": null,\r\n        \"ApprovedAdminId\": 123,\r\n        \"EditionAdminId\": 123,\r\n        \"ActivateIfPossible\": true,\r\n        \"SupplierCode\": null,\r\n        \"MeasurementUnit\": \"un\",\r\n        \"UnitMultiplier\": 2.0000,\r\n        \"IsInventoried\": null,\r\n        \"IsTransported\": null,\r\n        \"IsGiftCardRecharge\": null,\r\n        \"ModalType\": \"\"\r\n    }\r\n]\r\n```",
        "operationId" : "SkulistbyProductId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product’s unique numerical identifier.",
          "in" : "path",
          "name" : "productId",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : [ {
                    "ActivateIfPossible" : true,
                    "ApprovedAdminId" : 123,
                    "CommercialConditionId" : 1,
                    "CubicWeight" : 0.2,
                    "DateUpdated" : "2015-11-06T19:10:00",
                    "EditionAdminId" : 123,
                    "EditionSkuId" : null,
                    "EstimatedDateArrival" : null,
                    "FlagKitItensSellApart" : false,
                    "Height" : 8,
                    "Id" : 2000035,
                    "InternalNote" : null,
                    "IsActive" : true,
                    "IsDynamicKit" : null,
                    "IsGiftCardRecharge" : null,
                    "IsInventoried" : null,
                    "IsKit" : false,
                    "IsPersisted" : true,
                    "IsRemoved" : false,
                    "IsTransported" : null,
                    "Length" : 8,
                    "ManufacturerCode" : "",
                    "MeasurementUnit" : "un",
                    "ModalId" : 1,
                    "ModalType" : null,
                    "Name" : "33 - Preto",
                    "Position" : 0,
                    "ProductId" : 2000024,
                    "RealHeight" : null,
                    "RealLength" : null,
                    "RealWeightKg" : null,
                    "RealWidth" : null,
                    "RefId" : "",
                    "ReferenceStockKeepingUnitId" : null,
                    "RewardValue" : 0.01,
                    "SupplierCode" : null,
                    "UnitMultiplier" : 2,
                    "WeightKg" : 340,
                    "Width" : 15
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/SkulistbyProductId"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "Cache-Control" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Connection" : {
                "content" : {
                  "text/plain" : {
                    "example" : "keep-alive",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Encoding" : {
                "content" : {
                  "text/plain" : {
                    "example" : "gzip",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Length" : {
                "content" : {
                  "text/plain" : {
                    "example" : "535",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Date" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Mon, 07 Aug 2017 22:10:41 GMT",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Expires" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-1",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Pragma" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Server" : {
                "content" : {
                  "text/plain" : {
                    "example" : "nginx",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Vary" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Accept-Encoding",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-CacheServer" : {
                "content" : {
                  "text/plain" : {
                    "example" : "janus-apicache-nginx15",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-by-VTEX-Janus-ApiCache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "v1.3.9",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-by-VTEX-Janus-Edge" : {
                "content" : {
                  "text/plain" : {
                    "example" : "v1.38.0",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Track" : {
                "content" : {
                  "text/plain" : {
                    "example" : "stable",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Status-Janus-ApiCache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "MISS",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Status-Janus-Edge" : {
                "content" : {
                  "text/plain" : {
                    "example" : "MISS",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Janus-Router-Backend-App" : {
                "content" : {
                  "text/plain" : {
                    "example" : "prtapi-v1.4.779-stable+579",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "no" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-LKUTNPH8G7F",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "p3p" : {
                "content" : {
                  "text/plain" : {
                    "example" : "policyref=\"/w3c/p3p.xml\",CP=\"ADMa OUR NOR CNT NID DSP NOI COR\"",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "powered" : {
                "content" : {
                  "text/plain" : {
                    "example" : "vtex",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "x-vtex-operation-id" : {
                "content" : {
                  "text/plain" : {
                    "example" : "316e0c8f-7aa1-41dc-859e-47ba1fcb4b0f",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary" : "Get SKU list by Product ID",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog_system/pvt/sku/stockkeepingunitbyalternateId/{alternateId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves an SKU by its Alternate ID.\r\n\r\n### Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 310118450,\r\n    \"ProductId\": 2,\r\n    \"NameComplete\": \"Caixa de Areia Azul Petmate sku test\",\r\n    \"ComplementName\": \"\",\r\n    \"ProductName\": \"Caixa de Areia Azul Petmate\",\r\n    \"ProductDescription\": \"\",\r\n    \"ProductRefId\": \"\",\r\n    \"TaxCode\": \"\",\r\n    \"SkuName\": \"sku test\",\r\n    \"IsActive\": true,\r\n    \"IsTransported\": true,\r\n    \"IsInventoried\": true,\r\n    \"IsGiftCardRecharge\": false,\r\n    \"ImageUrl\": \"https://lojadobreno.vteximg.com.br/arquivos/ids/155451-55-55/caixa-areia-azul-petmate.jpg?v=637139451191670000\",\r\n    \"DetailUrl\": \"/caixa-de-areia-azul-petmate/p\",\r\n    \"CSCIdentification\": null,\r\n    \"BrandId\": \"2000005\",\r\n    \"BrandName\": \"Petmate\",\r\n    \"IsBrandActive\": true,\r\n    \"Dimension\": {\r\n        \"cubicweight\": 0.2083,\r\n        \"height\": 10.0000,\r\n        \"length\": 10.0000,\r\n        \"weight\": 10.0000,\r\n        \"width\": 10.0000\r\n    },\r\n    \"RealDimension\": {\r\n        \"realCubicWeight\": 0.000,\r\n        \"realHeight\": 0.0,\r\n        \"realLength\": 0.0,\r\n        \"realWeight\": 0.0,\r\n        \"realWidth\": 0.0\r\n    },\r\n    \"ManufacturerCode\": \"123\",\r\n    \"IsKit\": false,\r\n    \"KitItems\": [],\r\n    \"Services\": [],\r\n    \"Categories\": [],\r\n    \"CategoriesFullPath\": [\r\n        \"/3/15/\",\r\n        \"/3/\",\r\n        \"/1/\"\r\n    ],\r\n    \"Attachments\": [],\r\n    \"Collections\": [],\r\n    \"SkuSellers\": [\r\n        {\r\n            \"SellerId\": \"1\",\r\n            \"StockKeepingUnitId\": 310118450,\r\n            \"SellerStockKeepingUnitId\": \"310118450\",\r\n            \"IsActive\": true,\r\n            \"FreightCommissionPercentage\": 0.0,\r\n            \"ProductCommissionPercentage\": 0.0\r\n        }\r\n    ],\r\n    \"SalesChannels\": [\r\n        1,\r\n        3\r\n    ],\r\n    \"Images\": [\r\n        {\r\n            \"ImageUrl\": \"https://lojadobreno.vteximg.com.br/arquivos/ids/155451/caixa-areia-azul-petmate.jpg?v=637139451191670000\",\r\n            \"ImageName\": null,\r\n            \"FileId\": 155451\r\n        }\r\n    ],\r\n    \"Videos\": [],\r\n    \"SkuSpecifications\": [],\r\n    \"ProductSpecifications\": [],\r\n    \"ProductClustersIds\": \"151,158\",\r\n    \"PositionsInClusters\": {\r\n        \"151\": 1,\r\n        \"158\": 2\r\n    },\r\n    \"ProductClusterNames\": {\r\n        \"151\": \"asdfghj\",\r\n        \"158\": \"Coleção halloween\"\r\n    },\r\n    \"ProductClusterHighlights\": {\r\n        \"151\": \"asdfghj\"\r\n    },\r\n    \"ProductCategoryIds\": \"/3/15/\",\r\n    \"IsDirectCategoryActive\": true,\r\n    \"ProductGlobalCategoryId\": 5000,\r\n    \"ProductCategories\": {\r\n        \"15\": \"Caixa de Areia\",\r\n        \"3\": \"Higiene\",\r\n        \"1\": \"Alimentação\"\r\n    },\r\n    \"CommercialConditionId\": 1,\r\n    \"RewardValue\": 0.0,\r\n    \"AlternateIds\": {\r\n        \"RefId\": \"1\"\r\n    },\r\n    \"AlternateIdValues\": [\r\n        \"1\"\r\n    ],\r\n    \"EstimatedDateArrival\": null,\r\n    \"MeasurementUnit\": \"un\",\r\n    \"UnitMultiplier\": 1.0000,\r\n    \"InformationSource\": null,\r\n    \"ModalType\": null,\r\n    \"KeyWords\": \"\",\r\n    \"ReleaseDate\": \"2020-01-06T00:00:00Z\",\r\n    \"ProductIsVisible\": true,\r\n    \"ShowIfNotAvailable\": true,\r\n    \"IsProductActive\": true,\r\n    \"ProductFinalScore\": 0\r\n}\r\n```",
        "operationId" : "SkubyAlternateId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Product EAN or RefId.",
          "in" : "path",
          "name" : "alternateId",
          "required" : true,
          "schema" : {
            "example" : 10,
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "AlternateIdValues" : [ "1" ],
                  "AlternateIds" : {
                    "RefId" : "1"
                  },
                  "Attachments" : [ ],
                  "BrandId" : "2000005",
                  "BrandName" : "Petmate",
                  "CSCIdentification" : null,
                  "Categories" : [ ],
                  "CategoriesFullPath" : [ "/3/15/", "/3/", "/1/" ],
                  "Collections" : [ ],
                  "CommercialConditionId" : 1,
                  "ComplementName" : "",
                  "DetailUrl" : "/caixa-de-areia-azul-petmate/p",
                  "Dimension" : {
                    "cubicweight" : 0.2083,
                    "height" : 10,
                    "length" : 10,
                    "weight" : 10,
                    "width" : 10
                  },
                  "EstimatedDateArrival" : null,
                  "Id" : 310118450,
                  "ImageUrl" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155451-55-55/caixa-areia-azul-petmate.jpg?v=637139451191670000",
                  "Images" : [ {
                    "FileId" : 155451,
                    "ImageName" : null,
                    "ImageUrl" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155451/caixa-areia-azul-petmate.jpg?v=637139451191670000"
                  } ],
                  "InformationSource" : null,
                  "IsActive" : true,
                  "IsBrandActive" : true,
                  "IsDirectCategoryActive" : true,
                  "IsGiftCardRecharge" : false,
                  "IsInventoried" : true,
                  "IsKit" : false,
                  "IsProductActive" : true,
                  "IsTransported" : true,
                  "KeyWords" : "",
                  "KitItems" : [ ],
                  "ManufacturerCode" : "123",
                  "MeasurementUnit" : "un",
                  "ModalType" : null,
                  "NameComplete" : "Caixa de Areia Azul Petmate sku test",
                  "PositionsInClusters" : {
                    "151" : 1,
                    "158" : 2
                  },
                  "ProductCategories" : {
                    "1" : "Alimentação",
                    "3" : "Higiene",
                    "15" : "Caixa de Areia"
                  },
                  "ProductCategoryIds" : "/3/15/",
                  "ProductClusterHighlights" : {
                    "151" : "asdfghj"
                  },
                  "ProductClusterNames" : {
                    "151" : "asdfghj",
                    "158" : "Coleção halloween"
                  },
                  "ProductClustersIds" : "151,158",
                  "ProductDescription" : "",
                  "ProductFinalScore" : 0,
                  "ProductGlobalCategoryId" : 5000,
                  "ProductId" : 2,
                  "ProductIsVisible" : true,
                  "ProductName" : "Caixa de Areia Azul Petmate",
                  "ProductRefId" : "",
                  "ProductSpecifications" : [ ],
                  "RealDimension" : {
                    "realCubicWeight" : 0,
                    "realHeight" : 0,
                    "realLength" : 0,
                    "realWeight" : 0,
                    "realWidth" : 0
                  },
                  "ReleaseDate" : "2020-01-06T00:00:00Z",
                  "RewardValue" : 0,
                  "SalesChannels" : [ 1, 3 ],
                  "Services" : [ ],
                  "ShowIfNotAvailable" : true,
                  "SkuName" : "sku test",
                  "SkuSellers" : [ {
                    "FreightCommissionPercentage" : 0,
                    "IsActive" : true,
                    "ProductCommissionPercentage" : 0,
                    "SellerId" : "1",
                    "SellerStockKeepingUnitId" : "310118450",
                    "StockKeepingUnitId" : 310118450
                  } ],
                  "SkuSpecifications" : [ ],
                  "TaxCode" : "",
                  "UnitMultiplier" : 1,
                  "Videos" : [ ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/GetSKUAltID"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "Cache-Control" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Connection" : {
                "content" : {
                  "text/plain" : {
                    "example" : "keep-alive",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Encoding" : {
                "content" : {
                  "text/plain" : {
                    "example" : "gzip",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Date" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Thu, 16 Feb 2017 15:21:38 GMT",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Expires" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-1",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Pragma" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Server" : {
                "content" : {
                  "text/plain" : {
                    "example" : "nginx",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Transfer-Encoding" : {
                "content" : {
                  "text/plain" : {
                    "example" : "chunked",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Vary" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Accept-Encoding, Accept-Encoding",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-CacheServer" : {
                "content" : {
                  "text/plain" : {
                    "example" : "janus-apicache-nginx14",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-by-VTEX-Janus-ApiCache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "v1.3.9",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-by-VTEX-Janus-Edge" : {
                "content" : {
                  "text/plain" : {
                    "example" : "v1.36.0-beta",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Track" : {
                "content" : {
                  "text/plain" : {
                    "example" : "beta",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Translate" : {
                "content" : {
                  "text/plain" : {
                    "example" : "1",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Translate-BackEnd" : {
                "content" : {
                  "text/plain" : {
                    "example" : "http%3A%2F%2Fbeta.janus-router-v2.vtexinternal.com.br%2Fapi%2Fcatalog_system%2Fpvt%2Fsku%2FstockkeepingunitbyalternateId%2F8781",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Status-Janus-ApiCache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "MISS",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Status-Janus-Edge" : {
                "content" : {
                  "text/plain" : {
                    "example" : "MISS",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Janus-Router-Backend-App" : {
                "content" : {
                  "text/plain" : {
                    "example" : "prtapi-v1.4.691-beta.1+530",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "no" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-8NLU58HJKL2",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "p3p" : {
                "content" : {
                  "text/plain" : {
                    "example" : "policyref=\"/w3c/p3p.xml\",CP=\"ADMa OUR NOR CNT NID DSP NOI COR\"",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "powered" : {
                "content" : {
                  "text/plain" : {
                    "example" : "vtex",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "x-vtex-operation-id" : {
                "content" : {
                  "text/plain" : {
                    "example" : "3afef265-3349-4726-842c-638308243e05",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary" : "Get SKU by Alternate ID",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog_system/pvt/sku/stockkeepingunitbyean/{ean}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves an SKU by its EAN ID. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 2001773,\r\n    \"ProductId\": 2001426,\r\n    \"NameComplete\": \"Tabela de Basquete\",\r\n    \"ProductName\": \"Tabela de Basquete\",\r\n    \"ProductDescription\": \"Tabela de Basquete\",\r\n    \"SkuName\": \"Tabela de Basquete\",\r\n    \"IsActive\": true,\r\n    \"IsTransported\": true,\r\n    \"IsInventoried\": true,\r\n    \"IsGiftCardRecharge\": false,\r\n    \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168952-55-55/7508800GG.jpg\",\r\n    \"DetailUrl\": \"/tabela-de-basquete/p\",\r\n    \"CSCIdentification\": null,\r\n    \"BrandId\": \"2000018\",\r\n    \"BrandName\": \"MARCA ARGOLO TESTE\",\r\n    \"Dimension\": {\r\n        \"cubicweight\": 81.6833,\r\n        \"height\": 65,\r\n        \"length\": 58,\r\n        \"weight\": 10000,\r\n        \"width\": 130\r\n    },\r\n    \"RealDimension\": {\r\n        \"realCubicWeight\": 274.1375,\r\n        \"realHeight\": 241,\r\n        \"realLength\": 65,\r\n        \"realWeight\": 9800,\r\n        \"realWidth\": 105\r\n    },\r\n    \"ManufacturerCode\": \"\",\r\n    \"IsKit\": false,\r\n    \"KitItems\": [],\r\n    \"Services\": [],\r\n    \"Categories\": [],\r\n    \"Attachments\": [\r\n        {\r\n            \"Id\": 3,\r\n            \"Name\": \"Mensagem\",\r\n            \"Keys\": [\r\n                \"nome;20\",\r\n                \"foto;40\"\r\n            ],\r\n            \"Fields\": [\r\n                {\r\n                    \"FieldName\": \"nome\",\r\n                    \"MaxCaracters\": \"20\",\r\n                    \"DomainValues\": \"Adalberto,Pedro,João\"\r\n                },\r\n                {\r\n                    \"FieldName\": \"foto\",\r\n                    \"MaxCaracters\": \"40\",\r\n                    \"DomainValues\": null\r\n                }\r\n            ],\r\n            \"IsActive\": true,\r\n            \"IsRequired\": false\r\n        }\r\n    ],\r\n    \"Collections\": [],\r\n    \"SkuSellers\": [\r\n        {\r\n            \"SellerId\": \"1\",\r\n            \"StockKeepingUnitId\": 2001773,\r\n            \"SellerStockKeepingUnitId\": \"2001773\",\r\n            \"IsActive\": true,\r\n            \"FreightCommissionPercentage\": 0,\r\n            \"ProductCommissionPercentage\": 0\r\n        }\r\n    ],\r\n    \"SalesChannels\": [\r\n        1,\r\n        2,\r\n        3,\r\n        10\r\n    ],\r\n    \"Images\": [\r\n        {\r\n            \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168952/7508800GG.jpg\",\r\n            \"ImageName\": \"\",\r\n            \"FileId\": 168952\r\n        },\r\n        {\r\n            \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168953/7508800_1GG.jpg\",\r\n            \"ImageName\": \"\",\r\n            \"FileId\": 168953\r\n        },\r\n        {\r\n            \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168954/7508800_2GG.jpg\",\r\n            \"ImageName\": \"\",\r\n            \"FileId\": 168954\r\n        }\r\n    ],\r\n    \"SkuSpecifications\": [\r\n        {\r\n            \"FieldId\": 102,\r\n            \"FieldName\": \"Cor\",\r\n            \"FieldValueIds\": [\r\n                266\r\n            ],\r\n            \"FieldValues\": [\r\n                \"Padrão\"\r\n            ]\r\n        }\r\n    ],\r\n    \"ProductSpecifications\": [\r\n        {\r\n            \"FieldId\": 7,\r\n            \"FieldName\": \"Faixa Etária\",\r\n            \"FieldValueIds\": [\r\n                58,\r\n                56,\r\n                55,\r\n                52\r\n            ],\r\n            \"FieldValues\": [\r\n                \"5 a 6 anos\",\r\n                \"7 a 8 anos\",\r\n                \"9 a 10 anos\",\r\n                \"Acima de 10 anos\"\r\n            ]\r\n        },\r\n        {\r\n            \"FieldId\": 23,\r\n            \"FieldName\": \"Fabricante\",\r\n            \"FieldValueIds\": [],\r\n            \"FieldValues\": [\r\n                \"Xalingo\"\r\n            ]\r\n        }\r\n    ],\r\n    \"ProductClustersIds\": \"176,187,192,194,211,217,235,242\",\r\n    \"ProductCategoryIds\": \"/59/\",\r\n    \"ProductGlobalCategoryId\": null,\r\n    \"ProductCategories\": {\r\n        \"59\": \"Brinquedos\"\r\n    },\r\n    \"CommercialConditionId\": 1,\r\n    \"RewardValue\": 100.0,\r\n    \"AlternateIds\": {\r\n        \"Ean\": \"8781\",\r\n        \"RefId\": \"878181\"\r\n    },\r\n    \"AlternateIdValues\": [\r\n        \"8781\",\r\n        \"878181\"\r\n    ],\r\n    \"EstimatedDateArrival\": \"\",\r\n    \"MeasurementUnit\": \"un\",\r\n    \"UnitMultiplier\": 2.0000,\r\n    \"InformationSource\": null,\r\n    \"ModalType\": \"\"\r\n}\r\n```",
        "operationId" : "SkubyEAN",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "EAN of the SKU which you need to retrieve details from.",
          "example" : "1234567890123",
          "in" : "path",
          "name" : "ean",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "AlternateIdValues" : [ "8781", "878181" ],
                  "AlternateIds" : {
                    "Ean" : "8781",
                    "RefId" : "878181"
                  },
                  "Attachments" : [ {
                    "Fields" : [ {
                      "DomainValues" : "Adalberto,Pedro,João",
                      "FieldName" : "nome",
                      "MaxCaracters" : "20"
                    }, {
                      "DomainValues" : null,
                      "FieldName" : "foto",
                      "MaxCaracters" : "40"
                    } ],
                    "Id" : 3,
                    "IsActive" : true,
                    "IsRequired" : false,
                    "Keys" : [ "nome;20", "foto;40" ],
                    "Name" : "Mensagem"
                  } ],
                  "BrandId" : "2000018",
                  "BrandName" : "MARCA ARGOLO TESTE",
                  "CSCIdentification" : null,
                  "Categories" : [ ],
                  "Collections" : [ ],
                  "CommercialConditionId" : 1,
                  "DetailUrl" : "/tabela-de-basquete/p",
                  "Dimension" : {
                    "cubicweight" : 81.6833,
                    "height" : 65,
                    "length" : 58,
                    "weight" : 10000,
                    "width" : 130
                  },
                  "EstimatedDateArrival" : null,
                  "Id" : 2001773,
                  "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168952-55-55/7508800GG.jpg",
                  "Images" : [ {
                    "FileId" : 168952,
                    "ImageName" : "",
                    "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168952/7508800GG.jpg"
                  }, {
                    "FileId" : 168953,
                    "ImageName" : "",
                    "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168953/7508800_1GG.jpg"
                  }, {
                    "FileId" : 168954,
                    "ImageName" : "",
                    "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168954/7508800_2GG.jpg"
                  } ],
                  "InformationSource" : null,
                  "IsActive" : true,
                  "IsGiftCardRecharge" : false,
                  "IsInventoried" : true,
                  "IsKit" : false,
                  "IsTransported" : true,
                  "KitItems" : [ ],
                  "ManufacturerCode" : "",
                  "MeasurementUnit" : "un",
                  "ModalType" : "",
                  "NameComplete" : "Tabela de Basquete",
                  "ProductCategories" : {
                    "59" : "Brinquedos"
                  },
                  "ProductCategoryIds" : "/59/",
                  "ProductClustersIds" : "176,187,192,194,211,217,235,242",
                  "ProductDescription" : "Tabela de Basquete",
                  "ProductGlobalCategoryId" : null,
                  "ProductId" : 2001426,
                  "ProductName" : "Tabela de Basquete",
                  "ProductSpecifications" : [ {
                    "FieldId" : 7,
                    "FieldName" : "Faixa Etária",
                    "FieldValueIds" : [ 58, 56, 55, 52 ],
                    "FieldValues" : [ "5 a 6 anos", "7 a 8 anos", "9 a 10 anos", "Acima de 10 anos" ]
                  }, {
                    "FieldId" : 23,
                    "FieldName" : "Fabricante",
                    "FieldValueIds" : [ ],
                    "FieldValues" : [ "Xalingo" ]
                  } ],
                  "RealDimension" : {
                    "realCubicWeight" : 274.1375,
                    "realHeight" : 241,
                    "realLength" : 65,
                    "realWeight" : 9800,
                    "realWidth" : 105
                  },
                  "RewardValue" : 100,
                  "SalesChannels" : [ 1, 2, 3, 10 ],
                  "Services" : [ ],
                  "SkuName" : "Tabela de Basquete",
                  "SkuSellers" : [ {
                    "FreightCommissionPercentage" : 0,
                    "IsActive" : true,
                    "ProductCommissionPercentage" : 0,
                    "SellerId" : "1",
                    "SellerStockKeepingUnitId" : "2001773",
                    "StockKeepingUnitId" : 2001773
                  } ],
                  "SkuSpecifications" : [ {
                    "FieldId" : 102,
                    "FieldName" : "Cor",
                    "FieldValueIds" : [ 266 ],
                    "FieldValues" : [ "Padrão" ]
                  } ],
                  "UnitMultiplier" : 2
                },
                "schema" : {
                  "$ref" : "#/components/schemas/GetSKUAltID"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "Cache-Control" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Connection" : {
                "content" : {
                  "text/plain" : {
                    "example" : "keep-alive",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Encoding" : {
                "content" : {
                  "text/plain" : {
                    "example" : "gzip",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Length" : {
                "content" : {
                  "text/plain" : {
                    "example" : "1035",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Date" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Thu, 16 Feb 2017 15:19:46 GMT",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Expires" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-1",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Pragma" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Server" : {
                "content" : {
                  "text/plain" : {
                    "example" : "nginx",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Vary" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Accept-Encoding",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-CacheServer" : {
                "content" : {
                  "text/plain" : {
                    "example" : "janus-apicache-nginx10",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-by-VTEX-Janus-ApiCache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "v1.3.9",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-by-VTEX-Janus-Edge" : {
                "content" : {
                  "text/plain" : {
                    "example" : "v1.35.3",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Track" : {
                "content" : {
                  "text/plain" : {
                    "example" : "stable",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Status-Janus-ApiCache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "MISS",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Status-Janus-Edge" : {
                "content" : {
                  "text/plain" : {
                    "example" : "MISS",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Janus-Router-Backend-App" : {
                "content" : {
                  "text/plain" : {
                    "example" : "prtapi-v1.4.683-stable+527",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "no" : {
                "content" : {
                  "text/plain" : {
                    "example" : "-QTBJG9KGSVN",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "p3p" : {
                "content" : {
                  "text/plain" : {
                    "example" : "policyref=\"/w3c/p3p.xml\",CP=\"ADMa OUR NOR CNT NID DSP NOI COR\"",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "powered" : {
                "content" : {
                  "text/plain" : {
                    "example" : "vtex",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "x-vtex-operation-id" : {
                "content" : {
                  "text/plain" : {
                    "example" : "4d81466f-3a82-4fd0-93f7-d11f64545365",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary" : "Get SKU by EAN",
        "tags" : [ "SKU EAN" ]
      }
    },
    "/api/catalog_system/pvt/sku/stockkeepingunitbyid/{skuId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves context of an SKU.\r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.\r\n\r\n ## Response body example\r\n\r\n```json\r\n{\r\n    \"Id\": 2001773,\r\n    \"ProductId\": 2001426,\r\n    \"NameComplete\": \"Tabela de Basquete\",\r\n    \"ComplementName\": \"\",\r\n    \"ProductName\": \"Tabela de Basquete\",\r\n    \"ProductDescription\": \"Tabela de Basquete\",\r\n    \"SkuName\": \"Tabela de Basquete\",\r\n    \"ProductRefId\": \"0987\",\r\n    \"TaxCode\": \"\",\r\n    \"IsActive\": true,\r\n    \"IsTransported\": true,\r\n    \"IsInventoried\": true,\r\n    \"IsGiftCardRecharge\": false,\r\n    \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168952-55-55/7508800GG.jpg\",\r\n    \"DetailUrl\": \"/tabela-de-basquete/p\",\r\n    \"CSCIdentification\": null,\r\n    \"BrandId\": \"2000018\",\r\n    \"BrandName\": \"MARCA ARGOLO TESTE\",\r\n    \"IsBrandActive\": true,\r\n    \"Dimension\": {\r\n        \"cubicweight\": 81.6833,\r\n        \"height\": 65,\r\n        \"length\": 58,\r\n        \"weight\": 10000,\r\n        \"width\": 130\r\n    },\r\n    \"RealDimension\": {\r\n        \"realCubicWeight\": 274.1375,\r\n        \"realHeight\": 241,\r\n        \"realLength\": 65,\r\n        \"realWeight\": 9800,\r\n        \"realWidth\": 105\r\n    },\r\n    \"ManufacturerCode\": \"\",\r\n    \"IsKit\": false,\r\n    \"KitItems\": [],\r\n    \"Services\": [],\r\n    \"Categories\": [],\r\n    \"CategoriesFullPath\": [\r\n        \"/1/10/\",\r\n        \"/1/\",\r\n        \"/20/\"\r\n    ],\r\n    \"Attachments\": [\r\n        {\r\n            \"Id\": 3,\r\n            \"Name\": \"Mensagem\",\r\n            \"Keys\": [\r\n                \"nome;20\",\r\n                \"foto;40\"\r\n            ],\r\n            \"Fields\": [\r\n                {\r\n                    \"FieldName\": \"nome\",\r\n                    \"MaxCaracters\": \"20\",\r\n                    \"DomainValues\": \"Adalberto,Pedro,João\"\r\n                },\r\n                {\r\n                    \"FieldName\": \"foto\",\r\n                    \"MaxCaracters\": \"40\",\r\n                    \"DomainValues\": null\r\n                }\r\n            ],\r\n            \"IsActive\": true,\r\n            \"IsRequired\": false\r\n        }\r\n    ],\r\n    \"Collections\": [],\r\n    \"SkuSellers\": [\r\n        {\r\n            \"SellerId\": \"1\",\r\n            \"StockKeepingUnitId\": 2001773,\r\n            \"SellerStockKeepingUnitId\": \"2001773\",\r\n            \"IsActive\": true,\r\n            \"FreightCommissionPercentage\": 0,\r\n            \"ProductCommissionPercentage\": 0\r\n        }\r\n    ],\r\n    \"SalesChannels\": [\r\n        1,\r\n        2,\r\n        3,\r\n        10\r\n    ],\r\n    \"Images\": [\r\n        {\r\n            \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168952/7508800GG.jpg\",\r\n            \"ImageName\": \"\",\r\n            \"FileId\": 168952\r\n        },\r\n        {\r\n            \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168953/7508800_1GG.jpg\",\r\n            \"ImageName\": \"\",\r\n            \"FileId\": 168953\r\n        },\r\n        {\r\n            \"ImageUrl\": \"http://ambienteqa.vteximg.com.br/arquivos/ids/168954/7508800_2GG.jpg\",\r\n            \"ImageName\": \"\",\r\n            \"FileId\": 168954\r\n        }\r\n    ],\r\n    \"Videos\": [\r\n        \"www.google.com\"\r\n    ],\r\n    \"SkuSpecifications\": [\r\n        {\r\n            \"FieldId\": 102,\r\n            \"FieldName\": \"Cor\",\r\n            \"FieldValueIds\": [\r\n                266\r\n            ],\r\n            \"FieldValues\": [\r\n                \"Padrão\"\r\n            ],\r\n            \"IsFilter\": false,\r\n            \"FieldGroupId\": 11,\r\n            \"FieldGroupName\": \"Especificações\"\r\n        }\r\n    ],\r\n    \"ProductSpecifications\": [\r\n        {\r\n            \"FieldId\": 7,\r\n            \"FieldName\": \"Faixa Etária\",\r\n            \"FieldValueIds\": [\r\n                58,\r\n                56,\r\n                55,\r\n                52\r\n            ],\r\n            \"FieldValues\": [\r\n                \"5 a 6 anos\",\r\n                \"7 a 8 anos\",\r\n                \"9 a 10 anos\",\r\n                \"Acima de 10 anos\"\r\n            ],\r\n            \"IsFilter\": true,\r\n            \"FieldGroupId\": 17,\r\n            \"FieldGroupName\": \"NewGroupName 2\"\r\n        },\r\n        {\r\n            \"FieldId\": 23,\r\n            \"FieldName\": \"Fabricante\",\r\n            \"FieldValueIds\": [],\r\n            \"FieldValues\": [\r\n                \"Xalingo\"\r\n            ],\r\n            \"IsFilter\": false,\r\n            \"FieldGroupId\": 17,\r\n            \"FieldGroupName\": \"NewGroupName 2\"\r\n        }\r\n    ],\r\n    \"ProductClustersIds\": \"176,187,192,194,211,217,235,242\",\r\n    \"PositionsInClusters\": {\r\n        \"151\": 3,\r\n        \"152\": 0,\r\n        \"158\": 1\r\n    },\r\n    \"ProductClusterNames\": {\r\n        \"151\": \"asdfghj\",\r\n        \"152\": \"George\",\r\n        \"158\": \"Coleção halloween\"\r\n    },\r\n    \"ProductClusterHighlights\": {\r\n        \"151\": \"asdfghj\",\r\n        \"152\": \"George\"\r\n    },\r\n    \"ProductCategoryIds\": \"/59/\",\r\n    \"IsDirectCategoryActive\": false,\r\n    \"ProductGlobalCategoryId\": null,\r\n    \"ProductCategories\": {\r\n        \"59\": \"Brinquedos\"\r\n    },\r\n    \"CommercialConditionId\": 1,\r\n    \"RewardValue\": 100.0,\r\n    \"AlternateIds\": {\r\n        \"Ean\": \"8781\",\r\n        \"RefId\": \"878181\"\r\n    },\r\n    \"AlternateIdValues\": [\r\n        \"8781\",\r\n        \"878181\"\r\n    ],\r\n    \"EstimatedDateArrival\": \"\",\r\n    \"MeasurementUnit\": \"un\",\r\n    \"UnitMultiplier\": 2.0000,\r\n    \"InformationSource\": \"Indexer\",\r\n    \"ModalType\": \"\",\r\n    \"KeyWords\": \"basquete, tabela\",\r\n    \"ReleaseDate\": \"2020-01-06T00:00:00\",\r\n    \"ProductIsVisible\": true,\r\n    \"ShowIfNotAvailable\": true,\r\n    \"IsProductActive\": true,\r\n    \"ProductFinalScore\": 0\r\n}\r\n```",
        "operationId" : "SkuContext",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU's unique identifier number.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : 2001773,
            "type" : "integer"
          },
          "style" : "simple"
        }, {
          "description" : "Trade Policy's unique identifier number.",
          "in" : "query",
          "name" : "sc",
          "required" : false,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "AlternateIdValues" : [ "8781", "878181" ],
                  "AlternateIds" : {
                    "Ean" : "8781",
                    "RefId" : "878181"
                  },
                  "Attachments" : [ {
                    "Fields" : [ {
                      "DomainValues" : "Adalberto,Pedro,João",
                      "FieldName" : "nome",
                      "MaxCaracters" : "20"
                    }, {
                      "DomainValues" : null,
                      "FieldName" : "foto",
                      "MaxCaracters" : "40"
                    } ],
                    "Id" : 3,
                    "IsActive" : true,
                    "IsRequired" : false,
                    "Keys" : [ "nome;20", "foto;40" ],
                    "Name" : "Mensagem"
                  } ],
                  "BrandId" : "2000018",
                  "BrandName" : "MARCA ARGOLO TESTE",
                  "CSCIdentification" : null,
                  "Categories" : [ ],
                  "CategoriesFullPath" : [ "/1/10/", "/1/", "/20/" ],
                  "Collections" : [ ],
                  "CommercialConditionId" : 1,
                  "ComplementName" : "",
                  "DetailUrl" : "/tabela-de-basquete/p",
                  "Dimension" : {
                    "cubicweight" : 81.6833,
                    "height" : 65,
                    "length" : 58,
                    "weight" : 10000,
                    "width" : 130
                  },
                  "EstimatedDateArrival" : null,
                  "Id" : 2001773,
                  "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168952-55-55/7508800GG.jpg",
                  "Images" : [ {
                    "FileId" : 168952,
                    "ImageName" : "",
                    "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168952/7508800GG.jpg"
                  }, {
                    "FileId" : 168953,
                    "ImageName" : "",
                    "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168953/7508800_1GG.jpg"
                  }, {
                    "FileId" : 168954,
                    "ImageName" : "",
                    "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168954/7508800_2GG.jpg"
                  } ],
                  "InformationSource" : "Indexer",
                  "IsActive" : true,
                  "IsBrandActive" : true,
                  "IsDirectCategoryActive" : false,
                  "IsGiftCardRecharge" : false,
                  "IsInventoried" : true,
                  "IsKit" : false,
                  "IsProductActive" : true,
                  "IsTransported" : true,
                  "KeyWords" : "basquete, tabela",
                  "KitItems" : [ ],
                  "ManufacturerCode" : "",
                  "MeasurementUnit" : "un",
                  "ModalType" : null,
                  "NameComplete" : "Tabela de Basquete",
                  "PositionsInClusters" : {
                    "151" : 3,
                    "152" : 0,
                    "158" : 1
                  },
                  "ProductCategories" : {
                    "59" : "Brinquedos"
                  },
                  "ProductCategoryIds" : "/59/",
                  "ProductClusterHighlights" : {
                    "151" : "asdfghj",
                    "152" : "George"
                  },
                  "ProductClusterNames" : {
                    "151" : "asdfghj",
                    "152" : "George",
                    "158" : "Coleção halloween"
                  },
                  "ProductClustersIds" : "176,187,192,194,211,217,235,242",
                  "ProductDescription" : "Tabela de Basquete",
                  "ProductFinalScore" : 0,
                  "ProductGlobalCategoryId" : null,
                  "ProductId" : 2001426,
                  "ProductIsVisible" : true,
                  "ProductName" : "Tabela de Basquete",
                  "ProductRefId" : "0987",
                  "ProductSpecifications" : [ {
                    "FieldGroupId" : 17,
                    "FieldGroupName" : "NewGroupName 2",
                    "FieldId" : 7,
                    "FieldName" : "Faixa Etária",
                    "FieldValueIds" : [ 58, 56, 55, 52 ],
                    "FieldValues" : [ "5 a 6 anos", "7 a 8 anos", "9 a 10 anos", "Acima de 10 anos" ],
                    "IsFilter" : true
                  }, {
                    "FieldGroupId" : 17,
                    "FieldGroupName" : "NewGroupName 2",
                    "FieldId" : 23,
                    "FieldName" : "Fabricante",
                    "FieldValueIds" : [ ],
                    "FieldValues" : [ "Xalingo" ],
                    "IsFilter" : false
                  } ],
                  "RealDimension" : {
                    "realCubicWeight" : 274.1375,
                    "realHeight" : 241,
                    "realLength" : 65,
                    "realWeight" : 9800,
                    "realWidth" : 105
                  },
                  "ReleaseDate" : "2020-01-06T00:00:00",
                  "RewardValue" : 100,
                  "SalesChannels" : [ 1, 2, 3, 10 ],
                  "Services" : [ ],
                  "ShowIfNotAvailable" : true,
                  "SkuName" : "Tabela de Basquete",
                  "SkuSellers" : [ {
                    "FreightCommissionPercentage" : 0,
                    "IsActive" : true,
                    "ProductCommissionPercentage" : 0,
                    "SellerId" : "1",
                    "SellerStockKeepingUnitId" : "2001773",
                    "StockKeepingUnitId" : 2001773
                  } ],
                  "SkuSpecifications" : [ {
                    "FieldGroupId" : 11,
                    "FieldGroupName" : "Especificações",
                    "FieldId" : 102,
                    "FieldName" : "Cor",
                    "FieldValueIds" : [ 266 ],
                    "FieldValues" : [ "Padrão" ],
                    "IsFilter" : false
                  } ],
                  "TaxCode" : "",
                  "UnitMultiplier" : 2,
                  "Videos" : [ "www.google.com" ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/GetSKUandContext"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "Cache-Control" : {
                "content" : {
                  "text/plain" : {
                    "example" : "no-cache",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Connection" : {
                "content" : {
                  "text/plain" : {
                    "example" : "keep-alive",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Encoding" : {
                "content" : {
                  "text/plain" : {
                    "example" : "gzip",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Length" : {
                "content" : {
                  "text/plain" : {
                    "example" : "1044",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Content-Type" : {
                "content" : {
                  "text/plain" : {
                    "example" : "application/json; charset=utf-8",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Date" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Mon, 13 Feb 2017 15:15:02 GMT",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Last-Modified" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Mon, 06 Feb 2017 14:32:02 GMT",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "Vary" : {
                "content" : {
                  "text/plain" : {
                    "example" : "Accept-Encoding",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-Powered-By-VTEX-Cache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "2.3.0",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Backend-Connect-Time" : {
                "content" : {
                  "text/plain" : {
                    "example" : "0.004",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Backend-Header-Time" : {
                "content" : {
                  "text/plain" : {
                    "example" : "0.416",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Server" : {
                "content" : {
                  "text/plain" : {
                    "example" : "apicache12",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Status-Janus-ApiCache" : {
                "content" : {
                  "text/plain" : {
                    "example" : "MISS",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Cache-Time" : {
                "content" : {
                  "text/plain" : {
                    "example" : "0.415",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "X-VTEX-Janus-Router-Backend-App" : {
                "content" : {
                  "text/plain" : {
                    "example" : "catalogapi-v3.0.45.54",
                    "schema" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "summary" : "Get SKU and context",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog_system/pvt/sku/stockkeepingunitidbyrefid/{refId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves an SKU ID by the SKU's Reference ID. \r\n\r\n### Response body example\r\n\r\n```json\r\n\"310118450\"\r\n```",
        "operationId" : "SkuIdbyRefId",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU Reference ID.",
          "in" : "path",
          "name" : "refId",
          "required" : true,
          "schema" : {
            "example" : "0001",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "SKU ID.",
                  "example" : "1",
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SKU ID by Reference ID",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog_system/pvt/sku/stockkeepingunitids" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves the IDs of all SKUs in your store. Presents the results with page size and pagination.\r\n> 📘 Onboarding guide \r\n>\r\n> Check the new [Catalog onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/catalog-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about Catalog and is organized by focusing on the developer's journey.\r\n\r\n### Response body example\r\n\r\n```json\r\n[\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5,\r\n  6,\r\n  7,\r\n  8,\r\n  9,\r\n  10\r\n]\r\n```",
        "operationId" : "ListallSKUIDs",
        "parameters" : [ {
          "description" : "Number of the page from where you need to retrieve SKU IDs.",
          "explode" : true,
          "in" : "query",
          "name" : "page",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Size of the page from where you need retrieve SKU IDs. The maximum value is `1000`.",
          "explode" : true,
          "in" : "query",
          "name" : "pagesize",
          "required" : true,
          "schema" : {
            "example" : 25,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Array composed by SKU IDs, in the search context.",
                  "example" : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],
                  "items" : {
                    "description" : "SKU ID.",
                    "example" : 1,
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "List all SKU IDs",
        "tags" : [ "SKU" ]
      }
    },
    "/api/catalog_system/pvt/sku/stockkeepingunitidsbysaleschannel" : {
      "get" : {
        "description" : "Retrieves a list of SKU IDs of a Trade Policy. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    405380,\r\n    405381,\r\n    405382,\r\n    405383,\r\n    405384,\r\n    405385,\r\n    405386,\r\n    405387,\r\n    405388,\r\n    405389,\r\n    405390,\r\n    405391,\r\n    405392,\r\n    405393,\r\n    405394,\r\n    405395,\r\n    405396,\r\n    405397,\r\n    405398,\r\n    405399,\r\n    405400,\r\n    405556\r\n]\r\n```",
        "parameters" : [ {
          "description" : "Type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Trade Policy’s unique numerical identifier.",
          "in" : "query",
          "name" : "sc",
          "required" : true,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Page number.",
          "in" : "query",
          "name" : "page",
          "required" : false,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Number of items in the page.",
          "in" : "query",
          "name" : "pageSize",
          "required" : false,
          "schema" : {
            "example" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "If set as `false`, it allows the user to decide if the SKUs that are not assigned to a specific trade policy should be also returned.",
          "in" : "query",
          "name" : "onlyAssigned",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ 405380, 405381, 405382, 405383, 405384, 405385, 405386, 405387, 405388, 405389, 405390, 405391, 405392, 405393, 405394, 405395, 405396, 405397, 405398, 405399, 405400, 405556 ],
                "schema" : {
                  "description" : "List of SKU IDs of the Trade Policy.",
                  "items" : {
                    "example" : 1,
                    "type" : "integer"
                  },
                  "title" : "data",
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "List all SKUs of a Trade Policy",
        "tags" : [ "Trade Policy" ]
      }
    },
    "/api/catalog_system/pvt/skuseller/changenotification/{sellerId}/{sellerSkuId}" : {
      "post" : {
        "deprecated" : false,
        "description" : " > ⚠️ Check out the updated version of the SKU Seller endpoints in our [SKU Bindings API documentation](https://developers.vtex.com/vtex-rest-api/reference/getbyskuid). If you are doing this integration for the first time, we recommend that you follow the updated documentation.\n\nThe seller is responsible for suggesting new SKUs to be sold in the VTEX marketplace and also for informing the marketplace about changes in their SKUs that already exist in the marketplace. Both actions start with a catalog notification, which is made by this request.\n\nWith this notification, the seller is telling the marketplace that something has changed about a specific SKU, like price or inventory, or that this is a new SKU that the seller would like to offer to the marketplace.\n\nThere are two information expected by the marketplace in this request: the `sellerId`, which identifies the seller, and the `sellerSkuId`, which identifies the binding of the seller with the SKU.\n\nBoth information are passed through the request URL. The body of the request should be empty.",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
          "in" : "path",
          "name" : "sellerId",
          "required" : true,
          "schema" : {
            "example" : "101",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID of the binding of the seller with the SKU.",
          "in" : "path",
          "name" : "sellerSkuId",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        },
        "summary" : "Change Notification with Seller ID and Seller SKU ID",
        "tags" : [ "SKU Seller" ]
      }
    },
    "/api/catalog_system/pvt/skuseller/changenotification/{skuId}" : {
      "post" : {
        "deprecated" : false,
        "description" : " > ⚠️ Check out the updated version of the SKU Seller endpoints in our [SKU Bindings API documentation](https://developers.vtex.com/vtex-rest-api/reference/getbyskuid). If you are doing this integration for the first time, we recommend that you follow the updated documentation.\n\nThe seller is responsible for suggesting new SKUs to be sold in the VTEX marketplace and also for informing the marketplace about changes in their SKUs that already exist in the marketplace. Both actions start with a catalog notification, which is made by this request.\n\nWith this notification, the seller is telling the marketplace that something has changed about a specific SKU, like price or inventory, or that this is a new SKU that the seller would like to offer to the marketplace.\n\nThe body of the request should be empty.\r\n## Example\r\n\r\nLet's say your seller has the ID `123` in the marketplace and you want to inform the marketplace that has been a change in the SKU with ID `700`.\r\n\r\nIn this case, you would have to replace the `sellerId` parameter with the value `123` and the `skuId` parameter with the value `700`. The URL of the request would be the following.\r\n\r\n```\r\nhttps://{{accountName}}.vtexcommercestable.com.br/api/catalog_system/pvt/skuseller/changenotification/123/700\r\n```\r\n\r\n## Response codes\r\n\r\nThe following response codes are possible for this request.\r\n\r\n* 404: the SKU was not found in the marketplace. The body of the response, in this case, should follow this format: \"Seller StockKeepingUnit `{{skuId}}` not found for this seller id `{{sellerId}}`\". This means that the seller can now proceed with sending an offer to the marketplace in order to suggest that this SKU is sold there.\r\n* 200: the SKU whose ID was informed in the URL already exists in the marketplace and was found. The marketplace can now proceed with a fulfillment simulation in order to get updated information about this SKU's inventory and price.\r\n* 429 - Failure due to too many requests.\r\n* 403 - Failure in the authentication.",
        "operationId" : "ChangeNotification",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A string that identifies the SKU in the marketplace. This is the ID that the marketplace will use to look for the SKU whose change the seller wants to inform. If the marketplace finds this ID, it responds with status code 200. Otherwise, it responds with status code 404.",
          "in" : "path",
          "name" : "skuId",
          "required" : true,
          "schema" : {
            "example" : "10",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "example" : "Seller StockKeepingUnit `{{skuId}}` not found for this seller id `{{sellerId}}`",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Not found"
          },
          "429" : {
            "description" : "Too many requests"
          }
        },
        "summary" : "Change Notification with SKU ID",
        "tags" : [ "SKU Seller" ]
      }
    },
    "/api/catalog_system/pvt/skuseller/remove/{sellerId}/{sellerSkuId}" : {
      "post" : {
        "deprecated" : false,
        "description" : " > ⚠️ Check out the updated version of the SKU Seller endpoints in our [SKU Bindings API documentation](https://developers.vtex.com/vtex-rest-api/reference/getbyskuid). If you are doing this integration for the first time, we recommend that you follow the updated documentation.\n\nRemove a seller's SKU binding, given the seller ID and the SKU ID in the seller's store.",
        "operationId" : "DeleteSKUsellerassociation",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
          "in" : "path",
          "name" : "sellerId",
          "required" : true,
          "schema" : {
            "example" : "101",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU ID in the seller's store.",
          "in" : "path",
          "name" : "sellerSkuId",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "Remove a seller's SKU binding",
        "tags" : [ "SKU Seller" ]
      }
    },
    "/api/catalog_system/pvt/skuseller/{sellerId}/{sellerSkuId}" : {
      "get" : {
        "deprecated" : false,
        "description" : " > ⚠️ Check out the updated version of the SKU Seller endpoints in our [SKU Bindings API documentation](https://developers.vtex.com/vtex-rest-api/reference/getbyskuid). If you are doing this integration for the first time, we recommend that you follow the updated documentation.\n\nRetrieves the details of a seller's SKU given a seller ID and the SKU ID in the seller's store. \r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"IsPersisted\": true,\r\n    \"IsRemoved\": false,\r\n    \"SkuSellerId\": 799,\r\n    \"SellerId\": \"myseller\",\r\n    \"StockKeepingUnitId\": 50,\r\n    \"SellerStockKeepingUnitId\": \"502\",\r\n    \"IsActive\": true,\r\n    \"UpdateDate\": \"2018-10-11T04:52:42.1\",\r\n    \"RequestedUpdateDate\": null\r\n}\r\n```",
        "operationId" : "GetSKUseller",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
          "in" : "path",
          "name" : "sellerId",
          "required" : true,
          "schema" : {
            "example" : "101",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SKU ID in the seller's store.",
          "in" : "path",
          "name" : "sellerSkuId",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "example" : {
                    "IsActive" : true,
                    "IsPersisted" : true,
                    "IsRemoved" : false,
                    "RequestedUpdateDate" : null,
                    "SellerId" : "myseller",
                    "SellerStockKeepingUnitId" : "502",
                    "SkuSellerId" : 799,
                    "StockKeepingUnitId" : 50,
                    "UpdateDate" : "2018-10-11T04:52:42.1"
                  },
                  "properties" : {
                    "IsActive" : {
                      "description" : "Defines if the SKU binding is active.",
                      "type" : "boolean"
                    },
                    "IsPersisted" : {
                      "description" : "Defines if the seller is persisted.",
                      "type" : "boolean"
                    },
                    "IsRemoved" : {
                      "description" : "Defines if the seller is removed.",
                      "type" : "boolean"
                    },
                    "RequestedUpdateDate" : {
                      "description" : "Date when an SKU binding update was requested for the last time, in UTC format.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "SellerId" : {
                      "description" : "ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
                      "type" : "string"
                    },
                    "SellerStockKeepingUnitId" : {
                      "description" : "SKU seller ID.",
                      "type" : "string"
                    },
                    "SkuSellerId" : {
                      "description" : "SKU ID in the seller's store.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "StockKeepingUnitId" : {
                      "description" : "SKU ID in the VTEX marketplace.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "UpdateDate" : {
                      "description" : "Date when the SKU binding was updated for the last time, in UTC format.",
                      "type" : "string"
                    }
                  },
                  "required" : [ "IsPersisted", "IsRemoved", "SkuSellerId", "SellerId", "StockKeepingUnitId", "SellerStockKeepingUnitId", "IsActive", "UpdateDate", "RequestedUpdateDate" ],
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get details of a seller's SKU",
        "tags" : [ "SKU Seller" ]
      }
    },
    "/api/catalog_system/pvt/specification/field" : {
      "post" : {
        "deprecated" : false,
        "description" : "Creates a specification field in a category. \r\n>⚠️ This is a legacy endpoint. We recommend using [Create Specification](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-post-specification) instead.\r\n\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"Name\": \"Material\",\r\n    \"CategoryId\": 4,\r\n    \"FieldId\": 88,\r\n    \"IsActive\": true,\r\n    \"IsRequired\": true,\r\n    \"FieldTypeId\": 1,\r\n    \"FieldValueId\": 1,\r\n    \"IsStockKeepingUnit\": false,\r\n    \"Description\": \"Composition of the product.\",\r\n    \"IsFilter\": true,\r\n    \"IsOnProductDetails\": false,\r\n    \"Position\": 1,\r\n    \"IsWizard\": false,\r\n    \"IsTopMenuLinkActive\": true,\r\n    \"IsSideMenuLinkActive\": true,\r\n    \"DefaultValue\": null,\r\n    \"FieldGroupId\": 20,\r\n    \"FieldGroupName\": \"Clothes specifications\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n89\r\n```",
        "operationId" : "SpecificationsInsertField",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "CategoryId" : 4,
                "DefaultValue" : null,
                "Description" : "Composition of the product.",
                "FieldGroupId" : 20,
                "FieldGroupName" : "Clothes specifications",
                "FieldId" : 88,
                "FieldTypeId" : 1,
                "FieldValueId" : 1,
                "IsActive" : true,
                "IsFilter" : true,
                "IsOnProductDetails" : false,
                "IsRequired" : true,
                "IsSideMenuLinkActive" : true,
                "IsStockKeepingUnit" : false,
                "IsTopMenuLinkActive" : true,
                "IsWizard" : false,
                "Name" : "Material",
                "Position" : 1
              },
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationsInsertFieldRequest"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : 89,
                "schema" : {
                  "description" : "Specification field ID.",
                  "type" : "integer"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Specification Field",
        "tags" : [ "Specification Field" ]
      },
      "put" : {
        "deprecated" : false,
        "description" : "Updates a specification field in a category. \r\n>⚠️ This is a legacy endpoint. We recommend using [Update Specification](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-put-specification) instead.\r\n\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldId\": 89,\r\n    \"Name\": \"Material\",\r\n    \"CategoryId\": 4,\r\n    \"IsActive\": true,\r\n    \"IsRequired\": true,\r\n    \"FieldTypeId\": 1,\r\n    \"Description\": \"Composition of the product.\",\r\n    \"IsStockKeepingUnit\": false,\r\n    \"IsFilter\": true,\r\n    \"IsOnProductDetails\": true,\r\n    \"Position\": 1,\r\n    \"IsWizard\": false,\r\n    \"IsTopMenuLinkActive\": false,\r\n    \"IsSideMenuLinkActive\": false,\r\n    \"DefaultValue\": \"Cotton\",\r\n    \"FieldGroupId\": 20,\r\n    \"FieldGroupName\": \"Clothes specifications\"\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n89\r\n```",
        "operationId" : "SpecificationsInsertFieldUpdate",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "CategoryId" : 4,
                "DefaultValue" : "Cotton",
                "Description" : "Composition of the product.",
                "FieldGroupId" : 20,
                "FieldGroupName" : "Clothes specifications",
                "FieldId" : 89,
                "FieldTypeId" : 1,
                "IsActive" : true,
                "IsFilter" : true,
                "IsOnProductDetails" : true,
                "IsRequired" : true,
                "IsSideMenuLinkActive" : false,
                "IsStockKeepingUnit" : false,
                "IsTopMenuLinkActive" : false,
                "IsWizard" : false,
                "Name" : "Material",
                "Position" : 1
              },
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationsInsertFieldUpdateRequest"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : 89,
                "schema" : {
                  "description" : "Specification field ID.",
                  "type" : "integer"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Specification Field",
        "tags" : [ "Specification Field" ]
      }
    },
    "/api/catalog_system/pvt/specification/fieldValue" : {
      "post" : {
        "deprecated" : false,
        "description" : "Creates a specification field value by the specification field's ID. \r\n>⚠️ This is a legacy endpoint. We recommend using [Create Specification Value](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-post-specification-value) instead.\r\n\r\n\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldId\": 34,\r\n    \"Name\": \"Cotton\",\r\n    \"Text\": \"Cotton fibers\",\r\n    \"IsActive\": true,\r\n    \"Position\": 100\r\n}\r\n```\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"FieldValueId\": 143,\r\n    \"FieldId\": 34,\r\n    \"Name\": \"Cotton\",\r\n    \"Text\": \"Cotton fibers\",\r\n    \"IsActive\": true,\r\n    \"Position\": 100\r\n}\r\n```",
        "operationId" : "SpecificationsInsertFieldValue",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "FieldId" : 34,
                "IsActive" : true,
                "Name" : "Cotton",
                "Position" : 100,
                "Text" : "Cotton fibers"
              },
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationsInsertFieldValueRequest"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "FieldId" : 34,
                  "FieldValueId" : 143,
                  "IsActive" : true,
                  "Name" : "Cotton",
                  "Position" : 100,
                  "Text" : "Cotton fibers"
                },
                "schema" : {
                  "properties" : {
                    "FieldId" : {
                      "description" : "Specification Field ID.",
                      "type" : "integer"
                    },
                    "FieldValueId" : {
                      "description" : "Specification Field Value ID.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Defines if the Specification Field Value is active (`true`) or inactive (`false`).",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification Field Value Name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Specification Field Value Position.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "Text" : {
                      "description" : "Specification Field Value Description.",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Specification Field Value",
        "tags" : [ "Specification Field Value" ]
      },
      "put" : {
        "deprecated" : false,
        "description" : "Updates a specification field value by the specification field's ID. \r\n>⚠️ This is a legacy endpoint. We recommend using [Update Specification Field Value](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-put-specification-value-id) instead.\r\n\r\n\r\n## Request body example\r\n\r\n```json\r\n{\r\n    \"FieldId\": 1,\r\n    \"FieldValueId\": 143,\r\n    \"Name\": \"Cotton\",\r\n    \"Text\": \"Cotton fibers\",\r\n    \"IsActive\": true,\r\n    \"Position\": 100\r\n}\r\n```\r\n\r\n## Response body example (200 OK)\r\n\r\n```json\r\n\"Field Value Updated\"\r\n```",
        "operationId" : "SpecificationsUpdateFieldValue",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "FieldId" : 1,
                "FieldValueId" : 143,
                "IsActive" : true,
                "Name" : "Cotton",
                "Position" : 100,
                "Text" : "Cotton fibers"
              },
              "schema" : {
                "$ref" : "#/components/schemas/SpecificationsUpdateFieldValueRequest"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : "Field Value Updated",
                "schema" : {
                  "description" : "Status of the request.",
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Specification Field Value",
        "tags" : [ "Specification Field Value" ]
      }
    },
    "/api/catalog_system/pvt/specification/fieldValue/{fieldValueId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves details from a specification field's value by this value's ID. \r\n>⚠️ This is a legacy endpoint. We recommend using [Get Specification Value](https://developers.vtex.com/vtex-rest-api/reference/catalog-api-get-specification-value-id) instead.\r\n\r\n## Response body example\r\n\r\n```json\r\n{\r\n    \"FieldValueId\": 143,\r\n    \"FieldId\": 34,\r\n    \"Name\": \"TesteInsert\",\r\n    \"Text\": \"Value Description\",\r\n    \"IsActive\": true,\r\n    \"Position\": 100\r\n}\r\n```",
        "operationId" : "SpecificationsGetFieldValue",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "",
          "in" : "path",
          "name" : "fieldValueId",
          "required" : true,
          "schema" : {
            "example" : "143",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "FieldId" : 34,
                  "FieldValueId" : 143,
                  "IsActive" : true,
                  "Name" : "Cotton",
                  "Position" : 100,
                  "Text" : "Cotton fibers"
                },
                "schema" : {
                  "properties" : {
                    "FieldId" : {
                      "description" : "Specification Field ID.",
                      "type" : "integer"
                    },
                    "FieldValueId" : {
                      "description" : "Specification Field Value ID.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "IsActive" : {
                      "description" : "Defines if the Specification Field Value is active (`true`) or inactive (`false`).",
                      "type" : "boolean"
                    },
                    "Name" : {
                      "description" : "Specification Field Value Name.",
                      "type" : "string"
                    },
                    "Position" : {
                      "description" : "Specification Field Value Position.",
                      "format" : "int32",
                      "type" : "integer"
                    },
                    "Text" : {
                      "description" : "Specification Field Value Description.",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Specification Field Value",
        "tags" : [ "Specification Field Value" ]
      }
    },
    "/api/catalog_system/pvt/specification/groupbycategory/{categoryId}" : {
      "get" : {
        "deprecated" : false,
        "description" : "Retrieves a list of specification groups by the category ID. \r\n## Response body example\r\n\r\n```json\r\n[\r\n    {\r\n      \"CategoryId\": 1,\r\n      \"Id\": 5,\r\n      \"Name\": \"Materials\",\r\n      \"Position\": 2\r\n    },\r\n    {\r\n      \"CategoryId\": 1,\r\n      \"Id\": 6,\r\n      \"Name\": \"Sizes\",\r\n      \"Position\": 3\r\n    }\r\n  ]\r\n```",
        "operationId" : "SpecificationsGroupListbyCategory",
        "parameters" : [ {
          "description" : "Describes the type of the content being sent.",
          "in" : "header",
          "name" : "Content-Type",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.",
          "in" : "header",
          "name" : "Accept",
          "required" : true,
          "schema" : {
            "default" : "application/json",
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "",
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "example" : "1",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : [ {
                  "CategoryId" : 1,
                  "Id" : 5,
                  "Name" : "Materials",
                  "Position" : 2
                }, {
                  "CategoryId" : 1,
                  "Id" : 6,
                  "Name" : "Sizes",
                  "Position" : 3
                } ],
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SpecificationsGroup"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "List Specification Group by Category",
        "tags" : [ "Specification Group" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "AlternateIds" : {
        "description" : "Array with alternate SKU IDs, such as EAN and RefId.",
        "example" : {
          "Ean" : "8781",
          "RefId" : "878181"
        },
        "properties" : {
          "Ean" : {
            "description" : "SKU EAN.",
            "type" : "string"
          },
          "RefId" : {
            "description" : "SKU Reference ID.",
            "type" : "string"
          }
        },
        "title" : "AlternateIds",
        "type" : "object"
      },
      "Attachment" : {
        "description" : "Object containing information about SKU attachments.",
        "example" : {
          "Fields" : [ {
            "DomainValues" : "Adalberto,Pedro,João",
            "FieldName" : "nome",
            "MaxCaracters" : "20"
          }, {
            "DomainValues" : null,
            "FieldName" : "foto",
            "MaxCaracters" : "40"
          } ],
          "Id" : 3,
          "IsActive" : true,
          "IsRequired" : false,
          "Keys" : [ "nome;20", "foto;40" ],
          "Name" : "Mensagem"
        },
        "properties" : {
          "Fields" : {
            "description" : "Array containing Attachment fields.",
            "items" : {
              "$ref" : "#/components/schemas/Field"
            },
            "type" : "array"
          },
          "Id" : {
            "description" : "Attachment ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the Attachment is active or not.",
            "type" : "boolean"
          },
          "IsRequired" : {
            "description" : "Defines if the Attachment is required or not.",
            "type" : "boolean"
          },
          "Keys" : {
            "description" : "Attachment Keys.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "Name" : {
            "description" : "Attachment Name.",
            "type" : "string"
          }
        },
        "required" : [ "Id", "Name", "Keys", "Fields", "IsActive", "IsRequired" ],
        "title" : "Attachment",
        "type" : "object"
      },
      "AttachmentRequest" : {
        "example" : {
          "Domains" : [ {
            "DomainValues" : "[1-2]#9[1-1][1]basic;#11[0-1][1]basic",
            "FieldName" : "Sauce",
            "MaxCaracters" : ""
          }, {
            "DomainValues" : "[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium",
            "FieldName" : "Toppings",
            "MaxCaracters" : ""
          } ],
          "IsActive" : true,
          "IsRequired" : true,
          "Name" : "Ingredients"
        },
        "properties" : {
          "Domains" : {
            "description" : "List of characteristics related to the attachment.",
            "items" : {
              "properties" : {
                "DomainValues" : {
                  "description" : "Allowed key values.",
                  "example" : "7,9,10",
                  "title" : "DomainValues",
                  "type" : "string"
                },
                "FieldName" : {
                  "description" : "Attachment key name.",
                  "example" : "Number",
                  "title" : "FieldName",
                  "type" : "string"
                },
                "MaxCaracters" : {
                  "description" : "Maximum number of characters in the attachment key.",
                  "example" : "1",
                  "title" : "MaxCaracters",
                  "type" : "string"
                }
              },
              "title" : "",
              "type" : "object"
            },
            "title" : "Domains",
            "type" : "array"
          },
          "IsActive" : {
            "description" : "Defines if the attachment is active or not.",
            "example" : false,
            "title" : "IsActive",
            "type" : "boolean"
          },
          "IsRequired" : {
            "description" : "Defines if the attachment is required or not.",
            "example" : false,
            "title" : "IsRequired",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Attachment Name.",
            "example" : "Shirt customization",
            "title" : "Name",
            "type" : "string"
          }
        },
        "required" : [ "Name", "IsRequired", "IsActive", "Domains" ],
        "title" : "",
        "type" : "object"
      },
      "AttachmentResponse" : {
        "example" : {
          "Domains" : [ {
            "DomainValues" : "[1-2]#9[1-1][1]basic;#11[0-1][1]basic",
            "FieldName" : "Sauce",
            "MaxCaracters" : ""
          }, {
            "DomainValues" : "[0-10]#8[0-3][0]medium;#9[0-3][0]medium;#10[0-3][0]medium;#11[0-3][0]medium;#36[0-3][0]medium;#37[0-3][0]medium;#38[0-3][0]medium",
            "FieldName" : "Toppings",
            "MaxCaracters" : ""
          } ],
          "Id" : 8,
          "IsActive" : true,
          "IsRequired" : true,
          "Name" : "Ingredients"
        },
        "properties" : {
          "Domains" : {
            "description" : "List of characteristics related to the attachment.",
            "items" : {
              "properties" : {
                "DomainValues" : {
                  "description" : "Allowed key values.",
                  "example" : "7,9,10",
                  "title" : "DomainValues",
                  "type" : "string"
                },
                "FieldName" : {
                  "description" : "Attachment key name.",
                  "example" : "Number",
                  "title" : "FieldName",
                  "type" : "string"
                },
                "MaxCaracters" : {
                  "description" : "Maximum number of characters in the attachment key.",
                  "example" : "1",
                  "title" : "MaxCaracters",
                  "type" : "string"
                }
              },
              "title" : "",
              "type" : "object"
            },
            "title" : "Domains",
            "type" : "array"
          },
          "Id" : {
            "description" : "Attachment ID.",
            "example" : 8,
            "title" : "Id",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the attachment is active or not.",
            "example" : false,
            "title" : "IsActive",
            "type" : "boolean"
          },
          "IsRequired" : {
            "description" : "Defines if the attachment is required or not.",
            "example" : false,
            "title" : "IsRequired",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Attachment Name.",
            "example" : "Shirt customization",
            "title" : "Name",
            "type" : "string"
          }
        },
        "required" : [ "Id", "Name", "IsRequired", "IsActive", "Domains" ],
        "title" : "",
        "type" : "object"
      },
      "BrandCreateUpdate" : {
        "description" : "Object containing Brand information.",
        "example" : {
          "Active" : true,
          "AdWordsRemarketingCode" : "",
          "Id" : 2000013,
          "Keywords" : "orma",
          "LinkId" : null,
          "LomadeeCampaignCode" : "",
          "MenuHome" : true,
          "Name" : "Orma Carbono2",
          "Score" : null,
          "SiteTitle" : "Orma Carbon2",
          "Text" : "Orma Carbon2"
        },
        "properties" : {
          "Active" : {
            "description" : "Defines if the brand is active (`true`) or not (`false`).",
            "example" : true,
            "title" : "Active",
            "type" : "boolean"
          },
          "AdWordsRemarketingCode" : {
            "deprecated" : true,
            "description" : "This is a legacy field. Do not take this information into consideration.",
            "type" : "string"
          },
          "Id" : {
            "description" : "Brand's unique numerical identifier.",
            "example" : 2000003,
            "type" : "integer"
          },
          "Keywords" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - Alternative search terms that will lead to the specific brand. The user can find the desired brand even when misspelling it. Used especially when words are of foreign origin and have a distinct spelling that is transcribed into a generic one, or when small spelling mistakes occur.\r\n",
            "example" : "adidas",
            "type" : "string"
          },
          "LinkId" : {
            "description" : "Brand page slug. Only lowercase letters and hyphens (`-`) are allowed.",
            "example" : "adidas-sports",
            "nullable" : true,
            "title" : "LinkID",
            "type" : "string"
          },
          "LomadeeCampaignCode" : {
            "deprecated" : true,
            "description" : "This is a legacy field. Do not take this information into consideration.",
            "type" : "string"
          },
          "MenuHome" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - Defines if the Brand appears in the Department Menu control (`<vtex.cmc:departmentNavigator/>`).\r\n",
            "example" : true,
            "title" : "MenuHome",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Brand name.",
            "example" : "Adidas",
            "type" : "string"
          },
          "Score" : {
            "description" : "Store Framework - Deprecated\r\nLegacy CMS Portal - Value used to set the priority on the search result page.\r\n",
            "example" : 10,
            "nullable" : true,
            "type" : "integer"
          },
          "SiteTitle" : {
            "description" : "Meta Title for the Brand page.",
            "example" : "Adidas",
            "title" : "SiteTitle",
            "type" : "string"
          },
          "Text" : {
            "description" : "Meta Description for the Brand page. A brief description of the brand, displayed by search engines. Since search engines can only display less than 150 characters, we recommend not exceeding this character limit when creating the description.",
            "example" : "Adidas",
            "title" : "Text",
            "type" : "string"
          }
        },
        "required" : [ "Id", "Name" ],
        "type" : "object"
      },
      "BrandGet" : {
        "description" : "Object containing Brand information.",
        "properties" : {
          "id" : {
            "description" : "Brand's unique numerical identifier.",
            "type" : "integer"
          },
          "imageUrl" : {
            "description" : "URL of the brand's image.",
            "nullable" : true,
            "type" : "string"
          },
          "isActive" : {
            "description" : "Defines if the brand is active (`true`) or not (`false`).",
            "type" : "boolean"
          },
          "metaTagDescription" : {
            "description" : "Meta Description for the Brand page. A brief description of the brand, displayed by search engines. Since search engines can only display less than 150 characters, we recommend not exceeding this character limit when creating the description.",
            "type" : "string"
          },
          "name" : {
            "description" : "Brand name.",
            "type" : "string"
          },
          "title" : {
            "description" : "Meta Title for the Brand page.",
            "type" : "string"
          }
        },
        "required" : [ "id", "name", "isActive", "imageUrl", "title", "metaTagDescription" ],
        "type" : "object"
      },
      "Category" : {
        "example" : {
          "ActiveStoreFrontLink" : true,
          "AdWordsRemarketingCode" : "",
          "Description" : "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",
          "FatherCategoryId" : null,
          "GlobalCategoryId" : 3367,
          "HasChildren" : true,
          "Id" : 1,
          "IsActive" : true,
          "Keywords" : "Kitchen, Laundry, Appliances",
          "LinkId" : "Alimentacao",
          "LomadeeCampaignCode" : "",
          "Name" : "Home Appliances",
          "Score" : null,
          "ShowBrandFilter" : true,
          "ShowInStoreFront" : true,
          "StockKeepingUnitSelectionMode" : "LIST",
          "Title" : "Home Appliances"
        },
        "properties" : {
          "ActiveStoreFrontLink" : {
            "description" : "Defines if the Category has an active link on the website (`true`) or not (`false`).",
            "type" : "boolean"
          },
          "AdWordsRemarketingCode" : {
            "deprecated" : true,
            "description" : "This is a legacy field. Do not take this information into consideration.",
            "type" : "string"
          },
          "Description" : {
            "description" : "Describes details about the category.",
            "type" : "string"
          },
          "FatherCategoryId" : {
            "description" : "ID of the father category, apply in case of category and subcategory.",
            "nullable" : true,
            "type" : "integer"
          },
          "GlobalCategoryId" : {
            "description" : "Google Global Category ID.",
            "type" : "integer"
          },
          "HasChildren" : {
            "description" : "Defines if the category has child categories (`true`) or not (`false`).",
            "type" : "boolean"
          },
          "Id" : {
            "description" : "Category ID.",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Shows if the category is active (`true`) or not (`false`).",
            "type" : "boolean"
          },
          "Keywords" : {
            "description" : "Substitutes words for the category.",
            "type" : "string"
          },
          "LinkId" : {
            "description" : "Text Link.",
            "nullable" : true,
            "type" : "string"
          },
          "LomadeeCampaignCode" : {
            "deprecated" : true,
            "description" : "This is a legacy field. Do not take this information into consideration.",
            "type" : "string"
          },
          "Name" : {
            "description" : "Category name.",
            "type" : "string"
          },
          "Score" : {
            "description" : "Score for search ordination.",
            "nullable" : true,
            "type" : "integer"
          },
          "ShowBrandFilter" : {
            "description" : "Defines if the category has brand filter (`true`) or not (`false`).",
            "type" : "boolean"
          },
          "ShowInStoreFront" : {
            "description" : "Defines if the category is shown on side and upper menu (`true`) or not (`false`).",
            "type" : "boolean"
          },
          "StockKeepingUnitSelectionMode" : {
            "description" : "Defines how the SKU will be exhibited.",
            "type" : "string"
          },
          "Title" : {
            "description" : "Category page title.",
            "type" : "string"
          }
        },
        "required" : [ "Id", "Name", "FatherCategoryId", "Title", "Description", "Keywords", "IsActive", "LomadeeCampaignCode", "AdWordsRemarketingCode", "ShowInStoreFront", "ShowBrandFilter", "ActiveStoreFrontLink", "GlobalCategoryId", "StockKeepingUnitSelectionMode", "Score", "LinkId", "HasChildren" ],
        "title" : "Category",
        "type" : "object"
      },
      "CategorySpecification" : {
        "description" : "Array of objects.",
        "example" : [ {
          "CategoryId" : 1,
          "FieldId" : 33,
          "IsActive" : true,
          "IsStockKeepingUnit" : false,
          "Name" : "Specification A"
        }, {
          "CategoryId" : 1,
          "FieldId" : 34,
          "IsActive" : true,
          "IsStockKeepingUnit" : false,
          "Name" : "Specification B"
        }, {
          "CategoryId" : 1,
          "FieldId" : 35,
          "IsActive" : false,
          "IsStockKeepingUnit" : false,
          "Name" : "Specification C"
        } ],
        "items" : {
          "description" : "Object containing Specification information.",
          "properties" : {
            "CategoryId" : {
              "description" : "Category ID.",
              "example" : 1,
              "type" : "integer"
            },
            "FieldId" : {
              "description" : "Specification ID.",
              "example" : 1,
              "type" : "integer"
            },
            "IsActive" : {
              "description" : "Defines if the specification is active.",
              "example" : true,
              "type" : "boolean"
            },
            "IsStockKeepingUnit" : {
              "description" : "Defines if it is an SKU specification.",
              "example" : true,
              "type" : "boolean"
            },
            "Name" : {
              "description" : "Specification name.",
              "example" : "Composition",
              "type" : "string"
            }
          },
          "type" : "object"
        },
        "required" : [ "Name", "CategoryId", "FieldId", "IsActive", "IsStockKeepingUnit" ],
        "title" : "Category Specification",
        "type" : "array"
      },
      "CreateCategoryRequest" : {
        "example" : {
          "ActiveStoreFrontLink" : true,
          "AdWordsRemarketingCode" : null,
          "Description" : "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",
          "FatherCategoryId" : null,
          "GlobalCategoryId" : 800,
          "IsActive" : true,
          "Keywords" : "Kitchen, Laundry, Appliances",
          "LomadeeCampaignCode" : null,
          "Name" : "Home Appliances",
          "Score" : null,
          "ShowBrandFilter" : true,
          "ShowInStoreFront" : true,
          "StockKeepingUnitSelectionMode" : "SPECIFICATION",
          "Title" : "Home Appliances"
        },
        "properties" : {
          "ActiveStoreFrontLink" : {
            "description" : "If true, the Category link becomes active in store.",
            "example" : true,
            "title" : "ActiveStoreFrontLink",
            "type" : "boolean"
          },
          "AdWordsRemarketingCode" : {
            "deprecated" : true,
            "description" : "This is a legacy field. Do not take this information into consideration.",
            "example" : "Sale",
            "nullable" : true,
            "type" : "string"
          },
          "Description" : {
            "description" : "Text used in meta description tag for Category page.",
            "example" : "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",
            "title" : "Description",
            "type" : "string"
          },
          "FatherCategoryId" : {
            "description" : "ID of the parent category, apply in case of category and subcategory.",
            "example" : 2,
            "nullable" : true,
            "title" : "FatherCategoryId",
            "type" : "integer"
          },
          "GlobalCategoryId" : {
            "description" : "Google Global Category ID.",
            "example" : 222,
            "title" : "GlobalCategoryId",
            "type" : "integer"
          },
          "Id" : {
            "description" : "Category unique identifier. If not informed, it will be automatically generated by VTEX.",
            "example" : 1,
            "title" : "Id",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "If true, the Category page becomes available in store.",
            "example" : true,
            "title" : "IsActive",
            "type" : "boolean"
          },
          "Keywords" : {
            "description" : "Substitute words for the Category.",
            "example" : "Kitchen, Laundry, Appliances",
            "title" : "Keywords",
            "type" : "string"
          },
          "LomadeeCampaignCode" : {
            "deprecated" : true,
            "description" : "This is a legacy field. Do not take this information into consideration.",
            "example" : "Sale",
            "nullable" : true,
            "type" : "string"
          },
          "Name" : {
            "description" : "Category name.",
            "example" : "Home Appliances",
            "title" : "Name",
            "type" : "string"
          },
          "Score" : {
            "description" : "Score for search sorting order.",
            "example" : 3,
            "nullable" : true,
            "title" : "Score",
            "type" : "integer"
          },
          "ShowBrandFilter" : {
            "description" : "If true, the Category page displays a Brand filter.",
            "example" : true,
            "title" : "ShowBrandFilter",
            "type" : "boolean"
          },
          "ShowInStoreFront" : {
            "description" : "If true, the Category is shown in the top and side menu.",
            "example" : true,
            "title" : "ShowInStoreFront",
            "type" : "boolean"
          },
          "StockKeepingUnitSelectionMode" : {
            "description" : "Defines how the SKU will be exhibited",
            "example" : "SPECIFICATION",
            "title" : "StockKeepingUnitSelectionMode",
            "type" : "string"
          },
          "Title" : {
            "description" : "Text used in title tag for Category page.",
            "example" : "Home Appliances",
            "title" : "Title",
            "type" : "string"
          }
        },
        "required" : [ "Name", "Keywords", "Title", "Description", "AdWordsRemarketingCode", "LomadeeCampaignCode", "FatherCategoryId", "GlobalCategoryId", "ShowInStoreFront", "IsActive", "ActiveStoreFrontLink", "ShowBrandFilter", "Score", "StockKeepingUnitSelectionMode" ],
        "type" : "object"
      },
      "CreateSellerRequest" : {
        "properties" : {
          "ArchiveId" : {
            "description" : "Seller archive ID.",
            "example" : 1,
            "type" : "integer"
          },
          "CNPJ" : {
            "description" : "Company registration number.",
            "example" : "12035072751",
            "type" : "string"
          },
          "CSCIdentification" : {
            "description" : "CSC identification.",
            "example" : "pedrostore",
            "type" : "string"
          },
          "CatalogSystemEndpoint" : {
            "description" : "URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.",
            "example" : "http://pedrostore.vtexcommercestable.com.br/api/catalog_system/",
            "type" : "string"
          },
          "CategoryCommissionPercentage" : {
            "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
            "example" : "[{\"CategoryId\":14,\"ProductCommission\":15.0,\"FreightCommission\":0.0}]",
            "type" : "string"
          },
          "DeliveryPolicy" : {
            "description" : "Text describing the delivery policy previously agreed between the marketplace and the seller.",
            "example" : "Delivery policy text",
            "type" : "string"
          },
          "Description" : {
            "description" : "Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).",
            "example" : "Brief description",
            "type" : "string"
          },
          "Email" : {
            "description" : "Email of the admin responsible for the seller.",
            "example" : "breno@breno.com",
            "type" : "string"
          },
          "ExchangeReturnPolicy" : {
            "description" : "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
            "example" : "Exchange return policy text",
            "type" : "string"
          },
          "FreightCommissionPercentage" : {
            "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
            "example" : 0,
            "type" : "number"
          },
          "FulfillmentEndpoint" : {
            "description" : "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.",
            "example" : "http://pedrostore.vtexcommercestable.com.br/api/fulfillment?affiliateid=LDB&sc=1",
            "type" : "string"
          },
          "FulfillmentSellerId" : {
            "description" : "Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.",
            "example" : 1,
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "If the selle is active (`true`) or not (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "IsBetterScope" : {
            "description" : "Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).",
            "example" : false,
            "type" : "boolean"
          },
          "MerchantName" : {
            "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-payment--6k5JidhYRUxileNolY2VLx) article to know more.",
            "example" : "pedrostore",
            "type" : "string"
          },
          "Name" : {
            "description" : "Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.",
            "example" : "My pedrostore",
            "type" : "string"
          },
          "Password" : {
            "description" : "Seller password.",
            "example" : "passoword",
            "type" : "string"
          },
          "ProductCommissionPercentage" : {
            "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
            "example" : 0,
            "type" : "number"
          },
          "SecutityPrivacyPolicy" : {
            "description" : "Text describing the security policy previously agreed between the marketplace and the seller.",
            "example" : "Secutity privacy policy text",
            "type" : "string"
          },
          "SellerId" : {
            "description" : "Code used to identify the seller. It is assigned by the marketplace. We recommend filling it in with the seller's account name.",
            "example" : "pedrostore",
            "type" : "string"
          },
          "SellerType" : {
            "description" : "Seller type.",
            "example" : 1,
            "type" : "integer"
          },
          "TrustPolicy" : {
            "description" : "Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.",
            "example" : "Default",
            "type" : "string"
          },
          "UrlLogo" : {
            "description" : "Seller URL logo.",
            "example" : "/myseller",
            "type" : "string"
          },
          "UseHybridPaymentOptions" : {
            "description" : "Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller.",
            "example" : false,
            "type" : "boolean"
          },
          "UserName" : {
            "description" : "Seller username.",
            "example" : "myseller",
            "type" : "string"
          }
        },
        "required" : [ "SellerId", "Name", "Email", "Description", "ExchangeReturnPolicy", "DeliveryPolicy", "UseHybridPaymentOptions", "UserName", "Password", "SecutityPrivacyPolicy", "CNPJ", "CSCIdentification", "ArchiveId", "UrlLogo", "ProductCommissionPercentage", "FreightCommissionPercentage", "FulfillmentEndpoint", "CatalogSystemEndpoint", "IsActive", "FulfillmentSellerId", "SellerType", "IsBetterScope" ],
        "title" : "",
        "type" : "object"
      },
      "Dimension" : {
        "description" : "Object containing the SKU dimensions to be used on the shipping calculation.",
        "example" : {
          "cubicweight" : 81.6833,
          "height" : 65,
          "length" : 58,
          "weight" : 10000,
          "width" : 130
        },
        "properties" : {
          "cubicweight" : {
            "description" : "SKU Cubic Weight.",
            "type" : "number"
          },
          "height" : {
            "description" : "SKU Height.",
            "type" : "number"
          },
          "length" : {
            "description" : "SKU Length.",
            "type" : "number"
          },
          "weight" : {
            "description" : "SKU Weight.",
            "type" : "number"
          },
          "width" : {
            "description" : "SKU Width.",
            "type" : "number"
          }
        },
        "required" : [ "cubicweight", "height", "length", "weight", "width" ],
        "title" : "Dimension",
        "type" : "object"
      },
      "Field" : {
        "example" : {
          "DomainValues" : "Adalberto,Pedro,João",
          "FieldName" : "nome",
          "MaxCaracters" : "20"
        },
        "properties" : {
          "DomainValues" : {
            "description" : "Allowed key values.",
            "nullable" : true,
            "type" : "string"
          },
          "FieldName" : {
            "description" : "Attachment field name.",
            "type" : "string"
          },
          "MaxCaracters" : {
            "description" : "Maximum number of characters accepted in the attachment field.",
            "type" : "string"
          }
        },
        "required" : [ "FieldName", "MaxCaracters", "DomainValues" ],
        "title" : "Field",
        "type" : "object"
      },
      "GetCategoryTree" : {
        "example" : {
          "MetaTagDescription" : "",
          "Title" : "Alimentação para Gatos",
          "children" : [ {
            "MetaTagDescription" : "",
            "Title" : "Bebedouro para Gatos",
            "children" : [ ],
            "hasChildren" : false,
            "id" : 6,
            "name" : "Bebedouro",
            "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/bebedouro"
          }, {
            "MetaTagDescription" : "",
            "Title" : "Comedouro para Gatos",
            "children" : [ ],
            "hasChildren" : false,
            "id" : 7,
            "name" : "Comedouro",
            "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/comedouro"
          }, {
            "MetaTagDescription" : "",
            "Title" : "Biscoitos para Gatos",
            "children" : [ ],
            "hasChildren" : false,
            "id" : 8,
            "name" : "Biscoitos",
            "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/biscoitos"
          }, {
            "MetaTagDescription" : "",
            "Title" : "Petiscos para Gatos",
            "children" : [ ],
            "hasChildren" : false,
            "id" : 9,
            "name" : "Petiscos",
            "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/petiscos"
          }, {
            "MetaTagDescription" : "",
            "Title" : "Ração Seca para Gatos",
            "children" : [ ],
            "hasChildren" : false,
            "id" : 10,
            "name" : "Ração Seca",
            "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/racao-seca"
          }, {
            "MetaTagDescription" : "",
            "Title" : "Ração Úmida para Gatos",
            "children" : [ ],
            "hasChildren" : false,
            "id" : 11,
            "name" : "Ração Úmida",
            "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao/racao-umida"
          } ],
          "hasChildren" : true,
          "id" : 1,
          "name" : "Alimentação",
          "url" : "https://lojadobreno.vtexcommercestable.com.br/alimentacao"
        },
        "properties" : {
          "MetaTagDescription" : {
            "description" : "Category page Meta tag description.",
            "example" : "New and used toys for sale.",
            "type" : "string"
          },
          "Title" : {
            "description" : "Category page title.",
            "example" : "Toys",
            "type" : "string"
          },
          "children" : {
            "description" : "Array with information about the category's children.",
            "items" : {
              "$ref" : "#/components/schemas/GetCategoryTreeChild"
            },
            "type" : "array"
          },
          "hasChildren" : {
            "description" : "If the category has a category child (`true`) or not (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "id" : {
            "description" : "Category ID.",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "description" : "Category name.",
            "example" : "Toys",
            "type" : "string"
          },
          "url" : {
            "description" : "Category URL.",
            "example" : "https://lojadobreno.vtexcommercestable.com.br/toys",
            "type" : "string"
          }
        },
        "required" : [ "id", "name", "hasChildren", "url", "children", "Title", "MetaTagDescription" ],
        "title" : "GetCategoryTree",
        "type" : "object"
      },
      "GetCategoryTreeChild" : {
        "example" : {
          "MetaTagDescription" : "Video games.",
          "Title" : "Games",
          "children" : [ {
            "children" : [ ],
            "hasChildren" : false,
            "id" : 79,
            "name" : "Consoles",
            "url" : "https://ambienteqa.vtexcommercestable.com.br/games/xbox-360/consoles"
          }, {
            "children" : [ ],
            "hasChildren" : false,
            "id" : 126,
            "name" : "Acessorio",
            "url" : "https://ambienteqa.vtexcommercestable.com.br/games/xbox-360/acessorio"
          } ],
          "hasChildren" : false,
          "id" : 78,
          "name" : "Xbox 360",
          "url" : "https://ambienteqa.vtexcommercestable.com.br/games/xbox-360"
        },
        "properties" : {
          "MetaTagDescription" : {
            "description" : "Category page Meta tag description.",
            "example" : "New and used dolls for sale.",
            "type" : "string"
          },
          "Title" : {
            "description" : "Category page title.",
            "example" : "Dolls",
            "type" : "string"
          },
          "children" : {
            "description" : "Array with information about the category's children.",
            "type" : "array"
          },
          "hasChildren" : {
            "description" : "If the category has a category child (`true`) or not (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "id" : {
            "description" : "Category ID.",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "name" : {
            "description" : "Category name.",
            "example" : "Dolls",
            "type" : "string"
          },
          "url" : {
            "description" : "Category URL.",
            "example" : "https://lojadobreno.vtexcommercestable.com.br/dolls",
            "type" : "string"
          }
        },
        "required" : [ "id", "name", "hasChildren", "url", "children", "Title", "MetaTagDescription" ],
        "title" : "GetCategoryTreeChild",
        "type" : "object"
      },
      "GetSKUAltID" : {
        "example" : {
          "AlternateIdValues" : [ "1" ],
          "AlternateIds" : {
            "RefId" : "1"
          },
          "Attachments" : [ ],
          "BrandId" : "2000005",
          "BrandName" : "Petmate",
          "CSCIdentification" : null,
          "Categories" : [ ],
          "CategoriesFullPath" : [ "/3/15/", "/3/", "/1/" ],
          "Collections" : [ ],
          "CommercialConditionId" : 1,
          "ComplementName" : "",
          "DetailUrl" : "/caixa-de-areia-azul-petmate/p",
          "Dimension" : {
            "cubicweight" : 0.2083,
            "height" : 10,
            "length" : 10,
            "weight" : 10,
            "width" : 10
          },
          "EstimatedDateArrival" : null,
          "Id" : 310118450,
          "ImageUrl" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155451-55-55/caixa-areia-azul-petmate.jpg?v=637139451191670000",
          "Images" : [ {
            "FileId" : 155451,
            "ImageName" : null,
            "ImageUrl" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155451/caixa-areia-azul-petmate.jpg?v=637139451191670000"
          } ],
          "InformationSource" : null,
          "IsActive" : true,
          "IsBrandActive" : true,
          "IsDirectCategoryActive" : true,
          "IsGiftCardRecharge" : false,
          "IsInventoried" : true,
          "IsKit" : false,
          "IsProductActive" : true,
          "IsTransported" : true,
          "KeyWords" : "",
          "KitItems" : [ ],
          "ManufacturerCode" : "123",
          "MeasurementUnit" : "un",
          "ModalType" : null,
          "NameComplete" : "Caixa de Areia Azul Petmate sku test",
          "PositionsInClusters" : {
            "151" : 1,
            "158" : 2
          },
          "ProductCategories" : {
            "1" : "Alimentação",
            "3" : "Higiene",
            "15" : "Caixa de Areia"
          },
          "ProductCategoryIds" : "/3/15/",
          "ProductClusterHighlights" : {
            "151" : "asdfghj"
          },
          "ProductClusterNames" : {
            "151" : "asdfghj",
            "158" : "Coleção halloween"
          },
          "ProductClustersIds" : "151,158",
          "ProductDescription" : "",
          "ProductFinalScore" : 0,
          "ProductGlobalCategoryId" : 5000,
          "ProductId" : 2,
          "ProductIsVisible" : true,
          "ProductName" : "Caixa de Areia Azul Petmate",
          "ProductRefId" : "",
          "ProductSpecifications" : [ ],
          "RealDimension" : {
            "realCubicWeight" : 0,
            "realHeight" : 0,
            "realLength" : 0,
            "realWeight" : 0,
            "realWidth" : 0
          },
          "ReleaseDate" : "2020-01-06T00:00:00Z",
          "RewardValue" : 0,
          "SalesChannels" : [ 1, 3 ],
          "Services" : [ ],
          "ShowIfNotAvailable" : true,
          "SkuName" : "sku test",
          "SkuSellers" : [ {
            "FreightCommissionPercentage" : 0,
            "IsActive" : true,
            "ProductCommissionPercentage" : 0,
            "SellerId" : "1",
            "SellerStockKeepingUnitId" : "310118450",
            "StockKeepingUnitId" : 310118450
          } ],
          "SkuSpecifications" : [ ],
          "TaxCode" : "",
          "UnitMultiplier" : 1,
          "Videos" : [ ]
        },
        "properties" : {
          "AlternateIdValues" : {
            "description" : "Array with values of alternative SKU IDs.",
            "items" : {
              "description" : "Alternative SKU ID.",
              "type" : "string"
            },
            "type" : "array"
          },
          "AlternateIds" : {
            "$ref" : "#/components/schemas/AlternateIds"
          },
          "Attachments" : {
            "description" : "Array with Attachments ID that are related to the SKU.",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            },
            "type" : "array"
          },
          "BrandId" : {
            "description" : "Brand ID.",
            "type" : "string"
          },
          "BrandName" : {
            "description" : "Brand Name.",
            "type" : "string"
          },
          "CSCIdentification" : {
            "description" : "SKU Seller Identification.",
            "nullable" : true,
            "type" : "string"
          },
          "Categories" : {
            "description" : "Categories of the related product.",
            "items" : {
              "description" : "Category ID.",
              "type" : "string"
            },
            "type" : "array"
          },
          "CategoriesFullPath" : {
            "description" : "Path of Categories of the related product.",
            "items" : {
              "description" : "Path composed by Category IDs separated by `/`.",
              "type" : "string"
            },
            "type" : "array"
          },
          "Collections" : {
            "description" : "Array with Collections IDs that are related to the Product.",
            "items" : {
              "description" : "Collection ID.",
              "type" : "string"
            },
            "type" : "array"
          },
          "CommercialConditionId" : {
            "description" : "SKU Commercial Condition ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "ComplementName" : {
            "description" : "Product Complement Name.",
            "type" : "string"
          },
          "DetailUrl" : {
            "description" : "Product slug.",
            "type" : "string"
          },
          "Dimension" : {
            "$ref" : "#/components/schemas/Dimension"
          },
          "EstimatedDateArrival" : {
            "description" : "SKU estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the product is on pre-sale. You must take into consideration both the launch date and the freight calculation for the arrival date.",
            "nullable" : true,
            "type" : "string"
          },
          "Id" : {
            "description" : "SKU ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "ImageUrl" : {
            "description" : "SKU image URL.",
            "type" : "string"
          },
          "Images" : {
            "description" : "Array of objects with SKU image details.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            },
            "type" : "array"
          },
          "InformationSource" : {
            "description" : "Information Source.",
            "nullable" : true,
            "type" : "string"
          },
          "IsActive" : {
            "description" : "Defines if the SKU is active or not.",
            "type" : "boolean"
          },
          "IsDirectCategoryActive" : {
            "description" : "Indicates if the direct Product Category is active or not.",
            "type" : "boolean"
          },
          "IsGiftCardRecharge" : {
            "description" : "Defines if the purchase of the SKU will generate reward value for the customer.",
            "type" : "boolean"
          },
          "IsInventoried" : {
            "deprecated" : true,
            "type" : "boolean"
          },
          "IsKit" : {
            "description" : "Defines if the SKU is part of a bundle.",
            "type" : "boolean"
          },
          "IsProductActive" : {
            "description" : "Defines if the product is active or not.",
            "type" : "boolean"
          },
          "IsTransported" : {
            "deprecated" : true,
            "type" : "boolean"
          },
          "KeyWords" : {
            "description" : "Keywords related to the product.",
            "nullable" : true,
            "type" : "string"
          },
          "KitItems" : {
            "description" : "Array with SKU IDs of bundle components.",
            "items" : {
              "description" : "SKU ID of each bundle component.",
              "type" : "string"
            },
            "type" : "array"
          },
          "ManufacturerCode" : {
            "description" : "Product Supplier ID.",
            "type" : "string"
          },
          "MeasurementUnit" : {
            "description" : "Measurement unit.",
            "type" : "string"
          },
          "ModalType" : {
            "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
            "nullable" : true,
            "type" : "string"
          },
          "NameComplete" : {
            "description" : "Product Name and SKU Name combined.",
            "type" : "string"
          },
          "PositionsInClusters" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Position.",
                "type" : "integer"
              },
              "description" : "Product Cluster ID.",
              "type" : "integer"
            },
            "description" : "Product Clusters position in each Cluster. Structure: \"{Product Cluster ID}\": {Position}.\n\n`{Product Cluster ID}` is a string, while `{Position}` is an integer.",
            "type" : "object"
          },
          "ProductCategories" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Category Name.",
                "type" : "string"
              },
              "description" : "Category ID.",
              "type" : "string"
            },
            "description" : "Object containing product categories. Structure: \"{CategoryID}\": \"{CategoryName}\". Both the key and the value are strings.",
            "type" : "object"
          },
          "ProductCategoryIds" : {
            "description" : "Category path composed by category IDs separated by `/`.",
            "type" : "string"
          },
          "ProductClusterHighlights" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Product Cluster Highlight.",
                "type" : "string"
              },
              "description" : "Product Cluster ID.",
              "type" : "string"
            },
            "description" : "Product Clusters Highlights. Structure: \"{Product Cluster ID}\": \"{Product Cluster Name}\". Both the key and the value are strings.",
            "type" : "object"
          },
          "ProductClusterNames" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Product Cluster Name.",
                "type" : "string"
              },
              "description" : "Product Cluster ID.",
              "type" : "string"
            },
            "description" : "Product Clusters Names. Structure: \"{Product Cluster ID}\": \"{Product Cluster Name}\". Both the key and the value are strings.",
            "type" : "object"
          },
          "ProductClustersIds" : {
            "description" : "Product Cluster IDs separated by comma (`,`).",
            "type" : "string"
          },
          "ProductDescription" : {
            "description" : "Product Description. HTML is allowed.",
            "type" : "string"
          },
          "ProductFinalScore" : {
            "description" : "Product Final Score.",
            "type" : "integer"
          },
          "ProductGlobalCategoryId" : {
            "description" : "Product Global Category ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "ProductId" : {
            "description" : "Product ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "ProductIsVisible" : {
            "description" : "Defines if the product is visible or not.",
            "type" : "boolean"
          },
          "ProductName" : {
            "description" : "Product Name.",
            "type" : "string"
          },
          "ProductRefId" : {
            "description" : "Product Reference ID.",
            "type" : "string"
          },
          "ProductSpecifications" : {
            "description" : "Array with related Product Specifications.",
            "items" : {
              "$ref" : "#/components/schemas/ProductSpecification"
            },
            "type" : "array"
          },
          "RealDimension" : {
            "$ref" : "#/components/schemas/RealDimension"
          },
          "ReleaseDate" : {
            "description" : "Release date of the product.",
            "nullable" : true,
            "type" : "string"
          },
          "RewardValue" : {
            "description" : "Reward value related to the SKU.",
            "type" : "number"
          },
          "SalesChannels" : {
            "description" : "Array of trade policy IDs.",
            "items" : {
              "description" : "Trade policy ID.",
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          },
          "Services" : {
            "description" : "Array with Service IDs that are related to the SKU.",
            "items" : {
              "description" : "Service IDs of each service related to the SKU.",
              "type" : "string"
            },
            "type" : "array"
          },
          "ShowIfNotAvailable" : {
            "description" : "Defines if the product will be shown if it is not available.",
            "type" : "boolean"
          },
          "SkuName" : {
            "description" : "SKU Name.",
            "type" : "string"
          },
          "SkuSellers" : {
            "description" : "Array with related Sellers data.",
            "items" : {
              "$ref" : "#/components/schemas/SkuSeller"
            },
            "type" : "array"
          },
          "SkuSpecifications" : {
            "description" : "Array with related SKU Specifications.",
            "items" : {
              "$ref" : "#/components/schemas/SkuSpecification"
            },
            "type" : "array"
          },
          "TaxCode" : {
            "description" : "SKU Tax Code.",
            "type" : "string"
          },
          "UnitMultiplier" : {
            "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
            "type" : "number"
          }
        },
        "required" : [ "Id", "ProductId", "NameComplete", "ProductName", "ProductDescription", "SkuName", "IsActive", "IsTransported", "IsInventoried", "IsGiftCardRecharge", "ImageUrl", "DetailUrl", "CSCIdentification", "BrandId", "BrandName", "Dimension", "RealDimension", "ManufacturerCode", "IsKit", "KitItems", "Services", "Categories", "Attachments", "Collections", "SkuSellers", "SalesChannels", "Images", "SkuSpecifications", "ProductSpecifications", "ProductClustersIds", "ProductCategoryIds", "ProductGlobalCategoryId", "ProductCategories", "CommercialConditionId", "RewardValue", "AlternateIds", "AlternateIdValues", "EstimatedDateArrival", "MeasurementUnit", "UnitMultiplier", "InformationSource", "ModalType" ],
        "title" : "GetSKUAltID",
        "type" : "object"
      },
      "GetSKUandContext" : {
        "example" : {
          "AlternateIdValues" : [ "1" ],
          "AlternateIds" : {
            "RefId" : "1"
          },
          "Attachments" : [ ],
          "BrandId" : "2000005",
          "BrandName" : "Petmate",
          "CSCIdentification" : null,
          "Categories" : [ ],
          "CategoriesFullPath" : [ "/3/15/", "/3/", "/1/" ],
          "Collections" : [ ],
          "CommercialConditionId" : 1,
          "ComplementName" : "",
          "DetailUrl" : "/caixa-de-areia-azul-petmate/p",
          "Dimension" : {
            "cubicweight" : 0.2083,
            "height" : 10,
            "length" : 10,
            "weight" : 10,
            "width" : 10
          },
          "EstimatedDateArrival" : null,
          "Id" : 310118450,
          "ImageUrl" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155451-55-55/caixa-areia-azul-petmate.jpg?v=637139451191670000",
          "Images" : [ {
            "FileId" : 155451,
            "ImageName" : null,
            "ImageUrl" : "https://lojadobreno.vteximg.com.br/arquivos/ids/155451/caixa-areia-azul-petmate.jpg?v=637139451191670000"
          } ],
          "InformationSource" : null,
          "IsActive" : true,
          "IsBrandActive" : true,
          "IsDirectCategoryActive" : true,
          "IsGiftCardRecharge" : false,
          "IsInventoried" : true,
          "IsKit" : false,
          "IsProductActive" : true,
          "IsTransported" : true,
          "KeyWords" : "",
          "KitItems" : [ ],
          "ManufacturerCode" : "123",
          "MeasurementUnit" : "un",
          "ModalType" : null,
          "NameComplete" : "Caixa de Areia Azul Petmate sku test",
          "PositionsInClusters" : {
            "151" : 1,
            "158" : 2
          },
          "ProductCategories" : {
            "1" : "Alimentação",
            "3" : "Higiene",
            "15" : "Caixa de Areia"
          },
          "ProductCategoryIds" : "/3/15/",
          "ProductClusterHighlights" : {
            "151" : "asdfghj"
          },
          "ProductClusterNames" : {
            "151" : "asdfghj",
            "158" : "Coleção halloween"
          },
          "ProductClustersIds" : "151,158",
          "ProductDescription" : "",
          "ProductFinalScore" : 0,
          "ProductGlobalCategoryId" : 5000,
          "ProductId" : 2,
          "ProductIsVisible" : true,
          "ProductName" : "Caixa de Areia Azul Petmate",
          "ProductRefId" : "",
          "ProductSpecifications" : [ ],
          "RealDimension" : {
            "realCubicWeight" : 0,
            "realHeight" : 0,
            "realLength" : 0,
            "realWeight" : 0,
            "realWidth" : 0
          },
          "ReleaseDate" : "2020-01-06T00:00:00Z",
          "RewardValue" : 0,
          "SalesChannels" : [ 1, 3 ],
          "Services" : [ ],
          "ShowIfNotAvailable" : true,
          "SkuName" : "sku test",
          "SkuSellers" : [ {
            "FreightCommissionPercentage" : 0,
            "IsActive" : true,
            "ProductCommissionPercentage" : 0,
            "SellerId" : "1",
            "SellerStockKeepingUnitId" : "310118450",
            "StockKeepingUnitId" : 310118450
          } ],
          "SkuSpecifications" : [ ],
          "TaxCode" : "",
          "UnitMultiplier" : 1,
          "Videos" : [ ]
        },
        "properties" : {
          "AlternateIdValues" : {
            "description" : "Array with values of alternative SKU IDs.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "AlternateIds" : {
            "$ref" : "#/components/schemas/AlternateIds"
          },
          "Attachments" : {
            "description" : "Array with Attachments ID that are related to the SKU.",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            },
            "type" : "array"
          },
          "BrandId" : {
            "description" : "Product Brand ID.",
            "type" : "string"
          },
          "BrandName" : {
            "description" : "Product Brand Name.",
            "type" : "string"
          },
          "CSCIdentification" : {
            "description" : "SKU Seller identification.",
            "nullable" : true,
            "type" : "string"
          },
          "Categories" : {
            "description" : "Array with Categories from the related Product.",
            "items" : {
              "description" : "Category ID.",
              "type" : "string"
            },
            "type" : "array"
          },
          "Collections" : {
            "description" : "Array with Collections ID that are related to the Product.",
            "items" : {
              "description" : "Collection ID.",
              "type" : "string"
            },
            "type" : "array"
          },
          "CommercialConditionId" : {
            "description" : "SKU Commercial Condition ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "ComplementName" : {
            "description" : "Product Complement Name.",
            "type" : "string"
          },
          "DetailUrl" : {
            "description" : "Product URL.",
            "type" : "string"
          },
          "Dimension" : {
            "$ref" : "#/components/schemas/Dimension"
          },
          "EstimatedDateArrival" : {
            "description" : "To add the product as pre-sale, enter the product estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format. You must take into consideration both the launch date and the freight calculation for the arrival date.",
            "nullable" : true,
            "type" : "string"
          },
          "Id" : {
            "description" : "SKU ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "ImageUrl" : {
            "description" : "SKU image URL.",
            "type" : "string"
          },
          "Images" : {
            "description" : "Array with SKU images.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            },
            "type" : "array"
          },
          "InformationSource" : {
            "description" : "Information Source.",
            "nullable" : true,
            "type" : "string"
          },
          "IsActive" : {
            "description" : "Defines if the SKU is active or not.",
            "type" : "boolean"
          },
          "IsGiftCardRecharge" : {
            "description" : "Defines if the purchase will generate a reward.",
            "type" : "boolean"
          },
          "IsInventoried" : {
            "deprecated" : true,
            "nullable" : true,
            "type" : "boolean"
          },
          "IsKit" : {
            "description" : "Defines if the SKU is part of a bundle.",
            "type" : "boolean"
          },
          "IsProductActive" : {
            "description" : "Defines if the product is active or not.",
            "type" : "boolean"
          },
          "IsTransported" : {
            "deprecated" : true,
            "nullable" : true,
            "type" : "boolean"
          },
          "KeyWords" : {
            "description" : "Keywords related to the product.",
            "nullable" : true,
            "type" : "string"
          },
          "KitItems" : {
            "description" : "Array with SKU IDs of bundle components.",
            "items" : {
              "description" : "SKU ID.",
              "type" : "string"
            },
            "type" : "array"
          },
          "ManufacturerCode" : {
            "description" : "Product Supplier ID.",
            "type" : "string"
          },
          "MeasurementUnit" : {
            "description" : "SKU Measurement Unit.",
            "type" : "string"
          },
          "ModalType" : {
            "description" : "Modal Type.",
            "nullable" : true,
            "type" : "string"
          },
          "NameComplete" : {
            "description" : "Product Name and SKU Name concatenated.",
            "type" : "string"
          },
          "ProductCategories" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "description" : "Category Name.",
                "type" : "string"
              },
              "description" : "Category ID.",
              "type" : "string"
            },
            "description" : "Object containing product categories. Structure: \"{CategoryID}\": \"{CategoryName}\".",
            "type" : "object"
          },
          "ProductCategoryIds" : {
            "description" : "Category Hierarchy with Category IDs.",
            "type" : "string"
          },
          "ProductClustersIds" : {
            "description" : "Product Clusters IDs.",
            "type" : "string"
          },
          "ProductDescription" : {
            "description" : "Product Description. HTML is allowed.",
            "type" : "string"
          },
          "ProductFinalScore" : {
            "description" : "Product Final Score.",
            "type" : "integer"
          },
          "ProductGlobalCategoryId" : {
            "description" : "Global Category ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "ProductId" : {
            "description" : "ID of the related Product.",
            "format" : "int32",
            "type" : "integer"
          },
          "ProductIsVisible" : {
            "description" : "Defines if the product is visible or not.",
            "type" : "boolean"
          },
          "ProductName" : {
            "description" : "Product Name.",
            "type" : "string"
          },
          "ProductRefId" : {
            "description" : "Reference ID of the related Product.",
            "type" : "string"
          },
          "ProductSpecifications" : {
            "description" : "Array with related Product Specifications.",
            "items" : {
              "$ref" : "#/components/schemas/ProductSpecification"
            },
            "type" : "array"
          },
          "RealDimension" : {
            "$ref" : "#/components/schemas/RealDimension"
          },
          "ReleaseDate" : {
            "description" : "Release date of the product.",
            "nullable" : true,
            "type" : "string"
          },
          "RewardValue" : {
            "description" : "Reward value related to the SKU.",
            "type" : "number"
          },
          "SalesChannels" : {
            "description" : "Array with the ID of all the Sales Channels that are related to the product.",
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          },
          "Services" : {
            "description" : "Array with Service IDs that are related to the SKU.",
            "items" : {
              "description" : "Service ID.",
              "type" : "string"
            },
            "type" : "array"
          },
          "ShowIfNotAvailable" : {
            "description" : "Defines if the product will be shown if it is not available.",
            "type" : "boolean"
          },
          "SkuName" : {
            "description" : "SKU Name.",
            "type" : "string"
          },
          "SkuSellers" : {
            "description" : "Array with SKU Sellers data.",
            "items" : {
              "$ref" : "#/components/schemas/SkuSeller"
            },
            "type" : "array"
          },
          "SkuSpecifications" : {
            "description" : "Array with related SKU Specifications.",
            "items" : {
              "$ref" : "#/components/schemas/SkuSpecification"
            },
            "type" : "array"
          },
          "TaxCode" : {
            "description" : "SKU Tax Code.",
            "type" : "string"
          },
          "UnitMultiplier" : {
            "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
            "type" : "number"
          }
        },
        "required" : [ "Id", "ProductId", "NameComplete", "ProductName", "ProductDescription", "SkuName", "IsActive", "IsTransported", "IsInventoried", "IsGiftCardRecharge", "ImageUrl", "DetailUrl", "CSCIdentification", "BrandId", "BrandName", "Dimension", "RealDimension", "ManufacturerCode", "IsKit", "KitItems", "Services", "Categories", "Attachments", "Collections", "SkuSellers", "SalesChannels", "Images", "SkuSpecifications", "ProductSpecifications", "ProductClustersIds", "ProductCategoryIds", "ProductGlobalCategoryId", "ProductCategories", "CommercialConditionId", "RewardValue", "AlternateIds", "AlternateIdValues", "EstimatedDateArrival", "MeasurementUnit", "UnitMultiplier", "InformationSource", "ModalType" ],
        "title" : "GetSKUandContext",
        "type" : "object"
      },
      "GetSpecFieldValue" : {
        "example" : {
          "FieldValueId" : 52,
          "IsActive" : true,
          "Position" : 1,
          "Value" : "0 a 6 meses"
        },
        "properties" : {
          "FieldValueId" : {
            "description" : "Specification Field Value ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the Specification Field is active (`true`) or inactive (`false`).",
            "type" : "boolean"
          },
          "Position" : {
            "description" : "Specification Field Value Position.",
            "format" : "int32",
            "type" : "integer"
          },
          "Value" : {
            "description" : "Specification Field Value.",
            "type" : "string"
          }
        },
        "required" : [ "FieldValueId", "Value", "IsActive", "Position" ],
        "title" : "GetSpecFieldValue",
        "type" : "object"
      },
      "GetorUpdateProductSpecification" : {
        "example" : {
          "Id" : 30,
          "Name" : "Material",
          "Value" : [ "Iron", "Plastic" ]
        },
        "properties" : {
          "Id" : {
            "description" : "ID of the Specification.",
            "example" : 7,
            "format" : "int32",
            "type" : "integer"
          },
          "Name" : {
            "description" : "Name of the Specification.",
            "example" : "Fabric",
            "type" : "string"
          },
          "Value" : {
            "description" : "Array with Specification values.",
            "items" : {
              "description" : "Specification value.",
              "example" : "Cotton",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "Value" ],
        "title" : "GetorUpdateProductSpecification",
        "type" : "object"
      },
      "Image" : {
        "description" : "Object containing SKU images details.",
        "example" : {
          "FileId" : 168952,
          "ImageName" : "",
          "ImageUrl" : "http://ambienteqa.vteximg.com.br/arquivos/ids/168952/7508800GG.jpg"
        },
        "properties" : {
          "FileId" : {
            "description" : "SKU image ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "ImageName" : {
            "description" : "Image label.",
            "nullable" : true,
            "type" : "string"
          },
          "ImageUrl" : {
            "description" : "Image URL.",
            "type" : "string"
          }
        },
        "required" : [ "ImageUrl", "ImageName", "FileId" ],
        "title" : "Image",
        "type" : "object"
      },
      "ProductSpecification" : {
        "example" : {
          "FieldId" : 7,
          "FieldName" : "Faixa Etária",
          "FieldValueIds" : [ 58, 56, 55, 52 ],
          "FieldValues" : [ "5 a 6 anos", "7 a 8 anos", "9 a 10 anos", "Acima de 10 anos" ]
        },
        "properties" : {
          "FieldId" : {
            "description" : "Specification ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "FieldName" : {
            "description" : "Specification Name.",
            "type" : "string"
          },
          "FieldValueIds" : {
            "description" : "Array with related Specification Values IDs.",
            "items" : {
              "description" : "Specification Value ID.",
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          },
          "FieldValues" : {
            "description" : "Array with related Specification Values.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "FieldId", "FieldName", "FieldValueIds", "FieldValues" ],
        "title" : "ProductSpecification",
        "type" : "object"
      },
      "RealDimension" : {
        "description" : "Object containing the real SKU dimensions, which appear in the product page.",
        "example" : {
          "realCubicWeight" : 274.1375,
          "realHeight" : 241,
          "realLength" : 65,
          "realWeight" : 9800,
          "realWidth" : 105
        },
        "properties" : {
          "realCubicWeight" : {
            "description" : "Real SKU Cubic Weight.",
            "type" : "number"
          },
          "realHeight" : {
            "description" : "Real SKU Height.",
            "type" : "number"
          },
          "realLength" : {
            "description" : "Real SKU Length.",
            "type" : "number"
          },
          "realWeight" : {
            "description" : "Real SKU Weight.",
            "type" : "number"
          },
          "realWidth" : {
            "description" : "Real SKU Width.",
            "type" : "number"
          }
        },
        "required" : [ "realCubicWeight", "realHeight", "realLength", "realWeight", "realWidth" ],
        "title" : "RealDimension",
        "type" : "object"
      },
      "SKUFile" : {
        "description" : "The image file has a size limit of 3200 x 3200 pixels.",
        "format" : "binary",
        "type" : "string"
      },
      "SKUFileURL" : {
        "properties" : {
          "IsMain" : {
            "description" : "Defines if the Image is the main image of the SKU.",
            "example" : true,
            "title" : "IsMain",
            "type" : "boolean"
          },
          "Label" : {
            "description" : "SKU image label.",
            "example" : "Main",
            "title" : "Label",
            "type" : "string"
          },
          "Name" : {
            "description" : "SKU image name.",
            "example" : "Nike-Red-Janoski-1",
            "title" : "Name",
            "type" : "string"
          },
          "Text" : {
            "description" : "General text of the image.",
            "example" : "Nike-Red-Janoski",
            "nullable" : true,
            "title" : "Text",
            "type" : "string"
          },
          "Url" : {
            "description" : "External Image's URL.  The URL must start with the protocol identifier (`http://` or `https://`) and end with the file extension (`.jpg`, `.png` or `.gif`).",
            "example" : "https://m.media-amazon.com/images/I/610G2-sJx5L._AC_UX695_.jpg",
            "title" : "Url",
            "type" : "string"
          }
        },
        "required" : [ "Name", "Url" ],
        "type" : "object"
      },
      "SKUService" : {
        "example" : {
          "Id" : 1,
          "IsActive" : false,
          "Name" : "name",
          "SkuId" : 1,
          "SkuServiceTypeId" : 1,
          "SkuServiceValueId" : 1,
          "Text" : "text"
        },
        "properties" : {
          "Id" : {
            "description" : "SKU Service ID.",
            "example" : 1,
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the SKU Service is active or not.",
            "example" : true,
            "type" : "boolean"
          },
          "Name" : {
            "description" : "SKU Service Name. Maximum of 50 characters.",
            "example" : "Engraving",
            "type" : "string"
          },
          "SkuId" : {
            "description" : "SKU ID.",
            "example" : 1,
            "type" : "integer"
          },
          "SkuServiceTypeId" : {
            "description" : "SKU Service Type ID.",
            "example" : 1,
            "type" : "integer"
          },
          "SkuServiceValueId" : {
            "description" : "SKU Service Value ID.",
            "example" : 1,
            "type" : "integer"
          },
          "Text" : {
            "description" : "Internal description of the SKU Service. Maximum of 100 characters.",
            "example" : "Name engraving additional service.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SKUServiceTypeRequest" : {
        "properties" : {
          "IsActive" : {
            "default" : true,
            "description" : "Defines if the SKU Service Type is active or not.",
            "title" : "IsActive",
            "type" : "boolean"
          },
          "IsGiftCard" : {
            "description" : "Defines if the SKU Service Type is displayed as a Gift Card.",
            "example" : false,
            "title" : "IsGiftCard",
            "type" : "boolean"
          },
          "IsRequired" : {
            "description" : "Defines if the SKU Service type is mandatory.",
            "example" : false,
            "title" : "IsRequired",
            "type" : "boolean"
          },
          "Name" : {
            "default" : "Test API Sku Services",
            "description" : "SKU Service Type Name. Maximum of 100 characters.",
            "title" : "Name",
            "type" : "string"
          },
          "ShowOnAttachmentFront" : {
            "description" : "Defines if the SKU Service Type has an attachment.",
            "example" : false,
            "title" : "ShowOnAttachmentFront",
            "type" : "boolean"
          },
          "ShowOnCartFront" : {
            "description" : "Defines if the SKU Service Type is displayed on the cart screen.",
            "example" : false,
            "title" : "ShowOnCartFront",
            "type" : "boolean"
          },
          "ShowOnFileUpload" : {
            "description" : "Defines if the SKU Service Type can be associated with an attachment or not.",
            "example" : false,
            "title" : "ShowOnFileUpload",
            "type" : "boolean"
          },
          "ShowOnProductFront" : {
            "deprecated" : true,
            "description" : "Deprecated",
            "example" : false,
            "title" : "ShowOnProductFront",
            "type" : "boolean"
          }
        },
        "required" : [ "Name", "IsActive", "ShowOnProductFront", "ShowOnCartFront", "ShowOnAttachmentFront", "ShowOnFileUpload", "IsGiftCard", "IsRequired" ],
        "type" : "object"
      },
      "SKUServiceTypeResponse" : {
        "example" : {
          "Id" : 2,
          "IsActive" : true,
          "IsGiftCard" : true,
          "IsRequired" : true,
          "Name" : "Test API SKU Services",
          "ShowOnAttachmentFront" : true,
          "ShowOnCartFront" : true,
          "ShowOnFileUpload" : true,
          "ShowOnProductFront" : true
        },
        "properties" : {
          "Id" : {
            "description" : "SKU Service Type ID.",
            "example" : 2,
            "title" : "Id",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the SKU Service Type is active or not.",
            "example" : true,
            "title" : "IsActive",
            "type" : "boolean"
          },
          "IsGiftCard" : {
            "default" : false,
            "description" : "Defines if the SKU Service Type is displayed as a Gift Card.",
            "title" : "IsGiftCard",
            "type" : "boolean"
          },
          "IsRequired" : {
            "default" : false,
            "description" : "Defines if the SKU Service type is mandatory.",
            "title" : "IsRequired",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "SKU Service Type Name. Maximum of 100 characters.",
            "example" : "Test API Sku Services",
            "title" : "Name",
            "type" : "string"
          },
          "ShowOnAttachmentFront" : {
            "default" : false,
            "description" : "Defines if the SKU Service Type has an attachment.",
            "title" : "ShowOnAttachmentFront",
            "type" : "boolean"
          },
          "ShowOnCartFront" : {
            "description" : "Defines if the SKU Service Type is displayed on the cart screen.",
            "example" : false,
            "title" : "ShowOnCartFront",
            "type" : "boolean"
          },
          "ShowOnFileUpload" : {
            "default" : false,
            "description" : "Defines if the SKU Service Type can be associated with an attachment or not.",
            "title" : "ShowOnFileUpload",
            "type" : "boolean"
          },
          "ShowOnProductFront" : {
            "deprecated" : true,
            "description" : "Deprecated.",
            "example" : false,
            "title" : "ShowOnProductFront",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "SKUServiceValueRequest" : {
        "example" : {
          "Cost" : 10.5,
          "Name" : "Test ServiceValue API",
          "SkuServiceTypeId" : 2,
          "Value" : 10.5
        },
        "properties" : {
          "Cost" : {
            "description" : "SKU Service Value cost.",
            "example" : 10.5,
            "title" : "Cost",
            "type" : "number"
          },
          "Name" : {
            "description" : "SKU Service Value name. Maximum of 100 characters.",
            "example" : "Test ServiceValue API",
            "title" : "Name",
            "type" : "string"
          },
          "SkuServiceTypeId" : {
            "description" : "SKU Service Type ID.",
            "example" : 2,
            "title" : "SkuServiceTypeId",
            "type" : "integer"
          },
          "Value" : {
            "description" : "SKU Service Value value.",
            "example" : 10.5,
            "title" : "Value",
            "type" : "number"
          }
        },
        "required" : [ "SkuServiceTypeId", "Name", "Value", "Cost" ],
        "title" : "Request body",
        "type" : "object"
      },
      "SKUServiceValueResponse" : {
        "example" : {
          "Cost" : 10.5,
          "Id" : 2,
          "Name" : "Test ServiceValue API",
          "SkuServiceTypeId" : 2,
          "Value" : 10.5
        },
        "properties" : {
          "Cost" : {
            "description" : "SKU Service Value cost.",
            "example" : 10.5,
            "title" : "Cost",
            "type" : "number"
          },
          "Id" : {
            "description" : "SKU Service Value ID.",
            "example" : 2,
            "title" : "Id",
            "type" : "integer"
          },
          "Name" : {
            "description" : "SKU Service Value name. Maximum of 100 characters.",
            "example" : "Test ServiceValue API",
            "title" : "Name",
            "type" : "string"
          },
          "SkuServiceTypeId" : {
            "description" : "SKU Service Type ID.",
            "example" : 2,
            "title" : "SkuServiceTypeId",
            "type" : "integer"
          },
          "Value" : {
            "description" : "SKU Service Value value.",
            "example" : 10.5,
            "title" : "Value",
            "type" : "number"
          }
        },
        "required" : [ "SkuServiceTypeId", "Name", "Value", "Cost" ],
        "title" : "Request body",
        "type" : "object"
      },
      "SKUSpecificationResponse" : {
        "example" : {
          "FieldId" : 193,
          "FieldValueId" : 360,
          "Id" : 1505,
          "SkuId" : 1234568387,
          "Text" : "Size 10"
        },
        "properties" : {
          "FieldId" : {
            "description" : "Specification ID.",
            "type" : "integer"
          },
          "FieldValueId" : {
            "description" : "Specification Value ID. Required only for `FieldTypeId` as `5`, `6` and `7`.",
            "type" : "integer"
          },
          "Id" : {
            "description" : "ID of the association of the specification and the SKU. This ID is used to update or delete the specification.",
            "type" : "integer"
          },
          "SkuId" : {
            "description" : "SKU ID.",
            "type" : "integer"
          },
          "Text" : {
            "description" : "Value of specification. Only for `FieldTypeId` different from `5`, `6` and `7`.",
            "type" : "string"
          }
        },
        "title" : "",
        "type" : "object"
      },
      "SkuComplement" : {
        "example" : [ {
          "ComplementTypeId" : 1,
          "Id" : 61,
          "ParentSkuId" : 1,
          "SkuId" : 7
        } ],
        "items" : {
          "properties" : {
            "ComplementTypeId" : {
              "description" : "Complement Type ID. This represents the type of the complement. The possible values are: `1` for Accessory; `2` for Suggestion; `3` for Similar Product; `5` for Show Together.",
              "type" : "integer"
            },
            "Id" : {
              "description" : "SKU Complement’s unique numerical identifier.",
              "type" : "integer"
            },
            "ParentSkuId" : {
              "description" : "ID of the Parent SKU, where the Complement will be inserted.",
              "type" : "integer"
            },
            "SkuId" : {
              "description" : "ID of the SKU which will be inserted as a Complement in the Parent SKU.",
              "type" : "integer"
            }
          },
          "type" : "object"
        },
        "required" : [ "Id", "SkuId", "ParentSkuId", "ComplementTypeId" ],
        "title" : "SKU Complement",
        "type" : "array"
      },
      "SkuKit" : {
        "example" : {
          "Id" : 7,
          "Quantity" : 1,
          "StockKeepingUnitId" : 1,
          "StockKeepingUnitParent" : 7,
          "UnitPrice" : 50
        },
        "properties" : {
          "Id" : {
            "description" : "SKU Kit ID, same as `StockKeepingUnitParent`.",
            "type" : "integer"
          },
          "Quantity" : {
            "description" : "Component quantity.",
            "type" : "integer"
          },
          "StockKeepingUnitId" : {
            "description" : "SKU ID of the kit component.",
            "type" : "integer"
          },
          "StockKeepingUnitParent" : {
            "description" : "Parent SKU ID.",
            "type" : "integer"
          },
          "UnitPrice" : {
            "description" : "Component price per unit.",
            "type" : "integer"
          }
        },
        "title" : "",
        "type" : "object"
      },
      "SkuSeller" : {
        "description" : "Object containing related SKU Sellers data.",
        "example" : {
          "FreightCommissionPercentage" : 0,
          "IsActive" : true,
          "ProductCommissionPercentage" : 0,
          "SellerId" : "1",
          "SellerStockKeepingUnitId" : "2001773",
          "StockKeepingUnitId" : 2001773
        },
        "properties" : {
          "FreightCommissionPercentage" : {
            "description" : "Registered value for Seller Freight Commission.",
            "type" : "number"
          },
          "IsActive" : {
            "description" : "Defines if the SKU is active.",
            "type" : "boolean"
          },
          "ProductCommissionPercentage" : {
            "description" : "Registered value for Seller Product Commission.",
            "type" : "number"
          },
          "SellerId" : {
            "description" : "SKU Seller ID. This is the ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
            "type" : "string"
          },
          "SellerStockKeepingUnitId" : {
            "description" : "SKU ID for the SKU Seller.",
            "type" : "string"
          },
          "StockKeepingUnitId" : {
            "description" : "SKU ID.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "SellerId", "StockKeepingUnitId", "SellerStockKeepingUnitId", "IsActive", "FreightCommissionPercentage", "ProductCommissionPercentage" ],
        "title" : "SkuSeller",
        "type" : "object"
      },
      "SkuSpecification" : {
        "description" : "Object containing related SKU Specifications.",
        "example" : {
          "FieldId" : 102,
          "FieldName" : "Cor",
          "FieldValueIds" : [ 266 ],
          "FieldValues" : [ "Padrão" ]
        },
        "properties" : {
          "FieldId" : {
            "description" : "Specification ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "FieldName" : {
            "description" : "Specification Name.",
            "type" : "string"
          },
          "FieldValueIds" : {
            "description" : "Array with related Specification Values IDs.",
            "items" : {
              "description" : "Specification Value ID.",
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          },
          "FieldValues" : {
            "description" : "Array with related Specification Values.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "FieldId", "FieldName", "FieldValueIds", "FieldValues" ],
        "title" : "SkuSpecification",
        "type" : "object"
      },
      "SkulistbyProductId" : {
        "example" : {
          "ActivateIfPossible" : true,
          "CommercialConditionId" : 1,
          "CubicWeight" : 1,
          "DateUpdated" : "2021-10-29T18:25:00",
          "EstimatedDateArrival" : null,
          "FlagKitItensSellApart" : false,
          "Height" : 6.5,
          "Id" : 1,
          "InternalNote" : null,
          "IsActive" : true,
          "IsGiftCardRecharge" : false,
          "IsInventoried" : true,
          "IsKit" : false,
          "IsPersisted" : true,
          "IsTransported" : true,
          "Length" : 24,
          "ManufacturerCode" : "",
          "MeasurementUnit" : "un",
          "ModalId" : 1,
          "ModalType" : null,
          "Name" : "Ração Royal Canin Feline Urinary 500g",
          "Position" : 1,
          "ProductId" : 1,
          "RealHeight" : 2.2,
          "RealLength" : 4.4,
          "RealWeightKg" : 1.1,
          "RealWidth" : 3.3,
          "RefId" : "0001",
          "ReferenceStockKeepingUnitId" : null,
          "RewardValue" : null,
          "UnitMultiplier" : 300,
          "WeightKg" : 550,
          "Width" : 14,
          "isKitOptimized" : false
        },
        "properties" : {
          "ActivateIfPossible" : {
            "description" : "When set to `true`, this attribute will automatically update the SKU as active once associated with an image or an active component.",
            "type" : "boolean"
          },
          "CommercialConditionId" : {
            "description" : "SKU Commercial Condition ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "CubicWeight" : {
            "description" : "[Cubic weight](https://help.vtex.com/en/tutorial/understanding-the-cubic-weight-factor--tutorials_128).",
            "type" : "number"
          },
          "DateUpdated" : {
            "description" : "Date when the product was updated for the most recent time.",
            "type" : "string"
          },
          "EstimatedDateArrival" : {
            "description" : "SKU estimated arrival date in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format, when the product is on pre-sale. You must take into consideration both the launch date and the freight calculation for the arrival date.",
            "nullable" : true,
            "type" : "string"
          },
          "FlagKitItensSellApart" : {
            "description" : "Defines if the SKU bundle items can be sold separately.",
            "type" : "boolean"
          },
          "Height" : {
            "description" : "SKU Height.",
            "type" : "number"
          },
          "Id" : {
            "description" : "SKU ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "InternalNote" : {
            "description" : "Internal note.",
            "nullable" : true,
            "type" : "string"
          },
          "IsActive" : {
            "description" : "Defines if the SKU is active or not.",
            "type" : "boolean"
          },
          "IsDynamicKit" : {
            "deprecated" : true,
            "nullable" : true,
            "type" : "string"
          },
          "IsGiftCardRecharge" : {
            "description" : "Defines if the purchase of the SKU will generate reward value for the customer.",
            "nullable" : true,
            "type" : "boolean"
          },
          "IsInventoried" : {
            "deprecated" : true,
            "nullable" : true,
            "type" : "boolean"
          },
          "IsKit" : {
            "description" : "Flag to set whether the product SKU is made up of one or more SKUs, thereby becoming a bundle. Must be enabled if you are adding a bundle. Once activated, the flag cannot be reverted.",
            "type" : "boolean"
          },
          "IsPersisted" : {
            "description" : "Defines if the SKU is persisted.",
            "type" : "boolean"
          },
          "IsRemoved" : {
            "deprecated" : true,
            "description" : "Defines if the SKU is removed.",
            "type" : "boolean"
          },
          "IsTransported" : {
            "deprecated" : true,
            "nullable" : true,
            "type" : "boolean"
          },
          "Length" : {
            "description" : "SKU Length.",
            "type" : "number"
          },
          "ManufacturerCode" : {
            "description" : "Product Supplier ID.",
            "type" : "string"
          },
          "MeasurementUnit" : {
            "description" : "Measurement unit.",
            "type" : "string"
          },
          "ModalId" : {
            "description" : "Delivery Method (Modal Type) ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "ModalType" : {
            "description" : "Links an unusual type of SKU to a carrier specialized in delivering it. This field should be filled in with the name of the modal (e.g. \"Chemicals\" or \"Refrigerated products\"). To learn more about this feature, read our articles [How the modal works](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125) and [Setting up modal for carriers](https://help.vtex.com/en/tutorial/configure-modal--3jhLqxuPhuiq24UoykCcqy).",
            "nullable" : true,
            "type" : "string"
          },
          "Name" : {
            "description" : "SKU Name.",
            "type" : "string"
          },
          "Position" : {
            "description" : "SKU Position.",
            "format" : "int32",
            "type" : "integer"
          },
          "ProductId" : {
            "description" : "Product ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "RealHeight" : {
            "description" : "Real SKU Height.",
            "nullable" : true,
            "type" : "number"
          },
          "RealLength" : {
            "description" : "Real SKU Length.",
            "nullable" : true,
            "type" : "number"
          },
          "RealWeightKg" : {
            "description" : "Real Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
            "nullable" : true,
            "type" : "number"
          },
          "RealWidth" : {
            "description" : "Real SKU Width.",
            "nullable" : true,
            "type" : "number"
          },
          "RefId" : {
            "description" : "Product Reference ID.",
            "type" : "string"
          },
          "ReferenceStockKeepingUnitId" : {
            "description" : "SKU Reference ID.",
            "nullable" : true,
            "type" : "string"
          },
          "RewardValue" : {
            "description" : "Reward value related to the SKU.",
            "nullable" : true,
            "type" : "number"
          },
          "UnitMultiplier" : {
            "description" : "This is the multiple number of SKU. If the Multiplier is 5.0000, the product can be added in multiple quantities of 5, 10, 15, 20, onward.",
            "type" : "number"
          },
          "WeightKg" : {
            "description" : "Weight of the SKU in the measurement [configured in the store](https://help.vtex.com/en/tutorial/filling-in-system-settings--tutorials_269), which by default is in grams.",
            "nullable" : true,
            "type" : "number"
          },
          "Width" : {
            "description" : "SKU Width.",
            "type" : "number"
          },
          "isKitOptimized" : {
            "description" : "Defines if the SKU is a Optimized bundle.",
            "type" : "boolean"
          }
        },
        "title" : "SkulistbyProductId",
        "type" : "object"
      },
      "SpecificationGroupInsertRequest" : {
        "example" : {
          "CategoryId" : 1,
          "Name" : "GroupName1"
        },
        "properties" : {
          "CategoryId" : {
            "description" : "Category ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "Name" : {
            "description" : "Specification Group Name.",
            "type" : "string"
          }
        },
        "required" : [ "CategoryId", "Name" ],
        "title" : "Request body",
        "type" : "object"
      },
      "SpecificationsGroup" : {
        "example" : {
          "CategoryId" : 1,
          "Id" : 4,
          "Name" : "Sizes",
          "Position" : 1
        },
        "properties" : {
          "CategoryId" : {
            "description" : "Category ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "Id" : {
            "description" : "Specification Group ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "Name" : {
            "description" : "Specification Group Name.",
            "type" : "string"
          },
          "Position" : {
            "description" : "Specification Group Position.",
            "format" : "int32",
            "nullable" : true,
            "type" : "integer"
          }
        },
        "required" : [ "CategoryId", "Id", "Name", "Position" ],
        "title" : "SpecificationsGroup",
        "type" : "object"
      },
      "SpecificationsInsertFieldRequest" : {
        "example" : {
          "CategoryId" : 4,
          "DefaultValue" : null,
          "Description" : "Composition of the product.",
          "FieldGroupId" : 20,
          "FieldGroupName" : "Clothes specifications",
          "FieldId" : 88,
          "FieldTypeId" : 1,
          "FieldValueId" : 1,
          "IsActive" : true,
          "IsFilter" : true,
          "IsOnProductDetails" : false,
          "IsRequired" : true,
          "IsSideMenuLinkActive" : true,
          "IsStockKeepingUnit" : false,
          "IsTopMenuLinkActive" : true,
          "IsWizard" : false,
          "Name" : "Material",
          "Position" : 1
        },
        "properties" : {
          "CategoryId" : {
            "description" : "Category ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "DefaultValue" : {
            "description" : "Specification Field default Value.",
            "nullable" : true,
            "type" : "string"
          },
          "Description" : {
            "description" : "Specification Field Description.",
            "nullable" : true,
            "type" : "string"
          },
          "FieldGroupId" : {
            "description" : "Specification Field Group ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "FieldGroupName" : {
            "description" : "Specification Field Group Name.",
            "type" : "string"
          },
          "FieldId" : {
            "description" : "Specification Field ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "FieldTypeId" : {
            "description" : "Specification Field Type ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "FieldValueId" : {
            "description" : "Specification Field Value ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the Specification Field is active. The default value is `true`.",
            "type" : "boolean"
          },
          "IsFilter" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To allow the specification to be used as a facet (filter) on the search navigation bar.\r\n",
            "type" : "boolean"
          },
          "IsOnProductDetails" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal -If specification is visible on the product page.\r\n",
            "type" : "boolean"
          },
          "IsRequired" : {
            "description" : "Makes the Specification Field mandatory (`true`) or optional (`false`).",
            "type" : "boolean"
          },
          "IsSideMenuLinkActive" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification field clickable in the search navigation bar.\r\n",
            "type" : "boolean"
          },
          "IsStockKeepingUnit" : {
            "description" : "If `true`, it will be added as a SKU specification. If `false`, it will be added as a product specification field.",
            "type" : "boolean"
          },
          "IsTopMenuLinkActive" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification visible in the store's upper menu.\r\n",
            "type" : "boolean"
          },
          "IsWizard" : {
            "deprecated" : true,
            "description" : "Deprecated field.",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Specification Field ID.",
            "type" : "string"
          },
          "Position" : {
            "description" : "Specification Field Position.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "Name", "CategoryId", "IsActive", "FieldId", "IsRequired", "FieldTypeId", "FieldValueId", "Description", "IsStockKeepingUnit", "IsFilter", "IsOnProductDetails", "Position", "IsWizard", "IsTopMenuLinkActive", "IsSideMenuLinkActive", "DefaultValue", "FieldGroupId", "FieldGroupName" ],
        "title" : "Request body",
        "type" : "object"
      },
      "SpecificationsInsertFieldUpdateRequest" : {
        "properties" : {
          "CategoryId" : {
            "description" : "Category ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "DefaultValue" : {
            "description" : "Specification Field default Value.",
            "nullable" : true,
            "type" : "string"
          },
          "Description" : {
            "description" : "Specification Field Description.",
            "nullable" : true,
            "type" : "string"
          },
          "FieldGroupId" : {
            "description" : "Specification Field Group ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "FieldGroupName" : {
            "description" : "Specification Field Group Name.",
            "type" : "string"
          },
          "FieldId" : {
            "description" : "Specification Field ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "FieldTypeId" : {
            "description" : "Specification Field Type ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "FieldValueId" : {
            "description" : "Specification Field Value ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Enables(`true`) or disables (`false`) the Specification Field.",
            "example" : true,
            "type" : "boolean"
          },
          "IsFilter" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To allow the specification to be used as a facet (filter) on the search navigation bar.\r\n",
            "type" : "boolean"
          },
          "IsOnProductDetails" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal -If specification is visible on the product page.\r\n",
            "type" : "boolean"
          },
          "IsRequired" : {
            "description" : "Makes the Specification Field mandatory (`true`) or optional (`false`).",
            "type" : "boolean"
          },
          "IsSideMenuLinkActive" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification field clickable in the search navigation bar.\r\n",
            "example" : false,
            "type" : "boolean"
          },
          "IsStockKeepingUnit" : {
            "description" : "If `true`, it will be added as a SKU specification field. If `false`, it will be added as a product specification field.",
            "type" : "boolean"
          },
          "IsTopMenuLinkActive" : {
            "description" : "Store Framework - Deprecated.\r\nLegacy CMS Portal - To make the specification visible in the store's upper menu.\r\n",
            "type" : "boolean"
          },
          "IsWizard" : {
            "deprecated" : true,
            "description" : "Deprecated field.",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Specification Field ID.",
            "type" : "string"
          },
          "Position" : {
            "description" : "Specification Field Position.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "Name", "CategoryId", "IsActive", "FieldId", "IsRequired", "FieldTypeId", "Description", "IsStockKeepingUnit", "IsWizard", "IsFilter", "IsOnProductDetails", "Position", "IsTopMenuLinkActive", "IsSideMenuLinkActive", "DefaultValue", "FieldGroupId", "FieldGroupName" ],
        "title" : "Request body",
        "type" : "object"
      },
      "SpecificationsInsertFieldValueRequest" : {
        "example" : {
          "FieldId" : 34,
          "FieldValueId" : 143,
          "IsActive" : true,
          "Name" : "Cotton",
          "Position" : 100,
          "Text" : "Cotton fibers"
        },
        "properties" : {
          "FieldId" : {
            "description" : "Specification Field ID.",
            "format" : "int32",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the Specification Field Value is active (`true`) or inactive (`false`).",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Specification Field Value Name.",
            "type" : "string"
          },
          "Position" : {
            "description" : "Specification Field Value Position.",
            "format" : "int32",
            "type" : "integer"
          },
          "Text" : {
            "description" : "Specification Field Value Description.",
            "type" : "string"
          }
        },
        "required" : [ "FieldId", "Name", "Text", "IsActive", "Position" ],
        "title" : "SpecificationsInsertFieldValueRequest",
        "type" : "object"
      },
      "SpecificationsUpdateFieldValueRequest" : {
        "example" : {
          "FieldId" : 1,
          "FieldValueId" : 143,
          "IsActive" : true,
          "Name" : "Cotton",
          "Position" : 100,
          "Text" : "Cotton fibers"
        },
        "properties" : {
          "FieldId" : {
            "description" : "Specification Field ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the Specification Field Value is active (`true`) or inactive (`false`).",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Specification Field Value Name.",
            "type" : "string"
          },
          "Position" : {
            "description" : "Specification Field Position.",
            "format" : "int32",
            "type" : "integer"
          },
          "Text" : {
            "description" : "Specification Field Value Description.",
            "nullable" : true,
            "type" : "string"
          }
        },
        "required" : [ "FieldId", "Name", "Text", "IsActive", "Position" ],
        "title" : "Request body",
        "type" : "object"
      },
      "SupplierRequest" : {
        "properties" : {
          "CellPhone" : {
            "description" : "Supplier Cellphone.",
            "example" : "4444444444",
            "title" : "CellPhone",
            "type" : "string"
          },
          "Cnpj" : {
            "description" : "Corporate legal ID.",
            "example" : "33304981001272",
            "title" : "Cnpj",
            "type" : "string"
          },
          "CorporateName" : {
            "description" : "Supplier Corporate Name.",
            "example" : "TopStore",
            "title" : "CorporateName",
            "type" : "string"
          },
          "CorportePhone" : {
            "description" : "Supplier Corporate Phone.",
            "example" : "5555555555",
            "title" : "CorportePhone",
            "type" : "string"
          },
          "Email" : {
            "description" : "Supplier email.",
            "example" : "email@email.com",
            "title" : "Email",
            "type" : "string"
          },
          "IsActive" : {
            "description" : "Defines if the Supplier is active (`true`) or not (`false`).",
            "example" : false,
            "title" : "IsActive",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Supplier Name.",
            "example" : "Supplier",
            "title" : "Name",
            "type" : "string"
          },
          "Phone" : {
            "description" : "Supplier Phone.",
            "example" : "3333333333",
            "title" : "Phone",
            "type" : "string"
          },
          "StateInscription" : {
            "description" : "State Inscription.",
            "example" : "123456",
            "title" : "StateInscription",
            "type" : "string"
          }
        },
        "required" : [ "Name", "CorporateName", "StateInscription", "Cnpj", "Phone", "CellPhone", "CorportePhone", "Email", "IsActive" ],
        "title" : "Request body",
        "type" : "object"
      },
      "SupplierResponse" : {
        "properties" : {
          "CellPhone" : {
            "description" : "Supplier Cellphone.",
            "example" : "4444444444",
            "title" : "CellPhone",
            "type" : "string"
          },
          "Cnpj" : {
            "description" : "Corporate legal ID.",
            "example" : "33304981001272",
            "title" : "Cnpj",
            "type" : "string"
          },
          "CorporateName" : {
            "description" : "Supplier Corporate Name.",
            "example" : "TopStore",
            "title" : "CorporateName",
            "type" : "string"
          },
          "CorportePhone" : {
            "description" : "Supplier Corporate Phone.",
            "example" : "5555555555",
            "title" : "CorportePhone",
            "type" : "string"
          },
          "Email" : {
            "description" : "Supplier email.",
            "example" : "email@email.com",
            "title" : "Email",
            "type" : "string"
          },
          "Id" : {
            "description" : "Supplier unique identifier code.",
            "example" : 123,
            "title" : "Id",
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "Defines if the Supplier is active (`true`) or not (`false`).",
            "example" : false,
            "title" : "IsActive",
            "type" : "boolean"
          },
          "Name" : {
            "description" : "Supplier Name.",
            "example" : "Supplier",
            "title" : "Name",
            "type" : "string"
          },
          "Phone" : {
            "description" : "Supplier Phone.",
            "example" : "3333333333",
            "title" : "Phone",
            "type" : "string"
          },
          "StateInscription" : {
            "description" : "State Inscription.",
            "example" : "123456",
            "title" : "StateInscription",
            "type" : "string"
          }
        },
        "title" : "Response body",
        "type" : "object"
      },
      "UpdateSellerRequest" : {
        "properties" : {
          "ArchiveId" : {
            "description" : "Seller archive ID.",
            "example" : 1,
            "type" : "integer"
          },
          "CNPJ" : {
            "description" : "Company registration number.",
            "example" : "12035072751",
            "type" : "string"
          },
          "CSCIdentification" : {
            "description" : "CSC identification.",
            "example" : "pedrostore",
            "type" : "string"
          },
          "CatalogSystemEndpoint" : {
            "description" : "URL of the endpoint of the seller's catalog. This field will only be displayed if the seller type is VTEX Store. The field format will be as follows: `http://{sellerName}.vtexcommercestable.com.br/api/catalog_system/`.",
            "example" : "http://pedrostore.vtexcommercestable.com.br/api/catalog_system/",
            "type" : "string"
          },
          "CategoryCommissionPercentage" : {
            "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
            "example" : "[{\"CategoryId\":14,\"ProductCommission\":15.0,\"FreightCommission\":0.0}]",
            "type" : "string"
          },
          "DeliveryPolicy" : {
            "description" : "Text describing the delivery policy previously agreed between the marketplace and the seller.",
            "example" : "Delivery policy text",
            "type" : "string"
          },
          "Description" : {
            "description" : "Text describing the seller with a marketing tone. You can display this text in the marketplace window display by [customizing the CMS](https://help.vtex.com/en/tutorial/list-of-controls-for-templates--tutorials_563).",
            "example" : "Brief description",
            "type" : "string"
          },
          "Email" : {
            "description" : "Email of the admin responsible for the seller.",
            "example" : "breno@breno.com",
            "type" : "string"
          },
          "ExchangeReturnPolicy" : {
            "description" : "Text describing the exchange and return policy previously agreed between the marketplace and the seller.",
            "example" : "Exchange return policy text",
            "type" : "string"
          },
          "FreightCommissionPercentage" : {
            "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
            "example" : 0,
            "type" : "number"
          },
          "FulfillmentEndpoint" : {
            "description" : "URL of the endpoint for fulfillment of seller's orders, which the marketplace will use to communicate with the seller. This field applies to all sellers, regardless of their type. However, for `VTEX Stores`, you don’t need to fill it in because the system will do that automatically. You can edit this field once the seller has been successfully added.",
            "example" : "http://pedrostore.vtexcommercestable.com.br/api/fulfillment?affiliateid=LDB&sc=1",
            "type" : "string"
          },
          "FulfillmentSellerId" : {
            "description" : "Identification code of the seller responsible for fulfilling the order. This is an optional field used when a seller sells SKUs from another seller. If the seller sells their own SKUs, it must be left blank.",
            "example" : 1,
            "type" : "integer"
          },
          "IsActive" : {
            "description" : "If the selle is active (`true`) or not (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "IsBetterScope" : {
            "description" : "Indicates whether it is a [comprehensive seller](https://help.vtex.com/en/tutorial/comprehensive-seller--5Qn4O2GpjUIzWTPpvLUfkI).",
            "example" : false,
            "type" : "boolean"
          },
          "MerchantName" : {
            "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [Split Payment](https://help.vtex.com/en/tutorial/split-payment--6k5JidhYRUxileNolY2VLx) article to know more.",
            "example" : "pedrostore",
            "type" : "string"
          },
          "Name" : {
            "description" : "Name of the account in the seller's environment. You can find it on **Account settings > Account > Account Name**). Applicable only if the seller uses their own payment method.",
            "example" : "My pedrostore",
            "type" : "string"
          },
          "Password" : {
            "description" : "Seller password.",
            "example" : "passoword",
            "type" : "string"
          },
          "ProductCommissionPercentage" : {
            "description" : "The percentage that must be filled in as agreed between the marketplace and the seller. If there is no such commission, please fill in the field with the value: `0.00`.",
            "example" : 0,
            "type" : "number"
          },
          "SecutityPrivacyPolicy" : {
            "description" : "Text describing the security policy previously agreed between the marketplace and the seller.",
            "example" : "Secutity privacy policy text",
            "type" : "string"
          },
          "SellerId" : {
            "description" : "ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID.",
            "example" : "pedrostore",
            "type" : "string"
          },
          "SellerType" : {
            "description" : "Seller type.",
            "example" : 1,
            "type" : "integer"
          },
          "TrustPolicy" : {
            "description" : "Seller trust policy. The default value is `'Default'`, but if your store is a B2B marketplace and you want to share the customers'emails with the sellers you need to set this field as `'AllowEmailSharing'`.",
            "example" : "Default",
            "type" : "string"
          },
          "UrlLogo" : {
            "description" : "Seller URL logo.",
            "example" : "/myseller",
            "type" : "string"
          },
          "UseHybridPaymentOptions" : {
            "description" : "Allows customers to use gift cards from the seller to buy their products on the marketplace. It identifies purchases made with a gift card so that only the final price (with discounts applied) is paid to the seller.",
            "example" : false,
            "type" : "boolean"
          },
          "UserName" : {
            "description" : "Seller username.",
            "example" : "myseller",
            "type" : "string"
          }
        },
        "required" : [ "SellerId", "Name", "Email", "Description", "ExchangeReturnPolicy", "DeliveryPolicy", "UseHybridPaymentOptions", "UserName", "Password", "SecutityPrivacyPolicy", "CNPJ", "CSCIdentification", "ArchiveId", "UrlLogo", "ProductCommissionPercentage", "FreightCommissionPercentage", "FulfillmentEndpoint", "CatalogSystemEndpoint", "IsActive", "FulfillmentSellerId", "SellerType", "IsBetterScope" ],
        "title" : "",
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "appKey" : {
        "in" : "header",
        "name" : "X-VTEX-API-AppKey",
        "type" : "apiKey"
      },
      "appToken" : {
        "in" : "header",
        "name" : "X-VTEX-API-AppToken",
        "type" : "apiKey"
      }
    }
  },
  "x-hasEquivalentPaths" : true
}