{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Workload Monitor",
    "description" : "APIs for workload monitoring",
    "contact" : {
      "name" : "Microsoft",
      "email" : "wlmengg@microsoft.com"
    },
    "version" : "2018-08-31-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.WorkloadMonitor/operations" : {
      "get" : {
        "tags" : [ "WorkloadInsights" ],
        "summary" : "Gets the details of all operations possible on the resource provider.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$skiptoken",
          "in" : "query",
          "description" : "The page-continuation token to use with a paged version of this API.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.WorkloadMonitor/componentsSummary" : {
      "get" : {
        "tags" : [ "WorkloadInsights" ],
        "summary" : "Get subscription wide details of components.",
        "operationId" : "ComponentsSummary_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Properties to be returned in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter to be applied on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "Apply aggregation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Sort the result on one or more properties.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Include properties inline in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Limit the result to the specified number of rows.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skiptoken",
          "in" : "query",
          "description" : "The page-continuation token to use with a paged version of this API.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. At least one component found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComponentsCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.WorkloadMonitor/monitorInstancesSummary" : {
      "get" : {
        "tags" : [ "WorkloadInsights" ],
        "summary" : "Get subscription wide health instances.",
        "operationId" : "MonitorInstancesSummary_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Properties to be returned in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter to be applied on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "Apply aggregation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Sort the result on one or more properties.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Include properties inline in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Limit the result to the specified number of rows.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skiptoken",
          "in" : "query",
          "description" : "The page-continuation token to use with a paged version of this API.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitorInstancesCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/components" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get list of components for a resource.",
        "operationId" : "Components_ListByResource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Properties to be returned in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter to be applied on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "Apply aggregation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Sort the result on one or more properties.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Include properties inline in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Limit the result to the specified number of rows.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skiptoken",
          "in" : "query",
          "description" : "The page-continuation token to use with a paged version of this API.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. At least one component found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ComponentsCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/components/{componentId}" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get details of a component.",
        "operationId" : "Components_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "componentId",
          "in" : "path",
          "description" : "Component Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Properties to be returned in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Include properties inline in the response.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. component is found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitorInstances" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get list of monitor instances for a resource.",
        "operationId" : "MonitorInstances_ListByResource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Properties to be returned in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter to be applied on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$apply",
          "in" : "query",
          "description" : "Apply aggregation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "Sort the result on one or more properties.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Include properties inline in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Limit the result to the specified number of rows.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skiptoken",
          "in" : "query",
          "description" : "The page-continuation token to use with a paged version of this API.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitorInstancesCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitorInstances/{monitorInstanceId}" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get details of a monitorInstance.",
        "operationId" : "MonitorInstances_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "monitorInstanceId",
          "in" : "path",
          "description" : "MonitorInstance Id.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$select",
          "in" : "query",
          "description" : "Properties to be returned in the response.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Include properties inline in the response.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. monitorInstance is found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitorInstance"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get list of a monitors of a resource.",
        "operationId" : "Monitors_ListByResource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "Filter to be applied on the operation.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skiptoken",
          "in" : "query",
          "description" : "The page-continuation token to use with a paged version of this API.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. At least one monitor is found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitorsCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get details of a single monitor.",
        "operationId" : "Monitors_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "monitorId",
          "in" : "path",
          "description" : "Monitor Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. monitor is found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Monitor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Update a Monitor's configuration.",
        "operationId" : "Monitors_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "monitorId",
          "in" : "path",
          "description" : "Monitor Id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        } ],
        "requestBody" : {
          "description" : "Body of the Monitor PATCH object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Monitor"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Existing monitor is updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Monitor"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/notificationSettings" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get list of notification settings for a resource.",
        "operationId" : "NotificationSettings_ListByResource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        }, {
          "name" : "$skiptoken",
          "in" : "query",
          "description" : "The page-continuation token to use with a paged version of this API.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. At least one component found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationSettingsCollection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/notificationSettings/{notificationSettingName}" : {
      "get" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Get a of notification setting for a resource.",
        "operationId" : "NotificationSettings_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "notificationSettingName",
          "in" : "path",
          "description" : "Default string modeled as parameter for URL to work correctly.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. At least one component found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationSetting"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "WLIExtension" ],
        "summary" : "Update notification settings for a resource.",
        "operationId" : "NotificationSettings_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The ID of the target subscription.",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group. The name is case insensitive.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "resourceNamespace",
          "in" : "path",
          "description" : "The Namespace of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceType",
          "in" : "path",
          "description" : "The type of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceName",
          "in" : "path",
          "description" : "Name of the resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "notificationSettingName",
          "in" : "path",
          "description" : "Default string modeled as parameter for URL to work correctly.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for this operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "2018-08-31-preview" ]
          }
        } ],
        "requestBody" : {
          "description" : "Body of the NotificationSetting PUT object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationSetting"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. At least one component found.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationSetting"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Component" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "For optimistic concurrency control.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/ComponentProperties"
          }
        },
        "description" : "Model for component.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "ComponentProperties" : {
        "type" : "object",
        "properties" : {
          "aggregateProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Properties requested in aggregation queries.",
            "readOnly" : true
          },
          "children" : {
            "type" : "array",
            "description" : "component children.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Component"
            }
          },
          "componentName" : {
            "type" : "string",
            "description" : "Name of the component.",
            "readOnly" : true
          },
          "componentTypeGroupCategory" : {
            "type" : "string",
            "description" : "Component type group category. Classification of component type groups into a logical category. e.g. Network, Disk, Memory, CPU.",
            "readOnly" : true
          },
          "componentTypeId" : {
            "type" : "string",
            "description" : "ID of the component type.",
            "readOnly" : true
          },
          "componentTypeName" : {
            "type" : "string",
            "description" : "Name of the component type. Qualifies the type of component such as whether it is a SQL database, logical disk, website, etc.",
            "readOnly" : true
          },
          "healthState" : {
            "type" : "string",
            "description" : "Health state of the component.",
            "readOnly" : true,
            "enum" : [ "Error", "Warning", "Success", "Unknown", "Uninitialized" ]
          },
          "healthStateCategory" : {
            "type" : "string",
            "description" : "Category of component's health state.",
            "readOnly" : true,
            "enum" : [ "Identity", "CustomGroup" ]
          },
          "healthStateChangesEndTime" : {
            "type" : "string",
            "description" : "End time for health state changes.",
            "format" : "date-time",
            "readOnly" : true
          },
          "healthStateChangesStartTime" : {
            "type" : "string",
            "description" : "Start time for health state changes.",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastHealthStateChangeTime" : {
            "type" : "string",
            "description" : "Time of last health state change.",
            "format" : "date-time",
            "readOnly" : true
          },
          "solutionId" : {
            "type" : "string",
            "description" : "ID of the OMS solution this component belong to.",
            "readOnly" : true
          },
          "vmId" : {
            "type" : "string",
            "description" : "ID of the VM this component belongs to.",
            "readOnly" : true
          },
          "vmName" : {
            "type" : "string",
            "description" : "Name of the VM this component belongs to.",
            "readOnly" : true
          },
          "vmTags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Tags on the VM this component belongs to.",
            "readOnly" : true
          },
          "workloadType" : {
            "type" : "string",
            "description" : "Type of the workload.",
            "readOnly" : true,
            "enum" : [ "BaseOS", "SQL", "IIS", "Apache" ]
          },
          "workspaceId" : {
            "type" : "string",
            "description" : "ID of the workspace.",
            "readOnly" : true
          }
        },
        "description" : "Model for properties of a component."
      },
      "ComponentsCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of components.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Component"
            }
          }
        },
        "description" : "Model for collection of components."
      },
      "ErrorFieldContract" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Property level error code."
          },
          "message" : {
            "type" : "string",
            "description" : "Human-readable representation of property-level error."
          },
          "target" : {
            "type" : "string",
            "description" : "Property name."
          }
        },
        "description" : "Error field contract."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
          },
          "details" : {
            "type" : "array",
            "description" : "The list of invalid fields send in request, in case of validation error.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorFieldContract"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Human-readable representation of the error."
          }
        },
        "description" : "Error body contract."
      },
      "HealthStateChange" : {
        "type" : "object",
        "properties" : {
          "healthState" : {
            "type" : "string",
            "description" : "Health state of monitor instance.",
            "readOnly" : true,
            "enum" : [ "Error", "Warning", "Success", "Unknown", "Uninitialized" ]
          },
          "healthStateChangeTime" : {
            "type" : "string",
            "description" : "Time at which this Health state was reached.",
            "format" : "date-time",
            "readOnly" : true
          }
        },
        "description" : "Model for health state change"
      },
      "Monitor" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "For optimistic concurrency control.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/MonitorProperties"
          }
        },
        "description" : "Model for Monitor",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "MonitorCriteria" : {
        "type" : "object",
        "properties" : {
          "comparisonOperator" : {
            "type" : "string",
            "description" : "Comparison enum on threshold of this criteria",
            "readOnly" : true,
            "enum" : [ "Equals", "GreaterThan", "GreaterThanOrEqual", "LessThan", "LessThanOrEqual", "NotEquals" ]
          },
          "healthState" : {
            "type" : "string",
            "description" : "Target health state of the criteria",
            "readOnly" : true,
            "enum" : [ "Error", "Warning", "Success", "Unknown", "Uninitialized" ]
          },
          "threshold" : {
            "type" : "number",
            "description" : "Threshold value for this criteria",
            "format" : "double",
            "readOnly" : true
          }
        },
        "description" : "Criteria for monitor configuration"
      },
      "MonitorInstance" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "For optimistic concurrency control.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/MonitorInstanceProperties"
          }
        },
        "description" : "Model for monitor instance.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "MonitorInstanceProperties" : {
        "type" : "object",
        "properties" : {
          "aggregateProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Properties requested in aggregation queries.",
            "readOnly" : true
          },
          "alertGeneration" : {
            "type" : "string",
            "description" : "Generates alert or not.",
            "readOnly" : true,
            "enum" : [ "Enabled", "Disabled" ]
          },
          "children" : {
            "type" : "array",
            "description" : "Health instance children.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MonitorInstance"
            }
          },
          "componentId" : {
            "type" : "string",
            "description" : "ID of the component.",
            "readOnly" : true
          },
          "componentName" : {
            "type" : "string",
            "description" : "Name of the component.",
            "readOnly" : true
          },
          "componentTypeId" : {
            "type" : "string",
            "description" : "ID of the component type.",
            "readOnly" : true
          },
          "componentTypeName" : {
            "type" : "string",
            "description" : "Name of the component type. Qualifies the type of component such as whether it is a SQL database, logical disk, website, etc.",
            "readOnly" : true
          },
          "healthState" : {
            "type" : "string",
            "description" : "Health state of monitor instance.",
            "readOnly" : true,
            "enum" : [ "Error", "Warning", "Success", "Unknown", "Uninitialized" ]
          },
          "healthStateCategory" : {
            "type" : "string",
            "description" : "Category of monitor instance's health state.",
            "readOnly" : true,
            "enum" : [ "Identity", "CustomGroup" ]
          },
          "healthStateChanges" : {
            "type" : "array",
            "description" : "Health state changes.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/HealthStateChange"
            }
          },
          "healthStateChangesEndTime" : {
            "type" : "string",
            "description" : "End time for health state changes.",
            "format" : "date-time",
            "readOnly" : true
          },
          "healthStateChangesStartTime" : {
            "type" : "string",
            "description" : "Start time for health state changes.",
            "format" : "date-time",
            "readOnly" : true
          },
          "lastHealthStateChangeTime" : {
            "type" : "string",
            "description" : "Time of last health state change.",
            "format" : "date-time",
            "readOnly" : true
          },
          "monitorCategory" : {
            "type" : "string",
            "description" : "Monitor type category. Indicates the attribute of the component that the health criteria monitors such as Performance, Availability, etc.",
            "readOnly" : true,
            "enum" : [ "AvailabilityHealth", "Configuration", "EntityHealth", "PerformanceHealth", "Security" ]
          },
          "monitorId" : {
            "type" : "string",
            "description" : "ID of the monitor instance.",
            "readOnly" : true
          },
          "monitorName" : {
            "type" : "string",
            "description" : "Name of the monitor.",
            "readOnly" : true
          },
          "monitorType" : {
            "type" : "string",
            "description" : "Type of the monitor. The qualifier for the health criteria depending on the functionality it performs such as Unit, Aggregate, Dependency.",
            "readOnly" : true,
            "enum" : [ "Aggregate", "Dependency", "Unit" ]
          },
          "solutionId" : {
            "type" : "string",
            "description" : "ID of the OMS solution this health instance belong to.",
            "readOnly" : true
          },
          "workloadType" : {
            "type" : "string",
            "description" : "Type of the workload.",
            "readOnly" : true,
            "enum" : [ "BaseOS", "SQL", "IIS", "Apache" ]
          },
          "workspaceId" : {
            "type" : "string",
            "description" : "ID of the workspace.",
            "readOnly" : true
          }
        },
        "description" : "Model for properties of a monitor instance."
      },
      "MonitorInstancesCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of health instances.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MonitorInstance"
            }
          }
        },
        "description" : "Model for collection of health instances."
      },
      "MonitorProperties" : {
        "type" : "object",
        "properties" : {
          "alertGeneration" : {
            "type" : "string",
            "description" : "Generates alerts or not",
            "readOnly" : true,
            "enum" : [ "Enabled", "Disabled" ]
          },
          "componentTypeDisplayName" : {
            "type" : "string",
            "description" : "Component Type Display Name of the monitor",
            "readOnly" : true
          },
          "componentTypeId" : {
            "type" : "string",
            "description" : "Component Type Id of monitor",
            "readOnly" : true
          },
          "componentTypeName" : {
            "type" : "string",
            "description" : "Component Type Name of monitor",
            "readOnly" : true
          },
          "criteria" : {
            "type" : "array",
            "description" : "Collection of MonitorCriteria. For PATCH calls, instead of partial list, complete list of expected criteria should be passed for proper updating.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/MonitorCriteria"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the monitor",
            "readOnly" : true
          },
          "documentationURL" : {
            "type" : "string",
            "description" : "URL pointing to the documentation of the monitor",
            "readOnly" : true
          },
          "frequency" : {
            "type" : "integer",
            "description" : "Frequency at which monitor condition is evaluated",
            "format" : "int32",
            "readOnly" : true
          },
          "lookbackDuration" : {
            "type" : "integer",
            "description" : "The duration in minutes in the past during which the monitor is evaluated",
            "format" : "int32",
            "readOnly" : true
          },
          "monitorCategory" : {
            "type" : "string",
            "description" : "Category of the monitor",
            "readOnly" : true,
            "enum" : [ "AvailabilityHealth", "Configuration", "EntityHealth", "PerformanceHealth", "Security" ]
          },
          "monitorDisplayName" : {
            "type" : "string",
            "description" : "User friendly display name of the monitor",
            "readOnly" : true
          },
          "monitorId" : {
            "type" : "string",
            "description" : "ID of the monitor",
            "readOnly" : true
          },
          "monitorName" : {
            "type" : "string",
            "description" : "Name of the monitor",
            "readOnly" : true
          },
          "monitorState" : {
            "type" : "string",
            "description" : "Is the monitor state enabled or disabled",
            "readOnly" : true,
            "enum" : [ "Enabled", "Disabled" ]
          },
          "monitorType" : {
            "type" : "string",
            "description" : "Type of the monitor",
            "readOnly" : true,
            "enum" : [ "Aggregate", "Dependency", "Unit" ]
          },
          "parentMonitorDisplayName" : {
            "type" : "string",
            "description" : "User friendly display name of the parent monitor",
            "readOnly" : true
          },
          "parentMonitorName" : {
            "type" : "string",
            "description" : "Name of the parent monitor",
            "readOnly" : true
          },
          "signalName" : {
            "type" : "string",
            "description" : "Name of the signal on which this monitor is configured.",
            "readOnly" : true
          },
          "signalType" : {
            "type" : "string",
            "description" : "Type of the signal on which this monitor is configured.",
            "readOnly" : true
          }
        },
        "description" : "Model for properties of a Monitor."
      },
      "MonitorsCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL for next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Collection of Monitor.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Monitor"
            }
          }
        },
        "description" : "Model for collection of Monitor."
      },
      "NotificationSetting" : {
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "For optimistic concurrency control.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/NotificationSettingProperties"
          }
        },
        "description" : "Model for NotificationSetting.",
        "allOf" : [ {
          "description" : "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the resource",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                "readOnly" : true
              }
            }
          } ]
        } ]
      },
      "NotificationSettingProperties" : {
        "type" : "object",
        "properties" : {
          "actionGroupResourceIds" : {
            "type" : "array",
            "description" : "List of action group resource ids to be notified",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Model for properties of a NotificationSetting."
      },
      "NotificationSettingsCollection" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationSetting"
            }
          }
        },
        "description" : "Model for collection of notificationSettings."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationProperties"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource operation.",
            "readOnly" : true
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the operation.",
            "readOnly" : true
          }
        },
        "description" : "Operation supported by the resource provider."
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of operations.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Container for a list of operations supported by the resource provider."
      },
      "OperationProperties" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the resource provider.",
            "readOnly" : true
          },
          "operation" : {
            "type" : "string",
            "description" : "This operation name.",
            "readOnly" : true
          },
          "provider" : {
            "type" : "string",
            "description" : "The provider name.",
            "readOnly" : true
          },
          "resource" : {
            "type" : "string",
            "description" : "The resource name.",
            "readOnly" : true
          }
        },
        "description" : "Properties of an operation supported by the resource provider."
      }
    },
    "parameters" : {
      "api-version" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for this operation.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "2018-08-31-preview" ]
        }
      },
      "componentId" : {
        "name" : "componentId",
        "in" : "path",
        "description" : "Component Id.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "monitorId" : {
        "name" : "monitorId",
        "in" : "path",
        "description" : "Id of the Monitor.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "monitorInstanceId" : {
        "name" : "monitorInstanceId",
        "in" : "path",
        "description" : "MonitorInstance Id.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      },
      "notificationSettingName" : {
        "name" : "notificationSettingName",
        "in" : "path",
        "description" : "Default string modeled as parameter for URL to work correctly.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "default" ]
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}