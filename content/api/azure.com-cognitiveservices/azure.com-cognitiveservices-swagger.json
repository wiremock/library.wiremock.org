{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "CognitiveServicesManagementClient",
    "description" : "Cognitive Services Management Client",
    "version" : "2017-04-18"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/providers/Microsoft.CognitiveServices/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all the available Cognitive Services account operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationEntityListResult"
                }
              }
            }
          }
        },
        "deprecated" : false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/accounts" : {
      "get" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Returns all the resources of a particular type belonging to a subscription.",
        "operationId" : "Accounts_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccountListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/checkDomainAvailability" : {
      "post" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Check whether a domain is available.",
        "operationId" : "CheckDomainAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Check Domain Availability parameter.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckDomainAvailabilityParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckDomainAvailabilityResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkSkuAvailability" : {
      "post" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Check available SKUs.",
        "operationId" : "CheckSkuAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "Resource location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Check SKU Availability POST body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckSkuAvailabilityParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckSkuAvailabilityResultList"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/skus" : {
      "get" : {
        "tags" : [ "Skus", "CognitiveServicesAccounts" ],
        "description" : "Gets the list of Microsoft.CognitiveServices SKUs available for your Subscription.",
        "operationId" : "ResourceSkus_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResourceSkusResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts" : {
      "get" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Returns all the resources of a particular type belonging to a resource group",
        "operationId" : "Accounts_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.\nThe nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with \"value\" property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.\nThe nextLink should be implemented using following query parameters:\n路 skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.\n路 top: the optional client query parameter which defines the maximum number of records to be returned by the server.\nImplementation details:\n路 NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. \n路 Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. \nClients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccountListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}" : {
      "get" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Returns a Cognitive Services account specified by the parameters.",
        "operationId" : "Accounts_GetProperties",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\t路 a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) should be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Create Cognitive Services Account. Accounts is a resource group wide resource type. It holds the keys for developer to access intelligent APIs. It's also the resource type for billing.",
        "operationId" : "Accounts_Create",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters to provide for the created account.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CognitiveServicesAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If resource is created successfully or already existed, the service should return 200 (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "If resource is created successfully, the service should return 201 (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccount"
                }
              }
            }
          },
          "202" : {
            "description" : "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Deletes a Cognitive Services account from the resource group. ",
        "operationId" : "Accounts_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A 200 (OK) should be returned if the object exists and was deleted successfully;"
          },
          "202" : {
            "description" : "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously."
          },
          "204" : {
            "description" : "a 204 (NoContent) should be used if the resource does not exist and the request is well formed."
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Updates a Cognitive Services account",
        "operationId" : "Accounts_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters to provide for the created account.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CognitiveServicesAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The resource provider should return 200 (OK) to indicate that the operation completed successfully. ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccount"
                }
              }
            }
          },
          "202" : {
            "description" : "HTTP 202 (Accepted) if the operation was successfully started and will complete asynchronously.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccount"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/listKeys" : {
      "post" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Lists the account keys for the specified Cognitive Services account.",
        "operationId" : "Accounts_ListKeys",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns with a response body containing the subscription keys for the resource: key1\nThe first API key for authentication when client calls the API endpoint.\n\nkey2\nThe second API key for authentication when client calls the API endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccountKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/regenerateKey" : {
      "post" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Regenerates the specified account key for the specified Cognitive Services account.",
        "operationId" : "Accounts_RegenerateKey",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "regenerate key parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegenerateKeyParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccountKeys"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/skus" : {
      "get" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "List available SKUs for the requested Cognitive Services account",
        "operationId" : "Accounts_ListSkus",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\t路 Free\n\t路 Basic\n\t路 Standard\n\t路 Premium\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CognitiveServicesAccountEnumerateSkusResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/usages" : {
      "get" : {
        "tags" : [ "CognitiveServicesAccounts" ],
        "description" : "Get usages for the requested Cognitive Services account",
        "operationId" : "Accounts_GetUsages",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group within the user's subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountName",
          "in" : "path",
          "description" : "The name of Cognitive Services account.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 2,
            "pattern" : "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Azure Subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The usages for Cognitive Services account were retrieved successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsagesResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed. If the resource does not exist, 404 (NotFound) will be returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CheckDomainAvailabilityParameter" : {
        "required" : [ "subdomainName", "type" ],
        "type" : "object",
        "properties" : {
          "subdomainName" : {
            "type" : "string",
            "description" : "The subdomain name to use."
          },
          "type" : {
            "type" : "string",
            "description" : "The Type of the resource."
          }
        },
        "description" : "Check Domain availability parameter."
      },
      "CheckDomainAvailabilityResult" : {
        "type" : "object",
        "properties" : {
          "isSubdomainAvailable" : {
            "type" : "boolean",
            "description" : "Indicates the given SKU is available or not."
          },
          "reason" : {
            "type" : "string",
            "description" : "Reason why the SKU is not available."
          },
          "subdomainName" : {
            "type" : "string",
            "description" : "The subdomain name to use."
          },
          "type" : {
            "type" : "string",
            "description" : "The Type of the resource."
          }
        },
        "description" : "Check Domain availability result."
      },
      "CheckSkuAvailabilityParameter" : {
        "required" : [ "kind", "skus", "type" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/CognitiveServicesAccountKind"
          },
          "skus" : {
            "type" : "array",
            "description" : "The SKU of the resource.",
            "items" : {
              "$ref" : "#/components/schemas/SkuName"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The Type of the resource."
          }
        },
        "description" : "Check SKU availability parameter."
      },
      "CheckSkuAvailabilityResult" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/CognitiveServicesAccountKind"
          },
          "message" : {
            "type" : "string",
            "description" : "Additional error message."
          },
          "reason" : {
            "type" : "string",
            "description" : "Reason why the SKU is not available."
          },
          "skuAvailable" : {
            "type" : "boolean",
            "description" : "Indicates the given SKU is available or not."
          },
          "skuName" : {
            "$ref" : "#/components/schemas/SkuName"
          },
          "type" : {
            "type" : "string",
            "description" : "The Type of the resource."
          }
        },
        "description" : "Check SKU availability result."
      },
      "CheckSkuAvailabilityResultList" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Check SKU availability result list.",
            "items" : {
              "$ref" : "#/components/schemas/CheckSkuAvailabilityResult"
            }
          }
        },
        "description" : "Check SKU availability result list."
      },
      "CognitiveServicesAccount" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Entity Tag",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The id of the created account",
            "readOnly" : true
          },
          "kind" : {
            "$ref" : "#/components/schemas/CognitiveServicesAccountKind"
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the resource"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the created account",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/CognitiveServicesAccountProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters."
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type",
            "readOnly" : true
          }
        },
        "description" : "Cognitive Services Account is an Azure resource representing the provisioned account, its type, location and SKU."
      },
      "CognitiveServicesAccountApiProperties" : {
        "type" : "object",
        "properties" : {
          "eventHubConnectionString" : {
            "maxLength" : 1000,
            "pattern" : "^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$",
            "type" : "string",
            "description" : "(Personalization Only) The flag to enable statistics of Bing Search."
          },
          "qnaRuntimeEndpoint" : {
            "type" : "string",
            "description" : "(QnAMaker Only) The runtime endpoint of QnAMaker."
          },
          "statisticsEnabled" : {
            "type" : "boolean",
            "description" : "(Bing Search Only) The flag to enable statistics of Bing Search."
          },
          "storageAccountConnectionString" : {
            "maxLength" : 1000,
            "pattern" : "^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$",
            "type" : "string",
            "description" : "(Personalization Only) The storage account connection string."
          }
        },
        "description" : "The api properties for special APIs."
      },
      "CognitiveServicesAccountEnumerateSkusResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "Gets the list of Cognitive Services accounts and their properties.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CognitiveServicesResourceAndSku"
            }
          }
        },
        "description" : "The list of cognitive services accounts operation response."
      },
      "CognitiveServicesAccountKeys" : {
        "type" : "object",
        "properties" : {
          "key1" : {
            "type" : "string",
            "description" : "Gets the value of key 1."
          },
          "key2" : {
            "type" : "string",
            "description" : "Gets the value of key 2."
          }
        },
        "description" : "The access keys for the cognitive services account."
      },
      "CognitiveServicesAccountKind" : {
        "type" : "string",
        "description" : "Required. Indicates the type of cognitive service account."
      },
      "CognitiveServicesAccountListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link used to get the next page of accounts."
          },
          "value" : {
            "type" : "array",
            "description" : "Gets the list of Cognitive Services accounts and their properties.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CognitiveServicesAccount"
            }
          }
        },
        "description" : "The list of cognitive services accounts operation response."
      },
      "CognitiveServicesAccountProperties" : {
        "type" : "object",
        "properties" : {
          "apiProperties" : {
            "$ref" : "#/components/schemas/CognitiveServicesAccountApiProperties"
          },
          "customSubDomainName" : {
            "type" : "string",
            "description" : "Optional subdomain name used for token-based authentication."
          },
          "endpoint" : {
            "type" : "string",
            "description" : "Endpoint of the created account.",
            "readOnly" : true
          },
          "internalId" : {
            "type" : "string",
            "description" : "The internal identifier.",
            "readOnly" : true
          },
          "networkAcls" : {
            "$ref" : "#/components/schemas/NetworkRuleSet"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Gets the status of the cognitive services account at the time the operation was called.",
            "readOnly" : true,
            "enum" : [ "Creating", "ResolvingDNS", "Moving", "Deleting", "Succeeded", "Failed" ]
          }
        },
        "description" : "Properties of Cognitive Services account."
      },
      "CognitiveServicesResourceAndSku" : {
        "type" : "object",
        "properties" : {
          "resourceType" : {
            "type" : "string",
            "description" : "Resource Namespace and Type"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "Cognitive Services resource type and SKU."
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorBody"
          }
        },
        "description" : "Cognitive Services error object."
      },
      "ErrorBody" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "error code"
          },
          "message" : {
            "type" : "string",
            "description" : "error message"
          }
        },
        "description" : "Cognitive Services error body."
      },
      "IpRule" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78)."
          }
        },
        "description" : "A rule governing the accessibility from a specific ip address or ip range."
      },
      "MetricName" : {
        "type" : "object",
        "properties" : {
          "localizedValue" : {
            "type" : "string",
            "description" : "The friendly name of the metric.",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The name of the metric.",
            "readOnly" : true
          }
        },
        "description" : "A metric name."
      },
      "NetworkRuleSet" : {
        "type" : "object",
        "properties" : {
          "defaultAction" : {
            "type" : "string",
            "description" : "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
            "enum" : [ "Allow", "Deny" ]
          },
          "ipRules" : {
            "type" : "array",
            "description" : "The list of IP address rules.",
            "items" : {
              "$ref" : "#/components/schemas/IpRule"
            }
          },
          "virtualNetworkRules" : {
            "type" : "array",
            "description" : "The list of virtual network rules.",
            "items" : {
              "$ref" : "#/components/schemas/VirtualNetworkRule"
            }
          }
        },
        "description" : "A set of rules governing the network accessibility."
      },
      "OperationDisplayInfo" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the operation."
          },
          "operation" : {
            "type" : "string",
            "description" : "The action that users can perform, based on their permission level."
          },
          "provider" : {
            "type" : "string",
            "description" : "Service provider: Microsoft Cognitive Services."
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource on which the operation is performed."
          }
        },
        "description" : "The operation supported by Cognitive Services."
      },
      "OperationEntity" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDisplayInfo"
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}."
          },
          "origin" : {
            "type" : "string",
            "description" : "The origin of the operation."
          },
          "properties" : {
            "type" : "object",
            "description" : "Additional properties."
          }
        },
        "description" : "The operation supported by Cognitive Services."
      },
      "OperationEntityListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link used to get the next page of operations."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of operations.",
            "items" : {
              "$ref" : "#/components/schemas/OperationEntity"
            }
          }
        },
        "description" : "The list of cognitive services accounts operation response."
      },
      "RegenerateKeyParameters" : {
        "required" : [ "keyName" ],
        "type" : "object",
        "properties" : {
          "keyName" : {
            "type" : "string",
            "description" : "key name to generate (Key1|Key2)",
            "enum" : [ "Key1", "Key2" ]
          }
        },
        "description" : "Regenerate key parameters."
      },
      "ResourceSku" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "description" : "The Kind of resources that are supported in this SKU.",
            "readOnly" : true
          },
          "locations" : {
            "type" : "array",
            "description" : "The set of locations that the SKU is available.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of SKU.",
            "readOnly" : true
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The type of resource the SKU applies to.",
            "readOnly" : true
          },
          "restrictions" : {
            "type" : "array",
            "description" : "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ResourceSkuRestrictions"
            }
          },
          "tier" : {
            "type" : "string",
            "description" : "Specifies the tier of Cognitive Services account.",
            "readOnly" : true
          }
        },
        "description" : "Describes an available Cognitive Services SKU."
      },
      "ResourceSkuRestrictionInfo" : {
        "type" : "object",
        "properties" : {
          "locations" : {
            "type" : "array",
            "description" : "Locations where the SKU is restricted",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "zones" : {
            "type" : "array",
            "description" : "List of availability zones where the SKU is restricted.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ResourceSkuRestrictions" : {
        "type" : "object",
        "properties" : {
          "reasonCode" : {
            "type" : "string",
            "description" : "The reason for restriction.",
            "readOnly" : true,
            "enum" : [ "QuotaId", "NotAvailableForSubscription" ]
          },
          "restrictionInfo" : {
            "$ref" : "#/components/schemas/ResourceSkuRestrictionInfo"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of restrictions.",
            "readOnly" : true,
            "enum" : [ "Location", "Zone" ]
          },
          "values" : {
            "type" : "array",
            "description" : "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Describes restrictions of a SKU."
      },
      "ResourceSkusResult" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The uri to fetch the next page of Skus."
          },
          "value" : {
            "type" : "array",
            "description" : "The list of skus available for the subscription.",
            "items" : {
              "$ref" : "#/components/schemas/ResourceSku"
            }
          }
        },
        "description" : "The Get Skus operation response."
      },
      "Sku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/SkuName"
          },
          "tier" : {
            "type" : "string",
            "description" : "Gets the sku tier. This is based on the SKU name.",
            "readOnly" : true,
            "enum" : [ "Free", "Standard", "Premium" ]
          }
        },
        "description" : "The SKU of the cognitive services account."
      },
      "SkuName" : {
        "type" : "string",
        "description" : "The name of SKU."
      },
      "UnitType" : {
        "type" : "string",
        "description" : "The unit of the metric.",
        "enum" : [ "Count", "Bytes", "Seconds", "Percent", "CountPerSecond", "BytesPerSecond", "Milliseconds" ]
      },
      "Usage" : {
        "type" : "object",
        "properties" : {
          "currentValue" : {
            "type" : "number",
            "description" : "Current value for this metric.",
            "format" : "double",
            "readOnly" : true
          },
          "limit" : {
            "type" : "number",
            "description" : "Maximum value for this metric.",
            "format" : "double",
            "readOnly" : true
          },
          "name" : {
            "$ref" : "#/components/schemas/MetricName"
          },
          "nextResetTime" : {
            "type" : "string",
            "description" : "Next reset time for current quota.",
            "readOnly" : true
          },
          "quotaPeriod" : {
            "type" : "string",
            "description" : "The quota period used to summarize the usage values.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Cognitive Services account quota usage status.",
            "enum" : [ "Included", "Blocked", "InOverage", "Unknown" ]
          },
          "unit" : {
            "$ref" : "#/components/schemas/UnitType"
          }
        },
        "description" : "The usage data for a usage request."
      },
      "UsagesResult" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The list of usages for Cognitive Service account.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Usage"
            }
          }
        },
        "description" : "The response to a list usage request."
      },
      "VirtualNetworkRule" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'."
          },
          "ignoreMissingVnetServiceEndpoint" : {
            "type" : "boolean",
            "description" : "Ignore missing vnet service endpoint or not."
          },
          "state" : {
            "type" : "string",
            "description" : "Gets the state of virtual network rule."
          }
        },
        "description" : "A rule governing the accessibility from a specific virtual network."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Version of the API to be used with the client request. Current version is 2017-04-18",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "locationParameter" : {
        "name" : "location",
        "in" : "path",
        "description" : "Resource location.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Azure Subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "usageFilterParameter" : {
        "name" : "$filter",
        "in" : "query",
        "description" : "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}