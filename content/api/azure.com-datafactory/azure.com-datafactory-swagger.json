{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DataFactoryManagementClient",
    "version" : "2018-06-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.DataFactory/operations" : {
      "get" : {
        "tags" : [ "operations" ],
        "description" : "Lists the available Azure Data Factory API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories" : {
      "get" : {
        "tags" : [ "factories" ],
        "description" : "Lists factories under the specified subscription.",
        "operationId" : "Factories_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FactoryListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo" : {
      "post" : {
        "tags" : [ "factories" ],
        "description" : "Updates a factory's repo information.",
        "operationId" : "Factories_ConfigureFactoryRepo",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationId",
          "in" : "path",
          "description" : "The location identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update factory repo request definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FactoryRepoUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factory"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue" : {
      "post" : {
        "tags" : [ "exposureControl" ],
        "description" : "Get exposure control feature for specific location.",
        "operationId" : "ExposureControl_GetFeatureValue",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationId",
          "in" : "path",
          "description" : "The location identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The exposure control request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExposureControlRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExposureControlResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories" : {
      "get" : {
        "tags" : [ "factories" ],
        "description" : "Lists factories.",
        "operationId" : "Factories_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FactoryListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}" : {
      "get" : {
        "tags" : [ "factories" ],
        "description" : "Gets a factory.",
        "operationId" : "Factories_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "ETag of the factory entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factory"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "factories" ],
        "description" : "Creates or updates a factory.",
        "operationId" : "Factories_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the factory entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Factory resource definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Factory"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factory"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "factories" ],
        "description" : "Deletes a factory.",
        "operationId" : "Factories_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "factories" ],
        "description" : "Updates a factory.",
        "operationId" : "Factories_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for updating a factory.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FactoryUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factory"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/addDataFlowToDebugSession" : {
      "post" : {
        "tags" : [ "dataFlowDebugSession" ],
        "description" : "Add a data flow into debug session.",
        "operationId" : "DataFlowDebugSession_AddDataFlow",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data flow debug session definition with debug content.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataFlowDebugPackage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddDataFlowToDebugSessionResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/createDataFlowDebugSession" : {
      "post" : {
        "tags" : [ "dataFlowDebugSession" ],
        "description" : "Creates a data flow debug session.",
        "operationId" : "DataFlowDebugSession_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data flow debug session definition",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDataFlowDebugSessionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDataFlowDebugSessionResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted.",
            "headers" : {
              "location" : {
                "description" : "URI to poll for asynchronous operation status.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows" : {
      "get" : {
        "tags" : [ "dataFlows" ],
        "description" : "Lists data flows.",
        "operationId" : "DataFlows_ListByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFlowListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}" : {
      "get" : {
        "tags" : [ "dataFlows" ],
        "description" : "Gets a data flow.",
        "operationId" : "DataFlows_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "dataFlowName",
          "in" : "path",
          "description" : "The data flow name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "ETag of the data flow entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFlowResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "dataFlows" ],
        "description" : "Creates or updates a data flow.",
        "operationId" : "DataFlows_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "dataFlowName",
          "in" : "path",
          "description" : "The data flow name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the data flow entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data flow resource definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataFlowResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFlowResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "dataFlows" ],
        "description" : "Deletes a data flow.",
        "operationId" : "DataFlows_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "dataFlowName",
          "in" : "path",
          "description" : "The data flow name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets" : {
      "get" : {
        "tags" : [ "datasets" ],
        "description" : "Lists datasets.",
        "operationId" : "Datasets_ListByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatasetListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}" : {
      "get" : {
        "tags" : [ "datasets" ],
        "description" : "Gets a dataset.",
        "operationId" : "Datasets_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "datasetName",
          "in" : "path",
          "description" : "The dataset name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "ETag of the dataset entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatasetResource"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "datasets" ],
        "description" : "Creates or updates a dataset.",
        "operationId" : "Datasets_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "datasetName",
          "in" : "path",
          "description" : "The dataset name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the dataset entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Dataset resource definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DatasetResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatasetResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "datasets" ],
        "description" : "Deletes a dataset.",
        "operationId" : "Datasets_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "datasetName",
          "in" : "path",
          "description" : "The dataset name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/deleteDataFlowDebugSession" : {
      "post" : {
        "tags" : [ "dataFlowDebugSession" ],
        "description" : "Deletes a data flow debug session.",
        "operationId" : "DataFlowDebugSession_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data flow debug session definition for deletion",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeleteDataFlowDebugSessionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/executeDataFlowDebugCommand" : {
      "post" : {
        "tags" : [ "dataFlowDebugSession" ],
        "description" : "Execute a data flow debug command.",
        "operationId" : "DataFlowDebugSession_ExecuteCommand",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data flow debug command definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataFlowDebugCommandRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataFlowDebugCommandResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted.",
            "headers" : {
              "location" : {
                "description" : "URI to poll for asynchronous operation status.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getDataPlaneAccess" : {
      "post" : {
        "tags" : [ "factories" ],
        "description" : "Get Data Plane access.",
        "operationId" : "Factories_GetDataPlaneAccess",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Data Plane user access policy definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserAccessPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessPolicyResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue" : {
      "post" : {
        "tags" : [ "exposureControl" ],
        "description" : "Get exposure control feature for specific factory.",
        "operationId" : "ExposureControl_GetFeatureValueByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The exposure control request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExposureControlRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExposureControlResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getGitHubAccessToken" : {
      "post" : {
        "tags" : [ "factories" ],
        "description" : "Get GitHub Access Token.",
        "operationId" : "Factories_GetGitHubAccessToken",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Get GitHub access token request definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GitHubAccessTokenRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GitHubAccessTokenResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes" : {
      "get" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Lists integration runtimes.",
        "operationId" : "IntegrationRuntimes_ListByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationRuntimeListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}" : {
      "get" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Gets an integration runtime.",
        "operationId" : "IntegrationRuntimes_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified."
          },
          "default" : {
            "description" : "An error response received from GET integration runtime operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Creates or updates an integration runtime.",
        "operationId" : "IntegrationRuntimes_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Integration runtime resource definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IntegrationRuntimeResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from PUT integration runtime operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Deletes an integration runtime.",
        "operationId" : "IntegrationRuntimes_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from DELETE integration runtime operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Updates an integration runtime.",
        "operationId" : "IntegrationRuntimes_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for updating an integration runtime.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateIntegrationRuntimeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.",
        "operationId" : "IntegrationRuntimes_GetConnectionInfo",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "hostServiceUri" : {
                      "type" : "string",
                      "description" : "The on-premises integration runtime host URL.",
                      "readOnly" : true
                    },
                    "identityCertThumbprint" : {
                      "type" : "string",
                      "description" : "The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.",
                      "readOnly" : true
                    },
                    "isIdentityCertExprired" : {
                      "type" : "boolean",
                      "description" : "Whether the identity certificate is expired.",
                      "readOnly" : true
                    },
                    "publicKey" : {
                      "type" : "string",
                      "description" : "The public key for encrypting a credential when transferring the credential to the integration runtime.",
                      "readOnly" : true
                    },
                    "serviceToken" : {
                      "type" : "string",
                      "description" : "The token generated in service. Callers use this token to authenticate to integration runtime.",
                      "readOnly" : true
                    },
                    "version" : {
                      "type" : "string",
                      "description" : "The integration runtime version.",
                      "readOnly" : true
                    }
                  },
                  "additionalProperties" : {
                    "type" : "object"
                  },
                  "description" : "Connection information for encrypting the on-premises data source credentials."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata" : {
      "post" : {
        "tags" : [ "integrationRuntimeObjectMetadata" ],
        "description" : "Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.",
        "operationId" : "IntegrationRuntimeObjectMetadata_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for getting a SSIS object metadata.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetSsisObjectMetadataRequest"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "The link to the next page of results, if any remaining results exist."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of SSIS object metadata.",
                      "items" : {
                        "required" : [ "type" ],
                        "type" : "object",
                        "properties" : {
                          "description" : {
                            "type" : "string",
                            "description" : "Metadata description."
                          },
                          "id" : {
                            "type" : "integer",
                            "description" : "Metadata id.",
                            "format" : "int64"
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Metadata name."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The type of SSIS object metadata.",
                            "enum" : [ "Folder", "Project", "Package", "Environment" ]
                          }
                        },
                        "description" : "SSIS object metadata."
                      }
                    }
                  },
                  "description" : "A list of SSIS object metadata."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Gets detailed status information for an integration runtime.",
        "operationId" : "IntegrationRuntimes_GetStatus",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/linkedIntegrationRuntime" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Create a linked integration runtime entry in a shared integration runtime.",
        "operationId" : "IntegrationRuntimes_CreateLinkedIntegrationRuntime",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The linked integration runtime properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateLinkedIntegrationRuntimeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Retrieves the authentication keys for an integration runtime.",
        "operationId" : "IntegrationRuntimes_ListAuthKeys",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "authKey1" : {
                      "type" : "string",
                      "description" : "The primary integration runtime authentication key."
                    },
                    "authKey2" : {
                      "type" : "string",
                      "description" : "The secondary integration runtime authentication key."
                    }
                  },
                  "description" : "The integration runtime authentication keys."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.",
        "operationId" : "IntegrationRuntimes_GetMonitoringData",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Integration runtime name."
                    },
                    "nodes" : {
                      "type" : "array",
                      "description" : "Integration runtime node monitoring data.",
                      "items" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "object"
                        },
                        "description" : "Monitoring data for integration runtime node."
                      }
                    }
                  },
                  "description" : "Get monitoring data response."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}" : {
      "get" : {
        "tags" : [ "integrationRuntimeNodes" ],
        "description" : "Gets a self-hosted integration runtime node.",
        "operationId" : "IntegrationRuntimeNodes_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The integration runtime node name.",
          "required" : true,
          "schema" : {
            "maxLength" : 150,
            "minLength" : 1,
            "pattern" : "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "capabilities" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "The integration runtime capabilities dictionary",
                      "readOnly" : true
                    },
                    "concurrentJobsLimit" : {
                      "type" : "integer",
                      "description" : "Maximum concurrent jobs on the integration runtime node.",
                      "readOnly" : true
                    },
                    "expiryTime" : {
                      "type" : "string",
                      "description" : "The time at which the integration runtime will expire in ISO8601 format.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "hostServiceUri" : {
                      "type" : "string",
                      "description" : "URI for the host machine of the integration runtime.",
                      "readOnly" : true
                    },
                    "isActiveDispatcher" : {
                      "type" : "boolean",
                      "description" : "Indicates whether this node is the active dispatcher for integration runtime requests.",
                      "readOnly" : true
                    },
                    "lastConnectTime" : {
                      "type" : "string",
                      "description" : "The most recent time at which the integration runtime was connected in ISO8601 format.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastEndUpdateTime" : {
                      "type" : "string",
                      "description" : "The last time for the integration runtime node update end.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastStartTime" : {
                      "type" : "string",
                      "description" : "The time the node last started up.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastStartUpdateTime" : {
                      "type" : "string",
                      "description" : "The last time for the integration runtime node update start.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastStopTime" : {
                      "type" : "string",
                      "description" : "The integration runtime node last stop time.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastUpdateResult" : {
                      "type" : "string",
                      "description" : "The result of the last integration runtime node update.",
                      "readOnly" : true,
                      "enum" : [ "None", "Succeed", "Fail" ]
                    },
                    "machineName" : {
                      "type" : "string",
                      "description" : "Machine name of the integration runtime node.",
                      "readOnly" : true
                    },
                    "maxConcurrentJobs" : {
                      "type" : "integer",
                      "description" : "The maximum concurrent jobs in this integration runtime.",
                      "readOnly" : true
                    },
                    "nodeName" : {
                      "type" : "string",
                      "description" : "Name of the integration runtime node.",
                      "readOnly" : true
                    },
                    "registerTime" : {
                      "type" : "string",
                      "description" : "The time at which the integration runtime node was registered in ISO8601 format.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Status of the integration runtime node.",
                      "readOnly" : true,
                      "enum" : [ "NeedRegistration", "Online", "Limited", "Offline", "Upgrading", "Initializing", "InitializeFailed" ]
                    },
                    "version" : {
                      "type" : "string",
                      "description" : "Version of the integration runtime node.",
                      "readOnly" : true
                    },
                    "versionStatus" : {
                      "type" : "string",
                      "description" : "Status of the integration runtime node version.",
                      "readOnly" : true
                    }
                  },
                  "additionalProperties" : {
                    "type" : "object"
                  },
                  "description" : "Properties of Self-hosted integration runtime node."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "integrationRuntimeNodes" ],
        "description" : "Deletes a self-hosted integration runtime node.",
        "operationId" : "IntegrationRuntimeNodes_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The integration runtime node name.",
          "required" : true,
          "schema" : {
            "maxLength" : 150,
            "minLength" : 1,
            "pattern" : "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "integrationRuntimeNodes" ],
        "description" : "Updates a self-hosted integration runtime node.",
        "operationId" : "IntegrationRuntimeNodes_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The integration runtime node name.",
          "required" : true,
          "schema" : {
            "maxLength" : 150,
            "minLength" : 1,
            "pattern" : "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for updating an integration runtime node.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateIntegrationRuntimeNodeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "capabilities" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "The integration runtime capabilities dictionary",
                      "readOnly" : true
                    },
                    "concurrentJobsLimit" : {
                      "type" : "integer",
                      "description" : "Maximum concurrent jobs on the integration runtime node.",
                      "readOnly" : true
                    },
                    "expiryTime" : {
                      "type" : "string",
                      "description" : "The time at which the integration runtime will expire in ISO8601 format.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "hostServiceUri" : {
                      "type" : "string",
                      "description" : "URI for the host machine of the integration runtime.",
                      "readOnly" : true
                    },
                    "isActiveDispatcher" : {
                      "type" : "boolean",
                      "description" : "Indicates whether this node is the active dispatcher for integration runtime requests.",
                      "readOnly" : true
                    },
                    "lastConnectTime" : {
                      "type" : "string",
                      "description" : "The most recent time at which the integration runtime was connected in ISO8601 format.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastEndUpdateTime" : {
                      "type" : "string",
                      "description" : "The last time for the integration runtime node update end.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastStartTime" : {
                      "type" : "string",
                      "description" : "The time the node last started up.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastStartUpdateTime" : {
                      "type" : "string",
                      "description" : "The last time for the integration runtime node update start.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastStopTime" : {
                      "type" : "string",
                      "description" : "The integration runtime node last stop time.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "lastUpdateResult" : {
                      "type" : "string",
                      "description" : "The result of the last integration runtime node update.",
                      "readOnly" : true,
                      "enum" : [ "None", "Succeed", "Fail" ]
                    },
                    "machineName" : {
                      "type" : "string",
                      "description" : "Machine name of the integration runtime node.",
                      "readOnly" : true
                    },
                    "maxConcurrentJobs" : {
                      "type" : "integer",
                      "description" : "The maximum concurrent jobs in this integration runtime.",
                      "readOnly" : true
                    },
                    "nodeName" : {
                      "type" : "string",
                      "description" : "Name of the integration runtime node.",
                      "readOnly" : true
                    },
                    "registerTime" : {
                      "type" : "string",
                      "description" : "The time at which the integration runtime node was registered in ISO8601 format.",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Status of the integration runtime node.",
                      "readOnly" : true,
                      "enum" : [ "NeedRegistration", "Online", "Limited", "Offline", "Upgrading", "Initializing", "InitializeFailed" ]
                    },
                    "version" : {
                      "type" : "string",
                      "description" : "Version of the integration runtime node.",
                      "readOnly" : true
                    },
                    "versionStatus" : {
                      "type" : "string",
                      "description" : "Status of the integration runtime node version.",
                      "readOnly" : true
                    }
                  },
                  "additionalProperties" : {
                    "type" : "object"
                  },
                  "description" : "Properties of Self-hosted integration runtime node."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress" : {
      "post" : {
        "tags" : [ "integrationRuntimeNodes" ],
        "description" : "Get the IP address of self-hosted integration runtime node.",
        "operationId" : "IntegrationRuntimeNodes_GetIpAddress",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "nodeName",
          "in" : "path",
          "description" : "The integration runtime node name.",
          "required" : true,
          "schema" : {
            "maxLength" : 150,
            "minLength" : 1,
            "pattern" : "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "ipAddress" : {
                      "type" : "string",
                      "description" : "The IP address of self-hosted integration runtime node.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The IP address of self-hosted integration runtime node."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata" : {
      "post" : {
        "tags" : [ "integrationRuntimeObjectMetadata" ],
        "description" : "Refresh a SSIS integration runtime object metadata.",
        "operationId" : "IntegrationRuntimeObjectMetadata_Refresh",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SsisObjectMetadataStatusResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Regenerates the authentication key for an integration runtime.",
        "operationId" : "IntegrationRuntimes_RegenerateAuthKey",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for regenerating integration runtime authentication key.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "keyName" : {
                    "type" : "string",
                    "description" : "The name of the authentication key to regenerate.",
                    "enum" : [ "authKey1", "authKey2" ]
                  }
                },
                "description" : "Parameters to regenerate the authentication key."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "authKey1" : {
                      "type" : "string",
                      "description" : "The primary integration runtime authentication key."
                    },
                    "authKey2" : {
                      "type" : "string",
                      "description" : "The secondary integration runtime authentication key."
                    }
                  },
                  "description" : "The integration runtime authentication keys."
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeLinks" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.",
        "operationId" : "IntegrationRuntimes_RemoveLinks",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The data factory name for the linked integration runtime.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkedIntegrationRuntimeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Starts a ManagedReserved type integration runtime.",
        "operationId" : "IntegrationRuntimes_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Stops a ManagedReserved type integration runtime.",
        "operationId" : "IntegrationRuntimes_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "202" : {
            "description" : "Accepted."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.",
        "operationId" : "IntegrationRuntimes_SyncCredentials",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade" : {
      "post" : {
        "tags" : [ "integrationRuntimes" ],
        "description" : "Upgrade self-hosted integration runtime to latest version if availability.",
        "operationId" : "IntegrationRuntimes_Upgrade",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "integrationRuntimeName",
          "in" : "path",
          "description" : "The integration runtime name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices" : {
      "get" : {
        "tags" : [ "linkedServices" ],
        "description" : "Lists linked services.",
        "operationId" : "LinkedServices_ListByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedServiceListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}" : {
      "get" : {
        "tags" : [ "linkedServices" ],
        "description" : "Gets a linked service.",
        "operationId" : "LinkedServices_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "linkedServiceName",
          "in" : "path",
          "description" : "The linked service name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "ETag of the linked service entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedServiceResource"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "linkedServices" ],
        "description" : "Creates or updates a linked service.",
        "operationId" : "LinkedServices_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "linkedServiceName",
          "in" : "path",
          "description" : "The linked service name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the linkedService entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Linked service resource definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkedServiceResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedServiceResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "linkedServices" ],
        "description" : "Deletes a linked service.",
        "operationId" : "LinkedServices_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "linkedServiceName",
          "in" : "path",
          "description" : "The linked service name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}" : {
      "get" : {
        "tags" : [ "pipelineruns" ],
        "description" : "Get a pipeline run by its run ID.",
        "operationId" : "PipelineRuns_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "The pipeline run identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PipelineRun"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/cancel" : {
      "post" : {
        "tags" : [ "pipelineruns" ],
        "description" : "Cancel a pipeline run by its run ID.",
        "operationId" : "PipelineRuns_Cancel",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "The pipeline run identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isRecursive",
          "in" : "query",
          "description" : "If true, cancel all the Child pipelines that are triggered by the current pipeline.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Pipeline run has been canceled successfully. "
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/queryActivityruns" : {
      "post" : {
        "tags" : [ "activityruns" ],
        "description" : "Query activity runs based on input filter conditions.",
        "operationId" : "ActivityRuns_QueryByPipelineRun",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "The pipeline run identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to filter the activity runs.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RunFilterParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActivityRunsQueryResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines" : {
      "get" : {
        "tags" : [ "pipelines" ],
        "description" : "Lists pipelines.",
        "operationId" : "Pipelines_ListByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PipelineListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}" : {
      "get" : {
        "tags" : [ "pipelines" ],
        "description" : "Gets a pipeline.",
        "operationId" : "Pipelines_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "pipelineName",
          "in" : "path",
          "description" : "The pipeline name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PipelineResource"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "pipelines" ],
        "description" : "Creates or updates a pipeline.",
        "operationId" : "Pipelines_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "pipelineName",
          "in" : "path",
          "description" : "The pipeline name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Pipeline resource definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PipelineResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PipelineResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "pipelines" ],
        "description" : "Deletes a pipeline.",
        "operationId" : "Pipelines_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "pipelineName",
          "in" : "path",
          "description" : "The pipeline name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}/createRun" : {
      "post" : {
        "tags" : [ "pipelines" ],
        "description" : "Creates a run of a pipeline.",
        "operationId" : "Pipelines_CreateRun",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "pipelineName",
          "in" : "path",
          "description" : "The pipeline name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "referencePipelineRunId",
          "in" : "query",
          "description" : "The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isRecovery",
          "in" : "query",
          "description" : "Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "startActivityName",
          "in" : "query",
          "description" : "In recovery mode, the rerun will start from this activity. If not specified, all activities will run.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters of the pipeline run. These parameters will be used only if the runId is not specified.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ParameterValueSpecification"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateRunResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryDataFlowDebugSessions" : {
      "post" : {
        "tags" : [ "dataFlowDebugSession" ],
        "description" : "Query all active data flow debug sessions.",
        "operationId" : "DataFlowDebugSession_QueryByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryDataFlowDebugSessionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryPipelineRuns" : {
      "post" : {
        "tags" : [ "pipelineruns" ],
        "description" : "Query pipeline runs in the factory based on input filter conditions.",
        "operationId" : "PipelineRuns_QueryByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to filter the pipeline run.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RunFilterParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PipelineRunsQueryResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryTriggerRuns" : {
      "post" : {
        "tags" : [ "triggerruns" ],
        "description" : "Query trigger runs.",
        "operationId" : "TriggerRuns_QueryByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters to filter the pipeline run.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RunFilterParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerRunsQueryResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers" : {
      "get" : {
        "tags" : [ "triggers" ],
        "description" : "Lists triggers.",
        "operationId" : "Triggers_ListByFactory",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}" : {
      "get" : {
        "tags" : [ "trigger" ],
        "description" : "Gets a trigger.",
        "operationId" : "Triggers_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "ETag of the trigger entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerResource"
                }
              }
            }
          },
          "304" : {
            "description" : "Not modified."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "triggers" ],
        "description" : "Creates or updates a trigger.",
        "operationId" : "Triggers_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the trigger entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Trigger resource definition.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TriggerResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "triggers" ],
        "description" : "Deletes a trigger.",
        "operationId" : "Triggers_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No Content."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/getEventSubscriptionStatus" : {
      "post" : {
        "tags" : [ "triggers" ],
        "description" : "Get a trigger's event subscription status.",
        "operationId" : "Triggers_GetEventSubscriptionStatus",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger event subscription state.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerSubscriptionOperationStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/rerunTriggers" : {
      "get" : {
        "tags" : [ "rerunTriggers" ],
        "description" : "Lists rerun triggers by an original trigger name.",
        "operationId" : "RerunTriggers_ListByTrigger",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RerunTriggerListResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/rerunTriggers/{rerunTriggerName}" : {
      "put" : {
        "tags" : [ "rerunTriggers" ],
        "description" : "Creates a rerun trigger.",
        "operationId" : "RerunTriggers_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "rerunTriggerName",
          "in" : "path",
          "description" : "The rerun trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Rerun tumbling window trigger action parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RerunTumblingWindowTriggerActionParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerResource"
                }
              }
            }
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/rerunTriggers/{rerunTriggerName}/cancel" : {
      "post" : {
        "tags" : [ "rerunTriggers" ],
        "description" : "Cancels a trigger.",
        "operationId" : "RerunTriggers_Cancel",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "rerunTriggerName",
          "in" : "path",
          "description" : "The rerun trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger has been canceled successfully."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/rerunTriggers/{rerunTriggerName}/start" : {
      "post" : {
        "tags" : [ "rerunTriggers" ],
        "description" : "Starts a trigger.",
        "operationId" : "RerunTriggers_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "rerunTriggerName",
          "in" : "path",
          "description" : "The rerun trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger has been started successfully."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/rerunTriggers/{rerunTriggerName}/stop" : {
      "post" : {
        "tags" : [ "rerunTriggers" ],
        "description" : "Stops a trigger.",
        "operationId" : "RerunTriggers_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "rerunTriggerName",
          "in" : "path",
          "description" : "The rerun trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger has been stopped successfully."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/start" : {
      "post" : {
        "tags" : [ "triggers" ],
        "description" : "Starts a trigger.",
        "operationId" : "Triggers_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger has been started successfully."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/stop" : {
      "post" : {
        "tags" : [ "triggers" ],
        "description" : "Stops a trigger.",
        "operationId" : "Triggers_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger has been stopped successfully."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/subscribeToEvents" : {
      "post" : {
        "tags" : [ "triggers" ],
        "description" : "Subscribe event trigger to events.",
        "operationId" : "Triggers_SubscribeToEvents",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger is subscribed to events.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerSubscriptionOperationStatus"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/rerun" : {
      "post" : {
        "tags" : [ "triggerruns" ],
        "description" : "Rerun single trigger instance by runId.",
        "operationId" : "TriggerRuns_Rerun",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "The pipeline run identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TriggerRun has been restarted."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/unsubscribeFromEvents" : {
      "post" : {
        "tags" : [ "triggers" ],
        "description" : "Unsubscribe event trigger from events.",
        "operationId" : "Triggers_UnsubscribeFromEvents",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The resource group name.",
          "required" : true,
          "schema" : {
            "maxLength" : 90,
            "minLength" : 1,
            "pattern" : "^[-\\w\\._\\(\\)]+$",
            "type" : "string"
          }
        }, {
          "name" : "factoryName",
          "in" : "path",
          "description" : "The factory name.",
          "required" : true,
          "schema" : {
            "maxLength" : 63,
            "minLength" : 3,
            "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
            "type" : "string"
          }
        }, {
          "name" : "triggerName",
          "in" : "path",
          "description" : "The trigger name.",
          "required" : true,
          "schema" : {
            "maxLength" : 260,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Trigger is unsubscribed from events.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TriggerSubscriptionOperationStatus"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted."
          },
          "default" : {
            "description" : "An error response received from the Azure Data Factory service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccessPolicyResponse" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "description" : "Data Plane read only access token."
          },
          "dataPlaneUrl" : {
            "type" : "string",
            "description" : "Data Plane service base URL."
          },
          "policy" : {
            "$ref" : "#/components/schemas/UserAccessPolicy"
          }
        },
        "description" : "Get Data Plane read only token response definition."
      },
      "ActivityRun" : {
        "type" : "object",
        "properties" : {
          "activityName" : {
            "type" : "string",
            "description" : "The name of the activity.",
            "readOnly" : true
          },
          "activityRunEnd" : {
            "type" : "string",
            "description" : "The end time of the activity run in 'ISO 8601' format.",
            "format" : "date-time",
            "readOnly" : true
          },
          "activityRunId" : {
            "type" : "string",
            "description" : "The id of the activity run.",
            "readOnly" : true
          },
          "activityRunStart" : {
            "type" : "string",
            "description" : "The start time of the activity run in 'ISO 8601' format.",
            "format" : "date-time",
            "readOnly" : true
          },
          "activityType" : {
            "type" : "string",
            "description" : "The type of the activity.",
            "readOnly" : true
          },
          "durationInMs" : {
            "type" : "integer",
            "description" : "The duration of the activity run.",
            "readOnly" : true
          },
          "error" : {
            "type" : "object",
            "description" : "The error if any from the activity run.",
            "readOnly" : true
          },
          "input" : {
            "type" : "object",
            "description" : "The input for the activity.",
            "readOnly" : true
          },
          "linkedServiceName" : {
            "type" : "string",
            "description" : "The name of the compute linked service.",
            "readOnly" : true
          },
          "output" : {
            "type" : "object",
            "description" : "The output for the activity.",
            "readOnly" : true
          },
          "pipelineName" : {
            "type" : "string",
            "description" : "The name of the pipeline.",
            "readOnly" : true
          },
          "pipelineRunId" : {
            "type" : "string",
            "description" : "The id of the pipeline run.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the activity run.",
            "readOnly" : true
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Information about an activity run in a pipeline."
      },
      "ActivityRunsQueryResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "continuationToken" : {
            "type" : "string",
            "description" : "The continuation token for getting the next page of results, if any remaining results exist, null otherwise."
          },
          "value" : {
            "type" : "array",
            "description" : "List of activity runs.",
            "items" : {
              "$ref" : "#/components/schemas/ActivityRun"
            }
          }
        },
        "description" : "A list activity runs."
      },
      "AddDataFlowToDebugSessionResponse" : {
        "type" : "object",
        "properties" : {
          "jobVersion" : {
            "type" : "string",
            "description" : "The ID of data flow debug job version."
          }
        },
        "description" : "Response body structure for starting data flow debug session."
      },
      "AzureKeyVaultSecretReference" : {
        "required" : [ "secretName", "store" ],
        "properties" : {
          "secretName" : {
            "type" : "object",
            "description" : "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string)."
          },
          "secretVersion" : {
            "type" : "object",
            "description" : "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string)."
          },
          "store" : {
            "$ref" : "#/components/schemas/LinkedServiceReference"
          }
        },
        "description" : "Azure Key Vault secret reference.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SecretBase"
        } ]
      },
      "CloudError" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CloudErrorBody"
          }
        },
        "description" : "The object that defines the structure of an Azure Data Factory error response."
      },
      "CloudErrorBody" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code."
          },
          "details" : {
            "type" : "array",
            "description" : "Array with additional error details.",
            "items" : {
              "$ref" : "#/components/schemas/CloudError"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Error message."
          },
          "target" : {
            "type" : "string",
            "description" : "Property name/path in request associated with error."
          }
        },
        "description" : "The object that defines the structure of an Azure Data Factory error."
      },
      "CreateDataFlowDebugSessionRequest" : {
        "type" : "object",
        "properties" : {
          "computeType" : {
            "type" : "string",
            "description" : "Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided."
          },
          "coreCount" : {
            "type" : "integer",
            "description" : "Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided."
          },
          "integrationRuntime" : {
            "$ref" : "#/components/schemas/IntegrationRuntimeDebugResource"
          },
          "timeToLive" : {
            "type" : "integer",
            "description" : "Time to live setting of the cluster in minutes."
          }
        },
        "description" : "Request body structure for creating data flow debug session."
      },
      "CreateDataFlowDebugSessionResponse" : {
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "type" : "string",
            "description" : "The ID of data flow debug session."
          },
          "status" : {
            "type" : "string",
            "description" : "The state of the debug session."
          }
        },
        "description" : "Response body structure for creating data flow debug session."
      },
      "CreateLinkedIntegrationRuntimeRequest" : {
        "type" : "object",
        "properties" : {
          "dataFactoryLocation" : {
            "type" : "string",
            "description" : "The location of the data factory that the linked integration runtime belongs to."
          },
          "dataFactoryName" : {
            "type" : "string",
            "description" : "The name of the data factory that the linked integration runtime belongs to."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the linked integration runtime."
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "The ID of the subscription that the linked integration runtime belongs to."
          }
        },
        "description" : "The linked integration runtime information."
      },
      "CreateRunResponse" : {
        "required" : [ "runId" ],
        "type" : "object",
        "properties" : {
          "runId" : {
            "type" : "string",
            "description" : "Identifier of a run."
          }
        },
        "description" : "Response body with a run identifier."
      },
      "DataFlowDebugCommandPayload" : {
        "required" : [ "streamName" ],
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "description" : "Array of column names.",
            "items" : {
              "type" : "string"
            }
          },
          "expression" : {
            "type" : "string",
            "description" : "The expression which is used for preview."
          },
          "rowLimits" : {
            "type" : "integer",
            "description" : "Row limits for preview response."
          },
          "streamName" : {
            "type" : "string",
            "description" : "The stream name which is used for preview."
          }
        },
        "description" : "Structure of command payload."
      },
      "DataFlowDebugCommandRequest" : {
        "type" : "object",
        "properties" : {
          "command" : {
            "type" : "string",
            "description" : "The command type.",
            "enum" : [ "executePreviewQuery", "executeStatisticsQuery", "executeExpressionQuery" ]
          },
          "commandPayload" : {
            "$ref" : "#/components/schemas/DataFlowDebugCommandPayload"
          },
          "sessionId" : {
            "type" : "string",
            "description" : "The ID of data flow debug session."
          }
        },
        "description" : "Request body structure for data flow debug command."
      },
      "DataFlowDebugCommandResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "string",
            "description" : "The result data of data preview, statistics or expression preview."
          },
          "status" : {
            "type" : "string",
            "description" : "The run status of data preview, statistics or expression preview."
          }
        },
        "description" : "Response body structure of data flow result for data preview, statistics or expression preview."
      },
      "DataFlowDebugPackage" : {
        "type" : "object",
        "properties" : {
          "dataFlow" : {
            "$ref" : "#/components/schemas/DataFlowDebugResource"
          },
          "datasets" : {
            "type" : "array",
            "description" : "List of datasets.",
            "items" : {
              "$ref" : "#/components/schemas/DatasetDebugResource"
            }
          },
          "debugSettings" : {
            "type" : "object",
            "properties" : {
              "datasetParameters" : {
                "type" : "object",
                "description" : "Parameters for dataset."
              },
              "parameters" : {
                "$ref" : "#/components/schemas/ParameterValueSpecification"
              },
              "sourceSettings" : {
                "type" : "array",
                "description" : "Source setting for data flow debug.",
                "items" : {
                  "$ref" : "#/components/schemas/DataFlowSourceSetting"
                }
              }
            },
            "description" : "Data flow debug settings."
          },
          "linkedServices" : {
            "type" : "array",
            "description" : "List of linked services.",
            "items" : {
              "$ref" : "#/components/schemas/LinkedServiceDebugResource"
            }
          },
          "sessionId" : {
            "type" : "string",
            "description" : "The ID of data flow debug session."
          },
          "staging" : {
            "$ref" : "#/components/schemas/DataFlowStagingInfo"
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Request body structure for starting data flow debug session."
      },
      "DataFlowDebugResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "annotations" : {
                "type" : "array",
                "description" : "List of tags that can be used for describing the data flow.",
                "items" : {
                  "type" : "object"
                }
              },
              "description" : {
                "type" : "string",
                "description" : "The description of the data flow."
              },
              "folder" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the folder that this data flow is in."
                  }
                },
                "description" : "The folder that this data flow is in. If not specified, Data flow will appear at the root level."
              },
              "type" : {
                "type" : "string",
                "description" : "Type of data flow."
              }
            },
            "description" : "Azure Data Factory nested object which contains a flow with data movements and transformations."
          }
        },
        "description" : "Data flow debug resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResourceDebugResource"
        } ]
      },
      "DataFlowDebugSessionInfo" : {
        "type" : "object",
        "properties" : {
          "computeType" : {
            "type" : "string",
            "description" : "Compute type of the cluster."
          },
          "coreCount" : {
            "type" : "integer",
            "description" : "Core count of the cluster."
          },
          "dataFlowName" : {
            "type" : "string",
            "description" : "The name of the data flow."
          },
          "integrationRuntimeName" : {
            "type" : "string",
            "description" : "Attached integration runtime name of data flow debug session."
          },
          "lastActivityTime" : {
            "type" : "string",
            "description" : "Last activity time of data flow debug session."
          },
          "nodeCount" : {
            "type" : "integer",
            "description" : "Node count of the cluster. (deprecated property)"
          },
          "sessionId" : {
            "type" : "string",
            "description" : "The ID of data flow debug session."
          },
          "startTime" : {
            "type" : "string",
            "description" : "Start time of data flow debug session."
          },
          "timeToLiveInMinutes" : {
            "type" : "integer",
            "description" : "Compute type of the cluster."
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Data flow debug session info."
      },
      "DataFlowListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of data flows.",
            "items" : {
              "$ref" : "#/components/schemas/DataFlowResource"
            }
          }
        },
        "description" : "A list of data flow resources."
      },
      "DataFlowReference" : {
        "required" : [ "referenceName", "type" ],
        "type" : "object",
        "properties" : {
          "datasetParameters" : {
            "type" : "object",
            "description" : "Reference data flow parameters from dataset."
          },
          "referenceName" : {
            "type" : "string",
            "description" : "Reference data flow name."
          },
          "type" : {
            "type" : "string",
            "description" : "Data flow reference type.",
            "enum" : [ "DataFlowReference" ]
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Data flow reference type."
      },
      "DataFlowResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "annotations" : {
                "type" : "array",
                "description" : "List of tags that can be used for describing the data flow.",
                "items" : {
                  "type" : "object"
                }
              },
              "description" : {
                "type" : "string",
                "description" : "The description of the data flow."
              },
              "folder" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the folder that this data flow is in."
                  }
                },
                "description" : "The folder that this data flow is in. If not specified, Data flow will appear at the root level."
              },
              "type" : {
                "type" : "string",
                "description" : "Type of data flow."
              }
            },
            "description" : "Azure Data Factory nested object which contains a flow with data movements and transformations."
          }
        },
        "description" : "Data flow resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "DataFlowSourceSetting" : {
        "type" : "object",
        "properties" : {
          "rowLimit" : {
            "type" : "integer",
            "description" : "Defines the row limit of data flow source in debug."
          },
          "sourceName" : {
            "type" : "string",
            "description" : "The data flow source name."
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Definition of data flow source setting for debug."
      },
      "DataFlowStagingInfo" : {
        "type" : "object",
        "properties" : {
          "folderPath" : {
            "type" : "string",
            "description" : "Folder path for staging blob."
          },
          "linkedService" : {
            "$ref" : "#/components/schemas/LinkedServiceReference"
          }
        },
        "description" : "Staging info for execute data flow activity."
      },
      "DatasetDebugResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
          }
        },
        "description" : "Dataset debug resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResourceDebugResource"
        } ]
      },
      "DatasetListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of datasets.",
            "items" : {
              "$ref" : "#/components/schemas/DatasetResource"
            }
          }
        },
        "description" : "A list of dataset resources."
      },
      "DatasetReference" : {
        "required" : [ "referenceName", "type" ],
        "type" : "object",
        "properties" : {
          "parameters" : {
            "$ref" : "#/components/schemas/ParameterValueSpecification"
          },
          "referenceName" : {
            "type" : "string",
            "description" : "Reference dataset name."
          },
          "type" : {
            "type" : "string",
            "description" : "Dataset reference type.",
            "enum" : [ "DatasetReference" ]
          }
        },
        "description" : "Dataset reference type."
      },
      "DatasetResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents."
          }
        },
        "description" : "Dataset resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "DeleteDataFlowDebugSessionRequest" : {
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "type" : "string",
            "description" : "The ID of data flow debug session."
          }
        },
        "description" : "Request body structure for deleting data flow debug session."
      },
      "ExposureControlRequest" : {
        "type" : "object",
        "properties" : {
          "featureName" : {
            "type" : "string",
            "description" : "The feature name."
          },
          "featureType" : {
            "type" : "string",
            "description" : "The feature type."
          }
        },
        "description" : "The exposure control request."
      },
      "ExposureControlResponse" : {
        "type" : "object",
        "properties" : {
          "featureName" : {
            "type" : "string",
            "description" : "The feature name.",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The feature value.",
            "readOnly" : true
          }
        },
        "description" : "The exposure control response."
      },
      "Expression" : {
        "required" : [ "type", "value" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Expression type.",
            "enum" : [ "Expression" ]
          },
          "value" : {
            "type" : "string",
            "description" : "Expression value."
          }
        },
        "description" : "Azure Data Factory expression definition."
      },
      "Factory" : {
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/FactoryIdentity"
          },
          "properties" : {
            "$ref" : "#/components/schemas/FactoryProperties"
          }
        },
        "description" : "Factory resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "FactoryGitHubConfiguration" : {
        "properties" : {
          "hostName" : {
            "type" : "string",
            "description" : "GitHub Enterprise host name. For example: https://github.mydomain.com"
          }
        },
        "description" : "Factory's GitHub repo information.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FactoryRepoConfiguration"
        } ]
      },
      "FactoryIdentity" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "The principal id of the identity.",
            "format" : "uuid",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The client tenant id of the identity.",
            "format" : "uuid",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The identity type. Currently the only supported type is 'SystemAssigned'.",
            "enum" : [ "SystemAssigned" ]
          }
        },
        "description" : "Identity properties of the factory resource."
      },
      "FactoryListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of factories.",
            "items" : {
              "$ref" : "#/components/schemas/Factory"
            }
          }
        },
        "description" : "A list of factory resources."
      },
      "FactoryProperties" : {
        "type" : "object",
        "properties" : {
          "createTime" : {
            "type" : "string",
            "description" : "Time the factory was created in ISO8601 format.",
            "format" : "date-time",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Factory provisioning state, example Succeeded.",
            "readOnly" : true
          },
          "repoConfiguration" : {
            "$ref" : "#/components/schemas/FactoryRepoConfiguration"
          },
          "version" : {
            "type" : "string",
            "description" : "Version of the factory.",
            "readOnly" : true
          }
        },
        "description" : "Factory resource properties."
      },
      "FactoryRepoConfiguration" : {
        "required" : [ "accountName", "collaborationBranch", "repositoryName", "rootFolder", "type" ],
        "type" : "object",
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "Account name."
          },
          "collaborationBranch" : {
            "type" : "string",
            "description" : "Collaboration branch."
          },
          "lastCommitId" : {
            "type" : "string",
            "description" : "Last commit id."
          },
          "repositoryName" : {
            "type" : "string",
            "description" : "Repository name."
          },
          "rootFolder" : {
            "type" : "string",
            "description" : "Root folder."
          },
          "type" : {
            "type" : "string",
            "description" : "Type of repo configuration."
          }
        },
        "description" : "Factory's git repo information.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "FactoryRepoUpdate" : {
        "type" : "object",
        "properties" : {
          "factoryResourceId" : {
            "type" : "string",
            "description" : "The factory resource id."
          },
          "repoConfiguration" : {
            "$ref" : "#/components/schemas/FactoryRepoConfiguration"
          }
        },
        "description" : "Factory's git repo information."
      },
      "FactoryUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/FactoryIdentity"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The resource tags."
          }
        },
        "description" : "Parameters for updating a factory resource."
      },
      "FactoryVSTSConfiguration" : {
        "required" : [ "projectName" ],
        "properties" : {
          "projectName" : {
            "type" : "string",
            "description" : "VSTS project name."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "VSTS tenant id."
          }
        },
        "description" : "Factory's VSTS repo information.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/FactoryRepoConfiguration"
        } ]
      },
      "GetDataFactoryOperationStatusResponse" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of the operation."
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Response body structure for get data factory operation status."
      },
      "GetSsisObjectMetadataRequest" : {
        "type" : "object",
        "properties" : {
          "metadataPath" : {
            "type" : "string",
            "description" : "Metadata path."
          }
        },
        "description" : "The request payload of get SSIS object metadata."
      },
      "GitHubAccessTokenRequest" : {
        "required" : [ "gitHubAccessCode", "gitHubAccessTokenBaseUrl" ],
        "type" : "object",
        "properties" : {
          "gitHubAccessCode" : {
            "type" : "string",
            "description" : "GitHub access code."
          },
          "gitHubAccessTokenBaseUrl" : {
            "type" : "string",
            "description" : "GitHub access token base URL."
          },
          "gitHubClientId" : {
            "type" : "string",
            "description" : "GitHub application client ID."
          }
        },
        "description" : "Get GitHub access token request definition."
      },
      "GitHubAccessTokenResponse" : {
        "type" : "object",
        "properties" : {
          "gitHubAccessToken" : {
            "type" : "string",
            "description" : "GitHub access token."
          }
        },
        "description" : "Get GitHub access token response definition."
      },
      "IntegrationRuntimeDebugResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "Azure Data Factory nested object which serves as a compute resource for activities."
          }
        },
        "description" : "Integration runtime debug resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResourceDebugResource"
        } ]
      },
      "IntegrationRuntimeListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of integration runtimes.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationRuntimeResource"
            }
          }
        },
        "description" : "A list of integration runtime resources."
      },
      "IntegrationRuntimeReference" : {
        "required" : [ "referenceName", "type" ],
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "An object mapping parameter names to argument values."
          },
          "referenceName" : {
            "type" : "string",
            "description" : "Reference integration runtime name."
          },
          "type" : {
            "type" : "string",
            "description" : "Type of integration runtime.",
            "enum" : [ "IntegrationRuntimeReference" ]
          }
        },
        "description" : "Integration runtime reference type."
      },
      "IntegrationRuntimeResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "Azure Data Factory nested object which serves as a compute resource for activities."
          }
        },
        "description" : "Integration runtime resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "IntegrationRuntimeStatusListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of integration runtime status.",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationRuntimeStatusResponse"
            }
          }
        },
        "description" : "A list of integration runtime status."
      },
      "IntegrationRuntimeStatusResponse" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The integration runtime name.",
            "readOnly" : true
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "Integration runtime status."
          }
        },
        "description" : "Integration runtime status response."
      },
      "LinkedIntegrationRuntimeRequest" : {
        "required" : [ "factoryName" ],
        "type" : "object",
        "properties" : {
          "factoryName" : {
            "type" : "string",
            "description" : "The data factory name for linked integration runtime."
          }
        },
        "description" : "Data factory name for linked integration runtime request."
      },
      "LinkedServiceDebugResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource."
          }
        },
        "description" : "Linked service debug resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResourceDebugResource"
        } ]
      },
      "LinkedServiceListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of linked services.",
            "items" : {
              "$ref" : "#/components/schemas/LinkedServiceResource"
            }
          }
        },
        "description" : "A list of linked service resources."
      },
      "LinkedServiceReference" : {
        "required" : [ "referenceName", "type" ],
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "An object mapping parameter names to argument values."
          },
          "referenceName" : {
            "type" : "string",
            "description" : "Reference LinkedService name."
          },
          "type" : {
            "type" : "string",
            "description" : "Linked service reference type.",
            "enum" : [ "LinkedServiceReference" ]
          }
        },
        "description" : "Linked service reference type."
      },
      "LinkedServiceResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource."
          }
        },
        "description" : "Linked service resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "The description of the operation."
              },
              "operation" : {
                "type" : "string",
                "description" : "The type of operation: get, read, delete, etc."
              },
              "provider" : {
                "type" : "string",
                "description" : "The name of the provider."
              },
              "resource" : {
                "type" : "string",
                "description" : "The name of the resource type on which the operation is performed."
              }
            },
            "description" : "Metadata associated with the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}"
          },
          "origin" : {
            "type" : "string",
            "description" : "The intended executor of the operation."
          },
          "properties" : {
            "$ref" : "#/components/schemas/OperationProperties"
          }
        },
        "description" : "Azure Data Factory API operation definition."
      },
      "OperationListResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of Data Factory operations supported by the Data Factory resource provider.",
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "A list of operations that can be performed by the Data Factory service."
      },
      "OperationLogSpecification" : {
        "type" : "object",
        "properties" : {
          "blobDuration" : {
            "type" : "string",
            "description" : "Blobs created in the customer storage account, per hour."
          },
          "displayName" : {
            "type" : "string",
            "description" : "Localized display name."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the log category."
          }
        },
        "description" : "Details about an operation related to logs."
      },
      "OperationMetricAvailability" : {
        "type" : "object",
        "properties" : {
          "blobDuration" : {
            "type" : "string",
            "description" : "Blob created in the customer storage account, per hour."
          },
          "timeGrain" : {
            "type" : "string",
            "description" : "The granularity for the metric."
          }
        },
        "description" : "Defines how often data for a metric becomes available."
      },
      "OperationMetricDimension" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the metric dimension."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the dimension for the metric."
          },
          "toBeExportedForShoebox" : {
            "type" : "boolean",
            "description" : "Whether the dimension should be exported to Azure Monitor."
          }
        },
        "description" : "Defines the metric dimension."
      },
      "OperationMetricSpecification" : {
        "type" : "object",
        "properties" : {
          "aggregationType" : {
            "type" : "string",
            "description" : "The type of metric aggregation."
          },
          "availabilities" : {
            "type" : "array",
            "description" : "Defines how often data for metrics becomes available.",
            "items" : {
              "$ref" : "#/components/schemas/OperationMetricAvailability"
            }
          },
          "dimensions" : {
            "type" : "array",
            "description" : "Defines the metric dimension.",
            "items" : {
              "$ref" : "#/components/schemas/OperationMetricDimension"
            }
          },
          "displayDescription" : {
            "type" : "string",
            "description" : "The description of the metric."
          },
          "displayName" : {
            "type" : "string",
            "description" : "Localized display name of the metric."
          },
          "enableRegionalMdmAccount" : {
            "type" : "string",
            "description" : "Whether or not the service is using regional MDM accounts."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the metric."
          },
          "sourceMdmAccount" : {
            "type" : "string",
            "description" : "The name of the MDM account."
          },
          "sourceMdmNamespace" : {
            "type" : "string",
            "description" : "The name of the MDM namespace."
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit that the metric is measured in."
          }
        },
        "description" : "Details about an operation related to metrics."
      },
      "OperationProperties" : {
        "type" : "object",
        "properties" : {
          "serviceSpecification" : {
            "$ref" : "#/components/schemas/OperationServiceSpecification"
          }
        },
        "description" : "Additional details about an operation."
      },
      "OperationServiceSpecification" : {
        "type" : "object",
        "properties" : {
          "logSpecifications" : {
            "type" : "array",
            "description" : "Details about operations related to logs.",
            "items" : {
              "$ref" : "#/components/schemas/OperationLogSpecification"
            }
          },
          "metricSpecifications" : {
            "type" : "array",
            "description" : "Details about operations related to metrics.",
            "items" : {
              "$ref" : "#/components/schemas/OperationMetricSpecification"
            }
          }
        },
        "description" : "Details about a service operation."
      },
      "ParameterDefinitionSpecification" : {
        "type" : "object",
        "additionalProperties" : {
          "required" : [ "type" ],
          "type" : "object",
          "properties" : {
            "defaultValue" : {
              "type" : "object",
              "description" : "Default value of parameter."
            },
            "type" : {
              "type" : "string",
              "description" : "Parameter type.",
              "enum" : [ "Object", "String", "Int", "Float", "Bool", "Array", "SecureString" ]
            }
          },
          "description" : "Definition of a single parameter for an entity."
        },
        "description" : "Definition of all parameters for an entity."
      },
      "ParameterSpecification" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "defaultValue" : {
            "type" : "object",
            "description" : "Default value of parameter."
          },
          "type" : {
            "type" : "string",
            "description" : "Parameter type.",
            "enum" : [ "Object", "String", "Int", "Float", "Bool", "Array", "SecureString" ]
          }
        },
        "description" : "Definition of a single parameter for an entity."
      },
      "ParameterValueSpecification" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "An object mapping parameter names to argument values."
      },
      "PipelineListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of pipelines.",
            "items" : {
              "$ref" : "#/components/schemas/PipelineResource"
            }
          }
        },
        "description" : "A list of pipeline resources."
      },
      "PipelineReference" : {
        "required" : [ "referenceName", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Reference name."
          },
          "referenceName" : {
            "type" : "string",
            "description" : "Reference pipeline name."
          },
          "type" : {
            "type" : "string",
            "description" : "Pipeline reference type.",
            "enum" : [ "PipelineReference" ]
          }
        },
        "description" : "Pipeline reference type."
      },
      "PipelineResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "properties" : {
              "activities" : {
                "type" : "array",
                "description" : "List of activities in pipeline.",
                "items" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  },
                  "description" : "A pipeline activity."
                }
              },
              "annotations" : {
                "type" : "array",
                "description" : "List of tags that can be used for describing the Pipeline.",
                "items" : {
                  "type" : "object"
                }
              },
              "concurrency" : {
                "minimum" : 1,
                "type" : "integer",
                "description" : "The max number of concurrent runs for the pipeline."
              },
              "description" : {
                "type" : "string",
                "description" : "The description of the pipeline."
              },
              "folder" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "The name of the folder that this Pipeline is in."
                  }
                },
                "description" : "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level."
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "required" : [ "type" ],
                  "type" : "object",
                  "properties" : {
                    "defaultValue" : {
                      "type" : "object",
                      "description" : "Default value of parameter."
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Parameter type.",
                      "enum" : [ "Object", "String", "Int", "Float", "Bool", "Array", "SecureString" ]
                    }
                  },
                  "description" : "Definition of a single parameter for an entity."
                },
                "description" : "Definition of all parameters for an entity."
              },
              "runDimensions" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "description" : "Type: string (or Expression with resultType string)."
                },
                "description" : "Dimensions emitted by Pipeline."
              },
              "variables" : {
                "type" : "object",
                "additionalProperties" : {
                  "required" : [ "type" ],
                  "type" : "object",
                  "properties" : {
                    "defaultValue" : {
                      "type" : "object",
                      "description" : "Default value of variable."
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Variable type.",
                      "enum" : [ "String", "Bool", "Array" ]
                    }
                  },
                  "description" : "Definition of a single variable for a Pipeline."
                },
                "description" : "Definition of variable for a Pipeline."
              }
            },
            "description" : "A data factory pipeline."
          }
        },
        "description" : "Pipeline resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "PipelineRun" : {
        "type" : "object",
        "properties" : {
          "durationInMs" : {
            "type" : "integer",
            "description" : "The duration of a pipeline run.",
            "readOnly" : true
          },
          "invokedBy" : {
            "$ref" : "#/components/schemas/PipelineRunInvokedBy"
          },
          "isLatest" : {
            "type" : "boolean",
            "description" : "Indicates if the recovered pipeline run is the latest in its group.",
            "readOnly" : true
          },
          "lastUpdated" : {
            "type" : "string",
            "description" : "The last updated timestamp for the pipeline run event in ISO8601 format.",
            "format" : "date-time",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "The message from a pipeline run.",
            "readOnly" : true
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The full or partial list of parameter name, value pair used in the pipeline run.",
            "readOnly" : true
          },
          "pipelineName" : {
            "type" : "string",
            "description" : "The pipeline name.",
            "readOnly" : true
          },
          "runDimensions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Run dimensions emitted by Pipeline run.",
            "readOnly" : true
          },
          "runEnd" : {
            "type" : "string",
            "description" : "The end time of a pipeline run in ISO8601 format.",
            "format" : "date-time",
            "readOnly" : true
          },
          "runGroupId" : {
            "type" : "string",
            "description" : "Identifier that correlates all the recovery runs of a pipeline run.",
            "readOnly" : true
          },
          "runId" : {
            "type" : "string",
            "description" : "Identifier of a run.",
            "readOnly" : true
          },
          "runStart" : {
            "type" : "string",
            "description" : "The start time of a pipeline run in ISO8601 format.",
            "format" : "date-time",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of a pipeline run.",
            "readOnly" : true
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Information about a pipeline run."
      },
      "PipelineRunInvokedBy" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the entity that started the run.",
            "readOnly" : true
          },
          "invokedByType" : {
            "type" : "string",
            "description" : "The type of the entity that started the run.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the entity that started the pipeline run.",
            "readOnly" : true
          }
        },
        "description" : "Provides entity name and id that started the pipeline run."
      },
      "PipelineRunsQueryResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "continuationToken" : {
            "type" : "string",
            "description" : "The continuation token for getting the next page of results, if any remaining results exist, null otherwise."
          },
          "value" : {
            "type" : "array",
            "description" : "List of pipeline runs.",
            "items" : {
              "$ref" : "#/components/schemas/PipelineRun"
            }
          }
        },
        "description" : "A list pipeline runs."
      },
      "QueryDataFlowDebugSessionsResponse" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "Array with all active debug sessions.",
            "items" : {
              "$ref" : "#/components/schemas/DataFlowDebugSessionInfo"
            }
          }
        },
        "description" : "A list of active debug sessions."
      },
      "RerunTriggerListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of rerun triggers.",
            "items" : {
              "$ref" : "#/components/schemas/RerunTriggerResource"
            }
          }
        },
        "description" : "A list of rerun triggers."
      },
      "RerunTriggerResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "required" : [ "typeProperties" ],
            "type" : "object",
            "properties" : {
              "typeProperties" : {
                "required" : [ "maxConcurrency", "requestedEndTime", "requestedStartTime" ],
                "type" : "object",
                "properties" : {
                  "maxConcurrency" : {
                    "maximum" : 50,
                    "minimum" : 1,
                    "type" : "integer",
                    "description" : "The max number of parallel time windows (ready for execution) for which a rerun is triggered."
                  },
                  "parentTrigger" : {
                    "type" : "object",
                    "description" : "The parent trigger reference."
                  },
                  "requestedEndTime" : {
                    "type" : "string",
                    "description" : "The end time for the time period for which restatement is initiated. Only UTC time is currently supported.",
                    "format" : "date-time"
                  },
                  "requestedStartTime" : {
                    "type" : "string",
                    "description" : "The start time for the time period for which restatement is initiated. Only UTC time is currently supported.",
                    "format" : "date-time"
                  }
                },
                "description" : "Rerun Trigger properties."
              }
            },
            "description" : "Trigger that schedules pipeline reruns for all fixed time interval windows from a requested start time to requested end time."
          }
        },
        "description" : "RerunTrigger resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "RerunTumblingWindowTriggerActionParameters" : {
        "required" : [ "endTime", "maxConcurrency", "startTime" ],
        "type" : "object",
        "properties" : {
          "endTime" : {
            "type" : "string",
            "description" : "The end time for the time period for which restatement is initiated. Only UTC time is currently supported.",
            "format" : "date-time"
          },
          "maxConcurrency" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The max number of parallel time windows (ready for execution) for which a rerun is triggered."
          },
          "startTime" : {
            "type" : "string",
            "description" : "The start time for the time period for which restatement is initiated. Only UTC time is currently supported.",
            "format" : "date-time"
          }
        },
        "description" : "Rerun tumbling window trigger Parameters."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "eTag" : {
            "type" : "string",
            "description" : "Etag identifies change in the resource.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The resource identifier.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The resource location."
          },
          "name" : {
            "type" : "string",
            "description" : "The resource name.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The resource tags."
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type.",
            "readOnly" : true
          }
        },
        "description" : "Azure Data Factory top-level resource."
      },
      "RunFilterParameters" : {
        "required" : [ "lastUpdatedAfter", "lastUpdatedBefore" ],
        "type" : "object",
        "properties" : {
          "continuationToken" : {
            "type" : "string",
            "description" : "The continuation token for getting the next page of results. Null for first page."
          },
          "filters" : {
            "type" : "array",
            "description" : "List of filters.",
            "items" : {
              "$ref" : "#/components/schemas/RunQueryFilter"
            }
          },
          "lastUpdatedAfter" : {
            "type" : "string",
            "description" : "The time at or after which the run event was updated in 'ISO 8601' format.",
            "format" : "date-time"
          },
          "lastUpdatedBefore" : {
            "type" : "string",
            "description" : "The time at or before which the run event was updated in 'ISO 8601' format.",
            "format" : "date-time"
          },
          "orderBy" : {
            "type" : "array",
            "description" : "List of OrderBy option.",
            "items" : {
              "$ref" : "#/components/schemas/RunQueryOrderBy"
            }
          }
        },
        "description" : "Query parameters for listing runs."
      },
      "RunQueryFilter" : {
        "required" : [ "operand", "operator", "values" ],
        "type" : "object",
        "properties" : {
          "operand" : {
            "type" : "string",
            "description" : "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
            "enum" : [ "PipelineName", "Status", "RunStart", "RunEnd", "ActivityName", "ActivityRunStart", "ActivityRunEnd", "ActivityType", "TriggerName", "TriggerRunTimestamp", "RunGroupId", "LatestOnly" ]
          },
          "operator" : {
            "type" : "string",
            "description" : "Operator to be used for filter.",
            "enum" : [ "Equals", "NotEquals", "In", "NotIn" ]
          },
          "values" : {
            "type" : "array",
            "description" : "List of filter values.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Query filter option for listing runs."
      },
      "RunQueryOrderBy" : {
        "required" : [ "order", "orderBy" ],
        "type" : "object",
        "properties" : {
          "order" : {
            "type" : "string",
            "description" : "Sorting order of the parameter.",
            "enum" : [ "ASC", "DESC" ]
          },
          "orderBy" : {
            "type" : "string",
            "description" : "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
            "enum" : [ "RunStart", "RunEnd", "PipelineName", "Status", "ActivityName", "ActivityRunStart", "ActivityRunEnd", "TriggerName", "TriggerRunTimestamp" ]
          }
        },
        "description" : "An object to provide order by options for listing runs."
      },
      "SecretBase" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of the secret."
          }
        },
        "description" : "The base definition of a secret type.",
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "SecureString" : {
        "required" : [ "value" ],
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "Value of secure string."
          }
        },
        "description" : "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SecretBase"
        } ]
      },
      "SsisObjectMetadataStatusResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "string",
            "description" : "The operation error message."
          },
          "name" : {
            "type" : "string",
            "description" : "The operation name."
          },
          "properties" : {
            "type" : "string",
            "description" : "The operation properties."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the operation."
          }
        },
        "description" : "The status of the operation."
      },
      "SubResource" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Etag identifies change in the resource.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The resource identifier.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type.",
            "readOnly" : true
          }
        },
        "description" : "Azure Data Factory nested resource, which belongs to a factory."
      },
      "SubResourceDebugResource" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The resource name."
          }
        },
        "description" : "Azure Data Factory nested debug resource."
      },
      "TriggerListResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The link to the next page of results, if any remaining results exist."
          },
          "value" : {
            "type" : "array",
            "description" : "List of triggers.",
            "items" : {
              "$ref" : "#/components/schemas/TriggerResource"
            }
          }
        },
        "description" : "A list of trigger resources."
      },
      "TriggerPipelineReference" : {
        "type" : "object",
        "properties" : {
          "parameters" : {
            "$ref" : "#/components/schemas/ParameterValueSpecification"
          },
          "pipelineReference" : {
            "$ref" : "#/components/schemas/PipelineReference"
          }
        },
        "description" : "Pipeline that needs to be triggered with the given parameters."
      },
      "TriggerResource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "Azure data factory nested object which contains information about creating pipeline run"
          }
        },
        "description" : "Trigger resource type.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SubResource"
        } ]
      },
      "TriggerRun" : {
        "type" : "object",
        "properties" : {
          "dependencyStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "Status of the upstream pipelines.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Trigger error message.",
            "readOnly" : true
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
            "readOnly" : true
          },
          "runDimension" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Run dimension for which trigger was fired.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Trigger run status.",
            "readOnly" : true,
            "enum" : [ "Succeeded", "Failed", "Inprogress" ]
          },
          "triggerName" : {
            "type" : "string",
            "description" : "Trigger name.",
            "readOnly" : true
          },
          "triggerRunId" : {
            "type" : "string",
            "description" : "Trigger run id.",
            "readOnly" : true
          },
          "triggerRunTimestamp" : {
            "type" : "string",
            "description" : "Trigger run start time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "triggerType" : {
            "type" : "string",
            "description" : "Trigger type.",
            "readOnly" : true
          },
          "triggeredPipelines" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "List of pipeline name and run Id triggered by the trigger run.",
            "readOnly" : true
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "Trigger runs."
      },
      "TriggerRunsQueryResponse" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "continuationToken" : {
            "type" : "string",
            "description" : "The continuation token for getting the next page of results, if any remaining results exist, null otherwise."
          },
          "value" : {
            "type" : "array",
            "description" : "List of trigger runs.",
            "items" : {
              "$ref" : "#/components/schemas/TriggerRun"
            }
          }
        },
        "description" : "A list of trigger runs."
      },
      "TriggerSubscriptionOperationStatus" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Event Subscription Status.",
            "readOnly" : true,
            "enum" : [ "Enabled", "Provisioning", "Deprovisioning", "Disabled", "Unknown" ]
          },
          "triggerName" : {
            "type" : "string",
            "description" : "Trigger name.",
            "readOnly" : true
          }
        },
        "description" : "Defines the response of a trigger subscription operation."
      },
      "UpdateIntegrationRuntimeNodeRequest" : {
        "type" : "object",
        "properties" : {
          "concurrentJobsLimit" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed."
          }
        },
        "description" : "Update integration runtime node request."
      },
      "UpdateIntegrationRuntimeRequest" : {
        "type" : "object",
        "properties" : {
          "autoUpdate" : {
            "type" : "string",
            "description" : "The state of integration runtime auto update.",
            "enum" : [ "On", "Off" ]
          },
          "updateDelayOffset" : {
            "type" : "string",
            "description" : "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time."
          }
        },
        "description" : "Update integration runtime request."
      },
      "UserAccessPolicy" : {
        "type" : "object",
        "properties" : {
          "accessResourcePath" : {
            "type" : "string",
            "description" : "The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource."
          },
          "expireTime" : {
            "type" : "string",
            "description" : "Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours."
          },
          "permissions" : {
            "type" : "string",
            "description" : "The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access."
          },
          "profileName" : {
            "type" : "string",
            "description" : "The name of the profile. Currently only the default is supported. The default value is DefaultProfile."
          },
          "startTime" : {
            "type" : "string",
            "description" : "Start time for the token. If not specified the current time will be used."
          }
        },
        "description" : "Get Data Plane read only token request definition."
      },
      "VariableDefinitionSpecification" : {
        "type" : "object",
        "additionalProperties" : {
          "required" : [ "type" ],
          "type" : "object",
          "properties" : {
            "defaultValue" : {
              "type" : "object",
              "description" : "Default value of variable."
            },
            "type" : {
              "type" : "string",
              "description" : "Variable type.",
              "enum" : [ "String", "Bool", "Array" ]
            }
          },
          "description" : "Definition of a single variable for a Pipeline."
        },
        "description" : "Definition of variable for a Pipeline."
      },
      "VariableSpecification" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "defaultValue" : {
            "type" : "object",
            "description" : "Default value of variable."
          },
          "type" : {
            "type" : "string",
            "description" : "Variable type.",
            "enum" : [ "String", "Bool", "Array" ]
          }
        },
        "description" : "Definition of a single variable for a Pipeline."
      }
    },
    "parameters" : {
      "api-version" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "dataFlowName" : {
        "name" : "dataFlowName",
        "in" : "path",
        "description" : "The data flow name.",
        "required" : true,
        "schema" : {
          "maxLength" : 260,
          "minLength" : 1,
          "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type" : "string"
        }
      },
      "datasetName" : {
        "name" : "datasetName",
        "in" : "path",
        "description" : "The dataset name.",
        "required" : true,
        "schema" : {
          "maxLength" : 260,
          "minLength" : 1,
          "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type" : "string"
        }
      },
      "factoryName" : {
        "name" : "factoryName",
        "in" : "path",
        "description" : "The factory name.",
        "required" : true,
        "schema" : {
          "maxLength" : 63,
          "minLength" : 3,
          "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
          "type" : "string"
        }
      },
      "integrationRuntimeName" : {
        "name" : "integrationRuntimeName",
        "in" : "path",
        "description" : "The integration runtime name.",
        "required" : true,
        "schema" : {
          "maxLength" : 63,
          "minLength" : 3,
          "pattern" : "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
          "type" : "string"
        }
      },
      "linkedServiceName" : {
        "name" : "linkedServiceName",
        "in" : "path",
        "description" : "The linked service name.",
        "required" : true,
        "schema" : {
          "maxLength" : 260,
          "minLength" : 1,
          "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type" : "string"
        }
      },
      "locationId" : {
        "name" : "locationId",
        "in" : "path",
        "description" : "The location identifier.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "nodeName" : {
        "name" : "nodeName",
        "in" : "path",
        "description" : "The integration runtime node name.",
        "required" : true,
        "schema" : {
          "maxLength" : 150,
          "minLength" : 1,
          "pattern" : "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
          "type" : "string"
        }
      },
      "pipelineName" : {
        "name" : "pipelineName",
        "in" : "path",
        "description" : "The pipeline name.",
        "required" : true,
        "schema" : {
          "maxLength" : 260,
          "minLength" : 1,
          "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type" : "string"
        }
      },
      "rerunTriggerName" : {
        "name" : "rerunTriggerName",
        "in" : "path",
        "description" : "The rerun trigger name.",
        "required" : true,
        "schema" : {
          "maxLength" : 260,
          "minLength" : 1,
          "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type" : "string"
        }
      },
      "resourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The resource group name.",
        "required" : true,
        "schema" : {
          "maxLength" : 90,
          "minLength" : 1,
          "pattern" : "^[-\\w\\._\\(\\)]+$",
          "type" : "string"
        }
      },
      "runId" : {
        "name" : "runId",
        "in" : "path",
        "description" : "The pipeline run identifier.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription identifier.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "triggerName" : {
        "name" : "triggerName",
        "in" : "path",
        "description" : "The trigger name.",
        "required" : true,
        "schema" : {
          "maxLength" : 260,
          "minLength" : 1,
          "pattern" : "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}