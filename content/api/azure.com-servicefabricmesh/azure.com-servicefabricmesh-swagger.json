{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SeaBreezeManagementClient",
    "description" : "APIs to deploy and manage resources to SeaBreeze.",
    "version" : "2018-09-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.ServiceFabricMesh/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "summary" : "Lists all of the available operations.",
        "description" : "Lists all the available operations provided by Service Fabric SeaBreeze resource provider.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/applications" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Gets all the application resources in a given subscription.",
        "description" : "Gets the information about all application resources in a given resource group. The information include the description and other properties of the application.",
        "operationId" : "Application_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/gateways" : {
      "get" : {
        "tags" : [ "Gateways" ],
        "summary" : "Gets all the gateway resources in a given subscription.",
        "description" : "Gets the information about all gateway resources in a given resource group. The information include the description and other properties of the gateway.",
        "operationId" : "Gateway_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/networks" : {
      "get" : {
        "tags" : [ "Networks" ],
        "summary" : "Gets all the network resources in a given subscription.",
        "description" : "Gets the information about all network resources in a given resource group. The information include the description and other properties of the network.",
        "operationId" : "Network_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/secrets" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "summary" : "Gets all the secret resources in a given subscription.",
        "description" : "Gets the information about all secret resources in a given resource group. The information include the description and other properties of the secret.",
        "operationId" : "Secret_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes" : {
      "get" : {
        "tags" : [ "Volumes" ],
        "summary" : "Gets all the volume resources in a given subscription.",
        "description" : "Gets the information about all volume resources in a given resource group. The information include the description and other properties of the volume.",
        "operationId" : "Volume_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumeResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Gets all the application resources in a given resource group.",
        "description" : "Gets the information about all application resources in a given resource group. The information include the description and other properties of the Application.",
        "operationId" : "Application_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}" : {
      "get" : {
        "tags" : [ "Applications" ],
        "summary" : "Gets the application resource with the given name.",
        "description" : "Gets the information about the application resource with the given name. The information include the description and other properties of the application.",
        "operationId" : "Application_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResourceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Applications" ],
        "summary" : "Creates or updates an application resource.",
        "description" : "Creates an application resource with the specified name, description and properties. If an application resource with the same name exists, then it is updated with the specified description and properties.",
        "operationId" : "Application_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Description for creating a Application resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplicationResourceDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResourceDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicationResourceDescription"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Applications" ],
        "summary" : "Deletes the application resource.",
        "description" : "Deletes the application resource identified by the name.",
        "operationId" : "Application_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content - the specified application was not found."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Lists all the service resources.",
        "description" : "Gets the information about all services of an application resource. The information include the description and other properties of the Service.",
        "operationId" : "Service_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Gets the service resource with the given name.",
        "description" : "Gets the information about the service resource with the given name. The information include the description and other properties of the service.",
        "operationId" : "Service_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceResourceName",
          "in" : "path",
          "description" : "The identity of the service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceResourceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas" : {
      "get" : {
        "tags" : [ "ServiceReplicas" ],
        "summary" : "Gets replicas of a given service.",
        "description" : "Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.",
        "operationId" : "ServiceReplica_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceResourceName",
          "in" : "path",
          "description" : "The identity of the service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceReplicaDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}" : {
      "get" : {
        "tags" : [ "ServiceReplicas" ],
        "summary" : "Gets the given replica of the service of an application.",
        "description" : "Gets the information about the service replica with the given name. The information include the description and other properties of the service replica.",
        "operationId" : "ServiceReplica_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceResourceName",
          "in" : "path",
          "description" : "The identity of the service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicaName",
          "in" : "path",
          "description" : "Service Fabric replica name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceReplicaDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}/codePackages/{codePackageName}/logs" : {
      "get" : {
        "tags" : [ "CodePackages" ],
        "summary" : "Gets the logs from the container.",
        "description" : "Gets the logs for the container of the specified code package of the service replica.",
        "operationId" : "CodePackage_GetContainerLogs",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "applicationResourceName",
          "in" : "path",
          "description" : "The identity of the application.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceResourceName",
          "in" : "path",
          "description" : "The identity of the service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "replicaName",
          "in" : "path",
          "description" : "Service Fabric replica name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "codePackageName",
          "in" : "path",
          "description" : "The name of code package of the service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "tail",
          "in" : "query",
          "description" : "Number of lines to show from the end of the logs. Default is 100.",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContainerLogs"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways" : {
      "get" : {
        "tags" : [ "Gateways" ],
        "summary" : "Gets all the gateway resources in a given resource group.",
        "description" : "Gets the information about all gateway resources in a given resource group. The information include the description and other properties of the Gateway.",
        "operationId" : "Gateway_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}" : {
      "get" : {
        "tags" : [ "Gateways" ],
        "summary" : "Gets the gateway resource with the given name.",
        "description" : "Gets the information about the gateway resource with the given name. The information include the description and other properties of the gateway.",
        "operationId" : "Gateway_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayResourceName",
          "in" : "path",
          "description" : "The identity of the gateway.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResourceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Gateways" ],
        "summary" : "Creates or updates a gateway resource.",
        "description" : "Creates a gateway resource with the specified name, description and properties. If a gateway resource with the same name exists, then it is updated with the specified description and properties. Use gateway resources to create a gateway for public connectivity for services within your application.",
        "operationId" : "Gateway_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayResourceName",
          "in" : "path",
          "description" : "The identity of the gateway.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Description for creating a Gateway resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GatewayResourceDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResourceDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GatewayResourceDescription"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Gateways" ],
        "summary" : "Deletes the gateway resource.",
        "description" : "Deletes the gateway resource identified by the name.",
        "operationId" : "Gateway_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "gatewayResourceName",
          "in" : "path",
          "description" : "The identity of the gateway.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content - the specified gateway was not found."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks" : {
      "get" : {
        "tags" : [ "Networks" ],
        "summary" : "Gets all the network resources in a given resource group.",
        "description" : "Gets the information about all network resources in a given resource group. The information include the description and other properties of the Network.",
        "operationId" : "Network_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkResourceName}" : {
      "get" : {
        "tags" : [ "Networks" ],
        "summary" : "Gets the network resource with the given name.",
        "description" : "Gets the information about the network resource with the given name. The information include the description and other properties of the network.",
        "operationId" : "Network_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkResourceName",
          "in" : "path",
          "description" : "The identity of the network.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkResourceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Networks" ],
        "summary" : "Creates or updates a network resource.",
        "description" : "Creates a network resource with the specified name, description and properties. If a network resource with the same name exists, then it is updated with the specified description and properties.",
        "operationId" : "Network_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkResourceName",
          "in" : "path",
          "description" : "The identity of the network.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Description for creating a Network resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkResourceDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkResourceDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkResourceDescription"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Networks" ],
        "summary" : "Deletes the network resource.",
        "description" : "Deletes the network resource identified by the name.",
        "operationId" : "Network_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "networkResourceName",
          "in" : "path",
          "description" : "The identity of the network.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content - the specified network was not found."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "summary" : "Gets all the secret resources in a given resource group.",
        "description" : "Gets the information about all secret resources in a given resource group. The information include the description and other properties of the Secret.",
        "operationId" : "Secret_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "summary" : "Gets the secret resource with the given name.",
        "description" : "Gets the information about the secret resource with the given name. The information include the description and other properties of the secret.",
        "operationId" : "Secret_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretResourceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Secrets" ],
        "summary" : "Creates or updates a secret resource.",
        "description" : "Creates a secret resource with the specified name, description and properties. If a secret resource with the same name exists, then it is updated with the specified description and properties.",
        "operationId" : "Secret_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Description for creating a secret resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecretResourceDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretResourceDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretResourceDescription"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Secrets" ],
        "summary" : "Deletes the secret resource.",
        "description" : "Deletes the secret resource identified by the name.",
        "operationId" : "Secret_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content - the specified secret was not found."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values" : {
      "get" : {
        "tags" : [ "SecretValues" ],
        "summary" : "List names of all values of the specified secret resource.",
        "description" : "Gets information about all secret value resources of the specified secret resource. The information includes the names of the secret value resources, but not the actual values.",
        "operationId" : "SecretValue_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretValueResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}" : {
      "get" : {
        "tags" : [ "SecretValues" ],
        "summary" : "Gets the specified secret value resource.",
        "description" : "Get the information about the specified named secret value resources. The information does not include the actual value of the secret.",
        "operationId" : "SecretValue_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretValueResourceName",
          "in" : "path",
          "description" : "The name of the secret resource value which is typically the version identifier for the value.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretValueResourceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "SecretValues" ],
        "summary" : "Adds the specified value as a new version of the specified secret resource.",
        "description" : "Creates a new value of the specified secret resource. The name of the value is typically the version identifier. Once created the value cannot be changed.",
        "operationId" : "SecretValue_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretValueResourceName",
          "in" : "path",
          "description" : "The name of the secret resource value which is typically the version identifier for the value.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Description for creating a value of a secret resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecretValueResourceDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretValueResourceDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretValueResourceDescription"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SecretValues" ],
        "summary" : "Deletes the specified  value of the named secret resource.",
        "description" : "Deletes the secret value resource identified by the name. The name of the resource is typically the version associated with that value. Deletion will fail if the specified value is in use.",
        "operationId" : "SecretValue_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretValueResourceName",
          "in" : "path",
          "description" : "The name of the secret resource value which is typically the version identifier for the value.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content - the specified named secret value was not found."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}/list_value" : {
      "post" : {
        "tags" : [ "SecretValues" ],
        "summary" : "Lists the specified value of the secret resource.",
        "description" : "Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.",
        "operationId" : "SecretValue_ListValue",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretResourceName",
          "in" : "path",
          "description" : "The name of the secret resource.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "secretValueResourceName",
          "in" : "path",
          "description" : "The name of the secret resource value which is typically the version identifier for the value.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretValue"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes" : {
      "get" : {
        "tags" : [ "Volumes" ],
        "summary" : "Gets all the volume resources in a given resource group.",
        "description" : "Gets the information about all volume resources in a given resource group. The information include the description and other properties of the Volume.",
        "operationId" : "Volume_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumeResourceDescriptionList"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeResourceName}" : {
      "get" : {
        "tags" : [ "Volumes" ],
        "summary" : "Gets the volume resource with the given name.",
        "description" : "Gets the information about the volume resource with the given name. The information include the description and other properties of the volume.",
        "operationId" : "Volume_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "volumeResourceName",
          "in" : "path",
          "description" : "The identity of the volume.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumeResourceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Volumes" ],
        "summary" : "Creates or updates a volume resource.",
        "description" : "Creates a volume resource with the specified name, description and properties. If a volume resource with the same name exists, then it is updated with the specified description and properties.",
        "operationId" : "Volume_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "volumeResourceName",
          "in" : "path",
          "description" : "The identity of the volume.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Description for creating a Volume resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VolumeResourceDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumeResourceDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VolumeResourceDescription"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Volumes" ],
        "summary" : "Deletes the volume resource.",
        "description" : "Deletes the volume resource identified by the name.",
        "operationId" : "Volume_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The customer subscription identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-01-preview",
            "enum" : [ "2018-09-01-preview" ]
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Azure resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "volumeResourceName",
          "in" : "path",
          "description" : "The identity of the volume.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content - the specified volume was not found."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddRemoveReplicaScalingMechanism" : {
        "required" : [ "maxCount", "minCount", "scaleIncrement" ],
        "properties" : {
          "maxCount" : {
            "type" : "integer",
            "description" : "Maximum number of containers (scale up won't be performed above this number)."
          },
          "minCount" : {
            "type" : "integer",
            "description" : "Minimum number of containers (scale down won't be performed below this number)."
          },
          "scaleIncrement" : {
            "type" : "integer",
            "description" : "Each time auto scaling is performed, this number of containers will be added or removed."
          }
        },
        "description" : "Describes the horizontal auto scaling mechanism that adds or removes replicas (containers or container groups).",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AutoScalingMechanism"
        }, {
          "type" : "object"
        } ]
      },
      "ApplicationProperties" : {
        "type" : "object",
        "properties" : {
          "debugParams" : {
            "type" : "string",
            "description" : "Internal - used by Visual Studio to setup the debugging session on the local development environment."
          },
          "description" : {
            "type" : "string",
            "description" : "User readable description of the application."
          },
          "diagnostics" : {
            "$ref" : "#/components/schemas/DiagnosticsDescription"
          },
          "healthState" : {
            "$ref" : "#/components/schemas/HealthState"
          },
          "serviceNames" : {
            "type" : "array",
            "description" : "Names of the services in the application.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          },
          "services" : {
            "type" : "array",
            "description" : "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceResourceDescription"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/ResourceStatus"
          },
          "statusDetails" : {
            "type" : "string",
            "description" : "Gives additional information about the current status of the application.",
            "readOnly" : true
          },
          "unhealthyEvaluation" : {
            "type" : "string",
            "description" : "When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.",
            "readOnly" : true
          }
        },
        "description" : "Describes properties of a application resource."
      },
      "ApplicationResourceDescription" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApplicationResourceProperties"
          }
        },
        "description" : "This type describes an application resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "ApplicationResourceDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationResourceDescription"
            }
          }
        },
        "description" : "A pageable list of application resources."
      },
      "ApplicationResourceProperties" : {
        "description" : "This type describes properties of an application resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisionedResourceProperties"
        }, {
          "$ref" : "#/components/schemas/ApplicationProperties"
        } ]
      },
      "ApplicationScopedVolume" : {
        "required" : [ "creationParameters" ],
        "properties" : {
          "creationParameters" : {
            "$ref" : "#/components/schemas/ApplicationScopedVolumeCreationParameters"
          }
        },
        "description" : "Describes a volume whose lifetime is scoped to the application's lifetime.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/VolumeReference"
        } ]
      },
      "ApplicationScopedVolumeCreationParameters" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "User readable description of the volume."
          },
          "kind" : {
            "$ref" : "#/components/schemas/ApplicationScopedVolumeKind"
          }
        },
        "description" : "Describes parameters for creating application-scoped volumes.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk" : {
        "required" : [ "sizeDisk" ],
        "properties" : {
          "sizeDisk" : {
            "type" : "string",
            "description" : "Volume size",
            "enum" : [ "Small", "Medium", "Large" ]
          }
        },
        "description" : "Describes parameters for creating application-scoped volumes provided by Service Fabric Volume Disks",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ApplicationScopedVolumeCreationParameters"
        } ]
      },
      "ApplicationScopedVolumeKind" : {
        "type" : "string",
        "description" : "Specifies the application-scoped volume kind.",
        "enum" : [ "ServiceFabricVolumeDisk" ]
      },
      "AutoScalingMechanism" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/AutoScalingMechanismKind"
          }
        },
        "description" : "Describes the mechanism for performing auto scaling operation. Derived classes will describe the actual mechanism.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "AutoScalingMechanismKind" : {
        "type" : "string",
        "description" : "Enumerates the mechanisms for auto scaling.",
        "enum" : [ "AddRemoveReplica" ]
      },
      "AutoScalingMetric" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/AutoScalingMetricKind"
          }
        },
        "description" : "Describes the metric that is used for triggering auto scaling operation. Derived classes will describe resources or metrics.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "AutoScalingMetricKind" : {
        "type" : "string",
        "description" : "Enumerates the metrics that are used for triggering auto scaling.",
        "enum" : [ "Resource" ]
      },
      "AutoScalingPolicy" : {
        "required" : [ "mechanism", "name", "trigger" ],
        "type" : "object",
        "properties" : {
          "mechanism" : {
            "$ref" : "#/components/schemas/AutoScalingMechanism"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the auto scaling policy."
          },
          "trigger" : {
            "$ref" : "#/components/schemas/AutoScalingTrigger"
          }
        },
        "description" : "Describes the auto scaling policy"
      },
      "AutoScalingResourceMetric" : {
        "required" : [ "name" ],
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/AutoScalingResourceMetricName"
          }
        },
        "description" : "Describes the resource that is used for triggering auto scaling.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AutoScalingMetric"
        }, {
          "type" : "object"
        } ]
      },
      "AutoScalingResourceMetricName" : {
        "type" : "string",
        "description" : "Enumerates the resources that are used for triggering auto scaling.",
        "enum" : [ "cpu", "memoryInGB" ]
      },
      "AutoScalingTrigger" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/AutoScalingTriggerKind"
          }
        },
        "description" : "Describes the trigger for performing auto scaling operation.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "AutoScalingTriggerKind" : {
        "type" : "string",
        "description" : "Enumerates the triggers for auto scaling.",
        "enum" : [ "AverageLoad" ]
      },
      "AvailableOperationDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the available operation."
          },
          "operation" : {
            "type" : "string",
            "description" : "Name of the available operation."
          },
          "provider" : {
            "type" : "string",
            "description" : "Name of the operation provider."
          },
          "resource" : {
            "type" : "string",
            "description" : "Name of the resource on which the operation is available."
          }
        },
        "description" : "An operation available at the listed Azure resource provider."
      },
      "AverageLoadScalingTrigger" : {
        "required" : [ "lowerLoadThreshold", "metric", "scaleIntervalInSeconds", "upperLoadThreshold" ],
        "properties" : {
          "lowerLoadThreshold" : {
            "type" : "number",
            "description" : "Lower load threshold (if average load is below this threshold, service will scale down).",
            "format" : "double"
          },
          "metric" : {
            "$ref" : "#/components/schemas/AutoScalingMetric"
          },
          "scaleIntervalInSeconds" : {
            "minimum" : 60,
            "type" : "integer",
            "description" : "Scale interval that indicates how often will this trigger be checked."
          },
          "upperLoadThreshold" : {
            "type" : "number",
            "description" : "Upper load threshold (if average load is above this threshold, service will scale up).",
            "format" : "double"
          }
        },
        "description" : "Describes the average load trigger used for auto scaling.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AutoScalingTrigger"
        }, {
          "type" : "object"
        } ]
      },
      "AzureInternalMonitoringPipelineSinkDescription" : {
        "properties" : {
          "accountName" : {
            "type" : "string",
            "description" : "Azure Internal monitoring pipeline account."
          },
          "autoKeyConfigUrl" : {
            "type" : "string",
            "description" : "Azure Internal monitoring pipeline autokey associated with the certificate."
          },
          "fluentdConfigUrl" : {
            "type" : "object",
            "description" : "Azure Internal monitoring agent fluentd configuration."
          },
          "maConfigUrl" : {
            "type" : "string",
            "description" : "Azure Internal monitoring agent configuration."
          },
          "namespace" : {
            "type" : "string",
            "description" : "Azure Internal monitoring pipeline account namespace."
          }
        },
        "description" : "Diagnostics settings for Geneva.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DiagnosticsSinkProperties"
        } ]
      },
      "ContainerCodePackageProperties" : {
        "required" : [ "image", "name", "resources" ],
        "type" : "object",
        "properties" : {
          "commands" : {
            "type" : "array",
            "description" : "Command array to execute within the container in exec form.",
            "items" : {
              "type" : "string"
            }
          },
          "diagnostics" : {
            "$ref" : "#/components/schemas/DiagnosticsRef"
          },
          "endpoints" : {
            "type" : "array",
            "description" : "The endpoints exposed by this container.",
            "items" : {
              "$ref" : "#/components/schemas/EndpointProperties"
            }
          },
          "entrypoint" : {
            "type" : "string",
            "description" : "Override for the default entry point in the container."
          },
          "environmentVariables" : {
            "type" : "array",
            "description" : "The environment variables to set in this container",
            "items" : {
              "$ref" : "#/components/schemas/EnvironmentVariable"
            }
          },
          "image" : {
            "type" : "string",
            "description" : "The Container image to use."
          },
          "imageRegistryCredential" : {
            "$ref" : "#/components/schemas/ImageRegistryCredential"
          },
          "instanceView" : {
            "$ref" : "#/components/schemas/ContainerInstanceView"
          },
          "labels" : {
            "type" : "array",
            "description" : "The labels to set in this container.",
            "items" : {
              "$ref" : "#/components/schemas/ContainerLabel"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the code package."
          },
          "reliableCollectionsRefs" : {
            "type" : "array",
            "description" : "A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for more details.",
            "items" : {
              "$ref" : "#/components/schemas/ReliableCollectionsRef"
            }
          },
          "resources" : {
            "$ref" : "#/components/schemas/ResourceRequirements"
          },
          "settings" : {
            "type" : "array",
            "description" : "The settings to set in this container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\".",
            "items" : {
              "$ref" : "#/components/schemas/Setting"
            }
          },
          "volumeRefs" : {
            "type" : "array",
            "description" : "Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime.",
            "items" : {
              "$ref" : "#/components/schemas/VolumeReference"
            }
          },
          "volumes" : {
            "type" : "array",
            "description" : "Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime.",
            "items" : {
              "$ref" : "#/components/schemas/ApplicationScopedVolume"
            }
          }
        },
        "description" : "Describes a container and its runtime properties."
      },
      "ContainerEvent" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "The count of the event."
          },
          "firstTimestamp" : {
            "type" : "string",
            "description" : "Date/time of the first event."
          },
          "lastTimestamp" : {
            "type" : "string",
            "description" : "Date/time of the last event."
          },
          "message" : {
            "type" : "string",
            "description" : "The event message"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the container event."
          },
          "type" : {
            "type" : "string",
            "description" : "The event type."
          }
        },
        "description" : "A container event."
      },
      "ContainerInstanceView" : {
        "type" : "object",
        "properties" : {
          "currentState" : {
            "$ref" : "#/components/schemas/ContainerState"
          },
          "events" : {
            "type" : "array",
            "description" : "The events of this container instance.",
            "items" : {
              "$ref" : "#/components/schemas/ContainerEvent"
            }
          },
          "previousState" : {
            "$ref" : "#/components/schemas/ContainerState"
          },
          "restartCount" : {
            "type" : "integer",
            "description" : "The number of times the container has been restarted."
          }
        },
        "description" : "Runtime information of a container instance."
      },
      "ContainerLabel" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the container label."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the container label."
          }
        },
        "description" : "Describes a container label."
      },
      "ContainerLogs" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Container logs."
          }
        },
        "description" : "Container logs."
      },
      "ContainerState" : {
        "type" : "object",
        "properties" : {
          "detailStatus" : {
            "type" : "string",
            "description" : "Human-readable status of this state."
          },
          "exitCode" : {
            "type" : "string",
            "description" : "The container exit code."
          },
          "finishTime" : {
            "type" : "string",
            "description" : "Date/time when the container state finished.",
            "format" : "date-time"
          },
          "startTime" : {
            "type" : "string",
            "description" : "Date/time when the container state started.",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string",
            "description" : "The state of this container"
          }
        },
        "description" : "The container state."
      },
      "DiagnosticsDescription" : {
        "type" : "object",
        "properties" : {
          "defaultSinkRefs" : {
            "type" : "array",
            "description" : "The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.",
            "items" : {
              "type" : "string"
            }
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Status of whether or not sinks are enabled."
          },
          "sinks" : {
            "type" : "array",
            "description" : "List of supported sinks that can be referenced.",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticsSinkProperties"
            }
          }
        },
        "description" : "Describes the diagnostics options available"
      },
      "DiagnosticsRef" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "description" : "Status of whether or not sinks are enabled."
          },
          "sinkRefs" : {
            "type" : "array",
            "description" : "List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Reference to sinks in DiagnosticsDescription."
      },
      "DiagnosticsSinkKind" : {
        "type" : "string",
        "description" : "The kind of DiagnosticsSink.",
        "enum" : [ "Invalid", "AzureInternalMonitoringPipeline" ]
      },
      "DiagnosticsSinkProperties" : {
        "required" : [ "kind" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "A description of the sink."
          },
          "kind" : {
            "$ref" : "#/components/schemas/DiagnosticsSinkKind"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the sink. This value is referenced by DiagnosticsReferenceDescription"
          }
        },
        "description" : "Properties of a DiagnosticsSink.",
        "discriminator" : {
          "propertyName" : "kind"
        }
      },
      "EndpointProperties" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the endpoint."
          },
          "port" : {
            "type" : "integer",
            "description" : "Port used by the container."
          }
        },
        "description" : "Describes a container endpoint."
      },
      "EndpointRef" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the endpoint."
          }
        },
        "description" : "Describes a reference to a service endpoint."
      },
      "EnvironmentVariable" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the environment variable."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the environment variable."
          }
        },
        "description" : "Describes an environment variable for the container."
      },
      "ErrorDetailsModel" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string",
            "description" : "Error message."
          }
        },
        "description" : "Error model details information"
      },
      "ErrorErrorModel" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "details" : {
            "type" : "array",
            "description" : "List of error message details.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetailsModel"
            }
          },
          "innerError" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string",
            "description" : "Error message."
          }
        },
        "description" : "Error model information"
      },
      "ErrorModel" : {
        "required" : [ "error" ],
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorErrorModel"
          }
        },
        "description" : "The error details."
      },
      "GatewayDestination" : {
        "required" : [ "applicationName", "endpointName", "serviceName" ],
        "type" : "object",
        "properties" : {
          "applicationName" : {
            "type" : "string",
            "description" : "Name of the service fabric Mesh application."
          },
          "endpointName" : {
            "type" : "string",
            "description" : "name of the endpoint in the service."
          },
          "serviceName" : {
            "type" : "string",
            "description" : "service that contains the endpoint."
          }
        },
        "description" : "Describes destination endpoint for routing traffic."
      },
      "GatewayProperties" : {
        "required" : [ "destinationNetwork", "sourceNetwork" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "User readable description of the gateway."
          },
          "destinationNetwork" : {
            "$ref" : "#/components/schemas/NetworkRef"
          },
          "http" : {
            "type" : "array",
            "description" : "Configuration for http connectivity for this gateway.",
            "items" : {
              "$ref" : "#/components/schemas/HttpConfig"
            }
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "IP address of the gateway. This is populated in the response and is ignored for incoming requests.",
            "readOnly" : true
          },
          "sourceNetwork" : {
            "$ref" : "#/components/schemas/NetworkRef"
          },
          "status" : {
            "$ref" : "#/components/schemas/ResourceStatus"
          },
          "statusDetails" : {
            "type" : "string",
            "description" : "Gives additional information about the current status of the gateway.",
            "readOnly" : true
          },
          "tcp" : {
            "type" : "array",
            "description" : "Configuration for tcp connectivity for this gateway.",
            "items" : {
              "$ref" : "#/components/schemas/TcpConfig"
            }
          }
        },
        "description" : "Describes properties of a gateway resource."
      },
      "GatewayResourceDescription" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/GatewayResourceProperties"
          }
        },
        "description" : "This type describes a gateway resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "GatewayResourceDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/GatewayResourceDescription"
            }
          }
        },
        "description" : "A pageable list of gateway resources."
      },
      "GatewayResourceProperties" : {
        "description" : "This type describes properties of a gateway resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisionedResourceProperties"
        }, {
          "$ref" : "#/components/schemas/GatewayProperties"
        } ]
      },
      "HealthState" : {
        "type" : "string",
        "description" : "The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc.",
        "enum" : [ "Invalid", "Ok", "Warning", "Error", "Unknown" ]
      },
      "HttpConfig" : {
        "required" : [ "hosts", "name", "port" ],
        "type" : "object",
        "properties" : {
          "hosts" : {
            "type" : "array",
            "description" : "description for routing.",
            "items" : {
              "$ref" : "#/components/schemas/HttpHostConfig"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "http gateway config name."
          },
          "port" : {
            "type" : "integer",
            "description" : "Specifies the port at which the service endpoint below needs to be exposed."
          }
        },
        "description" : "Describes the http configuration for external connectivity for this network."
      },
      "HttpHostConfig" : {
        "required" : [ "name", "routes" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "http hostname config name."
          },
          "routes" : {
            "type" : "array",
            "description" : "Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases.",
            "items" : {
              "$ref" : "#/components/schemas/HttpRouteConfig"
            }
          }
        },
        "description" : "Describes the hostname properties for http routing."
      },
      "HttpRouteConfig" : {
        "required" : [ "destination", "match", "name" ],
        "type" : "object",
        "properties" : {
          "destination" : {
            "$ref" : "#/components/schemas/GatewayDestination"
          },
          "match" : {
            "$ref" : "#/components/schemas/HttpRouteMatchRule"
          },
          "name" : {
            "type" : "string",
            "description" : "http route name."
          }
        },
        "description" : "Describes the hostname properties for http routing."
      },
      "HttpRouteMatchHeader" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of header to match in request."
          },
          "type" : {
            "type" : "string",
            "description" : "how to match header value",
            "enum" : [ "exact" ]
          },
          "value" : {
            "type" : "string",
            "description" : "Value of header to match in request."
          }
        },
        "description" : "Describes header information for http route matching."
      },
      "HttpRouteMatchPath" : {
        "required" : [ "type", "value" ],
        "type" : "object",
        "properties" : {
          "rewrite" : {
            "type" : "string",
            "description" : "replacement string for matched part of the Uri."
          },
          "type" : {
            "type" : "string",
            "description" : "how to match value in the Uri",
            "enum" : [ "prefix" ]
          },
          "value" : {
            "type" : "string",
            "description" : "Uri path to match for request."
          }
        },
        "description" : "Path to match for routing."
      },
      "HttpRouteMatchRule" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "array",
            "description" : "headers and their values to match in request.",
            "items" : {
              "$ref" : "#/components/schemas/HttpRouteMatchHeader"
            }
          },
          "path" : {
            "$ref" : "#/components/schemas/HttpRouteMatchPath"
          }
        },
        "description" : "Describes a rule for http route matching."
      },
      "ImageRegistryCredential" : {
        "required" : [ "server", "username" ],
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "The password for the private registry. The password is required for create or update operations, however it is not returned in the get or list operations."
          },
          "server" : {
            "type" : "string",
            "description" : "Docker image registry server, without protocol such as `http` and `https`."
          },
          "username" : {
            "type" : "string",
            "description" : "The username for the private registry."
          }
        },
        "description" : "Image registry credential."
      },
      "InlinedValueSecretResourceProperties" : {
        "description" : "Describes the properties of a secret resource whose value is provided explicitly as plaintext. The secret resource may have multiple values, each being uniquely versioned. The secret value of each version is stored encrypted, and delivered as plaintext into the context of applications referencing it.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SecretResourceProperties"
        } ]
      },
      "LocalNetworkResourceProperties" : {
        "properties" : {
          "networkAddressPrefix" : {
            "$ref" : "#/components/schemas/NetworkAddressPrefix"
          }
        },
        "description" : "Information about a Service Fabric container network local to a single Service Fabric cluster.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NetworkResourceProperties"
        } ]
      },
      "ManagedProxyResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
            "readOnly" : true
          }
        },
        "description" : "The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags. This proxy resource is explicitly created or updated by including it in the parent resource."
      },
      "NetworkAddressPrefix" : {
        "type" : "string",
        "description" : "Address space for a container network. This is expressed in CIDR notation."
      },
      "NetworkKind" : {
        "type" : "string",
        "description" : "The type of a Service Fabric container network.",
        "enum" : [ "Local" ]
      },
      "NetworkRef" : {
        "type" : "object",
        "properties" : {
          "endpointRefs" : {
            "type" : "array",
            "description" : "A list of endpoints that are exposed on this network.",
            "items" : {
              "$ref" : "#/components/schemas/EndpointRef"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the network"
          }
        },
        "description" : "Describes a network reference in a service."
      },
      "NetworkResourceDescription" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/NetworkResourceProperties"
          }
        },
        "description" : "This type describes a network resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "NetworkResourceDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkResourceDescription"
            }
          }
        },
        "description" : "A pageable list of network resources."
      },
      "NetworkResourceProperties" : {
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "User readable description of the network."
          },
          "status" : {
            "$ref" : "#/components/schemas/ResourceStatus"
          },
          "statusDetails" : {
            "type" : "string",
            "description" : "Gives additional information about the current status of the network.",
            "readOnly" : true
          }
        },
        "description" : "Describes properties of a network resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/NetworkResourcePropertiesBase"
        } ]
      },
      "NetworkResourcePropertiesBase" : {
        "required" : [ "kind" ],
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/NetworkKind"
          }
        },
        "description" : "This type describes the properties of a network resource, including its kind.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisionedResourceProperties"
        } ]
      },
      "OperatingSystemType" : {
        "type" : "string",
        "description" : "The operation system required by the code in service.",
        "enum" : [ "Linux", "Windows" ]
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of Service Fabric operations supported by the Microsoft.ServiceFabric resource provider.",
            "items" : {
              "$ref" : "#/components/schemas/OperationResult"
            }
          }
        },
        "description" : "Describes the result of the request to list Service Fabric operations."
      },
      "OperationResult" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/AvailableOperationDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the operation."
          },
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to use for getting the next set of results."
          },
          "origin" : {
            "type" : "string",
            "description" : "Origin result"
          }
        },
        "description" : "List of operations available at the listed Azure resource provider."
      },
      "ProvisionedResourceProperties" : {
        "type" : "object",
        "properties" : {
          "provisioningState" : {
            "type" : "string",
            "description" : "State of the resource.",
            "readOnly" : true
          }
        },
        "description" : "Describes common properties of a provisioned resource."
      },
      "ProxyResource" : {
        "description" : "The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ReliableCollectionsRef" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "doNotPersistState" : {
            "type" : "boolean",
            "description" : "False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of ReliableCollection resource. Right now it's not used and you can use any string."
          }
        },
        "description" : "Specifying this parameter adds support for reliable collections"
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
            "readOnly" : true
          }
        },
        "description" : "The resource model definition for Azure Resource Manager resource."
      },
      "ResourceLimits" : {
        "type" : "object",
        "properties" : {
          "cpu" : {
            "type" : "number",
            "description" : "CPU limits in cores. At present, only full cores are supported.",
            "format" : "double"
          },
          "memoryInGB" : {
            "type" : "number",
            "description" : "The memory limit in GB.",
            "format" : "double"
          }
        },
        "description" : "This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted."
      },
      "ResourceRequests" : {
        "required" : [ "cpu", "memoryInGB" ],
        "type" : "object",
        "properties" : {
          "cpu" : {
            "type" : "number",
            "description" : "Requested number of CPU cores. At present, only full cores are supported.",
            "format" : "double"
          },
          "memoryInGB" : {
            "type" : "number",
            "description" : "The memory request in GB for this container.",
            "format" : "double"
          }
        },
        "description" : "This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits."
      },
      "ResourceRequirements" : {
        "required" : [ "requests" ],
        "type" : "object",
        "properties" : {
          "limits" : {
            "$ref" : "#/components/schemas/ResourceLimits"
          },
          "requests" : {
            "$ref" : "#/components/schemas/ResourceRequests"
          }
        },
        "description" : "This type describes the resource requirements for a container or a service."
      },
      "ResourceStatus" : {
        "type" : "string",
        "description" : "Status of the resource.",
        "enum" : [ "Unknown", "Ready", "Upgrading", "Creating", "Deleting", "Failed" ]
      },
      "SecretKind" : {
        "type" : "string",
        "description" : "Describes the kind of secret.",
        "enum" : [ "inlinedValue" ]
      },
      "SecretResourceDescription" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecretResourceProperties"
          }
        },
        "description" : "This type describes a secret resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "SecretResourceDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/SecretResourceDescription"
            }
          }
        },
        "description" : "A pageable list of secret resources."
      },
      "SecretResourceProperties" : {
        "properties" : {
          "contentType" : {
            "type" : "string",
            "description" : "The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed."
          },
          "description" : {
            "type" : "string",
            "description" : "User readable description of the secret."
          },
          "status" : {
            "$ref" : "#/components/schemas/ResourceStatus"
          },
          "statusDetails" : {
            "type" : "string",
            "description" : "Gives additional information about the current status of the secret.",
            "readOnly" : true
          }
        },
        "description" : "Describes the properties of a secret resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/SecretResourcePropertiesBase"
        } ]
      },
      "SecretResourcePropertiesBase" : {
        "required" : [ "kind" ],
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/SecretKind"
          }
        },
        "description" : "This type describes the properties of a secret resource, including its kind.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisionedResourceProperties"
        } ]
      },
      "SecretValue" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The actual value of the secret."
          }
        },
        "description" : "This type represents the unencrypted value of the secret."
      },
      "SecretValueProperties" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The actual value of the secret."
          }
        },
        "description" : "This type describes properties of secret value resource."
      },
      "SecretValueResourceDescription" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecretValueResourceProperties"
          }
        },
        "description" : "This type describes a value of a secret resource. The name of this resource is the version identifier corresponding to this secret value.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "SecretValueResourceDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/SecretValueResourceDescription"
            }
          }
        },
        "description" : "A pageable list of values of a secret resource. The information does not include only the name of the value and not the actual unencrypted value."
      },
      "SecretValueResourceProperties" : {
        "description" : "This type describes properties of a secret value resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisionedResourceProperties"
        }, {
          "$ref" : "#/components/schemas/SecretValueProperties"
        } ]
      },
      "ServiceProperties" : {
        "type" : "object",
        "properties" : {
          "autoScalingPolicies" : {
            "type" : "array",
            "description" : "Auto scaling policies",
            "items" : {
              "$ref" : "#/components/schemas/AutoScalingPolicy"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "User readable description of the service."
          },
          "healthState" : {
            "$ref" : "#/components/schemas/HealthState"
          },
          "replicaCount" : {
            "type" : "integer",
            "description" : "The number of replicas of the service to create. Defaults to 1 if not specified."
          },
          "status" : {
            "$ref" : "#/components/schemas/ResourceStatus"
          },
          "statusDetails" : {
            "type" : "string",
            "description" : "Gives additional information about the current status of the service.",
            "readOnly" : true
          },
          "unhealthyEvaluation" : {
            "type" : "string",
            "description" : "When the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.",
            "readOnly" : true
          }
        },
        "description" : "Describes properties of a service resource."
      },
      "ServiceReplicaDescription" : {
        "required" : [ "replicaName" ],
        "properties" : {
          "replicaName" : {
            "type" : "string",
            "description" : "Name of the replica."
          }
        },
        "description" : "Describes a replica of a service resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ServiceReplicaProperties"
        } ]
      },
      "ServiceReplicaDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceReplicaDescription"
            }
          }
        },
        "description" : "A pageable list of service replicas."
      },
      "ServiceReplicaProperties" : {
        "required" : [ "codePackages", "osType" ],
        "type" : "object",
        "properties" : {
          "codePackages" : {
            "type" : "array",
            "description" : "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).",
            "items" : {
              "$ref" : "#/components/schemas/ContainerCodePackageProperties"
            }
          },
          "diagnostics" : {
            "$ref" : "#/components/schemas/DiagnosticsRef"
          },
          "networkRefs" : {
            "type" : "array",
            "description" : "The names of the private networks that this service needs to be part of.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkRef"
            }
          },
          "osType" : {
            "$ref" : "#/components/schemas/OperatingSystemType"
          }
        },
        "description" : "Describes the properties of a service replica."
      },
      "ServiceResourceDescription" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServiceResourceProperties"
          }
        },
        "description" : "This type describes a service resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ManagedProxyResource"
        } ]
      },
      "ServiceResourceDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceResourceDescription"
            }
          }
        },
        "description" : "A pageable list of service resources."
      },
      "ServiceResourceProperties" : {
        "description" : "This type describes properties of a service resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisionedResourceProperties"
        }, {
          "$ref" : "#/components/schemas/ServiceReplicaProperties"
        }, {
          "$ref" : "#/components/schemas/ServiceProperties"
        } ]
      },
      "Setting" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the setting."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the setting."
          }
        },
        "description" : "Describes a setting for the container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\"."
      },
      "TcpConfig" : {
        "required" : [ "destination", "name", "port" ],
        "type" : "object",
        "properties" : {
          "destination" : {
            "$ref" : "#/components/schemas/GatewayDestination"
          },
          "name" : {
            "type" : "string",
            "description" : "tcp gateway config name."
          },
          "port" : {
            "type" : "integer",
            "description" : "Specifies the port at which the service endpoint below needs to be exposed."
          }
        },
        "description" : "Describes the tcp configuration for external connectivity for this network."
      },
      "TrackedResource" : {
        "required" : [ "location" ],
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The geo-location where the resource lives"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          }
        },
        "description" : "The resource model definition for Azure Resource Manager tracked top-level resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VolumeProperties" : {
        "required" : [ "provider" ],
        "type" : "object",
        "properties" : {
          "azureFileParameters" : {
            "$ref" : "#/components/schemas/VolumeProviderParametersAzureFile"
          },
          "description" : {
            "type" : "string",
            "description" : "User readable description of the volume."
          },
          "provider" : {
            "$ref" : "#/components/schemas/VolumeProvider"
          },
          "status" : {
            "$ref" : "#/components/schemas/ResourceStatus"
          },
          "statusDetails" : {
            "type" : "string",
            "description" : "Gives additional information about the current status of the volume.",
            "readOnly" : true
          }
        },
        "description" : "Describes properties of a volume resource."
      },
      "VolumeProvider" : {
        "type" : "string",
        "description" : "Describes the provider of the volume resource.",
        "enum" : [ "SFAzureFile" ]
      },
      "VolumeProviderParametersAzureFile" : {
        "required" : [ "accountName", "shareName" ],
        "type" : "object",
        "properties" : {
          "accountKey" : {
            "type" : "string",
            "description" : "Access key of the Azure storage account for the File Share."
          },
          "accountName" : {
            "type" : "string",
            "description" : "Name of the Azure storage account for the File Share."
          },
          "shareName" : {
            "type" : "string",
            "description" : "Name of the Azure Files file share that provides storage for the volume."
          }
        },
        "description" : "This type describes a volume provided by an Azure Files file share."
      },
      "VolumeReference" : {
        "required" : [ "destinationPath", "name" ],
        "type" : "object",
        "properties" : {
          "destinationPath" : {
            "type" : "string",
            "description" : "The path within the container at which the volume should be mounted. Only valid path characters are allowed."
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the volume being referenced."
          },
          "readOnly" : {
            "type" : "boolean",
            "description" : "The flag indicating whether the volume is read only. Default is 'false'."
          }
        },
        "description" : "Describes a reference to a volume resource."
      },
      "VolumeResourceDescription" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VolumeResourceProperties"
          }
        },
        "description" : "This type describes a volume resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/TrackedResource"
        } ]
      },
      "VolumeResourceDescriptionList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URI to fetch the next page of the list."
          },
          "value" : {
            "type" : "array",
            "description" : "One page of the list.",
            "items" : {
              "$ref" : "#/components/schemas/VolumeResourceDescription"
            }
          }
        },
        "description" : "A pageable list of volume resources."
      },
      "VolumeResourceProperties" : {
        "description" : "This type describes properties of a volume resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProvisionedResourceProperties"
        }, {
          "$ref" : "#/components/schemas/VolumeProperties"
        } ]
      }
    },
    "parameters" : {
      "ApplicationResourceNameRequiredPathParam" : {
        "name" : "applicationResourceName",
        "in" : "path",
        "description" : "The identity of the application.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "CodePackageNameRequiredPathParam" : {
        "name" : "codePackageName",
        "in" : "path",
        "description" : "The name of code package of the service.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "GatewayResourceNameRequiredPathParam" : {
        "name" : "gatewayResourceName",
        "in" : "path",
        "description" : "The identity of the gateway.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "NetworkResourceNameRequiredPathParam" : {
        "name" : "networkResourceName",
        "in" : "path",
        "description" : "The identity of the network.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ReplicaNameRequiredPathParam" : {
        "name" : "replicaName",
        "in" : "path",
        "description" : "Service Fabric replica name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupNameRequiredPathParam" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Azure resource group name",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SecretResourceNameRequiredPathParam" : {
        "name" : "secretResourceName",
        "in" : "path",
        "description" : "The name of the secret resource.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SecretValueResourceNameRequiredPathParam" : {
        "name" : "secretValueResourceName",
        "in" : "path",
        "description" : "The name of the secret resource value which is typically the version identifier for the value.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ServiceResourceNameRequiredPathParam" : {
        "name" : "serviceResourceName",
        "in" : "path",
        "description" : "The identity of the service.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "TailOptionalQueryParam" : {
        "name" : "tail",
        "in" : "query",
        "description" : "Number of lines to show from the end of the logs. Default is 100.",
        "schema" : {
          "type" : "integer"
        }
      },
      "VolumeResourceNameRequiredPathParam" : {
        "name" : "volumeResourceName",
        "in" : "path",
        "description" : "The identity of the volume.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "api-versionRequiredQueryParam" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The version of the API. This parameter is required and its value must be `2018-09-01-preview`.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "default" : "2018-09-01-preview",
          "enum" : [ "2018-09-01-preview" ]
        }
      },
      "subscriptionIdRequiredPathParam" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The customer subscription identifier",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "ApplicationResourceDescriptionRequiredBodyParam" : {
        "description" : "Description for creating a Application resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ApplicationResourceDescription"
            }
          }
        },
        "required" : true
      },
      "GatewayResourceDescriptionRequiredBodyParam" : {
        "description" : "Description for creating a Gateway resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/GatewayResourceDescription"
            }
          }
        },
        "required" : true
      },
      "NetworkResourceDescriptionRequiredBodyParam" : {
        "description" : "Description for creating a Network resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/NetworkResourceDescription"
            }
          }
        },
        "required" : true
      },
      "SecretResourceDescriptionRequiredBodyParam" : {
        "description" : "Description for creating a secret resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SecretResourceDescription"
            }
          }
        },
        "required" : true
      },
      "SecretValueResourceDescriptionRequiredBodyParam" : {
        "description" : "Description for creating a value of a secret resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SecretValueResourceDescription"
            }
          }
        },
        "required" : true
      },
      "VolumeResourceDescriptionRequiredBodyParam" : {
        "description" : "Description for creating a Volume resource.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/VolumeResourceDescription"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}