{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Crucible",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://crucible.local/context/"
  } ],
  "paths" : {
    "/rest-service/auth-v1/login" : {
      "get" : {
        "description" : "Get the user authentication token.\n \n This is a legacy version of the login request. Using GET is deprecated as your password is likely to appear in logs which record request URLs.\n Use the POST version instead.",
        "operationId" : "login",
        "parameters" : [ {
          "name" : "userName",
          "in" : "query",
          "description" : "the username of the user to get the token for",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "the password for the user to get the token for",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "Get the user authentication token.",
        "operationId" : "loginPost",
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/projects-v1" : {
      "get" : {
        "description" : "Get the list of projects that the authenticated user is entitled to access.",
        "operationId" : "getAllProjects",
        "parameters" : [ {
          "name" : "excludeAllowedReviewers",
          "in" : "query",
          "description" : "if set to true, user data (e.g. allowedReviewers) which is expensive\n to compute, will not be included in the response data. Defaults to false so allowedReviewers are included in the response.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/projects-v1/{key}" : {
      "get" : {
        "description" : "Returns a project description.",
        "operationId" : "getProject",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "the key of a Crucible project.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeAllowedReviewers",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1" : {
      "get" : {
        "description" : "Returns a list of all repositories. This includes plugin provided repositories",
        "operationId" : "getAllRepositories",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "filter repositories by the repository key, only repositories of keys containing this value\n would be returned if value was provided.  Case insensitive.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "enabled",
          "in" : "query",
          "description" : "filter repositories by enabled flag.  Only enabled/disabled repositories would be returned\n accordingly if value was provided.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "available",
          "in" : "query",
          "description" : "filter repositories by its availability.  Only available/unavailable repositories would be returned\n accordingly if value was provided.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "filter repositories by type.  Allowed values: cvs, svn, p4, git, hg, plugin (for light SCM repositories).\n Parameter can be specified more than once.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum number of repositories to be returned.",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10000
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/browse/{repository}/{path}" : {
      "get" : {
        "description" : "Lists the contents of the specified directory.",
        "operationId" : "browse",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "description" : "path to a directory. When path represents a file name, the result is unspecified.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the Crucible SCM plugin repository.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/change/{repository}/{revision}" : {
      "get" : {
        "description" : "Represents a particular changeset.",
        "operationId" : "change",
        "parameters" : [ {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the Crucible SCM plugin repository.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "path",
          "description" : "the SCM revision string.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/changes/{repository}/{path}" : {
      "get" : {
        "description" : "Represents a sorted list of changesets, newest first.",
        "operationId" : "changes",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "description" : "only show change sets which contain at least one revision with a path under this path.\n Changesets with some revisions outside this path still include all revisions.\n i.e. Revisions outside the path are *not* excluded from the change set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the Crucible SCM plugin repository.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "oldestCsid",
          "in" : "query",
          "description" : "only return change sets after this change set. If omitted there is no restriction.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeOldest",
          "in" : "query",
          "description" : "include the change set with id \"from\" in the change sets returned.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "newestCsid",
          "in" : "query",
          "description" : "only return change sets before this change set. If omitted there is no restriction.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeNewest",
          "in" : "query",
          "description" : "include the change set with id \"to\" in the change sets returned.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "max",
          "in" : "query",
          "description" : "return only the newest change sets, to a maximum of maxChangesets.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/content/{repository}/{revision}/{path}" : {
      "get" : {
        "description" : "Returns the raw content of the specified file revision as a binary\n stream. No attempt is made to identify the content type and no mime\n type is provided.",
        "operationId" : "getContents",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "description" : "the path of a file.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the Crucible SCM plugin repository.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "path",
          "description" : "the SCM revision string.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/history/{repository}/{revision}/{path}" : {
      "get" : {
        "description" : "Represents the history of a versioned entity.",
        "operationId" : "history",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "description" : "the path of a file or versioned directory (note that\n versioned directories are not supported by all SCM plugins).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the Crucible SCM plugin repository.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "path",
          "description" : "the SCM revision string.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/{repository}" : {
      "get" : {
        "operationId" : "getRepositoryDetails",
        "parameters" : [ {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the Crucible SCM plugin repository.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/{repository}/svn" : {
      "get" : {
        "description" : "For backward compatibility we provide this method, but repositories should be referred to just by their key.",
        "operationId" : "getSvnRepositoryDetails",
        "parameters" : [ {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of a FishEye or Crucible SCM plugin repository",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/repositories-v1/{repository}/{revision}/{path}" : {
      "get" : {
        "operationId" : "details",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "description" : "the path of a file or versioned directory (note that\n versioned directories are not supported by all SCM plugins).",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the Crucible SCM plugin repository.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "path",
          "description" : "the SCM revision string.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1" : {
      "get" : {
        "operationId" : "getAllReviews",
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "description" : "only return reviews that are in these states.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "operationId" : "createReview",
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/details" : {
      "get" : {
        "description" : "Retrieves all reviews that are in one of the the specified states. For each review all details are included (review items + comments). The\n wiki rendered comments will be available via the <messageAsHtml> element",
        "operationId" : "getAllDetailedReviews",
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "description" : "the review states to match.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/filter" : {
      "get" : {
        "description" : "To ignore a property, omit it from the query string.",
        "operationId" : "getCustomFilterReviews",
        "parameters" : [ {
          "name" : "title",
          "in" : "query",
          "description" : "a string that will be searched for in review titles.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "reviews authored by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "moderator",
          "in" : "query",
          "description" : "reviews moderated by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "creator",
          "in" : "query",
          "description" : "reviews created by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "states",
          "in" : "query",
          "description" : "comma-separated list of amy of the following strings: (Draft,\n Approval, Review, Summarize, Closed, Dead, Rejected, Unknown).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reviewer",
          "in" : "query",
          "description" : "reviews reviewed by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orRoles",
          "in" : "query",
          "description" : "whether the value of , ,\n  and  should be OR'd\n () or AND'd ()\n together.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "complete",
          "in" : "query",
          "description" : "reviews that the specified reviewer has completed.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "allReviewersComplete",
          "in" : "query",
          "description" : "Reviews that all reviewers have completed.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "project",
          "in" : "query",
          "description" : "reviews for the specified project.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "reviews with last activity date after the specified timestamp, in milliseconds. Inclusive.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "reviews with last activity date before the specified timestamp, in milliseconds. Inclusive.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "This method should no longer be used, as it uses a POST for a read-only\n retrieval operation and is provided for backward compatibility only.",
        "operationId" : "postCustomFilterReviews",
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/filter/details" : {
      "get" : {
        "description" : "To ignore a property, omit it from the query string.",
        "operationId" : "getDetailedCustomFilterReviews",
        "parameters" : [ {
          "name" : "title",
          "in" : "query",
          "description" : "a string that will be searched for in review titles.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "author",
          "in" : "query",
          "description" : "reviews authored by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "moderator",
          "in" : "query",
          "description" : "reviews moderated by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "creator",
          "in" : "query",
          "description" : "reviews created by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "states",
          "in" : "query",
          "description" : "comma-separated list of amy of the following strings: (Draft,\n Approval, Review, Summarize, Closed, Dead, Rejected, Unknown).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reviewer",
          "in" : "query",
          "description" : "reviews reviewed by this user.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orRoles",
          "in" : "query",
          "description" : "whether the value of , ,\n  and  should be OR'd\n () or AND'd ()\n together.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "complete",
          "in" : "query",
          "description" : "reviews that the specified reviewer has completed.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "allReviewersComplete",
          "in" : "query",
          "description" : "Reviews that all reviewers have completed.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "project",
          "in" : "query",
          "description" : "reviews for the specified project.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "reviews with last activity date after the specified timestamp, in milliseconds. Inclusive.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "reviews with last activity date before the specified timestamp, in milliseconds. Inclusive.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "This method should no longer be used, as it uses a POST for a read-only\n retrieval operation and is provided for backward compatibility only.",
        "operationId" : "postDetailedCustomFilterReviews",
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/filter/{filter}" : {
      "get" : {
        "description" : "Get all the reviews which match the given filter, for the current user.",
        "operationId" : "getFilteredReviewsForUser",
        "parameters" : [ {
          "name" : "filter",
          "in" : "path",
          "description" : "a predefined filter type.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/filter/{filter}/details" : {
      "get" : {
        "description" : "Gets a list of all the reviews that match the specified filter criteria.",
        "operationId" : "getDetailedFilteredReviewsForUser",
        "parameters" : [ {
          "name" : "filter",
          "in" : "path",
          "description" : "a predefined filter type.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/metrics/{version}" : {
      "get" : {
        "description" : "Get comment metrics metadata for the specified metrics version.",
        "operationId" : "getMetrics",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "description" : "a metrics version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/search/{repository}" : {
      "get" : {
        "description" : "Return a list of Reviews which include a particular file.",
        "operationId" : "getReviewsForPath",
        "parameters" : [ {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the repository to search for file",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "path to find in reviews",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/search/{repository}/details" : {
      "get" : {
        "description" : "Return a list of Reviews which include a particular file.",
        "operationId" : "getReviewsDetailsForPath",
        "parameters" : [ {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the repository to search for file.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "path to find in reviews.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/versionInfo" : {
      "get" : {
        "description" : "Returns Crucible version information.",
        "operationId" : "getVersionInfo",
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}" : {
      "get" : {
        "description" : "Get a single review by its permId (e.g. \"CR-45\").\n If the review does not exist, a 404 is returned.\n \n The moderator element may not exist if the review does not have a Moderator.",
        "operationId" : "getReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the permId of the review to delete (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "delete" : {
        "description" : "Permanently deletes the specified review.\n The review must have been abandoned.",
        "operationId" : "deleteReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the permId of the review to delete (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/actions" : {
      "get" : {
        "description" : "Get a list of the actions which the current user is allowed to perform\n on the review.",
        "operationId" : "getAvailableActions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the permId of the a review (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/addChangeset" : {
      "post" : {
        "operationId" : "addChangesetToReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the perm id of the review to add the changeset to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/addFile" : {
      "post" : {
        "operationId" : "addFile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id to add the file",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/addPatch" : {
      "post" : {
        "description" : "Old, non-restful name. Kept for backwards compatibility. Exactly the same as POSTing to /{id}/patch",
        "operationId" : "addPatchReview0",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/close" : {
      "post" : {
        "description" : "Closes the given review with the summary given.",
        "operationId" : "closeReviewWithComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id to close. it should be in the open state.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments" : {
      "get" : {
        "description" : "Return all the comments visible to the requesting user for the review.",
        "operationId" : "getAllComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma-id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "render",
          "in" : "query",
          "description" : "indicate whether to render the wiki text in the returned comments. If set to \"true\", the comments will contain a\n <messageAsHtml> element containing the wiki rendered html.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "Add a general comment to the review.",
        "operationId" : "addGeneralComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma-id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/general" : {
      "get" : {
        "operationId" : "getGeneralComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "review perma-id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "render",
          "in" : "query",
          "description" : "indicate whether to render the wiki text in the returned comments. If set to \"true\", the comments will contain a\n <messageAsHtml> element containing the wiki rendered html.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/markAllAsRead" : {
      "post" : {
        "description" : "For the effective user, mark all comments in a review as read (except\n those marked as leave unread).",
        "operationId" : "markAllCommentsAsRead",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma-id (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/versioned" : {
      "get" : {
        "operationId" : "getVersionedComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "review perma-id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "render",
          "in" : "query",
          "description" : "indicate whether to render the wiki text in the returned comments. If set to \"true\", the comments will contain a\n <messageAsHtml> element containing the wiki rendered html.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/{cId}" : {
      "get" : {
        "description" : "Gets the given comment.",
        "operationId" : "getComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the perma id of the review",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the id of the comment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "render",
          "in" : "query",
          "description" : "true if the wiki text should be rendered into html, into the field <messageAsHtml>.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "Updates the comment given by the perma id to the new comment posted.",
        "operationId" : "updateComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the perma id of the review",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the id of the comment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "delete" : {
        "description" : "Deletes the given comment.",
        "operationId" : "removeComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the perma id of the review",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the id of the comment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/{cId}/markAsLeaveUnread" : {
      "post" : {
        "description" : "Marks the comment as leave unread to the current user - it will not automatically be marked as read by crucible.",
        "operationId" : "markCommentAsLeaveUnread",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id for the comment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the comment perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/{cId}/markAsRead" : {
      "post" : {
        "description" : "Mark the given comment as read for the user used to make this POST.",
        "operationId" : "markCommentAsRead",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the comment perma id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/{cId}/replies" : {
      "get" : {
        "description" : "Gets the replies to the given comment.",
        "operationId" : "getReplies",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma-id (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the comment to reply to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "render",
          "in" : "query",
          "description" : "true if the comments should also be rendered into html, into the element <messageAsHtml>",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "Adds a reply to the given comment. This call includes the  repsonse header that\n contains the URL of the newly created entity.",
        "operationId" : "addReply",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma-id (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the comment to reply to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/comments/{cId}/replies/{rId}" : {
      "post" : {
        "description" : "Updates a reply with the given newComment.",
        "operationId" : "updateReply",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rId",
          "in" : "path",
          "description" : "the perma id of the reply to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the reply's parent comment perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "delete" : {
        "description" : "Deletes the reply.",
        "operationId" : "removeReply",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rId",
          "in" : "path",
          "description" : "the perma id of the reply to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the reply's parent comment perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/complete" : {
      "post" : {
        "description" : "Completes the review for the current user",
        "operationId" : "completeReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ignoreWarnings",
          "in" : "query",
          "description" : "if {@code ignoreWarnings==true} then condition failure warnings will be ignored",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/details" : {
      "get" : {
        "description" : "Returns the specified review.",
        "operationId" : "getDetailedReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the permId of the review (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/patch" : {
      "get" : {
        "description" : "Get a list of patches and their details for the given review",
        "operationId" : "getReviewPatches",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review id to get the patches for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "Add the revisions in a patch to an existing review.",
        "operationId" : "addPatchToReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review id to get the patches for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/patch/{patchId}" : {
      "delete" : {
        "description" : "Removes the patch with the given id from the review. All of the revisions provided by the patch will be removed as well.",
        "operationId" : "removePatch",
        "parameters" : [ {
          "name" : "patchId",
          "in" : "path",
          "description" : "the id of the patch (as returned by the '{id}/patch' resource)",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the permaId of the review",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/publish" : {
      "post" : {
        "description" : "Publishes all the draft comments of the current user.",
        "operationId" : "publishAllComments",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id to look for draft comments",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/publish/{cId}" : {
      "post" : {
        "description" : "publishes the given draft comment.",
        "operationId" : "publishComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cId",
          "in" : "path",
          "description" : "the comment perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/remind" : {
      "post" : {
        "description" : "Immediately send a reminder to incomplete reviewers about the given review.",
        "operationId" : "remindIncompleteReviewers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id to remind about. it should be in the open state.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewers" : {
      "get" : {
        "description" : "Get a list of reviewers in the review given by the permaid id.",
        "operationId" : "getReviewers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review to add to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "Adds the given list of reviewers to the review.",
        "operationId" : "addReviewers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review to add to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewers/completed" : {
      "get" : {
        "description" : "Gets a list of completed reviewers.",
        "operationId" : "getCompletedReviewers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id to retrieve reviewers",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewers/uncompleted" : {
      "get" : {
        "description" : "Gets a list of reviewers that have not completed the review.",
        "operationId" : "getUncompletedReviewers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id to retrieve reviewers",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewers/{username}" : {
      "delete" : {
        "description" : "Removes the reviewer from the review.",
        "operationId" : "removeReviewer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the perma id of the review",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "the name of the reviewer.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewitems" : {
      "get" : {
        "description" : "Returns a list of all the items in a review.",
        "operationId" : "getReviewItemsForReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review (e.g. \"CR-362\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "Add the changes between two files in a fisheye repository to the review.",
        "operationId" : "addFisheyeReviewItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review (e.g. \"CR-362\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewitems/details" : {
      "post" : {
        "description" : "Adds the given review item to the review. This will always create a new review item, even if there is an existing\n one with the same data in the review (in which case the existing item will be replaced).",
        "operationId" : "addReviewItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review (e.g. \"CR-362\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewitems/revisions" : {
      "post" : {
        "description" : "Adds a review item for each of the supplied crucibleRevisionData elements.",
        "operationId" : "addReviewItems",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review (e.g. \"CR-362\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewitems/{riId}" : {
      "get" : {
        "description" : "Returns detailed information for a specific review item.",
        "operationId" : "getReviewItem",
        "parameters" : [ {
          "name" : "riId",
          "in" : "path",
          "description" : "review item id (e.g. \"CFR-6312\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "review id (e.g. \"CR-345\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "delete" : {
        "description" : "Removes an item from a review.",
        "operationId" : "removeReviewItem",
        "parameters" : [ {
          "name" : "riId",
          "in" : "path",
          "description" : "review item id (e.g. \"CFR-6312\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "review id (e.g. \"CR-345\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewitems/{riId}/comments" : {
      "get" : {
        "operationId" : "getReviewItemsComments",
        "parameters" : [ {
          "name" : "riId",
          "in" : "path",
          "description" : "the review item id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "render",
          "in" : "query",
          "description" : "indicate whether to render the wiki text in the returned comments. If set to \"true\", the comments will contain a\n <messageAsHtml> element containing the wiki rendered html.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "post" : {
        "description" : "This call includes the  repsonse header that contains the URL of the newly created entity.",
        "operationId" : "addVersionedComment",
        "parameters" : [ {
          "name" : "riId",
          "in" : "path",
          "description" : "the review item id.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewitems/{riId}/details" : {
      "put" : {
        "description" : "Sets the review item specified by itemId with the given reviewItem. The old review item is discarded. Can only\n perform this operation if the old review item specified by itemId can be deleted. The old review item's permId is\n not changed.",
        "operationId" : "setReviewItem",
        "parameters" : [ {
          "name" : "riId",
          "in" : "path",
          "description" : "a valid review item id (e.g. \"CFR-5622\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "a valid review id (e.g. \"CR-345\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/reviewitems/{riId}/revisions" : {
      "post" : {
        "description" : "Adds the given list of revisions to the supplied review item, merging if required. For example, if the review\n item for  contains revisions 3 to 6, and if:",
        "operationId" : "addReviewItemRevisions",
        "parameters" : [ {
          "name" : "rev",
          "in" : "query",
          "description" : "a list of revisions to add to the review item, merging if required. If a revision already exists\n in the given review item, then the given revision is ignored.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "riId",
          "in" : "path",
          "description" : "the id of the review item (e.g. \"CFR-5622\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review (e.g. \"CR-345\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      },
      "delete" : {
        "description" : "Removes the revisions given from the review item in the review specified by the id. If the review item has no\n more revisions left, it is automatically deleted.",
        "operationId" : "removeReviewItemRevisions",
        "parameters" : [ {
          "name" : "rev",
          "in" : "query",
          "description" : "a list of revisions to add to the review item, merging if required. If a revision already exists\n in the given review item, then the given revision is ignored.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "riId",
          "in" : "path",
          "description" : "the id of the review item (e.g. \"CFR-5622\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "the id of the review (e.g. \"CR-345\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/transition" : {
      "post" : {
        "description" : "Change the state of a review by performing an action on it.",
        "operationId" : "changeState",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma-id (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "the string representation of the action to perform. Valid actions are:\n \n Note:",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ignoreWarnings",
          "in" : "query",
          "description" : "if  then condition failure warnings will be ignored",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/transitions" : {
      "get" : {
        "description" : "Get a list of the actions which the current user can perform on this\n review, given its current state and the user's permissions.",
        "operationId" : "getAvailableTransitions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the permId of the a review (e.g. \"CR-45\").",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/reviews-v1/{id}/uncomplete" : {
      "post" : {
        "description" : "Uncompletes the review for the current user.",
        "operationId" : "uncompleteReview",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the review perma id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ignoreWarnings",
          "in" : "query",
          "description" : "if {@code ignoreWarnings==true} then condition failure warnings will be ignored",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/search-v1/reviews" : {
      "get" : {
        "description" : "Search for reviews where the name, description, state or permaId contain the specified term.",
        "operationId" : "getReviewsForTerm",
        "parameters" : [ {
          "name" : "term",
          "in" : "query",
          "description" : "a search term.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "maxReturn",
          "in" : "query",
          "description" : "the maximum number of reviews to return.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/search-v1/reviewsForIssue" : {
      "get" : {
        "description" : "Get a list of all reviews that have been linked to the specified JIRA issue key.",
        "operationId" : "getReviewsForIssueKey",
        "parameters" : [ {
          "name" : "jiraKey",
          "in" : "query",
          "description" : "a Jira issue key (e.g. \"FOO-3453\")",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "maxReturn",
          "in" : "query",
          "description" : "the maximum number of reviews to return.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/users-v1" : {
      "get" : {
        "description" : "Get a list of all the users. You can also ask for a set of users.",
        "operationId" : "getUsers",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "a username (or a few) to limit the number of returned entries. It will return only existing users.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/users-v1/{repository}/{username}" : {
      "get" : {
        "description" : "Returns the user details of the user mapped to a committer in a repository.",
        "operationId" : "getMappedUser",
        "parameters" : [ {
          "name" : "repository",
          "in" : "path",
          "description" : "the key of the repository",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "the name of the committer",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    },
    "/rest-service/users-v1/{username}" : {
      "get" : {
        "description" : "Returns the user's profile details.",
        "operationId" : "getUserProfile",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "the username of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful Response"
          }
        }
      }
    }
  }
}