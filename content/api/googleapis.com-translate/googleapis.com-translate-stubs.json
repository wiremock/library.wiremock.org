{
  "mappings" : [ {
    "id" : "a23093b6-3f60-4f5c-8f53-58f67c7811f4",
    "name" : "Translates input text and returns translated text.",
    "request" : {
      "urlPath" : "/v3beta1/3j8d0vc3aaxarrd5m2ahc4r5luo4miel4m81lrghi5pn1l:translateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"translations\" : [ {\n    \"translatedText\" : \"w8cjlcfp70fxurrjbdvf7to5unx194ffje0n66w8ayt11gst9q1cr67v0qarl6eztnts48689ixnkdjkg6q4b2ycoqeuwba7ngjgdeqv8yu4cjw51rlwes34jaajuz2uwwp6ed6zj4d0crvsv2rwzj35g7983b1\",\n    \"model\" : \"0u33yo7if5pkb7iv7r2r1gxogrx714x6lcs41o459yrwubmjd9mzgesyry59lb0b2bb19ot3vjm9nax7hlgiho\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"jhug49j07gvtzsdskvjg8qrv3ej3fmblrnr0ot8l649c6wwmlxnat6w3708eoszlhfmwri3pdqu8pg6t5juxew1ysb5cikoumguz4vo2a699722ei44x0wabn2j8lshl8uwuvvmiztjilxem3puw2y3vyuxnufc04m\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"aedvycctuiy284tj8784rhppkwny4hiswmq4tmb3o09t48i8t99536jxo0otbo9w2fw2zth3fstmsqsg9ap5ku5orpx4cn6swlmdo323o2ecncid723zhxhe25sbvr5nnodjjhag9mpg6vzrbxfjnw63gpfkv06250kaciw\"\n  }, {\n    \"translatedText\" : \"ubf6sm9aqv2t8asfiydu9mgnc9bsfyw37bduhq9e9j569trla7igz3sfd69gvrhtsiw3q9hrliqxy439u0nmc1leq3nnadxsuys9ret6kvijsvkg0h4i6rkhzyx7ch0oudi5ne9a5ksmmd\",\n    \"model\" : \"t7iys4saqn87k4se9c0iz8sm70x9khf8y5mleflbhwb2bf8ax3g5u6dx728pidry6p0qev4dbneg0eo9lw1n4xizpog07qy9getzf9wp911zfnd52qjpl03p4rm41ob8l4\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"t4k94pmvrpn7xiihi2xmd3kxzb4r7pg09kqjqvketv7s8yy4vp4bilbxmm1dlkt3njgsmeii6wvpmsid7shtumkpeyhxsu5nnvkw0ibmq1n5vsv0jvizfx38ab2j0cc\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"oymi023f83m2hk8mnp477omcj0137gmuzwny7wdxmi3f0fcnjrmdlv9mdfme3b66un0i5k6sxntxvh7k9dsgs4gjmn78l8z6d4ujupa4xnd8d9j8e9fqsahqmbjht4ymop4s1vklv8jorza9x953c375x3raribyvg7drgmetb2i5oyw1blut71uge\"\n  }, {\n    \"translatedText\" : \"6k3l614k84lp3wgqi72cw8r68gzp50z2zxz4wg2set0nuvc7e7ha4v48del1ee0gq0jur8gyg9v1qlmnqsni9203dynmpgweljbo4miy5ecchu21fmjbccjlq003nocq21fldai0vvav6ljzl1wtf24csto268bemfb1pz50845qi3xn8x0op876d0y7tsmswb3l\",\n    \"model\" : \"7silw1qztygbc9ct54e18haw0h3wz97oufsbjnyu2pvu84rd5isghmqpg468wfpvgd08m96zd1ucqbrptdjc5i4cgoeho8mdsa3gv6vwc4lydjesihm036tbe7wwgsnkqe8lsjxfhrujvnjgu5iggsqv5ob4g2oh2t3xd7c\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"cfbyu28xpunxt5dstjc6kp9q2pil5vkuhjl9ysrtp55gjroxdwqt937zig8r771a3dk1hk0zrdpi3fc21tfs2s4pr9i9zcm1ufs76wqi3sq575v7t4jdj9c5s4o88gcjnzkhgaa4ib9fyh59o3pipy7nyc6myymjeuephqqqk2rncsk87valy9iuw7s\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"2d2bxb56eftfbtf7nu6shos7g5950qnyvjkurs9v3umx9bc5wsd9wew4s5duute8tznygrsmjkyhltmhtvi1t8hu8ieevmjj5lcb19gbhp5bd2945xc532s7pgnvjwg3yhjqp\"\n  }, {\n    \"translatedText\" : \"0tq1qmm7s6ofoflbdx7tezo26uy5gzr44jh1u1fnjlq3w56mi5pgckewed4naomn733eyh7r2e84s8n6vuf37wpf16b1zq60wxzfyu92y0d4ht4pabescqovd1ff57hfxqp458yc5s5xnwlp2thbyk8g4xx4n1x9tyhbc6qp\",\n    \"model\" : \"7xzb6mpdtjvmasd12tjxrmb9rihmiq4qauyj87odzssxjyevgam6tvcsg6wdu7cqdpw7ytggt7oh\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"3u9cwz7fktm0n7xw1lk65i4k3l4gnizjeyxl0noudbbpibqg79xl2nss3ug2re2akbd6jiyxpkmc0c4f5n078tpe4yyz5pp\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"3cvw2lraox5owtyk70jhwqgkxmkortedsut2t0iso127cpnpk6w1vshioc55b3epwti2kv1oc6w7lilwpnefj8qtetncmbfl446mjpae4h16qugudfkx6ddvrzwhfy7y0\"\n  }, {\n    \"translatedText\" : \"6uf\",\n    \"model\" : \"o06sw6mnhgqmd4iu5b69d0sjo63up91tp14lxrq\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"zv0sj7ph78ph2me70emli1jpr78iotq974dvo0j0dl3fa2gxpwls5hh9vjnebfcysbiz5ltrwhd25v7nu5ldigky3jqhm4pyhwzegyg4t05dqt39trn4nlbgqlj3tl5janzq0r\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"hfg17r8bohnuxrjq8\"\n  }, {\n    \"translatedText\" : \"7wt6hfo89vxlusjfumw9xxy8cirn2n65f2fholieqh55jq8dgzi1pfa0gf769qubs493fve269mdlrsc6ala9exs5by3k3ieuef74kmm4fwke1\",\n    \"model\" : \"gmy3kobgww0r8r986sbp8cunwqj37q72xb9ilg58ls5e2aj5qox1lsuuyui8zlm72gmwkdobe9y1uj88j3simv\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"v0rlyctn9qxky\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"yqu2oruix\"\n  }, {\n    \"translatedText\" : \"9aeyh99kvq7m9ff9iorry0b6uo3rd64v5f4x1x6mbzkx01py8nnmfid1w\",\n    \"model\" : \"5nkb4tampru744z9ggbq4y8ibhi7ey4v6992e13zwpyyj2vk2fhechabvb02ppyxpdp1znkm3kndvmxx8358u33gyzt3hkof81mvfjpqtn5lqdot8snbhx7qq65j5ci65piomoj9wy9am3ph0y3se60jsqgtq1jvh3vl\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"5xy1d6xkfqo4sln6zo3qtb4szw0c0fef27ngfu6r9l35gf9ts1db\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"x085lx6bglx179i2l0uwpv63vaf2xiqwc9k5lay47dhx\"\n  }, {\n    \"translatedText\" : \"s58mf9tusl8nctcfnmrg79gimxrioc1umvt633dmp9pgonz141yfs91542luvp7wa7xdq4fuc4mso\",\n    \"model\" : \"kuwx5e246qps8n9h4wgftm3t3adosdyf8z8zwxwknkn7akvoarqjprn65etuxfcfy81vl0i3svs5m936pe03fddct5ph9dihq3ddaya98iler30g8n3sctevu9ftkocckyo64w6qrtl361cmbhih4eeqof37o7uh9rt42afhx8tv70\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"hjejo3aw2qgt1qlmylf5a4gyuog55npc287q05jgt32ja0nn90zq2ds4oqog4yltn7ez1ejx6jqfm2oo6nqv5n\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"p0khod2wo6fzhvigahm4zondvlqcv523el8nks56uueo43m4t0uq4xrh49yjrfwgsje13ovxeo4j9v6v403mh3kd54z5z9gbscm3nrc7dy6q9dyuqrwnhpuy6yijglij5wxd9tgk6g8a0fn\"\n  } ],\n  \"glossaryTranslations\" : [ {\n    \"translatedText\" : \"dao79gn65pj2x1gxu4ly54skgnaiyggd17312o7ikop59yau6tspdn7qi7l3vdkdtmhed3v9gudl8blhjyutx795m88f5vwj1axz3o49xulpe7unyzlri6i9h5ds5yb7p8j2rjyv75bkgnh\",\n    \"model\" : \"mtvo4qhptpseos2zc06zxz2g4veu40c5fcwqtb8znmendoucaoeltevo5d6l9m1tfu15kzpjtdpgghd59w4bg9tp2ktcsavrnqm2hrhuxtx3zy7s3l5oc\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"ipk0wx30fksu2mhxqr5hi3k51iyull8ct79fyoywoz64th5qoys9x4t0k6g9n2vxk07xgzh06jh5x1lgly2md27wymiecmlg4gyq0yoq67irsdmyp0zgzr3y\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"r16igcb4cywtiurhdwb703vjz26wiaeoqn3y3tyn2hobgju67jyu7ho6q7mlq5mz4c793gbdyt7s7d8nxzvlt00fxylfyzerw45ewj4hat20\"\n  }, {\n    \"translatedText\" : \"0bp6f5p38788aehouv113ir8zpst57jo0qrkpm1dm4hlpgu3fj6yigxh3plwunqmws4wri\",\n    \"model\" : \"xwo73in6htx8p4t7ypkeugdgbfewf84ocn7iuowja9j035gcv\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"nxg8beq2w30xsbqka7n4gaymukaqcjpmlrzzb98l97cywu4mhoxpv9ded26kkibg2ye7gf8ked4mczvwquea1rr6h61ryxd17\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"fgk691cpszfgu2q6yufju7l5aaqqvmguyzptc0xyjk23nwskiczgmkq8hqirfh8rx\"\n  }, {\n    \"translatedText\" : \"4oa0zj7tccsrp583aqs0n3m6lckdpxtqg11n\",\n    \"model\" : \"hhmio1zlqjlb0zdcltvamm4pyj0wbm2yppdkxmb02hwzsk68ocd05yieg90z80b0ex5in\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"1tkghndmvn98369zg7t92wtjz7llb3ngzjmgv9mx8pvgudjkhphszkg1qp23gou81142owwaao8vsqscldlidb6ucq4f\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"nd70zm78gxcc62jao5bhzt5z7cs29bcshe20v9w52qeksoc5mp6wvvz0bhadz414vu7fpoog9zhuq1tr9e8u0z9qi370l36dtwtzt9ix80hc3jxxqvv98n44vjvt\"\n  }, {\n    \"translatedText\" : \"19b0s1uh5paxddw7rqyzqms154py3aiowh32jnv\",\n    \"model\" : \"ahhxz3lmo1gsv1tw5c18r0d0trg6lbpavzpw6gzy26cnlmiqss0h1a41wnabbqd9t797f8kqeilztjjxw8io9sppz0\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"g4iyi0mg688xrkit77xxvpvvc6hyq0nn65s3qtg5ertqnq2srulsw9rihm\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"0cbajxhuq0ptasbywc9mw8yoaq8rxyrol23r5463e\"\n  }, {\n    \"translatedText\" : \"tjby6h41se5mvky4xx14xrri94h2du9awc5tyxc13p5qgpoikk7y21ebuefvhi52j6wo99jdruuoc4ji427f0ey3ursuj2w3it3z2zdylts7tresrbiyq22yeg5ejvgjudbnanl8j2ob57kwkkofhqok8ylcgk6w1efvpwtjrtu1\",\n    \"model\" : \"30rqpqxnyg5l3ia0c61y2khfvkheqlpva4vir2ly37zmgcmtso4inzk2pon239p839uv86ot3w1ydfjd394ph8hqsbbu5b1dqqcxr5cz77l7mx2ezcmrzu1v5yamxov77kf4hi44\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"mygu59hqq854leja5fenhkblc2nk0o037slaixz3v0fdaiyixecolwsx5te1xq2m8wp2my371o8ngnlrnlysa7dq\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"k9zypof0kw96xc451ugzcpql4fgrbg5x74021rp73vqp82gc2rw50kd6uqkmx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a23093b6-3f60-4f5c-8f53-58f67c7811f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.361657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateText",
          "schema" : {
            "properties" : {
              "glossaryTranslations" : {
                "description" : "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              },
              "translations" : {
                "description" : "Text translation responses with no glossary applied. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "23e04720-f45b-4d2e-b5fb-80e8c2796e0a",
    "name" : "Translates documents in synchronous mode.",
    "request" : {
      "urlPath" : "/v3beta1/3taksqqnxc3s41ied4c5ekm43yx8supvinuh4s25qfybxgxrrdrx2mciwovg146fk1g9pa20c71yv0le6tqec9vs7h77dn12tgt05sy1y6rpfst735io0lbmpadvs57rfdxv2sk0wfhkzp5017fzazx7db9mvyi83e0ob9a9:translateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"h8kvknygwjy5fonsdhz0626cfgacrgyvjx0j0aje9oedrszodm09tbkfqlg7whgpl00\", \"bo3edg6cewolowkv15z8clxf5lapk41i1stllg15x7mxe3tycyaur39hbyb5bydju0d740zh0os1zgpa8xuhdz1db3yjr3i6ncaxzpm1fliamvnnhffacqgquuwnvof\", \"22uz117vmrtc\" ],\n    \"mimeType\" : \"248wc0geqpr8wpkdesttw7jykoj2pzgp8ytpbtw2hk1vpy5zr8kwtvpk8jhqt1b5zjf4vrq4zria5xg87saxh9gu7jmxpm7cdj66jfyq992temavd8453z3bdc4p54xokpbrg8xrg7wgh9452t9zsop7j4vngmbgb61i2i945toe2n\",\n    \"detectedLanguageCode\" : \"lzymwo9v4k2zfo4oionhmn03359xyzd0d4ynrmcsq3bcvsbawd80y3cxsqj3saehfmttk4wxu0pjckf3n5ud68f9hch0ska0swob8xv9avb0s401ybmyj64ms559un9a7junzeeklrqj8g9c604tkq6xg1f7dtyq0bk7o11jvpx4gswr\"\n  },\n  \"glossaryDocumentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"5gioj3uf88djp2sms2n1ybbh8e5f9lhjzoqc82zohikcmdfne5xcbhtn2crnh8vth7z6bcvc6wzs7xxfxp1ex0ron7pwj9qda\", \"hac0hp21gx3dhewlg64kjqq5m3ey7n1ylyvmoc51bpz6y40gr6k2vfoeyni7oqv6oz6pfjyjhqx1wb9nic7j6meyuymwxarnsra97bmb1w3u8zdr4okwcfdqws4i14w8molenr90t3vhuhgzfuv7o7gmu1efpab3y0554rmzbb4uc\", \"z74sds2tn5h592c82bxand65swdfkdndwrkvbxt\", \"e397vtyxo2e4t1qpzmbg2wdabtx3m6roupanxmqtfuxkbjeve1n8n1xddpiqbchqt4p0lx0nlsqjp9mf97a8gfqic44qaqfx7iy002hd32tyie956atkqx4atbjwj7zarcsyiasgkdsbor7sukg1t45hk0uaa15sx9ly\", \"towzv5uvq63n2saa6nrwozwab5tou9u09ygz7j8vv9c7zij86kk0p4dxz729v3atjb75rcrujb6j186tre51pq29wvhcj3lonrkmbkqf1e6tpfuirh\", \"5602w9gl1d5bbpi1fqglx6lpogdtwgd94a13a3blkt6mthab429217yntpms990f87j5a1jyctcx5wvvc8ck5um5ym6zm02pdrg33xjlvf4jcvvdnghmotolzfadwo38r56n5w9ssz8p6i8l1fc5jp5p9eksijtuq2kedy3p78q2mljrqdmpdypgy9jp5nqd\" ],\n    \"mimeType\" : \"cxqbi7ykui3g0fb1m9wxsqhe5apkjb92niabg9k5af65k0tz76ov3hvtiet9olwoakjdrgaz2aawmv2elibxejbzyios35fy071o1am6f1trovkj4egwg87797qzgduvq5aan12lc1cwm0c1hesi82l9txwbpklzi\",\n    \"detectedLanguageCode\" : \"9tkjgveb7l8b193lyewug0x8yv0ukyeo0dyjwk7987g2ne3yuu\"\n  },\n  \"model\" : \"zn630qfszkodh6fkxikhyb6qxhyl4h8yav3db7ma3081ss8pdi8xidc9t48jy0v1gmm1x8csgos3xuageqr8at5boiqet2cdlxi4wo3beoebep91dka2pfbxtqtztjm1a70hdpuozcici5h9prw2xiwtsw49dvy9mdcd4pp96hiqlpmiuw6ow8agqc86z1l\",\n  \"glossaryConfig\" : {\n    \"glossary\" : \"ig5noxo82583z8o7tl6ng0xoxag5nk678595mczbcrznj\",\n    \"ignoreCase\" : false\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23e04720-f45b-4d2e-b5fb-80e8c2796e0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.355935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateDocument",
          "schema" : {
            "description" : "A translated document response message.",
            "properties" : {
              "documentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "glossaryConfig" : {
                "$ref" : "#/components/schemas/TranslateTextGlossaryConfig"
              },
              "glossaryDocumentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "model" : {
                "description" : "Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7b8a41a6-2bd6-4786-a826-eb9c9a0bd244",
    "name" : "Detects the language of text within a request.",
    "request" : {
      "urlPath" : "/v3beta1/jwej0727l7gh2ufjnt1r4fv0v0blnhwszj2hm7pe7kpf2govq2k5tq3mdgxfdqtzxstwvpkro05feiaeojzibxprc94:detectLanguage",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"confidence\" : 2.37317756906232E38,\n    \"languageCode\" : \"p4zg72yvpz87zwl5cj7bvbrmc97nojpwgy5yfztalmqt75p9p0fhipd4aysbgr8tvb5pgk3wpvnog5nx3bn1cxfznnxmb07texmkgbu4z11s\"\n  }, {\n    \"confidence\" : 2.75219113227368E38,\n    \"languageCode\" : \"r9423jrpe8j4gn99dqm8xdzznuocxnb7y1ing61cr2d2kdwlfou57ffa3k4l23hl8m05p4j3ohk34gy6fusqivq6lnwvurzfyhvpxu3i945fd9ldjr96o5rdi2rmh1dsvyvkptouedfuur7lx85j0hwfdvmmybrcrkjs\"\n  }, {\n    \"confidence\" : 2.1670571593544438E36,\n    \"languageCode\" : \"h3520efvbpdijg1r46p1o4fqz3kqnf15j3amkayjzjgboyoglchi8d7kid6mvklrrzdpcxz3vq1flg2\"\n  }, {\n    \"confidence\" : 1.7992646409986086E38,\n    \"languageCode\" : \"7418owwbh0511cgznq4hwodb2plpmhksg0mlew3qtjclxqpk65bb79v5vg0uf1iif7k4hgdmcyn4i21o2uwk6khvci9r31tpl650gg1zizgsp3pyi4n4y6o9jaio2szg8hzgrg0ufwm7u9xfdksi5rcqnu\"\n  }, {\n    \"confidence\" : 3.8535456675510725E37,\n    \"languageCode\" : \"pcqh2u334msp27hjxefkt2r8l6rhe8wfbvip8q8idgwe353bmfh7ab4acirxjb8m5nb4wkm7n052iutxpfuiyyvsp7fqqqaud0h\"\n  }, {\n    \"confidence\" : 3.3704814398763384E38,\n    \"languageCode\" : \"swpszqr1mw724dusxhid66fcfrxiwcjv9v1qru3zw9d3wrrhi5u3i7ujxwoxwtfovtma5ol04itd27zqv6l4j3sfc66tp2jfzykm1vchfvu6juxk7kjtvj9u4n7wcrso8yuwroghoky57g52vnzt025xcdhof555vth3zmm5wdvzb\"\n  }, {\n    \"confidence\" : 1.0787765653341641E38,\n    \"languageCode\" : \"c2fiwevvvf80ddug2pmlqyt6i7vmusjn66fcw4pfz09cq3uil5s3ld5xshjs32ybk7jy70k95mhs5u4x2758vgp8psbtc11ph09hg3dzv9v7ssdvdopeus8lxhnhsjllqxcdklkb9xyaa9d197sk4dfyktg9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b8a41a6-2bd6-4786-a826-eb9c9a0bd244",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.344244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.detectLanguage",
          "schema" : {
            "description" : "The response message for language detection.",
            "properties" : {
              "languages" : {
                "description" : "A list of detected languages sorted by detection confidence in descending order. The most probable language first.",
                "items" : {
                  "$ref" : "#/components/schemas/DetectedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "98c709da-34af-4e74-9315-9c1cc429fa34",
    "name" : "Translates a large volume of text in asynchronous batch mode. This function prov...",
    "request" : {
      "urlPath" : "/v3beta1/iiu61vcz6dj9uk3ogfn4plq7z13zr3mv6gejto3sdnddu1nl1nnulw3860tncxg93bm4tuulm8n6t802n3crj5ahlgx6le5y599hb0eb8sq:batchTranslateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Adriene Kuhic\",\n  \"error\" : {\n    \"code\" : 710683695,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Omnis pariatur sed quo accusamus nesciunt quibusdam. Consequatur quia qui. Officiis voluptatem laudantium omnis.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98c709da-34af-4e74-9315-9c1cc429fa34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.338189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateText",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "fafe9388-7b90-4a3e-a850-602cbc3d283b",
    "name" : "Translates a large volume of document in asynchronous batch mode. This function ...",
    "request" : {
      "urlPath" : "/v3beta1/9rfxllo8k7jkc3yk82slgz9nbs2u7nf66rmj85k222g8umktyc1wx97hdvdywznymbptxqtxjdy9153lwnzx03b7qo38cgmj8q83m2uajp:batchTranslateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Tyisha Labadie\",\n  \"error\" : {\n    \"code\" : 332945307,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Qui unde magni cumque voluptatem corporis. Excepturi commodi et voluptas tenetur debitis itaque. Repellat dolorem sed ea aut ut necessitatibus. Occaecati et aspernatur et necessitatibus nam iste. Quib\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fafe9388-7b90-4a3e-a850-602cbc3d283b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.336312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateDocument",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b28685dd-9df2-44cf-aded-790e811b948c",
    "name" : "Returns a list of supported languages for translation.",
    "request" : {
      "urlPath" : "/v3beta1/ciixg4ea7xrmcl8yup8h08ja6pcu89ew4nmbqkwydm2jtpjbpgznbbknmh138tzjoumtnz6yguvm5het3j5ju1n0xhu8t5hiwh746iiwwvl2xa59qxqhifq73p6ht9ygou0uk0pa1rokdrfjo1oxnxm1tp9g6f0ihsx99zr9wgx6k6yv49dwg2exlx0js0/supportedLanguages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Clorinda Ebert\",\n    \"languageCode\" : \"f5nssh9iuo6ywul5urtymsiborvppwrumzmbvjknew03qmb40z7rhcv3ks964pv6t3pr3a33rfv16k2r9b3urbucr2ayeluk9oveshbp9pfws46phn1jczn1i5ipo4h8dv9uuc72leb4scbfvzgvwvav81ozfvqd6xjzhwv6jq5dyr\",\n    \"supportSource\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b28685dd-9df2-44cf-aded-790e811b948c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.335697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.getSupportedLanguages",
          "schema" : {
            "description" : "The response message for discovering supported languages.",
            "properties" : {
              "languages" : {
                "description" : "A list of supported language responses. This list contains an entry for each language the Translation API supports.",
                "items" : {
                  "$ref" : "#/components/schemas/SupportedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "bec73dc6-e1ab-47ce-b408-810d63935bcd",
    "name" : "Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if...",
    "request" : {
      "urlPath" : "/v3beta1/w3rjo8kj65ibioae7ttmu4eb85lf7435u7nchlr398pblfvlrn5uzs25hkhpj8l80jdcwg2hl88wf5rfqerksgbwi2niv9dtxyq9wuz559atgegscj80tkab4ab51bw4apmt7ywoq644vrloy1n6m49ve9ks7bgwpgkyrnzt/glossaries",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Davis Gutmann\",\n  \"error\" : {\n    \"code\" : 1950875028,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sunt sit ut explicabo quas et nemo. Culpa deserunt ipsum rem perferendis non. Modi qui quos voluptas repudiandae laudantium.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bec73dc6-e1ab-47ce-b408-810d63935bcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.332055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "436797c9-0d16-43b3-9df7-fc361c952475",
    "name" : "Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't exist.",
    "request" : {
      "urlPath" : "/v3beta1/nine01wbbujlte87ef10mldm5fgddswxby00glparszz94e8dm26ig8kiu61sbn9ie5tqlndzokqhgyt14kjui74ezbf4p68tixx1h8fglx42hlvnjf8au1qwk9rxutyyqkwi2ydc6iv70v65tgz9p423c2y70yv7ifvh8qrg9k36xbxh96jcz7322/glossaries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"nmdbftvoux2hpp7c7q1xhbsy9jwtigul3rjphoul7btjlbortle0zxwlrssslhv28tw94y54uh\",\n  \"glossaries\" : [ {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/559442\"\n      }\n    },\n    \"entryCount\" : 1512768518,\n    \"submitTime\" : \"2022-08-15T06:40:36.314547Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"us344eae7ozxdfbxvy7gutb1z4oyqbbrgkb6w51gicbq40qxk1xciu7c7dh6os602gz2qmb4l1c6x89p4hp47x02umkr7ee70dskv7czhdzwihf4lpqsgw1un9aknf\", \"65xyv16tzygvwtrhtgif4zj1jkm5w5k6zkc08xz0v8lt9pcto4c2in0szsd71ywqhv70lehdcautn34oa3fc62c3q79y8qd0s6buc4sfjm7bsr2124buiwg2xxv916lrfeflza9s7wb85w56trjfk\", \"x103lyxb3fwgs5wsyr1ktgknobt7jzbm7hgiuyil6i2zgfn5rszkftfxhwxwbujbeodryuwvmdj2bt8o0mkcqonoev4ukx9n1y\", \"hrx4seds6mujkfhwdt11lefp880t5qkxn1g2qsamjrgw5eg1efgovghf0iuif3jpyzly1vtd67sqtbdt05jfopr8q1e54onexjz64oneqf3nmq2nh7l8r6tp862qe29zk5vsgdi8nu1cpz9wwfzxt572p92pfvrwkjgmt8v\", \"aoevibl8lj9ttk9uq21kd5udqlo3q58f7yr6uttgj3ndnhnh9wu07t\" ]\n    },\n    \"name\" : \"Ginny Stanton\",\n    \"endTime\" : \"2022-12-17T06:30:36.315178Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"dlyc9g3egsm0slxsoqqkteyv7nwtznu3i8ysohrh6b28h64pp8xuegk7n16yx6pmiyy4o43s4tbtk3o2yukt2u7mo0wbmi\",\n      \"targetLanguageCode\" : \"sfh4uqckr0\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/021200\"\n      }\n    },\n    \"entryCount\" : 681384531,\n    \"submitTime\" : \"2022-10-12T08:43:36.316147Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"dyt7xiq1ppy45rd3zn9l0mzbp6ob0jk3lnd9rgyc75v5nmkbsogtmhnj1s9shmwb89qspqjb5vtgpmdxit35hquqjfu36knsv2fqmkdugrlaszg1y6oh22sngn22t9rkwn16sesy3zi04h9qaij944u2inyyymyb\", \"6de6kik0g09qs1o47aarvi35fz6syxpyzda9yl8zzm6x5wz2hym5ykg33953cvk75njzjzvetmgtk\", \"912r0ackvzhj8hqjrksuv3b1j49ml10wjfoaidpysztip2322vnozvgko9d8r44xwhy9hpk8tzuhxwi5jw0g32qpzy7heqg8tvvye5w93hrgfsxxc0y9yob00hf05wy6ks7o1t760nkw1p\", \"gyrd6gsaol4lcevki7ducvtt3dc1sqpnabu2oxyzg6mflr7f2dlzjayp9u7qoiw6gcclahztscns0d2wn6i6xlcshvsdu1lzeudcw5riph8mjiu067k282cqg02i4n5\" ]\n    },\n    \"name\" : \"Donny Kilback\",\n    \"endTime\" : \"2022-11-03T06:57:36.317143Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"vaxuy7gpn7uo7kvmqih50caiwjbotmhgx6s38q5bfv14mlionnn75pg9x4ni1zpjjglnhngcvab1sq2623xaibwdpiniq5ds5okao6jt4sodu3j84336cwc0g1awh0t96t\",\n      \"targetLanguageCode\" : \"bcobzxf84d7y3bqs3eail05btvvllyaqxr0k1u2qgacmm3tb0elwj\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/442334\"\n      }\n    },\n    \"entryCount\" : 1024447737,\n    \"submitTime\" : \"2022-06-04T05:25:36.319021Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"4y7kpn2pafuj25zybfbvy3nux3htzpduunlrin4g2a7j3172lr7s32bmjql3z8w8r37n5a6qv9ce3azxg719lebjsu5ftq5qs196aglvk7ebn6qn4gsma7vg7cv33mkutpg6twfpitp7ti5dmtue4p8d57407scr25\" ]\n    },\n    \"name\" : \"Shellie Heaney\",\n    \"endTime\" : \"2022-08-18T06:37:36.319643Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"mpqli0b5l33umej2aze43be1rtditqbsnllej9osa64r81dw5dna5jiz29knhj4lneh61u7ce0rwnhlg3f\",\n      \"targetLanguageCode\" : \"8yq3nl8jmkqmzkqbtfti49an0866jom6629mfqomgrnu86iynzyelubpz6dq65gi1zgllrvn6kqf95iw\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/953822\"\n      }\n    },\n    \"entryCount\" : 1979065470,\n    \"submitTime\" : \"2022-11-04T08:49:36.321613Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"ze24xk93fgo7pb1tii8ioell3acexvh6x42wixu33z77pmgad9mfgjd99vru3nplo\", \"7ef9islx8z1elmollztkimm0h3j0wviu23m9mvwx6u3vo7randnf919skk7b8kfi80qgh8rdzjseqzvbmu7qfcd8mi6ssua81ew5ctxrxlfh6cvzqa3plte193pmxdxfpovftsvbzuof4sw6zouobqyqmb98in50fva4\", \"eatlc4mlam84e1mf5w\", \"nljcfzy3tj1dpe82w81b3jnh4dm7y2f56qr9sdl1n0l762tt01uyn2\" ]\n    },\n    \"name\" : \"Mrs. Wm Grimes\",\n    \"endTime\" : \"2022-06-28T09:24:36.323175Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"w4i81w1tj9rh9doa3s0dokua8n4qa32wz9xhtn0drd172nadtusqec61ku3bip5xykuz7ud\",\n      \"targetLanguageCode\" : \"gupr4xkk3vmguqii9rpuh6vrseo4lzzz1eq2jnuqda36z4cae2qn9saeg8twjyns58o937wov9v2u6pqytm51vqv8osf8nudjt7fnicao3oybvyob95dn8w7ztw9d6rkogb5sggs4ov22doud0aydc7\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "436797c9-0d16-43b3-9df7-fc361c952475",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.324868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.list",
          "schema" : {
            "description" : "Response message for ListGlossaries.",
            "properties" : {
              "glossaries" : {
                "description" : "The list of glossaries for a project.",
                "items" : {
                  "$ref" : "#/components/schemas/Glossary"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "e92f90da-e392-47b0-9e1b-75be604efef5",
    "name" : "Waits until the specified long-running operation is done or reaches at most a sp...",
    "request" : {
      "urlPath" : "/v3beta1/Alexandria+Towne:wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Keturah Jakubowski\",\n  \"error\" : {\n    \"code\" : 141603395,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Sequi minima quos. Omnis ea cum. Vel pariatur consequatur illum iusto qui praesentium minus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e92f90da-e392-47b0-9e1b-75be604efef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.313943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.wait",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "566b2516-4eb6-47e8-8014-7bc00d755a7d",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v3beta1/Jenee+Johnston:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "566b2516-4eb6-47e8-8014-7bc00d755a7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.311933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "547619cc-d8f0-4152-986f-162c99fb35d8",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v3beta1/Willette+Howell/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Thersa Christiansen\",\n    \"error\" : {\n      \"code\" : 1062568709,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dignissimos enim numquam praesentium. Et fugiat laudantium. Doloribus eum eos aliquid.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kieth Pollich\",\n    \"error\" : {\n      \"code\" : 1908395088,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Id doloribus tenetur. Provident rerum molestias omnis consequuntur temporibus. Minima sapiente ipsum ea beatae autem enim. Minus aspernatur sit id enim.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Simon Pfeffer III\",\n    \"error\" : {\n      \"code\" : 52880746,\n      \"details\" : [ { } ],\n      \"message\" : \"Nemo voluptatibus qui. Sed veritatis magni consequatur id laboriosam itaque dolorem. Consequatur sint recusandae fugiat dolores. Iure assumenda beatae. Dolor reiciendis eum dolore harum saepe reiciend\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Wilfred Schaefer\",\n    \"error\" : {\n      \"code\" : 582265869,\n      \"details\" : [ { } ],\n      \"message\" : \"Soluta ratione suscipit. Doloribus numquam dolorum eligendi vel accusamus. Magni omnis cum sequi rerum occaecati. Expedita est hic.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"c2463zuou4myje0woxugcye8s4w30sol5o66qk2nz0nya10wqr5c7zs6cfcl3n8imjwvejkhtiezjgj8zzra5tzd2h76i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "547619cc-d8f0-4152-986f-162c99fb35d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.311605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "bb77c75f-81e7-4d8f-ae33-b6e530de06e5",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v3beta1/Raleigh+Jakubowski+Jr./locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"c0wwv0a54lq3wqofwslscya2ncyz23jenxugiro8ble2r9plusnzaiy6ttywlybr489bctndxbgbug0evzkj9o1m4qvkp37ds416wj0tnkw\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Sylvester Boehm\",\n    \"locationId\" : \"i033\",\n    \"name\" : \"Alton Kohler\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Leona Schaefer\",\n    \"locationId\" : \"vtfg\",\n    \"name\" : \"Ahmed Lehner\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lou Mohr\",\n    \"locationId\" : \"f626\",\n    \"name\" : \"King Ebert\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb77c75f-81e7-4d8f-ae33-b6e530de06e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.300721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "ac150532-ab4c-4fa7-a7d7-6f14f49a88ba",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v3beta1/Ali+Dach",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lyle Waters\",\n  \"error\" : {\n    \"code\" : 85149477,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Molestiae sint est quasi sed pariatur ipsum. Magni ipsum eos qui quisquam. Quam assumenda delectus mollitia qui autem minus. A nesciunt et tempora. Voluptatem necessitatibus eius repudiandae.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac150532-ab4c-4fa7-a7d7-6f14f49a88ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.290467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "4074fe79-1dd2-4493-8b51-2f0def947ac8",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v3beta1/Miss+Everett+Terry",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4074fe79-1dd2-4493-8b51-2f0def947ac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:36.288168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}