{
  "mappings" : [ {
    "id" : "73eb28be-693c-4ce5-a87c-b42c4c3a8279",
    "name" : "Get policy metadata resource.",
    "request" : {
      "urlPath" : "/providers/Microsoft.PolicyInsights/policyMetadata/Elisha+Boyle",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nie4knpy6jzrnw2td4ajs3u4db856mjhsjr1aagtpazaf89bx6m35bz99fd6okvhr7y988ksjg63kt79pxmnwtfyn1flqtju9igymactom88n7ur9dyzb068l97x78ellcsapoqlttesjdv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Love Hessel\",\n  \"id\" : \"8984\",\n  \"type\" : \"0rhrlho9xv0ramut17dnm5ksrq90o8r6qh8p9093rvsg221e9htqz3nfub4ngrfto5mi82g5nv8fe\",\n  \"properties\" : {\n    \"owner\" : \"i88ml656gzb8l3z7691mopkch7z0zqv2lkd2vfo6\",\n    \"metadataId\" : \"2wes\",\n    \"requirements\" : \"slr72tthk7zf8eejghrmzh0ifm5jvzkcggdxi0wkgskd4o0zmnq049lwq15bnptp48bc3ao593s8a9py9gtc\",\n    \"metadata\" : { },\n    \"additionalContentUrl\" : \"https://web.example.mocklab.io/798262\",\n    \"description\" : \"Dicta explicabo minus. Est non rerum. Pariatur vero id impedit fugit.\",\n    \"category\" : \"qj9xpro7u4p9owwnyafixq7s92yg\",\n    \"title\" : \"Libero nam aperiam quae autem et deleniti eum.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73eb28be-693c-4ce5-a87c-b42c4c3a8279",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:06.64969Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyMetadata_GetResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The ID of the policy metadata.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "The name of the policy metadata.",
                "readOnly" : true
              },
              "properties" : {
                "$ref" : "#/components/schemas/PolicyMetadataProperties"
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the policy metadata.",
                "readOnly" : true
              }
            },
            "description" : "Policy metadata resource definition."
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0087124f-4a06-416c-9aec-c745a44e9b5a",
    "name" : "Get a list of the policy metadata resources.",
    "request" : {
      "urlPath" : "/providers/Microsoft.PolicyInsights/policyMetadata",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "d279s4vm18rzcefsze28zj9le30zmqub8fy6d9emic3tearm8tje3h9gv2b0sgjl58ul2l046o1y00iiud8gd0exc4mafgx3ld4b13simpuq6i4bt70y8rnp85i"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Tommy Waters\",\n    \"id\" : \"4s10\",\n    \"type\" : \"i9pxo43l7rj5wzmze6tskzoj74qaca3d7i9zuacjichob0yer6typyaq4oud4ca4129pgsvvacjcmptr7rd50bbz1p8a71pnw14bx4k2komximupyg7r8x8y6x831ntavmxptc6u0c16egqlfbyemgxs6i6r15yswi\",\n    \"properties\" : {\n      \"owner\" : \"kth1kge45ngf20i7ks00l4d6ajh49elip106hgijdy99wlr8vrjz7izggkbwtx1a55ghh51a2ak3ircmlhxz98mifc9s39zkk5aiopt2t82z\",\n      \"metadataId\" : \"82r0\",\n      \"metadata\" : { },\n      \"additionalContentUrl\" : \"https://web.example.mocklab.io/199023\",\n      \"category\" : \"lrcixv49t6okkt6ft28jrzjxaobpyzwtgy62yxy4yuw91fl8azqs1ysmco4u9k7qn6eir6jo0vjuzpxv1vpuaemvqrbsukc0ufx0k2fi6ur7dn1ccytm4g27qfjdjaci0kf2u6nmpcud5ip4i8yjdr\",\n      \"title\" : \"Harum cupiditate in illum culpa.\"\n    }\n  }, {\n    \"name\" : \"Chris D'Amore\",\n    \"id\" : \"p24b\",\n    \"type\" : \"bgq9dnovxfl4v12m8ep9ddn8d4kuqzq3tz8sgiaaeg7828rj413birp6eel9y4e7osy50fy45oyiztacg\",\n    \"properties\" : {\n      \"owner\" : \"gynjl28ui2jth4npadzn7sg4twkiv9kx0grwv5z3bf2rlgauiyhiqin\",\n      \"metadataId\" : \"03tv\",\n      \"metadata\" : { },\n      \"additionalContentUrl\" : \"https://web.example.mocklab.io/858443\",\n      \"category\" : \"asfbzf16fp4kmpussqlxlcjzgohgnutk25lzeepkafhjq7ltpuuspmh75ivb\",\n      \"title\" : \"Qui quas est.\"\n    }\n  }, {\n    \"name\" : \"Bo Zemlak\",\n    \"id\" : \"3418\",\n    \"type\" : \"zcsbwpl9cy1j9ve3wiull2ophrtoxdlfwh0oyvtq5gmk6sze061xkx88cg5vwgy4wxgofnil143jzbm14zvugrzwae\",\n    \"properties\" : {\n      \"owner\" : \"8re77bxselpu8hvcvzu4t771jdi4kgk5bi5jel7wbpaehrkswql1mcvwq7b77fwe35d1iyfquz92ocvu0v7ibyqp6h0xcr3eol2idifxqmdqql067ev7fx86daknk66j2pu54hc4\",\n      \"metadataId\" : \"t6bu\",\n      \"metadata\" : { },\n      \"additionalContentUrl\" : \"https://web.example.mocklab.io/842079\",\n      \"category\" : \"49c7tjhkwuwzwv1j4327gvxoqd7a87ahnlfl0k4z0ftz1638dr3fbhp4waolxdxleppek7lccvlzwgh3rjyvdlc3xqa\",\n      \"title\" : \"Placeat consequuntur ipsum doloribus sed magni iure.\"\n    }\n  }, {\n    \"name\" : \"Gale Little\",\n    \"id\" : \"27r2\",\n    \"type\" : \"tg52o7hz4yk3qs7k6kcg84f7mhd0m9clw6bxuohmgzmg63yhhxp9hfwdqnfknt68kr\",\n    \"properties\" : {\n      \"owner\" : \"ecwdra9yyyew55xvq0a3am6mbxp8cke9j07hvje1feg8krgx3dnnj0swmqjdqtszcj6vhf6vqmfj2iuwysng8wuoxixkmksj6qbgjsxke6ovxy1nk09qjyv0\",\n      \"metadataId\" : \"c6r6\",\n      \"metadata\" : { },\n      \"additionalContentUrl\" : \"https://web.example.mocklab.io/817057\",\n      \"category\" : \"02x19450qwtzb5cz7y6iaz8cu36drhj5x5kv80fq6hcn9e1cfjltu9zmekxd3j92xp59bebbn38pzvth1\",\n      \"title\" : \"Qui et veniam.\"\n    }\n  }, {\n    \"name\" : \"Senaida Metz\",\n    \"id\" : \"hgnd\",\n    \"type\" : \"il15eih1dq3b788e53cf084ymselkvs1pr13ong8n7ukklneoy4t2zx8iwj6sihopht9hx5hqemzckmsmhm8uhkkd8z32mjj11lj8xxqakojsm50uu232bjj7kzkpjglh\",\n    \"properties\" : {\n      \"owner\" : \"jojppknivp3yxackmbt2aurev601vdnnezzkgxy0i00bkips0wr7fnd6owy57uejzywh9n\",\n      \"metadataId\" : \"6188\",\n      \"metadata\" : { },\n      \"additionalContentUrl\" : \"https://web.example.mocklab.io/500949\",\n      \"category\" : \"z3crccnccn5ubhj9mhm59a3gt4c2pi5doj4nqclnxm9pit6axoho6qx0ueftivmsiq05nw36bhkp23a0jt70rjwx2zqdhq6ih15bnc8fz0d7qhqm770cn3o472xcf1n20n37u0dodkjeyhb9zjcd3wm4zkosa\",\n      \"title\" : \"Perferendis veritatis unde.\"\n    }\n  }, {\n    \"name\" : \"Bailey Klocko\",\n    \"id\" : \"r6vf\",\n    \"type\" : \"36occy97rb2ucyyadla2mb73db3w7j442kpazmnk1v7pbpv1iv2clt2ioolumt0abf5ndor795kby278zh7ufn1jfpqm781j1k5bbo9\",\n    \"properties\" : {\n      \"owner\" : \"okcq6ismrykxyjhdze9yw5q0ku07b6hout59c8xo9bsojl5ul98ol3sc2kak8ejhhk9mkz4vdzdrfhdoytzai3nz2iay13fyihteiy8jkma6faeoolr8fiz1ueoeg2tyhh34ramo2oroy17qlhlzwc166od70uar9u8gi6dh3p3lw2p2al\",\n      \"metadataId\" : \"7s7o\",\n      \"metadata\" : { },\n      \"additionalContentUrl\" : \"https://web.example.mocklab.io/040605\",\n      \"category\" : \"rxo57tv7idini5nwv6kyqqjuh2hhdg5hiu6mxn59wpo7jh78vgapnuptc9si6v6t9l8sue4uu01ppam5tdyka9i6mlyjaekkferdbtsspp264snfwf4jn56yu98d0kxr1xuzkw9ngy9a0vqjtg\",\n      \"title\" : \"Tempore consequatur quia quisquam occaecati cum.\"\n    }\n  } ],\n  \"nextLink\" : \"gjwcchfe2v7dy1l6cjuxl6ladaq8ldnxl7olk8y7ds4q6i2acdjh5ovhmojmd7j0ksl3pezw1sx20za6y75nof1dye852xl2bb5zj4b9vupdwmqbffflqhvbf8nwq9kv7yucya5mbxbpmcml3yercse0vvqzrrpbgjqzfoejcrp87sdfu5o8p02mbdbn14b9pgrvx9u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0087124f-4a06-416c-9aec-c745a44e9b5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:06.642641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PolicyMetadata_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "The URL to get the next set of results.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "Array of policy metadata definitions.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/SlimPolicyMetadata"
                }
              }
            },
            "description" : "Collection of policy metadata resources."
          }
        }
      }
    },
    "insertionIndex" : 1
  } ]
}