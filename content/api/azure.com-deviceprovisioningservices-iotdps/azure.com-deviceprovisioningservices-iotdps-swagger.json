{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "iotDpsClient",
    "description" : "API for using the Azure IoT Hub Device Provisioning Service features.",
    "version" : "2018-01-22"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.Devices/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available Microsoft.Devices REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkProvisioningServiceNameAvailability" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "Check if a provisioning service name is available.",
        "description" : "Check if a provisioning service name is available. This will validate if the name is syntactically valid and if the name is usable",
        "operationId" : "IotDpsResource_CheckProvisioningServiceNameAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set the name parameter in the OperationInputs structure to the name of the provisioning service to check.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OperationInputs"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the provisioning service name is available. If the name is not available, the body contains the reason.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameAvailabilityInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/provisioningServices" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "Get all the provisioning services in a subscription.",
        "description" : "List all the provisioning services for a given subscription id.",
        "operationId" : "IotDpsResource_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the provisioning services in the subscription.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningServiceDescriptionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices" : {
      "get" : {
        "tags" : [ "GET" ],
        "description" : "Get a list of all provisioning services in the given resource group.",
        "operationId" : "IotDpsResource_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of provisioning services in the resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningServiceDescriptionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "Get the non-security related metadata of the provisioning service.",
        "description" : "Get the metadata of the provisioning service without SAS keys.",
        "operationId" : "IotDpsResource_Get",
        "parameters" : [ {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of the provisioning service to retrieve.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Provisioning service description with no keys is included in the response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningServiceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PUT" ],
        "summary" : "Create or update the metadata of the provisioning service.",
        "description" : "Create or update the metadata of the provisioning service. The usual pattern to modify a property is to retrieve the provisioning service metadata and security metadata, and then combine them with the modified values in a new body to update the provisioning service.",
        "operationId" : "IotDpsResource_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of provisioning service to create or update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Description of the provisioning service to create or update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProvisioningServiceDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The body contains all the non-security properties of the provisioning service. Security-related properties are set to null.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningServiceDescription"
                }
              }
            }
          },
          "201" : {
            "description" : "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation. If successful, the operation returns HTTP status code of 201 (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningServiceDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DELETE" ],
        "summary" : "Delete the Provisioning Service",
        "description" : "Deletes the Provisioning Service.",
        "operationId" : "IotDpsResource_Delete",
        "parameters" : [ {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of provisioning service to delete.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state."
          },
          "202" : {
            "description" : "The provisioning service resource provider always returns a 202 Accepted status code with valid Location and Retry-After headers. The resource provider also sets the Azure-AsyncOperation header with a URL that points to the operation resource for this operation. Subsequent GET attempts on the resource after a DELETE operation return a resource representation that indicates a transitional provisioning state (such as Terminating). To retrieve the status of the operation, a client can either poll the URL returned in the Location header after the Retry-After interval, get the provisioning service status directly, or query the operation resource."
          },
          "204" : {
            "description" : "Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the provisioning service metadata in the service and the status of the delete operation is set to a completed state."
          },
          "404" : {
            "description" : "After the long running delete operation completes successfully, a 404 Not Found is returned when the status polling request no longer finds the provisioning service metadata in the service."
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PATCH" ],
        "summary" : "Update an existing provisioning service's tags.",
        "description" : "Update an existing provisioning service's tags. to update other fields use the CreateOrUpdate method",
        "operationId" : "IotDpsResource_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of provisioning service to create or update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Updated tag information to set into the provisioning service instance.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TagsResource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Provisioning Service was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProvisioningServiceDescription"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates" : {
      "get" : {
        "tags" : [ "GET" ],
        "description" : "Get all the certificates tied to the provisioning service.",
        "operationId" : "DpsCertificate_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of provisioning service to retrieve certificates for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of certificate descriptions in a JSON-serialized array.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateListDescription"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}" : {
      "get" : {
        "tags" : [ "GET" ],
        "description" : "Get the certificate from the provisioning service.",
        "operationId" : "DpsCertificate_Get",
        "parameters" : [ {
          "name" : "certificateName",
          "in" : "path",
          "description" : "Name of the certificate to retrieve.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of the provisioning service the certificate is associated with.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the certificate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Metadata for the specified certificate.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PUT" ],
        "summary" : "Upload the certificate to the provisioning service.",
        "description" : "Add new certificate or update an existing certificate.",
        "operationId" : "DpsCertificate_CreateOrUpdate",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "The name of the provisioning service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The name of the certificate create or update.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The certificate body.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateBodyDescription"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "If certificate already exist and update was successful, the operation returns HTTP status code of 201 (OK).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "DELETE" ],
        "summary" : "Delete the Provisioning Service Certificate.",
        "description" : "Deletes the specified certificate associated with the Provisioning Service",
        "operationId" : "DpsCertificate_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the certificate",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "The name of the provisioning service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificateName",
          "in" : "path",
          "description" : "This is a mandatory field, and is the logical name of the certificate that the provisioning service will access by.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificate.name",
          "in" : "query",
          "description" : "This is optional, and it is the Common Name of the certificate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificate.rawBytes",
          "in" : "query",
          "description" : "Raw data within the certificate.",
          "schema" : {
            "type" : "string",
            "format" : "byte"
          }
        }, {
          "name" : "certificate.isVerified",
          "in" : "query",
          "description" : "Indicates if certificate has been verified by owner of the private key.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "certificate.purpose",
          "in" : "query",
          "description" : "A description that mentions the purpose of the certificate.",
          "schema" : {
            "type" : "string",
            "enum" : [ "clientAuthentication", "serverAuthentication" ]
          }
        }, {
          "name" : "certificate.created",
          "in" : "query",
          "description" : "Time the certificate is created.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "certificate.lastUpdated",
          "in" : "query",
          "description" : "Time the certificate is last updated.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "certificate.hasPrivateKey",
          "in" : "query",
          "description" : "Indicates if the certificate contains a private key.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "certificate.nonce",
          "in" : "query",
          "description" : "Random number generated to indicate Proof of Possession.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK."
          },
          "204" : {
            "description" : "No content."
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/generateVerificationCode" : {
      "post" : {
        "tags" : [ "POST" ],
        "description" : "Generate verification code for Proof of Possession.",
        "operationId" : "DpsCertificate_GenerateVerificationCode",
        "parameters" : [ {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The mandatory logical name of the certificate, that the provisioning service uses to access.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the certificate. This is required to update an existing certificate, and ignored while creating a brand new certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "name of resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of provisioning service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificate.name",
          "in" : "query",
          "description" : "Common Name for the certificate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificate.rawBytes",
          "in" : "query",
          "description" : "Raw data of certificate.",
          "schema" : {
            "type" : "string",
            "format" : "byte"
          }
        }, {
          "name" : "certificate.isVerified",
          "in" : "query",
          "description" : "Indicates if the certificate has been verified by owner of the private key.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "certificate.purpose",
          "in" : "query",
          "description" : "Description mentioning the purpose of the certificate.",
          "schema" : {
            "type" : "string",
            "enum" : [ "clientAuthentication", "serverAuthentication" ]
          }
        }, {
          "name" : "certificate.created",
          "in" : "query",
          "description" : "Certificate creation time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "certificate.lastUpdated",
          "in" : "query",
          "description" : "Certificate last updated time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "certificate.hasPrivateKey",
          "in" : "query",
          "description" : "Indicates if the certificate contains private key.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "certificate.nonce",
          "in" : "query",
          "description" : "Random number generated to indicate Proof of Possession.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Generated verification code for that certificate is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VerificationCodeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/certificates/{certificateName}/verify" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "Verify certificate's private key possession.",
        "description" : "Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.",
        "operationId" : "DpsCertificate_VerifyCertificate",
        "parameters" : [ {
          "name" : "certificateName",
          "in" : "path",
          "description" : "The mandatory logical name of the certificate, that the provisioning service uses to access.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the certificate.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Provisioning service name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificate.name",
          "in" : "query",
          "description" : "Common Name for the certificate.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "certificate.rawBytes",
          "in" : "query",
          "description" : "Raw data of certificate.",
          "schema" : {
            "type" : "string",
            "format" : "byte"
          }
        }, {
          "name" : "certificate.isVerified",
          "in" : "query",
          "description" : "Indicates if the certificate has been verified by owner of the private key.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "certificate.purpose",
          "in" : "query",
          "description" : "Describe the purpose of the certificate.",
          "schema" : {
            "type" : "string",
            "enum" : [ "clientAuthentication", "serverAuthentication" ]
          }
        }, {
          "name" : "certificate.created",
          "in" : "query",
          "description" : "Certificate creation time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "certificate.lastUpdated",
          "in" : "query",
          "description" : "Certificate last updated time.",
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "certificate.hasPrivateKey",
          "in" : "query",
          "description" : "Indicates if the certificate contains private key.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "certificate.nonce",
          "in" : "query",
          "description" : "Random number generated to indicate Proof of Possession.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The name of the certificate",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VerificationCodeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/keys/{keyName}/listkeys" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "Get a shared access policy by name from a provisioning service.",
        "description" : "List primary and secondary keys for a specific key name",
        "operationId" : "IotDpsResource_ListKeysForKeyName",
        "parameters" : [ {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of the provisioning service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "keyName",
          "in" : "path",
          "description" : "Logical key name to get key-values for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the provisioning service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized shared access policy, including keys, that you can use to access one or more provisioning service endpoints.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SharedAccessSignatureAuthorizationRule[AccessRightsDescription]"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/listkeys" : {
      "post" : {
        "tags" : [ "POST" ],
        "summary" : "Get the security metadata for a provisioning service.",
        "description" : "List the primary and secondary keys for a provisioning service.",
        "operationId" : "IotDpsResource_ListKeys",
        "parameters" : [ {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "The provisioning service name to get the shared access keys for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "resource group name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized array of shared access policies, including keys, that you can use to access the provisioning service endpoints.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SharedAccessSignatureAuthorizationRuleListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/operationresults/{operationId}" : {
      "get" : {
        "tags" : [ "GET" ],
        "description" : "Gets the status of a long running operation, such as create, update or delete a provisioning service.",
        "operationId" : "IotDpsResource_GetOperationResult",
        "parameters" : [ {
          "name" : "operationId",
          "in" : "path",
          "description" : "Operation id corresponding to long running operation. Use this to poll for the status.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of provisioning service that the operation is running on.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "asyncinfo",
          "in" : "query",
          "description" : "Async header used to poll on the status of the operation, obtained while creating the long running operation.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "true"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The status of the long running operation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AsyncOperationResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/provisioningServices/{provisioningServiceName}/skus" : {
      "get" : {
        "tags" : [ "GET" ],
        "summary" : "Get the list of valid SKUs for a provisioning service.",
        "description" : "Gets the list of valid SKUs and tiers for a provisioning service.",
        "operationId" : "IotDpsResource_listValidSkus",
        "parameters" : [ {
          "name" : "provisioningServiceName",
          "in" : "path",
          "description" : "Name of provisioning service.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription identifier.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Name of resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The version of the API.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This is a synchronous operation. The body contains a JSON-serialized array of the valid SKUs for this provisioning service.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IotDpsSkuDefinitionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Default error response.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AsyncOperationResult" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorMesssage"
          },
          "status" : {
            "type" : "string",
            "description" : "current status of a long running operation."
          }
        },
        "description" : "Result of a long running operation."
      },
      "CertificateBodyDescription" : {
        "type" : "object",
        "properties" : {
          "certificate" : {
            "type" : "string",
            "description" : "Base-64 representation of the X509 leaf certificate .cer file or just .pem file content."
          }
        },
        "description" : "The JSON-serialized X509 Certificate."
      },
      "CertificateListDescription" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "array",
            "description" : "The array of Certificate objects.",
            "items" : {
              "$ref" : "#/components/schemas/CertificateResponse"
            }
          }
        },
        "description" : "The JSON-serialized array of Certificate objects."
      },
      "CertificateProperties" : {
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "The certificate's creation date and time.",
            "format" : "date-time-rfc1123",
            "readOnly" : true
          },
          "expiry" : {
            "type" : "string",
            "description" : "The certificate's expiration date and time.",
            "format" : "date-time-rfc1123",
            "readOnly" : true
          },
          "isVerified" : {
            "type" : "boolean",
            "description" : "Determines whether certificate has been verified.",
            "readOnly" : true
          },
          "subject" : {
            "type" : "string",
            "description" : "The certificate's subject name.",
            "readOnly" : true
          },
          "thumbprint" : {
            "type" : "string",
            "description" : "The certificate's thumbprint.",
            "readOnly" : true
          },
          "updated" : {
            "type" : "string",
            "description" : "The certificate's last update date and time.",
            "format" : "date-time-rfc1123",
            "readOnly" : true
          }
        },
        "description" : "The description of an X509 CA Certificate."
      },
      "CertificateResponse" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "The entity tag.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The resource identifier.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the certificate.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/CertificateProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type.",
            "readOnly" : true
          }
        },
        "description" : "The X509 Certificate."
      },
      "ErrorDetails" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code.",
            "readOnly" : true
          },
          "details" : {
            "type" : "string",
            "description" : "The error details.",
            "readOnly" : true
          },
          "httpStatusCode" : {
            "type" : "string",
            "description" : "The HTTP status code.",
            "readOnly" : true
          },
          "message" : {
            "type" : "string",
            "description" : "The error message.",
            "readOnly" : true
          }
        },
        "description" : "Error details."
      },
      "ErrorMesssage" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "standard error code"
          },
          "details" : {
            "type" : "string",
            "description" : "detailed summary of error"
          },
          "message" : {
            "type" : "string",
            "description" : "standard error description"
          }
        },
        "description" : "Error response containing message and code."
      },
      "IotDpsPropertiesDescription" : {
        "type" : "object",
        "properties" : {
          "allocationPolicy" : {
            "type" : "string",
            "description" : "Allocation policy to be used by this provisioning service.",
            "enum" : [ "Hashed", "GeoLatency", "Static" ]
          },
          "authorizationPolicies" : {
            "type" : "array",
            "description" : "List of authorization keys for a provisioning service.",
            "items" : {
              "$ref" : "#/components/schemas/SharedAccessSignatureAuthorizationRule[AccessRightsDescription]"
            }
          },
          "deviceProvisioningHostName" : {
            "type" : "string",
            "description" : "Device endpoint for this provisioning service.",
            "readOnly" : true
          },
          "idScope" : {
            "type" : "string",
            "description" : "Unique identifier of this provisioning service.",
            "readOnly" : true
          },
          "iotHubs" : {
            "type" : "array",
            "description" : "List of IoT hubs associated with this provisioning service.",
            "items" : {
              "$ref" : "#/components/schemas/IotHubDefinitionDescription"
            }
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The ARM provisioning state of the provisioning service."
          },
          "serviceOperationsHostName" : {
            "type" : "string",
            "description" : "Service endpoint for provisioning service.",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "Current state of the provisioning service.",
            "enum" : [ "Activating", "Active", "Deleting", "Deleted", "ActivationFailed", "DeletionFailed", "Transitioning", "Suspending", "Suspended", "Resuming", "FailingOver", "FailoverFailed" ]
          }
        },
        "description" : "the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope"
      },
      "IotDpsSkuDefinition" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Sku name.",
            "enum" : [ "S1" ]
          }
        },
        "description" : "Available SKUs of tier and units."
      },
      "IotDpsSkuDefinitionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The next link.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of SKUs",
            "items" : {
              "$ref" : "#/components/schemas/IotDpsSkuDefinition"
            }
          }
        },
        "description" : "List of available SKUs."
      },
      "IotDpsSkuInfo" : {
        "type" : "object",
        "properties" : {
          "capacity" : {
            "type" : "integer",
            "description" : "The number of units to provision",
            "format" : "int64"
          },
          "name" : {
            "type" : "string",
            "description" : "Sku name.",
            "enum" : [ "S1" ]
          },
          "tier" : {
            "type" : "string",
            "description" : "Pricing tier name of the provisioning service.",
            "readOnly" : true
          }
        },
        "description" : "List of possible provisioning service SKUs."
      },
      "IotHubDefinitionDescription" : {
        "required" : [ "connectionString", "location" ],
        "type" : "object",
        "properties" : {
          "allocationWeight" : {
            "type" : "integer",
            "description" : "weight to apply for a given iot h.",
            "format" : "int32"
          },
          "applyAllocationPolicy" : {
            "type" : "boolean",
            "description" : "flag for applying allocationPolicy or not for a given iot hub."
          },
          "connectionString" : {
            "type" : "string",
            "description" : "Connection string og the IoT hub."
          },
          "location" : {
            "type" : "string",
            "description" : "ARM region of the IoT hub."
          },
          "name" : {
            "type" : "string",
            "description" : "Host name of the IoT hub.",
            "readOnly" : true
          }
        },
        "description" : "Description of the IoT hub."
      },
      "NameAvailabilityInfo" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "message containing a detailed reason name is unavailable"
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "specifies if a name is available or not"
          },
          "reason" : {
            "type" : "string",
            "description" : "specifies the reason a name is unavailable",
            "enum" : [ "Invalid", "AlreadyExists" ]
          }
        },
        "description" : "Description of name availability."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "operation" : {
                "type" : "string",
                "description" : "Name of the operation.",
                "readOnly" : true
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft Devices.",
                "readOnly" : true
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource Type: ProvisioningServices.",
                "readOnly" : true
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{read | write | action | delete}",
            "readOnly" : true
          }
        },
        "description" : "IoT Hub REST API operation."
      },
      "OperationInputs" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the Provisioning Service to check."
          }
        },
        "description" : "Input values for operation results call."
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of IoT Hub operations supported by the Microsoft.Devices resource provider.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list IoT Hub operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "ProvisioningServiceDescription" : {
        "required" : [ "properties", "sku" ],
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention."
          },
          "properties" : {
            "$ref" : "#/components/schemas/IotDpsPropertiesDescription"
          },
          "sku" : {
            "$ref" : "#/components/schemas/IotDpsSkuInfo"
          }
        },
        "description" : "The description of the provisioning service.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ProvisioningServiceDescriptionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "the next link",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of provisioning service descriptions.",
            "items" : {
              "$ref" : "#/components/schemas/ProvisioningServiceDescription"
            }
          }
        },
        "description" : "List of provisioning service descriptions."
      },
      "Resource" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource identifier.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The resource location."
          },
          "name" : {
            "pattern" : "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$",
            "type" : "string",
            "description" : "The resource name.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The resource tags."
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type.",
            "readOnly" : true
          }
        },
        "description" : "The common properties of an Azure resource."
      },
      "SharedAccessSignatureAuthorizationRuleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The next link.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "The list of shared access policies.",
            "items" : {
              "$ref" : "#/components/schemas/SharedAccessSignatureAuthorizationRule[AccessRightsDescription]"
            }
          }
        },
        "description" : "List of shared access keys."
      },
      "TagsResource" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "description" : "Resource tags"
          }
        },
        "description" : "A container holding only the Tags for a resource, allowing the user to update the tags on a Provisioning Service instance."
      },
      "VerificationCodeRequest" : {
        "type" : "object",
        "properties" : {
          "certificate" : {
            "type" : "string",
            "description" : "base-64 representation of X509 certificate .cer file or just .pem file content."
          }
        },
        "description" : "The JSON-serialized leaf certificate"
      },
      "VerificationCodeResponse" : {
        "type" : "object",
        "properties" : {
          "etag" : {
            "type" : "string",
            "description" : "Request etag.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The resource identifier.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of certificate.",
            "readOnly" : true
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "created" : {
                "type" : "string",
                "description" : "Certificate created time."
              },
              "expiry" : {
                "type" : "string",
                "description" : "Code expiry."
              },
              "isVerified" : {
                "type" : "boolean",
                "description" : "Indicate if the certificate is verified by owner of private key."
              },
              "subject" : {
                "type" : "string",
                "description" : "Certificate subject."
              },
              "thumbprint" : {
                "type" : "string",
                "description" : "Certificate thumbprint."
              },
              "updated" : {
                "type" : "string",
                "description" : "Certificate updated time."
              },
              "verificationCode" : {
                "type" : "string",
                "description" : "Verification code."
              }
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type.",
            "readOnly" : true
          }
        },
        "description" : "Description of the response of the verification code."
      }
    },
    "parameters" : {
      "api-version" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The version of the API.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription identifier.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}