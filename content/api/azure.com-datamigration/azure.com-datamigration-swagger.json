{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Azure Data Migration Service Resource Provider",
    "description" : "The Data Migration Service helps people migrate their data from on-premise database servers to Azure, or from older database software to newer software. The service manages one or more workers that are joined to a customer's virtual network, which is assumed to provide connectivity to their databases. To avoid frequent updates to the resource provider, data migration tasks are implemented by the resource provider in a generic way as task resources, each of which has a task type (which identifies the type of work to run), input, and output. The client is responsible for providing appropriate task type and inputs, which will be passed through unexamined to the machines that implement the functionality, and for understanding the output, which is passed back unexamined to the client.",
    "version" : "2018-03-15-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.DataMigration/operations" : {
      "get" : {
        "tags" : [ "Standard operation", "GET" ],
        "summary" : "Get available resource provider actions (operations)",
        "description" : "Lists all available actions exposed by the Data Migration Service resource provider.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Got action list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "URL to load the next page of actions"
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of actions",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "display" : {
                            "type" : "object",
                            "properties" : {
                              "description" : {
                                "type" : "string",
                                "description" : "The localized operation description"
                              },
                              "operation" : {
                                "type" : "string",
                                "description" : "The localized operation name"
                              },
                              "provider" : {
                                "type" : "string",
                                "description" : "The localized resource provider name"
                              },
                              "resource" : {
                                "type" : "string",
                                "description" : "The localized resource type name"
                              }
                            },
                            "description" : "Localized display text"
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "The fully qualified action name, e.g. Microsoft.DataMigration/services/read"
                          }
                        },
                        "description" : "Description of an action supported by the Data Migration Service"
                      }
                    }
                  },
                  "description" : "OData page of action (operation) objects"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/checkNameAvailability" : {
      "post" : {
        "tags" : [ "Standard operation", "POST" ],
        "summary" : "Check name validity and availability",
        "description" : "This method checks whether a proposed top-level resource name is valid and available.",
        "operationId" : "Services_CheckNameAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The Azure region of the operation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Requested name to validate",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "The proposed resource name"
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "The resource type chain (e.g. virtualMachines/extensions)"
                  }
                },
                "description" : "A resource type and proposed name"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Name checked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "description" : "The localized reason why the name is not available, if nameAvailable is false"
                    },
                    "nameAvailable" : {
                      "type" : "boolean",
                      "description" : "If true, the name is valid and available. If false, 'reason' describes why not."
                    },
                    "reason" : {
                      "type" : "string",
                      "description" : "The reason why the name is not available, if nameAvailable is false",
                      "enum" : [ "AlreadyExists", "Invalid" ]
                    }
                  },
                  "description" : "Indicates whether a proposed resource name is available"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/usages" : {
      "get" : {
        "tags" : [ "Standard operation", "GET" ],
        "summary" : "Get resource quotas and usage information",
        "description" : "This method returns region-specific quotas and resource usage information for the Data Migration Service.",
        "operationId" : "Usages_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "location",
          "in" : "path",
          "description" : "The Azure region of the operation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Quotas returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "URL to load the next page of quotas, or null or missing if this is the last page"
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of quotas",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "currentValue" : {
                            "type" : "number",
                            "description" : "The current value of the quota. If null or missing, the current value cannot be determined in the context of the request.",
                            "format" : "double"
                          },
                          "id" : {
                            "type" : "string",
                            "description" : "The resource ID of the quota object"
                          },
                          "limit" : {
                            "type" : "number",
                            "description" : "The maximum value of the quota. If null or missing, the quota has no maximum, in which case it merely tracks usage.",
                            "format" : "double"
                          },
                          "name" : {
                            "type" : "object",
                            "properties" : {
                              "localizedValue" : {
                                "type" : "string",
                                "description" : "The localized name of the quota"
                              },
                              "value" : {
                                "type" : "string",
                                "description" : "The unlocalized name (or ID) of the quota"
                              }
                            },
                            "description" : "The name of the quota"
                          },
                          "unit" : {
                            "type" : "string",
                            "description" : "The unit for the quota, such as Count, Bytes, BytesPerSecond, etc."
                          }
                        },
                        "description" : "Describes a quota for or usage details about a resource"
                      }
                    }
                  },
                  "description" : "OData page of quota objects"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/services" : {
      "get" : {
        "tags" : [ "Service resource", "Standard operation", "GET" ],
        "summary" : "Get services in subscription",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. This method returns a list of service resources in a subscription.",
        "operationId" : "Services_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Got services",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "URL to load the next page of services"
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of services",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "etag" : {
                            "type" : "string",
                            "description" : "HTTP strong entity tag value. Ignored if submitted"
                          },
                          "kind" : {
                            "type" : "string",
                            "description" : "The resource kind. Only 'vm' (the default) is supported."
                          },
                          "properties" : {
                            "required" : [ "virtualSubnetId" ],
                            "type" : "object",
                            "properties" : {
                              "provisioningState" : {
                                "type" : "string",
                                "description" : "The resource's provisioning state",
                                "readOnly" : true,
                                "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                              },
                              "publicKey" : {
                                "type" : "string",
                                "description" : "The public key of the service, used to encrypt secrets sent to the service"
                              },
                              "virtualSubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                              }
                            },
                            "description" : "Properties of the Data Migration service instance"
                          },
                          "sku" : {
                            "type" : "object",
                            "properties" : {
                              "capacity" : {
                                "type" : "integer",
                                "description" : "The capacity of the SKU, if it supports scaling"
                              },
                              "family" : {
                                "type" : "string",
                                "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "The unique name of the SKU, such as 'P3'"
                              },
                              "size" : {
                                "type" : "string",
                                "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                              },
                              "tier" : {
                                "type" : "string",
                                "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                              }
                            },
                            "description" : "An Azure SKU instance"
                          }
                        },
                        "description" : "A Data Migration Service resource"
                      }
                    }
                  },
                  "description" : "OData page of service objects"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/skus" : {
      "get" : {
        "tags" : [ "Standard operation", "GET" ],
        "summary" : "Get supported SKUs",
        "description" : "The skus action returns the list of SKUs that DMS supports.",
        "operationId" : "ResourceSkus_ListSkus",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Got SKUs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "value" ],
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "The uri to fetch the next page of DMS SKUs. Call ListNext() with this to fetch the next page of DMS SKUs."
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "The list of SKUs available for the subscription.",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "apiVersions" : {
                            "type" : "array",
                            "description" : "The api versions that support this SKU.",
                            "readOnly" : true,
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "capabilities" : {
                            "type" : "array",
                            "description" : "A name value pair to describe the capability.",
                            "readOnly" : true,
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "name" : {
                                  "type" : "string",
                                  "description" : "An invariant to describe the feature.",
                                  "readOnly" : true
                                },
                                "value" : {
                                  "type" : "string",
                                  "description" : "An invariant if the feature is measured by quantity.",
                                  "readOnly" : true
                                }
                              },
                              "description" : "Describes The SKU capabilites object."
                            }
                          },
                          "capacity" : {
                            "type" : "object",
                            "properties" : {
                              "default" : {
                                "type" : "integer",
                                "description" : "The default capacity.",
                                "format" : "int64",
                                "readOnly" : true
                              },
                              "maximum" : {
                                "type" : "integer",
                                "description" : "The maximum capacity.",
                                "format" : "int64",
                                "readOnly" : true
                              },
                              "minimum" : {
                                "type" : "integer",
                                "description" : "The minimum capacity.",
                                "format" : "int64",
                                "readOnly" : true
                              },
                              "scaleType" : {
                                "type" : "string",
                                "description" : "The scale type applicable to the SKU.",
                                "readOnly" : true,
                                "enum" : [ "Automatic", "Manual", "None" ]
                              }
                            },
                            "description" : "Describes scaling information of a SKU."
                          },
                          "costs" : {
                            "type" : "array",
                            "description" : "Metadata for retrieving price info.",
                            "readOnly" : true,
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "extendedUnit" : {
                                  "type" : "string",
                                  "description" : "An invariant to show the extended unit.",
                                  "readOnly" : true
                                },
                                "meterID" : {
                                  "type" : "string",
                                  "description" : "Used for querying price from commerce.",
                                  "readOnly" : true
                                },
                                "quantity" : {
                                  "type" : "integer",
                                  "description" : "The multiplier is needed to extend the base metered cost.",
                                  "format" : "int64",
                                  "readOnly" : true
                                }
                              },
                              "description" : "Describes metadata for retrieving price info."
                            }
                          },
                          "family" : {
                            "type" : "string",
                            "description" : "The Family of this particular SKU.",
                            "readOnly" : true
                          },
                          "kind" : {
                            "type" : "string",
                            "description" : "The Kind of resources that are supported in this SKU.",
                            "readOnly" : true
                          },
                          "locations" : {
                            "type" : "array",
                            "description" : "The set of locations that the SKU is available.",
                            "readOnly" : true,
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "The name of SKU.",
                            "readOnly" : true
                          },
                          "resourceType" : {
                            "type" : "string",
                            "description" : "The type of resource the SKU applies to.",
                            "readOnly" : true
                          },
                          "restrictions" : {
                            "type" : "array",
                            "description" : "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
                            "readOnly" : true,
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "reasonCode" : {
                                  "type" : "string",
                                  "description" : "The reason code for restriction.",
                                  "readOnly" : true,
                                  "enum" : [ "QuotaId", "NotAvailableForSubscription" ]
                                },
                                "type" : {
                                  "type" : "string",
                                  "description" : "The type of restrictions.",
                                  "readOnly" : true,
                                  "enum" : [ "location" ]
                                },
                                "values" : {
                                  "type" : "array",
                                  "description" : "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
                                  "readOnly" : true,
                                  "items" : {
                                    "type" : "string"
                                  }
                                }
                              },
                              "description" : "Describes scaling information of a SKU."
                            }
                          },
                          "size" : {
                            "type" : "string",
                            "description" : "The Size of the SKU.",
                            "readOnly" : true
                          },
                          "tier" : {
                            "type" : "string",
                            "description" : "Specifies the tier of DMS in a scale set.",
                            "readOnly" : true
                          }
                        },
                        "description" : "Describes an available DMS SKU."
                      }
                    }
                  },
                  "description" : "The DMS List SKUs operation response."
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services" : {
      "get" : {
        "tags" : [ "Service resource", "Standard operation", "GET" ],
        "summary" : "Get services in resource group",
        "description" : "The Services resource is the top-level resource that represents the Data Migration Service. This method returns a list of service resources in a resource group.",
        "operationId" : "Services_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Got services",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "URL to load the next page of services"
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of services",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "etag" : {
                            "type" : "string",
                            "description" : "HTTP strong entity tag value. Ignored if submitted"
                          },
                          "kind" : {
                            "type" : "string",
                            "description" : "The resource kind. Only 'vm' (the default) is supported."
                          },
                          "properties" : {
                            "required" : [ "virtualSubnetId" ],
                            "type" : "object",
                            "properties" : {
                              "provisioningState" : {
                                "type" : "string",
                                "description" : "The resource's provisioning state",
                                "readOnly" : true,
                                "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                              },
                              "publicKey" : {
                                "type" : "string",
                                "description" : "The public key of the service, used to encrypt secrets sent to the service"
                              },
                              "virtualSubnetId" : {
                                "type" : "string",
                                "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                              }
                            },
                            "description" : "Properties of the Data Migration service instance"
                          },
                          "sku" : {
                            "type" : "object",
                            "properties" : {
                              "capacity" : {
                                "type" : "integer",
                                "description" : "The capacity of the SKU, if it supports scaling"
                              },
                              "family" : {
                                "type" : "string",
                                "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "The unique name of the SKU, such as 'P3'"
                              },
                              "size" : {
                                "type" : "string",
                                "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                              },
                              "tier" : {
                                "type" : "string",
                                "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                              }
                            },
                            "description" : "An Azure SKU instance"
                          }
                        },
                        "description" : "A Data Migration Service resource"
                      }
                    }
                  },
                  "description" : "OData page of service objects"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}" : {
      "get" : {
        "tags" : [ "Service resource", "Standard operation", "GET" ],
        "summary" : "Get DMS Service Instance",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. The GET method retrieves information about a service instance.",
        "operationId" : "Services_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A service instance resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. Ignored if submitted"
                    },
                    "kind" : {
                      "type" : "string",
                      "description" : "The resource kind. Only 'vm' (the default) is supported."
                    },
                    "properties" : {
                      "required" : [ "virtualSubnetId" ],
                      "type" : "object",
                      "properties" : {
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The resource's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                        },
                        "publicKey" : {
                          "type" : "string",
                          "description" : "The public key of the service, used to encrypt secrets sent to the service"
                        },
                        "virtualSubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                        }
                      },
                      "description" : "Properties of the Data Migration service instance"
                    },
                    "sku" : {
                      "type" : "object",
                      "properties" : {
                        "capacity" : {
                          "type" : "integer",
                          "description" : "The capacity of the SKU, if it supports scaling"
                        },
                        "family" : {
                          "type" : "string",
                          "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "The unique name of the SKU, such as 'P3'"
                        },
                        "size" : {
                          "type" : "string",
                          "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                        },
                        "tier" : {
                          "type" : "string",
                          "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                        }
                      },
                      "description" : "An Azure SKU instance"
                    }
                  },
                  "description" : "A Data Migration Service resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Service resource", "Standard operation", "PUT" ],
        "summary" : "Create or update DMS Instance",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. The PUT method creates a new service or updates an existing one. When a service is updated, existing child resources (i.e. tasks) are unaffected. Services currently support a single kind, \"vm\", which refers to a VM-based service, although other kinds may be added in the future. This method can change the kind, SKU, and network of the service, but if tasks are currently running (i.e. the service is busy), this will fail with 400 Bad Request (\"ServiceIsBusy\"). The provider will reply when successful with 200 OK or 201 Created. Long-running operations use the provisioningState property.",
        "operationId" : "Services_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information about the service",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "etag" : {
                    "type" : "string",
                    "description" : "HTTP strong entity tag value. Ignored if submitted"
                  },
                  "kind" : {
                    "type" : "string",
                    "description" : "The resource kind. Only 'vm' (the default) is supported."
                  },
                  "properties" : {
                    "required" : [ "virtualSubnetId" ],
                    "type" : "object",
                    "properties" : {
                      "provisioningState" : {
                        "type" : "string",
                        "description" : "The resource's provisioning state",
                        "readOnly" : true,
                        "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                      },
                      "publicKey" : {
                        "type" : "string",
                        "description" : "The public key of the service, used to encrypt secrets sent to the service"
                      },
                      "virtualSubnetId" : {
                        "type" : "string",
                        "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                      }
                    },
                    "description" : "Properties of the Data Migration service instance"
                  },
                  "sku" : {
                    "type" : "object",
                    "properties" : {
                      "capacity" : {
                        "type" : "integer",
                        "description" : "The capacity of the SKU, if it supports scaling"
                      },
                      "family" : {
                        "type" : "string",
                        "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "The unique name of the SKU, such as 'P3'"
                      },
                      "size" : {
                        "type" : "string",
                        "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                      },
                      "tier" : {
                        "type" : "string",
                        "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                      }
                    },
                    "description" : "An Azure SKU instance"
                  }
                },
                "description" : "A Data Migration Service resource",
                "allOf" : [ {
                  "required" : [ "location" ],
                  "properties" : {
                    "location" : {
                      "type" : "string",
                      "description" : "Resource location."
                    },
                    "tags" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Resource tags."
                    }
                  },
                  "description" : "ARM tracked top level resource.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Service updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. Ignored if submitted"
                    },
                    "kind" : {
                      "type" : "string",
                      "description" : "The resource kind. Only 'vm' (the default) is supported."
                    },
                    "properties" : {
                      "required" : [ "virtualSubnetId" ],
                      "type" : "object",
                      "properties" : {
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The resource's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                        },
                        "publicKey" : {
                          "type" : "string",
                          "description" : "The public key of the service, used to encrypt secrets sent to the service"
                        },
                        "virtualSubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                        }
                      },
                      "description" : "Properties of the Data Migration service instance"
                    },
                    "sku" : {
                      "type" : "object",
                      "properties" : {
                        "capacity" : {
                          "type" : "integer",
                          "description" : "The capacity of the SKU, if it supports scaling"
                        },
                        "family" : {
                          "type" : "string",
                          "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "The unique name of the SKU, such as 'P3'"
                        },
                        "size" : {
                          "type" : "string",
                          "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                        },
                        "tier" : {
                          "type" : "string",
                          "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                        }
                      },
                      "description" : "An Azure SKU instance"
                    }
                  },
                  "description" : "A Data Migration Service resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Service created (use provisioningState)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. Ignored if submitted"
                    },
                    "kind" : {
                      "type" : "string",
                      "description" : "The resource kind. Only 'vm' (the default) is supported."
                    },
                    "properties" : {
                      "required" : [ "virtualSubnetId" ],
                      "type" : "object",
                      "properties" : {
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The resource's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                        },
                        "publicKey" : {
                          "type" : "string",
                          "description" : "The public key of the service, used to encrypt secrets sent to the service"
                        },
                        "virtualSubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                        }
                      },
                      "description" : "Properties of the Data Migration service instance"
                    },
                    "sku" : {
                      "type" : "object",
                      "properties" : {
                        "capacity" : {
                          "type" : "integer",
                          "description" : "The capacity of the SKU, if it supports scaling"
                        },
                        "family" : {
                          "type" : "string",
                          "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "The unique name of the SKU, such as 'P3'"
                        },
                        "size" : {
                          "type" : "string",
                          "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                        },
                        "tier" : {
                          "type" : "string",
                          "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                        }
                      },
                      "description" : "An Azure SKU instance"
                    }
                  },
                  "description" : "A Data Migration Service resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Update accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Service resource", "Standard operation", "DELETE" ],
        "summary" : "Delete DMS Service Instance",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. The DELETE method deletes a service. Any running tasks will be canceled.",
        "operationId" : "Services_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteRunningTasks",
          "in" : "query",
          "description" : "Delete the resource even if it contains running tasks",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Service resource deleted"
          },
          "202" : {
            "description" : "Deletion accepted"
          },
          "204" : {
            "description" : "Service not found"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Service resource", "Standard operation", "PATCH" ],
        "summary" : "Create or update DMS Service Instance",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. The PATCH method updates an existing service. This method can change the kind, SKU, and network of the service, but if tasks are currently running (i.e. the service is busy), this will fail with 400 Bad Request (\"ServiceIsBusy\").",
        "operationId" : "Services_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information about the service",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "etag" : {
                    "type" : "string",
                    "description" : "HTTP strong entity tag value. Ignored if submitted"
                  },
                  "kind" : {
                    "type" : "string",
                    "description" : "The resource kind. Only 'vm' (the default) is supported."
                  },
                  "properties" : {
                    "required" : [ "virtualSubnetId" ],
                    "type" : "object",
                    "properties" : {
                      "provisioningState" : {
                        "type" : "string",
                        "description" : "The resource's provisioning state",
                        "readOnly" : true,
                        "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                      },
                      "publicKey" : {
                        "type" : "string",
                        "description" : "The public key of the service, used to encrypt secrets sent to the service"
                      },
                      "virtualSubnetId" : {
                        "type" : "string",
                        "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                      }
                    },
                    "description" : "Properties of the Data Migration service instance"
                  },
                  "sku" : {
                    "type" : "object",
                    "properties" : {
                      "capacity" : {
                        "type" : "integer",
                        "description" : "The capacity of the SKU, if it supports scaling"
                      },
                      "family" : {
                        "type" : "string",
                        "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "The unique name of the SKU, such as 'P3'"
                      },
                      "size" : {
                        "type" : "string",
                        "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                      },
                      "tier" : {
                        "type" : "string",
                        "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                      }
                    },
                    "description" : "An Azure SKU instance"
                  }
                },
                "description" : "A Data Migration Service resource",
                "allOf" : [ {
                  "required" : [ "location" ],
                  "properties" : {
                    "location" : {
                      "type" : "string",
                      "description" : "Resource location."
                    },
                    "tags" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Resource tags."
                    }
                  },
                  "description" : "ARM tracked top level resource.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Service resource updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. Ignored if submitted"
                    },
                    "kind" : {
                      "type" : "string",
                      "description" : "The resource kind. Only 'vm' (the default) is supported."
                    },
                    "properties" : {
                      "required" : [ "virtualSubnetId" ],
                      "type" : "object",
                      "properties" : {
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The resource's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                        },
                        "publicKey" : {
                          "type" : "string",
                          "description" : "The public key of the service, used to encrypt secrets sent to the service"
                        },
                        "virtualSubnetId" : {
                          "type" : "string",
                          "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                        }
                      },
                      "description" : "Properties of the Data Migration service instance"
                    },
                    "sku" : {
                      "type" : "object",
                      "properties" : {
                        "capacity" : {
                          "type" : "integer",
                          "description" : "The capacity of the SKU, if it supports scaling"
                        },
                        "family" : {
                          "type" : "string",
                          "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "The unique name of the SKU, such as 'P3'"
                        },
                        "size" : {
                          "type" : "string",
                          "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                        },
                        "tier" : {
                          "type" : "string",
                          "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                        }
                      },
                      "description" : "An Azure SKU instance"
                    }
                  },
                  "description" : "A Data Migration Service resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "202" : {
            "description" : "Update accepted"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkNameAvailability" : {
      "post" : {
        "tags" : [ "Custom operation", "POST" ],
        "summary" : "Check nested resource name validity and availability",
        "description" : "This method checks whether a proposed nested resource name is valid and available.",
        "operationId" : "Services_CheckChildrenNameAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Requested name to validate",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "The proposed resource name"
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "The resource type chain (e.g. virtualMachines/extensions)"
                  }
                },
                "description" : "A resource type and proposed name"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Name checked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string",
                      "description" : "The localized reason why the name is not available, if nameAvailable is false"
                    },
                    "nameAvailable" : {
                      "type" : "boolean",
                      "description" : "If true, the name is valid and available. If false, 'reason' describes why not."
                    },
                    "reason" : {
                      "type" : "string",
                      "description" : "The reason why the name is not available, if nameAvailable is false",
                      "enum" : [ "AlreadyExists", "Invalid" ]
                    }
                  },
                  "description" : "Indicates whether a proposed resource name is available"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkStatus" : {
      "post" : {
        "tags" : [ "Service resource", "Custom operation", "POST" ],
        "summary" : "Check service health status",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. This action performs a health check and returns the status of the service and virtual machine size.",
        "operationId" : "Services_CheckStatus",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Health checked",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "agentVersion" : {
                      "type" : "string",
                      "description" : "The DMS instance agent version"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The machine-readable status, such as 'Initializing', 'Offline', 'Online', 'Deploying', 'Deleting', 'Stopped', 'Stopping', 'Starting', 'FailedToStart', 'FailedToStop' or 'Failed'"
                    },
                    "supportedTaskTypes" : {
                      "type" : "array",
                      "description" : "The list of supported task types",
                      "items" : {
                        "type" : "string",
                        "description" : "Migration task type"
                      }
                    },
                    "vmSize" : {
                      "type" : "string",
                      "description" : "The services virtual machine size, such as 'Standard_D2_v2'"
                    }
                  },
                  "description" : "Service health status"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects" : {
      "get" : {
        "tags" : [ "Project resource", "Standard operation", "GET" ],
        "summary" : "Get projects in a service",
        "description" : "The project resource is a nested resource representing a stored migration project. This method returns a list of projects owned by a service resource.",
        "operationId" : "Projects_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "URL to load the next page of projects"
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of projects",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "properties" : {
                            "required" : [ "sourcePlatform", "targetPlatform" ],
                            "type" : "object",
                            "properties" : {
                              "creationTime" : {
                                "type" : "string",
                                "description" : "UTC Date and time when project was created",
                                "format" : "date-time",
                                "readOnly" : true
                              },
                              "databasesInfo" : {
                                "type" : "array",
                                "description" : "List of DatabaseInfo",
                                "items" : {
                                  "required" : [ "sourceDatabaseName" ],
                                  "type" : "object",
                                  "properties" : {
                                    "sourceDatabaseName" : {
                                      "type" : "string",
                                      "description" : "Name of the database"
                                    }
                                  },
                                  "description" : "Project Database Details"
                                }
                              },
                              "provisioningState" : {
                                "type" : "string",
                                "description" : "The project's provisioning state",
                                "readOnly" : true,
                                "enum" : [ "Deleting", "Succeeded" ]
                              },
                              "sourceConnectionInfo" : {
                                "required" : [ "type" ],
                                "type" : "object",
                                "properties" : {
                                  "password" : {
                                    "type" : "string",
                                    "description" : "Password credential."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "Type of connection info"
                                  },
                                  "userName" : {
                                    "type" : "string",
                                    "description" : "User name"
                                  }
                                },
                                "description" : "Defines the connection properties of a server"
                              },
                              "sourcePlatform" : {
                                "type" : "string",
                                "description" : "Source platform of the project",
                                "enum" : [ "SQL", "Unknown" ]
                              },
                              "targetConnectionInfo" : {
                                "required" : [ "type" ],
                                "type" : "object",
                                "properties" : {
                                  "password" : {
                                    "type" : "string",
                                    "description" : "Password credential."
                                  },
                                  "type" : {
                                    "type" : "string",
                                    "description" : "Type of connection info"
                                  },
                                  "userName" : {
                                    "type" : "string",
                                    "description" : "User name"
                                  }
                                },
                                "description" : "Defines the connection properties of a server"
                              },
                              "targetPlatform" : {
                                "type" : "string",
                                "description" : "Target platform of the project",
                                "enum" : [ "SQLDB", "Unknown" ]
                              }
                            },
                            "description" : "Project-specific properties"
                          }
                        },
                        "description" : "A project resource"
                      }
                    }
                  },
                  "description" : "OData page of project resources"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}" : {
      "get" : {
        "tags" : [ "Project resource", "Standard operation", "GET" ],
        "summary" : "Get project information",
        "description" : "The project resource is a nested resource representing a stored migration project. The GET method retrieves information about a project.",
        "operationId" : "Projects_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A project resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "sourcePlatform", "targetPlatform" ],
                      "type" : "object",
                      "properties" : {
                        "creationTime" : {
                          "type" : "string",
                          "description" : "UTC Date and time when project was created",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "databasesInfo" : {
                          "type" : "array",
                          "description" : "List of DatabaseInfo",
                          "items" : {
                            "required" : [ "sourceDatabaseName" ],
                            "type" : "object",
                            "properties" : {
                              "sourceDatabaseName" : {
                                "type" : "string",
                                "description" : "Name of the database"
                              }
                            },
                            "description" : "Project Database Details"
                          }
                        },
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The project's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Deleting", "Succeeded" ]
                        },
                        "sourceConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "sourcePlatform" : {
                          "type" : "string",
                          "description" : "Source platform of the project",
                          "enum" : [ "SQL", "Unknown" ]
                        },
                        "targetConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "targetPlatform" : {
                          "type" : "string",
                          "description" : "Target platform of the project",
                          "enum" : [ "SQLDB", "Unknown" ]
                        }
                      },
                      "description" : "Project-specific properties"
                    }
                  },
                  "description" : "A project resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Project resource", "Standard operation", "PUT" ],
        "summary" : "Create or update project",
        "description" : "The project resource is a nested resource representing a stored migration project. The PUT method creates a new project or updates an existing one.",
        "operationId" : "Projects_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information about the project",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "sourcePlatform", "targetPlatform" ],
                    "type" : "object",
                    "properties" : {
                      "creationTime" : {
                        "type" : "string",
                        "description" : "UTC Date and time when project was created",
                        "format" : "date-time",
                        "readOnly" : true
                      },
                      "databasesInfo" : {
                        "type" : "array",
                        "description" : "List of DatabaseInfo",
                        "items" : {
                          "required" : [ "sourceDatabaseName" ],
                          "type" : "object",
                          "properties" : {
                            "sourceDatabaseName" : {
                              "type" : "string",
                              "description" : "Name of the database"
                            }
                          },
                          "description" : "Project Database Details"
                        }
                      },
                      "provisioningState" : {
                        "type" : "string",
                        "description" : "The project's provisioning state",
                        "readOnly" : true,
                        "enum" : [ "Deleting", "Succeeded" ]
                      },
                      "sourceConnectionInfo" : {
                        "required" : [ "type" ],
                        "type" : "object",
                        "properties" : {
                          "password" : {
                            "type" : "string",
                            "description" : "Password credential."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of connection info"
                          },
                          "userName" : {
                            "type" : "string",
                            "description" : "User name"
                          }
                        },
                        "description" : "Defines the connection properties of a server"
                      },
                      "sourcePlatform" : {
                        "type" : "string",
                        "description" : "Source platform of the project",
                        "enum" : [ "SQL", "Unknown" ]
                      },
                      "targetConnectionInfo" : {
                        "required" : [ "type" ],
                        "type" : "object",
                        "properties" : {
                          "password" : {
                            "type" : "string",
                            "description" : "Password credential."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of connection info"
                          },
                          "userName" : {
                            "type" : "string",
                            "description" : "User name"
                          }
                        },
                        "description" : "Defines the connection properties of a server"
                      },
                      "targetPlatform" : {
                        "type" : "string",
                        "description" : "Target platform of the project",
                        "enum" : [ "SQLDB", "Unknown" ]
                      }
                    },
                    "description" : "Project-specific properties"
                  }
                },
                "description" : "A project resource",
                "allOf" : [ {
                  "required" : [ "location" ],
                  "properties" : {
                    "location" : {
                      "type" : "string",
                      "description" : "Resource location."
                    },
                    "tags" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Resource tags."
                    }
                  },
                  "description" : "ARM tracked top level resource.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Project updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "sourcePlatform", "targetPlatform" ],
                      "type" : "object",
                      "properties" : {
                        "creationTime" : {
                          "type" : "string",
                          "description" : "UTC Date and time when project was created",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "databasesInfo" : {
                          "type" : "array",
                          "description" : "List of DatabaseInfo",
                          "items" : {
                            "required" : [ "sourceDatabaseName" ],
                            "type" : "object",
                            "properties" : {
                              "sourceDatabaseName" : {
                                "type" : "string",
                                "description" : "Name of the database"
                              }
                            },
                            "description" : "Project Database Details"
                          }
                        },
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The project's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Deleting", "Succeeded" ]
                        },
                        "sourceConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "sourcePlatform" : {
                          "type" : "string",
                          "description" : "Source platform of the project",
                          "enum" : [ "SQL", "Unknown" ]
                        },
                        "targetConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "targetPlatform" : {
                          "type" : "string",
                          "description" : "Target platform of the project",
                          "enum" : [ "SQLDB", "Unknown" ]
                        }
                      },
                      "description" : "Project-specific properties"
                    }
                  },
                  "description" : "A project resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Project created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "sourcePlatform", "targetPlatform" ],
                      "type" : "object",
                      "properties" : {
                        "creationTime" : {
                          "type" : "string",
                          "description" : "UTC Date and time when project was created",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "databasesInfo" : {
                          "type" : "array",
                          "description" : "List of DatabaseInfo",
                          "items" : {
                            "required" : [ "sourceDatabaseName" ],
                            "type" : "object",
                            "properties" : {
                              "sourceDatabaseName" : {
                                "type" : "string",
                                "description" : "Name of the database"
                              }
                            },
                            "description" : "Project Database Details"
                          }
                        },
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The project's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Deleting", "Succeeded" ]
                        },
                        "sourceConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "sourcePlatform" : {
                          "type" : "string",
                          "description" : "Source platform of the project",
                          "enum" : [ "SQL", "Unknown" ]
                        },
                        "targetConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "targetPlatform" : {
                          "type" : "string",
                          "description" : "Target platform of the project",
                          "enum" : [ "SQLDB", "Unknown" ]
                        }
                      },
                      "description" : "Project-specific properties"
                    }
                  },
                  "description" : "A project resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Project resource", "Standard operation", "DELETE" ],
        "summary" : "Delete project",
        "description" : "The project resource is a nested resource representing a stored migration project. The DELETE method deletes a project.",
        "operationId" : "Projects_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteRunningTasks",
          "in" : "query",
          "description" : "Delete the resource even if it contains running tasks",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Project resource deleted"
          },
          "204" : {
            "description" : "Not found"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Project resource", "Standard operation", "PATCH" ],
        "summary" : "Update project",
        "description" : "The project resource is a nested resource representing a stored migration project. The PATCH method updates an existing project.",
        "operationId" : "Projects_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information about the project",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "sourcePlatform", "targetPlatform" ],
                    "type" : "object",
                    "properties" : {
                      "creationTime" : {
                        "type" : "string",
                        "description" : "UTC Date and time when project was created",
                        "format" : "date-time",
                        "readOnly" : true
                      },
                      "databasesInfo" : {
                        "type" : "array",
                        "description" : "List of DatabaseInfo",
                        "items" : {
                          "required" : [ "sourceDatabaseName" ],
                          "type" : "object",
                          "properties" : {
                            "sourceDatabaseName" : {
                              "type" : "string",
                              "description" : "Name of the database"
                            }
                          },
                          "description" : "Project Database Details"
                        }
                      },
                      "provisioningState" : {
                        "type" : "string",
                        "description" : "The project's provisioning state",
                        "readOnly" : true,
                        "enum" : [ "Deleting", "Succeeded" ]
                      },
                      "sourceConnectionInfo" : {
                        "required" : [ "type" ],
                        "type" : "object",
                        "properties" : {
                          "password" : {
                            "type" : "string",
                            "description" : "Password credential."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of connection info"
                          },
                          "userName" : {
                            "type" : "string",
                            "description" : "User name"
                          }
                        },
                        "description" : "Defines the connection properties of a server"
                      },
                      "sourcePlatform" : {
                        "type" : "string",
                        "description" : "Source platform of the project",
                        "enum" : [ "SQL", "Unknown" ]
                      },
                      "targetConnectionInfo" : {
                        "required" : [ "type" ],
                        "type" : "object",
                        "properties" : {
                          "password" : {
                            "type" : "string",
                            "description" : "Password credential."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "Type of connection info"
                          },
                          "userName" : {
                            "type" : "string",
                            "description" : "User name"
                          }
                        },
                        "description" : "Defines the connection properties of a server"
                      },
                      "targetPlatform" : {
                        "type" : "string",
                        "description" : "Target platform of the project",
                        "enum" : [ "SQLDB", "Unknown" ]
                      }
                    },
                    "description" : "Project-specific properties"
                  }
                },
                "description" : "A project resource",
                "allOf" : [ {
                  "required" : [ "location" ],
                  "properties" : {
                    "location" : {
                      "type" : "string",
                      "description" : "Resource location."
                    },
                    "tags" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Resource tags."
                    }
                  },
                  "description" : "ARM tracked top level resource.",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Project resource updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "properties" : {
                      "required" : [ "sourcePlatform", "targetPlatform" ],
                      "type" : "object",
                      "properties" : {
                        "creationTime" : {
                          "type" : "string",
                          "description" : "UTC Date and time when project was created",
                          "format" : "date-time",
                          "readOnly" : true
                        },
                        "databasesInfo" : {
                          "type" : "array",
                          "description" : "List of DatabaseInfo",
                          "items" : {
                            "required" : [ "sourceDatabaseName" ],
                            "type" : "object",
                            "properties" : {
                              "sourceDatabaseName" : {
                                "type" : "string",
                                "description" : "Name of the database"
                              }
                            },
                            "description" : "Project Database Details"
                          }
                        },
                        "provisioningState" : {
                          "type" : "string",
                          "description" : "The project's provisioning state",
                          "readOnly" : true,
                          "enum" : [ "Deleting", "Succeeded" ]
                        },
                        "sourceConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "sourcePlatform" : {
                          "type" : "string",
                          "description" : "Source platform of the project",
                          "enum" : [ "SQL", "Unknown" ]
                        },
                        "targetConnectionInfo" : {
                          "required" : [ "type" ],
                          "type" : "object",
                          "properties" : {
                            "password" : {
                              "type" : "string",
                              "description" : "Password credential."
                            },
                            "type" : {
                              "type" : "string",
                              "description" : "Type of connection info"
                            },
                            "userName" : {
                              "type" : "string",
                              "description" : "User name"
                            }
                          },
                          "description" : "Defines the connection properties of a server"
                        },
                        "targetPlatform" : {
                          "type" : "string",
                          "description" : "Target platform of the project",
                          "enum" : [ "SQLDB", "Unknown" ]
                        }
                      },
                      "description" : "Project-specific properties"
                    }
                  },
                  "description" : "A project resource",
                  "allOf" : [ {
                    "required" : [ "location" ],
                    "properties" : {
                      "location" : {
                        "type" : "string",
                        "description" : "Resource location."
                      },
                      "tags" : {
                        "type" : "object",
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "Resource tags."
                      }
                    },
                    "description" : "ARM tracked top level resource.",
                    "allOf" : [ {
                      "type" : "object",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Resource ID.",
                          "readOnly" : true
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Resource name.",
                          "readOnly" : true
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Resource type.",
                          "readOnly" : true
                        }
                      },
                      "description" : "ARM resource."
                    } ]
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks" : {
      "get" : {
        "tags" : [ "Service resource", "Standard operation", "GET" ],
        "summary" : "Get tasks in a service",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. This method returns a list of tasks owned by a service resource. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.",
        "operationId" : "Tasks_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskType",
          "in" : "query",
          "description" : "Filter tasks by task type",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Got tasks",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "URL to load the next page of tasks"
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of tasks",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "etag" : {
                            "type" : "string",
                            "description" : "HTTP strong entity tag value. This is ignored if submitted."
                          },
                          "properties" : {
                            "required" : [ "taskType" ],
                            "type" : "object",
                            "properties" : {
                              "errors" : {
                                "type" : "array",
                                "description" : "Array of errors. This is ignored if submitted.",
                                "readOnly" : true,
                                "items" : {
                                  "type" : "object",
                                  "properties" : {
                                    "code" : {
                                      "type" : "string",
                                      "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                                    },
                                    "details" : {
                                      "type" : "array",
                                      "description" : "Inner errors that caused this error",
                                      "items" : {
                                        "$ref" : "#/components/schemas/ODataError"
                                      }
                                    },
                                    "message" : {
                                      "type" : "string",
                                      "description" : "The human-readable description of the error"
                                    }
                                  },
                                  "description" : "Error information in OData format."
                                }
                              },
                              "state" : {
                                "type" : "string",
                                "description" : "The state of the task. This is ignored if submitted.",
                                "readOnly" : true,
                                "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                              },
                              "taskType" : {
                                "type" : "string",
                                "description" : "Task type."
                              }
                            },
                            "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                          }
                        },
                        "description" : "A task resource"
                      }
                    }
                  },
                  "description" : "OData page of tasks"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}" : {
      "get" : {
        "tags" : [ "Task resource", "Standard operation", "GET" ],
        "summary" : "Get task information",
        "description" : "The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The GET method retrieves information about a task.",
        "operationId" : "Tasks_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskName",
          "in" : "path",
          "description" : "Name of the Task",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Expand the response",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A task resource",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. This is ignored if submitted."
                    },
                    "properties" : {
                      "required" : [ "taskType" ],
                      "type" : "object",
                      "properties" : {
                        "errors" : {
                          "type" : "array",
                          "description" : "Array of errors. This is ignored if submitted.",
                          "readOnly" : true,
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                              },
                              "details" : {
                                "type" : "array",
                                "description" : "Inner errors that caused this error",
                                "items" : {
                                  "$ref" : "#/components/schemas/ODataError"
                                }
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "The human-readable description of the error"
                              }
                            },
                            "description" : "Error information in OData format."
                          }
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "The state of the task. This is ignored if submitted.",
                          "readOnly" : true,
                          "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                        },
                        "taskType" : {
                          "type" : "string",
                          "description" : "Task type."
                        }
                      },
                      "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                    }
                  },
                  "description" : "A task resource",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Task resource", "Standard operation", "PUT" ],
        "summary" : "Create or update task",
        "description" : "The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The PUT method creates a new task or updates an existing one, although since tasks have no mutable custom properties, there is little reason to update an exising one.",
        "operationId" : "Tasks_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskName",
          "in" : "path",
          "description" : "Name of the Task",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information about the task",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "etag" : {
                    "type" : "string",
                    "description" : "HTTP strong entity tag value. This is ignored if submitted."
                  },
                  "properties" : {
                    "required" : [ "taskType" ],
                    "type" : "object",
                    "properties" : {
                      "errors" : {
                        "type" : "array",
                        "description" : "Array of errors. This is ignored if submitted.",
                        "readOnly" : true,
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "code" : {
                              "type" : "string",
                              "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                            },
                            "details" : {
                              "type" : "array",
                              "description" : "Inner errors that caused this error",
                              "items" : {
                                "$ref" : "#/components/schemas/ODataError"
                              }
                            },
                            "message" : {
                              "type" : "string",
                              "description" : "The human-readable description of the error"
                            }
                          },
                          "description" : "Error information in OData format."
                        }
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "The state of the task. This is ignored if submitted.",
                        "readOnly" : true,
                        "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                      },
                      "taskType" : {
                        "type" : "string",
                        "description" : "Task type."
                      }
                    },
                    "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                  }
                },
                "description" : "A task resource",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "ARM resource."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Task updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. This is ignored if submitted."
                    },
                    "properties" : {
                      "required" : [ "taskType" ],
                      "type" : "object",
                      "properties" : {
                        "errors" : {
                          "type" : "array",
                          "description" : "Array of errors. This is ignored if submitted.",
                          "readOnly" : true,
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                              },
                              "details" : {
                                "type" : "array",
                                "description" : "Inner errors that caused this error",
                                "items" : {
                                  "$ref" : "#/components/schemas/ODataError"
                                }
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "The human-readable description of the error"
                              }
                            },
                            "description" : "Error information in OData format."
                          }
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "The state of the task. This is ignored if submitted.",
                          "readOnly" : true,
                          "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                        },
                        "taskType" : {
                          "type" : "string",
                          "description" : "Task type."
                        }
                      },
                      "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                    }
                  },
                  "description" : "A task resource",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                }
              }
            }
          },
          "201" : {
            "description" : "Task created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. This is ignored if submitted."
                    },
                    "properties" : {
                      "required" : [ "taskType" ],
                      "type" : "object",
                      "properties" : {
                        "errors" : {
                          "type" : "array",
                          "description" : "Array of errors. This is ignored if submitted.",
                          "readOnly" : true,
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                              },
                              "details" : {
                                "type" : "array",
                                "description" : "Inner errors that caused this error",
                                "items" : {
                                  "$ref" : "#/components/schemas/ODataError"
                                }
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "The human-readable description of the error"
                              }
                            },
                            "description" : "Error information in OData format."
                          }
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "The state of the task. This is ignored if submitted.",
                          "readOnly" : true,
                          "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                        },
                        "taskType" : {
                          "type" : "string",
                          "description" : "Task type."
                        }
                      },
                      "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                    }
                  },
                  "description" : "A task resource",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Task resource", "Standard operation", "DELETE" ],
        "summary" : "Delete task",
        "description" : "The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The DELETE method deletes a task, canceling it first if it's running.",
        "operationId" : "Tasks_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskName",
          "in" : "path",
          "description" : "Name of the Task",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteRunningTasks",
          "in" : "query",
          "description" : "Delete the resource even if it contains running tasks",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Task resource deleted"
          },
          "204" : {
            "description" : "Not found"
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Task resource", "Standard operation", "PATCH" ],
        "summary" : "Create or update task",
        "description" : "The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. The PATCH method updates an existing task, but since tasks have no mutable custom properties, there is little reason to do so.",
        "operationId" : "Tasks_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskName",
          "in" : "path",
          "description" : "Name of the Task",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Information about the task",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "etag" : {
                    "type" : "string",
                    "description" : "HTTP strong entity tag value. This is ignored if submitted."
                  },
                  "properties" : {
                    "required" : [ "taskType" ],
                    "type" : "object",
                    "properties" : {
                      "errors" : {
                        "type" : "array",
                        "description" : "Array of errors. This is ignored if submitted.",
                        "readOnly" : true,
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "code" : {
                              "type" : "string",
                              "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                            },
                            "details" : {
                              "type" : "array",
                              "description" : "Inner errors that caused this error",
                              "items" : {
                                "$ref" : "#/components/schemas/ODataError"
                              }
                            },
                            "message" : {
                              "type" : "string",
                              "description" : "The human-readable description of the error"
                            }
                          },
                          "description" : "Error information in OData format."
                        }
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "The state of the task. This is ignored if submitted.",
                        "readOnly" : true,
                        "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                      },
                      "taskType" : {
                        "type" : "string",
                        "description" : "Task type."
                      }
                    },
                    "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                  }
                },
                "description" : "A task resource",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "ARM resource."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Task resource updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. This is ignored if submitted."
                    },
                    "properties" : {
                      "required" : [ "taskType" ],
                      "type" : "object",
                      "properties" : {
                        "errors" : {
                          "type" : "array",
                          "description" : "Array of errors. This is ignored if submitted.",
                          "readOnly" : true,
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                              },
                              "details" : {
                                "type" : "array",
                                "description" : "Inner errors that caused this error",
                                "items" : {
                                  "$ref" : "#/components/schemas/ODataError"
                                }
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "The human-readable description of the error"
                              }
                            },
                            "description" : "Error information in OData format."
                          }
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "The state of the task. This is ignored if submitted.",
                          "readOnly" : true,
                          "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                        },
                        "taskType" : {
                          "type" : "string",
                          "description" : "Task type."
                        }
                      },
                      "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                    }
                  },
                  "description" : "A task resource",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}/cancel" : {
      "post" : {
        "tags" : [ "Task resource", "Custom operation", "POST" ],
        "summary" : "Cancel a task",
        "description" : "The tasks resource is a nested, proxy-only resource representing work performed by a DMS instance. This method cancels a task if it's currently queued or running.",
        "operationId" : "Tasks_Cancel",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectName",
          "in" : "path",
          "description" : "Name of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskName",
          "in" : "path",
          "description" : "Name of the Task",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Task canceled",
            "content" : {
              "application/json" : {
                "schema" : {
                  "properties" : {
                    "etag" : {
                      "type" : "string",
                      "description" : "HTTP strong entity tag value. This is ignored if submitted."
                    },
                    "properties" : {
                      "required" : [ "taskType" ],
                      "type" : "object",
                      "properties" : {
                        "errors" : {
                          "type" : "array",
                          "description" : "Array of errors. This is ignored if submitted.",
                          "readOnly" : true,
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "code" : {
                                "type" : "string",
                                "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                              },
                              "details" : {
                                "type" : "array",
                                "description" : "Inner errors that caused this error",
                                "items" : {
                                  "$ref" : "#/components/schemas/ODataError"
                                }
                              },
                              "message" : {
                                "type" : "string",
                                "description" : "The human-readable description of the error"
                              }
                            },
                            "description" : "Error information in OData format."
                          }
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "The state of the task. This is ignored if submitted.",
                          "readOnly" : true,
                          "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                        },
                        "taskType" : {
                          "type" : "string",
                          "description" : "Task type."
                        }
                      },
                      "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                    }
                  },
                  "description" : "A task resource",
                  "allOf" : [ {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Resource ID.",
                        "readOnly" : true
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Resource name.",
                        "readOnly" : true
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Resource type.",
                        "readOnly" : true
                      }
                    },
                    "description" : "ARM resource."
                  } ]
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/skus" : {
      "get" : {
        "tags" : [ "Service resource", "Standard operation", "GET" ],
        "summary" : "Get compatible SKUs",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. The skus action returns the list of SKUs that a service resource can be updated to.",
        "operationId" : "Services_ListSkus",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Got SKUs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "nextLink" : {
                      "type" : "string",
                      "description" : "URL to load the next page of service SKUs"
                    },
                    "value" : {
                      "type" : "array",
                      "description" : "List of service SKUs",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "capacity" : {
                            "type" : "object",
                            "properties" : {
                              "default" : {
                                "type" : "integer",
                                "description" : "The default capacity"
                              },
                              "maximum" : {
                                "type" : "integer",
                                "description" : "The maximum capacity"
                              },
                              "minimum" : {
                                "type" : "integer",
                                "description" : "The minimum capacity, usually 0 or 1."
                              },
                              "scaleType" : {
                                "type" : "string",
                                "description" : "The scalability approach",
                                "enum" : [ "none", "manual", "automatic" ]
                              }
                            },
                            "description" : "A description of the scaling capacities of the SKU"
                          },
                          "resourceType" : {
                            "type" : "string",
                            "description" : "The resource type, including the provider namespace"
                          },
                          "sku" : {
                            "type" : "object",
                            "properties" : {
                              "family" : {
                                "type" : "string",
                                "description" : "SKU family"
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "The name of the SKU"
                              },
                              "size" : {
                                "type" : "string",
                                "description" : "SKU size"
                              },
                              "tier" : {
                                "type" : "string",
                                "description" : "The tier of the SKU, such as \"Free\", \"Basic\", \"Standard\", or \"Premium\""
                              }
                            },
                            "description" : "SKU name, tier, etc."
                          }
                        },
                        "description" : "Describes the available service SKU."
                      }
                    }
                  },
                  "description" : "OData page of available SKUs"
                }
              }
            }
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/start" : {
      "post" : {
        "tags" : [ "Service resource", "Custom operation", "POST" ],
        "summary" : "Start service",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. This action starts the service and the service can be used for data migration.",
        "operationId" : "Services_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The service has already been started."
          },
          "202" : {
            "description" : "The request to start service is accepted."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/stop" : {
      "post" : {
        "tags" : [ "Service resource", "Custom operation", "POST" ],
        "summary" : "Stop service",
        "description" : "The services resource is the top-level resource that represents the Data Migration Service. This action stops the service and the service cannot be used for data migration. The service owner won't be billed when the service is stopped.",
        "operationId" : "Services_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Identifier of the subscription",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "Name of the resource group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Name of the service",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The service has already been stopped."
          },
          "202" : {
            "description" : "The request to stop service is accepted."
          },
          "default" : {
            "description" : "Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "object",
                      "properties" : {
                        "code" : {
                          "type" : "string",
                          "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                        },
                        "details" : {
                          "type" : "array",
                          "description" : "Inner errors that caused this error",
                          "items" : {
                            "$ref" : "#/components/schemas/ODataError"
                          }
                        },
                        "message" : {
                          "type" : "string",
                          "description" : "The human-readable description of the error"
                        }
                      },
                      "description" : "Error information in OData format."
                    }
                  },
                  "description" : "Error information."
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ODataError" : {
        "type" : "object"
      }
    },
    "parameters" : {
      "apiVersion" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Version of the API",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "deleteRunningTasks" : {
        "name" : "deleteRunningTasks",
        "in" : "query",
        "description" : "Delete the resource even if it contains running tasks",
        "schema" : {
          "type" : "boolean"
        }
      },
      "groupName" : {
        "name" : "groupName",
        "in" : "path",
        "description" : "Name of the resource group",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "location" : {
        "name" : "location",
        "in" : "path",
        "description" : "The Azure region of the operation",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "projectName" : {
        "name" : "projectName",
        "in" : "path",
        "description" : "Name of the project",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "serviceName" : {
        "name" : "serviceName",
        "in" : "path",
        "description" : "Name of the service",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Identifier of the subscription",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "taskName" : {
        "name" : "taskName",
        "in" : "path",
        "description" : "Name of the Task",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "taskType" : {
        "name" : "taskType",
        "in" : "query",
        "description" : "Filter tasks by task type",
        "schema" : {
          "type" : "string"
        }
      },
      "timeoutMs" : {
        "name" : "timeoutMs",
        "in" : "query",
        "description" : "The number of milliseconds the task is allowed to run, up to 20000",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "requestBodies" : {
      "project" : {
        "description" : "Information about the project",
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "properties" : {
                  "required" : [ "sourcePlatform", "targetPlatform" ],
                  "type" : "object",
                  "properties" : {
                    "creationTime" : {
                      "type" : "string",
                      "description" : "UTC Date and time when project was created",
                      "format" : "date-time",
                      "readOnly" : true
                    },
                    "databasesInfo" : {
                      "type" : "array",
                      "description" : "List of DatabaseInfo",
                      "items" : {
                        "required" : [ "sourceDatabaseName" ],
                        "type" : "object",
                        "properties" : {
                          "sourceDatabaseName" : {
                            "type" : "string",
                            "description" : "Name of the database"
                          }
                        },
                        "description" : "Project Database Details"
                      }
                    },
                    "provisioningState" : {
                      "type" : "string",
                      "description" : "The project's provisioning state",
                      "readOnly" : true,
                      "enum" : [ "Deleting", "Succeeded" ]
                    },
                    "sourceConnectionInfo" : {
                      "required" : [ "type" ],
                      "type" : "object",
                      "properties" : {
                        "password" : {
                          "type" : "string",
                          "description" : "Password credential."
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Type of connection info"
                        },
                        "userName" : {
                          "type" : "string",
                          "description" : "User name"
                        }
                      },
                      "description" : "Defines the connection properties of a server"
                    },
                    "sourcePlatform" : {
                      "type" : "string",
                      "description" : "Source platform of the project",
                      "enum" : [ "SQL", "Unknown" ]
                    },
                    "targetConnectionInfo" : {
                      "required" : [ "type" ],
                      "type" : "object",
                      "properties" : {
                        "password" : {
                          "type" : "string",
                          "description" : "Password credential."
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Type of connection info"
                        },
                        "userName" : {
                          "type" : "string",
                          "description" : "User name"
                        }
                      },
                      "description" : "Defines the connection properties of a server"
                    },
                    "targetPlatform" : {
                      "type" : "string",
                      "description" : "Target platform of the project",
                      "enum" : [ "SQLDB", "Unknown" ]
                    }
                  },
                  "description" : "Project-specific properties"
                }
              },
              "description" : "A project resource",
              "allOf" : [ {
                "required" : [ "location" ],
                "properties" : {
                  "location" : {
                    "type" : "string",
                    "description" : "Resource location."
                  },
                  "tags" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Resource tags."
                  }
                },
                "description" : "ARM tracked top level resource.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "ARM resource."
                } ]
              } ]
            }
          }
        },
        "required" : true
      },
      "projectTask" : {
        "description" : "Information about the task",
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "etag" : {
                  "type" : "string",
                  "description" : "HTTP strong entity tag value. This is ignored if submitted."
                },
                "properties" : {
                  "required" : [ "taskType" ],
                  "type" : "object",
                  "properties" : {
                    "errors" : {
                      "type" : "array",
                      "description" : "Array of errors. This is ignored if submitted.",
                      "readOnly" : true,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "code" : {
                            "type" : "string",
                            "description" : "The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'"
                          },
                          "details" : {
                            "type" : "array",
                            "description" : "Inner errors that caused this error",
                            "items" : {
                              "$ref" : "#/components/schemas/ODataError"
                            }
                          },
                          "message" : {
                            "type" : "string",
                            "description" : "The human-readable description of the error"
                          }
                        },
                        "description" : "Error information in OData format."
                      }
                    },
                    "state" : {
                      "type" : "string",
                      "description" : "The state of the task. This is ignored if submitted.",
                      "readOnly" : true,
                      "enum" : [ "Unknown", "Queued", "Running", "Canceled", "Succeeded", "Failed", "FailedInputValidation", "Faulted" ]
                    },
                    "taskType" : {
                      "type" : "string",
                      "description" : "Task type."
                    }
                  },
                  "description" : "Base class for all types of DMS task properties. If task is not supported by current client, this object is returned."
                }
              },
              "description" : "A task resource",
              "allOf" : [ {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Resource ID.",
                    "readOnly" : true
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Resource name.",
                    "readOnly" : true
                  },
                  "type" : {
                    "type" : "string",
                    "description" : "Resource type.",
                    "readOnly" : true
                  }
                },
                "description" : "ARM resource."
              } ]
            }
          }
        },
        "required" : true
      },
      "requestedName" : {
        "description" : "Requested name to validate",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "The proposed resource name"
                },
                "type" : {
                  "type" : "string",
                  "description" : "The resource type chain (e.g. virtualMachines/extensions)"
                }
              },
              "description" : "A resource type and proposed name"
            }
          }
        },
        "required" : true
      },
      "service" : {
        "description" : "Information about the service",
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "etag" : {
                  "type" : "string",
                  "description" : "HTTP strong entity tag value. Ignored if submitted"
                },
                "kind" : {
                  "type" : "string",
                  "description" : "The resource kind. Only 'vm' (the default) is supported."
                },
                "properties" : {
                  "required" : [ "virtualSubnetId" ],
                  "type" : "object",
                  "properties" : {
                    "provisioningState" : {
                      "type" : "string",
                      "description" : "The resource's provisioning state",
                      "readOnly" : true,
                      "enum" : [ "Accepted", "Deleting", "Deploying", "Stopped", "Stopping", "Starting", "FailedToStart", "FailedToStop", "Succeeded", "Failed" ]
                    },
                    "publicKey" : {
                      "type" : "string",
                      "description" : "The public key of the service, used to encrypt secrets sent to the service"
                    },
                    "virtualSubnetId" : {
                      "type" : "string",
                      "description" : "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                    }
                  },
                  "description" : "Properties of the Data Migration service instance"
                },
                "sku" : {
                  "type" : "object",
                  "properties" : {
                    "capacity" : {
                      "type" : "integer",
                      "description" : "The capacity of the SKU, if it supports scaling"
                    },
                    "family" : {
                      "type" : "string",
                      "description" : "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "The unique name of the SKU, such as 'P3'"
                    },
                    "size" : {
                      "type" : "string",
                      "description" : "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                    },
                    "tier" : {
                      "type" : "string",
                      "description" : "The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'"
                    }
                  },
                  "description" : "An Azure SKU instance"
                }
              },
              "description" : "A Data Migration Service resource",
              "allOf" : [ {
                "required" : [ "location" ],
                "properties" : {
                  "location" : {
                    "type" : "string",
                    "description" : "Resource location."
                  },
                  "tags" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Resource tags."
                  }
                },
                "description" : "ARM tracked top level resource.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type.",
                      "readOnly" : true
                    }
                  },
                  "description" : "ARM resource."
                } ]
              } ]
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}