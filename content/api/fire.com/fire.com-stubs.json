{
  "mappings" : [ {
    "id" : "03e46aaa-62ae-4e87-9597-6da035ad6584",
    "name" : "List transactions for an account (v3)",
    "request" : {
      "urlPath" : "/v3/accounts/96611347405927128/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"links\" : [ {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  } ],\n  \"content\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"w08zp789ndujak82g1urr9qus0x8t5y0toryxg4oz40rn9iq95oqcrv28jcioxngfa564wh7dsco0xvzpfo0554thw6w8e9vys1jl47atvaokvupp1ou6igdab8yl3e8j\",\n        \"additionalDataDe124\" : \"p7s0cha3giy4qsab4ikci1yn8db88ex7k6ae1gytzavmhksv16cp1gzr55a4lpc2871wv0zvzqphqiky9pmcrpdzat4ravdzgmbq6k8n9koxg9dpfhei0pqcizhdgk65lf1410uux2sa1yfo7kb2vjxuet9mx\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-11-19T07:01:09.76799Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"tdi7bkrdsa2z5b25hi34r66en8ifo82iq27mt6b7u4btlld653fx8s13jytvn3ij18up0k245apjctf8aicrmk0yyvvxi1rf4te7t7a50a715j\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-07T19:41:56.768Z\",\n      \"maskedPan\" : \"y6e5fgk9pjnxurc99bbjnt6x17vqsog80p19zcpum6u2qioxs15maaa2b4q27u7r4r2q9vxwc610k0npi5vidk3vkreuiyw4117n9kw1h28btyvj3ni8f51da541murazfd7nri5xrqq1aaqjym86zg73iv\",\n      \"provider\" : \"0v8kypnu84qrfpgjb39zctp2fgarbye2yhhicfx\",\n      \"cardId\" : 1151360601114635393,\n      \"embossBusinessName\" : \"Lyndsay Collier\",\n      \"alias\" : \"ulsgtcdgdn4keqt9omtafzyg2nhcakjzstkft7lqqmoikjd4o8zjte2egslutaptcu13ybkvjyxckqeqe9hoi1ivwtdsgr51cw0l8sr\",\n      \"embossCardName\" : \"Wade Adams V\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-03-18T10:46:58.768Z\",\n      \"maskedPan\" : \"m6z5929\",\n      \"provider\" : \"gyxb8sa000w5ttr8ez2zfgnjs6ogv3pvey8x4ycl45jtffrqfxzy4hzzzgd7f74fnrr1rowqjd3smip19ial2062w21bd23q49fbuuoznvta1ulhsff3bu5v8pxvvxion2vrd8hov\",\n      \"cardId\" : 8490215449479045260,\n      \"embossBusinessName\" : \"Alfonzo Schowalter MD\",\n      \"alias\" : \"06j9cmp4c33kvieu5lahsyphuwyecwgu2p0xoms8xzc8vmja8svvtlyw0yr8jd1wganl74sx5c21njebz8avn4joye2thjjazbide2qa39nrcdgiwdixjxwrkwngikucnigesvi4qd925e\",\n      \"embossCardName\" : \"Rolando Mueller\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-03T17:36:26.768Z\",\n      \"maskedPan\" : \"4iw28h0fna1urk21h8690op28snr042cksnersg4ff9ximh7f7csy54cd3g96w16e1w4nq9wetob3ddwe7aice9ijovoj6wja10k3wfj82709809xo9t0hdy6z2kw0f6p4uuoumg9v\",\n      \"provider\" : \"rt2tzkipbqkm2nqsyr0vodmm1c3572u53b67n63hi79sn9nlzz1r1e2iwptki6oyg5s2bngzhxs4tjru9c0xtomflirmgzzkpjv90fk41tqtchdvdgvyk7ahpdx8di6xdqeche5fmtq8hymkumd1oip8k0r02fanx4r0mvfmjn78jfh8\",\n      \"cardId\" : 3047094745791398506,\n      \"embossBusinessName\" : \"Jamel Bins\",\n      \"alias\" : \"xx3a9s2528bjnh3z9jefp6j53kcao9iv8lzzigg8z8rt2ds\",\n      \"embossCardName\" : \"Georgann Lakin DVM\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 4659859102719236449,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-09-18T21:23:51.769Z\",\n      \"maskedPan\" : \"6qx90rl1h94l7mk0fxulqlqgy4ig93kry5dvnwms7v97umooroe8q7nj7rnlfkugvmb92bfkgclv1x1oejabs5l6wz06w7vz9\",\n      \"provider\" : \"6nv6pgr8nm47yjcd26epbystzxe0w08hx0n0jvs\",\n      \"cardId\" : 2907043711177598470,\n      \"embossBusinessName\" : \"Walton Cole\",\n      \"alias\" : \"p16vqvgabvge9pmflhdwq3rrpzgx2nh80zadkjz823obuq8jjxlqvcvuyingrquxliiuwn5qq3is9zyjl5cnijw447dl0e92pcwa8pmokmea9wcx8mpwgeqr8lrp9of9jce6d62m6snxbwqojzpkt2\",\n      \"embossCardName\" : \"Carlota Aufderhar\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03e46aaa-62ae-4e87-9597-6da035ad6584",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.770617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv3",
          "schema" : {
            "properties" : {
              "content" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "items" : {
                  "properties" : {
                    "href" : {
                      "description" : "https://api.fire.com/business/v3/accounts/1/transactions?startAfter=eyJpY2F",
                      "example" : "The URL of the linked page",
                      "type" : "string"
                    },
                    "rel" : {
                      "description" : "The relationship of this link to the current object - self, next, prev page.",
                      "example" : "self",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv3",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "dbe034a5-ac74-44d3-bb3b-d075c5e29251",
    "name" : "Returns list of all users on your fire.com account",
    "request" : {
      "urlPath" : "/v1/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"CLOSED\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"SMS_SENT\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"SMS_CODE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"CLOSED\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbe034a5-ac74-44d3-bb3b-d075c5e29251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.767764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUsers",
          "schema" : {
            "items" : {
              "properties" : {
                "emailAddress" : {
                  "description" : "email address for user",
                  "example" : "user@example.com",
                  "type" : "string"
                },
                "firstName" : {
                  "description" : "User first name",
                  "example" : "Colm",
                  "type" : "string"
                },
                "id" : {
                  "description" : "The User ID for this User",
                  "example" : 14059,
                  "format" : "int64",
                  "type" : "integer"
                },
                "lastName" : {
                  "description" : "User second name",
                  "example" : "User",
                  "type" : "string"
                },
                "lastlogin" : {
                  "description" : "Timestamp on when user last logged in.",
                  "example" : "2012-01-20T11:21:35.000Z",
                  "type" : "string"
                },
                "mobileApplicationDetails" : {
                  "properties" : {
                    "OS" : {
                      "description" : "Operating system of device.",
                      "enum" : [ "Android", "IOS", "OTHER" ],
                      "type" : "string"
                    },
                    "businessUserId" : {
                      "description" : "Business user ID",
                      "example" : "14059",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "clientID" : {
                      "description" : "Client ID of user.",
                      "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                      "type" : "string"
                    },
                    "deviceName" : {
                      "description" : "type of device.",
                      "enum" : [ "iPhone", "Android", "Other" ],
                      "type" : "string"
                    },
                    "deviceOSVersion" : {
                      "description" : "OS version for device.",
                      "example" : "14.4",
                      "type" : "string"
                    },
                    "mobileApplicationId" : {
                      "description" : "Mobile application id for user.",
                      "example" : "18967",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "status" : {
                      "description" : "Status of user",
                      "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "mobileApplication",
                  "type" : "object"
                },
                "mobileNumber" : {
                  "description" : "User mobile number",
                  "example" : "+353871234567",
                  "type" : "string"
                },
                "role" : {
                  "description" : "User role",
                  "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                  "type" : "string"
                },
                "status" : {
                  "description" : "Status of user",
                  "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                  "type" : "string"
                },
                "userCvl" : {
                  "description" : "Users Cvl type ID (shows up when status is LIVE)",
                  "example" : "FULL",
                  "type" : "string"
                }
              },
              "title" : "user",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "25b01179-7351-4db0-9dc7-b22f479ce692",
    "name" : "Returns details of a specific fire.com user.",
    "request" : {
      "urlPath" : "/v1/user/1208289188551616606",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"FROZEN\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25b01179-7351-4db0-9dc7-b22f479ce692",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.766958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "properties" : {
              "emailAddress" : {
                "description" : "email address for user",
                "example" : "user@example.com",
                "type" : "string"
              },
              "firstName" : {
                "description" : "User first name",
                "example" : "Colm",
                "type" : "string"
              },
              "id" : {
                "description" : "The User ID for this User",
                "example" : 14059,
                "format" : "int64",
                "type" : "integer"
              },
              "lastName" : {
                "description" : "User second name",
                "example" : "User",
                "type" : "string"
              },
              "lastlogin" : {
                "description" : "Timestamp on when user last logged in.",
                "example" : "2012-01-20T11:21:35.000Z",
                "type" : "string"
              },
              "mobileApplicationDetails" : {
                "properties" : {
                  "OS" : {
                    "description" : "Operating system of device.",
                    "enum" : [ "Android", "IOS", "OTHER" ],
                    "type" : "string"
                  },
                  "businessUserId" : {
                    "description" : "Business user ID",
                    "example" : "14059",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "clientID" : {
                    "description" : "Client ID of user.",
                    "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                    "type" : "string"
                  },
                  "deviceName" : {
                    "description" : "type of device.",
                    "enum" : [ "iPhone", "Android", "Other" ],
                    "type" : "string"
                  },
                  "deviceOSVersion" : {
                    "description" : "OS version for device.",
                    "example" : "14.4",
                    "type" : "string"
                  },
                  "mobileApplicationId" : {
                    "description" : "Mobile application id for user.",
                    "example" : "18967",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "status" : {
                    "description" : "Status of user",
                    "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                    "type" : "string"
                  }
                },
                "title" : "mobileApplication",
                "type" : "object"
              },
              "mobileNumber" : {
                "description" : "User mobile number",
                "example" : "+353871234567",
                "type" : "string"
              },
              "role" : {
                "description" : "User role",
                "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                "type" : "string"
              },
              "status" : {
                "description" : "Status of user",
                "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                "type" : "string"
              },
              "userCvl" : {
                "description" : "Users Cvl type ID (shows up when status is LIVE)",
                "example" : "FULL",
                "type" : "string"
              }
            },
            "title" : "user",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0872f5e4-7783-4e63-acd4-60e612232d9a",
    "name" : "Get Payment Details",
    "request" : {
      "urlPath" : "/v1/payments/36e93403-e9d6-35d9-bf91-4f165dbf24ba",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 1000,\n  \"additionalFields\" : \"ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\",\n  \"description\" : \"Gym Fees Oct 2020\",\n  \"type\" : \"OTHER\",\n  \"webhookUrl\" : \"https://example.com/webhook\",\n  \"icanTo\" : 42,\n  \"transactionType\" : \"PAYMENT\",\n  \"orderDetails\" : {\n    \"deliveryCity\" : \"London\",\n    \"comment2\" : \"Additional comments about the transaction\",\n    \"productId\" : \"ZFDAA-1221\",\n    \"comment1\" : \"Additional comments about the transaction\",\n    \"orderId\" : \"6c28a47d-4502-4111\",\n    \"variableReference\" : \"John Doe\",\n    \"merchantCustomerIdentification\" : 8303863544,\n    \"customerNumber\" : \"123645\",\n    \"merchantNumber\" : \"1234567\",\n    \"deliveryPostCode\" : \"EC15155\",\n    \"deliveryCountry\" : \"GB\",\n    \"deliveryAddressLine2\" : \"The Way\",\n    \"deliveryAddressLine1\" : \"12 The Street\"\n  },\n  \"paymentUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"maxNumberPayments\" : 1,\n  \"mandatoryFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"collectFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"expiry\" : \"2024-10-22T07:48:56.460Z\",\n  \"returnUrl\" : \"https://example.com/callback\",\n  \"myRef\" : \"Fees\",\n  \"paymentRequestCode\" : \"1234abcd\",\n  \"status\" : \"AWAITING_MULTI_AUTHORISATION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0872f5e4-7783-4e63-acd4-60e612232d9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.766627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPaymentDetails",
          "schema" : {
            "properties" : {
              "additionalFields" : {
                "description" : "These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.",
                "example" : "ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2",
                "type" : "string"
              },
              "amount" : {
                "description" : "The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).",
                "example" : 1000,
                "format" : "int64",
                "type" : "integer"
              },
              "collectFields" : {
                "description" : "For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "description" : {
                "description" : "A public facing description of the request. This will be shown to the user when they tap or scan the request.",
                "example" : "Gym Fees Oct 2020",
                "type" : "string"
              },
              "expiry" : {
                "description" : "This is the expiry of the payment request. After this time, the payment cannot be paid.",
                "example" : "2024-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "icanTo" : {
                "description" : "The ican of the account to collect the funds into. Must be one of your fire.com Accounts.",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "mandatoryFields" : {
                "description" : "For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "maxNumberPayments" : {
                "description" : "The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.",
                "example" : 1,
                "type" : "integer"
              },
              "myRef" : {
                "description" : "An internal description of the request.",
                "example" : "Fees",
                "type" : "string"
              },
              "orderDetails" : {
                "properties" : {
                  "comment1" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "comment2" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "customerNumber" : {
                    "description" : "Use this field to store a customer number for the transaction (for example).",
                    "example" : "123645",
                    "type" : "string"
                  },
                  "deliveryAddressLine1" : {
                    "description" : "The first line of the delivery address.",
                    "example" : "12 The Street",
                    "type" : "string"
                  },
                  "deliveryAddressLine2" : {
                    "description" : "The second line of the delivery address.",
                    "example" : "The Way",
                    "type" : "string"
                  },
                  "deliveryCity" : {
                    "description" : "Delivery address city",
                    "example" : "London",
                    "type" : "string"
                  },
                  "deliveryCountry" : {
                    "description" : "2-digit code for the country",
                    "example" : "GB",
                    "type" : "string"
                  },
                  "deliveryPostCode" : {
                    "description" : "Delivery address post code",
                    "example" : "EC15155",
                    "type" : "string"
                  },
                  "merchantCustomerIdentification" : {
                    "description" : "This is a reference you use to uniquely identify each of your customers.",
                    "example" : 8303863544,
                    "type" : "string"
                  },
                  "merchantNumber" : {
                    "description" : "Your Merchant Number (if applicable).",
                    "example" : "1234567",
                    "type" : "string"
                  },
                  "orderId" : {
                    "description" : "Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.",
                    "example" : "6c28a47d-4502-4111",
                    "type" : "string"
                  },
                  "productId" : {
                    "description" : "Use this field to store a product id for the transaction (for example).",
                    "example" : "ZFDAA-1221",
                    "type" : "string"
                  },
                  "variableReference" : {
                    "description" : "Use this field to store any other reference for the transaction (for example, a phone number).",
                    "example" : "John Doe",
                    "type" : "string"
                  }
                },
                "title" : "orderDetails",
                "type" : "object"
              },
              "paymentRequestCode" : {
                "description" : "The code that was returned when you created the payment request.",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "paymentUuid" : {
                "description" : "A unique id for the transaction.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "returnUrl" : {
                "description" : "The merchant return URL where the customer will be re-directed to with the result of the transaction.",
                "example" : "https://example.com/callback",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the transaction",
                "enum" : [ "AWAITING_AUTHORISATION", "AUTHORISED", "AWAITING_MULTI_AUTHORISATION", "NOT_AUTHORISED", "PAID", "REJECTED", "ACCEPTED", "RECEIVED" ],
                "type" : "string"
              },
              "transactionType" : {
                "description" : "The type of payment request payment",
                "enum" : [ "REFUND_REQUEST", "PAYMENT" ],
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created",
                "enum" : [ "OTHER" ],
                "type" : "string"
              },
              "webhookUrl" : {
                "description" : "A URL to be called in the background with the details of the payment after the payment is complete",
                "example" : "https://example.com/webhook",
                "type" : "string"
              }
            },
            "title" : "paymentRequest",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "a9ba80a1-7831-4717-a177-915f59dcd67e",
    "name" : "Create a Fire Open Payment request",
    "request" : {
      "urlPath" : "/v1/paymentrequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : \"1234abcd\",\n  \"type\" : \"OTHER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9ba80a1-7831-4717-a177-915f59dcd67e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.766088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "newPaymentRequest",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.\n",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created.",
                "enum" : [ "OTHER" ],
                "type" : "string"
              }
            },
            "title" : "newPaymentRequestResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "63cd9151-0520-4da0-9fdb-aa7f143e6d2e",
    "name" : "List all Payee Bank Accounts",
    "request" : {
      "urlPath" : "/v1/payees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"fundingSources\" : [ {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63cd9151-0520-4da0-9fdb-aa7f143e6d2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.766004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPayees",
          "schema" : {
            "properties" : {
              "fundingSources" : {
                "items" : {
                  "properties" : {
                    "accountHolderName" : {
                      "description" : "The name on the payee bank account.",
                      "example" : "Joe Bloggs",
                      "type" : "string"
                    },
                    "accountName" : {
                      "description" : "The alias attributed to the payee, usually set by the user when creating the payee.",
                      "example" : "Joe",
                      "type" : "string"
                    },
                    "accountNumber" : {
                      "description" : "The Account Number of the account if currency is GBP.",
                      "example" : "12345678",
                      "type" : "string"
                    },
                    "bic" : {
                      "description" : "The BIC of the account if currency is EUR.",
                      "example" : "BOFIIE2DXXX",
                      "type" : "string"
                    },
                    "createdBy" : {
                      "description" : "The creation source of the payee.",
                      "enum" : [ "CUSTOMER", "LODGEMENT", "DIRECT DEBIT", "OPEN BANKING", "FIRE OPEN PAYMENT", "FIRE DIRECT" ],
                      "example" : "CUSTOMER",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the payee was created. ISO Date Time.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "iban" : {
                      "description" : "The IBAN of the account if currency is EUR.",
                      "example" : "IE86BOFI90535211111111",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "Identifier for the fire.com payee bank account (assigned by fire.com).",
                      "example" : 742,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "nsc" : {
                      "description" : "The Sort Code of the account if currency is GBP.",
                      "example" : "998822",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.\n  * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.\n  * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.\n  * 'CLOSED'\n  * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.\n",
                      "enum" : [ "CREATED", "LIVE", "CLOSED", "ARCHIVED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    }
                  },
                  "title" : "payee",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of payees in the list.",
                "example" : 1,
                "type" : "integer"
              }
            },
            "title" : "payeeBankAccounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "f14fbe5e-cfce-4faf-85b4-ca03652a1e40",
    "name" : "Cancel a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/a44e6c23-87f6-358d-bbab-feba7dac0527/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f14fbe5e-cfce-4faf-85b4-ca03652a1e40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.765613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelMandateByUuid"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "87cbc0a2-ed2e-41e3-b5b6-584e0c1e9093",
    "name" : "Activate a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/4731bcd2-3ece-3380-a264-014c4b28d009/activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "87cbc0a2-ed2e-41e3-b5b6-584e0c1e9093",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.765574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "activateMandate"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "661964e1-b85f-4a48-9176-c899aab61004",
    "name" : "Update a direct debit mandate alias - 204",
    "request" : {
      "urlPath" : "/v1/mandates/07f5f502-5f58-3996-8b2b-4ea49f0cdc7d",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "661964e1-b85f-4a48-9176-c899aab61004",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.765535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateMandateAlias"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "60286429-9e6a-4677-8ecc-8786d2a7a9d7",
    "name" : "Get direct debit mandate details",
    "request" : {
      "urlPath" : "/v1/mandates/5f2e3169-2193-3985-90d1-06ac8fe262af",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"originatorReference\" : \"VODA-123456\",\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 1,\n  \"latestDirectDebitAmount\" : 2,\n  \"numberOfDirectDebitCollected\" : 2,\n  \"valueOfDirectDebitCollected\" : 2,\n  \"originatorAlias\" : \"Vodaphone PLC\",\n  \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateReference\" : \"CRZ-102190123\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n  \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n  \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n  \"alias\" : \"Vodaphone\",\n  \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n  \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60286429-9e6a-4677-8ecc-8786d2a7a9d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.765486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getMandate",
          "schema" : {
            "properties" : {
              "alias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCancelled" : {
                "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCompleted" : {
                "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "fireRejectionReason" : {
                "description" : "Rejection reason if transaction is rejected",
                "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "latestDirectDebitAmount" : {
                "description" : "The value of largest direct debit collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "latestDirectDebitDate" : {
                "description" : "The date of latest direct debit collected",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateReference" : {
                "description" : "the reference of the mandate",
                "example" : "CRZ-102190123",
                "type" : "string"
              },
              "mandateUuid" : {
                "description" : "The UUID for the mandate",
                "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                "type" : "string"
              },
              "numberOfDirectDebitCollected" : {
                "description" : "The number of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "originatorAlias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone PLC",
                "type" : "string"
              },
              "originatorLogoUrlLarge" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoLarge",
                "type" : "string"
              },
              "originatorLogoUrlSmall" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoSmall",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeCancelReason" : {
                "description" : "Reason for cancelation",
                "example" : "e.g. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeCancelReasonCode" : {
                "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "Identifier for the fire.com account (assigned by fire.com)",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfDirectDebitCollected" : {
                "description" : "The value of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandate",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "5404ad89-82aa-4bea-b7ae-b67d5fbfd2af",
    "name" : "List all direct debit mandates",
    "request" : {
      "urlPath" : "/v1/mandates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"mandates\" : [ {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5404ad89-82aa-4bea-b7ae-b67d5fbfd2af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.765082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitMandates",
          "schema" : {
            "properties" : {
              "mandates" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCancelled" : {
                      "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCompleted" : {
                      "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "fireRejectionReason" : {
                      "description" : "Rejection reason if transaction is rejected",
                      "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                      "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "latestDirectDebitAmount" : {
                      "description" : "The value of largest direct debit collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "latestDirectDebitDate" : {
                      "description" : "The date of latest direct debit collected",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateReference" : {
                      "description" : "the reference of the mandate",
                      "example" : "CRZ-102190123",
                      "type" : "string"
                    },
                    "mandateUuid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                      "type" : "string"
                    },
                    "numberOfDirectDebitCollected" : {
                      "description" : "The number of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "originatorAlias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone PLC",
                      "type" : "string"
                    },
                    "originatorLogoUrlLarge" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoLarge",
                      "type" : "string"
                    },
                    "originatorLogoUrlSmall" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoSmall",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeCancelReason" : {
                      "description" : "Reason for cancelation",
                      "example" : "e.g. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeCancelReasonCode" : {
                      "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                      "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "Identifier for the fire.com account (assigned by fire.com)",
                      "example" : 1,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "valueOfDirectDebitCollected" : {
                      "description" : "The value of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "mandate",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandates",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "ba920969-f9ec-4bab-9c45-0c4dc5f98a64",
    "name" : "Reject a direct debit payment - 204",
    "request" : {
      "urlPath" : "/v1/directdebits/ec678330-b66b-3129-9327-4f45d152d87d/reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ba920969-f9ec-4bab-9c45-0c4dc5f98a64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.764379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rejectDirectDebit"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d407e389-7bea-4012-ae32-8bd4d587ec3f",
    "name" : "Get the details of a direct debit",
    "request" : {
      "urlPath" : "/v1/directdebits/64123a08-e3a2-3744-a957-9ae8961bf759",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directDebitReference\" : \"VODA-ABC453-1\",\n  \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n  \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n  \"originatorReference\" : \"VODA-123456\",\n  \"amount\" : 100,\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 42,\n  \"isDDIC\" : false,\n  \"originatorAlias\" : \"Three\",\n  \"type\" : \"FIRST_COLLECTION\",\n  \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n  \"targetPayeeId\" : 12,\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d407e389-7bea-4012-ae32-8bd4d587ec3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.764324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitByUuid",
          "schema" : {
            "properties" : {
              "amount" : {
                "description" : "Value of the payment",
                "example" : 100,
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "directDebitReference" : {
                "description" : "The direct debit reference.",
                "example" : "VODA-ABC453-1",
                "type" : "string"
              },
              "directDebitUuid" : {
                "description" : "The UUID for the direct debit payment",
                "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                "type" : "string"
              },
              "isDDIC" : {
                "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                "example" : false,
                "type" : "boolean"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateUUid" : {
                "description" : "The UUID for the mandate",
                "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                "type" : "string"
              },
              "originatorAlias" : {
                "description" : "The Alias of the party who sets up the direct debit.",
                "example" : "Three",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeRejectReason" : {
                "description" : "Reason why rejected",
                "example" : "eg. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeRejectReasonCode" : {
                "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                "type" : "string"
              },
              "status" : {
                "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "The ican of your fire account that the money was taken from",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "targetPayeeId" : {
                "description" : "The payee that was created when the DD was processed",
                "example" : 12,
                "format" : "int64",
                "type" : "integer"
              },
              "type" : {
                "description" : "The type of the direct debit.",
                "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                "example" : "FIRST_COLLECTION",
                "type" : "string"
              }
            },
            "title" : "directDebit",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "e14ecbd4-f914-48c6-82c3-b79856f5757f",
    "name" : "Get all DD payments associated with a direct debit mandate",
    "request" : {
      "urlPath" : "/v1/directdebits",
      "method" : "GET",
      "queryParameters" : {
        "mandateUuid" : {
          "equalTo" : "422fd3b9-008b-3158-bc02-7f379f3db396"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"directdebits\" : [ {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e14ecbd4-f914-48c6-82c3-b79856f5757f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.763985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitsForMandateUuid",
          "schema" : {
            "properties" : {
              "directdebits" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "Value of the payment",
                      "example" : 100,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitReference" : {
                      "description" : "The direct debit reference.",
                      "example" : "VODA-ABC453-1",
                      "type" : "string"
                    },
                    "directDebitUuid" : {
                      "description" : "The UUID for the direct debit payment",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "isDDIC" : {
                      "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateUUid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                      "type" : "string"
                    },
                    "originatorAlias" : {
                      "description" : "The Alias of the party who sets up the direct debit.",
                      "example" : "Three",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeRejectReason" : {
                      "description" : "Reason why rejected",
                      "example" : "eg. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeRejectReasonCode" : {
                      "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                      "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                      "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "The ican of your fire account that the money was taken from",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "targetPayeeId" : {
                      "description" : "The payee that was created when the DD was processed",
                      "example" : 12,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the direct debit.",
                      "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                      "example" : "FIRST_COLLECTION",
                      "type" : "string"
                    }
                  },
                  "title" : "directDebit",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "directDebits",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "bece6fdc-2eb1-46e1-9866-4727c62df53d",
    "name" : "Unblock a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/8018871552322043740/unblock",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bece6fdc-2eb1-46e1-9866-4727c62df53d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.76337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "unblockCard"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "14cc8a3e-6e2a-4a88-9247-a94f6f1cdd2f",
    "name" : "List Card Transactions. - 403",
    "request" : {
      "urlPath" : "/v1/cards/4884510357418789647/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "14cc8a3e-6e2a-4a88-9247-a94f6f1cdd2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.763341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "586fa881-9068-4e44-befb-409a4bcbbd92",
    "name" : "List Card Transactions. - 401",
    "request" : {
      "urlPath" : "/v1/cards/3969780029504721649/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "586fa881-9068-4e44-befb-409a4bcbbd92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.763318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "58be205e-c746-4c8d-ae3b-bc8727adf2e9",
    "name" : "List Card Transactions. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards/7865815730044497038/transactions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-09T13:10:54.752Z\",\n      \"maskedPan\" : \"of2jrg3l12dcn31\",\n      \"provider\" : \"cfrwab3cs15mwxbwgaqt1fnm64y5fw4c2n5ghdkmeyfvdm2w8wr91i80oni34pbapwjq7lylac9faccwvg9heb06atnxee54g9e98pp7v0zpfnkfvm0tgnc0gzmsy63grihugau26g0yvxicav7w7yi6x8bshm\",\n      \"cardId\" : 8441153070937384305,\n      \"embossBusinessName\" : \"Vivienne Schroeder\",\n      \"alias\" : \"et2nk2mxdc3l5f5\",\n      \"embossCardName\" : \"Stephen Sporer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 7232226350900069628,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-30T01:00:16.752Z\",\n      \"maskedPan\" : \"abyspb3ufozeww540l99dszirq\",\n      \"provider\" : \"8dkxaisltfz6j7pz8l5ugwj2uzume2d1np\",\n      \"cardId\" : 3271328098278862125,\n      \"embossBusinessName\" : \"Frank Langworth\",\n      \"alias\" : \"vy1l75o0156frl8b2wl8gbynhv72zhlilsgoxb\",\n      \"embossCardName\" : \"Gaston Brekke\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-11-29T09:09:40.752Z\",\n      \"maskedPan\" : \"rkvycb202sbta9ietyqutl4bxvqzxgrfyg5fpkhp0hl9wlraoypbf0yskz14n6208lmlxxvwlixbsu3pqwznj\",\n      \"provider\" : \"vjd523n\",\n      \"cardId\" : 8557522529578346867,\n      \"embossBusinessName\" : \"Sommer Kshlerin\",\n      \"alias\" : \"5dttmh8z2ev3odkkj6on3rcnzhedssw21l50belye9kvu6yukzyl2fh8r6imvz1h00xvpsnx4hxg2g34multp8q2muxwz6f7ubo1djr7liyu\",\n      \"embossCardName\" : \"Lamar Veum\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"k89as7m88\",\n        \"additionalDataDe124\" : \"q8f3bruftsz2azwgfhj8t1dth55zs68ilbvarfxksdzw8u24d2bt2rvgj7i9ckeoh3x1zfr6gkqbvspb3tgui1mjukll3tf1s4xf46pi1xt9v7whkcetsmvqpah71jxwm1p30kxcew4g4bjpdhkdkg1ohvwrahybx8jrp\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2023-01-01T07:01:09.753026Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"n5s9p6axc9h7f2z40pfalm1zsmbnwszucm72i8u21zmgnweaq8mx10lzsu3aq69m0rvs6a8youpmsjwiosvvs36v1widjjw79wq6s1dbbhtbardtl\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-03-11T02:32:10.753Z\",\n      \"maskedPan\" : \"pbms4tqtruxvnlr2gmzcg5jx48bv2qotvd6jdz\",\n      \"provider\" : \"3jccq41vpwelojzjmnrebhp37qi0t9o38ntjye2gagz9w8iqszotbcjd832srsiz5wfsbpfgoijkt2dg82d8334v73uel73\",\n      \"cardId\" : 8070955443330720042,\n      \"embossBusinessName\" : \"Charley Stehr III\",\n      \"alias\" : \"ro3kfqf8d9jleqjj9sq4r4muj0jp32s662bg34g83bm8nb62xuxwlzwr37aoc8jffsdg7\",\n      \"embossCardName\" : \"Colin Weimann\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 424761764244560186,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-09T18:28:28.753Z\",\n      \"maskedPan\" : \"d3x2\",\n      \"provider\" : \"bo2lspy4kulaljqleutzwxb10n5y7eecanz4dxp18rebm8x2y04a7dbfvx468b9j0i23jx49nivggmpou5gmw3arjyr9gds97i7lp3wms2zuzznfxtbs3p02njg3j6inr6u3be0ztoh9n6nsczrs9qcr4rp8d3fkernel6phrwn9cyzeb7211\",\n      \"cardId\" : 3214308843893862521,\n      \"embossBusinessName\" : \"Mrs. Darrick Lemke\",\n      \"alias\" : \"0zohfuk8s051qr6u1ssxw3tn9t3qpb1jeanknb4o0v08kxwfchgq92z6hgy5ay37k2stmj5fl6b4laf4xqj1y4on7n69gmkmt4genhr3a3trefcuc6rdr7gyl7n0o023nc5m2qhxdrua6ujktzzuuui61gldt3vv8y19otkz8uitx5vb0rfzsxff\",\n      \"embossCardName\" : \"Leanna Cole\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-10-22T22:46:52.753Z\",\n      \"maskedPan\" : \"ni7x3htb94hte3ksjgt5xp059lesm1hhso52z1b3thak\",\n      \"provider\" : \"5dj9y6zkdrxj32tv8piqlaar2m12m2n5xycevx30bi6sthq7mxfpymwu97xjv615l9\",\n      \"cardId\" : 223622392352486424,\n      \"embossBusinessName\" : \"Nga Koepp\",\n      \"alias\" : \"5dvru4ly5s1hj50e90u7zm7rpklxweo8jdwkxbi5vzqxbh99tbwpv9jh0j8t2m03kbd8romd544e8qxy1wzxp6\",\n      \"embossCardName\" : \"Mrs. Randal Sanford\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-11-14T16:22:54.753Z\",\n      \"maskedPan\" : \"gkmuy5qwsdu613mzn44rpakwrb4geyx3tx2iw3b6ze\",\n      \"provider\" : \"4crw2n5xgu9ekxy0rfn0znlojfeb0us4ods1dz369zrehnnbd307q3ryn9k2h329dp22dwbd0vbdo3j0qfwyzhm2hdviurxennm1h6t0koq0gq6j9wkfsfsqrajx3o\",\n      \"cardId\" : 5701265292256911303,\n      \"embossBusinessName\" : \"Derrick Glover\",\n      \"alias\" : \"qfoiukyj9ymcy4y2ccjdj11vr4zeov7n4xanuyxko4bsgcz6xk61ou2jtdmbjn90kknrcy\",\n      \"embossCardName\" : \"Ms. Carole McGlynn\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-08T06:08:20.754Z\",\n      \"maskedPan\" : \"ckoac20b2voy3f3vrhxrox76om1c4hu6znedfu313msrkv22tmiloosebr06p03sibs743g8huf3m65fa56pkuq198v7ws1xpsvqo3o001mvfn0d04sjlfxymyxs8wte4i2x33e80m8xrj7ip3l4q8tvb76kmovi\",\n      \"provider\" : \"3vn1xvr1m71apaa0qyw27hgw7z8y2mbyasyveme0etc8i5gw8z14lhhnshbds3j3j4qxbse58o3l1yejhps0anbuhj5kwswoidyt5rewyhorhn30zxa8i8t1wr634kezj1ie7uwg2u78u60govdvvj47nu2e\",\n      \"cardId\" : 2871285560918252742,\n      \"embossBusinessName\" : \"Graciela Koss\",\n      \"alias\" : \"xb7rfua5b91oyfuiw37narrn\",\n      \"embossCardName\" : \"Gertrudis Gutmann\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"9sv1jv2rafroboj3iuc9mzybto5s3f4e5yyirwsglxn9b1ocwam9qaedtzqzqmtgygo5khvnnfi4leytae4hxa9re19gsnes9x8bp2v2sx57x4zuwgqh\",\n        \"additionalDataDe124\" : \"74bi0h3cv0410m4yjyll64qogxx2bp164hwdr3qylpicijhg0y0efz0jf7214dmf1xfznocaq2vomgz5gcxcviranlwz1m5i4pea9rhht9jw9j4ebsuw89nmy143bxq25daod4d3ysjan6mey5vmgd422wp3ut1by5ez2vh3ubfdr8j27glistvbix0\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-06-22T07:57:09.75447Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"ectrjdxncfnrrdkz4jn0p7kq9dtyxn5wefvpr\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-01T19:54:56.754Z\",\n      \"maskedPan\" : \"a6o9e64lojr3dnj33gxqs1mhr5rkd8ypny8oqd394ohem7org3tvk6sz3a53q0pfpc44vqb75fk9pox3v5a63yvbexhpgvmtv84j1ynp4ijyqfoatzib5gx\",\n      \"provider\" : \"40l67kyjd8qkdw3gfxrhdyy31hwjeiml9tuv11y026a37vaechaanapemlhodzhcmhrpr\",\n      \"cardId\" : 916999401268995474,\n      \"embossBusinessName\" : \"Sabina Botsford\",\n      \"alias\" : \"0aeoinh2pmpjgp1wx7ruc401w5gx3bi3nghokhvt1f6gbthjw4l6tmfrra328shr\",\n      \"embossCardName\" : \"Wilfred Hermann V\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-08-29T00:31:18.754Z\",\n      \"maskedPan\" : \"vr98fqc7aopz8msqfu9rkj3vamz2wz85n1we2u0g9i106zttmk085cn8hv06t3mtr35p6t21ubz3q1hc4d36xjwu4k261fqk8n4pb56q1ll9o71o1h7i90\",\n      \"provider\" : \"0wj8wl41uv83n1aj0dwnbjihekzdy6k49gf8pio2lte7nxtaq1zckxyecffgt0dsktol1lol33d2rdpgakv1wb3fywno7mpw3w\",\n      \"cardId\" : 7931808402116432905,\n      \"embossBusinessName\" : \"Dorotha White II\",\n      \"alias\" : \"1w15bwdgc75440adt4g47lzjaengok7062j6b5htxymlgq39xhmlo2404bwc1om7oyvh57kc2lu5ra8wies87ftwup\",\n      \"embossCardName\" : \"Elwanda Collier\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-06-01T16:08:02.755Z\",\n      \"maskedPan\" : \"7683b77e2101f34t1txvhovmo25ho188skkcddf2lbinnoc3nkuaco6czpnx4upg5p6dvm6jqlpzrizbt0rrp6ddzfepetng44b306mcdffk83cotoxdjmbc6iw47a9fv3g4c2bytl5yld4acp9ae2xtxb8aqqkyb8fdo970cyslnnram32hnc\",\n      \"provider\" : \"bc40vvp8n6x23bfdnwbohre188ont13kais4fuvf43xpwaa40r1i9xnqgdz2cq9bu8ydoh4e028y4qg88usosdcwof0aa64tikzsa0k8hv6dzzqtqcvxqjvdk4dexwpyvlxkyaa\",\n      \"cardId\" : 4715920325692956630,\n      \"embossBusinessName\" : \"Pat Bartoletti II\",\n      \"alias\" : \"vp27uw8fuxp2f8506jospfj1pm7ua1ayvd2i6ictv8i32ruzvj3qam1c0892h9n7od9tm\",\n      \"embossCardName\" : \"Tracey Keeling V\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"v2hodv8w2483skyoco2w2514knzj\",\n        \"additionalDataDe124\" : \"j3gp1eguz3hzpasf3amsfe87v7we9rt6sktiezedv9th6rs0xrozfnz6ml9akxgr4iuz\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-04-18T09:15:09.755398Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"u737e8re6wf0c0f9ci14rk5mtngnnokkcatqdqfmw9jymcopa2rnyfs0gsc8ibzvbo36m7g2luc6zb7pbvnq9h94s6kcue3pjmvwww7qlbnsjodmsqycgra5h3r9nu32tuvrhjvyzckkankow9kocoek5typ\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-06-20T14:14:03.755Z\",\n      \"maskedPan\" : \"xscdpqhw7uzb4ayjliujpzhcos64latrsprokyaobu64wyiac7anz0fwdi6vciewkj41hz9cicn4fqujqf26oodyi9y3v0hk4b38fezk3z7d8rhovfh14p\",\n      \"provider\" : \"5gews33kb6rqx763wgdzfvq0znbqn1mfkebsz8qy09fz4j02xeymw0cv5aez852nt0heldk0f4x8a825ll660y8oljcheskampgoyfe4nwqduuh0cdpeg3h22v\",\n      \"cardId\" : 6600022800621487483,\n      \"embossBusinessName\" : \"Enrique Kertzmann Jr.\",\n      \"alias\" : \"ez4r7qqy25leh958i3fzh7z06ydld44umq6gcy6pmdzsk2p50p6i5h3bmvm4jtgts48ij3mkpkfkyc6sfjc84mtcxur7uiozo9vsots3rchv0l6atn1xsz36isri74g49pj1op36nw\",\n      \"embossCardName\" : \"Sari Koch\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-01-23T13:18:51.755Z\",\n      \"maskedPan\" : \"zrlpsqkx2k65m0fys4as4ds6gw4gr1ibh7pbvmozj1kine963zcto1al89n5gcc65r2\",\n      \"provider\" : \"8gyftxcliugjtmq2ohyqwas6fjkuye76rk6n16dh4h0n1x51kqfcqao4qf0k68fwe3sb1jhpd04jijbnz4cf1gb1sly9lkkext1n56q2fmsp8ycl9fq1yjbfngec\",\n      \"cardId\" : 8694277972508839712,\n      \"embossBusinessName\" : \"Lashonda Jakubowski\",\n      \"alias\" : \"mclq71ls8i4v2upzijl6qz9j0xonrevsleu7gb7l5k5jajznz3n7cpypn2jkedoztv20hp9xkp730adifybyhxibmsx9ds1sm6r1fgjb0t208m9laddiqwryxnu0vq9mbqvvyrxo61pz2vek3st\",\n      \"embossCardName\" : \"Dana Sanford\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-11-06T05:57:13.756Z\",\n      \"maskedPan\" : \"977wq1fyzydwco679pe8chsdqw4vcxuk0x10lx84je4rxzro1z1mu6y6epgoalix77mpjrca5gxnd9cbpvaylh1vm2zw2d1f3asevy7xc575ld0dumytg9l2tyh47ydknz67ii11gj7vtrhvt9gakjhcfbjrijj6zc15c016drscd8ek3uc1oq\",\n      \"provider\" : \"kvak27xkhdcs1yujc0icos0n8r9jo29ch20qubisymc8nih0\",\n      \"cardId\" : 5392054869912936734,\n      \"embossBusinessName\" : \"Tyrone Goodwin\",\n      \"alias\" : \"ktt7ti0elbq1o8g7sor0yao4fbxeyxcdwuwzv757xkq9xfbh0le8po2p8bpclnwmxsx0m4llvol2zutxnixkktsosnz2c0dp3kj2ih0amem2cp7pohgznrs58zud44swh\",\n      \"embossCardName\" : \"Monroe Nienow\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-25T21:38:23.756Z\",\n      \"maskedPan\" : \"xu98s736vok5dvi277vzfh9s6dqa3y366oojqqkq8e0a6h1sb54mbhdkzrnsg9z1mfgv1a8jnxqyss4xj1jv64xn50fio4\",\n      \"provider\" : \"nhx02fsfqrjhz2sn6wthcp5b6zbewue1nyanlgb9psz9fz3z1u7x3hvel238ge5u5fa9qonjiu8qo7kr6h3n8qgox79tjchbo92scjm15ng9toc23pvnz9wwoqxpo8egfnlqce5cygl869yd7p1teos3vqnw7f78w7z94kbskx\",\n      \"cardId\" : 6961915127852434806,\n      \"embossBusinessName\" : \"Ivory McKenzie III\",\n      \"alias\" : \"tw1qbwwhaxtb3ufps9l9tttlajkbh4x6cbyxjdwu3rfby3dtic38lw10rvwt8qbjfub2cotv5a99yv8qe8zb83bwc2pgzdc2107gxwhdkx36svjpct4ypennnu9sxp3xwpu8brtqwoue4lw0wsup4t40l2\",\n      \"embossCardName\" : \"Clayton Welch\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 429510178787287643,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-02-15T18:51:10.756Z\",\n      \"maskedPan\" : \"1ovzilk18805gyzz68r91zpmmqdr7ryptxzhgs6h9v0bvz65p4m7flq3kt26h5lj4mft87u6h8c9o1bkm6kny62s40y0z2ugbnv6yywumpwcpy38fj2dkpqc\",\n      \"provider\" : \"ncc62zmhjwfix8bgwgkybxi3ekfzm9hm3oqzlpy6mdtbrmife0jwxbn01xh3e5n2b1rkm89onw8m50gbec5lvph8szui016d74ymqtwjg2s63c22rapoyigahd64rl80knwzx45m3d6s16zeobzp5rwkimqlbjfatr3xewovb292mz5cm0j4pfpsiwii\",\n      \"cardId\" : 7164237264074703667,\n      \"embossBusinessName\" : \"Rudy Bergnaum\",\n      \"alias\" : \"ien3oao5q3hntyfkdijcpujdew8ffnq9wq0y9g02zd7favdjqfwmoyrljz46t7zc4s2bj0xyqe9tp7uuemrshzbiiq2adkh5trrn4yldotojka69d5vncbzncd3ztakz8nj2xm26g2gt106400dywrcq31e2bot4\",\n      \"embossCardName\" : \"Miss Sung O'Reilly\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"q1eqkgso8xdrzsehu6mhr8l9ebf9bhmveni1i2f00bzhjrq7ysrgy0ol2o1xmw8abapl4olsijb5m6adkp4yllxr2htrppvpsqdaohlkla707nqgyx1kjbi6imd8c2kqmzs9h64smj99i41825e5ko\",\n        \"additionalDataDe124\" : \"phixc4euliukniqcp0g6u1wtcmrvjyab5t742ybrq33s3cguterlpvvitsuqanjrxuhgwktskbpb4gl99owsqn5ttz1efm4ncerj1jcaqax96dge3ipbxaymmrrrf51\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-07-24T06:40:09.756839Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"k1tjk9cq8orejwoi4qmxni7sq5tdso6tt67g91kg32vsaz4ozvsne9pcv992ihkna7t8f9yss57azidct6n6heq4tlf6k76u5pz73bgc6e5g090el3x277evm81vvg3sd\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-12-01T15:36:53.756Z\",\n      \"maskedPan\" : \"hat1p5vj0k81kbr0h\",\n      \"provider\" : \"g9yuxqm19bw61q330fl\",\n      \"cardId\" : 7206911237617443042,\n      \"embossBusinessName\" : \"Emmitt Klein\",\n      \"alias\" : \"h4wq6qassm\",\n      \"embossCardName\" : \"Mitch Block\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 7019506549946517432,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-20T07:05:10.757Z\",\n      \"maskedPan\" : \"clhu39r73e7wmmwmb9imca02iggnd7dpnf0b2gfbb8puzqqtwkwvwwwny9oy1cuiz5pan3nts8433syo4qq8s9fgh9qaz4qbg86mgf9yzaqaroodmjlcx14hg4t1ns72d7587zkk380wr1x2a1h4zv9dy76u8ocpmiivtdwhp41gb9jlduaknh6a81p\",\n      \"provider\" : \"2zl42d9de8v1wjs8dbxp8o521dbnzgc0xt960pm96e5z02m35qx56a6rauy67zakw09xeh0oqze48im0urf1tleqi012pq9rt9iqolfg6nrgew8qpxk867dcjz6r7jr5q0st5t78yxencagexub\",\n      \"cardId\" : 7003042339692201425,\n      \"embossBusinessName\" : \"Jamey Bogan\",\n      \"alias\" : \"2jot2v9nad8wz8d5ht7ra4gnorg3s3qfai5qn2a8t5wddu8l9cfctrz65zl7ydapjdrab206ie2mo2u6ximup9lfbz62os56bpwjlbb\",\n      \"embossCardName\" : \"Rachal VonRueden\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-29T18:54:38.757Z\",\n      \"maskedPan\" : \"sv57r947vdoormtf6zgje6sznlrr7djcy45a0x6czm5wwy6w2dg\",\n      \"provider\" : \"tgo52oeejy0ucoq7cp6k4inwifll5a0lekfofb6aoxfkmcavjfwu5ou6l2wr4b09o49cgyo2imy0ewqpunz21g19je8evvp0ra1yfpli250ulsl7azxig6lr565paireblzyvfhi76hzze02yefaayx2b678yr4n89vil5zu3yheu4y6h\",\n      \"cardId\" : 73834117186502371,\n      \"embossBusinessName\" : \"Norberto Marvin\",\n      \"alias\" : \"q5hmvidx3rvg7ko60b74k726wqrb7hpr1635b07ma055bjv0tgpfr865phlg25i65cpqg5mk768qii4ktshw160nz86v2rrxavcm4luv\",\n      \"embossCardName\" : \"Cathleen Powlowski II\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"24fh1906z8l6ndl0xmrmyet9alpu6k0dhn1o6e34li72vll1sgumxqkiemy8a4qh9puk033spvdipxvajjqd2pm3spxnz2djsqlvq80f1dt5pavu30pl2wj12utnibwzduqph4llr22kyohaa160xe28a5i1m6u9k5es8j\",\n        \"additionalDataDe124\" : \"fucdmqj1h7f410kr4glfskssy\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-04-29T07:36:09.757876Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"7663ylr2d2f78dcocmcen28i2cqezb1bkj7tu69hzsjnja04fxvphvggwkg172zxbxg62v8g6\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-09T02:40:36.758Z\",\n      \"maskedPan\" : \"7hclhn79orkdmfi1b7bd6bjn41zgju7uqz063sk7c0n32d6euvgsishj4c0zrutr3zbufdoauhvkbcrwew24ur1idknrxlywmhljlcoaqles6c1txpt9bpao2xkdbw19em2bpbzvu8xg5e3jgmhegmd55rn4zmrmhc2e0a2tovdwmet3qf\",\n      \"provider\" : \"9e2oz0ym65e7oqzibr34mv83vma2llzm39c4weosizs6v8erasg374teqkk94y94td4\",\n      \"cardId\" : 2900074504103668689,\n      \"embossBusinessName\" : \"Mariana Hyatt\",\n      \"alias\" : \"ooc8hay372o4v5vws88998ddlxyxzyns2uaghanzdf3jrp2o9b1swq5eo7yo147ybajyo6p66o5ik2s0qe6ndhbvw0v7q4bdhqm3dy8rut7gmrnsnrwbhmcxtma\",\n      \"embossCardName\" : \"Devin Stokes\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"022f4rrjqp72s7odif5iqx47yj41cqehob8vttg46yby493z2govu0fcnzx3r0ladllo4e0l02ao34lf\",\n        \"additionalDataDe124\" : \"u12zlpz286mvkjh1ut18tkbl7uvlzw8ggsu4wuikqmnm90e9pw32o5bd9l79ianoh4w81v3gawmzntnr9m51w4ripg3n7bmyg1uc91b2yp4073idwkqqksn6qwr3h7qolcinftryptkx4ycmn5e5536rksv3xuzo0xovr26wjf2ngisuzuda6b983co\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-05-06T07:01:09.758277Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"flblc10b12vdoj3kjhti3qx3rxlftwqhz6gzoztq2p2tfohuouolu2zud4i60u\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-02-15T17:29:13.758Z\",\n      \"maskedPan\" : \"robj8jzclqkdifr3vuhx7gvx3bpdtk6y1263ic9965c0jevpmoaqpkm415nc3uf65d2m6kiom2b7v2nb8\",\n      \"provider\" : \"uyoa52ldxk1j9qkexlhw7f4p0\",\n      \"cardId\" : 5040268589354962972,\n      \"embossBusinessName\" : \"Taren Harvey\",\n      \"alias\" : \"jj85bdhrc464ttw25of00vhe8vffpx3lp28kcw5s3i2zok5xmkk6n2ef5a9bhf89rwnieg8t30ks6k7ypy0u7axn4bw22d8h4i3a3asojasir4mqihp2ydfh2zbwwljpxzxixloz04bqwx27gx1rslrrm1jezct1934zmwc05fhvnzcvv68one4j9uko7ivl\",\n      \"embossCardName\" : \"Genia Klocko\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-11-30T11:02:52.758Z\",\n      \"maskedPan\" : \"0g3jgpmqkw54u9wp9cqy0p9lr1jb7gmhs48v8vjczmh4lkgdm6p5acexmuezb99ivl6qhlubutxgahb5862iwiznzdkco7pe1hrtkvid5x20rjm240z75u5zlvhsxjm5ye3ncvp7hq74qvjrowviyxl8iccevfhivb6c369h45ldrxjuiysnerejl11ep3vvb3d0in3\",\n      \"provider\" : \"mu6o0u8m8kcs5xs1p842kokoqdr0z8iwdeujmuv7l4ufc7tngsm81tnd9\",\n      \"cardId\" : 3087119321050722844,\n      \"embossBusinessName\" : \"Wilber Fahey MD\",\n      \"alias\" : \"uqbi6zsv56ngqitk2fvih9xv\",\n      \"embossCardName\" : \"Brent Cummerata\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6175085614102320369,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-04-28T01:49:04.759Z\",\n      \"maskedPan\" : \"f3mqc8kq4g5iqr42vc2o2oxjmasgipc2w5bzp0hxlalji5wfkb120yrs9mkqxxrn1nuehdeabh3nit7xnho8ze7jgghvzs0jv4twty67f3v4bt3wsj1fcds3f89g738hl1\",\n      \"provider\" : \"h6v1l60qa2140aipxckh25rhb977jsxoisnny3ro5byddp00j\",\n      \"cardId\" : 7532523642654943544,\n      \"embossBusinessName\" : \"Athena Gaylord\",\n      \"alias\" : \"sh9zikvztrm05870m1m2vhgxk63dqe07jlxys1l3ccxh1314m7od8s2i2jcqlal30kbdln4kd8twfxmtpjw9u5r04pvnmcryelhpanlmcd98k4\",\n      \"embossCardName\" : \"Leena Sawayn\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-11-07T01:17:15.759Z\",\n      \"maskedPan\" : \"04f8r4orev02sp26bgrm28c4v7w9qs8aen4n6u9k12qnv4bajbouh4op1e1s7\",\n      \"provider\" : \"e5jyhlggzjl52f9gg5cyq6czatz3xrw5ccrek9334rjtb2s13jzkysqpfpy55o1pxuh6hx2oeb0muawkjytkl7b1jzaris5dxrtbc1p18sjslay60n0mh9e8\",\n      \"cardId\" : 9137567111135416724,\n      \"embossBusinessName\" : \"Mrs. Leone Lang\",\n      \"alias\" : \"mg6eliuv3sxn9f3uvdwf7f2ia2wlvfhwu5xiyprk4qrokhvq6dx3pe8fbms7e9zl7jzjuei62exvfg5xeecy4hc9zaewbfyvtt3l6\",\n      \"embossCardName\" : \"Karolyn Bernhard\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-03-03T00:01:35.759Z\",\n      \"maskedPan\" : \"37k8jqg2a8uxvrvzug9k3havvh9upqrj2pnvimneg7ghcmdpn0xk7pv8qaqgylqfvve61mnmoqi76b60k4bq16jo00yyl7u7hznljt9zmktl0j64ft2js08rbkkqfz2d3yckwfp8a3f1ejceqb5ltvos5yc679bougczpwrmr1qdh8tu7amxvvccndvc\",\n      \"provider\" : \"gbf32qx5od68vhhnor56l734z4thtnfdlt1qji3oks9og1yirybw2ea5i3h3\",\n      \"cardId\" : 1527402339041694900,\n      \"embossBusinessName\" : \"Una Senger\",\n      \"alias\" : \"75loysyb7lo57l47z6j1bvakk2pq35g\",\n      \"embossCardName\" : \"Loren Hand\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-22T02:18:31.759Z\",\n      \"maskedPan\" : \"ydr4\",\n      \"provider\" : \"kmzoo3bfh2npez35x5rg6hvvodfq0zp5319yuhfqt9gn5cbkvl3b3mb3ymth0zwhlagnv9oht3wpnphrfpnbw3mt6bwiap68rtu7a3af2cgyx09igsbgeov45hhxxzoepqqa7sg90kao\",\n      \"cardId\" : 9069219472194783653,\n      \"embossBusinessName\" : \"Wava Hartmann\",\n      \"alias\" : \"w0vpg2cs4duwt6d94xsbm1n25vbct05zdoa29wsgbfl865k36oarfprwukntm7kq9l4ymixg33ln3a1rxkui9r64dxxj1ikw4w07ed8xifb\",\n      \"embossCardName\" : \"Russell Brown DDS\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"0hc2vu\",\n        \"additionalDataDe124\" : \"b983db1g387v08gcc1b5w2p3l87ftps\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-24T05:55:09.760087Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"s5mgcdyrzmx0w3kph6zi1p8q0l5hzzi9vmbdqeec33hik97d546vblokjsi4iycq2amgrjcyf1w3nthcok107lcd1m9wn41f\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-28T08:02:31.76Z\",\n      \"maskedPan\" : \"2p9qrbzywoppisap5rflaw07425v7jff3ypzb37gvz1q5sa08wblqmvt0zalc8u0fw2vx4ub1qkusclkmzn105nyhqwc2ry42tygv\",\n      \"provider\" : \"j3dr88xhxtkgrmn2jvds9qe81ufldf50t1t6yuuzflblzxw9poogyh6ycc0m39i2ci8lfze6b9x3i7ec3e473wj1jo4avchad7pcmpp9yumyz4r6nbkfc7tc6bgxn0m3bcwi6mv170fe4twbbdoxsiwn9omnx581\",\n      \"cardId\" : 1381999803026236645,\n      \"embossBusinessName\" : \"Cassi Bradtke\",\n      \"alias\" : \"fkvuw5iafb5ok2ymt3cgn004ub31go\",\n      \"embossCardName\" : \"Delorse Feeney\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-08-18T23:31:16.76Z\",\n      \"maskedPan\" : \"1b6pezu7nvnrkotfnw7lg9jckdaj4a4aui5x4nel0sii8on7apeewecj3ej85nurhilo7u0bpxqae8636qv0j36x780nybikvp5eezqti1lau4ghawzwgmcccr95y8s0fu5h3kn75xhy88bwfielltcq77lavngu1y7q5zjhk7u8\",\n      \"provider\" : \"kz7nh2kkh2jxl2267z21ab7mwvdihf85654x839tgmhckcw\",\n      \"cardId\" : 544072250956025799,\n      \"embossBusinessName\" : \"Dr. Iona Wisoky\",\n      \"alias\" : \"40ieu6q7snft9j1r97yjcgfw89o3tvjam0pw94s5d9s5cjt7rnbk2ahis5xlcp0t08a17fo3ekytczhhiiavel1jb8ss61ko9662uc50gtvl1sq63\",\n      \"embossCardName\" : \"Asa Hermann\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-06-23T05:02:30.76Z\",\n      \"maskedPan\" : \"4cqu58igcfcr8cp41cgrjxu7cncy9q1ok93mbbn8h59q60ec61hdvj6ffzmqg7wr72dv5d61ygkkcblqbrirbleibew7map10392up46z0zhiusylw35tbabhood9yjfwc7wh7csjpglooz7g6bbvqzf8tscnjvhal\",\n      \"provider\" : \"cd7j1ejv3m8y87a7iqc29244nt2ge66eq976d19ahk9164s45libl\",\n      \"cardId\" : 1704803139114501544,\n      \"embossBusinessName\" : \"Jules Lindgren\",\n      \"alias\" : \"er6zv0s88cxaowtcplaps83xzq28bqiyhbcf50b2hx6pwossam3n5hviabrgapn0lx9dg6pfv7obijwo1sd5z5ll0bf5kkn4sc5wsukxaldod0wmy3pjdy9\",\n      \"embossCardName\" : \"Elnora Stark DDS\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6990361633824853093,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-01-21T12:37:34.761Z\",\n      \"maskedPan\" : \"p9peg1dijk09qlh0sb4b3t3pa8f7fcpianveqx73f37s9bsbss5s9f0y28tor9u15yeu46w1ge5fg2skwazz\",\n      \"provider\" : \"9kl70sq0jnjq702jt7v1yq51e7xolfu0g36j5urb9v0n0xv5l07ttiqltsgrfs5pdh5cu5n13ufxuzor9vbo5mpqr3xqt5d06l7if6dmxpic0skhr5n1ncoweenwku3qpv3o7n\",\n      \"cardId\" : 6899151492113864838,\n      \"embossBusinessName\" : \"Gordon DuBuque PhD\",\n      \"alias\" : \"dhl1t65ip7jw0nz2us4llez5gllnha28rt5w0retvvx3yy8x74snwy1h3zmzzj5upq9an2iuukqed6xkyvkvcv0s3pti0mi9qszzqp9se7k9wmb129dfbdoa3vebn4t1y3sshckwypl5xux4cev1fcmx501i6obxrrj\",\n      \"embossCardName\" : \"Joette Runte\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-02T13:06:11.761Z\",\n      \"maskedPan\" : \"lyp4xb317kbyplup1zcxzw4y4h1yv0n2usxrc6pwvgbla93l735daxb1lwikcabaiix6sb3gmfb\",\n      \"provider\" : \"p0fncevau1ikij5me4r8hmpy0gul4j1uqufcvarr7q8peaz8mb2v8ygiydilan4we9qd4fm70kzjsabvwnansd3n3tcu5h3ha4wdu4rvxgaepw6zahv4qeqna0lahf3t0q58mulr7c9kl88rixaal51szf\",\n      \"cardId\" : 1221058754902954756,\n      \"embossBusinessName\" : \"Johnny Osinski\",\n      \"alias\" : \"poov3ca7qxf9gibt3qj1kmxu8q9urbykrlgzlj2agwj4jh6g2d6dl4993ptoprugnn3nmsv55ogd2v6n9zmsebji8cv9qhkrqyp96l3kyitolujr4z09xqbzyucjwhtszpfbcl02yhqk45lbfujqw0ha1ozssrt4u5pj1c8va34ra4w774slg\",\n      \"embossCardName\" : \"Patrick Lang\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58be205e-c746-4c8d-ae3b-bc8727adf2e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.763192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions",
          "schema" : {
            "items" : {
              "properties" : {
                "dateRangeTo" : {
                  "description" : "milisecond timestamp of date range to value.",
                  "example" : 1547744156603,
                  "type" : "integer"
                },
                "total" : {
                  "description" : "The total number of card transactions in the list.",
                  "example" : 1,
                  "type" : "integer"
                },
                "transactions" : {
                  "items" : {
                    "properties" : {
                      "amountAfterCharges" : {
                        "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "amountBeforeCharges" : {
                        "description" : "Amount of the transaction before the fees and taxes were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "balance" : {
                        "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                        "example" : 8500,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "batchItemDetails" : {
                        "description" : "Details of the batch run if this transaction was part of a batch.",
                        "properties" : {
                          "batchItemPublicUuid" : {
                            "description" : "The UUID for this item in the batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "batchName" : {
                            "description" : "The optional name given to the batch at creation time.",
                            "example" : "Payroll 2022-11",
                            "type" : "string"
                          },
                          "batchPublicUuid" : {
                            "description" : "The UUID for this batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "jobNumber" : {
                            "description" : "The optional job number given to the batch to link it to your own system.",
                            "example" : "2018-01-PR",
                            "type" : "string"
                          }
                        },
                        "title" : "batchItemDetails",
                        "type" : "object"
                      },
                      "card" : {
                        "description" : "Details of the card used (if applicable)",
                        "properties" : {
                          "alias" : {
                            "type" : "string"
                          },
                          "cardId" : {
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "embossBusinessName" : {
                            "type" : "string"
                          },
                          "embossCardName" : {
                            "type" : "string"
                          },
                          "expiryDate" : {
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "maskedPan" : {
                            "type" : "string"
                          },
                          "provider" : {
                            "type" : "string"
                          }
                        },
                        "title" : "relatedCard",
                        "type" : "object"
                      },
                      "currency" : {
                        "description" : "The currency.",
                        "properties" : {
                          "code" : {
                            "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                            "enum" : [ "EUR", "GBP" ],
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "The name of the currency",
                            "example" : "Euro",
                            "type" : "string"
                          }
                        },
                        "title" : "currency",
                        "type" : "object"
                      },
                      "date" : {
                        "description" : "Date of the transaction",
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "dateAcknowledged" : {
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "directDebitDetails" : {
                        "description" : "Details of the direct debit (if applicable)",
                        "properties" : {
                          "directDebitReference" : {
                            "description" : "The direct debit reference.",
                            "example" : "VODA-ABC453-1",
                            "type" : "string"
                          },
                          "directDebitUuid" : {
                            "description" : "The UUID for the direct debit payment",
                            "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                            "type" : "string"
                          },
                          "mandateReference" : {
                            "description" : "the reference of the mandate",
                            "example" : "CRZ-102190123",
                            "type" : "string"
                          },
                          "mandateUUid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                            "type" : "string"
                          },
                          "mandateUuid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                            "type" : "string"
                          },
                          "originatorAlias" : {
                            "description" : "The Alias of the party who sets up the direct debit.",
                            "example" : "Three",
                            "type" : "string"
                          },
                          "originatorLogoUrlLarge" : {
                            "description" : "URL pointing to a large version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorLogoUrlSmall" : {
                            "description" : "URL pointing to a small version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorName" : {
                            "description" : "The creator of the party who sets up the direct debit.",
                            "example" : "Vodafone PLC",
                            "type" : "string"
                          },
                          "originatorReference" : {
                            "description" : "Set by party who sets up the direct debit.",
                            "example" : "VODA-123456",
                            "type" : "string"
                          }
                        },
                        "title" : "directDebitDetails",
                        "type" : "object"
                      },
                      "eventUuid" : {
                        "description" : "An internal Fire reference for the transaction (UUID)",
                        "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                        "type" : "string"
                      },
                      "feeAmount" : {
                        "description" : "The amount of the fee, if any.",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "fxTradeDetails" : {
                        "description" : "Details of the FX trade (if applicable)",
                        "properties" : {
                          "buyAmount" : {
                            "description" : "amount of buyCurrency being bought",
                            "example" : 359,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "buyCurrency" : {
                            "description" : "currency which is being bought",
                            "example" : "GBP",
                            "type" : "string"
                          },
                          "fixedSide" : {
                            "description" : "type of trade - BUY or SELL",
                            "example" : "SELL",
                            "type" : "string"
                          },
                          "provider" : {
                            "description" : "The FX provider used to make the trade.",
                            "example" : "TCC",
                            "type" : "string"
                          },
                          "rate4d" : {
                            "description" : "exchange rate",
                            "example" : 7180,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellAmount" : {
                            "description" : "amount of sellCurrency being sold",
                            "example" : 500,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellCurrency" : {
                            "description" : "currency which is being sold",
                            "example" : "EUR",
                            "type" : "string"
                          }
                        },
                        "title" : "fxTrade",
                        "type" : "object"
                      },
                      "ican" : {
                        "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                        "example" : 1951,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "myRef" : {
                        "description" : "The comment/reference on the transaction",
                        "example" : "Transfer to main account",
                        "type" : "string"
                      },
                      "paymentRequestPublicCode" : {
                        "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                        "example" : "1abcdefg",
                        "type" : "string"
                      },
                      "proprietarySchemeDetails" : {
                        "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                        "items" : {
                          "properties" : {
                            "data" : {
                              "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                              "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                              "type" : "string"
                            },
                            "type" : {
                              "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                              "example" : "SCT",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "title" : "proprietarySchemeDetails",
                        "type" : "array"
                      },
                      "refId" : {
                        "description" : "The id of the transaction.",
                        "example" : 26774,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "relatedParty" : {
                        "description" : "Details of the related third party involved in the transaction.",
                        "oneOf" : [ {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "identifier for the fire.com account (assigned by fire.com)",
                                  "example" : 42,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "FIRE_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyFireAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "EXTERNAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyExternalAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "The account number of the Withdrawl account in reference",
                                  "example" : "00000000",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "The Alias name of the Withdrawl account in reference",
                                  "example" : "Smyth and Co.",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "IE76CPAY99119900000000",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "The ID number of the Withdrawl account in reference",
                                  "example" : 123,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                  "example" : "991199",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyPayee",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "cardMerchant" : {
                              "properties" : {
                                "acquirerIdDe32" : {
                                  "example" : 6011329,
                                  "type" : "string"
                                },
                                "additionalAmtDe54" : {
                                  "type" : "string"
                                },
                                "additionalDataDe124" : {
                                  "type" : "string"
                                },
                                "additionalDataDe48" : {
                                  "example" : "010X610500000",
                                  "type" : "string"
                                },
                                "authCodeDe38" : {
                                  "example" : "177449",
                                  "type" : "string"
                                },
                                "authorisedByGps" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "avsResult" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "billAmt" : {
                                  "example" : -1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "billCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "expiryDate" : {
                                  "type" : "string"
                                },
                                "mccCode" : {
                                  "example" : "5521",
                                  "type" : "string"
                                },
                                "merchIdDe42" : {
                                  "example" : 13152429,
                                  "type" : "string"
                                },
                                "merchNameDe43" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "mtId" : {
                                  "example" : "0100",
                                  "type" : "string"
                                },
                                "posDataDe22" : {
                                  "example" : "051",
                                  "type" : "string"
                                },
                                "posDataDe61" : {
                                  "example" : 1000030037299999,
                                  "type" : "string"
                                },
                                "posTermnlDe41" : {
                                  "example" : "80266721",
                                  "type" : "string"
                                },
                                "procCode" : {
                                  "example" : "000000",
                                  "type" : "string"
                                },
                                "recordDataDe120" : {
                                  "type" : "string"
                                },
                                "respCodeDe39" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "retRefNoDe37" : {
                                  "example" : 10900006720,
                                  "type" : "string"
                                },
                                "statusCode" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "token" : {
                                  "example" : "976307363",
                                  "type" : "string"
                                },
                                "txnAmt4d" : {
                                  "example" : 1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "txnCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "txnCtry" : {
                                  "example" : "IRL",
                                  "type" : "string"
                                },
                                "txnDesc" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "txnStatCode" : {
                                  "example" : "A",
                                  "type" : "string"
                                },
                                "txnType" : {
                                  "example" : "A",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyCardPayment",
                          "type" : "object"
                        } ],
                        "title" : "relatedParty"
                      },
                      "taxAmount" : {
                        "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "txnId" : {
                        "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                        "example" : 30157,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "type" : {
                        "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                        "example" : "WITHDRAWAL",
                        "type" : "string"
                      },
                      "yourRef" : {
                        "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                        "example" : "From John Smith",
                        "type" : "string"
                      }
                    },
                    "title" : "transaction",
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "title" : "cardTransactionsv1",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "c80822bc-63d5-47d4-a5f0-897e694d4767",
    "name" : "Block a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/7985670319361683419/block",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c80822bc-63d5-47d4-a5f0-897e694d4767",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.751866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "blockCard"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "5c0b4f69-fa07-492e-a43f-d1f8e1c2172e",
    "name" : "Create a new debit card.",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n  \"maskedPan\" : \"537455******1111\",\n  \"cardId\" : 51,\n  \"status\" : \"CREATED_ACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c0b4f69-fa07-492e-a43f-d1f8e1c2172e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.751836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createNewCard",
          "schema" : {
            "properties" : {
              "cardId" : {
                "example" : 51,
                "format" : "int64",
                "type" : "integer"
              },
              "expiryDate" : {
                "example" : "2019-01-31T00:00:00.000Z",
                "format" : "date-time",
                "type" : "string"
              },
              "maskedPan" : {
                "example" : "537455******1111",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "CREATED_ACTIVE", "CREATED_INACTIVE" ],
                "example" : "CREATED_ACTIVE",
                "type" : "string"
              }
            },
            "title" : "newCardResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "f00e7b9d-d501-460d-a9c5-20127febc56d",
    "name" : "View List of Cards. - 403",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f00e7b9d-d501-460d-a9c5-20127febc56d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.751752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "10ce2a5d-ae2d-4ad8-9aaf-19f4149aba9a",
    "name" : "View List of Cards. - 401",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "10ce2a5d-ae2d-4ad8-9aaf-19f4149aba9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.751737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "73f4c2f8-2c32-404d-a323-3c5af6af3a36",
    "name" : "View List of Cards. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cards\" : [ {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73f4c2f8-2c32-404d-a323-3c5af6af3a36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.751705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards",
          "schema" : {
            "properties" : {
              "cards" : {
                "items" : {
                  "properties" : {
                    "blocked" : {
                      "description" : "Whether the card is blocked or not",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "cardId" : {
                      "description" : "card id assigned by fire.com",
                      "example" : 51,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "dateCreated" : {
                      "description" : "The date-time the card was created",
                      "example" : "2017-01-19T16:38:15.803Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "emailAddress" : {
                      "description" : "card user email address",
                      "example" : "user@example.com",
                      "type" : "string"
                    },
                    "eurIcan" : {
                      "description" : "identifier for the eur fire.com account (assigned by fire.com)",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "expiryDate" : {
                      "description" : "card expiry date",
                      "example" : "2019-01-31T00:00:00.000Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "firstName" : {
                      "description" : "card user first name",
                      "example" : "John",
                      "type" : "string"
                    },
                    "gbpIcan" : {
                      "description" : "identifier for the gbp fire.com account (assigned by fire.com)",
                      "example" : 2152,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastName" : {
                      "description" : "card user last name",
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "maskedPan" : {
                      "description" : "card number (masked)",
                      "example" : "537455******1111",
                      "type" : "string"
                    },
                    "provider" : {
                      "description" : "card provider",
                      "enum" : [ "MASTERCARD" ],
                      "example" : "MASTERCARD",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "card status",
                      "enum" : [ "LIVE", "CREATED_ACTIVE", "CREATED_INACTIVE", "DEACTIVATED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    },
                    "statusReason" : {
                      "description" : "reason for card status",
                      "enum" : [ "LOST_CARD", "STOLEN_CARD", "CARD_DESTROYED" ],
                      "example" : "LOST_CARD",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "card user id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "card",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cards",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "e37eb311-de7e-4981-8a47-5839db6fe603",
    "name" : "Remove a Payment from the Batch (Internal Transfer) - 200",
    "request" : {
      "urlPath" : "/v1/batches/d0128ece-7c9a-3bb3-8737-b5785481af8e/internaltransfers/7dbecdc9-aded-373d-bf2c-21b2cea9980c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e37eb311-de7e-4981-8a47-5839db6fe603",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.75134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteInternalTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "aeeddb8f-1412-4b3c-8347-3cb62d975b77",
    "name" : "Add an internal transfer payment to the batch",
    "request" : {
      "urlPath" : "/v1/batches/869bab98-ae2c-39b1-a83e-50f6d784cc14/internaltransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeeddb8f-1412-4b3c-8347-3cb62d975b77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.751282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addInternalTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "5730f0c3-3545-42ed-a604-81b998b012be",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/fddaeb79-b456-3a60-8ceb-04bf07881390/internaltransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5730f0c3-3545-42ed-a604-81b998b012be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.751204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchInternalTrasnfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "81592a88-a601-49b5-a880-c186516ac491",
    "name" : "Remove a Payment from the Batch (Bank Transfers) - 200",
    "request" : {
      "urlPath" : "/v1/batches/ce8f0f4c-9831-391c-8406-0434e50c1a70/banktransfers/def88f42-6e5c-31b8-a2bd-41af8a32ae24",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "81592a88-a601-49b5-a880-c186516ac491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.750818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteBankTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "f9923d26-3eee-4b6f-a7da-affe7527ae14",
    "name" : "Add a bank transfer payment to the batch.",
    "request" : {
      "urlPath" : "/v1/batches/9ba5fc0c-5070-32cb-879f-014ae2b4ca61/banktransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9923d26-3eee-4b6f-a7da-affe7527ae14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.75076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addBankTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "a1118c42-f715-48f1-926a-76d9f1247d37",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/56b7e75e-78ea-3a05-aa1b-141092eb0ac1/banktransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1118c42-f715-48f1-926a-76d9f1247d37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.750685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchBankTransfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "8e0a8d58-520d-4de4-a0e8-e7af2e40d3d5",
    "name" : "List Approvers for a Batch",
    "request" : {
      "urlPath" : "/v1/batches/96782f21-d81e-342d-9a5a-53fb382279e0/approvals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approvals\" : [ {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e0a8d58-520d-4de4-a0e8-e7af2e40d3d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.750322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofApproversForBatch",
          "schema" : {
            "properties" : {
              "approvals" : {
                "items" : {
                  "properties" : {
                    "emailAddress" : {
                      "description" : "User email address",
                      "example" : "jane.doe@example.com",
                      "type" : "string"
                    },
                    "firstName" : {
                      "example" : "Jane",
                      "type" : "string"
                    },
                    "lastName" : {
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mobileNumber" : {
                      "example" : 353871234567,
                      "type" : "string"
                    },
                    "status" : {
                      "example" : "PENDING_APPROVAL",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "User id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "batchApprovers",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "91f220f2-8678-4c59-b137-1cec85145266",
    "name" : "Submit a batch for approval - 204",
    "request" : {
      "urlPath" : "/v1/batches/22059864-1be9-370c-b1af-df6678df91a7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "91f220f2-8678-4c59-b137-1cec85145266",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.750059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submitBatch"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "62260eab-34ab-4a4e-b920-4f107a13b19b",
    "name" : "Get details of a single Batch",
    "request" : {
      "urlPath" : "/v1/batches/cda9c3c2-9cc2-3d9e-bc2c-f5686d1e8458",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchName\" : \"January 2018 Payroll\",\n  \"valueOfItemsSubmitted\" : 10000,\n  \"numberOfItemsFailed\" : 0,\n  \"numberOfItemsSucceeded\" : 1,\n  \"type\" : \"BANK_TRANSFER\",\n  \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n  \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n  \"numberOfItemsSubmitted\" : 1,\n  \"callbackUrl\" : \"https://my.webserver.com/cb/payroll\",\n  \"currency\" : \"EUR\",\n  \"sourceName\" : \"Payment API\",\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n  \"jobNumber\" : \"2018-01-PR\",\n  \"valueOfItemsSucceeded\" : 10000,\n  \"status\" : \"COMPLETE\",\n  \"valueOfItemsFailed\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62260eab-34ab-4a4e-b920-4f107a13b19b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.75001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDetailsSingleBatch",
          "schema" : {
            "properties" : {
              "batchName" : {
                "description" : "An optional name you give to the batch at creation time",
                "example" : "January 2018 Payroll",
                "type" : "string"
              },
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              },
              "callbackUrl" : {
                "description" : "An optional POST URL that all events for this batch will be sent to.",
                "example" : "https://my.webserver.com/cb/payroll",
                "type" : "string"
              },
              "currency" : {
                "description" : "All payments in the batch must be the same currency - either EUR or GBP",
                "example" : "EUR",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "jobNumber" : {
                "description" : "An optional job number you can give to the batch to help link it to your own system.",
                "example" : "2018-01-PR",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "numberOfItemsFailed" : {
                "description" : "Once processed, a count of the number of items that didn’t process successfully.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSubmitted" : {
                "description" : "A count of the number of items in the batch",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSucceeded" : {
                "description" : "Once processed, a count of the number of items that processed successfully.",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "sourceName" : {
                "description" : "A string describing where the batch originated - for instance the name of the API token that was used, or showing that the batch was automatically created by fire.com (in the case of a new payee batch).",
                "example" : "Payment API",
                "type" : "string"
              },
              "status" : {
                "description" : "status of the batch object",
                "enum" : [ "PENDING_APPROVAL", "REJECTED", "COMPLETE", "OPEN", "CANCELLED", "PENDING_PARENT_BATCH_APPROVAL", "READY_FOR_PROCESSING", "PROCESSING" ],
                "example" : "COMPLETE",
                "type" : "string"
              },
              "type" : {
                "description" : "The type of the batch - can be one of the listed 3",
                "enum" : [ "INTERNAL_TRANSFER", "BANK_TRANSFER", "NEW_PAYEE" ],
                "type" : "string"
              },
              "valueOfItemsFailed" : {
                "description" : "Once processed, a sum of the value of items that didn’t process successfully. Specified in pence or cent.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSubmitted" : {
                "description" : "A sum of the value of items in the batch. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSucceeded" : {
                "description" : "Once processed, a sum of the value of items that processed successfully. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batch",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "a1a19b06-6a65-431a-99a2-8d701410a843",
    "name" : "Cancel a batch - 200",
    "request" : {
      "urlPath" : "/v1/batches/131663e6-bd4d-32e1-8a7d-c048def50588",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a1a19b06-6a65-431a-99a2-8d701410a843",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.74971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelBatchPayment"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "cafb3d9a-98e0-44b9-858a-3eaece908aa3",
    "name" : "Create a new batch of payments",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cafb3d9a-98e0-44b9-858a-3eaece908aa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.749633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createBatchPayment",
          "schema" : {
            "properties" : {
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              }
            },
            "title" : "newBatchResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "9ddba9e4-a1e9-4f09-b1fc-581c2d259da8",
    "name" : "List batches",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ddba9e4-a1e9-4f09-b1fc-581c2d259da8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.749572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBatches",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "d647cb17-7f03-469d-881a-0883367e38ed",
    "name" : "Get list of ASPSPs / Banks",
    "request" : {
      "urlPath" : "/v1/aspsps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 10,\n  \"aspsps\" : [ {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d647cb17-7f03-469d-881a-0883367e38ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.749201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListOfAspsps",
          "schema" : {
            "properties" : {
              "aspsps" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the ASPSP / bank.",
                      "example" : "Demo Bank",
                      "type" : "string"
                    },
                    "aspspUuid" : {
                      "description" : "The UUID associated with the ASPSP / bank.",
                      "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                      "type" : "string"
                    },
                    "country" : {
                      "properties" : {
                        "code" : {
                          "description" : "The 2-letter code for the country - e.g. `IE`, `GP`...",
                          "example" : "GB",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the country",
                          "example" : "United Kingdom",
                          "type" : "string"
                        }
                      },
                      "title" : "country",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the ASPSP / bank was created.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The date the ASPSP / bank was last updated.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "logoUrl" : {
                      "description" : "A link to the ASPSP / bank's logo in SVG format.",
                      "example" : "https://assets.fire.com/pisp/demo.svg",
                      "type" : "string"
                    }
                  },
                  "title" : "aspsp",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of ASPSPs in the list.",
                "example" : 10,
                "type" : "integer"
              }
            },
            "title" : "aspsps",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "5aac6108-128f-4f00-adc6-a2ce373abb10",
    "name" : "Authenticate with the API.",
    "request" : {
      "urlPath" : "/v1/apps/accesstokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiApplicationId\" : 433,\n  \"permissions\" : [ \"PERM_BUSINESSES_GET_ACCOUNTS\", \"PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS\" ],\n  \"businessId\" : 248,\n  \"expiry\" : \"2020-10-22T07:48:56.460Z\",\n  \"accessToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5aac6108-128f-4f00-adc6-a2ce373abb10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.748824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "authenticate",
          "schema" : {
            "properties" : {
              "accessToken" : {
                "description" : "The App Bearer Access Token you can use in further API calls.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "apiApplicationId" : {
                "description" : "The ID of the application you are using.",
                "example" : 433,
                "format" : "int64",
                "type" : "integer"
              },
              "businessId" : {
                "description" : "The business ID for the business.",
                "example" : 248,
                "format" : "int64",
                "type" : "integer"
              },
              "expiry" : {
                "description" : "The expiry date and time for this token (ISO-8601).",
                "example" : "2020-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "permissions" : {
                "description" : "The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.",
                "example" : [ "PERM_BUSINESSES_GET_ACCOUNTS", "PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "title" : "accessToken",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "874dc09d-65f5-4b3a-9818-a6298023e663",
    "name" : "Create a new API Application",
    "request" : {
      "urlPath" : "/v1/apps",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clientId\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"numberOfPayeeApprovalsRequired\" : 1,\n  \"clientKey\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"ican\" : 6977027459116024669,\n  \"expiry\" : \"2019-08-22T07:48:56.460Z\",\n  \"applicationId\" : 45345,\n  \"numberOfPaymentApprovalsRequired\" : 1,\n  \"enabled\" : true,\n  \"refreshToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "874dc09d-65f5-4b3a-9818-a6298023e663",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.748698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createApiApplication",
          "schema" : {
            "properties" : {
              "applicationId" : {
                "description" : "The ID of the API Application",
                "example" : 45345,
                "format" : "int64",
                "type" : "integer"
              },
              "clientId" : {
                "description" : "The Client ID of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "clientKey" : {
                "description" : "The Client Key of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Whether or not this API Application can be used",
                "example" : true,
                "type" : "boolean"
              },
              "expiry" : {
                "description" : "The date that this API Application can no longer be used.",
                "example" : "2019-08-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "ican" : {
                "description" : "The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.",
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfPayeeApprovalsRequired" : {
                "description" : "Number of approvals required to create a payee in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "numberOfPaymentApprovalsRequired" : {
                "description" : "Number of approvals required to process a payment in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "refreshToken" : {
                "description" : "The Refresh Token of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              }
            },
            "title" : "apiApplication",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "dcf4709e-d0ab-413e-875b-8126f45cce89",
    "name" : "Filtered list of transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/328024308123931395/transactions/filter",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "303494272108327522"
        },
        "transactionTypes" : {
          "equalTo" : "llf0ldamj0ikcgz9y2goe8z3guabvartkgw9hmx6v1cax0r8kl17f7edwclxqc032a3b5uq6cw9p75e60r5dropjnkwzwc9zh1eie40oiw7pq1fsqc1hm94mxwv861bojbfwf5gtttgg31jmda07m3yfefmsipu8xysswdthof635otsmutw9134t19rqpt97hzjxngc"
        },
        "dateRangeTo" : {
          "equalTo" : "2077751366171967216"
        },
        "searchKeyword" : {
          "equalTo" : "8nges3736yumdajksqlkv8gfsoqodd4enpww2rnewcw4oj8kfq1kl7t9fj5qdv7fn8xzdxnwwofz1eli9ujnz4h8o7pbhjt9gtpy6f49t0rzd2d5ptv3b7f3qf9ndom9ss1hnx5g3nwo6jljzlseilsbuh8j037q29h8"
        },
        "dateRangeFrom" : {
          "equalTo" : "1697480492306229988"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-10-02T21:56:11.745Z\",\n      \"maskedPan\" : \"s4owkp0t4myj36y9hnz8kp2wrco2shdv2wkf3m9c2iou59b8anzmv580euxiyy49s54xa1\",\n      \"provider\" : \"6y6c7jvfm7gq6xsa5zhixinq2zi1ylh7cd\",\n      \"cardId\" : 6905569789515071500,\n      \"embossBusinessName\" : \"Jeanene Quitzon\",\n      \"alias\" : \"c27wpjzypcfmigecsbvu511x5tyl2kw1pqlk89vo3ws9uf0uw6ph575lvyzesxj0p1kbmwr71zq5lw0jcqxebx7pmuzh7vt7v7a2cxokvs59hs\",\n      \"embossCardName\" : \"Domonique Kassulke\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 2144882953577157904,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-27T18:50:20.745Z\",\n      \"maskedPan\" : \"779e0yve5gywo960\",\n      \"provider\" : \"1xyf52jbgdxgzbmevxk9iu6v3116ibi0tyahr09mq4uxyi8kc6bj8dqadhygo8nvx0e0237kk4u4baiiqilctk7ah8m2yx7wv739e31w63wqb1xvtsjea6r76zqthn63s6igkkbykbwopigw5io0e0vklpzewx3fw\",\n      \"cardId\" : 4621634066802596149,\n      \"embossBusinessName\" : \"Jackson D'Amore\",\n      \"alias\" : \"fpdad5683f2k0stbqyycluhwqjx7xsu1eej8cc9y88k7s7on5sci8hrk5jvwayvc2e6kt82olowc3spns\",\n      \"embossCardName\" : \"Liane Cremin\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"zu03snnfkz3pe73sbmezm5iohofl0zpb3gkhiq1asjaie7\",\n        \"additionalDataDe124\" : \"n29s3mlso3ovva2powk2sqk665z\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-24T07:01:09.745791Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"2brv2vyopbl3vge76k81brv1o6mkdcoois8h3tcbfqqlsvsmnk5f0lddwarxr23lycr5d5jwf90uqgmcnlyefvv8s1hfz0soi\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-10-09T17:15:35.745Z\",\n      \"maskedPan\" : \"ze7kptxfrgwlr0ofhdi05ovy9d2g9snn2tnvvulzcpwgm37vx0n6s9zuyluz6fzhugpqadz4nhu6jb6viyr8ncportr2wd1xbayradg9cyf76n1pbzgluljksdaxl5hdwscdj441mysyzsq8bftmnslitth8b823jbcxy36pekrnfygb9zue4ssem\",\n      \"provider\" : \"gtot9vyib9xsr2th6g2l\",\n      \"cardId\" : 8588155257624832204,\n      \"embossBusinessName\" : \"Mrs. Lidia Little\",\n      \"alias\" : \"uyub8jdm9i7ern50l728lezgtnrgwearc1w3h5mrblgat7eo9725pq8u9nqovu15tmgagdg7ejhlmztl42fz9uw68kmfzokl19ysqvajmkpomzy6sp42ifm7mevo\",\n      \"embossCardName\" : \"Amy Gusikowski\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 4592905122011300219,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-06-04T18:25:51.746Z\",\n      \"maskedPan\" : \"htxppdtmsczdcqhy8d1c4xjzkpztkz\",\n      \"provider\" : \"zdsfn12bqfgqyzq5hl2n614ym0207l9x8m8q16fk6vbfsc9nol0olsp6gcaj3dvqkipqg3\",\n      \"cardId\" : 4833160892890565054,\n      \"embossBusinessName\" : \"Renaldo McDermott\",\n      \"alias\" : \"nmeyhfm3g7k1189m6jxohs2p7\",\n      \"embossCardName\" : \"Mariana Zboncak MD\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-17T09:41:52.746Z\",\n      \"maskedPan\" : \"3bldk4e4mef2vvoqc56w9p5s3tdw0fl8f85wib5dmqoa2jrfdkvraxbmpwlhhrxi4\",\n      \"provider\" : \"ekr2o4lrvizdf329el60139hajajp3cihreuuf90ux4ph6o265lebeeg0wlthaeyfdi7afzaktrfseza23j7w373vwg7t59yabidtnw391j7tbcoqmyj7v\",\n      \"cardId\" : 6871412673986698940,\n      \"embossBusinessName\" : \"Mohammad Casper\",\n      \"alias\" : \"ya7se0myrnjvx55dbzidd6j0l2woyl73rt51x46mt1335vhhlmdvimj4zc0mspugwt6nah07k9481xsfxobdcicc4rws7x245vht2wiagzai4tbb81f0y5vucxmco19gmdkvkdeo6r22c32hlete5cqerkls2i11v8z\",\n      \"embossCardName\" : \"Fernando Jast\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 5120019648117286709,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-05T13:38:31.746Z\",\n      \"maskedPan\" : \"44hj\",\n      \"provider\" : \"4e2w1jd9csv633s25q9nmu9xdhj3ljnltucb194jt14qhgsj\",\n      \"cardId\" : 843892478658144619,\n      \"embossBusinessName\" : \"Mason Wunsch\",\n      \"alias\" : \"i0ej8rlubtasou9cy240xx38jpta7wpfhcrq4pfzlj9a8kolkdpklpnw17s886yy8fcdpvin0mptjs4m1czmgbl1juhiikbmsz5cvm9yhdd5o1a35vrb2fmbni5mj1v4p9mfapdbf3u63g1\",\n      \"embossCardName\" : \"Nicolle Yundt\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcf4709e-d0ab-413e-875b-8126f45cce89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.748451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsFilteredById",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "f8a35273-6d44-4a70-8e3d-9ae7f70d5e46",
    "name" : "List transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/7360178596605714395/transactions",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "2995588835707447732"
        },
        "limit" : {
          "equalTo" : "3410921298191383316"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-15T21:23:07.742Z\",\n      \"maskedPan\" : \"zp6v9ufnaz6qzisjxm8y63l6ynf9uf1a8x6aerl5m\",\n      \"provider\" : \"y4wio0bgpskcag\",\n      \"cardId\" : 1731376877756213247,\n      \"embossBusinessName\" : \"Dot Boehm\",\n      \"alias\" : \"4qddlz3cbgbcg76kk3zudoykpfz1ivijgpfebw0j9uek0sph9hwvsrs08ii\",\n      \"embossCardName\" : \"Ty Keebler\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-14T23:13:57.742Z\",\n      \"maskedPan\" : \"0ltvfamywj6cz90jn2iacngf3h9m00uvygjpzcp7mg6xia0gdx1mv3houm6auukvyx5rlncig1y5lmy316im7j4e3orwv5j8dy2cb9wn56g6w1i6dj6t465vq2qxi0t9vtww83c5bgio86f3mujcm928rlls7cu38w685oxisy210qur\",\n      \"provider\" : \"4cj0t1\",\n      \"cardId\" : 7021918559918786146,\n      \"embossBusinessName\" : \"Freida Strosin\",\n      \"alias\" : \"7lizf4fsfsn2fx5l444nane2ow1avzrri488r9mjji11rc9ykgt65fin7bpf2lyyzn6a6a8fjswatz4dz6d8y9ek4t8wkbyred4hynsltv84d4r73hyxy6741ei\",\n      \"embossCardName\" : \"Leslie Hamill\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-11-11T09:48:33.742Z\",\n      \"maskedPan\" : \"59h5mhbor88k15\",\n      \"provider\" : \"w83lx22yntsdab3zvys0pv972tdjbytqncazsabnf26lsjju7ss3ijjif8ixkaarqs0p82pdebwxan662u11k4yj88yigrkje6lze1ojnsqvhzrs0hrwk2w79ifh2\",\n      \"cardId\" : 4963357255485010112,\n      \"embossBusinessName\" : \"Harrison Stiedemann\",\n      \"alias\" : \"lm8ai7x9xv8g4xtwojst01yy80c8hf640y2fulc12jyu71962d7dgwgzcgjgfb549uuixadorx7h514e0yxeohh4u1fj7tam\",\n      \"embossCardName\" : \"Kasie Schaefer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-09-26T22:31:59.743Z\",\n      \"maskedPan\" : \"g6f872f5hwn2wfxbath8kcodkpizkdxm6xrg95gkddoxvgoexvl7t736pnh334llm6xft0m0wdx4mbobvprbis8d3myxy4tp8q3drdyov0ba8owu2\",\n      \"provider\" : \"5qv9pfk9iri43xuzlejoqcopm4poeyg5kjzj5xixe3z59zn1bxfn03rbnv4qhek\",\n      \"cardId\" : 3094480209609075406,\n      \"embossBusinessName\" : \"Dr. Ezra Kuhic\",\n      \"alias\" : \"9i7yavg55kyhvz31in9iqou6e0kbvpuo4j1jyzrfj7yz31hsq5cz5axik1440p317hv8pckm1zvoegiwgmxl0elffd27ydihgmg9ppab8noandfwmpbs2pg\",\n      \"embossCardName\" : \"Wilbur Strosin\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8a35273-6d44-4a70-8e3d-9ae7f70d5e46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.744715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv1",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "af012276-77b1-4afa-8d48-94cf0fe68458",
    "name" : "Retrieve the details of a fire.com Account - 401",
    "request" : {
      "urlPath" : "/v1/accounts/6248284340748635036",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "af012276-77b1-4afa-8d48-94cf0fe68458",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.741876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "cfe804c8-c6de-41d8-aaaf-86eece2515e1",
    "name" : "Retrieve the details of a fire.com Account (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts/6918770397125342199",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfe804c8-c6de-41d8-aaaf-86eece2515e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.741842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "8786f5d0-9a11-4650-8a6f-2c1090734df1",
    "name" : "Add a new account",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"BREXIT_MIGRATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8786f5d0-9a11-4650-8a6f-2c1090734df1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.741583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAccount",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "b8b7838d-ab40-49bd-b3d3-a27cf980e14d",
    "name" : "List all fire.com Accounts - 401",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b8b7838d-ab40-49bd-b3d3-a27cf980e14d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.741341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "aee3e97e-6c8f-4485-a72c-e8eed9c4e9ca",
    "name" : "List all fire.com Accounts (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accounts\" : [ {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aee3e97e-6c8f-4485-a72c-e8eed9c4e9ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:09.741275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts",
          "schema" : {
            "properties" : {
              "accounts" : {
                "items" : {
                  "properties" : {
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 23950,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "cbic" : {
                      "description" : "the BIC of the account (provided if currency is EUR).",
                      "example" : "CPAYIE2D",
                      "type" : "string"
                    },
                    "ccan" : {
                      "description" : "the Account Number of the account.",
                      "example" : "11111111",
                      "type" : "string"
                    },
                    "ciban" : {
                      "description" : "the IBAN of the account (provided if currency is EUR).",
                      "example" : "IE54CPAY99119911111111",
                      "type" : "string"
                    },
                    "cnsc" : {
                      "description" : "the Sort Code of the account.",
                      "example" : "232221",
                      "type" : "string"
                    },
                    "colour" : {
                      "deprecated" : true,
                      "description" : "Internal Use",
                      "example" : "ORANGE",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "defaultAccount" : {
                      "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "directDebitsAllowed" : {
                      "description" : "Whether or not direct debits can be set up on this account.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "fopOnly" : {
                      "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com)",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "name" : {
                      "description" : "the name the user gives to the account to help them identify it.",
                      "example" : "Main Account",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                      "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                      "type" : "string"
                    }
                  },
                  "title" : "Account",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "accounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  } ]
}