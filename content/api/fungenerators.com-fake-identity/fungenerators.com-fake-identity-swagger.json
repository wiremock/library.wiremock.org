{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Fake identity generation API",
    "description" : "Generate random fake identities (name, address, email, phone , credit card info etc). [Click here to subscribe](http://fungenerators.com/api/fakeidentity/)\n",
    "termsOfService" : "https://fungenerators.com/terms",
    "contact" : {
      "name" : "Fun Generators",
      "url" : "http://fungenerators.com/"
    },
    "version" : "1.5"
  },
  "servers" : [ {
    "url" : "https://api.fungenerators.com/"
  }, {
    "url" : "http://api.fungenerators.com/"
  } ],
  "tags" : [ {
    "name" : "Fake Identity",
    "description" : "Fake Identity Generation API",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://fungenerators.com/api/fakeidentity/"
    }
  } ],
  "paths" : {
    "/identity/company" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate full company identity",
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"success\": {\n      \"total\": 5\n    },\n    \"contents\": {\n      \"name\": \"Walker-Crist\",\n      \"phone\": \"1-800-307-1546\",\n      \"domain\": \"walker-crist.xyz\",\n      \"email\": \"request@walker-crist.xyz\",\n      \"address\": {\n        \"address\": \"17487 Steuber Locks Suite 996\",\n        \"city\": \"South Einarchester\",\n        \"state\": \"New Mexico\",\n        \"country\": \"USA\",\n        \"postalcode\": \"46493\"\n      }\n    },\n    \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/company/address" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate postal addresses",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of addresses to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"addresses\": [\n      {\n        \"address\": \"880 Lessie Cove Apt. 110\",\n        \"city\": \"West Marge\",\n        \"state\": \"Massachusetts\",\n        \"country\": \"USA\",\n        \"postalcode\": \"09983\"\n      },\n      {\n        \"address\": \"48726 Curtis Station\",\n        \"city\": \"Baileystad\",\n        \"state\": \"Iowa\",\n        \"country\": \"USA\",\n        \"postalcode\": \"64152-3296\"\n      },\n      {\n        \"address\": \"49595 Myra Loop Apt. 925\",\n        \"city\": \"Coleport\",\n        \"state\": \"Oregon\",\n        \"country\": \"USA\",\n        \"postalcode\": \"02499\"\n      },\n      {\n        \"address\": \"60581 Pearl Inlet\",\n        \"city\": \"Wuckertmouth\",\n        \"state\": \"Connecticut\",\n        \"country\": \"USA\",\n        \"postalcode\": \"18376\"\n      },\n      {\n        \"address\": \"38440 Cassandre Circles\",\n        \"city\": \"Port Ezekiel\",\n        \"state\": \"Alabama\",\n        \"country\": \"USA\",\n        \"postalcode\": \"05904-0794\"\n      }\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/company/name" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate company name(s)",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of names to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": \"5\"\n  },\n  \"contents\": {\n    \"names\": [\n      \"Johnston-Weissnat Ltd\",\n      \"Wisoky Group Inc\",\n      \"Pfannerstill Ltd and Sons\",\n      \"Rempel Ltd PLC\",\n      \"Wolf-Streich and Sons\"\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}            "
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/company/phonenumber" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate random company phone number(s)",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of phone numbers to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"phonenumbers\": [\n      \"1-800-976-4219\",\n      \"(808) 423-7981\",\n      \"(888) 963-6939 x028\",\n      \"800-793-6143 x2948\",\n      \"1-808-351-9690 x026\"\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate full identity name, phone, email, address, credit card etc.",
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"name\": {\n      \"first\": \"Brittany\",\n      \"last\": \"Mohr\",\n      \"full\": \"Brittany Mohr\"\n    },\n    \"phone\": \"1-542-830-8666 x4187\",\n    \"email\": \"mohr1963@hotmail.com\",\n    \"birthday\": \"1975/03/13\",\n    \"address\": {\n      \"address\": \"6029 Homenick Ridges Suite 551\",\n      \"city\": \"Adelbertshire\",\n      \"state\": \"Connecticut\",\n      \"country\": \"USA\",\n      \"postalcode\": \"06305-2706\"\n    },\n    \"credit-card\": {\n      \"type\": \"MasterCard\",\n      \"number\": \"4539572808851695\",\n      \"expiration\": \"12/20\"\n    }\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}        "
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person/address" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate postal addresses",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of addresses to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"addresses\": [\n      {\n        \"address\": \"880 Lessie Cove Apt. 110\",\n        \"city\": \"West Marge\",\n        \"state\": \"Massachusetts\",\n        \"country\": \"USA\",\n        \"postalcode\": \"09983\"\n      },\n      {\n        \"address\": \"48726 Curtis Station\",\n        \"city\": \"Baileystad\",\n        \"state\": \"Iowa\",\n        \"country\": \"USA\",\n        \"postalcode\": \"64152-3296\"\n      },\n      {\n        \"address\": \"49595 Myra Loop Apt. 925\",\n        \"city\": \"Coleport\",\n        \"state\": \"Oregon\",\n        \"country\": \"USA\",\n        \"postalcode\": \"02499\"\n      },\n      {\n        \"address\": \"60581 Pearl Inlet\",\n        \"city\": \"Wuckertmouth\",\n        \"state\": \"Connecticut\",\n        \"country\": \"USA\",\n        \"postalcode\": \"18376\"\n      },\n      {\n        \"address\": \"38440 Cassandre Circles\",\n        \"city\": \"Port Ezekiel\",\n        \"state\": \"Alabama\",\n        \"country\": \"USA\",\n        \"postalcode\": \"05904-0794\"\n      }\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person/creditcard" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate credit card details (number, type, expiration date, name on the card etc).",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of credit card details to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"creditcards\": [\n      {\n        \"name\": \"Una Nikolaus\",\n        \"type\": \"Visa\",\n        \"number\": \"4556029936375707\",\n        \"expiration\": \"02/21\"\n      },\n      {\n        \"name\": \"Dessie Runolfsson\",\n        \"type\": \"Visa\",\n        \"number\": \"6011247607523686\",\n        \"expiration\": \"11/19\"\n      },\n      {\n        \"name\": \"Dax Kunze\",\n        \"type\": \"MasterCard\",\n        \"number\": \"2221543215045897\",\n        \"expiration\": \"11/20\"\n      },\n      {\n        \"name\": \"Natalia Nicolas\",\n        \"type\": \"Visa\",\n        \"number\": \"345851764439527\",\n        \"expiration\": \"03/22\"\n      },\n      {\n        \"name\": \"Leda Von\",\n        \"type\": \"Visa\",\n        \"number\": \"4868179383681744\",\n        \"expiration\": \"12/21\"\n      }\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}        "
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person/email" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate random email ids",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of email ids to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"emails\": [\n      \"lehner.alta@gmail.com\",\n      \"amitchell@gmail.com\",\n      \"chesley03@gmail.com\",\n      \"nhowell@hotmail.com\",\n      \"ottilie.oconner@hotmail.com\"\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person/name" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate full name(s)",
        "parameters" : [ {
          "name" : "gender",
          "in" : "query",
          "description" : "Gender of the names. If not specified both gender names will be returned.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "No of names to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"names\": [\n      \"Shanna Hagenes\",\n      \"Therese Beatty II\",\n      \"Mrs. Electa Cruickshank MD\",\n      \"Rachael Quigley\",\n      \"Kyra Bins\"\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person/name/first" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate first name (in a given gender)",
        "parameters" : [ {
          "name" : "gender",
          "in" : "query",
          "description" : "Gender of the names. If not specified both gender names will be returned.",
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "No of names to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"names\": [\n      \"Dedrick\",\n      \"Jedidiah\",\n      \"Helga\",\n      \"Berniece\",\n      \"Jammie\"\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person/name/last" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate last name(s)",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of names to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"names\": [\n      \"Trantow\",\n      \"Abshire\",\n      \"Bode\",\n      \"Dickens\",\n      \"Harris\"\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    },
    "/identity/person/phonenumber" : {
      "get" : {
        "tags" : [ "Fake Identity" ],
        "description" : "Generate random phone number(s)",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "No of phone numbers to return. Defaults to 1.",
          "schema" : {
            "type" : "integer",
            "format" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200  response",
            "content" : {
              "application/json" : {
                "example" : "{\n  \"success\": {\n    \"total\": 5\n  },\n  \"contents\": {\n    \"phonenumbers\": [\n      \"1-501-976-4219\",\n      \"(808) 423-7981\",\n      \"(295) 963-6939 x028\",\n      \"324-793-6143 x2948\",\n      \"1-931-351-9690 x026\"\n    ]\n  },\n  \"copyright\": \"https://fungenerators.com/\"\n}"
              }
            }
          },
          "401" : {
            "description" : "401  response",
            "content" : {
              "application/json" : {
                "example" : "{\n    \"error\": {\n        \"code\": 401,\n        \"message\": \"Unauthorized\"\n    }\n}"
              }
            }
          }
        },
        "security" : [ {
          "X-Fungenerators-Api-Secret" : null
        } ]
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "X-Fungenerators-Api-Secret" : {
        "type" : "apiKey",
        "name" : "X-Fungenerators-Api-Secret",
        "in" : "header"
      }
    }
  }
}