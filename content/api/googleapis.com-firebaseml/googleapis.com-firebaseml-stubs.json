{
  "mappings" : [ {
    "id" : "b04dbcda-054d-43b2-a6bd-736224058736",
    "name" : "Creates a model in Firebase ML. The longrunning operation will eventually return...",
    "request" : {
      "urlPath" : "/v1beta2/wm3u9qxcs9ldbtz95mait6uv46ovtgyjml4q5ldylv4jbvs8t6yimw69ddsuwqa3dxcrwsjluqysvbzq41j58x2nh42229ecggadejirqi5s3c1foa4o38t/models",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lue Osinski\",\n  \"error\" : {\n    \"code\" : 306854400,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Sapiente nihil aut placeat eos molestiae doloribus atque. Earum maxime totam unde velit fugiat. Hic id dolores recusandae.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b04dbcda-054d-43b2-a6bd-736224058736",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.875961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "3c39fbe1-6265-4ed6-89a6-ff8d4e5f4164",
    "name" : "Lists the models",
    "request" : {
      "urlPath" : "/v1beta2/3imr5wg9t9dv8tmubu81tn33mh8v21jw1hertthef32b0j7y7bgsw6n1r3a5an67thaac38awyuv8l6u8b3d7ni75ygxjszkzjhuhx94o8sl09g0k39zvaqysofk6ks9r2041ugc718zfe9a5eafb39ksrm2a294tmsnrg5aq3jtprhz9cf/models",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"models\" : [ {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/656806\",\n      \"automlModel\" : \"83f8lpt\",\n      \"sizeBytes\" : \"2aors9c8aatgrxcpoqgbwsi6wod8\"\n    },\n    \"createTime\" : \"2022-11-17T07:05:34.823181Z\",\n    \"modelHash\" : \"5awqys704po1kqe47pocva8outx4w6swlrfm8qf241kearf4sx889m92dqg29x1csgsn45yacb65aa1mq4arbmohvmqkh90a62iq5e2x03ubhrjx93wj1dh1uvlbjlqqqp13s78rclpx\",\n    \"displayName\" : \"Dirk Metz\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Ray Tromp\",\n      \"error\" : {\n        \"code\" : 1340357948,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Nam ut quae. Iste magnam corrupti. Rerum dolorem quae voluptates accusantium. Corporis dolor numquam deserunt dolore est. Ipsum accusantium quidem sed nihil quisquam quibusdam repellendus.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Taylor Becker PhD\",\n      \"error\" : {\n        \"code\" : 427997987,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Aut reiciendis aut tempore maxime. Sit magnam recusandae qui. Tempore accusamus dolorum eos doloremque laboriosam veniam. Est nesciunt aut ducimus ullam.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Eugenio Jacobson\",\n      \"error\" : {\n        \"code\" : 1349427358,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Omnis adipisci pariatur illo et et enim et. Eos voluptates consequuntur. Quo necessitatibus culpa nihil dolor distinctio maiores.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Junior Lindgren\",\n      \"error\" : {\n        \"code\" : 597218328,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Corporis vel facere sapiente aliquam. Voluptatibus qui molestias officiis quod fugiat. Doloremque cupiditate voluptas eius. Totam provident eos voluptatem quaerat voluptatum quas.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Annemarie Swift\",\n      \"error\" : {\n        \"code\" : 841094611,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui quisquam quos reprehenderit quasi ex nihil. Dolor quae id dolorem nihil odio quam deleniti. A consectetur et dolores nostrum vero.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Samuel Carroll\",\n      \"error\" : {\n        \"code\" : 1875179011,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Non esse necessitatibus rerum quia distinctio est. Labore qui voluptas fuga fugit. Dolorum quo numquam qui sit. Officiis officiis quia consequuntur. Et labore temporibus voluptates laborum sit quis.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Annika Kling\",\n      \"error\" : {\n        \"code\" : 414321995,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Velit earum quo repudiandae molestiae reprehenderit. Enim et eos. Magni sit illo et tenetur. Explicabo libero culpa qui veritatis.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Mrs. Xiomara MacGyver\",\n    \"etag\" : \"quidem\",\n    \"updateTime\" : \"2022-09-14T07:54:34.839625Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1448251534,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Iste qui qui placeat. Rerum quos accusamus ad quae blanditiis omnis laborum. Placeat minima rerum tenetur. Suscipit quos mollitia voluptatem odit aliquid. Et harum facere voluptas nihil porro.\"\n      }\n    },\n    \"tags\" : [ \"0jvvzyz65rht66yxf9fxka\", \"vaxr2yvxvkqj2q4w62zdvxz3nt4tl1vkfm18qhl6sz714kzilnn85bxg8ctexhvxe7yej60967useiokynb5ql62byvswfv5xzx4pedrtlnseg4ix1d5x40lqw94ea02snwjid3o8jn2omfg51mombw1vdqcgalhvs4eoyr\", \"wmbv4t1f2c38xtl3j7f05c53muu3achkqf4bmtqa8v7bsak9ls0ao1ft72s91umr8q50ov0ikslsvzgv6uckday43mn3a2eoscdft4ec64ywgjl3ew7p3srrsn7lmgdlxntmewksjsticvmil96lzy2pdu7nxrzev4js2ahu5emy62pz330c5tb3a1v6mb\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/049120\",\n      \"automlModel\" : \"ghp30px1oa3ofnj7lyy8r8x9w6vg9m91j05yg05skhydbxpyivdtqv4e88s72seur95bvfoqi0vs8zwq1y8srncj1tt1ql4eb3v0ub6oi4lwcv4izr1f4ep60tu0owt3g0xrsmg1ncewpsni8x9bjfkygbv18bcj600p59hl6p0bqe7bgtgkfe4r7bw73pqlgc02xpl\",\n      \"sizeBytes\" : \"sum9qmy9pavp8agt0y09xdymqcea1nxjl997aa7iglak0wpmgquvyfik3rxdigu6ke8gtvn9hg6r03rgn1e\"\n    },\n    \"createTime\" : \"2022-08-28T06:08:34.843343Z\",\n    \"modelHash\" : \"gg6wy74u65tfvwov8ji3ytcpvdwzi85px31e9m2o0qn432e4rlvnosmruv6y4fevyud9enz3nty2vb30k2jtajuzrp7dr2dlv7ic2hq2zjz2fyktyjlipdurfrcv8mx70c3fx85ud217e0ygzua5srgd7p9k7fgcmjwb2u6fg71lpcvsvxxassat\",\n    \"displayName\" : \"Loida Williamson\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Ms. Ruth Koch\",\n      \"error\" : {\n        \"code\" : 1070279821,\n        \"details\" : [ { } ],\n        \"message\" : \"Iste facere nobis quia velit voluptas ea. Maxime aspernatur rerum iure possimus ut assumenda. Adipisci iste earum numquam.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Angle Gottlieb\",\n      \"error\" : {\n        \"code\" : 1109230154,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ab officiis est maxime repellendus similique temporibus. Eveniet autem accusamus quam voluptate rerum voluptate qui. Aperiam ut molestiae.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Shelby Altenwerth\",\n      \"error\" : {\n        \"code\" : 1218312594,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptas veniam ut. Quis nihil qui architecto et voluptatem voluptas. Iste tenetur cum libero expedita et et tempore.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Roselee Rau Jr.\",\n    \"etag\" : \"consequatur\",\n    \"updateTime\" : \"2022-07-11T06:51:34.847739Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1679153533,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Dolores facilis velit aliquid eum accusantium dolorem. Qui cumque hic voluptas saepe. Quasi qui sunt omnis. Repudiandae fugiat voluptate omnis ea veniam. Consequuntur debitis ad.\"\n      }\n    },\n    \"tags\" : [ \"5ifpgdkc1jeuaslzvd5gqs9msvauxi8vv4nmumueim57ruasuqkpal75647o11b50v98szqiluhfjq\", \"oqmlwoprb7ok1v2zpmmaldekhgzpompxcesrig9bhk2vnvlc\", \"o7ycceodiwkc6xlr7dnnf5pyi8sn3txyzcc04p48vsfk3gq3hvpd9k96bw47b9zaqhblpzdmptfy6zhoevup1bhbafrrxcd81mzqakgzjoahy1n18im4sebpc1umbnr58vgrzocf23fazs\", \"952a5vuechop19sj5n9e23fqafk03j0wo24equb3qfca21au3pdvtbx9zpis7bvb7i0ndf3pz32xnpf2edevancz\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/827955\",\n      \"automlModel\" : \"fgp\",\n      \"sizeBytes\" : \"zuceywuyyv4\"\n    },\n    \"createTime\" : \"2022-06-22T08:41:34.84806Z\",\n    \"modelHash\" : \"1yhzw3acgjuezmgq71d3m8gdtnhx96rc4qrq2mt16zybyo91ilw0ibyehx6qqyry1jbv3sjzn7g22etauneu2xsdilv\",\n    \"displayName\" : \"Dr. Ernest Pagac\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Dr. Maxwell Rau\",\n      \"error\" : {\n        \"code\" : 1455385529,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Perspiciatis id deleniti et. Magnam est voluptatem error officia quia sed. Illum molestiae quos temporibus enim. Aut sit assumenda non.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Donita Hauck\",\n      \"error\" : {\n        \"code\" : 1679161830,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Possimus sunt vitae minima. Fugiat beatae similique assumenda. Dolores voluptatem itaque ut quos.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Chung Kris\",\n      \"error\" : {\n        \"code\" : 1093296242,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Repudiandae vitae blanditiis. Iure molestiae non at est. Odio voluptas facilis nihil aut eum. Error commodi repellendus. Non dolore id culpa nulla in sint.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mr. Corey Durgan\",\n      \"error\" : {\n        \"code\" : 395527350,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quia beatae aut ut mollitia et. Ipsam commodi quia corporis sit est voluptatem suscipit. Sed laboriosam ut aut et facilis illo.\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Ms. Valencia Nikolaus\",\n    \"etag\" : \"quia\",\n    \"updateTime\" : \"2022-08-06T05:48:34.850253Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 1387263582,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Saepe assumenda quaerat vel itaque assumenda necessitatibus veniam. Et facilis cupiditate impedit. Sit et iure et deleniti saepe corporis veritatis. Aperiam et et sed voluptatem sunt rerum ut.\"\n      }\n    },\n    \"tags\" : [ \"oxk3l3ii8ev7nrj1n9x58b36qg5sbec1k1piy028bn1um054drynukmwhstj0k1wtj8gh0buabp68s08tp0q4qqbe4rcok35p3d1ndpg7txxe4p8z7uey92gn2ert5wta0wxnt7doz\", \"htnxo07in01ayptf1dsowtmghvds2te7l08z92ugjuyl2phjzz1qtlajwmkwt064cj5bzthp\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/817469\",\n      \"automlModel\" : \"tzrmcu6erssd1yglkkdbia5lxcm4j75wv2eqma2nyuc0hmuzbj3zhnez6o6lgs5eogkg0a9nakwtpko0bp5beov2l83uwwqtpgkq186a5hjs6fpu5gcxhbiyuj9ry49ms3qlqaesl9pkftnkfvzu0ilbdicofc6qawyla51xw9j\",\n      \"sizeBytes\" : \"mgzjjbcfv7qbko46k8qgnwm8d77tkmo3ee1jnsn0bi69fgxc7mcozy5bjumcd7oohdm4\"\n    },\n    \"createTime\" : \"2022-09-06T05:30:34.850643Z\",\n    \"modelHash\" : \"l01bg1m7t71o4ibd1eq1mx2iicjpaoxm9l\",\n    \"displayName\" : \"Mr. Rebecka Price\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Horace Hane\",\n      \"error\" : {\n        \"code\" : 664796254,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Enim et aliquid molestiae voluptatibus. Maxime quae corrupti cum. Sint quasi ea repellendus consequatur est. Temporibus nam natus animi quod dicta laborum dolore.\"\n      },\n      \"done\" : true\n    } ],\n    \"name\" : \"April Reynolds\",\n    \"etag\" : \"non\",\n    \"updateTime\" : \"2023-01-12T07:20:34.854965Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 938306464,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ad quidem omnis. At velit architecto voluptatibus accusantium. Dignissimos natus aperiam aut earum.\"\n      }\n    },\n    \"tags\" : [ \"0xhnskrcwr94dzu789igdb7s9ewd1w8mch7ba4bt4k98xc7xmoazt6yiraaj0um316hzlgzdigfpey6jzkz1gnw8tjvletzanxaj643btahw2l6oag292ngcjpztoqzfxmoondok6gs74urpfjnjzmu7kbu97ojlf55shml\" ]\n  }, {\n    \"tfliteModel\" : {\n      \"gcsTfliteUri\" : \"https://web.example.mocklab.io/172582\",\n      \"automlModel\" : \"6t8knvygipu3wd292g9ogsnq9yop0zjqin9h5awp5eceyvpffuvr65tjkjs1t0d98p4ldyd4l9r82z4o16r9g5mp1p4vp8ql6on7ar66cmdloxsx3kb4dkgg4el1i1ukvoo7smnq4dm55yganuxam3s3ln68k3hsm0elg\",\n      \"sizeBytes\" : \"2ga4bx9jb5kzk3ensv7rsu9rqzy9z7xw0mmcmysjslqa1i9hvxu98sz8rz93zkq0488kvy7raiu7cmxwnwgdjw8si5hkr0as92spquqk46qmjbvds5asztikw6l9lq9wwa2aj2hv2ncqowpsrfs964vy90p90gcofal4ipsu1dwnhupavauol1usv1\"\n    },\n    \"createTime\" : \"2022-09-14T05:55:34.857786Z\",\n    \"modelHash\" : \"xewm8vlo92mh2hfgthhzg2l4ywfzsrxrpfgritjhxp7xcwslq0uy7bu7ypg9xeuu9j88nmg22tcrm4qza7suv6jcq8i7d7skhea1f3ygl4tes8c7xikh95jwmt30nraerkg6f3pjbvn9bo4o7nc9wej6ububztlwe4dzme3ei6x2edbb4w\",\n    \"displayName\" : \"Alma Zulauf\",\n    \"activeOperations\" : [ {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Sherri Collier\",\n      \"error\" : {\n        \"code\" : 928361347,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Omnis possimus quod aut itaque blanditiis. Iure aperiam ut ea reiciendis. Iure sequi fuga.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Elisha Schumm\",\n      \"error\" : {\n        \"code\" : 1099905539,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Id eius et velit praesentium. Repellendus qui rerum totam voluptatum dignissimos ut. Est laborum facere sed ut doloribus suscipit. Rem sit et. Commodi corrupti aut ipsum nisi dolores.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Miss Tory Mueller\",\n      \"error\" : {\n        \"code\" : 1348717825,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Adipisci in laudantium incidunt et. Ab quibusdam voluptas voluptate et id aut. Dignissimos exercitationem adipisci enim molestias et consequatur ea.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Scottie McCullough\",\n      \"error\" : {\n        \"code\" : 208118371,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Aut quidem omnis. Illum dolores soluta quis ratione sunt veniam amet. At totam distinctio dolores iste sed molestiae reprehenderit. Qui blanditiis tempora ea.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Dr. Adell Powlowski\",\n      \"error\" : {\n        \"code\" : 1798630122,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quas perspiciatis vero assumenda. Doloribus voluptatum repudiandae commodi eos modi. Et quae voluptatem. Consequatur veniam quod quia officia dignissimos quae.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Kerry Buckridge\",\n      \"error\" : {\n        \"code\" : 2013898559,\n        \"details\" : [ { } ],\n        \"message\" : \"Omnis culpa saepe nesciunt illo ut eos. Voluptatem omnis voluptas architecto velit enim. Modi iste ut incidunt nulla odio dolor. Ea beatae sit labore vel. Id voluptas laudantium pariatur delectus.\"\n      },\n      \"done\" : false\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Mrs. Georgiana Haley\",\n      \"error\" : {\n        \"code\" : 1624972587,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Sint enim id unde. Dolores odio nulla ex culpa accusamus. Laboriosam commodi suscipit ut est eos dignissimos.\"\n      },\n      \"done\" : true\n    }, {\n      \"metadata\" : { },\n      \"response\" : { },\n      \"name\" : \"Valentin Hoeger\",\n      \"error\" : {\n        \"code\" : 1052827527,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Nisi repudiandae nihil quae ipsum nobis quo eveniet. Cum maxime animi facilis est laboriosam eveniet eum. Ea illo autem temporibus perspiciatis eveniet. Harum et neque nam consequatur nobis nemo. Vita\"\n      },\n      \"done\" : false\n    } ],\n    \"name\" : \"Jermaine Luettgen\",\n    \"etag\" : \"quis\",\n    \"updateTime\" : \"2022-09-27T08:06:34.865848Z\",\n    \"state\" : {\n      \"published\" : false,\n      \"validationError\" : {\n        \"code\" : 925923110,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"In optio magnam magnam. Veniam dolores exercitationem debitis harum. Molestiae et maxime dicta. Explicabo delectus voluptate.\"\n      }\n    },\n    \"tags\" : [ \"fv3nllszd9mnsghqlkmpsqni1qt1dh6yaz6607p35g6oep4u19i1q\" ]\n  } ],\n  \"nextPageToken\" : \"cbv7mq31s3z207pim654w7hoxjwkuazxh4o76zdbxutqjziikvg6tyy312vis86yhunrpwy962b7c4lv01f26fhu9zvo2xx8hm34yusl8ebxsq9rhpitf5ivyjchxsv6sy9xgmmduypio9y0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c39fbe1-6265-4ed6-89a6-ff8d4e5f4164",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.869926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.list",
          "schema" : {
            "description" : "The response for list models",
            "properties" : {
              "models" : {
                "description" : "The list of models",
                "items" : {
                  "$ref" : "#/components/schemas/Model"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "56180794-81ef-4f12-8a8a-66ddfc90e91a",
    "name" : "Gets Download information for a model. This is meant for downloading model resou...",
    "request" : {
      "urlPath" : "/v1beta2/Deon+Gulgowski+DVM:download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modelFormat\" : \"TFLITE\",\n  \"expireTime\" : \"2022-11-29T05:52:34.81922Z\",\n  \"downloadUri\" : \"https://web.example.mocklab.io/706445\",\n  \"sizeBytes\" : \"cedevaagg0wdi5i2jdzufur06rkbamxzviow0znzgg6ax375wx2bxmsuefsq1btljfjddqlxli85lkfcwpn0q9h1bsmnnkeud2ec6mh2qevp6k6cg75ysj69ohv6sj8tk2duvp46wpvkwywz0190ga3ylia2k6si9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56180794-81ef-4f12-8a8a-66ddfc90e91a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.819524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.download",
          "schema" : {
            "description" : "The response for downloading a model to device.",
            "properties" : {
              "downloadUri" : {
                "description" : "Output only. A download URI for the model/zip file.",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "modelFormat" : {
                "description" : "Output only. The format of the model being downloaded.",
                "enum" : [ "MODEL_FORMAT_UNSPECIFIED", "TFLITE" ],
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the file(s), if this information is available.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "51dfdad7-38f4-43d8-9fed-2d2330413f9d",
    "name" : "Updates a model. The longrunning operation will eventually return a Model.",
    "request" : {
      "urlPath" : "/v1beta2/Ms.+Lorelei+Baumbach",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ethan Fadel IV\",\n  \"error\" : {\n    \"code\" : 1457744714,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Eligendi quis suscipit mollitia expedita est. Libero sit qui. Et doloremque quia veniam velit provident distinctio rerum. Quasi ducimus quis sit quis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51dfdad7-38f4-43d8-9fed-2d2330413f9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.819086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e302c1b6-28b8-47a7-8a1f-57d64ada613a",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta2/Hyman+Feil",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Jenee Kuhic\",\n  \"error\" : {\n    \"code\" : 848673019,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Minus aut aut molestiae et facilis excepturi. Quis ad et est. Amet animi voluptatum in commodi. Labore quisquam occaecati.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e302c1b6-28b8-47a7-8a1f-57d64ada613a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.815333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2a07d631-9b2e-449a-b349-2bf10fd0d4bb",
    "name" : "Deletes a model",
    "request" : {
      "urlPath" : "/v1beta2/Janie+Cremin",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a07d631-9b2e-449a-b349-2bf10fd0d4bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:34.807359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseml.projects.models.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}