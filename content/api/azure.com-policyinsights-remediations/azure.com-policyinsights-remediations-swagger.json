{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "RemediationsClient",
    "version" : "2019-07-01"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations" : {
      "get" : {
        "description" : "Gets all remediations for the management group.",
        "operationId" : "Remediations_ListForManagementGroup",
        "parameters" : [ {
          "name" : "managementGroupsNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Management" ]
          }
        }, {
          "name" : "managementGroupId",
          "in" : "path",
          "description" : "Management group ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}" : {
      "get" : {
        "description" : "Gets an existing remediation at management group scope.",
        "operationId" : "Remediations_GetAtManagementGroup",
        "parameters" : [ {
          "name" : "managementGroupsNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Management" ]
          }
        }, {
          "name" : "managementGroupId",
          "in" : "path",
          "description" : "Management group ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Creates or updates a remediation at management group scope.",
        "operationId" : "Remediations_CreateOrUpdateAtManagementGroup",
        "parameters" : [ {
          "name" : "managementGroupsNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Management" ]
          }
        }, {
          "name" : "managementGroupId",
          "in" : "path",
          "description" : "Management group ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The remediation parameters.",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Remediation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "201" : {
            "description" : "The created remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an existing remediation at management group scope.",
        "operationId" : "Remediations_DeleteAtManagementGroup",
        "parameters" : [ {
          "name" : "managementGroupsNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Management" ]
          }
        }, {
          "name" : "managementGroupId",
          "in" : "path",
          "description" : "Management group ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "204" : {
            "description" : "The remediation did not exist."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel" : {
      "post" : {
        "description" : "Cancels a remediation at management group scope.",
        "operationId" : "Remediations_CancelAtManagementGroup",
        "parameters" : [ {
          "name" : "managementGroupsNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Management" ]
          }
        }, {
          "name" : "managementGroupId",
          "in" : "path",
          "description" : "Management group ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The remediation that was canceled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments" : {
      "post" : {
        "description" : "Gets all deployments for a remediation at management group scope.",
        "operationId" : "Remediations_ListDeploymentsAtManagementGroup",
        "parameters" : [ {
          "name" : "managementGroupsNamespace",
          "in" : "path",
          "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "Microsoft.Management" ]
          }
        }, {
          "name" : "managementGroupId",
          "in" : "path",
          "description" : "Management group ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationDeploymentsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations" : {
      "get" : {
        "description" : "Gets all remediations for the subscription.",
        "operationId" : "Remediations_ListForSubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}" : {
      "get" : {
        "description" : "Gets an existing remediation at subscription scope.",
        "operationId" : "Remediations_GetAtSubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Creates or updates a remediation at subscription scope.",
        "operationId" : "Remediations_CreateOrUpdateAtSubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The remediation parameters.",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Remediation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "201" : {
            "description" : "The created remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an existing remediation at subscription scope.",
        "operationId" : "Remediations_DeleteAtSubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "204" : {
            "description" : "The remediation did not exist."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel" : {
      "post" : {
        "description" : "Cancels a remediation at subscription scope.",
        "operationId" : "Remediations_CancelAtSubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The remediation that was canceled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments" : {
      "post" : {
        "description" : "Gets all deployments for a remediation at subscription scope.",
        "operationId" : "Remediations_ListDeploymentsAtSubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationDeploymentsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations" : {
      "get" : {
        "description" : "Gets all remediations for the subscription.",
        "operationId" : "Remediations_ListForResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}" : {
      "get" : {
        "description" : "Gets an existing remediation at resource group scope.",
        "operationId" : "Remediations_GetAtResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Creates or updates a remediation at resource group scope.",
        "operationId" : "Remediations_CreateOrUpdateAtResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The remediation parameters.",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Remediation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "201" : {
            "description" : "The created remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an existing remediation at resource group scope.",
        "operationId" : "Remediations_DeleteAtResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "204" : {
            "description" : "The remediation did not exist."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel" : {
      "post" : {
        "description" : "Cancels a remediation at resource group scope.",
        "operationId" : "Remediations_CancelAtResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The remediation that was canceled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments" : {
      "post" : {
        "description" : "Gets all deployments for a remediation at resource group scope.",
        "operationId" : "Remediations_ListDeploymentsAtResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "Resource group name.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationDeploymentsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations" : {
      "get" : {
        "description" : "Gets all remediations for a resource.",
        "operationId" : "Remediations_ListForResource",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "OData filter expression.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediations.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}" : {
      "get" : {
        "description" : "Gets an existing remediation at resource scope.",
        "operationId" : "Remediations_GetAtResource",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "description" : "Creates or updates a remediation at resource scope.",
        "operationId" : "Remediations_CreateOrUpdateAtResource",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The remediation parameters.",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Remediation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The updated remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "201" : {
            "description" : "The created remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "description" : "Deletes an existing remediation at individual resource scope.",
        "operationId" : "Remediations_DeleteAtResource",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The deleted remediation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "204" : {
            "description" : "The remediation did not exist."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel" : {
      "post" : {
        "description" : "Cancel a remediation at resource scope.",
        "operationId" : "Remediations_CancelAtResource",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The remediation that was canceled.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Remediation"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments" : {
      "post" : {
        "description" : "Gets all deployments for a remediation at resource scope.",
        "operationId" : "Remediations_ListDeploymentsAtResource",
        "parameters" : [ {
          "name" : "resourceId",
          "in" : "path",
          "description" : "Resource ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "remediationName",
          "in" : "path",
          "description" : "The name of the remediation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Maximum number of records to return.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The retrieved remediation deployments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationDeploymentsListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorDefinition" : {
        "type" : "object",
        "properties" : {
          "additionalInfo" : {
            "type" : "array",
            "description" : "Additional scenario specific error details.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/TypedErrorInfo"
            }
          },
          "code" : {
            "type" : "string",
            "description" : "Service specific error code which serves as the substatus for the HTTP error code.",
            "readOnly" : true
          },
          "details" : {
            "type" : "array",
            "description" : "Internal error details.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ErrorDefinition"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Description of the error.",
            "readOnly" : true
          },
          "target" : {
            "type" : "string",
            "description" : "The target of the error.",
            "readOnly" : true
          }
        },
        "description" : "Error definition."
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/ErrorDefinition"
          }
        },
        "description" : "Error response."
      },
      "Remediation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the remediation.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the remediation.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/RemediationProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the remediation.",
            "readOnly" : true
          }
        },
        "description" : "The remediation definition."
      },
      "RemediationDeployment" : {
        "type" : "object",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "description" : "The time at which the remediation was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "deploymentId" : {
            "type" : "string",
            "description" : "Resource ID of the template deployment that will remediate the resource.",
            "readOnly" : true
          },
          "error" : {
            "$ref" : "#/components/schemas/ErrorDefinition"
          },
          "lastUpdatedOn" : {
            "type" : "string",
            "description" : "The time at which the remediation deployment was last updated.",
            "format" : "date-time",
            "readOnly" : true
          },
          "remediatedResourceId" : {
            "type" : "string",
            "description" : "Resource ID of the resource that is being remediated by the deployment.",
            "readOnly" : true
          },
          "resourceLocation" : {
            "type" : "string",
            "description" : "Location of the resource that is being remediated.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the remediation deployment.",
            "readOnly" : true
          }
        },
        "description" : "Details of a single deployment created by the remediation."
      },
      "RemediationDeploymentSummary" : {
        "type" : "object",
        "properties" : {
          "failedDeployments" : {
            "type" : "integer",
            "description" : "The number of deployments required by the remediation that have failed.",
            "readOnly" : true
          },
          "successfulDeployments" : {
            "type" : "integer",
            "description" : "The number of deployments required by the remediation that have succeeded.",
            "readOnly" : true
          },
          "totalDeployments" : {
            "type" : "integer",
            "description" : "The number of deployments required by the remediation.",
            "readOnly" : true
          }
        },
        "description" : "The deployment status summary for all deployments created by the remediation."
      },
      "RemediationDeploymentsListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of deployments for the remediation.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RemediationDeployment"
            }
          }
        },
        "description" : "List of deployments for a remediation."
      },
      "RemediationFilters" : {
        "type" : "object",
        "properties" : {
          "locations" : {
            "type" : "array",
            "description" : "The resource locations that will be remediated.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The filters that will be applied to determine which resources to remediate."
      },
      "RemediationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URL to get the next set of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of remediation definitions.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Remediation"
            }
          }
        },
        "description" : "List of remediations."
      },
      "RemediationProperties" : {
        "type" : "object",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "description" : "The time at which the remediation was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "deploymentStatus" : {
            "$ref" : "#/components/schemas/RemediationDeploymentSummary"
          },
          "filters" : {
            "$ref" : "#/components/schemas/RemediationFilters"
          },
          "lastUpdatedOn" : {
            "type" : "string",
            "description" : "The time at which the remediation was last updated.",
            "format" : "date-time",
            "readOnly" : true
          },
          "policyAssignmentId" : {
            "type" : "string",
            "description" : "The resource ID of the policy assignment that should be remediated."
          },
          "policyDefinitionReferenceId" : {
            "type" : "string",
            "description" : "The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The status of the remediation.",
            "readOnly" : true
          },
          "resourceDiscoveryMode" : {
            "type" : "string",
            "description" : "The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.",
            "enum" : [ "ExistingNonCompliant", "ReEvaluateCompliance" ]
          }
        },
        "description" : "The remediation properties."
      },
      "TypedErrorInfo" : {
        "type" : "object",
        "properties" : {
          "info" : {
            "type" : "object",
            "description" : "The scenario specific error details.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of included error details.",
            "readOnly" : true
          }
        },
        "description" : "Scenario specific error details."
      }
    },
    "parameters" : {
      "apiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client Api Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "filterParameter" : {
        "name" : "$filter",
        "in" : "query",
        "description" : "OData filter expression.",
        "schema" : {
          "type" : "string"
        }
      },
      "managementGroupIdParameter" : {
        "name" : "managementGroupId",
        "in" : "path",
        "description" : "Management group ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "managementGroupsNamespaceParameter" : {
        "name" : "managementGroupsNamespace",
        "in" : "path",
        "description" : "The namespace for Microsoft Management RP; only \"Microsoft.Management\" is allowed.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "Microsoft.Management" ]
        }
      },
      "remediationNameParameter" : {
        "name" : "remediationName",
        "in" : "path",
        "description" : "The name of the remediation.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "Resource group name.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceIdParameter" : {
        "name" : "resourceId",
        "in" : "path",
        "description" : "Resource ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Microsoft Azure subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "topParameter" : {
        "name" : "$top",
        "in" : "query",
        "description" : "Maximum number of records to return.",
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}