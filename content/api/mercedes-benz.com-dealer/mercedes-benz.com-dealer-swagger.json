{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Dealer",
    "description" : "The Dealer API provides Dealer search functions.",
    "contact" : {
      "name" : "The open API platform by Mercedes-Benz"
    },
    "version" : "1.0"
  },
  "servers" : [ {
    "url" : "https://api.mercedes-benz.com/dealer_tryout/v1"
  } ],
  "tags" : [ {
    "name" : "Dealer search",
    "description" : "Resources that provide search functions for dealers (dealer, garage, retailer, etc.) based on given attributes."
  }, {
    "name" : "References",
    "description" : "Reference data that is required for the Dealer API."
  } ],
  "paths" : {
    "/countries" : {
      "get" : {
        "tags" : [ "References" ],
        "description" : "This request returns the countries supported by the Dealer API",
        "operationId" : "countriesGET",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The index of the page to be returned. If this parameter is omitted, the first page will be returned.\n",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The index of the page to be returned. If this parameter is omitted, the first page will be returned.\n",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HalifiedCountries"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid parameter was specified:\n * Page is not valid\n * Page size is not valid"
          },
          "401" : {
            "description" : "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key"
          },
          "429" : {
            "description" : "Quota limit is exceeded"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/dealers" : {
      "get" : {
        "tags" : [ "Dealer search" ],
        "description" : "This request returns dealers (dealer, garage, retailer, etc.) for given parameters",
        "operationId" : "dealersGET",
        "parameters" : [ {
          "name" : "dealerIds",
          "in" : "query",
          "description" : "Array of dealer ids. The dealer id is dealer’s business key, also known as GS Id. e.g. GS0000857,GS0017621\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "latitude",
          "in" : "query",
          "description" : "The latitude geo coordinate.",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "longitude",
          "in" : "query",
          "description" : "The longitude geo coordinate.",
          "schema" : {
            "type" : "number"
          }
        }, {
          "name" : "radiusValue",
          "in" : "query",
          "description" : "The radius value of the search area. The center of the search area is defined by geo coordinates. (latitude, longitude properties) If radiusValue and radiusUnit parameters are missing, then the default radius is 10 km.",
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "radiusUnit",
          "in" : "query",
          "description" : "The radius unit of the search area. The center of the search area is defined by geo coordinates. (latitude, longitude properties) If radiusValue and radiusUnit parameters are missing, then the default radius is 10 km.",
          "schema" : {
            "type" : "string",
            "default" : "KM",
            "enum" : [ "M", "KM", "MILE" ]
          }
        }, {
          "name" : "countryIsoCode",
          "in" : "query",
          "description" : "The country of the dealer address defined as ISO two letter ID (e.g. DE, CH, CN, etc.)",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "city",
          "in" : "query",
          "description" : "The city of the dealer address.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A name of the dealer, the name filter will be applied to all Dealer names (e.g. legalName, nameAddition). You can also search for parts of Dealer names, e.g. the search term 'Niederlassung' will also match 'Niederlassung Stuttgart'.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "brand",
          "in" : "query",
          "description" : "Filter by brand, valid values are:\n  * MB: Mercedes-Benz\n  * SMT: Smart",
          "schema" : {
            "type" : "string",
            "enum" : [ "MB", "SMT" ]
          }
        }, {
          "name" : "productGroup",
          "in" : "query",
          "description" : "Filter by a product group",
          "schema" : {
            "type" : "string",
            "enum" : [ "PASSENGER-CAR", "VAN" ]
          }
        }, {
          "name" : "activity",
          "in" : "query",
          "description" : "Filter by activity, valid actitvity values are:\n  * PARTS: Spare Parts Sales\n  * SALES: Sales of new vehicles\n  * SERVICE: Maintaining and repair\n  * USED-VEHICLES-TRADE: Sales of used vehicles",
          "schema" : {
            "type" : "string",
            "enum" : [ "PARTS", "SALES", "SERVICE", "USED-VEHICLES-TRADE" ]
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. e.g. fields=dealers(dealerId,address(street,city))",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The index of the page to be returned. If this parameter is omitted, the first page will be returned.\n",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The index of the page to be returned. If this parameter is omitted, the first page will be returned.\n",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HalifiedDealers"
                }
              }
            }
          },
          "204" : {
            "description" : "The search did not match any dealers."
          },
          "400" : {
            "description" : "Invalid parameter was specified:\n * DealerId is not valid\n * Area search is not valid (latitude or longitude missing or invalid)\n * Country ISO code is not valid\n * Brand code is not valid\n * Product group is not valid\n * Activity is not valid\n * Page is not valid\n * Page size is not valid"
          },
          "401" : {
            "description" : "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key"
          },
          "429" : {
            "description" : "Quota limit is exceeded"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/dealers/{dealerId}" : {
      "get" : {
        "tags" : [ "Dealer search" ],
        "description" : "This request returns dealers for given parameters",
        "operationId" : "dealerGET",
        "parameters" : [ {
          "name" : "dealerId",
          "in" : "path",
          "description" : "The dealer id is dealer’s business key, also known as GS Id. e.g. GS0000857",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "GS0000275"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. e.g. fields=dealerId,address(street,city)",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Dealer"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid format for parameter dealerId was specified"
          },
          "401" : {
            "description" : "Unauthorized:\n  * Failed to resolve API Key query parameter\n  * Invalid API Key"
          },
          "404" : {
            "description" : "Dealer not found"
          },
          "429" : {
            "description" : "Quota limit is exceeded"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ActivityOfAFunction" : {
        "required" : [ "code", "name" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The activity of the dealer, valid actitvity values are:\n  * PARTS: Spare Parts Sales\n  * SALES: Sales of new vehicles\n  * SERVICE: Maintaining and repair\n  * USED-VEHICLES-TRADE: Sales of used vehicles"
          },
          "name" : {
            "type" : "string",
            "description" : "the corresponding activity name"
          }
        }
      },
      "Address" : {
        "type" : "object",
        "properties" : {
          "addressAddition" : {
            "type" : "string",
            "description" : "address addition"
          },
          "city" : {
            "type" : "string",
            "description" : "city"
          },
          "countryIsoCode" : {
            "type" : "string",
            "description" : "ISO A2 country code"
          },
          "district" : {
            "type" : "string",
            "description" : "district, area of city"
          },
          "street" : {
            "type" : "string",
            "description" : "street and house number, if applicable"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "postal code"
          }
        }
      },
      "Brand" : {
        "required" : [ "code", "name" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "brand qualifier"
          },
          "name" : {
            "type" : "string",
            "description" : "brand name"
          }
        }
      },
      "BrandCode" : {
        "required" : [ "brand" ],
        "type" : "object",
        "properties" : {
          "brand" : {
            "$ref" : "#/components/schemas/Brand"
          }
        }
      },
      "CommunicationChannels" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/General"
          }
        }
      },
      "Country" : {
        "required" : [ "countryId", "isoCode", "name" ],
        "type" : "object",
        "properties" : {
          "countryId" : {
            "type" : "string",
            "description" : "the country id"
          },
          "isoCode" : {
            "type" : "string",
            "description" : "the country iso code"
          },
          "name" : {
            "type" : "string",
            "description" : "the country name"
          }
        }
      },
      "Dealer" : {
        "required" : [ "_links", "dealerId", "legalName" ],
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/SelfLink"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "brandCodes" : {
            "type" : "array",
            "description" : "network brand codes of the dealer, dealer numbers",
            "items" : {
              "$ref" : "#/components/schemas/BrandCode"
            }
          },
          "communication" : {
            "$ref" : "#/components/schemas/CommunicationChannels"
          },
          "dealerId" : {
            "type" : "string",
            "description" : "GSSN unique ID, main identifier"
          },
          "distance" : {
            "$ref" : "#/components/schemas/TheDistance"
          },
          "functions" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "list of functions for the dealer",
            "items" : {
              "$ref" : "#/components/schemas/Function"
            }
          },
          "geoCoordinates" : {
            "$ref" : "#/components/schemas/GeoCoordinates"
          },
          "legalName" : {
            "type" : "string",
            "description" : "legal name of the company"
          },
          "nameAddition" : {
            "type" : "string",
            "description" : "name addition, country specific use"
          },
          "openingHours" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "List of opening hours for each customer relevant function for\neach day\n",
            "items" : {
              "$ref" : "#/components/schemas/FunctionOpeningHours"
            }
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionRepresentation"
          }
        },
        "description" : "the representation of an dealer"
      },
      "DefaultLinks" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/Link"
          },
          "previous" : {
            "$ref" : "#/components/schemas/Link"
          },
          "self" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "default links"
      },
      "Function" : {
        "required" : [ "activity", "brand", "productGroup" ],
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityOfAFunction"
          },
          "brand" : {
            "$ref" : "#/components/schemas/Brand"
          },
          "productGroup" : {
            "$ref" : "#/components/schemas/ProductGroupOfAFunction"
          }
        }
      },
      "FunctionOpeningHours" : {
        "type" : "object",
        "properties" : {
          "function" : {
            "$ref" : "#/components/schemas/Function"
          },
          "weekdays" : {
            "$ref" : "#/components/schemas/Weekdays"
          }
        }
      },
      "General" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "general email address"
          },
          "facebook" : {
            "type" : "string",
            "description" : "general facebook URL"
          },
          "fax" : {
            "type" : "string",
            "description" : "general fax number"
          },
          "googlePlus" : {
            "type" : "string",
            "description" : "general googlePlus account name"
          },
          "mobile" : {
            "type" : "string",
            "description" : "general mobile phone number"
          },
          "phone" : {
            "type" : "string",
            "description" : "general phone number"
          },
          "twitter" : {
            "type" : "string",
            "description" : "general twitter account name"
          },
          "website" : {
            "type" : "string",
            "description" : "general website"
          }
        }
      },
      "GeoCoordinates" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "description" : "latitude - in decimal degrees",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "description" : "longitude - in decimal degrees",
            "format" : "double"
          }
        }
      },
      "HalifiedCountries" : {
        "required" : [ "_links" ],
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/DefaultLinks"
          },
          "countries" : {
            "type" : "array",
            "description" : "countries",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            }
          }
        },
        "description" : "countries and navigation links for additional results."
      },
      "HalifiedDealers" : {
        "required" : [ "_links" ],
        "type" : "object",
        "properties" : {
          "_links" : {
            "$ref" : "#/components/schemas/DefaultLinks"
          },
          "dealers" : {
            "type" : "array",
            "description" : "dealers",
            "items" : {
              "$ref" : "#/components/schemas/Dealer"
            }
          }
        },
        "description" : "dealer with navigation links."
      },
      "Link" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "description" : "the target of the link"
          }
        },
        "description" : "the representation of a link"
      },
      "Periods" : {
        "required" : [ "from", "until" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "description" : "from"
          },
          "until" : {
            "type" : "string",
            "description" : "until"
          }
        }
      },
      "ProductGroupOfAFunction" : {
        "required" : [ "code", "name" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The product group code, valid values are:\n  * PASSENGER-CAR\n  * VAN"
          },
          "name" : {
            "type" : "string",
            "description" : "product group name"
          }
        }
      },
      "RegionRepresentation" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "string",
            "description" : "region"
          },
          "subRegion" : {
            "type" : "string",
            "description" : "subregion"
          }
        }
      },
      "SelfLink" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "$ref" : "#/components/schemas/Link"
          }
        },
        "description" : "self links"
      },
      "TheDistance" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "unit" : {
            "type" : "string",
            "description" : "unit of length",
            "enum" : [ "M", "KM", "MILE" ]
          },
          "value" : {
            "type" : "number",
            "description" : "numeric amount of distance",
            "format" : "double"
          }
        }
      },
      "WeekdayInfo" : {
        "type" : "object",
        "properties" : {
          "periods" : {
            "type" : "array",
            "description" : "time periods",
            "items" : {
              "$ref" : "#/components/schemas/Periods"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "status (OPEN or CLOSED)",
            "enum" : [ "OPEN", "CLOSED" ]
          }
        }
      },
      "Weekdays" : {
        "type" : "object",
        "properties" : {
          "FRIDAY" : {
            "$ref" : "#/components/schemas/WeekdayInfo"
          },
          "MONDAY" : {
            "$ref" : "#/components/schemas/WeekdayInfo"
          },
          "SATURDAY" : {
            "$ref" : "#/components/schemas/WeekdayInfo"
          },
          "SUNDAY" : {
            "$ref" : "#/components/schemas/WeekdayInfo"
          },
          "THURSDAY" : {
            "$ref" : "#/components/schemas/WeekdayInfo"
          },
          "TUESDAY" : {
            "$ref" : "#/components/schemas/WeekdayInfo"
          },
          "WEDNESDAY" : {
            "$ref" : "#/components/schemas/WeekdayInfo"
          }
        },
        "description" : "opening hours for a week, represented by a map where the key\nis a weekday and the value is an object containing the time periods. There\nare a maximum of two time slots for each day. If there exists no opening\nhours for one day, they will be shown as closed.\n"
      }
    },
    "parameters" : {
      "activity" : {
        "name" : "activity",
        "in" : "query",
        "description" : "Filter by activity, valid actitvity values are:\n  * PARTS: Spare Parts Sales\n  * SALES: Sales of new vehicles\n  * SERVICE: Maintaining and repair\n  * USED-VEHICLES-TRADE: Sales of used vehicles",
        "schema" : {
          "type" : "string",
          "enum" : [ "PARTS", "SALES", "SERVICE", "USED-VEHICLES-TRADE" ]
        }
      },
      "brand" : {
        "name" : "brand",
        "in" : "query",
        "description" : "Filter by brand, valid values are:\n  * MB: Mercedes-Benz\n  * SMT: Smart",
        "schema" : {
          "type" : "string",
          "enum" : [ "MB", "SMT" ]
        }
      },
      "city" : {
        "name" : "city",
        "in" : "query",
        "description" : "The city of the dealer address.",
        "schema" : {
          "type" : "string"
        }
      },
      "countryIsoCode" : {
        "name" : "countryIsoCode",
        "in" : "query",
        "description" : "The country of the dealer address defined as ISO two letter ID (e.g. DE, CH, CN, etc.)",
        "schema" : {
          "type" : "string"
        }
      },
      "dealerId" : {
        "name" : "dealerId",
        "in" : "path",
        "description" : "The dealer id is dealer’s business key, also known as GS Id. e.g. GS0000857",
        "required" : true,
        "schema" : {
          "type" : "string",
          "default" : "GS0000275"
        }
      },
      "dealerIds" : {
        "name" : "dealerIds",
        "in" : "query",
        "description" : "Array of dealer ids. The dealer id is dealer’s business key, also known as GS Id. e.g. GS0000857,GS0017621\n",
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "fieldsForDealer" : {
        "name" : "fields",
        "in" : "query",
        "description" : "Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. e.g. fields=dealerId,address(street,city)",
        "schema" : {
          "type" : "string"
        }
      },
      "fieldsForDealers" : {
        "name" : "fields",
        "in" : "query",
        "description" : "Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. e.g. fields=dealers(dealerId,address(street,city))",
        "schema" : {
          "type" : "string"
        }
      },
      "latitude" : {
        "name" : "latitude",
        "in" : "query",
        "description" : "The latitude geo coordinate.",
        "schema" : {
          "type" : "number"
        }
      },
      "legalName" : {
        "name" : "name",
        "in" : "query",
        "description" : "A name of the dealer, the name filter will be applied to all Dealer names (e.g. legalName, nameAddition). You can also search for parts of Dealer names, e.g. the search term 'Niederlassung' will also match 'Niederlassung Stuttgart'.",
        "schema" : {
          "type" : "string"
        }
      },
      "longitude" : {
        "name" : "longitude",
        "in" : "query",
        "description" : "The longitude geo coordinate.",
        "schema" : {
          "type" : "number"
        }
      },
      "page" : {
        "name" : "page",
        "in" : "query",
        "description" : "The index of the page to be returned. If this parameter is omitted, the first page will be returned.\n",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "pageSize" : {
        "name" : "pageSize",
        "in" : "query",
        "description" : "The index of the page to be returned. If this parameter is omitted, the first page will be returned.\n",
        "schema" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "productGroup" : {
        "name" : "productGroup",
        "in" : "query",
        "description" : "Filter by a product group",
        "schema" : {
          "type" : "string",
          "enum" : [ "PASSENGER-CAR", "VAN" ]
        }
      },
      "radiusUnit" : {
        "name" : "radiusUnit",
        "in" : "query",
        "description" : "The radius unit of the search area. The center of the search area is defined by geo coordinates. (latitude, longitude properties) If radiusValue and radiusUnit parameters are missing, then the default radius is 10 km.",
        "schema" : {
          "type" : "string",
          "default" : "KM",
          "enum" : [ "M", "KM", "MILE" ]
        }
      },
      "radiusValue" : {
        "name" : "radiusValue",
        "in" : "query",
        "description" : "The radius value of the search area. The center of the search area is defined by geo coordinates. (latitude, longitude properties) If radiusValue and radiusUnit parameters are missing, then the default radius is 10 km.",
        "schema" : {
          "type" : "integer",
          "default" : 10
        }
      }
    }
  }
}