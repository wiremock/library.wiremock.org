{
  "mappings" : [ {
    "id" : "8f965fbd-09b1-4f11-b22a-a25d562e7055",
    "name" : "Retrieves the consented UserInfo and other claims about the logged-in subject (e...",
    "request" : {
      "urlPath" : "/v1/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Danille Cartwright\",\n  \"user_sid\" : \"US75f8F1db290aB3ff293c136545A0c081\",\n  \"last_name\" : \"Cassin\",\n  \"first_name\" : \"Maurine\",\n  \"email\" : \"do3ru1pclm08bmp95zibl9going5wl8yrvw71eovqduzs8lp9smpo6m8in1w1436y4fpxj7mdymcw6dtwlujnchjd6jwnqrwuud0b4b1hhqsp0ke5d20hw9ccm905\",\n  \"url\" : \"https://web.example.mocklab.io/502946\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f965fbd-09b1-4f11-b22a-a25d562e7055",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:20.136752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserInfo",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The end-user's preferred email address.",
                "nullable" : true,
                "type" : "string"
              },
              "first_name" : {
                "description" : "The first name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The friendly name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "last_name" : {
                "description" : "The last name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "90e078f7-cc55-41ef-a1bd-9c289ba1c7b6",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"access_token\" : \"s1ddg2mkqukmmh4i66jd2d\",\n  \"access_token_expires_at\" : \"2022-11-16T05:33:34.136Z\",\n  \"refresh_token\" : \"zwxdcpltalf9w1hp90idybrr4xwrnfwrw71oamy1p87jccbmoiq0qmbkaxlvvihjr3ajrjpbz691sw42s25d8u2htu2t8sykw102yc1sc\",\n  \"refresh_token_expires_at\" : \"2022-04-06T01:23:17.136Z\",\n  \"id_token\" : \"60h6tod593b57u8c9ras14hug5tlz929l4gc3fdjl5cqvqnxkstqmt6wzg0fh8tv2yjwu3wjth6usl694z6hsmtjhawibue3yc4ii5z55vfp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90e078f7-cc55-41ef-a1bd-9c289ba1c7b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:20.136441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateToken",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "Token which carries the necessary information to access a Twilio resource directly.",
                "nullable" : true,
                "type" : "string"
              },
              "access_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id_token" : {
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "Token which carries the information necessary to get a new access token.",
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "6c2227ae-c39e-4ecc-b8ae-25260bc8701a",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/device/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"user_code\" : \"nrs1157krwfnrmnhbsao9ixhnrhlf\",\n  \"device_code\" : \"lvsdct3ivft1ezm0ths6qye8sf\",\n  \"interval\" : 3081382142448940437,\n  \"verification_uri_complete\" : \"ornw1u60izlwlau42t4pqq94dca4339kznxnqgam3382cr7ixvddcw4aaf6eurf3w52901x1o\",\n  \"verification_uri\" : \"https://web.example.mocklab.io/403729\",\n  \"expires_in\" : 5601363216890740431\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c2227ae-c39e-4ecc-b8ae-25260bc8701a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:20.13624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeviceCode",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "nullable" : true,
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiration time of the device_code and user_code in seconds.",
                "format" : "int64",
                "nullable" : true,
                "type" : "integer"
              },
              "interval" : {
                "description" : "The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.",
                "nullable" : true,
                "type" : "integer"
              },
              "user_code" : {
                "description" : "The verification code which end user uses to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri" : {
                "description" : "The URI that the end user visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri_complete" : {
                "description" : "The URI with user_code that the end-user alternatively visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "c5b2ca6b-a760-4b38-a2a7-9bdfbeeff738",
    "name" : "Fetches public JWKs",
    "request" : {
      "urlPath" : "/v1/certs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : { },\n  \"url\" : \"https://web.example.mocklab.io/230890\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5b2ca6b-a760-4b38-a2a7-9bdfbeeff738",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:20.135997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCerts",
          "schema" : {
            "properties" : {
              "keys" : {
                "description" : "A collection of certificates where are signed Twilio-issued tokens.",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "fc6d4865-ed8d-4376-b72e-199cb25599e9",
    "name" : "Fetch configuration details about the OpenID Connect Authorization Server",
    "request" : {
      "urlPath" : "/v1/.well-known/openid-configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response_type_supported\" : [ \"t2g2i0jwxlazpr45utkwfmp4kqk4qblab2r03wkgaysnhd3miv39zzd57fbyed7q0num883m11xfs48uv0pcgv0qopz62yhvqqw7iocjce0001w1s5io2k4zqvu1hysibamb843yuq2uydrwy6zq4j7d09q6k9ch\", \"e59aw9ai142dtczkwpqbp1ka56x8c0frmu8kqdxa3gnuzoe9u8j1x1f2kvoa5d5tzbyj7i1835bx1qnhbxqidg1ri0o4wlrkg1u3j490or3ef26smk1nu\", \"6l3l3d386awbw9cgt4iucey234pmxuo4t9yh\", \"b6bsw6wzysbbm5dwp8aadwz3fa4df8masomu72765i2381ndzjl24h2fvacqlc8foli1lp3o0pzirvmjmla6nc0lajkk2oaz3npbv18jncaofm8eyrpqx2dqz8y3u35b9iai55ibj9qpsmwngh7yl9197m5vh5ja\", \"j3sih7xupwjz44pl5e4187y8yr5unm6mp1qfcctdkyhewy2g6skjsm3jss7wndzch0fzu2m9rj34nxc4r222gbwdcfisybvc\", \"90homy3w722yct993pyatz30hbwpeq5olmbh2kkep7stfqr6fmssq5\", \"g7wk85gm6f4tz61f4d8wapexrulmxocmexelm2katld4xq8g06q0mmhynt4hw0ws5616ezzt31czqmv8nlq6089wr6012u7gx8t9qseb68xqkgjtwai079b0u5nz5whbh0xrdaslukw0qbb2doxzv72cdvnen988e5jkobdqdptu4njsfz6blwb38bysex6v0g1wlg\", \"hsl18mzlmi5jn8sdnkcd97e2ktfx0bh7o8ca43bn2pio68h6yxrlhq3zgkovj07ojxnnczfiub3lx0pj64yzb72dee6olwklxgsyoudavvsv20iyo66hiixdjc636imzbz8hppz1w0hk4d8cjrrl02auiao5ieji87nzdvskukhm3ulwrwxeo7l27oc0x1mp50\" ],\n  \"revocation_endpoint\" : \"wmqbr5jj7mk0tinlibttwckdjzxfdlyqpya1jfl91abby96vgkvg11r12mneb2mocsna2t6d3cc3mx3w20tpa96izld4fuyc9vmn7747f5cbbujosn2vsqwzg8jbplv5xblse8r02ka0u0qjpmawe16gbo9qov1bm\",\n  \"scopes_supported\" : [ \"lcn6wdnik2u5d3a0gb7gjshdbsx9s8hfbip36gf4ugk1yuwtsnnpgsucdb2rsa9k88pq3\", \"z0v26hfbmglh34a6zcfs50q40kx3d5btmbj6h1mo9dhmbztmgpk57mlpbfgqs3vq7rhyfyi9mjgz55p09xxd3urwvurjulw69f9au4q7mf5iw5uke39y6yfl4k0zf77td4rl96jccl2tkq90i3qd2\" ],\n  \"issuer\" : \"jni0wkvq6lotpxynwuuz8vwwy2hwxxp7vkfq0wkfsyig6mlf5vpxr0j0mya5f5m4rh803jez4w3c0m\",\n  \"subject_type_supported\" : [ \"ml9w424ghell2mpaqav9si22c7r20zi21zgfrijg\", \"pzx3gq0q32en5getf5jfa0jmkahuhtn1bxv8r423v8c7baja5yhviu9hr1m312xr4iu4gft96amzvfdeb4u97cqcs\", \"sqigjshz51nux4dv\" ],\n  \"url\" : \"https://web.example.mocklab.io/937909\",\n  \"authorization_endpoint\" : \"0kpk5cczpp0nb24l6wqhg17id8vonlbbyix3o5vl6f5e731orfhnv78pgn5157tref3xnqnq7cxfzo93wvf9crghjwo0y8f55c8sfqoyryskamqts9b7gpn6snkom8wtpfbqciy5ecfk2\",\n  \"userinfo_endpoint\" : \"qi8k0rbvxrw8jlsg7vcvhishbtsjng9j51ou2odacs0o2pt82v2cuh2ft446sfbb2zteovn1tt58yd1hagrqmxkcc0w91kfu1nrfvl4pil8x4se3u8ithagz49bpu218n\",\n  \"device_authorization_endpoint\" : \"40wed7m3np0l6llnvlhnrjb6pjrnwu5bnglrq1k56uvcw8vdomyb1vij9kgmmsvp32mquk0hwh7u41hrw20rhvwddpkeg2xl8p7w75u9oyox1meeo5knjjzfy72bdlxeny7hzo30yptyy1msvc2xfimrztz641ru0sfgsxxu3jj\",\n  \"claims_supported\" : [ \"3q3xgnm1pv4kl8karq6l2vez2faauy8p3gdpnu210gqs7n2e80dmpqjfb5kl983vzmhsjllb349cwgrs4avw67sr\", \"ltumruz7c2gfn0umtmfeyeap65wi0cd99g6kmojpjez6s7cpiyson7t8g9prog3ftlyvyeotgau2b33fmtwd0eov5x4jr9c3y0yfk8xl3l33d43lp59rrsgoe7ba7cp0r9qme6uvvyku8r9f\", \"6zpwd2fkdpb539mwaipheuwnia2vfst2pnpmayhlp451t84sfmmg6eroqpslbomrd4xw\", \"1trouh2j\", \"wvimnhb44bq08mbkamc9i5vv6i3mlygw85dbmnf2s9tfm2z1dygg6u0dofisey7y8h8gwc2mk6590iis6f62ngdc0qobdsj4fkfwojvtuoqq0u5vttvcjqrozndbdr6kqeh92ufagoj5g6v9hnpmkahbxportt5ih\", \"r6rtr7ap7t8o3fr9kw5i8rr1toqgdgtf2r9vvzengc4ju77kz03ypcnep14ps4bre155jdv9z36oihbm51hxct5o5mj7euj4zpmura8a5sabqolqqqmzlbdpd5u4e6zm548ba6og8g58r246rj2hjlztp8mmtragdo4yo4k0ekvkt\", \"mr4tqufbihn4ar\", \"76z9o6pu5jivr06muoouexgm32fj4qq2k9ojeuqy8vo3vxil630housyrmjp0w7hw185qrlungm8nvxmb8yye0z366xdks508xv5sdayazxhhvun5owbchj37k94ghj9m1y1zzpyy20uhl799h9i\" ],\n  \"id_token_signing_alg_values_supported\" : [ \"gi4z1wdfhkdla88k94sqw0o6w8ltg36mx5zz50wabrb4ky39ctc90308lq013qo1nw9qr39rjhd01zn2i7ke02gxlbxtjr7tub1a2nxmttq48jfe3uhhgdtcu6ksnw06\", \"u0c9n4oxhynmit08tu2vemo941gvubvz3me6y747sm4hdd2td0n819g3nb94udejcxnm1tuv8zqoydkcvphx98qa15v\", \"im1hmn2ag8o5htqqmfhu32fbi4t7v4qf6mz7jwzr3vggrpl52mvuxh7wb5tffxfsky2evf7l6r2ri4aezzh\", \"v67\", \"5c9xiocmegnqui63i1oo230i2blxk6yh93lq18gpgy2wud8enw89foo0tzgqvdx9vbmkh0xwc9wt4di9a6k1koc9rf1rp778h42j3wmyerwjc6w1oo8kzteb94\" ],\n  \"jwk_uri\" : \"https://web.example.mocklab.io/675441\",\n  \"token_endpoint\" : \"tpe9279so31tkeyam9xzx6mezzxjwdf9azk2qgnb9wtd2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc6d4865-ed8d-4376-b72e-199cb25599e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:20.135779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchOpenidDiscovery",
          "schema" : {
            "properties" : {
              "authorization_endpoint" : {
                "description" : "The endpoint that validates all authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "claims_supported" : {
                "description" : "A collection of claims supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "device_authorization_endpoint" : {
                "description" : "The endpoint that validates all device code related authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "id_token_signing_alg_values_supported" : {
                "description" : "A collection of JWS signing algorithms supported by authorization server to sign identity token.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "issuer" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "jwk_uri" : {
                "description" : "The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "response_type_supported" : {
                "description" : "A collection of response type supported by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "revocation_endpoint" : {
                "description" : "The endpoint used to revoke access or refresh tokens issued by the authorization server.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "scopes_supported" : {
                "description" : "A collection of scopes supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "subject_type_supported" : {
                "description" : "A collection of subject by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "token_endpoint" : {
                "description" : "The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "userinfo_endpoint" : {
                "description" : "The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}