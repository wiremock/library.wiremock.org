{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Greenwire Public API",
    "description" : "Greenpeace Greenwire allows you connect with other volunteers, activists and groups working on environmental campaigns all across the world!",
    "termsOfService" : "http://www.greenpeace.org/international/en/Help/copyright2/",
    "contact" : {
      "name" : "Greenpeace International contact",
      "url" : "http://www.greenpeace.org/international/en/about/contactus/"
    },
    "license" : {
      "name" : "MIT",
      "url" : "http://opensource.org/licenses/MIT"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://greenwire.greenpeace.org/api/public"
  } ],
  "paths" : {
    "/events" : {
      "get" : {
        "description" : "Return the upcoming events (e.g. start date >= today). Gets an array of `Event` object. Mandatory query param of **domain** determines the site / country the event belongs to.",
        "parameters" : [ {
          "name" : "domain",
          "in" : "query",
          "description" : "the site the groups belongs to, example: netherlands",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of desired records",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Event"
                      }
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderSuccess"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{UUID}" : {
      "get" : {
        "description" : "Get one `Event` object by specifying its UUID in the url path.",
        "parameters" : [ {
          "name" : "UUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Event"
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderSuccess"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object"
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups" : {
      "get" : {
        "description" : "Gets an array of `Group` object. Mandatory query param of **domain** determines the site / country the group belongs to.",
        "parameters" : [ {
          "name" : "domain",
          "in" : "query",
          "description" : "the site the groups belongs to, example: netherlands",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of desired records",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Group"
                      }
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderSuccess"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{UUID}" : {
      "get" : {
        "description" : "Get one `Group` object by specifying its UUID in the url path.",
        "parameters" : [ {
          "name" : "UUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "#/components/schemas/Group"
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderSuccess"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object"
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volunteers" : {
      "get" : {
        "description" : "Gets an array of `Volunteer` object. Mandatory query param of **domain** determines the site / country the volunteers are from.",
        "parameters" : [ {
          "name" : "domain",
          "in" : "query",
          "description" : "the site the users are registered on, example: netherlands",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "the number of desired records. Default is 5.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "must_have_default_avatar",
          "in" : "query",
          "description" : "1 or 0. filter on people that have the default avatar or not.",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Volunteer"
                      }
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderSuccess"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/volunteers/{UUID}" : {
      "get" : {
        "description" : "Get one specific `Volunteer` object by specifying its UUID in the url path.",
        "parameters" : [ {
          "name" : "UUID",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "$ref" : "#/components/schemas/Volunteer"
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderSuccess"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "body" : {
                      "type" : "object"
                    },
                    "header" : {
                      "$ref" : "#/components/schemas/HeaderError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Coordinates" : {
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "string",
            "description" : "Signed decimal format, example: 52.1234"
          },
          "longitude" : {
            "type" : "string",
            "description" : "Signed decimal format, example -77.022223"
          }
        }
      },
      "DateTime" : {
        "type" : "string",
        "description" : "The date in YYYY-MM-DD HH:MM:SS format, example: 2015-12-31 23:59:59"
      },
      "Event" : {
        "type" : "object",
        "properties" : {
          "created" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "description" : {
            "$ref" : "#/components/schemas/HTML"
          },
          "end_date" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupLite"
            }
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "modified" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "name" : {
            "type" : "string"
          },
          "organizers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VolunteerLite"
            }
          },
          "picture" : {
            "$ref" : "#/components/schemas/URL"
          },
          "serial" : {
            "$ref" : "#/components/schemas/Serial"
          },
          "start_date" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "uuid" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      },
      "Group" : {
        "type" : "object",
        "properties" : {
          "created" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "description" : {
            "$ref" : "#/components/schemas/HTML"
          },
          "group_type" : {
            "$ref" : "#/components/schemas/GroupType"
          },
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "mission" : {
            "type" : "string"
          },
          "modified" : {
            "$ref" : "#/components/schemas/DateTime"
          },
          "name" : {
            "type" : "string"
          },
          "picture" : {
            "$ref" : "#/components/schemas/URL"
          },
          "serial" : {
            "$ref" : "#/components/schemas/Serial"
          },
          "uuid" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      },
      "GroupLite" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "serial" : {
            "$ref" : "#/components/schemas/Serial"
          },
          "uuid" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      },
      "GroupType" : {
        "type" : "string",
        "enum" : [ "Country group", "Campaign Project group", "Local group", "Discussion group", "Interest group", "Skills-based group" ]
      },
      "HTML" : {
        "type" : "string",
        "description" : "A string containing sanitized HTML code"
      },
      "HTTP_Code" : {
        "type" : "string",
        "description" : "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"
      },
      "HTTP_Status" : {
        "type" : "integer",
        "description" : "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"
      },
      "HeaderError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/HTTP_Code"
          },
          "error" : {
            "type" : "string",
            "description" : "the error message"
          },
          "id" : {
            "type" : "integer",
            "description" : "transaction nonce"
          },
          "pagination" : {
            "type" : "object"
          },
          "resources" : {
            "$ref" : "#/components/schemas/ResourceType"
          },
          "status" : {
            "$ref" : "#/components/schemas/HTTP_Status"
          }
        }
      },
      "HeaderSuccess" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "$ref" : "#/components/schemas/HTTP_Code"
          },
          "id" : {
            "type" : "integer",
            "description" : "transaction nonce"
          },
          "pagination" : {
            "$ref" : "#/components/schemas/Pagination"
          },
          "resources" : {
            "$ref" : "#/components/schemas/ResourceType"
          },
          "status" : {
            "$ref" : "#/components/schemas/HTTP_Status"
          }
        }
      },
      "ISO_3166-1_alpha-2" : {
        "type" : "string",
        "description" : "Country code see. https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "city" : {
            "type" : "string"
          },
          "coordinates" : {
            "$ref" : "#/components/schemas/Coordinates"
          },
          "country" : {
            "type" : "string"
          },
          "postcode" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "streetname" : {
            "type" : "string"
          }
        }
      },
      "LocationSimple" : {
        "type" : "object",
        "properties" : {
          "country" : {
            "$ref" : "#/components/schemas/ISO_3166-1_alpha-2"
          }
        }
      },
      "Pagination" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "integer",
            "description" : "the nubmer of items per page"
          },
          "page" : {
            "type" : "integer",
            "description" : "the current page"
          },
          "total" : {
            "type" : "integer",
            "description" : "the total number of pages"
          }
        }
      },
      "ResourceType" : {
        "type" : "string",
        "description" : "The name of the requested object/model/resource. Plural if a collection.",
        "enum" : [ "group", "groups", "event", "events", "volunteer", "volunteers" ]
      },
      "Serial" : {
        "type" : "string",
        "description" : "The primary key in Drupal, e.g the entity/node id"
      },
      "URL" : {
        "type" : "string",
        "description" : "A resource location, example: https://greenwire.greenpeace.org"
      },
      "UUID" : {
        "type" : "string",
        "description" : "Universally unique identifier in canonical format, example: de305d54-75b4-431b-adb2-eb6b9e546014"
      },
      "Volunteer" : {
        "type" : "object",
        "properties" : {
          "avatar" : {
            "$ref" : "#/components/schemas/URL"
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationSimple"
            }
          },
          "uuid" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      },
      "VolunteerLite" : {
        "type" : "object",
        "properties" : {
          "serial" : {
            "$ref" : "#/components/schemas/Serial"
          },
          "uuid" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      }
    }
  }
}