{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "DevTestLabsClient",
    "description" : "The DevTest Labs Client.",
    "version" : "2018-09-15"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.DevTestLab/operations" : {
      "get" : {
        "tags" : [ "ProviderOperations" ],
        "description" : "Result of the request to list REST API operations",
        "operationId" : "ProviderOperations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProviderOperationResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs" : {
      "get" : {
        "tags" : [ "Labs" ],
        "description" : "List labs in a subscription.",
        "operationId" : "Labs_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/locations/{locationName}/operations/{name}" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Get operation.",
        "operationId" : "Operations_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locationName",
          "in" : "path",
          "description" : "The name of the location.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the operation.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationResult"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules" : {
      "get" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "List schedules in a subscription.",
        "operationId" : "GlobalSchedules_ListBySubscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs" : {
      "get" : {
        "tags" : [ "Labs" ],
        "description" : "List labs in a resource group.",
        "operationId" : "Labs_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources" : {
      "get" : {
        "tags" : [ "ArtifactSources" ],
        "description" : "List artifact sources in a given lab.",
        "operationId" : "ArtifactSources_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=displayName)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactSourceList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates" : {
      "get" : {
        "tags" : [ "ArmTemplates" ],
        "description" : "List azure resource manager templates in a given artifact source.",
        "operationId" : "ArmTemplates_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactSourceName",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=displayName)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArmTemplateList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates/{name}" : {
      "get" : {
        "tags" : [ "ArmTemplates" ],
        "description" : "Get azure resource manager template.",
        "operationId" : "ArmTemplates_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactSourceName",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the azure resource manager template.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=displayName)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArmTemplate"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts" : {
      "get" : {
        "tags" : [ "Artifacts" ],
        "description" : "List artifacts in a given artifact source.",
        "operationId" : "Artifacts_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactSourceName",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=title)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}" : {
      "get" : {
        "tags" : [ "Artifacts" ],
        "description" : "Get artifact.",
        "operationId" : "Artifacts_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactSourceName",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the artifact.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=title)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifact"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}/generateArmTemplate" : {
      "post" : {
        "tags" : [ "Artifacts" ],
        "description" : "Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.",
        "operationId" : "Artifacts_GenerateArmTemplate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactSourceName",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the artifact.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters for generating an ARM template for deploying artifacts.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateArmTemplateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArmTemplateInfo"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}" : {
      "get" : {
        "tags" : [ "ArtifactSources" ],
        "description" : "Get artifact source.",
        "operationId" : "ArtifactSources_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=displayName)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactSource"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ArtifactSources" ],
        "description" : "Create or replace an existing artifact source.",
        "operationId" : "ArtifactSources_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of an artifact source.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtifactSource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactSource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactSource"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ArtifactSources" ],
        "description" : "Delete artifact source.",
        "operationId" : "ArtifactSources_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ArtifactSources" ],
        "description" : "Allows modifying tags of artifact sources. All other properties will be ignored.",
        "operationId" : "ArtifactSources_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the artifact source.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of an artifact source.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArtifactSourceFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactSource"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}" : {
      "get" : {
        "tags" : [ "Costs" ],
        "description" : "Get cost.",
        "operationId" : "Costs_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the cost.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($expand=labCostDetails)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabCost"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Costs" ],
        "description" : "Create or replace an existing cost.",
        "operationId" : "Costs_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the cost.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A cost item.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LabCost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabCost"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabCost"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages" : {
      "get" : {
        "tags" : [ "CustomImages" ],
        "description" : "List custom images in a given lab.",
        "operationId" : "CustomImages_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=vm)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomImageList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}" : {
      "get" : {
        "tags" : [ "CustomImages" ],
        "description" : "Get custom image.",
        "operationId" : "CustomImages_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the custom image.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=vm)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomImage"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "CustomImages" ],
        "description" : "Create or replace an existing custom image. This operation can take a while to complete.",
        "operationId" : "CustomImages_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the custom image.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A custom image.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomImage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomImage"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomImage"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CustomImages" ],
        "description" : "Delete custom image. This operation can take a while to complete.",
        "operationId" : "CustomImages_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the custom image.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "CustomImages" ],
        "description" : "Allows modifying tags of custom images. All other properties will be ignored.",
        "operationId" : "CustomImages_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the custom image.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A custom image.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomImageFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomImage"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas" : {
      "get" : {
        "tags" : [ "Formulas" ],
        "description" : "List formulas in a given lab.",
        "operationId" : "Formulas_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=description)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FormulaList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}" : {
      "get" : {
        "tags" : [ "Formulas" ],
        "description" : "Get formula.",
        "operationId" : "Formulas_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the formula.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=description)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Formula"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Formulas" ],
        "description" : "Create or replace an existing formula. This operation can take a while to complete.",
        "operationId" : "Formulas_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the formula.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A formula for creating a VM, specifying an image base and other parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Formula"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Formula"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Formula"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Formulas" ],
        "description" : "Delete formula.",
        "operationId" : "Formulas_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the formula.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Formulas" ],
        "description" : "Allows modifying tags of formulas. All other properties will be ignored.",
        "operationId" : "Formulas_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the formula.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A formula for creating a VM, specifying an image base and other parameters",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormulaFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Formula"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/galleryimages" : {
      "get" : {
        "tags" : [ "GalleryImages" ],
        "description" : "List gallery images in a given lab.",
        "operationId" : "GalleryImages_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=author)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GalleryImageList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels" : {
      "get" : {
        "tags" : [ "NotificationChannels" ],
        "description" : "List notification channels in a given lab.",
        "operationId" : "NotificationChannels_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=webHookUrl)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationChannelList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}" : {
      "get" : {
        "tags" : [ "NotificationChannels" ],
        "description" : "Get notification channel.",
        "operationId" : "NotificationChannels_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the notification channel.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=webHookUrl)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationChannel"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "NotificationChannels" ],
        "description" : "Create or replace an existing notification channel.",
        "operationId" : "NotificationChannels_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the notification channel.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A notification.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationChannel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationChannel"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationChannel"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "NotificationChannels" ],
        "description" : "Delete notification channel.",
        "operationId" : "NotificationChannels_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the notification channel.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "NotificationChannels" ],
        "description" : "Allows modifying tags of notification channels. All other properties will be ignored.",
        "operationId" : "NotificationChannels_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the notification channel.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A notification.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationChannelFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationChannel"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}/notify" : {
      "post" : {
        "tags" : [ "NotificationChannels" ],
        "description" : "Send notification to provided channel.",
        "operationId" : "NotificationChannels_Notify",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the notification channel.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties for generating a Notification.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotifyParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{name}/evaluatePolicies" : {
      "post" : {
        "tags" : [ "PolicySets" ],
        "description" : "Evaluates lab policy.",
        "operationId" : "PolicySets_EvaluatePolicies",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the policy set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for evaluating a policy set.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EvaluatePoliciesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EvaluatePoliciesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies" : {
      "get" : {
        "tags" : [ "Policies" ],
        "description" : "List policies in a given policy set.",
        "operationId" : "Policies_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policySetName",
          "in" : "path",
          "description" : "The name of the policy set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=description)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}" : {
      "get" : {
        "tags" : [ "Policies" ],
        "description" : "Get policy.",
        "operationId" : "Policies_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policySetName",
          "in" : "path",
          "description" : "The name of the policy set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=description)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policies" ],
        "description" : "Create or replace an existing policy.",
        "operationId" : "Policies_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policySetName",
          "in" : "path",
          "description" : "The name of the policy set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A Policy.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policies" ],
        "description" : "Delete policy.",
        "operationId" : "Policies_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policySetName",
          "in" : "path",
          "description" : "The name of the policy set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Policies" ],
        "description" : "Allows modifying tags of policies. All other properties will be ignored.",
        "operationId" : "Policies_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "policySetName",
          "in" : "path",
          "description" : "The name of the policy set.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A Policy.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules" : {
      "get" : {
        "tags" : [ "Schedules" ],
        "description" : "List schedules in a given lab.",
        "operationId" : "Schedules_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}" : {
      "get" : {
        "tags" : [ "Schedules" ],
        "description" : "Get schedule.",
        "operationId" : "Schedules_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Schedules" ],
        "description" : "Create or replace an existing schedule.",
        "operationId" : "Schedules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Schedules" ],
        "description" : "Delete schedule.",
        "operationId" : "Schedules_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Schedules" ],
        "description" : "Allows modifying tags of schedules. All other properties will be ignored.",
        "operationId" : "Schedules_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute" : {
      "post" : {
        "tags" : [ "Schedules" ],
        "description" : "Execute a schedule. This operation can take a while to complete.",
        "operationId" : "Schedules_Execute",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/listApplicable" : {
      "post" : {
        "tags" : [ "Schedules" ],
        "description" : "Lists all applicable schedules",
        "operationId" : "Schedules_ListApplicable",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}" : {
      "get" : {
        "tags" : [ "ServiceRunners" ],
        "description" : "Get service runner.",
        "operationId" : "ServiceRunners_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service runner.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRunner"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ServiceRunners" ],
        "description" : "Create or replace an existing service runner.",
        "operationId" : "ServiceRunners_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service runner.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A container for a managed identity to execute DevTest lab services.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceRunner"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRunner"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceRunner"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ServiceRunners" ],
        "description" : "Delete service runner.",
        "operationId" : "ServiceRunners_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service runner.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "List user profiles in a given lab.",
        "operationId" : "Users_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=identity)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}" : {
      "get" : {
        "tags" : [ "Users" ],
        "description" : "Get user profile.",
        "operationId" : "Users_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=identity)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "description" : "Create or replace an existing user profile. This operation can take a while to complete.",
        "operationId" : "Users_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Profile of a lab user.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "description" : "Delete user profile. This operation can take a while to complete.",
        "operationId" : "Users_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "description" : "Allows modifying tags of user profiles. All other properties will be ignored.",
        "operationId" : "Users_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Profile of a lab user.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks" : {
      "get" : {
        "tags" : [ "Disks" ],
        "description" : "List disks in a given user profile.",
        "operationId" : "Disks_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=diskType)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiskList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}" : {
      "get" : {
        "tags" : [ "Disks" ],
        "description" : "Get disk.",
        "operationId" : "Disks_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the disk.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=diskType)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Disk"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Disks" ],
        "description" : "Create or replace an existing disk. This operation can take a while to complete.",
        "operationId" : "Disks_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the disk.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A Disk.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Disk"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Disk"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Disk"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Disks" ],
        "description" : "Delete disk. This operation can take a while to complete.",
        "operationId" : "Disks_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the disk.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Disks" ],
        "description" : "Allows modifying tags of disks. All other properties will be ignored.",
        "operationId" : "Disks_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the disk.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A Disk.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DiskFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Disk"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/attach" : {
      "post" : {
        "tags" : [ "Disks" ],
        "description" : "Attach and create the lease of the disk to the virtual machine. This operation can take a while to complete.",
        "operationId" : "Disks_Attach",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the disk.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of the disk to attach.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachDiskProperties"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/detach" : {
      "post" : {
        "tags" : [ "Disks" ],
        "description" : "Detach and break the lease of the disk attached to the virtual machine. This operation can take a while to complete.",
        "operationId" : "Disks_Detach",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the disk.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties of the disk to detach.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachDiskProperties"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments" : {
      "get" : {
        "tags" : [ "Environments" ],
        "description" : "List environments in a given user profile.",
        "operationId" : "Environments_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=deploymentProperties)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DtlEnvironmentList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}" : {
      "get" : {
        "tags" : [ "Environments" ],
        "description" : "Get environment.",
        "operationId" : "Environments_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=deploymentProperties)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DtlEnvironment"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Environments" ],
        "description" : "Create or replace an existing environment. This operation can take a while to complete.",
        "operationId" : "Environments_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "An environment, which is essentially an ARM template deployment.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DtlEnvironment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DtlEnvironment"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DtlEnvironment"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Environments" ],
        "description" : "Delete environment. This operation can take a while to complete.",
        "operationId" : "Environments_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Environments" ],
        "description" : "Allows modifying tags of environments. All other properties will be ignored.",
        "operationId" : "Environments_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the environment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "An environment, which is essentially an ARM template deployment.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DtlEnvironmentFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DtlEnvironment"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "description" : "List secrets in a given user profile.",
        "operationId" : "Secrets_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=value)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecretList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "description" : "Get secret.",
        "operationId" : "Secrets_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the secret.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=value)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Secrets" ],
        "description" : "Create or replace an existing secret. This operation can take a while to complete.",
        "operationId" : "Secrets_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the secret.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A secret.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Secret"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Secrets" ],
        "description" : "Delete secret.",
        "operationId" : "Secrets_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the secret.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Secrets" ],
        "description" : "Allows modifying tags of secrets. All other properties will be ignored.",
        "operationId" : "Secrets_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the secret.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A secret.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecretFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Secret"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics" : {
      "get" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "List service fabrics in a given user profile.",
        "operationId" : "ServiceFabrics_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($expand=applicableSchedule)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFabricList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}" : {
      "get" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "Get service fabric.",
        "operationId" : "ServiceFabrics_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($expand=applicableSchedule)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFabric"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "Create or replace an existing service fabric. This operation can take a while to complete.",
        "operationId" : "ServiceFabrics_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A Service Fabric.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceFabric"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFabric"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFabric"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "Delete service fabric. This operation can take a while to complete.",
        "operationId" : "ServiceFabrics_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "Allows modifying tags of service fabrics. All other properties will be ignored.",
        "operationId" : "ServiceFabrics_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A Service Fabric.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceFabricFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceFabric"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/listApplicableSchedules" : {
      "post" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "Lists the applicable start/stop schedules, if any.",
        "operationId" : "ServiceFabrics_ListApplicableSchedules",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicableSchedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/start" : {
      "post" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "Start a service fabric. This operation can take a while to complete.",
        "operationId" : "ServiceFabrics_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/stop" : {
      "post" : {
        "tags" : [ "ServiceFabrics" ],
        "description" : "Stop a service fabric This operation can take a while to complete.",
        "operationId" : "ServiceFabrics_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules" : {
      "get" : {
        "tags" : [ "ServiceFabricSchedules" ],
        "description" : "List schedules in a given service fabric.",
        "operationId" : "ServiceFabricSchedules_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceFabricName",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/{name}" : {
      "get" : {
        "tags" : [ "ServiceFabricSchedules" ],
        "description" : "Get schedule.",
        "operationId" : "ServiceFabricSchedules_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceFabricName",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ServiceFabricSchedules" ],
        "description" : "Create or replace an existing schedule.",
        "operationId" : "ServiceFabricSchedules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceFabricName",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ServiceFabricSchedules" ],
        "description" : "Delete schedule.",
        "operationId" : "ServiceFabricSchedules_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceFabricName",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ServiceFabricSchedules" ],
        "description" : "Allows modifying tags of schedules. All other properties will be ignored.",
        "operationId" : "ServiceFabricSchedules_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceFabricName",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/{name}/execute" : {
      "post" : {
        "tags" : [ "ServiceFabricSchedules" ],
        "description" : "Execute a schedule. This operation can take a while to complete.",
        "operationId" : "ServiceFabricSchedules_Execute",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userName",
          "in" : "path",
          "description" : "The name of the user profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceFabricName",
          "in" : "path",
          "description" : "The name of the service fabric.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines" : {
      "get" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "List virtual machines in a given lab.",
        "operationId" : "VirtualMachines_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabVirtualMachineList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}" : {
      "get" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Get virtual machine.",
        "operationId" : "VirtualMachines_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabVirtualMachine"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Create or replace an existing virtual machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A virtual machine.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LabVirtualMachine"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabVirtualMachine"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabVirtualMachine"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Delete virtual machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Allows modifying tags of virtual machines. All other properties will be ignored.",
        "operationId" : "VirtualMachines_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A virtual machine.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LabVirtualMachineFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabVirtualMachine"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/addDataDisk" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Attach a new or existing data disk to virtual machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_AddDataDisk",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for adding a new or existing data disk to a virtual machine.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DataDiskProperties"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Apply artifacts to virtual machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_ApplyArtifacts",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for applying artifacts to a virtual machine.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApplyArtifactsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/claim" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Take ownership of an existing virtual machine This operation can take a while to complete.",
        "operationId" : "VirtualMachines_Claim",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/detachDataDisk" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Detach the specified disk from the virtual machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_DetachDataDisk",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for detaching data disk from a virtual machine.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachDataDiskProperties"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/getRdpFileContents" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Gets a string that represents the contents of the RDP file for the virtual machine",
        "operationId" : "VirtualMachines_GetRdpFileContents",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RdpConnection"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/listApplicableSchedules" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Lists the applicable start/stop schedules, if any.",
        "operationId" : "VirtualMachines_ListApplicableSchedules",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApplicableSchedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/redeploy" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Redeploy a virtual machine This operation can take a while to complete.",
        "operationId" : "VirtualMachines_Redeploy",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/resize" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Resize Virtual Machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_Resize",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for resizing a virtual machine.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ResizeLabVirtualMachineProperties"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/restart" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Restart a virtual machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_Restart",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Start a virtual machine. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_Start",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Stop a virtual machine This operation can take a while to complete.",
        "operationId" : "VirtualMachines_Stop",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/transferDisks" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Transfers all data disks attached to the virtual machine to be owned by the current user. This operation can take a while to complete.",
        "operationId" : "VirtualMachines_TransferDisks",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/unClaim" : {
      "post" : {
        "tags" : [ "VirtualMachines" ],
        "description" : "Release ownership of an existing virtual machine This operation can take a while to complete.",
        "operationId" : "VirtualMachines_UnClaim",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules" : {
      "get" : {
        "tags" : [ "VirtualMachineSchedules" ],
        "description" : "List schedules in a given virtual machine.",
        "operationId" : "VirtualMachineSchedules_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}" : {
      "get" : {
        "tags" : [ "VirtualMachineSchedules" ],
        "description" : "Get schedule.",
        "operationId" : "VirtualMachineSchedules_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VirtualMachineSchedules" ],
        "description" : "Create or replace an existing schedule.",
        "operationId" : "VirtualMachineSchedules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "VirtualMachineSchedules" ],
        "description" : "Delete schedule.",
        "operationId" : "VirtualMachineSchedules_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "VirtualMachineSchedules" ],
        "description" : "Allows modifying tags of schedules. All other properties will be ignored.",
        "operationId" : "VirtualMachineSchedules_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/execute" : {
      "post" : {
        "tags" : [ "VirtualMachineSchedules" ],
        "description" : "Execute a schedule. This operation can take a while to complete.",
        "operationId" : "VirtualMachineSchedules_Execute",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "virtualMachineName",
          "in" : "path",
          "description" : "The name of the virtual machine.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks" : {
      "get" : {
        "tags" : [ "VirtualNetworks" ],
        "description" : "List virtual networks in a given lab.",
        "operationId" : "VirtualNetworks_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($expand=externalSubnets)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetworkList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}" : {
      "get" : {
        "tags" : [ "VirtualNetworks" ],
        "description" : "Get virtual network.",
        "operationId" : "VirtualNetworks_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual network.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($expand=externalSubnets)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetwork"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "VirtualNetworks" ],
        "description" : "Create or replace an existing virtual network. This operation can take a while to complete.",
        "operationId" : "VirtualNetworks_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual network.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A virtual network.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VirtualNetwork"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetwork"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetwork"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "VirtualNetworks" ],
        "description" : "Delete virtual network. This operation can take a while to complete.",
        "operationId" : "VirtualNetworks_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual network.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "VirtualNetworks" ],
        "description" : "Allows modifying tags of virtual networks. All other properties will be ignored.",
        "operationId" : "VirtualNetworks_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "labName",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the virtual network.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A virtual network.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VirtualNetworkFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualNetwork"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}" : {
      "get" : {
        "tags" : [ "Labs" ],
        "description" : "Get lab.",
        "operationId" : "Labs_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lab"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Labs" ],
        "description" : "Create or replace an existing lab. This operation can take a while to complete.",
        "operationId" : "Labs_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A lab.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Lab"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lab"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lab"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Labs" ],
        "description" : "Delete lab. This operation can take a while to complete.",
        "operationId" : "Labs_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Labs" ],
        "description" : "Allows modifying tags of labs. All other properties will be ignored.",
        "operationId" : "Labs_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A lab.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LabFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Lab"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm" : {
      "post" : {
        "tags" : [ "Labs" ],
        "description" : "Claim a random claimable virtual machine in the lab. This operation can take a while to complete.",
        "operationId" : "Labs_ClaimAnyVm",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment" : {
      "post" : {
        "tags" : [ "Labs" ],
        "description" : "Create virtual machines in a lab. This operation can take a while to complete.",
        "operationId" : "Labs_CreateEnvironment",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties for creating a virtual machine.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LabVirtualMachineCreationParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage" : {
      "post" : {
        "tags" : [ "Labs" ],
        "description" : "Exports the lab resource usage into a storage account This operation can take a while to complete.",
        "operationId" : "Labs_ExportResourceUsage",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters of the export operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportResourceUsageParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/generateUploadUri" : {
      "post" : {
        "tags" : [ "Labs" ],
        "description" : "Generate a URI for uploading custom disk images to a Lab.",
        "operationId" : "Labs_GenerateUploadUri",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties for generating an upload URI.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GenerateUploadUriParameter"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GenerateUploadUriResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/importVirtualMachine" : {
      "post" : {
        "tags" : [ "Labs" ],
        "description" : "Import a virtual machine into a different lab. This operation can take a while to complete.",
        "operationId" : "Labs_ImportVirtualMachine",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "This represents the payload required to import a virtual machine from a different lab into the current one",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportLabVirtualMachineRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/listVhds" : {
      "post" : {
        "tags" : [ "Labs" ],
        "description" : "List disk images available for custom image creation.",
        "operationId" : "Labs_ListVhds",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the lab.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LabVhdList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules" : {
      "get" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "List schedules in a resource group.",
        "operationId" : "GlobalSchedules_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "The maximum number of resources to return from the operation. Example: '$top=10'",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$orderby",
          "in" : "query",
          "description" : "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleList"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}" : {
      "get" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "Get schedule.",
        "operationId" : "GlobalSchedules_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$expand",
          "in" : "query",
          "description" : "Specify the $expand query. Example: 'properties($select=status)'",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "Create or replace an existing schedule.",
        "operationId" : "GlobalSchedules_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "Delete schedule.",
        "operationId" : "GlobalSchedules_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "Allows modifying tags of schedules. All other properties will be ignored.",
        "operationId" : "GlobalSchedules_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "A schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleFragment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule"
                }
              }
            }
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/execute" : {
      "post" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "Execute a schedule. This operation can take a while to complete.",
        "operationId" : "GlobalSchedules_Execute",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/retarget" : {
      "post" : {
        "tags" : [ "GlobalSchedules" ],
        "description" : "Updates a schedule's target resource Id. This operation can take a while to complete.",
        "operationId" : "GlobalSchedules_Retarget",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the schedule.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client API version.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "2018-09-15"
          }
        } ],
        "requestBody" : {
          "description" : "Properties for retargeting a virtual machine schedule.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RetargetScheduleProperties"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "202" : {
            "description" : "Accepted"
          },
          "default" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CloudError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApplicableSchedule" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApplicableScheduleProperties"
          }
        },
        "description" : "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ApplicableScheduleFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ApplicableSchedulePropertiesFragment"
          }
        },
        "description" : "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "ApplicableScheduleProperties" : {
        "type" : "object",
        "properties" : {
          "labVmsShutdown" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "labVmsStartup" : {
            "$ref" : "#/components/schemas/Schedule"
          }
        },
        "description" : "Properties of a schedules applicable to a virtual machine."
      },
      "ApplicableSchedulePropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "labVmsShutdown" : {
            "$ref" : "#/components/schemas/ScheduleFragment"
          },
          "labVmsStartup" : {
            "$ref" : "#/components/schemas/ScheduleFragment"
          }
        },
        "description" : "Properties of a schedules applicable to a virtual machine."
      },
      "ApplyArtifactsRequest" : {
        "type" : "object",
        "properties" : {
          "artifacts" : {
            "type" : "array",
            "description" : "The list of artifacts to apply.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactInstallProperties"
            }
          }
        },
        "description" : "Request body for applying artifacts to a virtual machine."
      },
      "ArmTemplate" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ArmTemplateProperties"
          }
        },
        "description" : "An Azure Resource Manager template.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ArmTemplateInfo" : {
        "type" : "object",
        "properties" : {
          "parameters" : {
            "type" : "object",
            "description" : "The parameters of the ARM template."
          },
          "template" : {
            "type" : "object",
            "description" : "The template's contents."
          }
        },
        "description" : "Information about a generated ARM template."
      },
      "ArmTemplateList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/ArmTemplate"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "ArmTemplateParameterProperties" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the template parameter."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the template parameter."
          }
        },
        "description" : "Properties of an Azure Resource Manager template parameter."
      },
      "ArmTemplateParameterPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the template parameter."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the template parameter."
          }
        },
        "description" : "Properties of an Azure Resource Manager template parameter."
      },
      "ArmTemplateProperties" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "type" : "object",
            "description" : "The contents of the ARM template.",
            "readOnly" : true
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the armTemplate.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the ARM template.",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The display name of the ARM template.",
            "readOnly" : true
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Whether or not ARM template is enabled for use by lab user.",
            "readOnly" : true
          },
          "icon" : {
            "type" : "string",
            "description" : "The URI to the icon of the ARM template.",
            "readOnly" : true
          },
          "parametersValueFilesInfo" : {
            "type" : "array",
            "description" : "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ParametersValueFileInfo"
            }
          },
          "publisher" : {
            "type" : "string",
            "description" : "The publisher of the ARM template.",
            "readOnly" : true
          }
        },
        "description" : "Properties of an Azure Resource Manager template."
      },
      "Artifact" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ArtifactProperties"
          }
        },
        "description" : "An artifact.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ArtifactDeploymentStatusProperties" : {
        "type" : "object",
        "properties" : {
          "artifactsApplied" : {
            "type" : "integer",
            "description" : "The total count of the artifacts that were successfully applied.",
            "format" : "int32"
          },
          "deploymentStatus" : {
            "type" : "string",
            "description" : "The deployment status of the artifact."
          },
          "totalArtifacts" : {
            "type" : "integer",
            "description" : "The total count of the artifacts that were tentatively applied.",
            "format" : "int32"
          }
        },
        "description" : "Properties of an artifact deployment."
      },
      "ArtifactDeploymentStatusPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "artifactsApplied" : {
            "type" : "integer",
            "description" : "The total count of the artifacts that were successfully applied.",
            "format" : "int32"
          },
          "deploymentStatus" : {
            "type" : "string",
            "description" : "The deployment status of the artifact."
          },
          "totalArtifacts" : {
            "type" : "integer",
            "description" : "The total count of the artifacts that were tentatively applied.",
            "format" : "int32"
          }
        },
        "description" : "Properties of an artifact deployment."
      },
      "ArtifactInstallProperties" : {
        "type" : "object",
        "properties" : {
          "artifactId" : {
            "type" : "string",
            "description" : "The artifact's identifier."
          },
          "artifactTitle" : {
            "type" : "string",
            "description" : "The artifact's title."
          },
          "deploymentStatusMessage" : {
            "type" : "string",
            "description" : "The status message from the deployment."
          },
          "installTime" : {
            "type" : "string",
            "description" : "The time that the artifact starts to install on the virtual machine.",
            "format" : "date-time"
          },
          "parameters" : {
            "type" : "array",
            "description" : "The parameters of the artifact.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactParameterProperties"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the artifact."
          },
          "vmExtensionStatusMessage" : {
            "type" : "string",
            "description" : "The status message from the virtual machine extension."
          }
        },
        "description" : "Properties of an artifact."
      },
      "ArtifactInstallPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "artifactId" : {
            "type" : "string",
            "description" : "The artifact's identifier."
          },
          "artifactTitle" : {
            "type" : "string",
            "description" : "The artifact's title."
          },
          "deploymentStatusMessage" : {
            "type" : "string",
            "description" : "The status message from the deployment."
          },
          "installTime" : {
            "type" : "string",
            "description" : "The time that the artifact starts to install on the virtual machine.",
            "format" : "date-time"
          },
          "parameters" : {
            "type" : "array",
            "description" : "The parameters of the artifact.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactParameterPropertiesFragment"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the artifact."
          },
          "vmExtensionStatusMessage" : {
            "type" : "string",
            "description" : "The status message from the virtual machine extension."
          }
        },
        "description" : "Properties of an artifact."
      },
      "ArtifactList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "ArtifactParameterProperties" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the artifact parameter."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the artifact parameter."
          }
        },
        "description" : "Properties of an artifact parameter."
      },
      "ArtifactParameterPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the artifact parameter."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the artifact parameter."
          }
        },
        "description" : "Properties of an artifact parameter."
      },
      "ArtifactProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The artifact's creation date.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The artifact's description.",
            "readOnly" : true
          },
          "filePath" : {
            "type" : "string",
            "description" : "The file path to the artifact.",
            "readOnly" : true
          },
          "icon" : {
            "type" : "string",
            "description" : "The URI to the artifact icon.",
            "readOnly" : true
          },
          "parameters" : {
            "type" : "object",
            "description" : "The artifact's parameters.",
            "readOnly" : true
          },
          "publisher" : {
            "type" : "string",
            "description" : "The artifact's publisher.",
            "readOnly" : true
          },
          "targetOsType" : {
            "type" : "string",
            "description" : "The artifact's target OS.",
            "readOnly" : true
          },
          "title" : {
            "type" : "string",
            "description" : "The artifact's title.",
            "readOnly" : true
          }
        },
        "description" : "Properties of an artifact."
      },
      "ArtifactSource" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ArtifactSourceProperties"
          }
        },
        "description" : "Properties of an artifact source.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ArtifactSourceFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ArtifactSourcePropertiesFragment"
          }
        },
        "description" : "Properties of an artifact source.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "ArtifactSourceList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactSource"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "ArtifactSourceProperties" : {
        "type" : "object",
        "properties" : {
          "armTemplateFolderPath" : {
            "type" : "string",
            "description" : "The folder containing Azure Resource Manager templates."
          },
          "branchRef" : {
            "type" : "string",
            "description" : "The artifact source's branch reference."
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The artifact source's creation date.",
            "format" : "date-time",
            "readOnly" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "The artifact source's display name."
          },
          "folderPath" : {
            "type" : "string",
            "description" : "The folder containing artifacts."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "securityToken" : {
            "type" : "string",
            "description" : "The security token to authenticate to the artifact source."
          },
          "sourceType" : {
            "type" : "string",
            "description" : "The artifact source's type.",
            "enum" : [ "VsoGit", "GitHub" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "uri" : {
            "type" : "string",
            "description" : "The artifact source's URI."
          }
        },
        "description" : "Properties of an artifact source."
      },
      "ArtifactSourcePropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "armTemplateFolderPath" : {
            "type" : "string",
            "description" : "The folder containing Azure Resource Manager templates."
          },
          "branchRef" : {
            "type" : "string",
            "description" : "The artifact source's branch reference."
          },
          "displayName" : {
            "type" : "string",
            "description" : "The artifact source's display name."
          },
          "folderPath" : {
            "type" : "string",
            "description" : "The folder containing artifacts."
          },
          "securityToken" : {
            "type" : "string",
            "description" : "The security token to authenticate to the artifact source."
          },
          "sourceType" : {
            "type" : "string",
            "description" : "The artifact source's type.",
            "enum" : [ "VsoGit", "GitHub" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "uri" : {
            "type" : "string",
            "description" : "The artifact source's URI."
          }
        },
        "description" : "Properties of an artifact source."
      },
      "AttachDiskProperties" : {
        "type" : "object",
        "properties" : {
          "leasedByLabVmId" : {
            "type" : "string",
            "description" : "The resource ID of the Lab virtual machine to which the disk is attached."
          }
        },
        "description" : "Properties of the disk to attach."
      },
      "AttachNewDataDiskOptions" : {
        "type" : "object",
        "properties" : {
          "diskName" : {
            "type" : "string",
            "description" : "The name of the disk to be attached."
          },
          "diskSizeGiB" : {
            "type" : "integer",
            "description" : "Size of the disk to be attached in GibiBytes.",
            "format" : "int32"
          },
          "diskType" : {
            "type" : "string",
            "description" : "The storage type for the disk (i.e. Standard, Premium).",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          }
        },
        "description" : "Properties to attach new disk to the Virtual Machine."
      },
      "AttachNewDataDiskOptionsFragment" : {
        "type" : "object",
        "properties" : {
          "diskName" : {
            "type" : "string",
            "description" : "The name of the disk to be attached."
          },
          "diskSizeGiB" : {
            "type" : "integer",
            "description" : "Size of the disk to be attached in GibiBytes.",
            "format" : "int32"
          },
          "diskType" : {
            "type" : "string",
            "description" : "The storage type for the disk (i.e. Standard, Premium).",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          }
        },
        "description" : "Properties to attach new disk to the Virtual Machine."
      },
      "BulkCreationParameters" : {
        "type" : "object",
        "properties" : {
          "instanceCount" : {
            "type" : "integer",
            "description" : "The number of virtual machine instances to create.",
            "format" : "int32"
          }
        },
        "description" : "Parameters for creating multiple virtual machines as a single action."
      },
      "BulkCreationParametersFragment" : {
        "type" : "object",
        "properties" : {
          "instanceCount" : {
            "type" : "integer",
            "description" : "The number of virtual machine instances to create.",
            "format" : "int32"
          }
        },
        "description" : "Parameters for creating multiple virtual machines as a single action."
      },
      "CloudError" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/CloudErrorBody"
          }
        },
        "description" : "Error from a REST request."
      },
      "CloudErrorBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code."
          },
          "details" : {
            "type" : "array",
            "description" : "Inner errors.",
            "items" : {
              "$ref" : "#/components/schemas/CloudErrorBody"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "The error message."
          },
          "target" : {
            "type" : "string",
            "description" : "The error target."
          }
        },
        "description" : "Body of an error from a REST request."
      },
      "ComputeDataDisk" : {
        "type" : "object",
        "properties" : {
          "diskSizeGiB" : {
            "type" : "integer",
            "description" : "Gets data disk size in GiB.",
            "format" : "int32"
          },
          "diskUri" : {
            "type" : "string",
            "description" : "When backed by a blob, the URI of underlying blob."
          },
          "managedDiskId" : {
            "type" : "string",
            "description" : "When backed by managed disk, this is the ID of the compute disk resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets data disk name."
          }
        },
        "description" : "A data disks attached to a virtual machine."
      },
      "ComputeDataDiskFragment" : {
        "type" : "object",
        "properties" : {
          "diskSizeGiB" : {
            "type" : "integer",
            "description" : "Gets data disk size in GiB.",
            "format" : "int32"
          },
          "diskUri" : {
            "type" : "string",
            "description" : "When backed by a blob, the URI of underlying blob."
          },
          "managedDiskId" : {
            "type" : "string",
            "description" : "When backed by managed disk, this is the ID of the compute disk resource."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets data disk name."
          }
        },
        "description" : "A data disks attached to a virtual machine."
      },
      "ComputeVmInstanceViewStatus" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Gets the status Code."
          },
          "displayStatus" : {
            "type" : "string",
            "description" : "Gets the short localizable label for the status."
          },
          "message" : {
            "type" : "string",
            "description" : "Gets the message associated with the status."
          }
        },
        "description" : "Status information about a virtual machine."
      },
      "ComputeVmInstanceViewStatusFragment" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Gets the status Code."
          },
          "displayStatus" : {
            "type" : "string",
            "description" : "Gets the short localizable label for the status."
          },
          "message" : {
            "type" : "string",
            "description" : "Gets the message associated with the status."
          }
        },
        "description" : "Status information about a virtual machine."
      },
      "ComputeVmProperties" : {
        "type" : "object",
        "properties" : {
          "dataDiskIds" : {
            "type" : "array",
            "description" : "Gets data disks blob uri for the virtual machine.",
            "items" : {
              "type" : "string"
            }
          },
          "dataDisks" : {
            "type" : "array",
            "description" : "Gets all data disks attached to the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ComputeDataDisk"
            }
          },
          "networkInterfaceId" : {
            "type" : "string",
            "description" : "Gets the network interface ID of the virtual machine."
          },
          "osDiskId" : {
            "type" : "string",
            "description" : "Gets OS disk blob uri for the virtual machine."
          },
          "osType" : {
            "type" : "string",
            "description" : "Gets the OS type of the virtual machine."
          },
          "statuses" : {
            "type" : "array",
            "description" : "Gets the statuses of the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ComputeVmInstanceViewStatus"
            }
          },
          "vmSize" : {
            "type" : "string",
            "description" : "Gets the size of the virtual machine."
          }
        },
        "description" : "Properties of a virtual machine returned by the Microsoft.Compute API."
      },
      "ComputeVmPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "dataDiskIds" : {
            "type" : "array",
            "description" : "Gets data disks blob uri for the virtual machine.",
            "items" : {
              "type" : "string"
            }
          },
          "dataDisks" : {
            "type" : "array",
            "description" : "Gets all data disks attached to the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ComputeDataDiskFragment"
            }
          },
          "networkInterfaceId" : {
            "type" : "string",
            "description" : "Gets the network interface ID of the virtual machine."
          },
          "osDiskId" : {
            "type" : "string",
            "description" : "Gets OS disk blob uri for the virtual machine."
          },
          "osType" : {
            "type" : "string",
            "description" : "Gets the OS type of the virtual machine."
          },
          "statuses" : {
            "type" : "array",
            "description" : "Gets the statuses of the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ComputeVmInstanceViewStatusFragment"
            }
          },
          "vmSize" : {
            "type" : "string",
            "description" : "Gets the size of the virtual machine."
          }
        },
        "description" : "Properties of a virtual machine returned by the Microsoft.Compute API."
      },
      "CostThresholdProperties" : {
        "type" : "object",
        "properties" : {
          "displayOnChart" : {
            "type" : "string",
            "description" : "Indicates whether this threshold will be displayed on cost charts.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "notificationSent" : {
            "type" : "string",
            "description" : "Indicates the datetime when notifications were last sent for this threshold."
          },
          "percentageThreshold" : {
            "$ref" : "#/components/schemas/PercentageCostThresholdProperties"
          },
          "sendNotificationWhenExceeded" : {
            "type" : "string",
            "description" : "Indicates whether notifications will be sent when this threshold is exceeded.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "thresholdId" : {
            "type" : "string",
            "description" : "The ID of the cost threshold item."
          }
        },
        "description" : "Properties of a cost threshold item."
      },
      "CustomImage" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CustomImageProperties"
          }
        },
        "description" : "A custom image.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "CustomImageFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/CustomImagePropertiesFragment"
          }
        },
        "description" : "A custom image.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "CustomImageList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/CustomImage"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "CustomImageProperties" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The author of the custom image."
          },
          "creationDate" : {
            "type" : "string",
            "description" : "The creation date of the custom image.",
            "format" : "date-time",
            "readOnly" : true
          },
          "customImagePlan" : {
            "$ref" : "#/components/schemas/CustomImagePropertiesFromPlan"
          },
          "dataDiskStorageInfo" : {
            "type" : "array",
            "description" : "Storage information about the data disks present in the custom image",
            "items" : {
              "$ref" : "#/components/schemas/DataDiskStorageTypeInfo"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the custom image."
          },
          "isPlanAuthorized" : {
            "type" : "boolean",
            "description" : "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
          },
          "managedImageId" : {
            "type" : "string",
            "description" : "The Managed Image Id backing the custom image."
          },
          "managedSnapshotId" : {
            "type" : "string",
            "description" : "The Managed Snapshot Id backing the custom image."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "vhd" : {
            "$ref" : "#/components/schemas/CustomImagePropertiesCustom"
          },
          "vm" : {
            "$ref" : "#/components/schemas/CustomImagePropertiesFromVm"
          }
        },
        "description" : "Properties of a custom image."
      },
      "CustomImagePropertiesCustom" : {
        "required" : [ "osType" ],
        "type" : "object",
        "properties" : {
          "imageName" : {
            "type" : "string",
            "description" : "The image name."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the custom image (i.e. Windows, Linux)",
            "enum" : [ "Windows", "Linux", "None" ]
          },
          "sysPrep" : {
            "type" : "boolean",
            "description" : "Indicates whether sysprep has been run on the VHD."
          }
        },
        "description" : "Properties for creating a custom image from a VHD."
      },
      "CustomImagePropertiesCustomFragment" : {
        "type" : "object",
        "properties" : {
          "imageName" : {
            "type" : "string",
            "description" : "The image name."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the custom image (i.e. Windows, Linux)",
            "enum" : [ "Windows", "Linux", "None" ]
          },
          "sysPrep" : {
            "type" : "boolean",
            "description" : "Indicates whether sysprep has been run on the VHD."
          }
        },
        "description" : "Properties for creating a custom image from a VHD."
      },
      "CustomImagePropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The author of the custom image."
          },
          "customImagePlan" : {
            "$ref" : "#/components/schemas/CustomImagePropertiesFromPlanFragment"
          },
          "dataDiskStorageInfo" : {
            "type" : "array",
            "description" : "Storage information about the data disks present in the custom image",
            "items" : {
              "$ref" : "#/components/schemas/DataDiskStorageTypeInfoFragment"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the custom image."
          },
          "isPlanAuthorized" : {
            "type" : "boolean",
            "description" : "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
          },
          "managedImageId" : {
            "type" : "string",
            "description" : "The Managed Image Id backing the custom image."
          },
          "managedSnapshotId" : {
            "type" : "string",
            "description" : "The Managed Snapshot Id backing the custom image."
          },
          "vhd" : {
            "$ref" : "#/components/schemas/CustomImagePropertiesCustomFragment"
          },
          "vm" : {
            "$ref" : "#/components/schemas/CustomImagePropertiesFromVmFragment"
          }
        },
        "description" : "Properties of a custom image."
      },
      "CustomImagePropertiesFromPlan" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the plan, equivalent to name of the plan"
          },
          "offer" : {
            "type" : "string",
            "description" : "The offer for the plan from the marketplace image the custom image is derived from"
          },
          "publisher" : {
            "type" : "string",
            "description" : "The publisher for the plan from the marketplace image the custom image is derived from"
          }
        },
        "description" : "Properties for plan on a custom image."
      },
      "CustomImagePropertiesFromPlanFragment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the plan, equivalent to name of the plan"
          },
          "offer" : {
            "type" : "string",
            "description" : "The offer for the plan from the marketplace image the custom image is derived from"
          },
          "publisher" : {
            "type" : "string",
            "description" : "The publisher for the plan from the marketplace image the custom image is derived from"
          }
        },
        "description" : "Properties for plan on a custom image."
      },
      "CustomImagePropertiesFromVm" : {
        "type" : "object",
        "properties" : {
          "linuxOsInfo" : {
            "$ref" : "#/components/schemas/LinuxOsInfo"
          },
          "sourceVmId" : {
            "type" : "string",
            "description" : "The source vm identifier."
          },
          "windowsOsInfo" : {
            "$ref" : "#/components/schemas/WindowsOsInfo"
          }
        },
        "description" : "Properties for creating a custom image from a virtual machine."
      },
      "CustomImagePropertiesFromVmFragment" : {
        "type" : "object",
        "properties" : {
          "linuxOsInfo" : {
            "$ref" : "#/components/schemas/LinuxOsInfoFragment"
          },
          "sourceVmId" : {
            "type" : "string",
            "description" : "The source vm identifier."
          },
          "windowsOsInfo" : {
            "$ref" : "#/components/schemas/WindowsOsInfoFragment"
          }
        },
        "description" : "Properties for creating a custom image from a virtual machine."
      },
      "DataDiskProperties" : {
        "type" : "object",
        "properties" : {
          "attachNewDataDiskOptions" : {
            "$ref" : "#/components/schemas/AttachNewDataDiskOptions"
          },
          "existingLabDiskId" : {
            "type" : "string",
            "description" : "Specifies the existing lab disk id to attach to virtual machine."
          },
          "hostCaching" : {
            "type" : "string",
            "description" : "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
            "enum" : [ "None", "ReadOnly", "ReadWrite" ]
          }
        },
        "description" : "Request body for adding a new or existing data disk to a virtual machine."
      },
      "DataDiskPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "attachNewDataDiskOptions" : {
            "$ref" : "#/components/schemas/AttachNewDataDiskOptionsFragment"
          },
          "existingLabDiskId" : {
            "type" : "string",
            "description" : "Specifies the existing lab disk id to attach to virtual machine."
          },
          "hostCaching" : {
            "type" : "string",
            "description" : "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
            "enum" : [ "None", "ReadOnly", "ReadWrite" ]
          }
        },
        "description" : "Request body for adding a new or existing data disk to a virtual machine."
      },
      "DataDiskStorageTypeInfo" : {
        "type" : "object",
        "properties" : {
          "lun" : {
            "type" : "string",
            "description" : "Disk Lun"
          },
          "storageType" : {
            "type" : "string",
            "description" : "Disk Storage Type",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          }
        },
        "description" : "Storage information about the data disks present in the custom image"
      },
      "DataDiskStorageTypeInfoFragment" : {
        "type" : "object",
        "properties" : {
          "lun" : {
            "type" : "string",
            "description" : "Disk Lun"
          },
          "storageType" : {
            "type" : "string",
            "description" : "Disk Storage Type",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          }
        },
        "description" : "Storage information about the data disks present in the custom image"
      },
      "DayDetails" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "string",
            "description" : "The time of day the schedule will occur."
          }
        },
        "description" : "Properties of a daily schedule."
      },
      "DayDetailsFragment" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "string",
            "description" : "The time of day the schedule will occur."
          }
        },
        "description" : "Properties of a daily schedule."
      },
      "DetachDataDiskProperties" : {
        "type" : "object",
        "properties" : {
          "existingLabDiskId" : {
            "type" : "string",
            "description" : "Specifies the disk resource ID to detach from virtual machine."
          }
        },
        "description" : "Request body for detaching data disk from a virtual machine."
      },
      "DetachDiskProperties" : {
        "type" : "object",
        "properties" : {
          "leasedByLabVmId" : {
            "type" : "string",
            "description" : "The resource ID of the Lab VM to which the disk is attached."
          }
        },
        "description" : "Properties of the disk to detach."
      },
      "Disk" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DiskProperties"
          }
        },
        "description" : "A Disk.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DiskFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/DiskPropertiesFragment"
          }
        },
        "description" : "A Disk.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "DiskList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Disk"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "DiskProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the disk.",
            "format" : "date-time",
            "readOnly" : true
          },
          "diskBlobName" : {
            "type" : "string",
            "description" : "When backed by a blob, the name of the VHD blob without extension."
          },
          "diskSizeGiB" : {
            "type" : "integer",
            "description" : "The size of the disk in GibiBytes.",
            "format" : "int32"
          },
          "diskType" : {
            "type" : "string",
            "description" : "The storage type for the disk (i.e. Standard, Premium).",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          },
          "diskUri" : {
            "type" : "string",
            "description" : "When backed by a blob, the URI of underlying blob."
          },
          "hostCaching" : {
            "type" : "string",
            "description" : "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
          },
          "leasedByLabVmId" : {
            "type" : "string",
            "description" : "The resource ID of the VM to which this disk is leased."
          },
          "managedDiskId" : {
            "type" : "string",
            "description" : "When backed by managed disk, this is the ID of the compute disk resource."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of a disk."
      },
      "DiskPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "diskBlobName" : {
            "type" : "string",
            "description" : "When backed by a blob, the name of the VHD blob without extension."
          },
          "diskSizeGiB" : {
            "type" : "integer",
            "description" : "The size of the disk in GibiBytes.",
            "format" : "int32"
          },
          "diskType" : {
            "type" : "string",
            "description" : "The storage type for the disk (i.e. Standard, Premium).",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          },
          "diskUri" : {
            "type" : "string",
            "description" : "When backed by a blob, the URI of underlying blob."
          },
          "hostCaching" : {
            "type" : "string",
            "description" : "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
          },
          "leasedByLabVmId" : {
            "type" : "string",
            "description" : "The resource ID of the VM to which this disk is leased."
          },
          "managedDiskId" : {
            "type" : "string",
            "description" : "When backed by managed disk, this is the ID of the compute disk resource."
          }
        },
        "description" : "Properties of a disk."
      },
      "DtlEnvironment" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EnvironmentProperties"
          }
        },
        "description" : "An environment, which is essentially an ARM template deployment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "DtlEnvironmentFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/EnvironmentPropertiesFragment"
          }
        },
        "description" : "An environment, which is essentially an ARM template deployment.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "DtlEnvironmentList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/DtlEnvironment"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "EnvironmentDeploymentProperties" : {
        "type" : "object",
        "properties" : {
          "armTemplateId" : {
            "type" : "string",
            "description" : "The Azure Resource Manager template's identifier."
          },
          "parameters" : {
            "type" : "array",
            "description" : "The parameters of the Azure Resource Manager template.",
            "items" : {
              "$ref" : "#/components/schemas/ArmTemplateParameterProperties"
            }
          }
        },
        "description" : "Properties of an environment deployment."
      },
      "EnvironmentDeploymentPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "armTemplateId" : {
            "type" : "string",
            "description" : "The Azure Resource Manager template's identifier."
          },
          "parameters" : {
            "type" : "array",
            "description" : "The parameters of the Azure Resource Manager template.",
            "items" : {
              "$ref" : "#/components/schemas/ArmTemplateParameterPropertiesFragment"
            }
          }
        },
        "description" : "Properties of an environment deployment."
      },
      "EnvironmentProperties" : {
        "type" : "object",
        "properties" : {
          "armTemplateDisplayName" : {
            "type" : "string",
            "description" : "The display name of the Azure Resource Manager template that produced the environment."
          },
          "createdByUser" : {
            "type" : "string",
            "description" : "The creator of the environment.",
            "readOnly" : true
          },
          "deploymentProperties" : {
            "$ref" : "#/components/schemas/EnvironmentDeploymentProperties"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "resourceGroupId" : {
            "type" : "string",
            "description" : "The identifier of the resource group containing the environment's resources.",
            "readOnly" : true
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of an environment."
      },
      "EnvironmentPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "armTemplateDisplayName" : {
            "type" : "string",
            "description" : "The display name of the Azure Resource Manager template that produced the environment."
          },
          "deploymentProperties" : {
            "$ref" : "#/components/schemas/EnvironmentDeploymentPropertiesFragment"
          }
        },
        "description" : "Properties of an environment."
      },
      "EvaluatePoliciesProperties" : {
        "type" : "object",
        "properties" : {
          "factData" : {
            "type" : "string",
            "description" : "The fact data."
          },
          "factName" : {
            "type" : "string",
            "description" : "The fact name."
          },
          "userObjectId" : {
            "type" : "string",
            "description" : "The user for which policies will be evaluated"
          },
          "valueOffset" : {
            "type" : "string",
            "description" : "The value offset."
          }
        },
        "description" : "Properties for evaluating a policy set."
      },
      "EvaluatePoliciesRequest" : {
        "type" : "object",
        "properties" : {
          "policies" : {
            "type" : "array",
            "description" : "Policies to evaluate.",
            "items" : {
              "$ref" : "#/components/schemas/EvaluatePoliciesProperties"
            }
          }
        },
        "description" : "Request body for evaluating a policy set."
      },
      "EvaluatePoliciesResponse" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "description" : "Results of evaluating a policy set.",
            "items" : {
              "$ref" : "#/components/schemas/PolicySetResult"
            }
          }
        },
        "description" : "Response body for evaluating a policy set."
      },
      "Event" : {
        "type" : "object",
        "properties" : {
          "eventName" : {
            "type" : "string",
            "description" : "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
            "enum" : [ "AutoShutdown", "Cost" ]
          }
        },
        "description" : "An event to be notified for."
      },
      "EventFragment" : {
        "type" : "object",
        "properties" : {
          "eventName" : {
            "type" : "string",
            "description" : "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
            "enum" : [ "AutoShutdown", "Cost" ]
          }
        },
        "description" : "An event to be notified for."
      },
      "ExportResourceUsageParameters" : {
        "type" : "object",
        "properties" : {
          "blobStorageAbsoluteSasUri" : {
            "type" : "string",
            "description" : "The blob storage absolute sas uri with write permission to the container which the usage data needs to be uploaded to."
          },
          "usageStartDate" : {
            "type" : "string",
            "description" : "The start time of the usage. If not provided, usage will be reported since the beginning of data collection.",
            "format" : "date-time"
          }
        },
        "description" : "The parameters of the export operation."
      },
      "ExternalSubnet" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets or sets the identifier."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name."
          }
        },
        "description" : "Subnet information as returned by the Microsoft.Network API."
      },
      "ExternalSubnetFragment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Gets or sets the identifier."
          },
          "name" : {
            "type" : "string",
            "description" : "Gets or sets the name."
          }
        },
        "description" : "Subnet information as returned by the Microsoft.Network API."
      },
      "Formula" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FormulaProperties"
          }
        },
        "description" : "A formula for creating a VM, specifying an image base and other parameters",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "FormulaFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/FormulaPropertiesFragment"
          }
        },
        "description" : "A formula for creating a VM, specifying an image base and other parameters",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "FormulaList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Formula"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "FormulaProperties" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The author of the formula."
          },
          "creationDate" : {
            "type" : "string",
            "description" : "The creation date of the formula.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the formula."
          },
          "formulaContent" : {
            "$ref" : "#/components/schemas/LabVirtualMachineCreationParameter"
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the formula."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "vm" : {
            "$ref" : "#/components/schemas/FormulaPropertiesFromVm"
          }
        },
        "description" : "Properties of a formula."
      },
      "FormulaPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The author of the formula."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the formula."
          },
          "formulaContent" : {
            "$ref" : "#/components/schemas/LabVirtualMachineCreationParameterFragment"
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the formula."
          },
          "vm" : {
            "$ref" : "#/components/schemas/FormulaPropertiesFromVmFragment"
          }
        },
        "description" : "Properties of a formula."
      },
      "FormulaPropertiesFromVm" : {
        "type" : "object",
        "properties" : {
          "labVmId" : {
            "type" : "string",
            "description" : "The identifier of the VM from which a formula is to be created."
          }
        },
        "description" : "Information about a VM from which a formula is to be created."
      },
      "FormulaPropertiesFromVmFragment" : {
        "type" : "object",
        "properties" : {
          "labVmId" : {
            "type" : "string",
            "description" : "The identifier of the VM from which a formula is to be created."
          }
        },
        "description" : "Information about a VM from which a formula is to be created."
      },
      "GalleryImage" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/GalleryImageProperties"
          }
        },
        "description" : "A gallery image.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "GalleryImageList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/GalleryImage"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "GalleryImageProperties" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The author of the gallery image."
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the gallery image.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the gallery image."
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "Indicates whether this gallery image is enabled."
          },
          "icon" : {
            "type" : "string",
            "description" : "The icon of the gallery image."
          },
          "imageReference" : {
            "$ref" : "#/components/schemas/GalleryImageReference"
          },
          "isPlanAuthorized" : {
            "type" : "boolean",
            "description" : "Indicates if the plan has been authorized for programmatic deployment."
          },
          "planId" : {
            "type" : "string",
            "description" : "The third party plan that applies to this image"
          }
        },
        "description" : "Properties of a gallery image."
      },
      "GalleryImageReference" : {
        "type" : "object",
        "properties" : {
          "offer" : {
            "type" : "string",
            "description" : "The offer of the gallery image."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the gallery image."
          },
          "publisher" : {
            "type" : "string",
            "description" : "The publisher of the gallery image."
          },
          "sku" : {
            "type" : "string",
            "description" : "The SKU of the gallery image."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the gallery image."
          }
        },
        "description" : "The reference information for an Azure Marketplace image."
      },
      "GalleryImageReferenceFragment" : {
        "type" : "object",
        "properties" : {
          "offer" : {
            "type" : "string",
            "description" : "The offer of the gallery image."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the gallery image."
          },
          "publisher" : {
            "type" : "string",
            "description" : "The publisher of the gallery image."
          },
          "sku" : {
            "type" : "string",
            "description" : "The SKU of the gallery image."
          },
          "version" : {
            "type" : "string",
            "description" : "The version of the gallery image."
          }
        },
        "description" : "The reference information for an Azure Marketplace image."
      },
      "GenerateArmTemplateRequest" : {
        "type" : "object",
        "properties" : {
          "fileUploadOptions" : {
            "type" : "string",
            "description" : "Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.",
            "enum" : [ "UploadFilesAndGenerateSasTokens", "None" ]
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the virtual machine."
          },
          "parameters" : {
            "type" : "array",
            "description" : "The parameters of the ARM template.",
            "items" : {
              "$ref" : "#/components/schemas/ParameterInfo"
            }
          },
          "virtualMachineName" : {
            "type" : "string",
            "description" : "The resource name of the virtual machine."
          }
        },
        "description" : "Parameters for generating an ARM template for deploying artifacts."
      },
      "GenerateUploadUriParameter" : {
        "type" : "object",
        "properties" : {
          "blobName" : {
            "type" : "string",
            "description" : "The blob name of the upload URI."
          }
        },
        "description" : "Properties for generating an upload URI."
      },
      "GenerateUploadUriResponse" : {
        "type" : "object",
        "properties" : {
          "uploadUri" : {
            "type" : "string",
            "description" : "The upload URI for the VHD."
          }
        },
        "description" : "Response body for generating an upload URI."
      },
      "HourDetails" : {
        "type" : "object",
        "properties" : {
          "minute" : {
            "type" : "integer",
            "description" : "Minutes of the hour the schedule will run.",
            "format" : "int32"
          }
        },
        "description" : "Properties of an hourly schedule."
      },
      "HourDetailsFragment" : {
        "type" : "object",
        "properties" : {
          "minute" : {
            "type" : "integer",
            "description" : "Minutes of the hour the schedule will run.",
            "format" : "int32"
          }
        },
        "description" : "Properties of an hourly schedule."
      },
      "IdentityProperties" : {
        "type" : "object",
        "properties" : {
          "clientSecretUrl" : {
            "type" : "string",
            "description" : "The client secret URL of the identity."
          },
          "principalId" : {
            "type" : "string",
            "description" : "The principal id of resource identity."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The tenant identifier of resource."
          },
          "type" : {
            "type" : "string",
            "description" : "Managed identity."
          }
        },
        "description" : "Properties of a managed identity"
      },
      "ImportLabVirtualMachineRequest" : {
        "type" : "object",
        "properties" : {
          "destinationVirtualMachineName" : {
            "type" : "string",
            "description" : "The name of the virtual machine in the destination lab"
          },
          "sourceVirtualMachineResourceId" : {
            "type" : "string",
            "description" : "The full resource ID of the virtual machine to be imported."
          }
        },
        "description" : "This represents the payload required to import a virtual machine from a different lab into the current one"
      },
      "InboundNatRule" : {
        "type" : "object",
        "properties" : {
          "backendPort" : {
            "type" : "integer",
            "description" : "The port to which the external traffic will be redirected.",
            "format" : "int32"
          },
          "frontendPort" : {
            "type" : "integer",
            "description" : "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.",
            "format" : "int32"
          },
          "transportProtocol" : {
            "type" : "string",
            "description" : "The transport protocol for the endpoint.",
            "enum" : [ "Tcp", "Udp" ]
          }
        },
        "description" : "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer."
      },
      "InboundNatRuleFragment" : {
        "type" : "object",
        "properties" : {
          "backendPort" : {
            "type" : "integer",
            "description" : "The port to which the external traffic will be redirected.",
            "format" : "int32"
          },
          "frontendPort" : {
            "type" : "integer",
            "description" : "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.",
            "format" : "int32"
          },
          "transportProtocol" : {
            "type" : "string",
            "description" : "The transport protocol for the endpoint.",
            "enum" : [ "Tcp", "Udp" ]
          }
        },
        "description" : "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer."
      },
      "Lab" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LabProperties"
          }
        },
        "description" : "A lab.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "LabAnnouncementProperties" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Is the lab announcement active/enabled at this time?",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The time at which the announcement expires (null for never)",
            "format" : "date-time"
          },
          "expired" : {
            "type" : "boolean",
            "description" : "Has this announcement expired?"
          },
          "markdown" : {
            "type" : "string",
            "description" : "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "title" : {
            "type" : "string",
            "description" : "The plain text title for the lab announcement"
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of a lab's announcement banner"
      },
      "LabAnnouncementPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Is the lab announcement active/enabled at this time?",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The time at which the announcement expires (null for never)",
            "format" : "date-time"
          },
          "expired" : {
            "type" : "boolean",
            "description" : "Has this announcement expired?"
          },
          "markdown" : {
            "type" : "string",
            "description" : "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
          },
          "title" : {
            "type" : "string",
            "description" : "The plain text title for the lab announcement"
          }
        },
        "description" : "Properties of a lab's announcement banner"
      },
      "LabCost" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LabCostProperties"
          }
        },
        "description" : "A cost item.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "LabCostDetailsProperties" : {
        "type" : "object",
        "properties" : {
          "cost" : {
            "type" : "number",
            "description" : "The cost component of the cost item.",
            "format" : "double"
          },
          "costType" : {
            "type" : "string",
            "description" : "The type of the cost.",
            "enum" : [ "Unavailable", "Reported", "Projected" ]
          },
          "date" : {
            "type" : "string",
            "description" : "The date of the cost item.",
            "format" : "date-time"
          }
        },
        "description" : "The properties of a lab cost item."
      },
      "LabCostProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the cost.",
            "format" : "date-time"
          },
          "currencyCode" : {
            "type" : "string",
            "description" : "The currency code of the cost."
          },
          "endDateTime" : {
            "type" : "string",
            "description" : "The end time of the cost data.",
            "format" : "date-time"
          },
          "labCostDetails" : {
            "type" : "array",
            "description" : "The lab cost details component of the cost data.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/LabCostDetailsProperties"
            }
          },
          "labCostSummary" : {
            "$ref" : "#/components/schemas/LabCostSummaryProperties"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "resourceCosts" : {
            "type" : "array",
            "description" : "The resource cost component of the cost data.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/LabResourceCostProperties"
            }
          },
          "startDateTime" : {
            "type" : "string",
            "description" : "The start time of the cost data.",
            "format" : "date-time"
          },
          "targetCost" : {
            "$ref" : "#/components/schemas/TargetCostProperties"
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of a cost item."
      },
      "LabCostSummaryProperties" : {
        "type" : "object",
        "properties" : {
          "estimatedLabCost" : {
            "type" : "number",
            "description" : "The cost component of the cost item.",
            "format" : "double"
          }
        },
        "description" : "The properties of the cost summary."
      },
      "LabFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LabPropertiesFragment"
          }
        },
        "description" : "A lab.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "LabList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Lab"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "LabProperties" : {
        "type" : "object",
        "properties" : {
          "announcement" : {
            "$ref" : "#/components/schemas/LabAnnouncementProperties"
          },
          "artifactsStorageAccount" : {
            "type" : "string",
            "description" : "The lab's artifact storage account.",
            "readOnly" : true
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the lab.",
            "format" : "date-time",
            "readOnly" : true
          },
          "defaultPremiumStorageAccount" : {
            "type" : "string",
            "description" : "The lab's default premium storage account.",
            "readOnly" : true
          },
          "defaultStorageAccount" : {
            "type" : "string",
            "description" : "The lab's default storage account.",
            "readOnly" : true
          },
          "environmentPermission" : {
            "type" : "string",
            "description" : "The access rights to be granted to the user when provisioning an environment",
            "enum" : [ "Reader", "Contributor" ]
          },
          "extendedProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Extended properties of the lab used for experimental features"
          },
          "labStorageType" : {
            "type" : "string",
            "description" : "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          },
          "loadBalancerId" : {
            "type" : "string",
            "description" : "The load balancer used to for lab VMs that use shared IP address.",
            "readOnly" : true
          },
          "mandatoryArtifactsResourceIdsLinux" : {
            "type" : "array",
            "description" : "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
            "items" : {
              "type" : "string"
            }
          },
          "mandatoryArtifactsResourceIdsWindows" : {
            "type" : "array",
            "description" : "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
            "items" : {
              "type" : "string"
            }
          },
          "networkSecurityGroupId" : {
            "type" : "string",
            "description" : "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
            "readOnly" : true
          },
          "premiumDataDiskStorageAccount" : {
            "type" : "string",
            "description" : "The lab's premium data disk storage account.",
            "readOnly" : true
          },
          "premiumDataDisks" : {
            "type" : "string",
            "description" : "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
            "enum" : [ "Disabled", "Enabled" ]
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "publicIpId" : {
            "type" : "string",
            "description" : "The public IP address for the lab's load balancer.",
            "readOnly" : true
          },
          "support" : {
            "$ref" : "#/components/schemas/LabSupportProperties"
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "vaultName" : {
            "type" : "string",
            "description" : "The lab's Key vault.",
            "readOnly" : true
          },
          "vmCreationResourceGroup" : {
            "type" : "string",
            "description" : "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
            "readOnly" : true
          }
        },
        "description" : "Properties of a lab."
      },
      "LabPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "announcement" : {
            "$ref" : "#/components/schemas/LabAnnouncementPropertiesFragment"
          },
          "environmentPermission" : {
            "type" : "string",
            "description" : "The access rights to be granted to the user when provisioning an environment",
            "enum" : [ "Reader", "Contributor" ]
          },
          "extendedProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Extended properties of the lab used for experimental features"
          },
          "labStorageType" : {
            "type" : "string",
            "description" : "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
            "enum" : [ "Standard", "Premium", "StandardSSD" ]
          },
          "mandatoryArtifactsResourceIdsLinux" : {
            "type" : "array",
            "description" : "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
            "items" : {
              "type" : "string"
            }
          },
          "mandatoryArtifactsResourceIdsWindows" : {
            "type" : "array",
            "description" : "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
            "items" : {
              "type" : "string"
            }
          },
          "premiumDataDisks" : {
            "type" : "string",
            "description" : "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
            "enum" : [ "Disabled", "Enabled" ]
          },
          "support" : {
            "$ref" : "#/components/schemas/LabSupportPropertiesFragment"
          }
        },
        "description" : "Properties of a lab."
      },
      "LabResourceCostProperties" : {
        "type" : "object",
        "properties" : {
          "externalResourceId" : {
            "type" : "string",
            "description" : "The ID of the external resource"
          },
          "resourceCost" : {
            "type" : "number",
            "description" : "The cost component of the resource cost item.",
            "format" : "double"
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The ID of the resource"
          },
          "resourceOwner" : {
            "type" : "string",
            "description" : "The owner of the resource (ex. janedoe@microsoft.com)"
          },
          "resourcePricingTier" : {
            "type" : "string",
            "description" : "The category of the resource (ex. Premium_LRS, Standard_DS1)"
          },
          "resourceStatus" : {
            "type" : "string",
            "description" : "The status of the resource (ex. Active)"
          },
          "resourceType" : {
            "type" : "string",
            "description" : "The logical resource type (ex. virtualmachine, storageaccount)"
          },
          "resourceUId" : {
            "type" : "string",
            "description" : "The unique identifier of the resource."
          },
          "resourcename" : {
            "type" : "string",
            "description" : "The name of the resource."
          }
        },
        "description" : "The properties of a resource cost item."
      },
      "LabSupportProperties" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Is the lab support banner active/enabled at this time?",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "markdown" : {
            "type" : "string",
            "description" : "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
          }
        },
        "description" : "Properties of a lab's support banner"
      },
      "LabSupportPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "string",
            "description" : "Is the lab support banner active/enabled at this time?",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "markdown" : {
            "type" : "string",
            "description" : "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
          }
        },
        "description" : "Properties of a lab's support banner"
      },
      "LabVhd" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The URI to the VHD."
          }
        },
        "description" : "Properties of a VHD in the lab."
      },
      "LabVhdList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/LabVhd"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "LabVirtualMachine" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LabVirtualMachineProperties"
          }
        },
        "description" : "A virtual machine.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "LabVirtualMachineCreationParameter" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location of the new virtual machine or environment"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the virtual machine or environment"
          },
          "properties" : {
            "$ref" : "#/components/schemas/LabVirtualMachineCreationParameterProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource."
          }
        },
        "description" : "Properties for creating a virtual machine."
      },
      "LabVirtualMachineCreationParameterFragment" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location of the new virtual machine or environment"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the virtual machine or environment"
          },
          "properties" : {
            "$ref" : "#/components/schemas/LabVirtualMachineCreationParameterPropertiesFragment"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource."
          }
        },
        "description" : "Properties for creating a virtual machine."
      },
      "LabVirtualMachineCreationParameterProperties" : {
        "type" : "object",
        "properties" : {
          "allowClaim" : {
            "type" : "boolean",
            "description" : "Indicates whether another user can take ownership of the virtual machine"
          },
          "artifactDeploymentStatus" : {
            "$ref" : "#/components/schemas/ArtifactDeploymentStatusProperties"
          },
          "artifacts" : {
            "type" : "array",
            "description" : "The artifacts to be installed on the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactInstallProperties"
            }
          },
          "bulkCreationParameters" : {
            "$ref" : "#/components/schemas/BulkCreationParameters"
          },
          "computeId" : {
            "type" : "string",
            "description" : "The resource identifier (Microsoft.Compute) of the virtual machine."
          },
          "createdByUser" : {
            "type" : "string",
            "description" : "The email address of creator of the virtual machine."
          },
          "createdByUserId" : {
            "type" : "string",
            "description" : "The object identifier of the creator of the virtual machine."
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the virtual machine.",
            "format" : "date-time"
          },
          "customImageId" : {
            "type" : "string",
            "description" : "The custom image identifier of the virtual machine."
          },
          "dataDiskParameters" : {
            "type" : "array",
            "description" : "New or existing data disks to attach to the virtual machine after creation",
            "items" : {
              "$ref" : "#/components/schemas/DataDiskProperties"
            }
          },
          "disallowPublicIpAddress" : {
            "type" : "boolean",
            "description" : "Indicates whether the virtual machine is to be created without a public IP address."
          },
          "environmentId" : {
            "type" : "string",
            "description" : "The resource ID of the environment that contains this virtual machine, if any."
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The expiration date for VM.",
            "format" : "date-time"
          },
          "fqdn" : {
            "type" : "string",
            "description" : "The fully-qualified domain name of the virtual machine."
          },
          "galleryImageReference" : {
            "$ref" : "#/components/schemas/GalleryImageReference"
          },
          "isAuthenticationWithSshKey" : {
            "type" : "boolean",
            "description" : "Indicates whether this virtual machine uses an SSH key for authentication."
          },
          "labSubnetName" : {
            "type" : "string",
            "description" : "The lab subnet name of the virtual machine."
          },
          "labVirtualNetworkId" : {
            "type" : "string",
            "description" : "The lab virtual network identifier of the virtual machine."
          },
          "lastKnownPowerState" : {
            "type" : "string",
            "description" : "Last known compute power state captured in DTL"
          },
          "networkInterface" : {
            "$ref" : "#/components/schemas/NetworkInterfaceProperties"
          },
          "notes" : {
            "type" : "string",
            "description" : "The notes of the virtual machine."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the virtual machine."
          },
          "ownerObjectId" : {
            "type" : "string",
            "description" : "The object identifier of the owner of the virtual machine."
          },
          "ownerUserPrincipalName" : {
            "type" : "string",
            "description" : "The user principal name of the virtual machine owner."
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the virtual machine administrator."
          },
          "planId" : {
            "type" : "string",
            "description" : "The id of the plan associated with the virtual machine image"
          },
          "scheduleParameters" : {
            "type" : "array",
            "description" : "Virtual Machine schedules to be created",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleCreationParameter"
            }
          },
          "size" : {
            "type" : "string",
            "description" : "The size of the virtual machine."
          },
          "sshKey" : {
            "type" : "string",
            "description" : "The SSH key of the virtual machine administrator."
          },
          "storageType" : {
            "type" : "string",
            "description" : "Storage type to use for virtual machine (i.e. Standard, Premium)."
          },
          "userName" : {
            "type" : "string",
            "description" : "The user name of the virtual machine."
          },
          "virtualMachineCreationSource" : {
            "type" : "string",
            "description" : "Tells source of creation of lab virtual machine. Output property only.",
            "enum" : [ "FromCustomImage", "FromGalleryImage", "FromSharedGalleryImage" ]
          }
        },
        "description" : "Properties for virtual machine creation."
      },
      "LabVirtualMachineCreationParameterPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "allowClaim" : {
            "type" : "boolean",
            "description" : "Indicates whether another user can take ownership of the virtual machine"
          },
          "artifactDeploymentStatus" : {
            "$ref" : "#/components/schemas/ArtifactDeploymentStatusPropertiesFragment"
          },
          "artifacts" : {
            "type" : "array",
            "description" : "The artifacts to be installed on the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactInstallPropertiesFragment"
            }
          },
          "bulkCreationParameters" : {
            "$ref" : "#/components/schemas/BulkCreationParametersFragment"
          },
          "computeId" : {
            "type" : "string",
            "description" : "The resource identifier (Microsoft.Compute) of the virtual machine."
          },
          "createdByUser" : {
            "type" : "string",
            "description" : "The email address of creator of the virtual machine."
          },
          "createdByUserId" : {
            "type" : "string",
            "description" : "The object identifier of the creator of the virtual machine."
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the virtual machine.",
            "format" : "date-time"
          },
          "customImageId" : {
            "type" : "string",
            "description" : "The custom image identifier of the virtual machine."
          },
          "dataDiskParameters" : {
            "type" : "array",
            "description" : "New or existing data disks to attach to the virtual machine after creation",
            "items" : {
              "$ref" : "#/components/schemas/DataDiskPropertiesFragment"
            }
          },
          "disallowPublicIpAddress" : {
            "type" : "boolean",
            "description" : "Indicates whether the virtual machine is to be created without a public IP address."
          },
          "environmentId" : {
            "type" : "string",
            "description" : "The resource ID of the environment that contains this virtual machine, if any."
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The expiration date for VM.",
            "format" : "date-time"
          },
          "fqdn" : {
            "type" : "string",
            "description" : "The fully-qualified domain name of the virtual machine."
          },
          "galleryImageReference" : {
            "$ref" : "#/components/schemas/GalleryImageReferenceFragment"
          },
          "isAuthenticationWithSshKey" : {
            "type" : "boolean",
            "description" : "Indicates whether this virtual machine uses an SSH key for authentication."
          },
          "labSubnetName" : {
            "type" : "string",
            "description" : "The lab subnet name of the virtual machine."
          },
          "labVirtualNetworkId" : {
            "type" : "string",
            "description" : "The lab virtual network identifier of the virtual machine."
          },
          "lastKnownPowerState" : {
            "type" : "string",
            "description" : "Last known compute power state captured in DTL"
          },
          "networkInterface" : {
            "$ref" : "#/components/schemas/NetworkInterfacePropertiesFragment"
          },
          "notes" : {
            "type" : "string",
            "description" : "The notes of the virtual machine."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the virtual machine."
          },
          "ownerObjectId" : {
            "type" : "string",
            "description" : "The object identifier of the owner of the virtual machine."
          },
          "ownerUserPrincipalName" : {
            "type" : "string",
            "description" : "The user principal name of the virtual machine owner."
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the virtual machine administrator."
          },
          "planId" : {
            "type" : "string",
            "description" : "The id of the plan associated with the virtual machine image"
          },
          "scheduleParameters" : {
            "type" : "array",
            "description" : "Virtual Machine schedules to be created",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleCreationParameterFragment"
            }
          },
          "size" : {
            "type" : "string",
            "description" : "The size of the virtual machine."
          },
          "sshKey" : {
            "type" : "string",
            "description" : "The SSH key of the virtual machine administrator."
          },
          "storageType" : {
            "type" : "string",
            "description" : "Storage type to use for virtual machine (i.e. Standard, Premium)."
          },
          "userName" : {
            "type" : "string",
            "description" : "The user name of the virtual machine."
          },
          "virtualMachineCreationSource" : {
            "type" : "string",
            "description" : "Tells source of creation of lab virtual machine. Output property only.",
            "enum" : [ "FromCustomImage", "FromGalleryImage", "FromSharedGalleryImage" ]
          }
        },
        "description" : "Properties for virtual machine creation."
      },
      "LabVirtualMachineFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LabVirtualMachinePropertiesFragment"
          }
        },
        "description" : "A virtual machine.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "LabVirtualMachineList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/LabVirtualMachine"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "LabVirtualMachineProperties" : {
        "type" : "object",
        "properties" : {
          "allowClaim" : {
            "type" : "boolean",
            "description" : "Indicates whether another user can take ownership of the virtual machine"
          },
          "applicableSchedule" : {
            "$ref" : "#/components/schemas/ApplicableSchedule"
          },
          "artifactDeploymentStatus" : {
            "$ref" : "#/components/schemas/ArtifactDeploymentStatusProperties"
          },
          "artifacts" : {
            "type" : "array",
            "description" : "The artifacts to be installed on the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactInstallProperties"
            }
          },
          "computeId" : {
            "type" : "string",
            "description" : "The resource identifier (Microsoft.Compute) of the virtual machine."
          },
          "computeVm" : {
            "$ref" : "#/components/schemas/ComputeVmProperties"
          },
          "createdByUser" : {
            "type" : "string",
            "description" : "The email address of creator of the virtual machine."
          },
          "createdByUserId" : {
            "type" : "string",
            "description" : "The object identifier of the creator of the virtual machine."
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the virtual machine.",
            "format" : "date-time"
          },
          "customImageId" : {
            "type" : "string",
            "description" : "The custom image identifier of the virtual machine."
          },
          "dataDiskParameters" : {
            "type" : "array",
            "description" : "New or existing data disks to attach to the virtual machine after creation",
            "items" : {
              "$ref" : "#/components/schemas/DataDiskProperties"
            }
          },
          "disallowPublicIpAddress" : {
            "type" : "boolean",
            "description" : "Indicates whether the virtual machine is to be created without a public IP address."
          },
          "environmentId" : {
            "type" : "string",
            "description" : "The resource ID of the environment that contains this virtual machine, if any."
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The expiration date for VM.",
            "format" : "date-time"
          },
          "fqdn" : {
            "type" : "string",
            "description" : "The fully-qualified domain name of the virtual machine."
          },
          "galleryImageReference" : {
            "$ref" : "#/components/schemas/GalleryImageReference"
          },
          "isAuthenticationWithSshKey" : {
            "type" : "boolean",
            "description" : "Indicates whether this virtual machine uses an SSH key for authentication."
          },
          "labSubnetName" : {
            "type" : "string",
            "description" : "The lab subnet name of the virtual machine."
          },
          "labVirtualNetworkId" : {
            "type" : "string",
            "description" : "The lab virtual network identifier of the virtual machine."
          },
          "lastKnownPowerState" : {
            "type" : "string",
            "description" : "Last known compute power state captured in DTL"
          },
          "networkInterface" : {
            "$ref" : "#/components/schemas/NetworkInterfaceProperties"
          },
          "notes" : {
            "type" : "string",
            "description" : "The notes of the virtual machine."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the virtual machine."
          },
          "ownerObjectId" : {
            "type" : "string",
            "description" : "The object identifier of the owner of the virtual machine."
          },
          "ownerUserPrincipalName" : {
            "type" : "string",
            "description" : "The user principal name of the virtual machine owner."
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the virtual machine administrator."
          },
          "planId" : {
            "type" : "string",
            "description" : "The id of the plan associated with the virtual machine image"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "scheduleParameters" : {
            "type" : "array",
            "description" : "Virtual Machine schedules to be created",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleCreationParameter"
            }
          },
          "size" : {
            "type" : "string",
            "description" : "The size of the virtual machine."
          },
          "sshKey" : {
            "type" : "string",
            "description" : "The SSH key of the virtual machine administrator."
          },
          "storageType" : {
            "type" : "string",
            "description" : "Storage type to use for virtual machine (i.e. Standard, Premium)."
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "userName" : {
            "type" : "string",
            "description" : "The user name of the virtual machine."
          },
          "virtualMachineCreationSource" : {
            "type" : "string",
            "description" : "Tells source of creation of lab virtual machine. Output property only.",
            "enum" : [ "FromCustomImage", "FromGalleryImage", "FromSharedGalleryImage" ]
          }
        },
        "description" : "Properties of a virtual machine."
      },
      "LabVirtualMachinePropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "allowClaim" : {
            "type" : "boolean",
            "description" : "Indicates whether another user can take ownership of the virtual machine"
          },
          "artifactDeploymentStatus" : {
            "$ref" : "#/components/schemas/ArtifactDeploymentStatusPropertiesFragment"
          },
          "artifacts" : {
            "type" : "array",
            "description" : "The artifacts to be installed on the virtual machine.",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactInstallPropertiesFragment"
            }
          },
          "computeId" : {
            "type" : "string",
            "description" : "The resource identifier (Microsoft.Compute) of the virtual machine."
          },
          "createdByUser" : {
            "type" : "string",
            "description" : "The email address of creator of the virtual machine."
          },
          "createdByUserId" : {
            "type" : "string",
            "description" : "The object identifier of the creator of the virtual machine."
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the virtual machine.",
            "format" : "date-time"
          },
          "customImageId" : {
            "type" : "string",
            "description" : "The custom image identifier of the virtual machine."
          },
          "dataDiskParameters" : {
            "type" : "array",
            "description" : "New or existing data disks to attach to the virtual machine after creation",
            "items" : {
              "$ref" : "#/components/schemas/DataDiskPropertiesFragment"
            }
          },
          "disallowPublicIpAddress" : {
            "type" : "boolean",
            "description" : "Indicates whether the virtual machine is to be created without a public IP address."
          },
          "environmentId" : {
            "type" : "string",
            "description" : "The resource ID of the environment that contains this virtual machine, if any."
          },
          "expirationDate" : {
            "type" : "string",
            "description" : "The expiration date for VM.",
            "format" : "date-time"
          },
          "fqdn" : {
            "type" : "string",
            "description" : "The fully-qualified domain name of the virtual machine."
          },
          "galleryImageReference" : {
            "$ref" : "#/components/schemas/GalleryImageReferenceFragment"
          },
          "isAuthenticationWithSshKey" : {
            "type" : "boolean",
            "description" : "Indicates whether this virtual machine uses an SSH key for authentication."
          },
          "labSubnetName" : {
            "type" : "string",
            "description" : "The lab subnet name of the virtual machine."
          },
          "labVirtualNetworkId" : {
            "type" : "string",
            "description" : "The lab virtual network identifier of the virtual machine."
          },
          "lastKnownPowerState" : {
            "type" : "string",
            "description" : "Last known compute power state captured in DTL"
          },
          "networkInterface" : {
            "$ref" : "#/components/schemas/NetworkInterfacePropertiesFragment"
          },
          "notes" : {
            "type" : "string",
            "description" : "The notes of the virtual machine."
          },
          "osType" : {
            "type" : "string",
            "description" : "The OS type of the virtual machine."
          },
          "ownerObjectId" : {
            "type" : "string",
            "description" : "The object identifier of the owner of the virtual machine."
          },
          "ownerUserPrincipalName" : {
            "type" : "string",
            "description" : "The user principal name of the virtual machine owner."
          },
          "password" : {
            "type" : "string",
            "description" : "The password of the virtual machine administrator."
          },
          "planId" : {
            "type" : "string",
            "description" : "The id of the plan associated with the virtual machine image"
          },
          "scheduleParameters" : {
            "type" : "array",
            "description" : "Virtual Machine schedules to be created",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleCreationParameterFragment"
            }
          },
          "size" : {
            "type" : "string",
            "description" : "The size of the virtual machine."
          },
          "sshKey" : {
            "type" : "string",
            "description" : "The SSH key of the virtual machine administrator."
          },
          "storageType" : {
            "type" : "string",
            "description" : "Storage type to use for virtual machine (i.e. Standard, Premium)."
          },
          "userName" : {
            "type" : "string",
            "description" : "The user name of the virtual machine."
          },
          "virtualMachineCreationSource" : {
            "type" : "string",
            "description" : "Tells source of creation of lab virtual machine. Output property only.",
            "enum" : [ "FromCustomImage", "FromGalleryImage", "FromSharedGalleryImage" ]
          }
        },
        "description" : "Properties of a virtual machine."
      },
      "LinuxOsInfo" : {
        "type" : "object",
        "properties" : {
          "linuxOsState" : {
            "type" : "string",
            "description" : "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
            "enum" : [ "NonDeprovisioned", "DeprovisionRequested", "DeprovisionApplied" ]
          }
        },
        "description" : "Information about a Linux OS."
      },
      "LinuxOsInfoFragment" : {
        "type" : "object",
        "properties" : {
          "linuxOsState" : {
            "type" : "string",
            "description" : "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
            "enum" : [ "NonDeprovisioned", "DeprovisionRequested", "DeprovisionApplied" ]
          }
        },
        "description" : "Information about a Linux OS."
      },
      "NetworkInterfaceProperties" : {
        "type" : "object",
        "properties" : {
          "dnsName" : {
            "type" : "string",
            "description" : "The DNS name."
          },
          "privateIpAddress" : {
            "type" : "string",
            "description" : "The private IP address."
          },
          "publicIpAddress" : {
            "type" : "string",
            "description" : "The public IP address."
          },
          "publicIpAddressId" : {
            "type" : "string",
            "description" : "The resource ID of the public IP address."
          },
          "rdpAuthority" : {
            "type" : "string",
            "description" : "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
          },
          "sharedPublicIpAddressConfiguration" : {
            "$ref" : "#/components/schemas/SharedPublicIpAddressConfiguration"
          },
          "sshAuthority" : {
            "type" : "string",
            "description" : "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
          },
          "subnetId" : {
            "type" : "string",
            "description" : "The resource ID of the sub net."
          },
          "virtualNetworkId" : {
            "type" : "string",
            "description" : "The resource ID of the virtual network."
          }
        },
        "description" : "Properties of a network interface."
      },
      "NetworkInterfacePropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "dnsName" : {
            "type" : "string",
            "description" : "The DNS name."
          },
          "privateIpAddress" : {
            "type" : "string",
            "description" : "The private IP address."
          },
          "publicIpAddress" : {
            "type" : "string",
            "description" : "The public IP address."
          },
          "publicIpAddressId" : {
            "type" : "string",
            "description" : "The resource ID of the public IP address."
          },
          "rdpAuthority" : {
            "type" : "string",
            "description" : "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
          },
          "sharedPublicIpAddressConfiguration" : {
            "$ref" : "#/components/schemas/SharedPublicIpAddressConfigurationFragment"
          },
          "sshAuthority" : {
            "type" : "string",
            "description" : "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
          },
          "subnetId" : {
            "type" : "string",
            "description" : "The resource ID of the sub net."
          },
          "virtualNetworkId" : {
            "type" : "string",
            "description" : "The resource ID of the virtual network."
          }
        },
        "description" : "Properties of a network interface."
      },
      "NotificationChannel" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/NotificationChannelProperties"
          }
        },
        "description" : "A notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "NotificationChannelFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/NotificationChannelPropertiesFragment"
          }
        },
        "description" : "A notification.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "NotificationChannelList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationChannel"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "NotificationChannelProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the notification channel.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of notification."
          },
          "emailRecipient" : {
            "type" : "string",
            "description" : "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
          },
          "events" : {
            "type" : "array",
            "description" : "The list of event for which this notification is enabled.",
            "items" : {
              "$ref" : "#/components/schemas/Event"
            }
          },
          "notificationLocale" : {
            "type" : "string",
            "description" : "The locale to use when sending a notification (fallback for unsupported languages is EN)."
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "webHookUrl" : {
            "type" : "string",
            "description" : "The webhook URL to send notifications to."
          }
        },
        "description" : "Properties of a schedule."
      },
      "NotificationChannelPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of notification."
          },
          "emailRecipient" : {
            "type" : "string",
            "description" : "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
          },
          "events" : {
            "type" : "array",
            "description" : "The list of event for which this notification is enabled.",
            "items" : {
              "$ref" : "#/components/schemas/EventFragment"
            }
          },
          "notificationLocale" : {
            "type" : "string",
            "description" : "The locale to use when sending a notification (fallback for unsupported languages is EN)."
          },
          "webHookUrl" : {
            "type" : "string",
            "description" : "The webhook URL to send notifications to."
          }
        },
        "description" : "Properties of a schedule."
      },
      "NotificationSettings" : {
        "type" : "object",
        "properties" : {
          "emailRecipient" : {
            "type" : "string",
            "description" : "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
          },
          "notificationLocale" : {
            "type" : "string",
            "description" : "The locale to use when sending a notification (fallback for unsupported languages is EN)."
          },
          "status" : {
            "type" : "string",
            "description" : "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "timeInMinutes" : {
            "type" : "integer",
            "description" : "Time in minutes before event at which notification will be sent.",
            "format" : "int32"
          },
          "webhookUrl" : {
            "type" : "string",
            "description" : "The webhook URL to which the notification will be sent."
          }
        },
        "description" : "Notification settings for a schedule."
      },
      "NotificationSettingsFragment" : {
        "type" : "object",
        "properties" : {
          "emailRecipient" : {
            "type" : "string",
            "description" : "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
          },
          "notificationLocale" : {
            "type" : "string",
            "description" : "The locale to use when sending a notification (fallback for unsupported languages is EN)."
          },
          "status" : {
            "type" : "string",
            "description" : "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "timeInMinutes" : {
            "type" : "integer",
            "description" : "Time in minutes before event at which notification will be sent.",
            "format" : "int32"
          },
          "webhookUrl" : {
            "type" : "string",
            "description" : "The webhook URL to which the notification will be sent."
          }
        },
        "description" : "Notification settings for a schedule."
      },
      "NotifyParameters" : {
        "type" : "object",
        "properties" : {
          "eventName" : {
            "type" : "string",
            "description" : "The type of event (i.e. AutoShutdown, Cost)",
            "enum" : [ "AutoShutdown", "Cost" ]
          },
          "jsonPayload" : {
            "type" : "string",
            "description" : "Properties for the notification in json format."
          }
        },
        "description" : "Properties for generating a Notification."
      },
      "OperationError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The error code of the operation error."
          },
          "message" : {
            "type" : "string",
            "description" : "The error message of the operation error."
          }
        },
        "description" : "Error details for the operation in case of a failure."
      },
      "OperationMetadata" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationMetadataDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}"
          }
        },
        "description" : "The REST API operation supported by DevTestLab ResourceProvider."
      },
      "OperationMetadataDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Friendly name of the operation"
          },
          "operation" : {
            "type" : "string",
            "description" : "Operation type: read, write, delete, listKeys/action, etc."
          },
          "provider" : {
            "type" : "string",
            "description" : "Friendly name of the resource provider"
          },
          "resource" : {
            "type" : "string",
            "description" : "Resource type on which the operation is performed."
          }
        },
        "description" : "The object that describes the operations"
      },
      "OperationResult" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/OperationError"
          },
          "status" : {
            "type" : "string",
            "description" : "The operation status."
          },
          "statusCode" : {
            "type" : "string",
            "description" : "The status code for the operation.",
            "enum" : [ "Continue", "SwitchingProtocols", "OK", "Created", "Accepted", "NonAuthoritativeInformation", "NoContent", "ResetContent", "PartialContent", "MultipleChoices", "MovedPermanently", "Redirect", "SeeOther", "NotModified", "UseProxy", "Unused", "TemporaryRedirect", "BadRequest", "Unauthorized", "PaymentRequired", "Forbidden", "NotFound", "MethodNotAllowed", "NotAcceptable", "ProxyAuthenticationRequired", "RequestTimeout", "Conflict", "Gone", "LengthRequired", "PreconditionFailed", "RequestEntityTooLarge", "RequestUriTooLong", "UnsupportedMediaType", "RequestedRangeNotSatisfiable", "ExpectationFailed", "UpgradeRequired", "InternalServerError", "NotImplemented", "BadGateway", "ServiceUnavailable", "GatewayTimeout", "HttpVersionNotSupported" ]
          }
        },
        "description" : "An Operation Result"
      },
      "ParameterInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the artifact parameter."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the artifact parameter."
          }
        },
        "description" : "Information about an artifact's parameter."
      },
      "ParametersValueFileInfo" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "description" : "File name."
          },
          "parametersValueInfo" : {
            "type" : "object",
            "description" : "Contents of the file."
          }
        },
        "description" : "A file containing a set of parameter values for an ARM template."
      },
      "PercentageCostThresholdProperties" : {
        "type" : "object",
        "properties" : {
          "thresholdValue" : {
            "type" : "number",
            "description" : "The cost threshold value.",
            "format" : "double"
          }
        },
        "description" : "Properties of a percentage cost threshold."
      },
      "Policy" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PolicyProperties"
          }
        },
        "description" : "A Policy.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "PolicyFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/PolicyPropertiesFragment"
          }
        },
        "description" : "A Policy.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "PolicyList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Policy"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "PolicyProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the policy.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the policy."
          },
          "evaluatorType" : {
            "type" : "string",
            "description" : "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
            "enum" : [ "AllowedValuesPolicy", "MaxValuePolicy" ]
          },
          "factData" : {
            "type" : "string",
            "description" : "The fact data of the policy."
          },
          "factName" : {
            "type" : "string",
            "description" : "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
            "enum" : [ "UserOwnedLabVmCount", "UserOwnedLabPremiumVmCount", "LabVmCount", "LabPremiumVmCount", "LabVmSize", "GalleryImage", "UserOwnedLabVmCountInSubnet", "LabTargetCost", "EnvironmentTemplate", "ScheduleEditPermission" ]
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the policy.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "threshold" : {
            "type" : "string",
            "description" : "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of a Policy."
      },
      "PolicyPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the policy."
          },
          "evaluatorType" : {
            "type" : "string",
            "description" : "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
            "enum" : [ "AllowedValuesPolicy", "MaxValuePolicy" ]
          },
          "factData" : {
            "type" : "string",
            "description" : "The fact data of the policy."
          },
          "factName" : {
            "type" : "string",
            "description" : "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
            "enum" : [ "UserOwnedLabVmCount", "UserOwnedLabPremiumVmCount", "LabVmCount", "LabPremiumVmCount", "LabVmSize", "GalleryImage", "UserOwnedLabVmCountInSubnet", "LabTargetCost", "EnvironmentTemplate", "ScheduleEditPermission" ]
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the policy.",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "threshold" : {
            "type" : "string",
            "description" : "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
          }
        },
        "description" : "Properties of a Policy."
      },
      "PolicySetResult" : {
        "type" : "object",
        "properties" : {
          "hasError" : {
            "type" : "boolean",
            "description" : "A value indicating whether this policy set evaluation has discovered violations."
          },
          "policyViolations" : {
            "type" : "array",
            "description" : "The list of policy violations.",
            "items" : {
              "$ref" : "#/components/schemas/PolicyViolation"
            }
          }
        },
        "description" : "Result of a policy set evaluation."
      },
      "PolicyViolation" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The code of the policy violation."
          },
          "message" : {
            "type" : "string",
            "description" : "The message of the policy violation."
          }
        },
        "description" : "Policy violation."
      },
      "Port" : {
        "type" : "object",
        "properties" : {
          "backendPort" : {
            "type" : "integer",
            "description" : "Backend port of the target virtual machine.",
            "format" : "int32"
          },
          "transportProtocol" : {
            "type" : "string",
            "description" : "Protocol type of the port.",
            "enum" : [ "Tcp", "Udp" ]
          }
        },
        "description" : "Properties of a network port."
      },
      "PortFragment" : {
        "type" : "object",
        "properties" : {
          "backendPort" : {
            "type" : "integer",
            "description" : "Backend port of the target virtual machine.",
            "format" : "int32"
          },
          "transportProtocol" : {
            "type" : "string",
            "description" : "Protocol type of the port.",
            "enum" : [ "Tcp", "Udp" ]
          }
        },
        "description" : "Properties of a network port."
      },
      "ProviderOperationResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of operations supported by the resource provider.",
            "items" : {
              "$ref" : "#/components/schemas/OperationMetadata"
            }
          }
        },
        "description" : "Result of the request to list REST API operations"
      },
      "RdpConnection" : {
        "type" : "object",
        "properties" : {
          "contents" : {
            "type" : "string",
            "description" : "The contents of the .rdp file"
          }
        },
        "description" : "Represents a .rdp file"
      },
      "ResizeLabVirtualMachineProperties" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "string",
            "description" : "Specifies the size of the virtual machine."
          }
        },
        "description" : "Request body for resizing a virtual machine."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The identifier of the resource.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the resource."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource.",
            "readOnly" : true
          }
        },
        "description" : "An Azure resource."
      },
      "RetargetScheduleProperties" : {
        "type" : "object",
        "properties" : {
          "currentResourceId" : {
            "type" : "string",
            "description" : "The resource Id of the virtual machine on which the schedule operates"
          },
          "targetResourceId" : {
            "type" : "string",
            "description" : "The resource Id of the virtual machine that the schedule should be retargeted to"
          }
        },
        "description" : "Properties for retargeting a virtual machine schedule."
      },
      "Schedule" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ScheduleProperties"
          }
        },
        "description" : "A schedule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ScheduleCreationParameter" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location of the new virtual machine or environment"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the virtual machine or environment"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ScheduleCreationParameterProperties"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource."
          }
        },
        "description" : "Properties for creating a schedule."
      },
      "ScheduleCreationParameterFragment" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "The location of the new virtual machine or environment"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the virtual machine or environment"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ScheduleCreationParameterPropertiesFragment"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource."
          }
        },
        "description" : "Properties for creating a schedule."
      },
      "ScheduleCreationParameterProperties" : {
        "type" : "object",
        "properties" : {
          "dailyRecurrence" : {
            "$ref" : "#/components/schemas/DayDetails"
          },
          "hourlyRecurrence" : {
            "$ref" : "#/components/schemas/HourDetails"
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettings"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the schedule (i.e. Enabled, Disabled)",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "targetResourceId" : {
            "type" : "string",
            "description" : "The resource ID to which the schedule belongs"
          },
          "taskType" : {
            "type" : "string",
            "description" : "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
          },
          "timeZoneId" : {
            "type" : "string",
            "description" : "The time zone ID (e.g. Pacific Standard time)."
          },
          "weeklyRecurrence" : {
            "$ref" : "#/components/schemas/WeekDetails"
          }
        },
        "description" : "Properties for schedule creation."
      },
      "ScheduleCreationParameterPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "dailyRecurrence" : {
            "$ref" : "#/components/schemas/DayDetailsFragment"
          },
          "hourlyRecurrence" : {
            "$ref" : "#/components/schemas/HourDetailsFragment"
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettingsFragment"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the schedule (i.e. Enabled, Disabled)",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "targetResourceId" : {
            "type" : "string",
            "description" : "The resource ID to which the schedule belongs"
          },
          "taskType" : {
            "type" : "string",
            "description" : "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
          },
          "timeZoneId" : {
            "type" : "string",
            "description" : "The time zone ID (e.g. Pacific Standard time)."
          },
          "weeklyRecurrence" : {
            "$ref" : "#/components/schemas/WeekDetailsFragment"
          }
        },
        "description" : "Properties for schedule creation."
      },
      "ScheduleFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SchedulePropertiesFragment"
          }
        },
        "description" : "A schedule.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "ScheduleList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Schedule"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "ScheduleProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the schedule.",
            "format" : "date-time",
            "readOnly" : true
          },
          "dailyRecurrence" : {
            "$ref" : "#/components/schemas/DayDetails"
          },
          "hourlyRecurrence" : {
            "$ref" : "#/components/schemas/HourDetails"
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettings"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the schedule (i.e. Enabled, Disabled)",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "targetResourceId" : {
            "type" : "string",
            "description" : "The resource ID to which the schedule belongs"
          },
          "taskType" : {
            "type" : "string",
            "description" : "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
          },
          "timeZoneId" : {
            "type" : "string",
            "description" : "The time zone ID (e.g. Pacific Standard time)."
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "weeklyRecurrence" : {
            "$ref" : "#/components/schemas/WeekDetails"
          }
        },
        "description" : "Properties of a schedule."
      },
      "SchedulePropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "dailyRecurrence" : {
            "$ref" : "#/components/schemas/DayDetailsFragment"
          },
          "hourlyRecurrence" : {
            "$ref" : "#/components/schemas/HourDetailsFragment"
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettingsFragment"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the schedule (i.e. Enabled, Disabled)",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "targetResourceId" : {
            "type" : "string",
            "description" : "The resource ID to which the schedule belongs"
          },
          "taskType" : {
            "type" : "string",
            "description" : "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
          },
          "timeZoneId" : {
            "type" : "string",
            "description" : "The time zone ID (e.g. Pacific Standard time)."
          },
          "weeklyRecurrence" : {
            "$ref" : "#/components/schemas/WeekDetailsFragment"
          }
        },
        "description" : "Properties of a schedule."
      },
      "Secret" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecretProperties"
          }
        },
        "description" : "A secret.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SecretFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecretPropertiesFragment"
          }
        },
        "description" : "A secret.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "SecretList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Secret"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "SecretProperties" : {
        "type" : "object",
        "properties" : {
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the secret for secret creation."
          }
        },
        "description" : "Properties of a secret."
      },
      "SecretPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string",
            "description" : "The value of the secret for secret creation."
          }
        },
        "description" : "Properties of a secret."
      },
      "ServiceFabric" : {
        "required" : [ "properties" ],
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServiceFabricProperties"
          }
        },
        "description" : "A Service Fabric.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ServiceFabricFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ServiceFabricPropertiesFragment"
          }
        },
        "description" : "A Service Fabric.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "ServiceFabricList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/ServiceFabric"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "ServiceFabricProperties" : {
        "type" : "object",
        "properties" : {
          "applicableSchedule" : {
            "$ref" : "#/components/schemas/ApplicableSchedule"
          },
          "environmentId" : {
            "type" : "string",
            "description" : "The resource id of the environment under which the service fabric resource is present"
          },
          "externalServiceFabricId" : {
            "type" : "string",
            "description" : "The backing service fabric resource's id"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of a service fabric."
      },
      "ServiceFabricPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "environmentId" : {
            "type" : "string",
            "description" : "The resource id of the environment under which the service fabric resource is present"
          },
          "externalServiceFabricId" : {
            "type" : "string",
            "description" : "The backing service fabric resource's id"
          }
        },
        "description" : "Properties of a service fabric."
      },
      "ServiceRunner" : {
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/IdentityProperties"
          }
        },
        "description" : "A container for a managed identity to execute DevTest lab services.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "SharedPublicIpAddressConfiguration" : {
        "type" : "object",
        "properties" : {
          "inboundNatRules" : {
            "type" : "array",
            "description" : "The incoming NAT rules",
            "items" : {
              "$ref" : "#/components/schemas/InboundNatRule"
            }
          }
        },
        "description" : "Properties of a virtual machine that determine how it is connected to a load balancer."
      },
      "SharedPublicIpAddressConfigurationFragment" : {
        "type" : "object",
        "properties" : {
          "inboundNatRules" : {
            "type" : "array",
            "description" : "The incoming NAT rules",
            "items" : {
              "$ref" : "#/components/schemas/InboundNatRuleFragment"
            }
          }
        },
        "description" : "Properties of a virtual machine that determine how it is connected to a load balancer."
      },
      "ShutdownNotificationContent" : {
        "type" : "object",
        "properties" : {
          "delayUrl120" : {
            "type" : "string",
            "description" : "The URL to delay shutdown by 2 hours."
          },
          "delayUrl60" : {
            "type" : "string",
            "description" : "The URL to delay shutdown by 60 minutes."
          },
          "eventType" : {
            "type" : "string",
            "description" : "The event for which a notification will be sent."
          },
          "guid" : {
            "type" : "string",
            "description" : "The GUID for the virtual machine to be shut down."
          },
          "labName" : {
            "type" : "string",
            "description" : "The lab for the schedule."
          },
          "minutesUntilShutdown" : {
            "type" : "string",
            "description" : "Minutes remaining until shutdown"
          },
          "owner" : {
            "type" : "string",
            "description" : "The owner of the virtual machine."
          },
          "resourceGroupName" : {
            "type" : "string",
            "description" : "The resource group name for the schedule."
          },
          "skipUrl" : {
            "type" : "string",
            "description" : "The URL to skip auto-shutdown."
          },
          "subscriptionId" : {
            "type" : "string",
            "description" : "The subscription ID for the schedule."
          },
          "text" : {
            "type" : "string",
            "description" : "The text for the notification."
          },
          "vmName" : {
            "type" : "string",
            "description" : "The virtual machine to be shut down."
          },
          "vmUrl" : {
            "type" : "string",
            "description" : "The URL of the virtual machine."
          }
        },
        "description" : "The contents of a shutdown notification. Webhooks can use this type to deserialize the request body when they get notified of an imminent shutdown."
      },
      "Subnet" : {
        "type" : "object",
        "properties" : {
          "allowPublicIp" : {
            "type" : "string",
            "description" : "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
            "enum" : [ "Default", "Deny", "Allow" ]
          },
          "labSubnetName" : {
            "type" : "string",
            "description" : "The name of the subnet as seen in the lab."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The resource ID of the subnet."
          }
        },
        "description" : "Subnet information."
      },
      "SubnetFragment" : {
        "type" : "object",
        "properties" : {
          "allowPublicIp" : {
            "type" : "string",
            "description" : "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
            "enum" : [ "Default", "Deny", "Allow" ]
          },
          "labSubnetName" : {
            "type" : "string",
            "description" : "The name of the subnet as seen in the lab."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The resource ID of the subnet."
          }
        },
        "description" : "Subnet information."
      },
      "SubnetOverride" : {
        "type" : "object",
        "properties" : {
          "labSubnetName" : {
            "type" : "string",
            "description" : "The name given to the subnet within the lab."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The resource ID of the subnet."
          },
          "sharedPublicIpAddressConfiguration" : {
            "$ref" : "#/components/schemas/SubnetSharedPublicIpAddressConfiguration"
          },
          "useInVmCreationPermission" : {
            "type" : "string",
            "description" : "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
            "enum" : [ "Default", "Deny", "Allow" ]
          },
          "usePublicIpAddressPermission" : {
            "type" : "string",
            "description" : "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
            "enum" : [ "Default", "Deny", "Allow" ]
          },
          "virtualNetworkPoolName" : {
            "type" : "string",
            "description" : "The virtual network pool associated with this subnet."
          }
        },
        "description" : "Property overrides on a subnet of a virtual network."
      },
      "SubnetOverrideFragment" : {
        "type" : "object",
        "properties" : {
          "labSubnetName" : {
            "type" : "string",
            "description" : "The name given to the subnet within the lab."
          },
          "resourceId" : {
            "type" : "string",
            "description" : "The resource ID of the subnet."
          },
          "sharedPublicIpAddressConfiguration" : {
            "$ref" : "#/components/schemas/SubnetSharedPublicIpAddressConfigurationFragment"
          },
          "useInVmCreationPermission" : {
            "type" : "string",
            "description" : "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
            "enum" : [ "Default", "Deny", "Allow" ]
          },
          "usePublicIpAddressPermission" : {
            "type" : "string",
            "description" : "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
            "enum" : [ "Default", "Deny", "Allow" ]
          },
          "virtualNetworkPoolName" : {
            "type" : "string",
            "description" : "The virtual network pool associated with this subnet."
          }
        },
        "description" : "Property overrides on a subnet of a virtual network."
      },
      "SubnetSharedPublicIpAddressConfiguration" : {
        "type" : "object",
        "properties" : {
          "allowedPorts" : {
            "type" : "array",
            "description" : "Backend ports that virtual machines on this subnet are allowed to expose",
            "items" : {
              "$ref" : "#/components/schemas/Port"
            }
          }
        },
        "description" : "Configuration for public IP address sharing."
      },
      "SubnetSharedPublicIpAddressConfigurationFragment" : {
        "type" : "object",
        "properties" : {
          "allowedPorts" : {
            "type" : "array",
            "description" : "Backend ports that virtual machines on this subnet are allowed to expose",
            "items" : {
              "$ref" : "#/components/schemas/PortFragment"
            }
          }
        },
        "description" : "Configuration for public IP address sharing."
      },
      "TargetCostProperties" : {
        "type" : "object",
        "properties" : {
          "costThresholds" : {
            "type" : "array",
            "description" : "Cost thresholds.",
            "items" : {
              "$ref" : "#/components/schemas/CostThresholdProperties"
            }
          },
          "cycleEndDateTime" : {
            "type" : "string",
            "description" : "Reporting cycle end date.",
            "format" : "date-time"
          },
          "cycleStartDateTime" : {
            "type" : "string",
            "description" : "Reporting cycle start date.",
            "format" : "date-time"
          },
          "cycleType" : {
            "type" : "string",
            "description" : "Reporting cycle type.",
            "enum" : [ "CalendarMonth", "Custom" ]
          },
          "status" : {
            "type" : "string",
            "description" : "Target cost status",
            "enum" : [ "Enabled", "Disabled" ]
          },
          "target" : {
            "type" : "integer",
            "description" : "Lab target cost",
            "format" : "int32"
          }
        },
        "description" : "Properties of a cost target."
      },
      "UpdateResource" : {
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource."
          }
        },
        "description" : "Represents an update resource"
      },
      "User" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UserProperties"
          }
        },
        "description" : "Profile of a lab user.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "UserFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/UserPropertiesFragment"
          }
        },
        "description" : "Profile of a lab user.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "UserIdentity" : {
        "type" : "object",
        "properties" : {
          "appId" : {
            "type" : "string",
            "description" : "Set to the app Id of the client JWT making the request."
          },
          "objectId" : {
            "type" : "string",
            "description" : "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
          },
          "principalId" : {
            "type" : "string",
            "description" : "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
          },
          "principalName" : {
            "type" : "string",
            "description" : "Set to the principal name / UPN of the client JWT making the request."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "Set to the tenant ID of the client JWT making the request."
          }
        },
        "description" : "Identity attributes of a lab user."
      },
      "UserIdentityFragment" : {
        "type" : "object",
        "properties" : {
          "appId" : {
            "type" : "string",
            "description" : "Set to the app Id of the client JWT making the request."
          },
          "objectId" : {
            "type" : "string",
            "description" : "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
          },
          "principalId" : {
            "type" : "string",
            "description" : "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
          },
          "principalName" : {
            "type" : "string",
            "description" : "Set to the principal name / UPN of the client JWT making the request."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "Set to the tenant ID of the client JWT making the request."
          }
        },
        "description" : "Identity attributes of a lab user."
      },
      "UserList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "UserProperties" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the user profile.",
            "format" : "date-time",
            "readOnly" : true
          },
          "identity" : {
            "$ref" : "#/components/schemas/UserIdentity"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "secretStore" : {
            "$ref" : "#/components/schemas/UserSecretStore"
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of a lab user profile."
      },
      "UserPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/UserIdentityFragment"
          },
          "secretStore" : {
            "$ref" : "#/components/schemas/UserSecretStoreFragment"
          }
        },
        "description" : "Properties of a lab user profile."
      },
      "UserSecretStore" : {
        "type" : "object",
        "properties" : {
          "keyVaultId" : {
            "type" : "string",
            "description" : "The ID of the user's Key vault."
          },
          "keyVaultUri" : {
            "type" : "string",
            "description" : "The URI of the user's Key vault."
          }
        },
        "description" : "Properties of a user's secret store."
      },
      "UserSecretStoreFragment" : {
        "type" : "object",
        "properties" : {
          "keyVaultId" : {
            "type" : "string",
            "description" : "The ID of the user's Key vault."
          },
          "keyVaultUri" : {
            "type" : "string",
            "description" : "The URI of the user's Key vault."
          }
        },
        "description" : "Properties of a user's secret store."
      },
      "VirtualNetwork" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VirtualNetworkProperties"
          }
        },
        "description" : "A virtual network.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "VirtualNetworkFragment" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/VirtualNetworkPropertiesFragment"
          }
        },
        "description" : "A virtual network.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/UpdateResource"
        } ]
      },
      "VirtualNetworkList" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/VirtualNetwork"
            }
          }
        },
        "description" : "The response of a list operation."
      },
      "VirtualNetworkProperties" : {
        "type" : "object",
        "properties" : {
          "allowedSubnets" : {
            "type" : "array",
            "description" : "The allowed subnets of the virtual network.",
            "items" : {
              "$ref" : "#/components/schemas/Subnet"
            }
          },
          "createdDate" : {
            "type" : "string",
            "description" : "The creation date of the virtual network.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the virtual network."
          },
          "externalProviderResourceId" : {
            "type" : "string",
            "description" : "The Microsoft.Network resource identifier of the virtual network."
          },
          "externalSubnets" : {
            "type" : "array",
            "description" : "The external subnet properties.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ExternalSubnet"
            }
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the resource.",
            "readOnly" : true
          },
          "subnetOverrides" : {
            "type" : "array",
            "description" : "The subnet overrides of the virtual network.",
            "items" : {
              "$ref" : "#/components/schemas/SubnetOverride"
            }
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique immutable identifier of a resource (Guid).",
            "readOnly" : true
          }
        },
        "description" : "Properties of a virtual network."
      },
      "VirtualNetworkPropertiesFragment" : {
        "type" : "object",
        "properties" : {
          "allowedSubnets" : {
            "type" : "array",
            "description" : "The allowed subnets of the virtual network.",
            "items" : {
              "$ref" : "#/components/schemas/SubnetFragment"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the virtual network."
          },
          "externalProviderResourceId" : {
            "type" : "string",
            "description" : "The Microsoft.Network resource identifier of the virtual network."
          },
          "subnetOverrides" : {
            "type" : "array",
            "description" : "The subnet overrides of the virtual network.",
            "items" : {
              "$ref" : "#/components/schemas/SubnetOverrideFragment"
            }
          }
        },
        "description" : "Properties of a virtual network."
      },
      "WeekDetails" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "string",
            "description" : "The time of the day the schedule will occur."
          },
          "weekdays" : {
            "type" : "array",
            "description" : "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Properties of a weekly schedule."
      },
      "WeekDetailsFragment" : {
        "type" : "object",
        "properties" : {
          "time" : {
            "type" : "string",
            "description" : "The time of the day the schedule will occur."
          },
          "weekdays" : {
            "type" : "array",
            "description" : "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Properties of a weekly schedule."
      },
      "WindowsOsInfo" : {
        "type" : "object",
        "properties" : {
          "windowsOsState" : {
            "type" : "string",
            "description" : "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
            "enum" : [ "NonSysprepped", "SysprepRequested", "SysprepApplied" ]
          }
        },
        "description" : "Information about a Windows OS."
      },
      "WindowsOsInfoFragment" : {
        "type" : "object",
        "properties" : {
          "windowsOsState" : {
            "type" : "string",
            "description" : "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
            "enum" : [ "NonSysprepped", "SysprepRequested", "SysprepApplied" ]
          }
        },
        "description" : "Information about a Windows OS."
      }
    },
    "parameters" : {
      "api-version" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client API version.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "default" : "2018-09-15"
        }
      },
      "locationName" : {
        "name" : "locationName",
        "in" : "path",
        "description" : "The name of the location.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "resourceGroupName" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "subscriptionId" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "OAuth2 Implicit Grant"
      }
    }
  }
}