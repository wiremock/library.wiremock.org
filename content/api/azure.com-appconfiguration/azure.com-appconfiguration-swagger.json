{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "AppConfigurationManagementClient",
    "version" : "2019-11-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.AppConfiguration/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists the operations available from this provider.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationDefinitionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/checkNameAvailability" : {
      "post" : {
        "tags" : [ "Operations" ],
        "description" : "Checks whether the configuration store name is available for use.",
        "operationId" : "Operations_CheckNameAvailability",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The object containing information for the availability request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameAvailabilityStatus"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/configurationStores" : {
      "get" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Lists the configuration stores for a given subscription.",
        "operationId" : "ConfigurationStores_List",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStoreListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores" : {
      "get" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Lists the configuration stores for a given resource group.",
        "operationId" : "ConfigurationStores_ListByResourceGroup",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStoreListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}" : {
      "get" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Gets the properties of the specified configuration store.",
        "operationId" : "ConfigurationStores_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStore"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Creates a configuration store with the specified parameters.",
        "operationId" : "ConfigurationStores_Create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for creating a configuration store.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationStore"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStore"
                }
              }
            }
          },
          "201" : {
            "description" : "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStore"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Deletes a configuration store.",
        "operationId" : "ConfigurationStores_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly."
          },
          "202" : {
            "description" : "The request was successful; the operation will complete asynchronously."
          },
          "204" : {
            "description" : "No Content - the specified resource was not found."
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Updates a configuration store with the specified parameters.",
        "operationId" : "ConfigurationStores_Update",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for updating a configuration store.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfigurationStoreUpdateParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStore"
                }
              }
            }
          },
          "201" : {
            "description" : "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigurationStore"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/ListKeys" : {
      "post" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Lists the access key for the specified configuration store.",
        "operationId" : "ConfigurationStores_ListKeys",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$skipToken",
          "in" : "query",
          "description" : "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiKeyListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/RegenerateKey" : {
      "post" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Regenerates an access key for the specified configuration store.",
        "operationId" : "ConfigurationStores_RegenerateKey",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for regenerating an access key.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegenerateKeyParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiKey"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/listKeyValue" : {
      "post" : {
        "tags" : [ "ConfigurationStores" ],
        "description" : "Lists a configuration store key-value.",
        "operationId" : "ConfigurationStores_ListKeyValue",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The parameters for retrieving a key-value.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListKeyValueParameters"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeyValue"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections" : {
      "get" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Lists all private endpoint connections for a configuration store.",
        "operationId" : "PrivateEndpointConnections_ListByConfigurationStore",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateEndpointConnectionListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections/{privateEndpointConnectionName}" : {
      "get" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Gets the specified private endpoint connection associated with the configuration store.",
        "operationId" : "PrivateEndpointConnections_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "privateEndpointConnectionName",
          "in" : "path",
          "description" : "Private endpoint connection name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateEndpointConnection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Update the state of the specified private endpoint connection associated with the configuration store.",
        "operationId" : "PrivateEndpointConnections_CreateOrUpdate",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "privateEndpointConnectionName",
          "in" : "path",
          "description" : "Private endpoint connection name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The private endpoint connection properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateEndpointConnection"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateEndpointConnection"
                }
              }
            }
          },
          "201" : {
            "description" : "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateEndpointConnection"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PrivateEndpointConnections" ],
        "description" : "Deletes a private endpoint connection.",
        "operationId" : "PrivateEndpointConnections_Delete",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "privateEndpointConnectionName",
          "in" : "path",
          "description" : "Private endpoint connection name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly."
          },
          "202" : {
            "description" : "The request was successful; the operation will complete asynchronously."
          },
          "204" : {
            "description" : "No Content - the specified resource was not found."
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources" : {
      "get" : {
        "tags" : [ "PrivateLinkResources" ],
        "description" : "Gets the private link resources that need to be created for a configuration store.",
        "operationId" : "PrivateLinkResources_ListByConfigurationStore",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateLinkResourceListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources/{groupName}" : {
      "get" : {
        "tags" : [ "PrivateLinkResources" ],
        "description" : "Gets a private link resource that need to be created for a configuration store.",
        "operationId" : "PrivateLinkResources_Get",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The Microsoft Azure subscription ID.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group to which the container registry belongs.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configStoreName",
          "in" : "path",
          "description" : "The name of the configuration store.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 5,
            "pattern" : "^[a-zA-Z0-9_-]*$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The client API version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupName",
          "in" : "path",
          "description" : "The name of the private link resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful; the request was well-formed and received properly.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateLinkResource"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ApiKey" : {
        "type" : "object",
        "properties" : {
          "connectionString" : {
            "type" : "string",
            "description" : "A connection string that can be used by supporting clients for authentication.",
            "readOnly" : true
          },
          "id" : {
            "type" : "string",
            "description" : "The key ID.",
            "readOnly" : true
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The last time any of the key's properties were modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "A name for the key describing its usage.",
            "readOnly" : true
          },
          "readOnly" : {
            "type" : "boolean",
            "description" : "Whether this key can only be used for read operations.",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the key that is used for authentication purposes.",
            "readOnly" : true
          }
        },
        "description" : "An API key used for authenticating with a configuration store endpoint."
      },
      "ApiKeyListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URI that can be used to request the next set of paged results."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection value.",
            "items" : {
              "$ref" : "#/components/schemas/ApiKey"
            }
          }
        },
        "description" : "The result of a request to list API keys."
      },
      "CheckNameAvailabilityParameters" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name to check for availability."
          },
          "type" : {
            "type" : "string",
            "description" : "The resource type to check for name availability.",
            "enum" : [ "Microsoft.AppConfiguration/configurationStores" ]
          }
        },
        "description" : "Parameters used for checking whether a resource name is available."
      },
      "ConfigurationStore" : {
        "required" : [ "sku" ],
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/ResourceIdentity"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ConfigurationStoreProperties"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          }
        },
        "description" : "The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "ConfigurationStoreListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URI that can be used to request the next set of paged results."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection value.",
            "items" : {
              "$ref" : "#/components/schemas/ConfigurationStore"
            }
          }
        },
        "description" : "The result of a request to list configuration stores."
      },
      "ConfigurationStoreProperties" : {
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "description" : "The creation date of configuration store.",
            "format" : "date-time",
            "readOnly" : true
          },
          "encryption" : {
            "$ref" : "#/components/schemas/EncryptionProperties"
          },
          "endpoint" : {
            "type" : "string",
            "description" : "The DNS endpoint where the configuration store API will be available.",
            "readOnly" : true
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning state of the configuration store.",
            "readOnly" : true,
            "enum" : [ "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled" ]
          }
        },
        "description" : "The properties of a configuration store."
      },
      "ConfigurationStorePropertiesUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "encryption" : {
            "$ref" : "#/components/schemas/EncryptionProperties"
          }
        },
        "description" : "The properties for updating a configuration store."
      },
      "ConfigurationStoreUpdateParameters" : {
        "type" : "object",
        "properties" : {
          "identity" : {
            "$ref" : "#/components/schemas/ResourceIdentity"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ConfigurationStorePropertiesUpdateParameters"
          },
          "sku" : {
            "$ref" : "#/components/schemas/Sku"
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The ARM resource tags."
          }
        },
        "description" : "The parameters for updating a configuration store."
      },
      "EncryptionProperties" : {
        "type" : "object",
        "properties" : {
          "keyVaultProperties" : {
            "$ref" : "#/components/schemas/KeyVaultProperties"
          }
        },
        "description" : "The encryption settings for a configuration store."
      },
      "Error" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "Error code."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message."
          }
        },
        "description" : "AppConfiguration error object."
      },
      "KeyValue" : {
        "type" : "object",
        "properties" : {
          "contentType" : {
            "type" : "string",
            "description" : "The content type of the key-value's value.\r\nProviding a proper content-type can enable transformations of values when they are retrieved by applications.",
            "readOnly" : true
          },
          "eTag" : {
            "type" : "string",
            "description" : "An ETag indicating the state of a key-value within a configuration store.",
            "readOnly" : true
          },
          "key" : {
            "type" : "string",
            "description" : "The primary identifier of a key-value.\r\nThe key is used in unison with the label to uniquely identify a key-value.",
            "readOnly" : true
          },
          "label" : {
            "type" : "string",
            "description" : "A value used to group key-values.\r\nThe label is used in unison with the key to uniquely identify a key-value.",
            "readOnly" : true
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The last time a modifying operation was performed on the given key-value.",
            "format" : "date-time",
            "readOnly" : true
          },
          "locked" : {
            "type" : "boolean",
            "description" : "A value indicating whether the key-value is locked.\r\nA locked key-value may not be modified until it is unlocked.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A dictionary of tags that can help identify what a key-value may be applicable for.",
            "readOnly" : true
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the key-value.",
            "readOnly" : true
          }
        },
        "description" : "The result of a request to retrieve a key-value from the specified configuration store."
      },
      "KeyVaultProperties" : {
        "type" : "object",
        "properties" : {
          "identityClientId" : {
            "type" : "string",
            "description" : "The client id of the identity which will be used to access key vault."
          },
          "keyIdentifier" : {
            "type" : "string",
            "description" : "The URI of the key vault key used to encrypt data."
          }
        },
        "description" : "Settings concerning key vault encryption for a configuration store."
      },
      "ListKeyValueParameters" : {
        "required" : [ "key" ],
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "The key to retrieve."
          },
          "label" : {
            "type" : "string",
            "description" : "The label of the key."
          }
        },
        "description" : "The parameters used to list a configuration store key-value"
      },
      "NameAvailabilityStatus" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "If any, the error message that provides more detail for the reason that the name is not available.",
            "readOnly" : true
          },
          "nameAvailable" : {
            "type" : "boolean",
            "description" : "The value indicating whether the resource name is available.",
            "readOnly" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "If any, the reason that the name is not available.",
            "readOnly" : true
          }
        },
        "description" : "The result of a request to check the availability of a resource name."
      },
      "OperationDefinition" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "$ref" : "#/components/schemas/OperationDefinitionDisplay"
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}."
          }
        },
        "description" : "The definition of a configuration store operation."
      },
      "OperationDefinitionDisplay" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description for the operation."
          },
          "operation" : {
            "type" : "string",
            "description" : "The operation that users can perform."
          },
          "provider" : {
            "type" : "string",
            "description" : "The resource provider name: Microsoft App Configuration.\"",
            "readOnly" : true
          },
          "resource" : {
            "type" : "string",
            "description" : "The resource on which the operation is performed."
          }
        },
        "description" : "The display information for a configuration store operation."
      },
      "OperationDefinitionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URI that can be used to request the next set of paged results."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection value.",
            "items" : {
              "$ref" : "#/components/schemas/OperationDefinition"
            }
          }
        },
        "description" : "The result of a request to list configuration store operations."
      },
      "PrivateEndpoint" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource Id for private endpoint"
          }
        },
        "description" : "Private endpoint which a connection belongs to."
      },
      "PrivateEndpointConnection" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/PrivateEndpointConnectionProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource.",
            "readOnly" : true
          }
        },
        "description" : "A private endpoint connection"
      },
      "PrivateEndpointConnectionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URI that can be used to request the next set of paged results."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection value.",
            "items" : {
              "$ref" : "#/components/schemas/PrivateEndpointConnection"
            }
          }
        },
        "description" : "A list of private endpoint connections"
      },
      "PrivateEndpointConnectionProperties" : {
        "required" : [ "privateLinkServiceConnectionState" ],
        "type" : "object",
        "properties" : {
          "privateEndpoint" : {
            "$ref" : "#/components/schemas/PrivateEndpoint"
          },
          "privateLinkServiceConnectionState" : {
            "$ref" : "#/components/schemas/PrivateLinkServiceConnectionState"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "The provisioning status of the private endpoint connection.",
            "readOnly" : true,
            "enum" : [ "Creating", "Updating", "Deleting", "Succeeded", "Failed", "Canceled" ]
          }
        },
        "description" : "Properties of a private endpoint connection."
      },
      "PrivateLinkResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource.",
            "readOnly" : true
          },
          "properties" : {
            "$ref" : "#/components/schemas/PrivateLinkResourceProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource.",
            "readOnly" : true
          }
        },
        "description" : "A resource that supports private link capabilities."
      },
      "PrivateLinkResourceListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "The URI that can be used to request the next set of paged results."
          },
          "value" : {
            "type" : "array",
            "description" : "The collection value.",
            "items" : {
              "$ref" : "#/components/schemas/PrivateLinkResource"
            }
          }
        },
        "description" : "A list of private link resources."
      },
      "PrivateLinkResourceProperties" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string",
            "description" : "The private link resource group id.",
            "readOnly" : true
          },
          "requiredMembers" : {
            "type" : "array",
            "description" : "The private link resource required member names.",
            "readOnly" : true,
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Properties of a private link resource."
      },
      "PrivateLinkServiceConnectionState" : {
        "type" : "object",
        "properties" : {
          "actionsRequired" : {
            "type" : "string",
            "description" : "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
            "readOnly" : true,
            "enum" : [ "None", "Recreate" ]
          },
          "description" : {
            "type" : "string",
            "description" : "The private link service connection description."
          },
          "status" : {
            "type" : "string",
            "description" : "The private link service connection status.",
            "enum" : [ "Pending", "Approved", "Rejected", "Disconnected" ]
          }
        },
        "description" : "The state of a private link service connection."
      },
      "RegenerateKeyParameters" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The id of the key to regenerate."
          }
        },
        "description" : "The parameters used to regenerate an API key."
      },
      "Resource" : {
        "required" : [ "location" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The resource ID.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "The location of the resource. This cannot be changed after the resource is created."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the resource.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The tags of the resource."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the resource.",
            "readOnly" : true
          }
        },
        "description" : "An Azure resource."
      },
      "ResourceIdentity" : {
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "The principal id of the identity. This property will only be provided for a system-assigned identity.",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
            "enum" : [ "None", "SystemAssigned", "UserAssigned", "SystemAssigned, UserAssigned" ]
          },
          "userAssignedIdentities" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserIdentity"
            },
            "description" : "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
          }
        },
        "description" : "An identity that can be associated with a resource."
      },
      "Sku" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The SKU name of the configuration store."
          }
        },
        "description" : "Describes a configuration store SKU."
      },
      "UserIdentity" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "description" : "The client ID of the user-assigned identity.",
            "readOnly" : true
          },
          "principalId" : {
            "type" : "string",
            "description" : "The principal ID of the user-assigned identity.",
            "readOnly" : true
          }
        },
        "description" : "A resource identity that is managed by the user of the service."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The client API version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ConfigStoreNameParameter" : {
        "name" : "configStoreName",
        "in" : "path",
        "description" : "The name of the configuration store.",
        "required" : true,
        "schema" : {
          "maxLength" : 50,
          "minLength" : 5,
          "pattern" : "^[a-zA-Z0-9_-]*$",
          "type" : "string"
        }
      },
      "ResourceGroupNameParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group to which the container registry belongs.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The Microsoft Azure subscription ID.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}