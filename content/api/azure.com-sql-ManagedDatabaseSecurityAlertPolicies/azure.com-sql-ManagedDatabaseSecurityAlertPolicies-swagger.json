{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "SqlManagementClient",
    "description" : "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "version" : "2017-03-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/securityAlertPolicies" : {
      "get" : {
        "tags" : [ "ManagedDatabaseSecurityAlertPolicies" ],
        "description" : "Gets a list of managed database's security alert policies.",
        "operationId" : "ManagedDatabaseSecurityAlertPolicies_ListByDatabase",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managedInstanceName",
          "in" : "path",
          "description" : "The name of the managed instance.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the managed database for which the security alert policies are defined.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the managed database security alert policies.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedDatabaseSecurityAlertPolicyListResult"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress\n\n * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}" : {
      "get" : {
        "tags" : [ "ManagedDatabaseSecurityAlertPolicies" ],
        "description" : "Gets a managed database's security alert policy.",
        "operationId" : "ManagedDatabaseSecurityAlertPolicies_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managedInstanceName",
          "in" : "path",
          "description" : "The name of the managed instance.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the managed database for which the security alert policy is defined.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "securityAlertPolicyName",
          "in" : "path",
          "description" : "The name of the security alert policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved the managed database security alert policy.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedDatabaseSecurityAlertPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress\n\n * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings"
          }
        }
      },
      "put" : {
        "tags" : [ "ManagedDatabaseSecurityAlertPolicies" ],
        "description" : "Creates or updates a database's security alert policy.",
        "operationId" : "ManagedDatabaseSecurityAlertPolicies_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managedInstanceName",
          "in" : "path",
          "description" : "The name of the managed instance.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "databaseName",
          "in" : "path",
          "description" : "The name of the managed database for which the security alert policy is defined.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "securityAlertPolicyName",
          "in" : "path",
          "description" : "The name of the security alert policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "default" ]
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "The subscription ID that identifies an Azure subscription.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "The API version to use for the request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The database security alert policy.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManagedDatabaseSecurityAlertPolicy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully set the managed database security alert policy.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedDatabaseSecurityAlertPolicy"
                }
              }
            }
          },
          "201" : {
            "description" : "Successfully created the managed database security alert policy.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ManagedDatabaseSecurityAlertPolicy"
                }
              }
            }
          },
          "default" : {
            "description" : "*** Error Responses: ***"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ManagedDatabaseSecurityAlertPolicy" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/SecurityAlertPolicyProperties"
          }
        },
        "description" : "A managed database security alert policy.",
        "allOf" : [ {
          "description" : "ARM proxy resource.",
          "allOf" : [ {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Resource ID.",
                "readOnly" : true
              },
              "name" : {
                "type" : "string",
                "description" : "Resource name.",
                "readOnly" : true
              },
              "type" : {
                "type" : "string",
                "description" : "Resource type.",
                "readOnly" : true
              }
            },
            "description" : "ARM resource."
          } ]
        } ]
      },
      "ManagedDatabaseSecurityAlertPolicyListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to retrieve next page of results.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "Array of results.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ManagedDatabaseSecurityAlertPolicy"
            }
          }
        },
        "description" : "A list of the managed database's security alert policies."
      },
      "SecurityAlertPolicyProperties" : {
        "required" : [ "state" ],
        "type" : "object",
        "properties" : {
          "creationTime" : {
            "type" : "string",
            "description" : "Specifies the UTC creation time of the policy.",
            "format" : "date-time",
            "readOnly" : true
          },
          "disabledAlerts" : {
            "type" : "array",
            "description" : "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
            "items" : {
              "type" : "string"
            }
          },
          "emailAccountAdmins" : {
            "type" : "boolean",
            "description" : "Specifies that the alert is sent to the account administrators."
          },
          "emailAddresses" : {
            "type" : "array",
            "description" : "Specifies an array of e-mail addresses to which the alert is sent.",
            "items" : {
              "type" : "string"
            }
          },
          "retentionDays" : {
            "type" : "integer",
            "description" : "Specifies the number of days to keep in the Threat Detection audit logs.",
            "format" : "int32"
          },
          "state" : {
            "type" : "string",
            "description" : "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
            "enum" : [ "New", "Enabled", "Disabled" ]
          },
          "storageAccountAccessKey" : {
            "type" : "string",
            "description" : "Specifies the identifier key of the Threat Detection audit storage account."
          },
          "storageEndpoint" : {
            "type" : "string",
            "description" : "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs."
          }
        },
        "description" : "Properties of a security alert policy."
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "The API version to use for the request.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "BlobAuditingPolicyNameParameter" : {
        "name" : "blobAuditingPolicyName",
        "in" : "path",
        "description" : "The name of the blob auditing policy.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "default" ]
        }
      },
      "DatabaseNameParameter" : {
        "name" : "databaseName",
        "in" : "path",
        "description" : "The name of the database.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ManagedInstanceNameParameter" : {
        "name" : "managedInstanceName",
        "in" : "path",
        "description" : "The name of the managed instance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ResourceGroupParameter" : {
        "name" : "resourceGroupName",
        "in" : "path",
        "description" : "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "ServerNameParameter" : {
        "name" : "serverName",
        "in" : "path",
        "description" : "The name of the server.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineContainerNameParameter" : {
        "name" : "sqlVirtualMachineContainerName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineContainer.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SqlVirtualMachineInstanceNameParameter" : {
        "name" : "sqlVirtualMachineInstanceName",
        "in" : "path",
        "description" : "The name of the SqlVirtualMachineInstance.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "The subscription ID that identifies an Azure subscription.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "VirtualClusterNameParameter" : {
        "name" : "virtualClusterName",
        "in" : "path",
        "description" : "The name of the virtual cluster.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow"
      }
    }
  }
}