{
  "mappings" : [ {
    "id" : "f91b6f0c-4260-421d-80cd-a832fea7f1e0",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "1ua231n76yty5584hv1r0bvg8jv79f41of86bxxb28vrn1vxti45i0dp8isck9vpzdh5cd4uaep5zqlczsslo87rq8grmeuvgbyz7yppr14ap8uod7i31"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 915316313,\n  \"apiErrorMsg\" : \"x9vfgxx0nes2i66fculdh7iui9mhwoiv8k9e7rsbqjpmx2xjqk5sxb8dia4ezeebt7v66e631g8sxur9jxjyk2rooehmi3ccge2vt5epi7cc3cyelvvfxiauictjobvelplypx94fup7in7heju3li2c2d8gxut4f7glutnlm6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f91b6f0c-4260-421d-80cd-a832fea7f1e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.819104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b1cefbdf-86c1-40ae-b68b-3e356e56fd8a",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "1j7itwgsrv3wdzrcq8wk55pckan44pcz4ovvyz93qgzxzprrjvrobpo0g8pok8joht5f9lzlkxvda8sa9v90nr6k01gds33mwhe9gv5lcjqwkfzt6g15yy79i79fksqi24lp4gpt0chubeoboxs"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 633138423,\n  \"apiErrorMsg\" : \"f284p1htaohnhldip0xwcfjfp3eibxo3322xzpc5e3ohklv4jbrqp41rgriehticww1780ln\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1cefbdf-86c1-40ae-b68b-3e356e56fd8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.81902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7677b5d1-a4ba-4ae5-a532-dee86068538f",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "t0vmosceffky45apq4pqb016fnestut1cplkqlbudbncm64h719k43yv306pm9jum9t9dffl3nd5ysnx5"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1862038615,\n  \"apiErrorMsg\" : \"1gdmgutjqdbmxcttt8lya0gmk0jibk01vgubbd6s1biu1pgqrf4ykuzpk88auzx3ejnuo4rqbs9t4nr98606dvb3i8y1qd8lawf4nwc5oxkga7fz9toqfv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7677b5d1-a4ba-4ae5-a532-dee86068538f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.818937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a32ec8d9-90a0-4c9a-a421-109a75bb411d",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "vxzuvhh1hh8cvz4yokpabfp6c82kt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a32ec8d9-90a0-4c9a-a421-109a75bb411d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.818853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "8b8a7b56-1ed5-4e47-b01f-29d9d6d3ad7a",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F751696"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 920211350,\n  \"apiErrorMsg\" : \"zmah4eh05\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b8a7b56-1ed5-4e47-b01f-29d9d6d3ad7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.818783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "a98c7f60-d413-4aca-b54a-91b61aeec812",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F456784"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1474573277,\n  \"apiErrorMsg\" : \"fbapz483iotidjcc6w7e1n7x8l76mzjgp5qmxujhu2pvy32all2kl55kll2zmuxhd3gbhiqa518pufs72k10ib58uozbyz4ki\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a98c7f60-d413-4aca-b54a-91b61aeec812",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.818657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "facc4659-c3a7-48f2-885e-a29d6b32cf8c",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F244935"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 185072675,\n  \"apiErrorMsg\" : \"tiotdnyy9f1u50jvaiinb8eyd30i10pokh4ud1jj84p0z06pc5k3d0hdsza1x5nbvdel34eagh0du1ohe12fboogn9yqt5ia3pdzyhayttduj1tvhpzwzm8ig4xox5d5jnpl92tg4xs3iz8gy6srn43k5mq9sumhb4s9px62khyo7onca7oa9hq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "facc4659-c3a7-48f2-885e-a29d6b32cf8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.818527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "9654976d-d99c-466a-ad4c-1c55af4b766a",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F007853"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : false,\n  \"content-size\" : 495602451,\n  \"load-time\" : 1.2973020502831517E308,\n  \"content-encoding\" : \"u4ij5cg42ivlryb3i8cref8h9gjr9g6kqtrr3ioupyt4lqobc\",\n  \"server-ip\" : \"uiqrp35am85t7gjnylewccccvmhx67bkapl76m2ihv341jqx00uyqxa153t0d90l\",\n  \"title\" : \"Consequuntur non laboriosam.\",\n  \"content\" : \"Enim laboriosam non est vitae. Quo sapiente optio veniam voluptatibus omnis. Eos sed cupiditate et quae a est.\",\n  \"server-name\" : \"Karly Dooley\",\n  \"valid\" : true,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"ggggy\",\n  \"server-region\" : \"ye0ifcm8v39a7gletpd83wmfzz0l2zede4jj3igf9zq680omelac6m1l2sv7ipjqcsmb5pdvapj9gtv0mmbhwq9t\",\n  \"server-hostname\" : \"Charles Beier\",\n  \"content-type\" : \"p5u7my12ghhxx9g998w8l2i6vvshl61l1ujmglqpklc6ea9b27dqz180bizqxcamsd2g0m8c14jbz3v1m77451i4eq6hb46agxzse62ijykkvbu3ry0komaikjvl2x6hwkqgyg5wp295uacv646tbmdcxs906zqyn\",\n  \"is-timeout\" : true,\n  \"url-protocol\" : \"ad9dnl78xbj8qc7utw9y3w8xxptz09hcrnjffm63g52e3h0h8433nyxb8rrgofqzvevn0lee4j04nhmlcfelbrx3utiouezh0guv8inc5bln\",\n  \"language-code\" : \"u2mvphq6fr07f7d0p88bn9mksqsxiomh22pkurkqr3h11prkls31ai02nj4fduqx0my4ww4gnc191ojl98\",\n  \"query\" : { },\n  \"url-path\" : \"ng7\",\n  \"http-status\" : 597823531,\n  \"real\" : true,\n  \"url\" : \"https://web.example.mocklab.io/372869\",\n  \"is-error\" : false,\n  \"server-country\" : \"Trinidad and Tobago\",\n  \"server-city\" : \"Merleshire\",\n  \"url-port\" : 169207190,\n  \"http-status-message\" : 566962401\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9654976d-d99c-466a-ad4c-1c55af4b766a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.818378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "38d07971-3d0a-471f-acb1-07f3374cfa41",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "94w476bc7dyn0dxa1kymqxuzs8px1bhjc83o4f4vueaa8k8vhgk8jd0m800likpal585crmpvqpz34dk5ndoaq5s0"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1536813268,\n  \"apiErrorMsg\" : \"5lme1tyndi5n2cf81ftxwmf0jbxvgyp8dky3ow48dncjc1195gd8kkumnk4v8ljx28ilvv49mtd0ea5fn44qff8mqwnivp6c21gw236oskzribv832tmc7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38d07971-3d0a-471f-acb1-07f3374cfa41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.817617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "e9265cd4-83c3-4711-b2f3-9a24e1dda96d",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "hs60eb88h21exxuu1hwzfyhr1x8fur73yzm1atgw3gapsrc5c5lhibrjtu7iwajyih1x85u2k6wxi4ojryoc9jkrueh3ghk"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 467147788,\n  \"apiErrorMsg\" : \"aip3g4zqdnm2r5fkizy284iujd793ffh4th5jcjqhw6xd2w73tcovytvr0pfxg8ct6d9n52fue7qgdiv6kiyoke7v1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9265cd4-83c3-4711-b2f3-9a24e1dda96d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.817537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "241a5a28-e155-48a3-8dce-2485f90c48b6",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "s7g6spkic7q8f67cv0bgig7xg8ic66jzly5gbubu8rr9lk"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 866010936,\n  \"apiErrorMsg\" : \"l8ttlvqgnrwanu9rs68y7u8mm2obubc0vn11xxn9ku83a1hjmgdpdk2hki55sc2wikd3vcvfhk4495f53uwgcliz3jc5gxr43cfcgcrbc9b7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "241a5a28-e155-48a3-8dce-2485f90c48b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.817454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "de2f70ed-f1bb-4a84-8590-25ed8e1af2f2",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "z16wpwnost77uvr01cnkzv2dvl5iryr0ngedjyib4mbjzvup52pxldf0lt71hho1uv76d9rlowh92bzpgj2kxsw7yrt3b2n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"0utmkoana7z5nu4uk4vi2a7ilwuxheh0ig6fd3fn0j2pv35lm3vnnlezwjcbyxqvltf4bz9v9ueeapqpb7ubkgh2jkv935ypto534plyciclbnkpcncmteajwzdret05fz8sjta5ql4jg\",\n  \"os\" : \"kmt820dhxn9wsw7uvx316fbus6urk0l1hcs1kdcqgwt48bnc0eqdmofdr0kkreb3z1yx5mett3hnmn0c5s71j7d3fmv7yespzwbnfoksp2aqweppmd9ytdg04mhjnfzr1yrr0z584susx\",\n  \"device-brand\" : \"dzkgmsihv8nktzqi4qhhlv6iqpvfit4sq6td8kbimfn3f82br1jp41bwq7khbcav\",\n  \"browser-release\" : \"6py48glu81z1q5eejtp2zai0uaikf8fxd08qysey7zvwr1nfys2wga45h3pgwa6lsceghdex3nbnlpcf914bkj7dvrbuv6rl6gadnot9klelcq62rykfq24dj02ny8ifoiddlrguhlqsn7gfi6co9mi1iwel498xl879jqaejn\",\n  \"device-height-px\" : 1.6248265985834461E308,\n  \"device-pixel-ratio\" : 2.468682694544041E307,\n  \"os-family\" : \"i82854sksg0d66us29jlji3tngz88hamng7nojw7z7xqan6tzmj2q9oisdmr3axymsz373eo8q6domu1wi1ezzpvqgknwnrau7kg7r76kapefee35qpxaeufl6di1bl35vhafs6qjf\",\n  \"device-ppi\" : 8.693677792681591E307,\n  \"device-price\" : 1.2888358851089496E308,\n  \"type\" : \"f66x5g3p6nrthvzggaw8lpxb6ioqq7qewd43wl28gzoc9p0f8f4gwx53mu181g6e3hf3hpo1vr1ykagp9cacsex3hnczobn47dl58ggdy7obd40bk2agzouvu2\",\n  \"ua\" : \"qff41h3u2usgm3l9knehqa6j\",\n  \"os-version-major\" : \"tv785f2wk65wwz1tnukme913btn5uiun2wdaih6ez87ge9xwc50cclbsch69jaal4xg96gebowjbct6b75zrfre22cpsnpwiflkg2jtbbntq29jviuxask6dr27\",\n  \"version\" : \"aswubxcw51n3e8c4o1657klyzubbhczvmkdm342gkvttor3xalo9uo4ors1dmru6cy1u8mpl3r4odp5odi2z90hqhj5m34kqghvri6e71pm1jadps1ygj0quhevg0mni7el5dj8vj2lk0yoxwtus9kza6avdhpr7dxho93ww5mroa8539\",\n  \"version-major\" : \"o4keugbb11hommbye446bk6hqqugx3erlh9tcvs9ww9g89gn0gh2dj73omyvv9ds2encvn709ffrn3lrp1hsatklp0jrtfpsjsydzkz5nln6dr9lsb1u2mpux4cajtyd16rpnfyvekyhg986qpc58jzaguyj5s823qil827ynqo0ht6xx4b\",\n  \"browser-engine\" : \"m6jx9\",\n  \"device-model-code\" : \"jaiirgr3kc9hul8gx57ijkc6te43etaz3m3b3ugfb4vnz\",\n  \"device-release\" : \"1g3ih76qq7c2v66w0chb3ra8ffklgsiza6nlg98l4htb3l5hrotfuv86qn0xienrcdw4fw7g5xqirreiubl9nygje3dfa8grtckqz8x71q9h97g9h8d9esmymqz02n42ektprc03ggv5w9z274xm4h7zotq4t18s68hnb20z9ok9454v\",\n  \"os-version\" : \"6elyhx6b86q29iiyl81g2lfqs45nzqpx9zbxca5cjb8gm1h10so694ffltnckkrdgqdychvn3b7p7k4f8gdnchzdob4q9dab6o313\",\n  \"name\" : \"Ja Lindgren\",\n  \"device-resolution\" : \"0j0qrc6ddd6xhn6ddspykem2ryzj51ojd9c7d1dfpexct58x7qk7ps3ffw0z29jedtzehx2k5qs1rcsnrdw0tjkldc378baay4quk0h7yih2tmglwlbp2g2ua5uhjzbz5d68ou6w8iu1uhj305o\",\n  \"is-webview\" : true,\n  \"device-width-px\" : 9.22916622953672E307,\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de2f70ed-f1bb-4a84-8590-25ed8e1af2f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.817362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "a01cc5f1-f39f-49de-9284-f034e6a0588f",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1932026385,\n  \"apiErrorMsg\" : \"i02h59gdw645bvd4rr2ui6bkkivehf571pdkr44b66dgvhu543vtxipva2kxhvv12d55pnurnbf81v7l11r8fd09u5s14yzwdder7az960ajb7ncvk0m7msf2ic8botbth6eieaksjv4f9gtc6k3atc0rb2rmudf8dyydelglmczh8ks11ufb3151e8q7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a01cc5f1-f39f-49de-9284-f034e6a0588f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.81684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "f4bb1658-22ca-45f9-9cd4-09a32039248c",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 232821975,\n  \"apiErrorMsg\" : \"cl4dhkfjmgjvmgcqyasmbmwkkgusroi6c8v7mpyhnejs9rpaaqtioo76len6nynthmynihuouy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4bb1658-22ca-45f9-9cd4-09a32039248c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.81678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "54d6d6b6-faf2-424a-b000-81e06cdb99a2",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 372768213,\n  \"apiErrorMsg\" : \"tfzjpysfwnzzxw29cz8do6hxy7z4gijpkchfulhv1vaqry12wsj0cqg7o0ws6ac6uwat96z8y9pkgppcnorn7shlbpnxwmkb1q663jz7tjgqxvh9b1gukhzxzg70w6is2upi7s02jk4jd6ir26ajk0ro\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54d6d6b6-faf2-424a-b000-81e06cdb99a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "35584082-45c9-403b-856d-895ba95fc8b3",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"ljh31j2afo0e1futr4w62zuaue6kyr7whoba73ufl5152ff3rzes1l9la193zyekqq6xklt1840l\",\n  \"sent\" : true,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35584082-45c9-403b-856d-895ba95fc8b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "b109c581-1c27-4567-a0d9-9ef149f2b17c",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1457102433,\n  \"apiErrorMsg\" : \"wsq6wtm2njzkxb323u4yk8tbly7q0da4ploh6ukobble2xm9e6aqgo4r8cxnx4f8a2ek5y2vm8ss3qy6zt5vcwvur16rm9ob1bh1etmi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b109c581-1c27-4567-a0d9-9ef149f2b17c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "cc039431-ee7a-432a-a676-0b543fffdcae",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1464976366,\n  \"apiErrorMsg\" : \"vhp2wx05226fmteoreq6ort2y3wtfnwgm8t8fo5csf5chihgd706yvipz1qvdhrqj9yf4rc7wsmrgdncuhllw7vxkqnw9a7mm20m4o7an1glhzul7lgvyi2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc039431-ee7a-432a-a676-0b543fffdcae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "f40e777f-86df-4e61-aaa5-c83a4e15a17f",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1280734329,\n  \"apiErrorMsg\" : \"vl5asfu190vi3fq6cty8bp0vk85miu1ba6wr7kw7z7ml1nm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f40e777f-86df-4e61-aaa5-c83a4e15a17f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "adc300ba-1eb2-4eb8-8e19-18998b0ad3e9",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"hss5uj5rdq0gxfb1fisraniw4g835cw6zk7ijcm1qnrjg8y6sgyde64rxw26wd5vi\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adc300ba-1eb2-4eb8-8e19-18998b0ad3e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "4eb622c8-a1bf-45fe-a01d-cf2adac8e04f",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1488976595,\n  \"apiErrorMsg\" : \"8bv4y8xd0bltvwlv71yvy4gnjc7mj5596qoz0w71m6o73cmy3d13jtatcbdj7cvty5h9lfz1ju6xbn1nkjbwp2lxflgytg5kpkx1koaflz75f2w2ikhcf0h0k2s2wjx7bqqjzc3dloqdn4mmouj1n64myxw2e6bez1m31mmndv9c02zs7qsy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4eb622c8-a1bf-45fe-a01d-cf2adac8e04f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "326d79b0-447a-4413-96de-82be57b2967b",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 501409514,\n  \"apiErrorMsg\" : \"bbaeehwcellir452hkcppv9hyq0wk64cbgtafdd5lha4titguda5kcxlpvnqoxxpi7vb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "326d79b0-447a-4413-96de-82be57b2967b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "b57b7ff0-3f76-45d9-92bf-eea17390c077",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1867571637,\n  \"apiErrorMsg\" : \"dvsnfjo6uw9o84rcm6hpa34n56l27eq78prszyjsar9ddl77kehyoqkzyajobecyccghhu1719dtxhvzb29ff8ha8j238ps1yuhn2zqfzfp99q8xdbr1e9ws3qg4fpzf16h1w8j3gr5bws6lfrmetc9w7ioi7c9u7wzstagl07l26xg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b57b7ff0-3f76-45d9-92bf-eea17390c077",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "8cfda9b5-839e-4610-9de4-59b449f096db",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"r63seo1ghtz9e7obq60mt0sp9y7sz18v8bf9pn47tf0rcto9tariu7vu060grl02b6\",\n  \"calling\" : false,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8cfda9b5-839e-4610-9de4-59b449f096db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "094954f3-ddf1-45cf-ab87-52959d4297cc",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "7miqr22384i39x1lqw51x9va8cszownyc788s29p5fcg4zmvn77doneg8ksjbru4qr4sye5c1tscblcvk11ec031weds40bnuxl2ifocnai3f6q2wwu5jfyu9cexcqwnf9r4zcwjby3z0iq36qi4i2b7qzfq623rx7forjf729m6tqqc8xq2oaqguzlo"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1221158326,\n  \"apiErrorMsg\" : \"ll0pbgyo4ha8uaboqj6d8vm0cceyxps87v6cpywfallzjx15iz4c19is584ozfwvqghbjoce1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "094954f3-ddf1-45cf-ab87-52959d4297cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "05e5cafa-8bc5-4a23-b0ba-28a148d4bcd8",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "uia23xrvu5nbqvfij8bynmov0kehzot7e9po250r8zxzdqk1lc74kid8xdyz8tutz"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2115536600,\n  \"apiErrorMsg\" : \"akemiuqcx4gnnrhtqo3789ndyw3nbdczuvgp7spwcoi6pd4ijp1apf5e2jdti51bkmzi1byzarm8aocjna24b868a8j0y5imwbv72gotvjz4qqjwnomlwpa8wmpa6e0kdw3pdibom2up5j5jmcsm551qmr30836o73cpqeca7toxu2kqd4l6y1wp0m8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05e5cafa-8bc5-4a23-b0ba-28a148d4bcd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.816013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "31edc218-f39b-4c56-b61f-f30224cf7bb1",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "dkwcqa3d6ae81x3k6va7eqrdt762t66llqgwwc6drdaipq5oy1rde60rgv2rvit028f6wfyqau3e6l6jkowrsdke8avkz5gwny0c0nzqff7deasxpa2k6vwcmz3ypcnls88tms1koquej15t0a5dy366sls857m76ferrxxjjn9qrx05qc4"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 997589527,\n  \"apiErrorMsg\" : \"9fms457zqrt964e0h494rssdqxcxhq722mvbxrl0p24nu3jzh0z17p1i80pklknya4zbeie9ohznack29ktkxuj3hfzqjq6dsosva2i0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31edc218-f39b-4c56-b61f-f30224cf7bb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.81593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "3485f4d6-44ee-4ce8-9e36-b67bcce6a217",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "e6vnmudy6h35kmgmmjk43tvza1q4frw6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"country\" : \"United Kingdom of Great Britain and Northern Ireland\",\n  \"country-code\" : \"ffffm\",\n  \"prefix-network\" : \"cgi46k6tq2lph3ej7thxn8yrbpr1m48b78ei8nsb10fdssxkusxt34x6bise13uuerv37ctcrc4dod86hzwl685zg89lbz3oiwd8bd21oc69itbxge9b8iet2bdc6li5pjv8ww\",\n  \"international-number\" : \"jhftoje91uyiqu9hk59qw99bzyucybmxe5fthwsm16m2the11rn2y3zgzhk5wfh6uolu9bgp6ceaz3h8167aw7p6zfajofhof5jlf39edydn2ej2bcjdsvi76872m2hbox\",\n  \"location\" : \"q7b4wqh2t7et3eycxmd68gkop52w604alq09uupzvpw3ya04wk37u022d3o3jdw44nwco8efnai8r5mcipz91pnty8lc7rp36xhym4p6at1h033hnpcznpx5k6s6iuntc90ifxvgn79mhk390p7uepfmqkphopqp9as8hwm5juqu4rf2cw0\",\n  \"local-number\" : \"u8m20gxce16cy1dr\",\n  \"currency-code\" : \"RWF\",\n  \"type\" : \"eep2n5ctk00wd2tuurn5bdwjmujsbdqacc5s7q0luyz8lc1tis6ruwlygkj9gye0ztjwa5fnxk1bto1nhq0dyk04ynfmlkhbvvq0xj3mftcg61josn5e9pha4fngff6750rboj202xibk41410ue1acsv4olh4qv37xiei9f4s38u0suy5iqu8p21tpjh\",\n  \"international-calling-code\" : \"j95xi79t6t0z9b4i2seslmy7enuvqsm\",\n  \"country-code3\" : \"78jbq979ky\",\n  \"is-mobile\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3485f4d6-44ee-4ce8-9e36-b67bcce6a217",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "63b3e790-c0ca-409e-aeb0-2ec3df6f2159",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 984245763,\n  \"apiErrorMsg\" : \"8cdd0zxei3lc22jyqhal06qwi7mrf7csvynxmh52twj8egmksx7akokq3b68n2zg0fqp5ltvox28hxuwqyc1f43u95a40bxs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63b3e790-c0ca-409e-aeb0-2ec3df6f2159",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "92b6a90d-84ca-47f1-925c-9b0f04fff5c7",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 34403060,\n  \"apiErrorMsg\" : \"ptrb6rakkx2puoqdxz1kkcy3ymi69co8okq500tzc56k3ys0fymg7hafmd4d7o9ier98tjztcccgbn7j1fofuwg4f0pcef8vubjkkiirf8lm308fsez9znsjhe5zw0euofh9in5gyaw7yi5f7lgi4snfttfxzooo9o2n4w34g925\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92b6a90d-84ca-47f1-925c-9b0f04fff5c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "eda3faf2-3309-4258-81eb-7de798eb345d",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1973878363,\n  \"apiErrorMsg\" : \"c9ts2xc1qa9077r3l6rk6zz0ek4qnpy1gvf4aetb26f7eey6qd7mnfdkemttcim9yny4pn06oosbpfwkyvy1g5207tjqqfa237evir88507zfddtf802uxr4qglnp7o0lub\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eda3faf2-3309-4258-81eb-7de798eb345d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "77607829-3023-4b1d-b059-11dbcf7c3808",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77607829-3023-4b1d-b059-11dbcf7c3808",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.81536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "d8436d54-3ff0-4a86-8673-8ba98bc51c1d",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "2848pmjqrd0tf9tfkiuoiuwsw84d485d7zrvijgbmc91ntwitemx404ty8gozhq5ts84qusu4psc3x40yyd6fit2t8sshou6xzj2mgcew5atcwtw9t83w5dnvpd3uhd7mcux15fgi8jkl7zv4ti27w6zmrafp371no06c07gqzx58xumydfhss58tbbrby08q5ycb"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2016132680,\n  \"apiErrorMsg\" : \"prtl1ys76qe9mt9mdwbinmazg4jzoq03wkkx53fk53go3b09o732ont3mco06ohp5zequ13gfnl329kjfjcm9t4kyult\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8436d54-3ff0-4a86-8673-8ba98bc51c1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "8b3c577d-e635-4206-bb48-360864f32b10",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "jxnval1g6oa4hjiuiqbb9v2i1eunkpw17x54kwxftmohy2ex1ebcmfa9i793ru3f7o9yx6yvpn5en6xo02hvksu7caebr1altip0tjok0pvxgpupl3khoexn5jpljqmmbrk"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 246242191,\n  \"apiErrorMsg\" : \"xenq5r47hegbd36atqnv5jwaqneg0n3n7od3ikn919lfqch9f0tb647nh3b9frpb96vzy6bacsa7409vt70g6hhga9fx4snvxrpriqc0w65zemi3cfqzml9oxi2wg9xhczn2ckxz395xsz174wivslggu4goe3qraqytur3tzh66aft9h2g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b3c577d-e635-4206-bb48-360864f32b10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "08d19f18-b477-4bf8-90f3-554c0a5cd644",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "4fm8rfhuofbfbtwchgleal88k247x7zwubx7iccrevql62crywgas5lfl7fcrtab5z9xnfk12vbqobuztqh6199mtk6zqysix819lpxkwpd3woee7jlodi8r6g4vtk6tfhdk52qlkgksbdnncxveu09cb8d9kpctdi2u7et2el4d9qqqdrvchj"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 624596192,\n  \"apiErrorMsg\" : \"qk0ipdmoad3noetpfcxmfie2dyf1jqn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08d19f18-b477-4bf8-90f3-554c0a5cd644",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "56d3caf0-7368-4cbc-b9d0-add81b1b56e9",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "vzfomg8y56khcaxasboriyh0p5vb0ifshxzxttc07j9u4kvqdjh7qvh6s3e2hsdi7rf1609qjjfajbns201ftugb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"l1uju9186pbpoa26kyr37dsc875iphn18bu59lqwjreq8k3f1y9j1n1g9falyqr7cf171an0i3n7ogjqed9succmrvp2znq4z2p5wthx7primic3iref1l5m5n7bb3pcevbf4cju04y5d\",\n  \"country\" : \"Portugal\",\n  \"country-code\" : \"lllly\",\n  \"provider-domain\" : \"nj0k6qtjr565lyghqcxgdwwri622sx806m4cfczoz8xwighjriwbf25396o6b20urh3fnf5f2b87rkajt2m3u41q25qlvvkxn7r96bbzevdadwpj0ulcmhbx1j6qntnam7jbo2eydnm\",\n  \"city\" : \"North Saundrabury\",\n  \"vpn-domain\" : \"l34iyla9s19a1j4m1enqhpem6o2xkgdhhsm5mbjhqzkz9p5\",\n  \"is-vpn\" : false,\n  \"as-cidr\" : \"e6y9lsx59szqbev9jrlxek81ddlrjbq5yead01y6sj8t6urupw03oms72a893dywfptbelwyqnkcmr14jejqhqy33trp02q1zf6sa1c573c50p4ttxr10znu5b4i0l6kp\",\n  \"valid\" : true,\n  \"provider-type\" : \"smbhcyjv1eutardiz6vrs09arkl3shat100hcj8jxha2kue5lizfknvn0s9fo5g7ccz365ru\",\n  \"hostname\" : \"Ms. Jose Herman\",\n  \"as-age\" : 546179762,\n  \"continent-code\" : \"hjjam\",\n  \"is-bogon\" : true,\n  \"ip\" : \"59r8w356m91tcp0ams72sfnge9cxk03xjt8xvd\",\n  \"as-country-code\" : \"ssssl\",\n  \"provider-description\" : \"Itaque doloremque ex provident autem minus commodi. Recusandae aut nemo explicabo. Impedit aliquam quo. Voluptatem quaerat qui velit laudantium numquam occaecati.\",\n  \"as-country-code3\" : \"t5tbup7xar82hr5j7eaf73sw301td0exblv6bc229d6cllntc5tdnctcw67dql820\",\n  \"is-v4-mapped\" : true,\n  \"is-isp\" : true,\n  \"as-description\" : \"Nemo cumque qui numquam laborum. Voluptatem molestiae et perferendis aliquid. Corporis commodi est sed.\",\n  \"provider-website\" : \"n8mkr7bds0tapxjgwjarsuxlodrnbdkh9mhi4522p1q5xxm27jg0gfkkibsorrv8608k0edahcg2u9n8u5cpdxsah44e9qqalvm43exm38nxit926ii4ngf8hgmfx\",\n  \"is-hosting\" : true,\n  \"as-domains\" : [ \"br9b3nx4hnlew56gw0pw9fiaq9iymirhdnl8ula06a4q9pfh5pqf2am9ijaj607sm50an8rrah9g2i8jnh7tprrcfnf0hqll2p9xlg5s6r3kw6w56q5xuflh7tpwrolstkwki9fdb0byj70vd0aowysvxzhcryqynpl\", \"ep3kgl8m\", \"eegxhcn7naoqzexs7yjiheycxw6nemf07oq8ik34o8ruwrrdeh0f4pj\", \"yyfs5xt4furdypec24vgazfutamfff1cqen95t43wl6du0gy4fgonc\", \"vcr0lgvy6lpgide5opkk3807dp3tvw5hxie6m4tzhbf60q4yifpr0begttc\", \"gydapgfcn3i1kmnjqvhttp248j064vcbo3r7ya0c0sv7ko4d6ngcs\", \"m5zgefvb2d7n33mf1gaoutd8upudn1qs9nav7sl5cxiipw6c8og4hdqtxcyqskmraa9kqdaee66fquw93ekiqjqfukrzrhazsmv5\" ],\n  \"host-domain\" : \"5hmuq4g9fc7mx294xbtslw8pxgcomcilm6y4ij0fmge250slilyjeoo25v8rlquz0hoda2ao6ykls3vb5ee9nqp8r1lvwqk5694zoorxdqlvtald0azzrtzpuk7bn1fpiuuqsyur9txagy3wdprxa7pchbzbv7g5i866kz4knlsodqsh9zs9lp003mzcz7m7\",\n  \"is-proxy\" : false,\n  \"currency-code\" : \"UYU\",\n  \"region\" : \"aibq6x6jlcewd3p8rx0tvhttd98kvmehrutqt3su7h2j9kbtz8ri\",\n  \"asn\" : \"odrulmem3aayfidqi4u5be8nihm0cmmoijgz0ficlnqxkgo9d666x0n04fo0aqiuxiphi704z3bqguajbllnvr6tsahs1b7tyxpsadl6dm5a8w89qkxb5ax62v5x27\",\n  \"country-code3\" : \"vbb1f47lraiho3ccc9btw8oj0bnp7otmdesyfhdsmf1pold5casq4xboqfyhpfmenabz0\",\n  \"is-v6\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56d3caf0-7368-4cbc-b9d0-add81b1b56e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.815038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "e91e0d85-8ecc-4eeb-9fbd-4cad5c125f72",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "re8lv10hjfz4oi3ob17kdd9ey1pozsbckg94jxh5j17zwrm28mppnj8k871et7ix6bt8160up0u9cij7f2wa3fffycyo5m2ioxr2in7aw861ly2r1tjy73chch4zelplywhmqmccsupzxcf2hxfikxl3go5"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2034729097,\n  \"apiErrorMsg\" : \"qfzutl9ft3joceaq5j9vjtc8act0t9780f17wobtlqkvx2ihkvrg41wlqot4ar0udlr5l6ypno24ovtwlg2lmuw6x1bsl27ee5ph4vswxuts\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e91e0d85-8ecc-4eeb-9fbd-4cad5c125f72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.81427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "88ad9d2c-9c83-49d0-9092-d152eb1a308c",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "s6a7gdxe1arpy4l70tya67h8410gwcwumjpij6wm9sgjuk7hm6fpa4igznyv812a68tka4ox4rcjziesgylppcu4bt180pj97y075sxd6ss3lmfppfaf9b45ciusy2k4y5ppcw91yf2c40l2v47zoawp9z7n7b4emojbst7h57rhhhwazz8wxfz3n7h4oz"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1484397987,\n  \"apiErrorMsg\" : \"b97fkk6mbinywaz3615oi838huuxtoeu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88ad9d2c-9c83-49d0-9092-d152eb1a308c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.814187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "2073bb04-db4f-4f5c-b485-fe6ae7c3efa5",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "9xhn5mfm7276qjl3wyk1v89h4y6krj9fylelspzpupf31cymkleq4k53t3butk3vh8718ojrzscsvf29r57yh44a8dxt4y9ihrtyn5"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1672968012,\n  \"apiErrorMsg\" : \"om7wc6a47vpk6p0tuxxz26rngwosl377fh7yu5lk7run56uspydk57pl1vvvce3t6kb03l7lv6k4o9otupq4p0keem9qs2ga1pb66rwncukl6v5g483hdwvat5jg1nvjxvogl7c6rx9kor3s2ihhi8wk444thkwkpt9i9s713as96qx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2073bb04-db4f-4f5c-b485-fe6ae7c3efa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.814097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "e64b2f8b-d32c-4688-b3ec-fd6887c3fde8",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "5nh6u2"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"xsnqtb1i5ao9b402g5kg5njia3vsji32o4h7v8jfehzx6oj1am36d36c3jncgw7xzoxnivb7ryh7uc9c6e0a7jkzidjk1jk1d418w9oy5no60kpjo4p9js5fgyrsgo9vzc3i3\",\n  \"country\" : \"France\",\n  \"country-code\" : \"kkkkp\",\n  \"city\" : \"Tiffinyfurt\",\n  \"timezone\" : { },\n  \"ip\" : \"gvvhhmj348fkppxhplr00wodonj0lbyb13owg6gc872mmhh7h1v7c2kf8dpdg7qc4xclmj1nzdhcn6egc60b4bi30cygs3g1plrgxtdm1xx9jpae7627lyq\",\n  \"latitude\" : 4.08847225698026E307,\n  \"valid\" : false,\n  \"is-v4-mapped\" : true,\n  \"hostname\" : \"Rene Runolfsson\",\n  \"continent-code\" : \"va1swfsuvcf36ty5cso92876h4mlebmg52msxdjq0rwhdkvmsdh6i75dxptshkoonlwv0q4savi66ngntjkfeuigtcak278e4el7atndslgukewiblpb\",\n  \"host-domain\" : \"kze2evskx5w4pol10qpf9qfibip7wmabt2ua33fqotc9ou5rsgheggcwtvhrebd1soapyf7yngd7qlv1chj2sbkndcxpu4g0ayg0zqoxcx124g8i7y9kckomd69hjof85uz28yo1kpruidvq7q749n8pysqxdjgxy8g0mh10srjiunqebxn2f0s0h\",\n  \"currency-code\" : \"KRW\",\n  \"region\" : \"q5zemuewmwmz1pnvat2wu1qmrrdb3a\",\n  \"is-bogon\" : true,\n  \"country-code3\" : \"ka4mysozrja0le5imhnkcmgh3q6q6b64813z74tiszgubz224bzyzgs5cu09gyghd41xhwp2zka72pu9a7xy1s5crp9si4w7la0d8p7xlmixm476ox9alaeu2f0jvhdtzgjeqh4or5bmg5iir0rs37rki8z2zm0va6x7mn72v8d0k\",\n  \"is-v6\" : true,\n  \"longitude\" : 1.6428137128870194E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e64b2f8b-d32c-4688-b3ec-fd6887c3fde8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.814007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "2f231323-8b90-42ab-b7b2-55639d4d824f",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2096901123,\n  \"apiErrorMsg\" : \"hhe2ex1iz79wh2ezr6tpq6em2jsthu5j27aum5gfjxihkbft1svroayu6q1tygeabe2bgem1su7gfm4uq5jf757e9eprgq4poujk1lzfuh7rq3os1l1q700g4tc940k3tnkds12ah23h04x4x02bfnbxd9ba9722nd6vq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f231323-8b90-42ab-b7b2-55639d4d824f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "251014a0-c590-4017-870c-ed2c8b34771c",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1118391376,\n  \"apiErrorMsg\" : \"q6odum2pqgh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "251014a0-c590-4017-870c-ed2c8b34771c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "8bf27159-c283-40d7-aac2-9de8e4be0640",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 93131507,\n  \"apiErrorMsg\" : \"p0p36npje3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bf27159-c283-40d7-aac2-9de8e4be0640",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "bd6d27e3-9801-4946-add8-aac8ebf2b69e",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"jxri93vdq6qfe7co4zkyfh40pat5d6qtb0ktaws9yn1qgl4m86md\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd6d27e3-9801-4946-add8-aac8ebf2b69e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "d3b964e0-1fa2-45b4-ad75-78761718835d",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "kyaidqez1nuty048qb0c5gquitg04x3nda21c1j09o7idzlvfo30k"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1123648693,\n  \"apiErrorMsg\" : \"9685fersf0c7h8r0x7bsa72sifd6jqua9dhgitzzuk8d7no1t0vbhbry0yzwrfpwp6w41z9yycswuv85vrf758zrdwnde3y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3b964e0-1fa2-45b4-ad75-78761718835d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "2be7dc83-07a3-4820-bdf5-54fcfb5f7f8e",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "jkrgqiuadf9m2p5mvti4dq9rmbikliptn0exgbtb1fh188l5i9rrk4ps5mb85efwuo6f1rjb0p9b38q0hoelk2jol0qcffkovi"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1183889440,\n  \"apiErrorMsg\" : \"b0k5hztw3o3rstfocoofymtpshduj0fxqh88s39tqpy4jf5e21dwqfzyuwuo4izroewvq56s08uv32oh9og0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2be7dc83-07a3-4820-bdf5-54fcfb5f7f8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "4bb80dbe-788c-46bd-8741-503706405296",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "ch0t8oq4s3t3zvvxvwb43u3qmwqzot5kt0w22tu3dqhuxggtm0fx75xrh966hbkcnodh24bjo2eqqdjo4htzbt2zcl1zvvrlaxxnbmks4ck11hfohemm2qmqslgxdm2q2abwqmfenfozi25vdks6p8ow7ha9z6twfn83aqeic85l3rt8ot1morhmrjfzecnd"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1142245751,\n  \"apiErrorMsg\" : \"pom5jws6xd4g9l4cmvoop126v2kefrqx8v2zceykd6jnhp9r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bb80dbe-788c-46bd-8741-503706405296",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "dc937d9e-58a6-4406-b050-6952d91fe2c2",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "uirjr7n7gg7ljm565ab9c0w5q9nvweilqjopebvqoikt0e9n4u95pn0sq0uv4wyo47tlz5hlz9v2oxnomsmgvxkjl6ewlh39nqnl60rvo782rzc6ge2ylqb9xxt4n7plskpevczt8hq8eyr1xxp0eq50mrckfy2wvhdpmalan22cj1056tel8q3tv2q53ts9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : false,\n  \"is-spider\" : false,\n  \"is-dshield\" : true,\n  \"is-tor\" : true,\n  \"is-vpn\" : true,\n  \"ip\" : \"somnwaos0wtvjpq09dprxgtmcur5h1kee5chw0lkjxwuocq1swz2yuypeix1vvnqudbm0ejbpejnzr1mzda1uhu45ll9vsqd9kicpw\",\n  \"is-spyware\" : false,\n  \"blocklists\" : [ \"qx4vx7f5xi7efje7jkgg8bx2z1wceuxvochblz6q3dm3xg9fpnfi1nkx7eiqhe9cfsj3ozn45isx\", \"7ia62b9q7zg8yyqsxowdvszn3je11w9nggeek97x2oh9rs0tinpniftidy3w2exd6k3zyuu2g45fd8jxql0cw6ppjp37lug09jm5jhxpj4cx7x7w5c446678dt1vgkpcpfnh0b7\", \"x1dwgxv8laa7j0evke8syrypj31e6jm0zchn1u38qew3f8tj6voqf3e8r65swfgf2gp8qq6qmrrwl6jupmlqulc69zsm6bomcjht0bfpd9v3j02ozn1traesj23jva2fr29ni9n20cpgkgjgl9r3r1tp2h8p0gxftdyi9u21pj77mmly\", \"oljrwh23o58cfoyuec0czczc2b391yny\", \"5ijruvy7lzy6b6j\", \"pp108dmah5unfb0zyjcb7vbx5umqrqt52f78ilgiqeedx29twf2q60n8uu5fwq67b376rwribam7nbw4hc8mhh916yqnrfc4o9tgqg612ssl3sh4ncvaxi3bg004jx1cws1xkv2426ubo4z4jrl4lkqfyiy8skhup6j8wsfifejx\", \"7ti3iuradof2ol3u4yyxtv600b3474xtrk1tksljfq5nmwfsuowdmuwtg7b10saw1ne74qlw0kpqzu\", \"s8k34r0biri2ia1wuwmzs52f6jeavlf\" ],\n  \"is-spam-bot\" : false,\n  \"last-seen\" : 2090500061,\n  \"is-bot\" : false,\n  \"sensors\" : [ {\n    \"blocklist\" : \"heplsvby33ym5wkmvpcen1ocltu5cylsum94p54donb2jp\",\n    \"description\" : \"Quis deleniti possimus aut nostrum atque ut nobis. Aperiam maxime quia consectetur. Temporibus voluptate et quidem aut enim eligendi consequuntur. Minima a est.\",\n    \"id\" : 580160834\n  }, {\n    \"blocklist\" : \"vl376e2guesc2zlq0hhayy0khr0i5t5yaip35bbvsbairempi7ruw8vfe87eik2tkb4r671n1q24jhnbgpwae3q2wq5ccd384icmqfiedkw4c6apbqollxpa750x3l15q7m9lvozcg5o8zdehvkd0lb5nzr9pwwi9xl0ev0n2icc7hyer7\",\n    \"description\" : \"Quis quisquam praesentium delectus perferendis repellat qui. Doloribus earum voluptatem. Eum incidunt et ut aut ut error. Pariatur amet in.\",\n    \"id\" : 2134366546\n  }, {\n    \"blocklist\" : \"yugfrd1dvc5vszxa05qfivwktazhd0frai9p1l0raje88derloo26olkrqla3twhuooys4p2yoi1lro385y2w77fa9tgwdnvtu6iu39bzi36oi6xwx1wcbbrt0rt4o1enpvulx1dg3rfnt8umsseawoh6rzw49haet2csb5lahnln5j\",\n    \"description\" : \"Repellat aliquid nesciunt quas rem dignissimos repellat nisi. Eos alias sit id non fugiat nemo. Non libero fugiat quisquam pariatur ea.\",\n    \"id\" : 808567747\n  } ],\n  \"list-count\" : 371332779,\n  \"cidr\" : \"c4pxghps4c9tvxxq1x99wvkc7g4myzgwuwcak9buhhkrqdartykfw6aphwydfxoh50dutaenxk99yb0m568rbb617bcv4wima4rz70wqnxtobw0m04zd7zse3er4r3pew64bgcgcceo7eq6z6xe5u692607by9ypt3mfxorasyyoxao1lx0m3hk9rxgub43jm1vij\",\n  \"is-listed\" : false,\n  \"is-malware\" : false,\n  \"is-proxy\" : true,\n  \"is-exploit-bot\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc937d9e-58a6-4406-b050-6952d91fe2c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.813044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "56dba37a-b390-45b6-82c7-44850d958443",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 907993760,\n  \"apiErrorMsg\" : \"n9rrfp42cnvandom7qymvh4qxm10d3q0s0f9gsirpuf1yd11u40e3aqexq00f701udr8v0l08perp2pg96ctrb73hpe87g6o2lcoxydgeci6ijv8flbj3rzn5x9gbxdubgm1wp67i788v10t8hdhrvr8izbp9r0zuyp426\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56dba37a-b390-45b6-82c7-44850d958443",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.812508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "35318b29-caf6-40d4-b2ab-a13cbbe87121",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1816070467,\n  \"apiErrorMsg\" : \"t1w877b0wjbdiyp5uym3izjj1uiek9flikdjkkti3fig9bcbqcnw7tbko7g94ao4jpufvhwjgtlr5t0t1mlvoqpewt2nvrkxhsrz3zmuvzpk4ddamndh89hgu3mkmrscr13n4tq1jgir5fsjucysfjgzwj00hv3kq8bjxv11kn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35318b29-caf6-40d4-b2ab-a13cbbe87121",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.812447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "604f18c8-e78a-4f5f-b440-6938b4b4b2b2",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 134971526,\n  \"apiErrorMsg\" : \"yvlngmwzap0h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "604f18c8-e78a-4f5f-b440-6938b4b4b2b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.812385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "f01af8ad-e972-4178-bfb0-a0e8c2703abb",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"2isb4lc3m2z1sn4kn2c56gjqh6ujbygybrt9iy6egl2ph61mqx0eczeq0zbmanax58gn6n85p8tkfxdw198g1zsn51t3x6kim8ea1kuqdj0jrlqx4d0ihhhxiig9f8dp1yqweo6hpqm91i9asf\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f01af8ad-e972-4178-bfb0-a0e8c2703abb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.812322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "c9c918be-99b3-4e23-9f76-afe2e98776ea",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 822853358,\n  \"apiErrorMsg\" : \"qen\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9c918be-99b3-4e23-9f76-afe2e98776ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.812268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "d4a386f2-c6c8-4c9e-b2f1-ecb031e2be63",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 519395107,\n  \"apiErrorMsg\" : \"19bxl44e4lroy7ojrddj136xp2hf8goxd63s8sgopf5helo2bhibwtqh2m54o3joybixb1sujdj6vpcixm0y9e7jmor103hz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4a386f2-c6c8-4c9e-b2f1-ecb031e2be63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.812197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "bc1eecb3-ce92-493a-be5e-fa72060bdfae",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1913259652,\n  \"apiErrorMsg\" : \"4vq8v5rcnol8chcfcb7de3s4a2qyarpc3hi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc1eecb3-ce92-493a-be5e-fa72060bdfae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.812014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "167be171-5b9b-4139-a0ea-e46a44131984",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"vsivrdybq5yguuyc44dbcu3totci0m4v1tdydevqf16pdzvvaj1bdjiiojrgx\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "167be171-5b9b-4139-a0ea-e46a44131984",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "77e66b4b-1ca4-4367-91e1-a265d203d6b9",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1392137151,\n  \"apiErrorMsg\" : \"h9n43dk0z39tpz4a32jfy75wskv686sbr5dqmaezxka929j1fu8dizpi3ht6ej7at33nhpb2lumml7a9uefulu0myrx4y9az26szxuyb4vkm4f7lch4hie0e1ss3ag3jjydlct3wpm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77e66b4b-1ca4-4367-91e1-a265d203d6b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "8190c4e6-87b7-4c71-8edf-a81809161072",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1790500439,\n  \"apiErrorMsg\" : \"iewys3moktootz9fst2aqxvimjaf25l40s3bm9rxb048gu9l6b9fd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8190c4e6-87b7-4c71-8edf-a81809161072",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.81185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "e8c3872c-0cff-495d-92ce-52ae2283eec0",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1327907804,\n  \"apiErrorMsg\" : \"z64chpxz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8c3872c-0cff-495d-92ce-52ae2283eec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "b87a2292-64df-41ee-9829-6741a6f60a59",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"w02578lfs4keps6bw6wtzw0ld3fhkwnz4hs7m6x36ugzr2a5o8s6k8urrwmjhjqid90g2d2gesqcf1syivb0c7s4df9olp6uis00za6madvhgna53if2\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b87a2292-64df-41ee-9829-6741a6f60a59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "a0427696-c979-4653-bdb1-8ddc916d5929",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2036605373,\n  \"apiErrorMsg\" : \"ptn76v5prqg35ipi512s3x3cm0jf03pda7iivk8v6few2kjl5mtutvegsn9m00v5qzyc3kozkppuo5qum7mel1bpr46odithdzly7g0xafl1vozznyl2imrlpzich0qaqyh7i3w8oduk1m1uia6tsn99wxdrbzixukwbg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0427696-c979-4653-bdb1-8ddc916d5929",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "be2c7b9b-a77d-42dd-97c9-5033a677a3d9",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1616590258,\n  \"apiErrorMsg\" : \"r0lha5hfzzy75lgqoym6ztjcqmdptc42knbsozlbd3jv10bynvahee3l8wgepjhypmnlxxzln08ioy7oxafoib2mdd8wmz6cjuuvdc1egr1cg06ywj1nfhhrupumliz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be2c7b9b-a77d-42dd-97c9-5033a677a3d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "9037ff50-fed1-4478-b3b0-7a660492e269",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 992335266,\n  \"apiErrorMsg\" : \"gjoae4qryx9hl6s4glhk60xogbun62d6om66rxb8vmlrciu82hlpp381f4jxhbepsrgdun4qokppt0nzkuqgi2tqj0oxbp65qdik1iafdurjtawlb1280olf9if3r3eqnpc6sc9l54ym2ecib0f5opj8h52\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9037ff50-fed1-4478-b3b0-7a660492e269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "cfebbc00-4b0f-4ea7-a5f4-e731f0e03aa9",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"mwt478caeiaijvtxmwj8gwb9urzc1drtjc5\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfebbc00-4b0f-4ea7-a5f4-e731f0e03aa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "a25de4a5-d248-423d-bf0b-e537972bc303",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "kpidbnzlb7lro17gujersczbddmfjel35xzd22wuwttwwyu5b4xmhie9629"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 199324139,\n  \"apiErrorMsg\" : \"2ix8ij3k653rcvnabu53j9n8bwokppw38enaqza1cxf9jhli43hdxz4czhsvoxdo3imqmc1uj5e67djr5y45cr2qz99gadh2m5phdxou1iicrx9gcvdhghi1rwu3ljbjysurrdmton0h7u82l5md5uup\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a25de4a5-d248-423d-bf0b-e537972bc303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "fd524822-4081-42c8-9493-906afb44256e",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "hwayjw2dfys0a4kp18e580bac3ary8iqmlaudxs8byb04h3ym8rs8ab860kui4eyrqpwxqzh54tvys5ade9itn7pgfwdv3mrxf2n8s448mj1kl59qjvsf39ndm"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1580295910,\n  \"apiErrorMsg\" : \"d3d27jkyk7ramdlz8mw5a0ebqs0nexgfj99uvlxtvx34y7f1qobx013nkj53sqg7qwc4tezn3emzrnyk1uuzk2j4oyvyss3ds2oi6phk010iybar3chxvjprv7v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd524822-4081-42c8-9493-906afb44256e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "26e0b94f-72b5-44da-99e9-171857927fec",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "ienrh4htjomrd4g6e2fajzxki76p5nuyjbfb2u8xtbwpueyad81i3rf1hmarx6ylf70ezm98fj46vqtpg3pl1k35iba2sh9lf2t0eb1swvst4thr4y7k8n5"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2120888633,\n  \"apiErrorMsg\" : \"96dovbp6eoii4c5ncgn081d1hvuehpyx3lcczx4cxklyxgmze507wd46g20oe8vry5bkoekm39uqxc0grhqsvpumo1hstio921m6fvcdujwunox4sfvof6rio4xl3tdowtemviuenvoqzwbyr3a25g29vqgo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26e0b94f-72b5-44da-99e9-171857927fec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "9817a237-f238-4220-8d1f-c3ef636c8662",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "ay9w4mc4mcqiknyyuyz5sfstdyq1u2j3vxca5s4m7l0urc0dvlseasjrhtpmo2ul2b9704bcblln31h4dhsp2m"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"axweayylo1m4tz5d411f4lmg500tprd87kn7z52dehx\",\n    \"list-rating\" : 1453283124,\n    \"response-time\" : 664642403,\n    \"is-listed\" : true,\n    \"return-code\" : \"642z9jr7cky2zwnbqowil79jo6q849361uu3gobmqrw2ga5creegbtgl0nyakr\",\n    \"list-name\" : \"Leana Hane\",\n    \"txt-record\" : \"ae2xc0bur13slmj106xsb3qwg44d6n1ubtg0t7765ozqgx8p689bpc0s4zr89ncitgqxyr9c73biw4qap5rumj4opp1z4b0yhjs2w7qno0c9mhuunn6nx17sq1rtiqu7qtz923urjhblt7f9x3s879wqxwbwj4u8y494kw451brj2mre\"\n  }, {\n    \"list-host\" : \"j48dxrprdjg9iu6qv4wnuw911pix5k76wjcd83j37ad6\",\n    \"list-rating\" : 876621363,\n    \"response-time\" : 1685064336,\n    \"is-listed\" : true,\n    \"return-code\" : \"hhd8e7cck644ah469l7gfb60h8kn5f4duxtkohqf13luibmfgp1z73kbxnw2gl3pp9u2gkp21hgiuoz1j16k46\",\n    \"list-name\" : \"Darcey Dare\",\n    \"txt-record\" : \"i5kytmri4lp8oqq7wk7pwd5qmuaqlg3zg7t4urlojdivwcpshxt30sf6ygt3p7qxtwh4vu3qcqophsivwrdmv7m0wlf6gqllisle1yxhu3e54nnrcu1gd6fsqcqt3uetn87tv1mkp1kwoh1vvjz1ttaird0sl3u05vxe2drqlnnxdmod8iyyvwfzvlg17t0eehblpgg1\"\n  }, {\n    \"list-host\" : \"2q7i316k0grup71r1yas501yubdx16wvrjyjhvc1ivr8k56rl611yg23vz20u4\",\n    \"list-rating\" : 638270039,\n    \"response-time\" : 855367668,\n    \"is-listed\" : false,\n    \"return-code\" : \"jcogyj7eocm063ucxpetz7y2f9t0femf7uotzwxsatduf5tb6tauzb4jmnj5ryhk6xkbjrn6nw07z8w2jgz9wn8ync46447ny47i6udegh41zmtesltst99695fugkjxlw1qzzn7kz\",\n    \"list-name\" : \"Ben Schowalter Sr.\",\n    \"txt-record\" : \"vxnsv5mxjov9cz5n3tpgsbdyx3ubirkc96sj01652k9w7\"\n  } ],\n  \"host\" : \"4bbp4tkaz83g53vl7trg8ihakr28hubduu2fbwzd6g20ob2wjt5bwiax\",\n  \"list-count\" : 1839889353,\n  \"is-listed\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9817a237-f238-4220-8d1f-c3ef636c8662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.811193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "8fecc35b-d4de-49ae-93cc-d63dca417dd9",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "vncenu0pb7"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1159954896,\n  \"apiErrorMsg\" : \"vqk9mbn6cco96ku5l74rsxl20aolky0daoirmkw9z61w03axmihln0dfiovu3j4p5do2p5rqmb3yaqtw4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fecc35b-d4de-49ae-93cc-d63dca417dd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.810736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "cb633da3-09cf-47ff-9f54-6813d28e8dbc",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "f720l8q1c7324dj0bqut1decmxhgyia5097ka614csp1v4oaes6w1"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1120725602,\n  \"apiErrorMsg\" : \"oz4zl92oaa0o3g2u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb633da3-09cf-47ff-9f54-6813d28e8dbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.810655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "b5c2d6bf-4fcc-47b5-88bf-e06954f8e7c5",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "zpg3zqeo0o4h573m1xulbuo2n0w3o3t2s8xclecr62dj30t"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2142714722,\n  \"apiErrorMsg\" : \"bjm6qjwrswz111kmv1r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5c2d6bf-4fcc-47b5-88bf-e06954f8e7c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.810574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "d51ba797-1a79-4816-b298-af40cca7c645",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "0t8ojbqhlpj5ztfjm4613uhh9dwthch2fnmyngf52aziwilgezak"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Monaco\",\n  \"country-code\" : \"bbbbg\",\n  \"is-ported\" : true,\n  \"mnc\" : \"rrn73kffs2prqql75eib151k1nz2prkw9wd0nb1ex7oah4gghym3bqijyn3ewrdj49w903dy0w97gwwpplk63m36g\",\n  \"number-type\" : \"5yw60ds1uqpl3qzh8ddus5qhf79xktauofd8ppq2jv42fki91qcx4aizds434huftxnw3xywrh468wxg20p6laf8crqtjh0wj1podlsx701bm9f1r91zhv4gc6r7y0ougube0l1ihr7a6jtlszmmvveo9ng\",\n  \"international-number\" : \"74w8uiio3e32bzn950uf9uttt91tb8vw091nkb4pr84inbps0fw7di2ld4lzbwy2mtudifh3o14j88flh2kpa33qx97k5ie754l4b3rmn3069o6fe1o9ku0rkzvs2rajgms6sx7pfgp9nmp3d6af8\",\n  \"origin-network\" : \"0qxuyd\",\n  \"roaming-country-code\" : \"ssssn\",\n  \"imsi\" : \"w432koxlafyey4h3tifm4yb01lw6uuz1yeidgpnplg13agyb07gnpw5x8ijdts\",\n  \"local-number\" : \"12k6ngmkb67zewudymxli428469vee1d5yjveepmwqhtzxu4nawk\",\n  \"mcc\" : \"btri4w5fcajq44xwjae2bldae68gw20l0if8l77tkb0ar4iy0axd0r2k7j7qu7intmyxv30nbqi\",\n  \"hlr-status\" : \"6heqmzrekjs2zefnued5px8axsgxh7z2m60zagj0tp0vcniu7q0jq147ppfgaodcc\",\n  \"hlr-valid\" : false,\n  \"current-network\" : \"afbttoyf1ze5ntzm4vs3475n7e95wbq32qajm8hpw2pzzp7cokntpt83vn97amwfvpy1h54b3usd9zoly3wgbrbduchfi1skrmani3xiskmloswy2u0mpsgi9998gcygs3im3s9qdpcfmz82c7masg1in6jr7gp01mj1e\",\n  \"msin\" : \"3j8bahtbgl8mp978by0tron0up6r7eb5cp2mynd42er36a9322ofps4281w3lesisn8w7ags912vi6iwt\",\n  \"is-roaming\" : true,\n  \"location\" : \"d6mtnrgjb6mvly6oicea0xj32f8m5q1fl3t1bv6cvh4s59h000knhlkgzvwkku9e8cchoweaz5ihkxf4wa4io3orbte9ksewq1a83h47jzhyurcsq35qww5z02qcwbrlvd7iwnwordw82r7ygdfgj8tq871utlmw7ufwuxqdvdwetou8nhrz\",\n  \"currency-code\" : \"XAU\",\n  \"msc\" : \"vqc6dgogk5m2hqzkgco4poajer3fso7ljk5kd4fv7dkvny8ru7wjujsicb20j4cft\",\n  \"international-calling-code\" : \"vvhejanl93rs8ya610ilcn1ejkffvlwihqx0mj47g5nmci9z4l1z5nevf1g7yon9q3szfjllezcdfk29j1i5kdgi0q27vsaydozjreum7ciq7dnz3kks73h\",\n  \"country-code3\" : \"ehpk5bcwu8xrifxqjpphygh5uwlb5e4t39e5ovteq04st3p44a9wh471hqmmimz29g33k81iths35oo0hwca3u\",\n  \"is-mobile\" : false,\n  \"number-valid\" : false,\n  \"ported-network\" : \"hbhbmwdy82j3ala4jz8ievwz65nro09xrgjygf348xoygt7q002m83pjfx0655ltkyzqvouc879jkcqiitugo6nvia2mlfxp31avb6uljku6ue4cs1as85f7yry122ym93wcsjck6vvuv38830aos5z9dlpwrear\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d51ba797-1a79-4816-b298-af40cca7c645",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.810482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "41c6f09e-1af3-4e94-a002-9dd53c590f5f",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "p4tnvjgdlc1k1zpz4mnqhqfn2rd8hd5miqi7ctwc1sbf0691qzsdd4yvqbt31ooyj4r68f37jt"
        },
        "longitude" : {
          "equalTo" : "cccwqbtz3ul2ptv7630sfn4sxbnywfq39mxyo14vb1nlfwr11hrrop7chad7vuuxjdzo10dr5af40psheixtdn8e"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 349045050,\n  \"apiErrorMsg\" : \"rrwxmylka05dza9nhbfl1bt7qo2g7gqpnawr30jy8m8tvas393u1bqtkubnqw9pk5w3i6rslgopr3o3athr8f6xkz5w8lc9fo3rpszcjbvnb1f2flle2dd5rxu0ftkzry1b6baup93qtcfkzl3nnq2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41c6f09e-1af3-4e94-a002-9dd53c590f5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.809931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "9f0ae683-0459-490b-9b2f-980eaca8786c",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "6sy1dxthp3pyw1c30ffpv83xw5g5zra9hztqhl2fsrz8w49wt14e96lckup9cakyfpywxzd0aadjg55tqru2bgfpqhvxo9kw55l2k1nohp1w9r6qkyoc00qi2p"
        },
        "longitude" : {
          "equalTo" : "obqr7pgxks2hs3dhw1li995rsg67c7xzdyrudzbnwhyh85bz7a63rx7t90yhy89djy2mb"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 722999793,\n  \"apiErrorMsg\" : \"0bzkkzm08j6bv59k4oul0m936pd4kkahe5l77o2aw1s6drpuz10yg740aaz33w9lbug84wc4ut8fjt3lekizkjrgcpbg0ch9i056\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f0ae683-0459-490b-9b2f-980eaca8786c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.809824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "50f8c06b-8ce2-4520-84db-62ac323e9dee",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "ycpo8ud9aonh61g0uw2duyywj8bcledpnryu7109460f5pbfheobg5tumqgbufmurzmp2u5afapva0komdv0658fgtihndc0px51z97wloxxdqjre720j8a4fxqjdkyelcea4eisqimwq4xpgc3fqgcog9vdj8kk1t7kjdjhfii"
        },
        "longitude" : {
          "equalTo" : "g7n661"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2079758663,\n  \"apiErrorMsg\" : \"qtsh1qu1tjyct7a8zkplu5kxsmz1m2g380ewl3rliuw9n536a68u5d1tkb3a3p16qdo4n5qke6gbshfp9gain3ut95w7yofxzh7yzl6jg9igwjwok7zq6muwqew0lviexw28lvrm5otv808wuvicdb9cgwf6hygxo2z8het9x2zwqz2g8c4qzojimlnozef4p70tz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50f8c06b-8ce2-4520-84db-62ac323e9dee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.809719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "fb617a3c-ec87-4c09-b788-f5c3ff69dd16",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "kfha4x4yp4e9jzk0c8rfsedwp8b14c9lxxew1j6oayu1d1fq7o3u17lsft86n27mss00iwcotb4sbvqu2xto30eh07gv1xdrgqope36m2v8l9"
        },
        "longitude" : {
          "equalTo" : "vge7yk43eao8tbh8e7ysor6nmux0oraseboei5klguawb4klv7pxjmhl5pmpsfjtuvh5ukwj5h0c2ctsnvk3th3h4vt2nbk6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"hwoy9hwnh202xmo8o1ljod4aole2e3v2ul45o1x5q58yiy82g01wrjdfuiswdldoun60bejsq9unl7y1fu5nwgw7p704wgv971evvfx2wbb08nx17e27ngyi0zoc\",\n  \"country\" : \"Eritrea\",\n  \"country-code\" : \"eeeee\",\n  \"address\" : \"y7tudcpczn5q4078wnky925ubr33kpmtnxvaz2y2kaj0ivxq721c8mtg8ttpj5wp9e3p3knm1sxav0f6at3m6o89h1gwnsc6a57nd3728m7g8b6nldmo\",\n  \"city\" : \"Luigiport\",\n  \"timezone\" : { },\n  \"latitude\" : 6.693787910839846E307,\n  \"address-components\" : { },\n  \"postal-code\" : \"92078\",\n  \"found\" : false,\n  \"postal-address\" : \"zv3oi0pabvp7w1fmjtxp1da7kucgy1mapniub0ajbl6v3ru2dspe1xo51uj6cee782ln32e8aibf9whlbwav5wcqyq36jrl4m369hbeybfrn224d53spy666x8ly7jrxluen5y2dfv42bm9cz7kyb2d1sr5590\",\n  \"location-tags\" : [ \"1vxftsmltplixjy2cd58sm3a6letgcazenha110qcxhkxro2jt9btz840jgcniwas8wx6znexv9uukbi06ksemce0vt350tfmcvhskt4v5jp28npoewzeozqhnwkvpiipi54bzot6h5qk8d4fia0lo7mls\", \"6mwbc739r6iv9h1lji2rxfhn45e7ldqe8n0ae7z8k6i76x7wrm1474c8kiv5yjmknfulpyrsqrp5ieuxlnb6mf2sns9zzop95bixre7xrwicxkn0gupkcvagd1zxpocniiotehrca2m9cfg6kyvcu232d4uiwqtx687dkc0bcz5s1i3h2odebq8f\", \"7ndz4j3ycbk6p45iohu8ogp1nspehhq1julhjcd1rj4982dmacwcdidb7ppbl8dy0f9b9i6s059166h4mbryc2x0q2sn63ze4c92t7zomaki86pk841if764ba7re3bqlf6g0s61l0ctanuytdqhrn1mgn9unb4yuun4lr\", \"tjznpcmm8s8sras8gaao77j5akzt4d1udjurhg7sa6h75b15wiolcxirumymx5ucfgphzmdcz2o1q3yee9ml83qmdo1r62dwk1pluh9v\", \"j8elqtuy9huads42k0palgv8qrgj18bissil38vozud3urmq2jif9h751lgj8zlunm109zfwdt7c4zhlpxr1qzslryyen1tsztab\", \"dhcnhvg\", \"5lda1ioelzyo42sswpctmu1hkptxyaqw0411lm20z6kr0kgamdy9onoyl6gl5xhuerq2liv27ipm82c4nvv13jlh1xzoewnxaqs2teoz5er00mxam7jmwcbpxz6861vfe0rm724jka03gjm5012kpomuhrly0ie8utvgwq7j9f\" ],\n  \"location-type\" : \"75kgo9099591rp1gb805b8iggd29gkgms48timw4cycm4i2rdesjhhrvh3lxy8z882d9of6h0verkxbwp8s6tkzauzt0fkiat2k4b66nuv6j1q68wn\",\n  \"state\" : \"Virginia\",\n  \"currency-code\" : \"ZAR\",\n  \"country-code3\" : \"c1qwp0sgflc337b1trt3bxsoll8dwqexzr8uvswtn01rg13w2ylspuypu6pofdv\",\n  \"longitude\" : 1.0249496658537668E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb617a3c-ec87-4c09-b788-f5c3ff69dd16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.809576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "7edf91a8-461a-45fa-931d-bb16fe365042",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1309852438,\n  \"apiErrorMsg\" : \"a0ihwjz8dmfmbyvk7ny7eud72ztehqg2ypo1cd86fmpb4y03lin6bkhs2lshf66ocrkwo08kl8tiksh558vps1myjfbuubzwd2p4qs7jnvzdjpbjttusgy90vtyk18\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7edf91a8-461a-45fa-931d-bb16fe365042",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.808987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "38f72910-dc3e-4f09-8cf7-d9b232f7a1d4",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 200283835,\n  \"apiErrorMsg\" : \"qp1gi1nh4yhtox4ds2v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38f72910-dc3e-4f09-8cf7-d9b232f7a1d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.808924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "36599d42-2c3f-4216-87fb-97f29c980b74",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1470250116,\n  \"apiErrorMsg\" : \"xd8s4a38j20c1zcp61ku7sy69zfadrrz7ux6jxusmuha2ktanxe9h66sadcp4c02rmz2a6xptx0rs53datpriogt29zda\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36599d42-2c3f-4216-87fb-97f29c980b74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.808856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "26043fc6-55c7-4991-a10e-78105af39217",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 140951221,\n  \"locations\" : [ {\n    \"region-code\" : \"xihe34xav8xn1jci4wo16i4wd3h2tzeh7shul7xsox5czevyz63biarm1lg2efr10k9sbi\",\n    \"country\" : \"Montenegro\",\n    \"country-code\" : \"bbbba\",\n    \"address\" : \"o9gigw8tnxdn1az7q55689p1uv3duk1kd72l17nkewrn67\",\n    \"city\" : \"Wisozkstad\",\n    \"timezone\" : { },\n    \"latitude\" : 1.4212861434526239E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"01457\",\n    \"postal-address\" : \"nmnjbz717q559mxo905h0l5buqlopwoe9mofadn9pf\",\n    \"location-tags\" : [ \"icz2047ij4y4qxm0jt048hqxjaa49slmz1191p\", \"b0yrmpsop73y0bzcs3ff37i438kalnn6q5brubcvpygx7dtp0ew55b8fixyvxgusrzwvnoc3wboppit4soaqig5lrj20h71ygech5mn08ypo4jw196dxa9d2hlcxh2h0bbunherz\", \"mnudoqyccch9vx17jen5afxdep2plqjv0ynpfaqjs8mu4pfiqbk4t8vbvwecdf1m3ia8s\", \"2ema2r50gtl1vpamlfds8unxk084uh6ig9exlf2mwfqchweg2dwkqfsjwtf38r22ijkjqhjndbd8q6yl7pj6zo1fwss156cl2ltihujld3soq0vp3unlg9cawi7d06ncr\" ],\n    \"location-type\" : \"9j7zc76sj8y0tnufdlsv29jzy0aywiw752l9a0eg8kdngsyhmcayhlzbunoabvbxnh460140k5w1wjwfan9avbvfb17bi3hkf3quyx7y6x1qi9ksz4n2wnekt8sq0u8dxkybuxefhlazm4ey0mm63kna026e2q2gi3pbag3n6hvvrgqfdpia9\",\n    \"state\" : \"North Dakota\",\n    \"currency-code\" : \"AMD\",\n    \"country-code3\" : \"6zt7g2wz4rhuqcb8g7zbzt87u4nyc1jgys6zihvob7\",\n    \"longitude\" : 5.674163355369981E307\n  }, {\n    \"region-code\" : \"mxzg1uc6eku984xeh3vor3f0z213w7ji5rcnhfp7us2k4nysrknh6sds4i34zfl0oocq2l3zdticz1qibfpaajz1zl2o2u7sa64b57efhv\",\n    \"country\" : \"Micronesia (Federated States of)\",\n    \"country-code\" : \"qqqqa\",\n    \"address\" : \"66ss42ac1hwtnk0p9nq3fdmtqfjha3rm67mkua7ad7bl2klaimsz0ozevmujptrmx8c27xhslrevusywfobydp25i4k1m5iz5aucn4m57c7i144iogc\",\n    \"city\" : \"Smithfurt\",\n    \"timezone\" : { },\n    \"latitude\" : 2.7162291965606858E306,\n    \"address-components\" : { },\n    \"postal-code\" : \"85241\",\n    \"postal-address\" : \"j8u1nv8cl486h3oz397ttzpjmqtixbsl3l55zk1pcu752x8p1oipka806polnhoc96q2mgu3qcy9bod9h3lzf4pg4bj8nivyo98rykv26ubbm3w0zgscigc39jny35m515ktxgdn1py2kc089br0dlxus1gogw4sm7a7tbe4p01rd10mum52ggwniil5\",\n    \"location-tags\" : [ \"xr4osdfhqw27yv1lrtmunglzlfvqd74lmaxe27aqt2a2z5lu8q3x7032u85xqjqljxyasq1vlrjih1dh2x65o3q7z5af1kdcsmopcjiue1mjq4dab0jtdq6ne28cd23od02l7pmxwq25bllhmybietnm8bsoosu7zacxhhhpgw8tfl\" ],\n    \"location-type\" : \"j5ymvdkh9olkb84teevgxqmo2cxtpnxtf2592km1sq0chbgfk7sxy0pkxjxvws4j341xb872c2p6vtwfvnr9sbpbbxoptpxljnhxr2rrig3lhijspixjq5mwtsyigm8jzz1i55lxs0bhahzrpk9zi6g8de4ux0t40caaqe\",\n    \"state\" : \"Washington\",\n    \"currency-code\" : \"IRR\",\n    \"country-code3\" : \"dxypzmltpq134a4sehrffh815jrsqqp0be8874rqmd6m49kpad1zecn68b4yyod3uy3iboz94z\",\n    \"longitude\" : 2.291305883899099E307\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26043fc6-55c7-4991-a10e-78105af39217",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.808782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "3f148c00-7f27-4fec-9a77-5048f3116ff6",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "gqbyisygwe4a1psd0en4y8owaj8kfp2gtsvw4zp471rvl07sis7v4ltxhblmhztcmvsw8ugau7orbyiz6hep74365vuxdhi6x2rrurzz13v68malygp04gfo8v4qccht77bzk2avs88xnorb7rz3pqdikmlr8zwm4c7xtdcxbb72p9kkok"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1408019203,\n  \"apiErrorMsg\" : \"q0q1vtury49zjee8fzjpale5lwfzvfaljs5hn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f148c00-7f27-4fec-9a77-5048f3116ff6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.808156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "8df8f249-7390-47e6-95b6-99ce2e975778",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "q7jrd2af0xd5s4cq1tdhyjk6m1tltporsgsui"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 302541737,\n  \"apiErrorMsg\" : \"onlcg4noe9d3xw8rs4b8ugdz5yh284e28jxhy1efbdr85lxup0gquiatd54i0e8jyx4op955hk4fc0hzg4emp9jti5s9g20kr310lxd8kts4aqp1mu3ygzg3eklhv8x82ns9jt9a2sv8hexbao5yidurakriga8i2o5cx4q1h2t6ba0nq9qlnm551kmzoagji2w8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8df8f249-7390-47e6-95b6-99ce2e975778",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.808073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "a154f80e-6490-45d5-9e52-920dd92a3dd9",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "jifhiggjkr3j2c377yo09ffbxx9"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 984361853,\n  \"apiErrorMsg\" : \"qgk4azesr3i20cken9uhmuhyw7vreh7t7uewclt992wbhoxsyg2tf4p2sle4c1dua5c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a154f80e-6490-45d5-9e52-920dd92a3dd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.807984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "bd101ec8-9b37-403a-b668-406150f81f3b",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "kze3u6qn1wk1woj2bz95ji10u512uc2v16o89nnpzkcdyleqs3ge0nj2gcaln1a8w3paduznzj3brmcalq7ilyq1qzr80o7gwhnxzm5tg7k8hd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"044wb35o75cxirehqycc9ujbsp6\",\n  \"domain-error\" : false,\n  \"typos-fixed\" : false,\n  \"verified\" : false,\n  \"is-freemail\" : true,\n  \"is-disposable\" : true,\n  \"valid\" : true,\n  \"is-catch-all\" : false,\n  \"is-deferred\" : false,\n  \"provider\" : \"ur90p4k28uhnib6vocthbgiuvmb6myunjihmlke4rh1q1uylii7xlcf1v63pjkycmogtavv05wt1aoqejqfrup9s7p8mlbju5at78zab88ou15ezmnazo74zgj6ik0vmikoptehkepznwhqqia69gkwzdge6n5pn55qkr7f0v2dx9lnu4f3oxlkcl34sroklsqr\",\n  \"domain\" : \"jaqdrgwcxmvg2as2wq3s24sedyn8l7wo2d3siam5wqx3m7e1gobtm0hpkfztxik5lsicnlkb4v7fuxp6uki1digzt9rehwf2ntf8qvmesknxw89sd957x6qs9awibdxosq9lfdgh46upysmlyzovcrunndm2t1q51il2u7qixsvaqw140uiyjv0y0y\",\n  \"smtp-response\" : \"cssijp70yvda6bodt4uf5mtoedqdvxquda3y8q61nwl5rmxqr71znavz0btyovoiz051henzql5p9ks9lviqvj84hbb2nv2opcqw1yepfph2vc\",\n  \"syntax-error\" : false,\n  \"email\" : \"rp2i44dein6i\",\n  \"is-personal\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd101ec8-9b37-403a-b668-406150f81f3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.8079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "53879122-36d5-4f9b-ac6d-2cb8d8faa4fb",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "3917yd7dhqsrunq4twdx65pmbm2nydiy2vphzq0ct0zkkapxy8yuqtks6rbutteoqpwa5xhlv9rp6ksqq5gp3h"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 761703043,\n  \"apiErrorMsg\" : \"yjsba8ahgkbp1p9keaddjnlps7khrmcbsx9u3k4iia7pzkg9hw1yo8z78cklehz9hoebj32v93owvs10l5c0ioboymnn37mhp5ciojy5o7yd75783zu5ax7cqgphroh9pkyjgbfjn12msj415k6vwd6p5fkhmggtc4lu171tm6b19encis44veguubd13f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53879122-36d5-4f9b-ac6d-2cb8d8faa4fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.807647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "699cd771-6ceb-4395-a7d1-6938d61fa9d9",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "5dmqrrs6uxqmdjcj1rshh82gopeniwdr4ew10ftrdkwpoh4h5i8s9rdokakeil8t3wmhha33jtcysv87oxqynyxgsdvaq4a8vpmbx7cofiz9kgxvjs5cbqws1pemkxgnpccld21f5y07dhjvlkmk8mdfmqy"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 849836755,\n  \"apiErrorMsg\" : \"lgtz8xvwsdnxja2k96tg206z6hfariz5nqfph8no1prtwkmhmy4ewhcu2kwnxmpfj4skbobnplmtoxuai3kh5a31imy4c2t7823qkfycftx2a2yhl24jen65viu7zzjgqflg2w48nzn5wpa18nhf21ras98xo26ey46iu3hqit9go03buly4vy5ahv3n5asqfk9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "699cd771-6ceb-4395-a7d1-6938d61fa9d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.807565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "288c16ca-9635-4f2b-8db0-fb77f5d49f04",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "wgcmb39vja454gymq2x88xf7t4oieuxqa46sm2omulpayxzoykntkbfwjza55tv1isyucsuzo92wu5702fms4dgm9hxyg4z9rrcbf4v3fhy3ek41h4d17vyg757z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1461797612,\n  \"apiErrorMsg\" : \"nph\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "288c16ca-9635-4f2b-8db0-fb77f5d49f04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.807482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "7933df86-6f5c-402e-8bbf-72ced58ea0d0",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "jdwzluv1yif2bj0hooib9pkcik2r8vos1u2wt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"provider\" : \"8ih8yoav0mt2lqao9gc5cmrc4bo4yqqluyus84bf3d3o03lkwf383h6wp7p4nbk9bp90i2shqg4wg6hxcmv2c2lyrdssmcbnfefxikb7919xs2lx1uwb2mpg4so0\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"domain\" : \"5pkitcuk82htsl0y6k7nruao9cojm9v92yl5sn9ec5hm4ws4d81boju8ud6phdyl9e3osu8pfyurpho7h0k5gk8q007atugg3r6upn9btjxgcvc8t4nge3ad4w95hpsyff57mvldjsxqp\",\n  \"is-freemail\" : true,\n  \"syntax-error\" : true,\n  \"email\" : \"ak06n5hisjebusleo08yqgfpd910y54qela444zsm86oqr4fnd4vpps2j6didsl7q8adutk4lltdzs9yxj8hjyw9ck036gf57dklkie9m13qb7x76qcsr1xcp415ggzzfyngnlqr7t324k83chr8u4antt9xp7nxp5vab9s6qxtbig7d5t6hwiqg407jfzk0uuhj0u\",\n  \"is-disposable\" : true,\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7933df86-6f5c-402e-8bbf-72ced58ea0d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.807399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "4f84b4e4-2038-4184-b341-756abe4d87d5",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "y3ddkx5y4f8f3v5aczyiiodti55f7qol46o51t9yu778asjon4o7009tk0ah948paqan5xan2o1k8vr"
        },
        "from-value" : {
          "equalTo" : "nygp38ka5eq4uv5pzg8azp71844uorj7j2dhkdfboojamxvw20w"
        },
        "from-type" : {
          "equalTo" : "wsilwrnxygcfo25ydzl3qbql4s58lr7sxw5a0p1nun1g2"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 787725959,\n  \"apiErrorMsg\" : \"4jq54iv6jsyn9vauqi1dqvpyc7a8r8pfi995kay8srvdsw922z3fha524j5ygu14piuizwn4cthodzv5m0v1bg4ohovxzshk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f84b4e4-2038-4184-b341-756abe4d87d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.807204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "e462dd11-9ef0-439b-9c98-2a6a333fe062",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "sqg9tgkeqpno9yhmityihxy8j5nfssajjk73085lgputj9h7enbpox0lmzxogpncc328lhtu9qbioi0ux1y60jabelz3cy87rw7l5py6h3rctzdhhitllqr1v451zxb"
        },
        "from-value" : {
          "equalTo" : "ce5egmqs7lrr7dqup74yvxm93c09yfd3ypto5n7euh5c1n6freg18lxrq9kn33hdnx50zynmy4586or33ffj5nsm3qdyhd3929fafuzx58n35jgjz4hutpq22fybn28n83i6kzjq82c1jkif9ressntynfjw9kgxedvw35jqru2zjnkanlufv"
        },
        "from-type" : {
          "equalTo" : "e9bvkrpzp44qzf52myquu1cggrevsoj9aye5n9ctg58zninh2ght8jd6hqc9hv90aeaw1rfcoba2mfi9qjg5iibn4rjez9bfdxx4wg3f083mgwmsl8j53vk2677byerqvoxgi6ewc6e0hus5kh9ztpntq0zzm"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2087926275,\n  \"apiErrorMsg\" : \"xcwmzm36kehjw37la5zls1wm36xnvq6gfk8gmcjctqjedjs5twkl1pqjqkss6j6b8cmw9zpuq2whiqgzcqsuul4cm8spmmvx7dei2txpiz43754moeoapq7m03cwhiyqd5fyv20teu2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e462dd11-9ef0-439b-9c98-2a6a333fe062",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.807087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "0ec8c9e9-c35d-47d3-b869-178b575ab0bd",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "0lq3p2w2g6l54bpty2itxr54wd93p7zsp6egd9di0mjhvg3kq"
        },
        "from-value" : {
          "equalTo" : "a97nuifc0vl5uizm3u209dlu8otf7dsoa8wwzy42oxzrt1d665qt3pu6fj7ug6j1tr9l8w3hjumap3pxywpy3yeiogco0ldrnoqg4416qjxlef2e6ddt4eopezzhe02mgpncbl85lpukqe1rwbs2ihhx2oisarjtjp8yl8si478orbqnyypc951ks8g1dcs21cpwj"
        },
        "from-type" : {
          "equalTo" : "8nl01o4mxbv910l0qq7o430baxwdnraunjhkdswd1bvmj2q4r242gs18r0cbp9ov9gnudv5dxiwuq2ttc2zcmzo8bjzhq71ujv9hhjwuxf7kdnew39hz55q2dbm11on943krp3j36j7u2x1gzoplqwbnpcxdf4pj5t731vvojadiv8iqd24zpibejejukou"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1245805606,\n  \"apiErrorMsg\" : \"l64zxd3vgru5qrwrv4eq73e8ixhlo9tc9wwip2jnb6ritwacyma5rxnyrhyq93qg4k6rn6e8bo8hazrzm83r3v7f6htcnt83950f6ftu2ku6dyyga6m868zreyp9htpb9wsdqvieovjgr7gsi3t08uyrozcqv5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ec8c9e9-c35d-47d3-b869-178b575ab0bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.806964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "d0a9825f-7a87-421d-8ec4-b07d8e86a49d",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "hrn19s0c9l491533fsf14yzmnturtdw22bou6qig8y810k87l45qtuvryb0o1nirm8n9ghtbj2mwo9nzkm1vi9x5ngbln16uipyew2ipnnay3tqlpr1pl0svxapk8zdugzb8lo0phig2179ker8q4y52qr4w6ay712llrvlsw2ce0bu6o62bv7gawc7118"
        },
        "from-value" : {
          "equalTo" : "ryo9w12xcnewl4le6gy3ka7r09nmugp38r6gpwpttg37thlv5drfald9r4c8ly7s2hn26vplga1gshjiblycg"
        },
        "from-type" : {
          "equalTo" : "e545ku180w7tyrxz65lvjhyq6lc92ae1ar07i2n3k8z1j885nigosqcxggiqdds4vwrs0ezb5n33l9xpy4ow79iqydxdmpulhcmi9owf1ibt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"v2gw0tsl41ssfo9m19k9354khvduzvo1t\",\n  \"valid\" : false,\n  \"to-type\" : \"26ls90fa8e7492nwzope4xszdyelw01k2lde6kf6l14ucxqdl20hkciq1fbv3cetqjxqmzkkhef9bzjfeqaw47b4l4sa29si8ext7o2cugzb4le4atm0zg71\",\n  \"from-value\" : \"3b3wm1zwgdktqve0lffi8a8lcys2gt2vik7pwvhb1i0fgacmghc891umfczg4di7tb9zq317bts68csu372chzcq3y41dy3gicfm21escbvu2x20r0w\",\n  \"from-type\" : \"mscjj5yhbdrds17exyy338jxflmj4e3f7wcjqalhg2k0abb5abrycj2h90hd1j5vquycz2ba3ptdux3j7jj5saf730krmgoqh9aqw2zjsjw18pifa2w80oz4wkol7fcj99dhzitsvyevxsh8gc5pvz521wuoooigmmtejhyksz8nghbikdu79\",\n  \"result-float\" : 1.0553142236653247E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0a9825f-7a87-421d-8ec4-b07d8e86a49d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.806836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "977532bb-96de-4c85-998a-d35267d8c540",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1938862967,\n  \"apiErrorMsg\" : \"goe7zya37jkngosmj7jle4qrhqg11yjc87\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "977532bb-96de-4c85-998a-d35267d8c540",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.806626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "6b0b7c2d-a795-493c-8e99-2083065643b9",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1519162389,\n  \"apiErrorMsg\" : \"o1ap871y3krllb9nnv8dyzxjs20ibpuv0j6fhw8yszc48l66tujw4v0r1jaiaoy2h5tn11t3xn4q7pewtcvm362vdnxnaiurm0bo4f2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b0b7c2d-a795-493c-8e99-2083065643b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.806566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "6a68077c-eb62-40d5-9ed1-b9e2c3a48642",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 528524891,\n  \"apiErrorMsg\" : \"bu7c8djkme6n9ms5omzjuuedm2kp9entxkfsqzekbo9lyo9i085grgt3ycwx12a8n2kshc2esmb4a688djfxtxad9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a68077c-eb62-40d5-9ed1-b9e2c3a48642",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.806504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "c6f9bd75-6d30-4d49-ade4-0d53b651abed",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"07lyewod6c4ek4c739\", \"hx30vctzso0konlc8jl8rui0d705d8grpbcgkyhppszjfxe5kq6ko70zqekq6i3rpk2i25ae44wnm71236mb9g5kfcfgg4fmc4t03dl3hgj2saubpnhuuxhaxrntuenk7jloxu0nxsc7s1ue7p7zvt1\", \"pqxrdpa50yy81nsxht7mbf2xuxty8025crj9i447gu961jlfenap0cd0pjf8tk9asx9vu7x8ybi9of7tjzn7rte1thjen5r6vgae5lntxe2bjgiv5xm8r4hu2mdgzmhod4feex5xyrcy55fmzb6s7keydrai5s5pg8n32dmc3xhvwd0ytjvfghqmx8awx440ixjk\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"ncfuxwhidkhug1s69c6xs4c5bm6aydrhutef3ypf6z50mg4onizv1m8kf5d7fjo3v22rz2fg2zj\",\n  \"response-headers\" : { },\n  \"language-code\" : \"170xpgc9b329nmgfk60shyycxg7r9so209b2noqp48c9y3m9a8z8fqhmbqwozih3yw8zv1yqonmjbnriktnflu37z80wcg2gfw00olrgxgkz2yppgawgynp84ihse4b2y3nvqvm3whicck33nzqdyvef49w4k5h4bu92df6osn4obtqz4q54u36a\",\n  \"load-time\" : 1.9338480081456687E307,\n  \"server-ip\" : \"8shx8byi928zki3dmwao1kc1rqxu7ykbr02tjj9awzng8qt21k05drfxyujgge9c8za026xdzwlr9n50h0vqkod1acjjfptvzis12hav5w7icwzttl58yqehfwwzzuufhj58e3zsed4t9uryx4luahlf57m8i5m2h8cpvhq7r6xu8ktryj00dyoxt3\",\n  \"title\" : \"Laudantium voluptatem excepturi.\",\n  \"content\" : \"Esse mollitia placeat fugiat sit ducimus pariatur incidunt. Ut facere vero nulla voluptatem eius et. Minima non mollitia quia et accusantium.\",\n  \"url\" : \"https://web.example.mocklab.io/047580\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/906890\",\n  \"http-status-code\" : 554907742,\n  \"is-error\" : false,\n  \"error-message\" : \"Quaerat veniam perspiciatis. Voluptas quos corrupti qui itaque quis quibusdam ea. Autem saepe natus reiciendis a labore et. Unde veritatis et unde. Doloribus sit laborum sint.\",\n  \"is-secure\" : true,\n  \"elements\" : [ \"xs3p23jpts585a1ti12wxdulaohr138dex4n64d20m9psplfr58boye7zpdi1ygd80hr5mhegjpyf3cykbculjrypi7h1r6rgsdudb7l0yqiwfe44lpd8f4ijnlfb0975ptb8pkv1fo59yvnb3tdkwh819gioi\", \"swnoh0vaa5wlgzmtswy9d6cymlosbtjtfgy5l9pqi42hpo51ebobky8s3jj82k9zkhth88pqjt6h09ioqetmum7w9wl1usq8tmhk7nhk2rnpqjlxmm0tog58j4a7vfoeonc94cyrw3dwm4e48adtlqqrhgygks1fz5wpz436f8xew11mmrtqq16\" ],\n  \"http-status-message\" : \"Enim sed dolores culpa eaque minus doloribus. Animi deserunt vitae fugit consequuntur iste quaerat. Alias est dolore quibusdam ut.\",\n  \"is-http-ok\" : false,\n  \"is-http-redirect\" : true,\n  \"is-timeout\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6f9bd75-6d30-4d49-ade4-0d53b651abed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.806433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "a02b3fc2-9e09-4217-8dc2-2c8ce43d80e6",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "qj70ziprgl3w5tc5ok5wy5bgmk4tvskh17otv"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 506816610,\n  \"apiErrorMsg\" : \"374wll3zm2hekfm59zwmgbsiyie6d144dv552zkoirlljlq5lci5uwri7g6fs66e3fli3g3rkb5c7flujz1py7iorkkeu6b035t73x3en0utj9jww2ij3boc7awtxgig3qgwqtkh54aifkrlhus4ao64fmmy34tpc2t8h9op98n5weu6gfn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a02b3fc2-9e09-4217-8dc2-2c8ce43d80e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.805767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "a6fc9d63-2c6f-43fc-ae97-6f513bfde6b1",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "9u8k6biwpbmkz5br4bdnwd012fn6xcawn3eck3w4fc2vkm1oqc6k02kyjr7dq29bvtfxeh7sk14yqxxmk8ny5tqelbom3obloshqc02ts5xuq321228m1c3x0niqquxyrb2qfr9mryk7qbh6r71fzeypzaphpk9rcbcqtkdbsorgg"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1232329518,\n  \"apiErrorMsg\" : \"k2yfpqosonewin3rqloarsbow6v2gp4113uy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6fc9d63-2c6f-43fc-ae97-6f513bfde6b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.805684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "29fa2237-5c5a-48b7-af92-2c3871f25601",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "fnr1zn3j0rqjd7ftb7o3o9vujhdu"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2022445206,\n  \"apiErrorMsg\" : \"dvw0p8fp0pok3mg67optwr8getth90qyoof2o07qsvctpvp8i2till84962tl1oyojo9c4hrczb088p30fo7hr9jpj8pec89tve5xjtoj21aj3dvcz7484ij077hzetjr8jfgql5caiqzp0ccqjo7q8pnxvu4boghyayzgq6yxqd21jmakyb9inp9y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29fa2237-5c5a-48b7-af92-2c3871f25601",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.805603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "ec1bcc23-22da-4587-9d55-14e1bc399d20",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "uw86nhfkls1ymq8o61lep55pfvm4k0a5tpqgwn0gzu30wsgipkzofowve80dnskuma00r6mkjvmx18bowz7p5tj2hjiqf9ji8ywc9fiozlbw2677zwuybmx75sfcd635wocuw5n7k6a9d3q2k"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Saint Kitts and Nevis\",\n  \"country-code\" : \"hhhht\",\n  \"card-brand\" : \"4o2zo2k\",\n  \"ip-blocklists\" : [ \"on9mkb5oqw450iwpa92js0jmxf5kkj5d8dt8db4lvudj1bt9ft3cw0afjm00a06fycd9y97vyyjx10j2u3\", \"gii14nykwrpb3x31cqb6u3xzh9164hx7qvtzbiak0n0dn00sqsutrtilddadet8psbo63g440gi04ngatworbnug7rquffql5whc35cbdudlflzdia1nk3yv8qa7or1bb57jfc1gf9rfrzbblzkqontow3mw4slfcmi3nif1mdf3spfe5ibbev4tmzywnbx5\", \"ri7m8qd47am1lg50cb5qnosnojmjgetzi6ef7kdhpvfbou8lx82nvt9bs7k4ot9u9p84flsc9xfzmjcq1rm5airztj4799gmjx1lebuq3n32y3fns0kpxzub1hl9fixgdrslffbekafruy27ji64ckesauodth8rpiqm9u39aaexs4um\", \"dfrnnpwl91s4\", \"8ei8r9vlrxlnbxauej9t22agicaopvq1tyj4st1wrp0v1aprvoekypmmlcovd3idrft6tqkdd2vybdjguqzen6y8ik06emevwcv1sgt9sxxkxqzvgbpgh589wfxaa139m6nm6e6m0t3vzg1lfq8hs0mz8t0zvsr05rddri5li6se1lh6mvkus92d861sar09sdf\", \"vcbil0usmy3uzrorhfj91i5ztmsv9h7\", \"6i046ciucl9aihz898gzh4g0blbhh0862s3ti9yyew7yc55yq0okf2mtsb86axbchf5k15ktjy99or53\" ],\n  \"ip-city\" : \"Vonfurt\",\n  \"ip-country-code3\" : \"nee00f6gfu8b87b5j18nab9f1zhvxz9mlzqojtgjcqywcdjxxkl6qko6viri8tge4e6dwido9hdrjvnfoxcgaqwq8e4z4d\",\n  \"is-commercial\" : false,\n  \"ip-country\" : \"San Marino\",\n  \"bin-number\" : \"gcooe4xue81lkgq2mod85z4of7za3q2gohfq7h7c928jyjrq4l79kenxuazgwdq5urlbljw9av7p0yf36\",\n  \"issuer\" : \"a8oapb3evsvp6y0uoi5d2c1f2nyiqekcx255vipf0r6zekm8i97mic1le9j1hphwcime9yptqleolgf6jgilogy7q9gqocw48x2bw3rwxzyt17rxiwnc6zrxii3cfjfgnvfm\",\n  \"ip-region\" : \"pk9baw8s\",\n  \"issuer-website\" : \"a8qulvtgalbp6h5ettn42nf71zssui656vkytw43fwftkw77kt1rxpstetmw0z0nwco8wvdt9eujvdl4vxckhdvxthckx9roak6ujrq2jol62w7\",\n  \"valid\" : false,\n  \"card-type\" : \"wjyn2o4uaiy0w69n6q72sfpsc\",\n  \"is-prepaid\" : false,\n  \"ip-blocklisted\" : false,\n  \"card-category\" : \"yg26v60t18nmi\",\n  \"issuer-phone\" : \"(593) 411-5195 x011\",\n  \"currency-code\" : \"AWG\",\n  \"ip-matches-bin\" : false,\n  \"country-code3\" : \"7p9ja8bfmbwgnc3ama3qoubv\",\n  \"ip-country-code\" : \"iiiiq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec1bcc23-22da-4587-9d55-14e1bc399d20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.80551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "65c5920d-db3d-47fc-8502-d97a399eaf0c",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 668464378,\n  \"apiErrorMsg\" : \"5r2ug3ylb06v2xyotemymzu2e7rww75br3u1jm9uw13znt7reqoyrhq8x6lt7n13p4r34fde6y7nwhemuea7dvbgnycdj4p63cfgc3eyxd6wxozhv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65c5920d-db3d-47fc-8502-d97a399eaf0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "dabb2f50-e84b-42ca-a395-7b573f2d4e8c",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1183837617,\n  \"apiErrorMsg\" : \"49mcmh07gzmhnq79kgc834stcl1nrg4r1ab10shsssu60h9714xte1wgutb0y2j839ovc8lidc70oynutrkkxmdej2dwssksp1qhjn0xrueckn94ap9h9i367iuwzf8zvmw3dmug2aa4cpzzym0lqqyy6qq30epztce5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dabb2f50-e84b-42ca-a395-7b573f2d4e8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "07e5c042-36f8-494d-affa-820b9de0bde6",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1096345772,\n  \"apiErrorMsg\" : \"49yo7ydjkabcd3ovtskegrb3t9t1jqy8l1od03u8yki9cqjave1qtj1fgqcfh4dxz68352jomhj0sdrbt597n31vmwhsxwv85amea4fx8sjdtz7zy7xm7gry9zlqn9n7l0p3y94osr2kiktuyp4d1lry0iqgwkjjb3dwa04xbpyisers17uzoq1l3voe0d5z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07e5c042-36f8-494d-affa-820b9de0bde6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "c075ac56-aa6b-402d-9b4c-6af38dc73a96",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"lzvyd1iuoh1xv3kgm4ltre4w23wq2brubjoucw5hh7vrtve0tcqrhvwopovd4jmzts23uyefm0zwgk7fukqpwpbyd69e1yhvlwlbc5rvrscwjyh28jwrlpwj88ef8ske5osoq8um86zjvhqfbe1l541q53fliyz1ljv8v71y6vnxo5o9zxs\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c075ac56-aa6b-402d-9b4c-6af38dc73a96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "1a0b9932-d933-4887-aee1-0053004e09ac",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 642172886,\n  \"apiErrorMsg\" : \"55rxhli1mrf75q5gx5w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a0b9932-d933-4887-aee1-0053004e09ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "f9227515-c03d-4dc0-b98d-45eb1f485b73",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1883610726,\n  \"apiErrorMsg\" : \"uq8w96z6a7z98l3zzzpkgxhw9h7fu5u3rohwydnzf6jwojppbrsgkhgi1nnzofx20j6u2j6zbkbiwvifjbgx6ord9py107d8bfeyru65u3ls2ay9qdp6qouxur7o4bqsjt2hnq5napnl08pzxb4ccfdu81zkarch5w2z05psipd2op\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9227515-c03d-4dc0-b98d-45eb1f485b73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "218eb3c9-01eb-4f59-8180-21cc7c2edbcd",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1994845595,\n  \"apiErrorMsg\" : \"dlpou5s00d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "218eb3c9-01eb-4f59-8180-21cc7c2edbcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "e55a000a-d6f2-45a9-8a79-5a1ca270eca3",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"Quis animi illum. Quis tenetur doloribus. Omnis doloribus est.\",\n  \"is-bad\" : true,\n  \"bad-words-list\" : [ \"4ih55pse2ecwj9kxtl7nj52vwcv8b7nbrfgf7ohcq4g555922fxqlqaev1icmj88gne0b7pntx\", \"x79w7vluning6ijqhx1ebqx86akeozplpw68q9mfw6\", \"tik9fz2j0w8ntbqy3y391h5oy28fca1rt0fy0ro1ggdiqtgmsiidbuyp1i068x87swjbctoq54tae27z32x31bt0wfi3ux624ta2iigrmz9iab188mwh8wrcassr0j3j3ovgewxrh8bepuwynx8lbpwmeq4cxidnntuu99ab8ghufi9\" ],\n  \"bad-words-total\" : 1534257613\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e55a000a-d6f2-45a9-8a79-5a1ca270eca3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:24:23.804372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  } ]
}