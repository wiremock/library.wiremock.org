{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "CustomerInsightsManagementClient",
    "description" : "The Azure Customer Insights management API provides a RESTful set of web services that interact with Azure Customer Insights service to manage your resources. The API has entities that capture the relationship between an end user and the Azure Customer Insights service.",
    "version" : "2017-04-26"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/providers/Microsoft.CustomerInsights/operations" : {
      "get" : {
        "tags" : [ "Operations" ],
        "description" : "Lists all of the available Customer Insights REST API operations.",
        "operationId" : "Operations_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OperationListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CustomerInsights/hubs" : {
      "get" : {
        "tags" : [ "Hubs" ],
        "description" : "Gets all hubs in the specified subscription.",
        "operationId" : "Hubs_List",
        "parameters" : [ {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the hubs in the subscription.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HubListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs" : {
      "get" : {
        "tags" : [ "Hubs" ],
        "description" : "Gets all the hubs in a resource group.",
        "operationId" : "Hubs_ListByResourceGroup",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the hubs in the resource group.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HubListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}" : {
      "get" : {
        "tags" : [ "Hubs" ],
        "description" : "Gets information about the specified hub.",
        "operationId" : "Hubs_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hub"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Hubs" ],
        "description" : "Creates a hub, or updates an existing hub.",
        "operationId" : "Hubs_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the Hub.",
          "required" : true,
          "schema" : {
            "maxLength" : 64,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate Hub operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hub"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. An existing hub is updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hub"
                }
              }
            }
          },
          "201" : {
            "description" : "Created. A new hub is created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hub"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Hubs" ],
        "description" : "Deletes the specified hub.",
        "operationId" : "Hubs_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The hub is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          },
          "204" : {
            "description" : "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      },
      "patch" : {
        "tags" : [ "Hubs" ],
        "description" : "Updates a Hub.",
        "operationId" : "Hubs_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the Hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the Update Hub operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hub"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. The hub is updated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hub"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies" : {
      "get" : {
        "tags" : [ "AuthorizationPolicies" ],
        "description" : "Gets all the authorization policies in a specified hub.",
        "operationId" : "AuthorizationPolicies_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the authorization policies in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicyListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}" : {
      "get" : {
        "tags" : [ "AuthorizationPolicies" ],
        "description" : "Gets an authorization policy in the hub.",
        "operationId" : "AuthorizationPolicies_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationPolicyName",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the authorization policy.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicyResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "AuthorizationPolicies" ],
        "description" : "Creates an authorization policy or updates an existing authorization policy.",
        "operationId" : "AuthorizationPolicies_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationPolicyName",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[A-Za-z0-9]$|^[A-Za-z0-9][\\w-\\.]*[A-Za-z0-9]$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate authorization policy operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorizationPolicyResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully update an existing authorization policy.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicyResourceFormat"
                }
              }
            }
          },
          "201" : {
            "description" : "Created. A new authorization policy is created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicyResourceFormat"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regeneratePrimaryKey" : {
      "post" : {
        "tags" : [ "AuthorizationPolicies" ],
        "description" : "Regenerates the primary policy key of the specified authorization policy.",
        "operationId" : "AuthorizationPolicies_RegeneratePrimaryKey",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationPolicyName",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The primary key of the authorization policy is regenerated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/authorizationPolicies/{authorizationPolicyName}/regenerateSecondaryKey" : {
      "post" : {
        "tags" : [ "AuthorizationPolicies" ],
        "description" : "Regenerates the secondary policy key of the specified authorization policy.",
        "operationId" : "AuthorizationPolicies_RegenerateSecondaryKey",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authorizationPolicyName",
          "in" : "path",
          "description" : "The name of the policy.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The secondary key of the authorization policy is regenerated.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors" : {
      "get" : {
        "tags" : [ "Connectors" ],
        "description" : "Gets all the connectors in the specified hub.",
        "operationId" : "Connectors_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the connectors in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectorListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}" : {
      "get" : {
        "tags" : [ "Connectors" ],
        "description" : "Gets a connector in the hub.",
        "operationId" : "Connectors_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectorName",
          "in" : "path",
          "description" : "The name of the connector.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the connector.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectorResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Connectors" ],
        "description" : "Creates a connector or updates an existing connector in the hub.",
        "operationId" : "Connectors_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectorName",
          "in" : "path",
          "description" : "The name of the connector.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate Connector operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectorResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the connector.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectorResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create connector operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "Connectors" ],
        "description" : "Deletes a connector in the hub.",
        "operationId" : "Connectors_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectorName",
          "in" : "path",
          "description" : "The name of the connector.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The connector is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          },
          "204" : {
            "description" : "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings" : {
      "get" : {
        "tags" : [ "ConnectorMappings" ],
        "description" : "Gets all the connector mappings in the specified connector.",
        "operationId" : "ConnectorMappings_ListByConnector",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectorName",
          "in" : "path",
          "description" : "The name of the connector.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the connector mappings in the connector.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectorMappingListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/connectors/{connectorName}/mappings/{mappingName}" : {
      "get" : {
        "tags" : [ "ConnectorMappings" ],
        "description" : "Gets a connector mapping in the connector.",
        "operationId" : "ConnectorMappings_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectorName",
          "in" : "path",
          "description" : "The name of the connector.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "The name of the connector mapping.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the connector mapping.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectorMappingResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ConnectorMappings" ],
        "description" : "Creates a connector mapping or updates an existing connector mapping in the connector.",
        "operationId" : "ConnectorMappings_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectorName",
          "in" : "path",
          "description" : "The name of the connector.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "The name of the connector mapping.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate Connector Mapping operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConnectorMappingResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the connector mapping.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectorMappingResourceFormat"
                }
              }
            }
          },
          "201" : {
            "description" : "Created. A new connector mapping is created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectorMappingResourceFormat"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ConnectorMappings" ],
        "description" : "Deletes a connector mapping in the connector.",
        "operationId" : "ConnectorMappings_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectorName",
          "in" : "path",
          "description" : "The name of the connector.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mappingName",
          "in" : "path",
          "description" : "The name of the connector mapping.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The connector mapping is deleted."
          },
          "204" : {
            "description" : "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getDataImageUploadUrl" : {
      "post" : {
        "tags" : [ "Images" ],
        "description" : "Gets data image upload URL.",
        "operationId" : "Images_GetUploadUrlForData",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the GetUploadUrlForData operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetImageUploadUrlInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the image upload URL for data.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImageDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/images/getEntityTypeImageUploadUrl" : {
      "post" : {
        "tags" : [ "Images" ],
        "description" : "Gets entity type (profile or interaction) image upload URL.",
        "operationId" : "Images_GetUploadUrlForEntityType",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the GetUploadUrlForEntityType operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetImageUploadUrlInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the image upload URL for entity type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImageDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions" : {
      "get" : {
        "tags" : [ "Interactions" ],
        "description" : "Gets all interactions in the hub.",
        "operationId" : "Interactions_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale-code",
          "in" : "query",
          "description" : "Locale of interaction to retrieve, default is en-us.",
          "schema" : {
            "type" : "string",
            "default" : "en-us"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the interactions in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InteractionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}" : {
      "get" : {
        "tags" : [ "Interactions" ],
        "description" : "Gets information about the specified interaction.",
        "operationId" : "Interactions_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interactionName",
          "in" : "path",
          "description" : "The name of the interaction.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale-code",
          "in" : "query",
          "description" : "Locale of interaction to retrieve, default is en-us.",
          "schema" : {
            "type" : "string",
            "default" : "en-us"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the interaction.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InteractionResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Interactions" ],
        "description" : "Creates an interaction or updates an existing interaction within a hub.",
        "operationId" : "Interactions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interactionName",
          "in" : "path",
          "description" : "The name of the interaction.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate Interaction operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InteractionResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the interaction.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InteractionResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create interaction operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/interactions/{interactionName}/suggestRelationshipLinks" : {
      "post" : {
        "tags" : [ "Interactions" ],
        "description" : "Suggests relationships to create relationship links.",
        "operationId" : "Interactions_SuggestRelationshipLinks",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "interactionName",
          "in" : "path",
          "description" : "The name of the interaction.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get suggested Relationship Links.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuggestRelationshipLinksResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "description" : "Gets all the KPIs in the specified hub.",
        "operationId" : "Kpi_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the KPIs in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KpiListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}" : {
      "get" : {
        "tags" : [ "Kpi" ],
        "description" : "Gets a KPI in the hub.",
        "operationId" : "Kpi_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiName",
          "in" : "path",
          "description" : "The name of the KPI.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the KPI.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KpiResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Kpi" ],
        "description" : "Creates a KPI or updates an existing KPI in the hub.",
        "operationId" : "Kpi_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiName",
          "in" : "path",
          "description" : "The name of the KPI.",
          "required" : true,
          "schema" : {
            "maxLength" : 512,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create/update KPI operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KpiResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the KPI.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KpiResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create KPI operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "Kpi" ],
        "description" : "Deletes a KPI in the hub.",
        "operationId" : "Kpi_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiName",
          "in" : "path",
          "description" : "The name of the KPI.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The KPI is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/kpi/{kpiName}/reprocess" : {
      "post" : {
        "tags" : [ "Kpi" ],
        "description" : "Reprocesses the Kpi values of the specified KPI.",
        "operationId" : "Kpi_Reprocess",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiName",
          "in" : "path",
          "description" : "The name of the KPI.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted. Reprocessing Kpi Values operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links" : {
      "get" : {
        "tags" : [ "Links" ],
        "description" : "Gets all the links in the specified hub.",
        "operationId" : "Links_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the links in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}" : {
      "get" : {
        "tags" : [ "Links" ],
        "description" : "Gets a link in the hub.",
        "operationId" : "Links_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkName",
          "in" : "path",
          "description" : "The name of the link.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the link.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Links" ],
        "description" : "Creates a link or updates an existing link in the hub.",
        "operationId" : "Links_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkName",
          "in" : "path",
          "description" : "The name of the link.",
          "required" : true,
          "schema" : {
            "maxLength" : 512,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate Link operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LinkResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the link.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create link operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "Links" ],
        "description" : "Deletes a link in the hub.",
        "operationId" : "Links_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkName",
          "in" : "path",
          "description" : "The name of the link.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The link is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions" : {
      "get" : {
        "tags" : [ "Predictions" ],
        "description" : "Gets all the predictions in the specified hub.",
        "operationId" : "Predictions_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the predictions in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredictionListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}" : {
      "get" : {
        "tags" : [ "Predictions" ],
        "description" : "Gets a Prediction in the hub.",
        "operationId" : "Predictions_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "predictionName",
          "in" : "path",
          "description" : "The name of the Prediction.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the Prediction.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredictionResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Predictions" ],
        "description" : "Creates a Prediction or updates an existing Prediction in the hub.",
        "operationId" : "Predictions_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "predictionName",
          "in" : "path",
          "description" : "The name of the Prediction.",
          "required" : true,
          "schema" : {
            "maxLength" : 512,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create/update Prediction operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredictionResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the Prediction.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredictionResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create Prediction operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "Predictions" ],
        "description" : "Deletes a Prediction in the hub.",
        "operationId" : "Predictions_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "predictionName",
          "in" : "path",
          "description" : "The name of the Prediction.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The Prediction is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getModelStatus" : {
      "post" : {
        "tags" : [ "Predictions" ],
        "description" : "Gets model status of the prediction.",
        "operationId" : "Predictions_GetModelStatus",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "predictionName",
          "in" : "path",
          "description" : "The name of the Prediction.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the model status.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredictionModelStatus"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/getTrainingResults" : {
      "post" : {
        "tags" : [ "Predictions" ],
        "description" : "Gets training results.",
        "operationId" : "Predictions_GetTrainingResults",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "predictionName",
          "in" : "path",
          "description" : "The name of the Prediction.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the training results.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PredictionTrainingResults"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/predictions/{predictionName}/modelStatus" : {
      "post" : {
        "tags" : [ "Predictions" ],
        "description" : "Creates or updates the model status of prediction.",
        "operationId" : "Predictions_ModelStatus",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "predictionName",
          "in" : "path",
          "description" : "The name of the Prediction.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create/update prediction model status operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PredictionModelStatus"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created or updated the prediction model status."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "description" : "Gets all profile in the hub.",
        "operationId" : "Profiles_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale-code",
          "in" : "query",
          "description" : "Locale of profile to retrieve, default is en-us.",
          "schema" : {
            "type" : "string",
            "default" : "en-us"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the profiles in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "description" : "Gets information about the specified profile.",
        "operationId" : "Profiles_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The name of the profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale-code",
          "in" : "query",
          "description" : "Locale of profile to retrieve, default is en-us.",
          "schema" : {
            "type" : "string",
            "default" : "en-us"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the profile.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Profiles" ],
        "description" : "Creates a profile within a Hub, or updates an existing profile.",
        "operationId" : "Profiles_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The name of the profile.",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the create/delete Profile type operation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the profile.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create profile operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "Profiles" ],
        "description" : "Deletes a profile within a hub",
        "operationId" : "Profiles_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The name of the profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "locale-code",
          "in" : "query",
          "description" : "Locale of profile to retrieve, default is en-us.",
          "schema" : {
            "type" : "string",
            "default" : "en-us"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The profile is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          },
          "204" : {
            "description" : "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/profiles/{profileName}/getEnrichingKpis" : {
      "post" : {
        "tags" : [ "Profiles" ],
        "description" : "Gets the KPIs that enrich the profile Type identified by the supplied name. Enrichment happens through participants of the Interaction on an Interaction KPI and through Relationships for Profile KPIs.",
        "operationId" : "Profiles_GetEnrichingKpis",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "profileName",
          "in" : "path",
          "description" : "The name of the profile.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the enriching KPIs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/KpiDefinition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks" : {
      "get" : {
        "tags" : [ "RelationshipLinks" ],
        "description" : "Gets all relationship links in the hub.",
        "operationId" : "RelationshipLinks_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the relationship links in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelationshipLinkListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationshipLinks/{relationshipLinkName}" : {
      "get" : {
        "tags" : [ "RelationshipLinks" ],
        "description" : "Gets information about the specified relationship Link.",
        "operationId" : "RelationshipLinks_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationshipLinkName",
          "in" : "path",
          "description" : "The name of the relationship link.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the relationship link.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelationshipLinkResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RelationshipLinks" ],
        "description" : "Creates a relationship link or updates an existing relationship link within a hub.",
        "operationId" : "RelationshipLinks_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationshipLinkName",
          "in" : "path",
          "description" : "The name of the relationship link.",
          "required" : true,
          "schema" : {
            "maxLength" : 512,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate relationship link operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipLinkResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the relationship link.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelationshipLinkResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create relationship operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "RelationshipLinks" ],
        "description" : "Deletes a relationship link within a hub.",
        "operationId" : "RelationshipLinks_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationshipLinkName",
          "in" : "path",
          "description" : "The name of the relationship.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The relationship link is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships" : {
      "get" : {
        "tags" : [ "Relationships" ],
        "description" : "Gets all relationships in the hub.",
        "operationId" : "Relationships_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the relationships in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelationshipListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/relationships/{relationshipName}" : {
      "get" : {
        "tags" : [ "Relationships" ],
        "description" : "Gets information about the specified relationship.",
        "operationId" : "Relationships_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationshipName",
          "in" : "path",
          "description" : "The name of the relationship.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the relationship.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelationshipResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Relationships" ],
        "description" : "Creates a relationship or updates an existing relationship within a hub.",
        "operationId" : "Relationships_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationshipName",
          "in" : "path",
          "description" : "The name of the Relationship.",
          "required" : true,
          "schema" : {
            "maxLength" : 512,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate Relationship operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RelationshipResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the relationship.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RelationshipResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create relationship operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "Relationships" ],
        "description" : "Deletes a relationship within a hub.",
        "operationId" : "Relationships_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "relationshipName",
          "in" : "path",
          "description" : "The name of the relationship.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The relationship is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments" : {
      "get" : {
        "tags" : [ "RoleAssignments" ],
        "description" : "Gets all the role assignments for the specified hub.",
        "operationId" : "RoleAssignments_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the role assignment in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleAssignmentListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roleAssignments/{assignmentName}" : {
      "get" : {
        "tags" : [ "RoleAssignments" ],
        "description" : "Gets the role assignment in the hub.",
        "operationId" : "RoleAssignments_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assignmentName",
          "in" : "path",
          "description" : "The name of the role assignment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the role assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleAssignmentResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RoleAssignments" ],
        "description" : "Creates or updates a role assignment in the hub.",
        "operationId" : "RoleAssignments_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assignmentName",
          "in" : "path",
          "description" : "The assignment name",
          "required" : true,
          "schema" : {
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z][a-zA-Z0-9_]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate RoleAssignment operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoleAssignmentResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the role assignment.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleAssignmentResourceFormat"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted. The create role assignment operation is accepted."
          }
        }
      },
      "delete" : {
        "tags" : [ "RoleAssignments" ],
        "description" : "Deletes the role assignment in the hub.",
        "operationId" : "RoleAssignments_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assignmentName",
          "in" : "path",
          "description" : "The name of the role assignment.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The role assignment is deleted."
          },
          "202" : {
            "description" : "Accepted. The delete operation is accepted."
          },
          "204" : {
            "description" : "NoContent. Successfully requested delete operation, but the response is intentionally empty."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/roles" : {
      "get" : {
        "tags" : [ "Roles" ],
        "description" : "Gets all the roles for the hub.",
        "operationId" : "Roles_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the roles in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoleListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views" : {
      "get" : {
        "tags" : [ "Views" ],
        "description" : "Gets all available views for given user in the specified hub.",
        "operationId" : "Views_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "query",
          "description" : "The user ID. Use * to retrieve hub level views.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the views in the hub for the given user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ViewListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/views/{viewName}" : {
      "get" : {
        "tags" : [ "Views" ],
        "description" : "Gets a view in the hub.",
        "operationId" : "Views_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "The name of the view.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "query",
          "description" : "The user ID. Use * to retrieve hub level view.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the view.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ViewResourceFormat"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Views" ],
        "description" : "Creates a view or updates an existing view in the hub.",
        "operationId" : "Views_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "The name of the view.",
          "required" : true,
          "schema" : {
            "maxLength" : 512,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Parameters supplied to the CreateOrUpdate View operation.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ViewResourceFormat"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successfully created the view.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ViewResourceFormat"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Views" ],
        "description" : "Deletes a view in the specified hub.",
        "operationId" : "Views_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "viewName",
          "in" : "path",
          "description" : "The name of the view.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "query",
          "description" : "The user ID. Use * to retrieve hub level view.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. The view is deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes" : {
      "get" : {
        "tags" : [ "WidgetTypes" ],
        "description" : "Gets all available widget types in the specified hub.",
        "operationId" : "WidgetTypes_ListByHub",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get all the widget types in the hub.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetTypeListResult"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/widgetTypes/{widgetTypeName}" : {
      "get" : {
        "tags" : [ "WidgetTypes" ],
        "description" : "Gets a widget type in the specified hub.",
        "operationId" : "WidgetTypes_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "hubName",
          "in" : "path",
          "description" : "The name of the hub.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "widgetTypeName",
          "in" : "path",
          "description" : "The name of the widget type.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Client Api Version.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Successfully get the widget type.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetTypeResourceFormat"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AssignmentPrincipal" : {
        "required" : [ "principalId", "principalType" ],
        "type" : "object",
        "properties" : {
          "principalId" : {
            "type" : "string",
            "description" : "The principal id being assigned to."
          },
          "principalMetadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Other metadata for the principal."
          },
          "principalType" : {
            "type" : "string",
            "description" : "The Type of the principal ID."
          }
        },
        "description" : "The AssignmentPrincipal"
      },
      "AuthorizationPolicy" : {
        "required" : [ "permissions" ],
        "type" : "object",
        "properties" : {
          "permissions" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "The permissions associated with the policy.",
            "items" : {
              "$ref" : "#/components/schemas/PermissionTypes"
            }
          },
          "policyName" : {
            "type" : "string",
            "description" : "Name of the policy.",
            "readOnly" : true
          },
          "primaryKey" : {
            "type" : "string",
            "description" : "Primary key associated with the policy."
          },
          "secondaryKey" : {
            "type" : "string",
            "description" : "Secondary key associated with the policy."
          }
        },
        "description" : "The authorization policy."
      },
      "AuthorizationPolicyListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/AuthorizationPolicyResourceFormat"
            }
          }
        },
        "description" : "The response of list authorization policy operation."
      },
      "AuthorizationPolicyResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/AuthorizationPolicy"
          }
        },
        "description" : "The authorization policy resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "AzureBlobConnectorProperties" : {
        "required" : [ "connectionKeyVaultUrl" ],
        "type" : "object",
        "properties" : {
          "connectionKeyVaultUrl" : {
            "type" : "string",
            "description" : "The connection KeyVault URL."
          }
        },
        "description" : "The Azure Blob connector properties."
      },
      "CanonicalProfileDefinition" : {
        "type" : "object",
        "properties" : {
          "canonicalProfileId" : {
            "type" : "integer",
            "description" : "Canonical profile ID."
          },
          "properties" : {
            "type" : "array",
            "description" : "Properties of the canonical profile.",
            "items" : {
              "type" : "object",
              "properties" : {
                "profileName" : {
                  "type" : "string",
                  "description" : "Profile name."
                },
                "profilePropertyName" : {
                  "type" : "string",
                  "description" : "Property name of profile."
                },
                "rank" : {
                  "type" : "integer",
                  "description" : "The rank."
                },
                "type" : {
                  "type" : "string",
                  "description" : "Type of canonical property value.",
                  "enum" : [ "Numeric", "Categorical", "DerivedCategorical", "DerivedNumeric" ]
                },
                "value" : {
                  "type" : "string",
                  "description" : "Value of the canonical property."
                }
              },
              "description" : "The definition of a canonical profile property."
            }
          }
        },
        "description" : "Definition of canonical profile."
      },
      "Connector" : {
        "required" : [ "connectorProperties", "connectorType" ],
        "type" : "object",
        "properties" : {
          "connectorId" : {
            "type" : "integer",
            "description" : "ID of the connector.",
            "readOnly" : true
          },
          "connectorName" : {
            "type" : "string",
            "description" : "Name of the connector."
          },
          "connectorProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "The connector properties."
          },
          "connectorType" : {
            "$ref" : "#/components/schemas/ConnectorType"
          },
          "created" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the connector."
          },
          "displayName" : {
            "type" : "string",
            "description" : "Display name of the connector."
          },
          "isInternal" : {
            "type" : "boolean",
            "description" : "If this is an internal connector."
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The last modified time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "State of connector.",
            "readOnly" : true,
            "enum" : [ "Creating", "Created", "Ready", "Expiring", "Deleting", "Failed" ]
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          }
        },
        "description" : "Properties of connector."
      },
      "ConnectorListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/ConnectorResourceFormat"
            }
          }
        },
        "description" : "The response of list connector operation."
      },
      "ConnectorMapping" : {
        "required" : [ "entityType", "entityTypeName", "mappingProperties" ],
        "type" : "object",
        "properties" : {
          "connectorMappingName" : {
            "type" : "string",
            "description" : "The connector mapping name",
            "readOnly" : true
          },
          "connectorName" : {
            "type" : "string",
            "description" : "The connector name.",
            "readOnly" : true
          },
          "connectorType" : {
            "$ref" : "#/components/schemas/ConnectorType"
          },
          "created" : {
            "type" : "string",
            "description" : "The created time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "dataFormatId" : {
            "type" : "string",
            "description" : "The DataFormat ID.",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the connector mapping."
          },
          "displayName" : {
            "type" : "string",
            "description" : "Display name for the connector mapping."
          },
          "entityType" : {
            "type" : "string",
            "description" : "Defines which entity type the file should map to.",
            "enum" : [ "None", "Profile", "Interaction", "Relationship" ]
          },
          "entityTypeName" : {
            "type" : "string",
            "description" : "The mapping entity name."
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The last modified time.",
            "format" : "date-time",
            "readOnly" : true
          },
          "mappingProperties" : {
            "$ref" : "#/components/schemas/ConnectorMappingProperties"
          },
          "nextRunTime" : {
            "type" : "string",
            "description" : "The next run time based on customer's settings.",
            "format" : "date-time",
            "readOnly" : true
          },
          "runId" : {
            "type" : "string",
            "description" : "The RunId.",
            "readOnly" : true
          },
          "state" : {
            "type" : "string",
            "description" : "State of connector mapping.",
            "readOnly" : true,
            "enum" : [ "Creating", "Created", "Failed", "Ready", "Running", "Stopped", "Expiring" ]
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          }
        },
        "description" : "The connector mapping definition."
      },
      "ConnectorMappingAvailability" : {
        "required" : [ "interval" ],
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "string",
            "description" : "The frequency to update.",
            "enum" : [ "Minute", "Hour", "Day", "Week", "Month" ]
          },
          "interval" : {
            "type" : "integer",
            "description" : "The interval of the given frequency to use."
          }
        },
        "description" : "Connector mapping property availability."
      },
      "ConnectorMappingCompleteOperation" : {
        "type" : "object",
        "properties" : {
          "completionOperationType" : {
            "type" : "string",
            "description" : "The type of completion operation.",
            "enum" : [ "DoNothing", "DeleteFile", "MoveFile" ]
          },
          "destinationFolder" : {
            "type" : "string",
            "description" : "The destination folder where files will be moved to once the import is done."
          }
        },
        "description" : "The complete operation."
      },
      "ConnectorMappingErrorManagement" : {
        "required" : [ "errorManagementType" ],
        "type" : "object",
        "properties" : {
          "errorLimit" : {
            "type" : "integer",
            "description" : "The error limit allowed while importing data."
          },
          "errorManagementType" : {
            "type" : "string",
            "description" : "The type of error management to use for the mapping.",
            "enum" : [ "RejectAndContinue", "StopImport", "RejectUntilLimit" ]
          }
        },
        "description" : "The error management."
      },
      "ConnectorMappingFormat" : {
        "required" : [ "formatType" ],
        "type" : "object",
        "properties" : {
          "acceptLanguage" : {
            "type" : "string",
            "description" : "The oData language."
          },
          "arraySeparator" : {
            "type" : "string",
            "description" : "Character separating array elements."
          },
          "columnDelimiter" : {
            "type" : "string",
            "description" : "The character that signifies a break between columns."
          },
          "formatType" : {
            "type" : "string",
            "description" : "The type mapping format.",
            "enum" : [ "TextFormat" ]
          },
          "quoteCharacter" : {
            "type" : "string",
            "description" : "Quote character, used to indicate enquoted fields."
          },
          "quoteEscapeCharacter" : {
            "type" : "string",
            "description" : "Escape character for quotes, can be the same as the quoteCharacter."
          }
        },
        "description" : "Connector mapping property format."
      },
      "ConnectorMappingListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/ConnectorMappingResourceFormat"
            }
          }
        },
        "description" : "The response of list connector mapping operation."
      },
      "ConnectorMappingProperties" : {
        "required" : [ "availability", "completeOperation", "errorManagement", "format", "structure" ],
        "type" : "object",
        "properties" : {
          "availability" : {
            "$ref" : "#/components/schemas/ConnectorMappingAvailability"
          },
          "completeOperation" : {
            "$ref" : "#/components/schemas/ConnectorMappingCompleteOperation"
          },
          "errorManagement" : {
            "$ref" : "#/components/schemas/ConnectorMappingErrorManagement"
          },
          "fileFilter" : {
            "type" : "string",
            "description" : "The file filter for the mapping."
          },
          "folderPath" : {
            "type" : "string",
            "description" : "The folder path for the mapping."
          },
          "format" : {
            "$ref" : "#/components/schemas/ConnectorMappingFormat"
          },
          "hasHeader" : {
            "type" : "boolean",
            "description" : "If the file contains a header or not."
          },
          "structure" : {
            "type" : "array",
            "description" : "Ingestion mapping information at property level.",
            "items" : {
              "$ref" : "#/components/schemas/ConnectorMappingStructure"
            }
          }
        },
        "description" : "The connector mapping properties."
      },
      "ConnectorMappingResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ConnectorMapping"
          }
        },
        "description" : "The connector mapping resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ConnectorMappingStructure" : {
        "required" : [ "columnName", "propertyName" ],
        "type" : "object",
        "properties" : {
          "columnName" : {
            "type" : "string",
            "description" : "The column name of the import file."
          },
          "customFormatSpecifier" : {
            "type" : "string",
            "description" : "Custom format specifier for input parsing."
          },
          "isEncrypted" : {
            "type" : "boolean",
            "description" : "Indicates if the column is encrypted."
          },
          "propertyName" : {
            "type" : "string",
            "description" : "The property name of the mapping entity."
          }
        },
        "description" : "Connector mapping property structure."
      },
      "ConnectorResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/Connector"
          }
        },
        "description" : "The connector resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ConnectorType" : {
        "type" : "string",
        "description" : "Type of connector.",
        "enum" : [ "None", "CRM", "AzureBlob", "Salesforce", "ExchangeOnline", "Outbound" ]
      },
      "CrmConnectorEntities" : {
        "required" : [ "logicalName" ],
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string",
            "description" : "The display name."
          },
          "isProfile" : {
            "type" : "boolean",
            "description" : "Indicating whether this is profile."
          },
          "logicalName" : {
            "type" : "string",
            "description" : "The logical name."
          }
        },
        "description" : "The CRM connector entities."
      },
      "CrmConnectorProperties" : {
        "required" : [ "entities", "organizationId", "organizationUrl" ],
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "description" : "The access token."
          },
          "connectionString" : {
            "type" : "string",
            "description" : "The connection string."
          },
          "entities" : {
            "type" : "array",
            "description" : "The entities like account, contact, opportunity.",
            "items" : {
              "$ref" : "#/components/schemas/CrmConnectorEntities"
            }
          },
          "organizationId" : {
            "type" : "string",
            "description" : "The organization ID."
          },
          "organizationUrl" : {
            "type" : "string",
            "description" : "The organization URL."
          }
        },
        "description" : "The CRM connector properties."
      },
      "DataSource" : {
        "type" : "object",
        "properties" : {
          "dataSourceReferenceId" : {
            "type" : "string",
            "description" : "The data source reference id.",
            "readOnly" : true
          },
          "dataSourceType" : {
            "type" : "string",
            "description" : "The data source type.",
            "readOnly" : true,
            "enum" : [ "Connector", "LinkInteraction", "SystemDefault" ]
          },
          "id" : {
            "type" : "integer",
            "description" : "The data source ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The data source name",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "The data source status.",
            "readOnly" : true,
            "enum" : [ "None", "Active", "Deleted" ]
          }
        },
        "description" : "Data Source is a way for us to know the source of instances. A single type can have data coming in from multiple places. In activities we use this to determine precedence rules."
      },
      "DataSourcePrecedence" : {
        "type" : "object",
        "properties" : {
          "dataSource" : {
            "$ref" : "#/components/schemas/DataSource"
          },
          "precedence" : {
            "type" : "integer",
            "description" : "the precedence value."
          }
        },
        "description" : "The data source precedence is a way to know the precedence of each data source."
      },
      "EnrichingKpi" : {
        "description" : "The enriching KPI definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/KpiDefinition"
        } ]
      },
      "EntityTypeDefinition" : {
        "properties" : {
          "apiEntitySetName" : {
            "type" : "string",
            "description" : "The api entity set name. This becomes the odata entity set name for the entity Type being referred in this object."
          },
          "entityType" : {
            "type" : "string",
            "description" : "Type of entity.",
            "enum" : [ "None", "Profile", "Interaction", "Relationship" ]
          },
          "fields" : {
            "type" : "array",
            "description" : "The properties of the Profile.",
            "items" : {
              "$ref" : "#/components/schemas/PropertyDefinition"
            }
          },
          "instancesCount" : {
            "type" : "integer",
            "description" : "The instance count."
          },
          "lastChangedUtc" : {
            "type" : "string",
            "description" : "The last changed time for the type definition.",
            "format" : "date-time",
            "readOnly" : true
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "schemaItemTypeLink" : {
            "type" : "string",
            "description" : "The schema org link. This helps ACI identify and suggest semantic models."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          },
          "timestampFieldName" : {
            "type" : "string",
            "description" : "The timestamp property name. Represents the time when the interaction or profile update happened."
          },
          "typeName" : {
            "type" : "string",
            "description" : "The name of the entity."
          }
        },
        "description" : "Describes an entity.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/MetadataDefinitionBase"
        } ]
      },
      "GetImageUploadUrlInput" : {
        "type" : "object",
        "properties" : {
          "entityType" : {
            "type" : "string",
            "description" : "Type of entity. Can be Profile or Interaction."
          },
          "entityTypeName" : {
            "type" : "string",
            "description" : "Name of the entity type."
          },
          "relativePath" : {
            "type" : "string",
            "description" : "Relative path of the image."
          }
        },
        "description" : "Input type for getting image upload url."
      },
      "Hub" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/HubPropertiesFormat"
          }
        },
        "description" : "Hub resource.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        } ]
      },
      "HubBillingInfoFormat" : {
        "type" : "object",
        "properties" : {
          "maxUnits" : {
            "maximum" : 10,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The maximum number of units can be used.  One unit is 10,000 Profiles and 100,000 Interactions."
          },
          "minUnits" : {
            "maximum" : 10,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The minimum number of units will be billed. One unit is 10,000 Profiles and 100,000 Interactions."
          },
          "skuName" : {
            "type" : "string",
            "description" : "The sku name."
          }
        },
        "description" : "Hub billing info."
      },
      "HubListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link for next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/Hub"
            }
          }
        },
        "description" : "Response of list hub operation."
      },
      "HubPropertiesFormat" : {
        "type" : "object",
        "properties" : {
          "apiEndpoint" : {
            "type" : "string",
            "description" : "API endpoint URL of the hub.",
            "readOnly" : true
          },
          "hubBillingInfo" : {
            "$ref" : "#/components/schemas/HubBillingInfoFormat"
          },
          "provisioningState" : {
            "type" : "string",
            "description" : "Provisioning state of the hub.",
            "readOnly" : true
          },
          "tenantFeatures" : {
            "type" : "integer",
            "description" : "The bit flags for enabled hub features. Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1 is set to 1 indicates the hub is disabled, or enabled if set to 0."
          },
          "webEndpoint" : {
            "type" : "string",
            "description" : "Web endpoint URL of the hub.",
            "readOnly" : true
          }
        },
        "description" : "Properties of hub."
      },
      "ImageDefinition" : {
        "type" : "object",
        "properties" : {
          "contentUrl" : {
            "type" : "string",
            "description" : "Content URL for the image blob."
          },
          "imageExists" : {
            "type" : "boolean",
            "description" : "Whether image exists already."
          },
          "relativePath" : {
            "type" : "string",
            "description" : "Relative path of the image."
          }
        },
        "description" : "The image definition."
      },
      "InteractionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/InteractionResourceFormat"
            }
          }
        },
        "description" : "The response of list interaction operation."
      },
      "InteractionResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/InteractionTypeDefinition"
          }
        },
        "description" : "The interaction resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "InteractionTypeDefinition" : {
        "properties" : {
          "dataSourcePrecedenceRules" : {
            "type" : "array",
            "description" : "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DataSourcePrecedence"
            }
          },
          "defaultDataSource" : {
            "$ref" : "#/components/schemas/DataSource"
          },
          "idPropertyNames" : {
            "type" : "array",
            "description" : "The id property names. Properties which uniquely identify an interaction instance.",
            "items" : {
              "type" : "string"
            }
          },
          "isActivity" : {
            "type" : "boolean",
            "description" : "An interaction can be tagged as an activity only during create. This enables the interaction to be editable and can enable merging of properties from multiple data sources based on precedence, which is defined at a link level."
          },
          "participantProfiles" : {
            "type" : "array",
            "description" : "Profiles that participated in the interaction.",
            "items" : {
              "$ref" : "#/components/schemas/Participant"
            }
          },
          "primaryParticipantProfilePropertyName" : {
            "type" : "string",
            "description" : "The primary participant property name for an interaction ,This is used to logically represent the agent of the interaction, Specify the participant name here from ParticipantName."
          }
        },
        "description" : "The Interaction Type Definition",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityTypeDefinition"
        } ]
      },
      "KpiAlias" : {
        "required" : [ "aliasName", "expression" ],
        "type" : "object",
        "properties" : {
          "aliasName" : {
            "type" : "string",
            "description" : "KPI alias name."
          },
          "expression" : {
            "type" : "string",
            "description" : "The expression."
          }
        },
        "description" : "The KPI alias."
      },
      "KpiDefinition" : {
        "required" : [ "calculationWindow", "entityType", "entityTypeName", "expression", "function" ],
        "type" : "object",
        "properties" : {
          "aliases" : {
            "type" : "array",
            "description" : "The aliases.",
            "items" : {
              "$ref" : "#/components/schemas/KpiAlias"
            }
          },
          "calculationWindow" : {
            "type" : "string",
            "description" : "The calculation window.",
            "enum" : [ "Lifetime", "Hour", "Day", "Week", "Month" ]
          },
          "calculationWindowFieldName" : {
            "type" : "string",
            "description" : "Name of calculation window field."
          },
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized description for the KPI."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name for the KPI."
          },
          "entityType" : {
            "type" : "string",
            "description" : "The mapping entity type.",
            "enum" : [ "None", "Profile", "Interaction", "Relationship" ]
          },
          "entityTypeName" : {
            "type" : "string",
            "description" : "The mapping entity name."
          },
          "expression" : {
            "type" : "string",
            "description" : "The computation expression for the KPI."
          },
          "extracts" : {
            "type" : "array",
            "description" : "The KPI extracts.",
            "items" : {
              "$ref" : "#/components/schemas/KpiExtract"
            }
          },
          "filter" : {
            "type" : "string",
            "description" : "The filter expression for the KPI."
          },
          "function" : {
            "type" : "string",
            "description" : "The computation function for the KPI.",
            "enum" : [ "Sum", "Avg", "Min", "Max", "Last", "Count", "None", "CountDistinct" ]
          },
          "groupBy" : {
            "type" : "array",
            "description" : "the group by properties for the KPI.",
            "items" : {
              "type" : "string"
            }
          },
          "groupByMetadata" : {
            "type" : "array",
            "description" : "The KPI GroupByMetadata.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/KpiGroupByMetadata"
            }
          },
          "kpiName" : {
            "type" : "string",
            "description" : "The KPI name.",
            "readOnly" : true
          },
          "participantProfilesMetadata" : {
            "type" : "array",
            "description" : "The participant profiles.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/KpiParticipantProfilesMetadata"
            }
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          },
          "thresHolds" : {
            "$ref" : "#/components/schemas/KpiThresholds"
          },
          "unit" : {
            "type" : "string",
            "description" : "The unit of measurement for the KPI."
          }
        },
        "description" : "Defines the KPI Threshold limits."
      },
      "KpiExtract" : {
        "required" : [ "expression", "extractName" ],
        "type" : "object",
        "properties" : {
          "expression" : {
            "type" : "string",
            "description" : "The expression."
          },
          "extractName" : {
            "type" : "string",
            "description" : "KPI extract name."
          }
        },
        "description" : "The KPI extract."
      },
      "KpiGroupByMetadata" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The display name."
          },
          "fieldName" : {
            "type" : "string",
            "description" : "The name of the field."
          },
          "fieldType" : {
            "type" : "string",
            "description" : "The type of the field."
          }
        },
        "description" : "The KPI GroupBy field metadata."
      },
      "KpiListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/KpiResourceFormat"
            }
          }
        },
        "description" : "The response of list KPI operation."
      },
      "KpiParticipantProfilesMetadata" : {
        "required" : [ "typeName" ],
        "type" : "object",
        "properties" : {
          "typeName" : {
            "type" : "string",
            "description" : "Name of the type."
          }
        },
        "description" : "The KPI participant profile metadata."
      },
      "KpiResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/KpiDefinition"
          }
        },
        "description" : "The KPI resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "KpiThresholds" : {
        "required" : [ "increasingKpi", "lowerLimit", "upperLimit" ],
        "type" : "object",
        "properties" : {
          "increasingKpi" : {
            "type" : "boolean",
            "description" : "Whether or not the KPI is an increasing KPI."
          },
          "lowerLimit" : {
            "type" : "number",
            "description" : "The lower threshold limit.",
            "format" : "decimal"
          },
          "upperLimit" : {
            "type" : "number",
            "description" : "The upper threshold limit.",
            "format" : "decimal"
          }
        },
        "description" : "Defines the KPI Threshold limits."
      },
      "LinkDefinition" : {
        "required" : [ "participantPropertyReferences", "sourceEntityType", "sourceEntityTypeName", "targetEntityType", "targetEntityTypeName" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized descriptions for the Link."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name for the Link."
          },
          "linkName" : {
            "type" : "string",
            "description" : "The link name.",
            "readOnly" : true
          },
          "mappings" : {
            "type" : "array",
            "description" : "The set of properties mappings between the source and target Types.",
            "items" : {
              "$ref" : "#/components/schemas/TypePropertiesMapping"
            }
          },
          "operationType" : {
            "type" : "string",
            "description" : "Determines whether this link is supposed to create or delete instances if Link is NOT Reference Only.",
            "enum" : [ "Upsert", "Delete" ]
          },
          "participantPropertyReferences" : {
            "type" : "array",
            "description" : "The properties that represent the participating profile.",
            "items" : {
              "$ref" : "#/components/schemas/ParticipantPropertyReference"
            }
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "referenceOnly" : {
            "type" : "boolean",
            "description" : "Indicating whether the link is reference only link. This flag is ignored if the Mappings are defined. If the mappings are not defined and it is set to true, links processing will not create or update profiles."
          },
          "sourceEntityType" : {
            "type" : "string",
            "description" : "Type of source entity.",
            "enum" : [ "None", "Profile", "Interaction", "Relationship" ]
          },
          "sourceEntityTypeName" : {
            "type" : "string",
            "description" : "Name of the source Entity Type."
          },
          "targetEntityType" : {
            "type" : "string",
            "description" : "Type of target entity.",
            "enum" : [ "None", "Profile", "Interaction", "Relationship" ]
          },
          "targetEntityTypeName" : {
            "type" : "string",
            "description" : "Name of the target Entity Type."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          }
        },
        "description" : "The definition of Link."
      },
      "LinkListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/LinkResourceFormat"
            }
          }
        },
        "description" : "The response of list link operation."
      },
      "LinkResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/LinkDefinition"
          }
        },
        "description" : "The link resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "MetadataDefinitionBase" : {
        "type" : "object",
        "properties" : {
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "The attributes for the Type."
          },
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized descriptions for the property."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display names for the property."
          },
          "largeImage" : {
            "type" : "string",
            "description" : "Large Image associated with the Property or EntityType."
          },
          "localizedAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "description" : "Any custom localized attributes for the Type."
          },
          "mediumImage" : {
            "type" : "string",
            "description" : "Medium Image associated with the Property or EntityType."
          },
          "smallImage" : {
            "type" : "string",
            "description" : "Small Image associated with the Property or EntityType."
          }
        },
        "description" : "The Metadata definition base."
      },
      "Operation" : {
        "type" : "object",
        "properties" : {
          "display" : {
            "type" : "object",
            "properties" : {
              "operation" : {
                "type" : "string",
                "description" : "Operation type: Read, write, delete, etc.",
                "readOnly" : true
              },
              "provider" : {
                "type" : "string",
                "description" : "Service provider: Microsoft.CustomerInsights",
                "readOnly" : true
              },
              "resource" : {
                "type" : "string",
                "description" : "Resource on which the operation is performed: Invoice, etc.",
                "readOnly" : true
              }
            },
            "description" : "The object that represents the operation."
          },
          "name" : {
            "type" : "string",
            "description" : "Operation name: {provider}/{resource}/{operation}",
            "readOnly" : true
          }
        },
        "description" : "A Customer Insights REST API operation"
      },
      "OperationListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "URL to get the next set of operation list results if there are any.",
            "readOnly" : true
          },
          "value" : {
            "type" : "array",
            "description" : "List of Customer Insights operations supported by the Microsoft.CustomerInsights resource provider.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/Operation"
            }
          }
        },
        "description" : "Result of the request to list Customer Insights operations. It contains a list of operations and a URL link to get the next set of results."
      },
      "Participant" : {
        "required" : [ "participantName", "participantPropertyReferences", "profileTypeName" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized descriptions."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name."
          },
          "participantName" : {
            "type" : "string",
            "description" : "Participant name."
          },
          "participantPropertyReferences" : {
            "type" : "array",
            "description" : "The property references.",
            "items" : {
              "$ref" : "#/components/schemas/ParticipantPropertyReference"
            }
          },
          "profileTypeName" : {
            "type" : "string",
            "description" : "Profile type name."
          },
          "role" : {
            "type" : "string",
            "description" : "The role that the participant is playing in the interaction."
          }
        },
        "description" : "Describes a profile type participating in an interaction."
      },
      "ParticipantProfilePropertyReference" : {
        "required" : [ "interactionPropertyName", "profilePropertyName" ],
        "type" : "object",
        "properties" : {
          "interactionPropertyName" : {
            "type" : "string",
            "description" : "The source interaction property that maps to the target profile property."
          },
          "profilePropertyName" : {
            "type" : "string",
            "description" : "The target profile property that maps to the source interaction property."
          }
        },
        "description" : "The participant profile property reference."
      },
      "ParticipantPropertyReference" : {
        "required" : [ "sourcePropertyName", "targetPropertyName" ],
        "type" : "object",
        "properties" : {
          "sourcePropertyName" : {
            "type" : "string",
            "description" : "The source property that maps to the target property."
          },
          "targetPropertyName" : {
            "type" : "string",
            "description" : "The target property that maps to the source property."
          }
        },
        "description" : "The participant property reference."
      },
      "PermissionTypes" : {
        "type" : "string",
        "description" : "Supported permission types.",
        "enum" : [ "Read", "Write", "Manage" ]
      },
      "Prediction" : {
        "required" : [ "autoAnalyze", "mappings", "negativeOutcomeExpression", "positiveOutcomeExpression", "primaryProfileType", "scopeExpression", "scoreLabel" ],
        "type" : "object",
        "properties" : {
          "autoAnalyze" : {
            "type" : "boolean",
            "description" : "Whether do auto analyze."
          },
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Description of the prediction."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Display name of the prediction."
          },
          "grades" : {
            "type" : "array",
            "description" : "The prediction grades.",
            "items" : {
              "type" : "object",
              "properties" : {
                "gradeName" : {
                  "type" : "string",
                  "description" : "Name of the grade."
                },
                "maxScoreThreshold" : {
                  "type" : "integer",
                  "description" : "Maximum score threshold."
                },
                "minScoreThreshold" : {
                  "type" : "integer",
                  "description" : "Minimum score threshold."
                }
              },
              "description" : "The definition of a prediction grade."
            }
          },
          "involvedInteractionTypes" : {
            "type" : "array",
            "description" : "Interaction types involved in the prediction.",
            "items" : {
              "type" : "string"
            }
          },
          "involvedKpiTypes" : {
            "type" : "array",
            "description" : "KPI types involved in the prediction.",
            "items" : {
              "type" : "string"
            }
          },
          "involvedRelationships" : {
            "type" : "array",
            "description" : "Relationships involved in the prediction.",
            "items" : {
              "type" : "string"
            }
          },
          "mappings" : {
            "required" : [ "grade", "reason", "score" ],
            "type" : "object",
            "properties" : {
              "grade" : {
                "type" : "string",
                "description" : "The grade of the link mapping."
              },
              "reason" : {
                "type" : "string",
                "description" : "The reason of the link mapping."
              },
              "score" : {
                "type" : "string",
                "description" : "The score of the link mapping."
              }
            },
            "description" : "Definition of the link mapping of prediction."
          },
          "negativeOutcomeExpression" : {
            "type" : "string",
            "description" : "Negative outcome expression."
          },
          "positiveOutcomeExpression" : {
            "type" : "string",
            "description" : "Positive outcome expression."
          },
          "predictionName" : {
            "type" : "string",
            "description" : "Name of the prediction."
          },
          "primaryProfileType" : {
            "type" : "string",
            "description" : "Primary profile type."
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "scopeExpression" : {
            "type" : "string",
            "description" : "Scope expression."
          },
          "scoreLabel" : {
            "type" : "string",
            "description" : "Score label."
          },
          "systemGeneratedEntities" : {
            "type" : "object",
            "properties" : {
              "generatedInteractionTypes" : {
                "type" : "array",
                "description" : "Generated interaction types.",
                "items" : {
                  "type" : "string"
                }
              },
              "generatedKpis" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Generated KPIs."
              },
              "generatedLinks" : {
                "type" : "array",
                "description" : "Generated links.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "System generated entities.",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          }
        },
        "description" : "The prediction definition."
      },
      "PredictionDistributionDefinition" : {
        "type" : "object",
        "properties" : {
          "distributions" : {
            "type" : "array",
            "description" : "Distributions of the prediction.",
            "items" : {
              "type" : "object",
              "properties" : {
                "negatives" : {
                  "type" : "integer",
                  "description" : "Number of negatives.",
                  "format" : "int64"
                },
                "negativesAboveThreshold" : {
                  "type" : "integer",
                  "description" : "Number of negatives above threshold.",
                  "format" : "int64"
                },
                "positives" : {
                  "type" : "integer",
                  "description" : "Number of positives.",
                  "format" : "int64"
                },
                "positivesAboveThreshold" : {
                  "type" : "integer",
                  "description" : "Number of positives above threshold.",
                  "format" : "int64"
                },
                "scoreThreshold" : {
                  "type" : "integer",
                  "description" : "Score threshold."
                }
              },
              "description" : "The definition of a prediction distribution."
            }
          },
          "totalNegatives" : {
            "type" : "integer",
            "description" : "Total negatives in the distribution.",
            "format" : "int64"
          },
          "totalPositives" : {
            "type" : "integer",
            "description" : "Total positive in the distribution.",
            "format" : "int64"
          }
        },
        "description" : "The definition of the prediction distribution."
      },
      "PredictionListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/PredictionResourceFormat"
            }
          }
        },
        "description" : "The response of list predictions operation."
      },
      "PredictionModelStatus" : {
        "required" : [ "status" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "The model status message.",
            "readOnly" : true
          },
          "modelVersion" : {
            "type" : "string",
            "description" : "Version of the model.",
            "readOnly" : true
          },
          "predictionGuidId" : {
            "type" : "string",
            "description" : "The prediction GUID ID.",
            "readOnly" : true
          },
          "predictionName" : {
            "type" : "string",
            "description" : "The prediction name.",
            "readOnly" : true
          },
          "signalsUsed" : {
            "type" : "integer",
            "description" : "The signals used.",
            "readOnly" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Prediction model life cycle.  When prediction is in PendingModelConfirmation status, it is allowed to update the status to PendingFeaturing or Active through API.",
            "enum" : [ "New", "Provisioning", "ProvisioningFailed", "PendingDiscovering", "Discovering", "PendingFeaturing", "Featuring", "FeaturingFailed", "PendingTraining", "Training", "TrainingFailed", "Evaluating", "EvaluatingFailed", "PendingModelConfirmation", "Active", "Deleted", "HumanIntervention", "Failed" ]
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          },
          "testSetCount" : {
            "type" : "integer",
            "description" : "Count of the test set.",
            "readOnly" : true
          },
          "trainingAccuracy" : {
            "type" : "integer",
            "description" : "The training accuracy.",
            "format" : "decimal",
            "readOnly" : true
          },
          "trainingSetCount" : {
            "type" : "integer",
            "description" : "Count of the training set.",
            "readOnly" : true
          },
          "validationSetCount" : {
            "type" : "integer",
            "description" : "Count of the validation set.",
            "readOnly" : true
          }
        },
        "description" : "The prediction model status."
      },
      "PredictionResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/Prediction"
          }
        },
        "description" : "The prediction resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "PredictionTrainingResults" : {
        "type" : "object",
        "properties" : {
          "canonicalProfiles" : {
            "type" : "array",
            "description" : "Canonical profiles.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/CanonicalProfileDefinition"
            }
          },
          "predictionDistribution" : {
            "$ref" : "#/components/schemas/PredictionDistributionDefinition"
          },
          "primaryProfileInstanceCount" : {
            "type" : "integer",
            "description" : "Instance count of the primary profile.",
            "format" : "int64",
            "readOnly" : true
          },
          "scoreName" : {
            "type" : "string",
            "description" : "Score name.",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          }
        },
        "description" : "The training results of the prediction."
      },
      "ProfileEnumValidValuesFormat" : {
        "type" : "object",
        "properties" : {
          "localizedValueNames" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized names of the enum member."
          },
          "value" : {
            "type" : "integer",
            "description" : "The integer value of the enum member."
          }
        },
        "description" : "Valid enum values in case of an enum property."
      },
      "ProfileListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/ProfileResourceFormat"
            }
          }
        },
        "description" : "The response of list profile operation."
      },
      "ProfileResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/ProfileTypeDefinition"
          }
        },
        "description" : "The profile resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "ProfileTypeDefinition" : {
        "properties" : {
          "strongIds" : {
            "type" : "array",
            "description" : "The strong IDs.",
            "items" : {
              "$ref" : "#/components/schemas/StrongId"
            }
          }
        },
        "description" : "The profile type definition.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityTypeDefinition"
        } ]
      },
      "PropertyDefinition" : {
        "required" : [ "fieldName", "fieldType" ],
        "type" : "object",
        "properties" : {
          "arrayValueSeparator" : {
            "type" : "string",
            "description" : "Array value separator for properties with isArray set."
          },
          "dataSourcePrecedenceRules" : {
            "type" : "array",
            "description" : "This is specific to interactions modeled as activities. Data sources are used to determine where data is stored and also in precedence rules.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/DataSourcePrecedence"
            }
          },
          "enumValidValues" : {
            "type" : "array",
            "description" : "Describes valid values for an enum property.",
            "items" : {
              "$ref" : "#/components/schemas/ProfileEnumValidValuesFormat"
            }
          },
          "fieldName" : {
            "type" : "string",
            "description" : "Name of the property."
          },
          "fieldType" : {
            "type" : "string",
            "description" : "Type of the property."
          },
          "isArray" : {
            "type" : "boolean",
            "description" : "Indicates if the property is actually an array of the fieldType above on the data api."
          },
          "isAvailableInGraph" : {
            "type" : "boolean",
            "description" : "Whether property is available in graph or not."
          },
          "isEnum" : {
            "type" : "boolean",
            "description" : "Indicates if the property is an enum."
          },
          "isFlagEnum" : {
            "type" : "boolean",
            "description" : "Indicates if the property is an flag enum."
          },
          "isImage" : {
            "type" : "boolean",
            "description" : "Whether the property is an Image."
          },
          "isLocalizedString" : {
            "type" : "boolean",
            "description" : "Whether the property is a localized string."
          },
          "isName" : {
            "type" : "boolean",
            "description" : "Whether the property is a name or a part of name."
          },
          "isRequired" : {
            "type" : "boolean",
            "description" : "Whether property value is required on instances, IsRequired field only for Interaction. Profile Instance will not check for required field."
          },
          "maxLength" : {
            "type" : "integer",
            "description" : "Max length of string. Used only if type is string."
          },
          "propertyId" : {
            "type" : "string",
            "description" : "The ID associated with the property."
          },
          "schemaItemPropLink" : {
            "type" : "string",
            "description" : "URL encoded schema.org item prop link for the property."
          }
        },
        "description" : "Property definition."
      },
      "ProvisioningState" : {
        "type" : "string",
        "description" : "Provisioning state.",
        "enum" : [ "Provisioning", "Succeeded", "Expiring", "Deleting", "HumanIntervention", "Failed" ]
      },
      "ProxyResource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID.",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Common properties of proxy resource."
      },
      "RelationshipDefinition" : {
        "required" : [ "profileType", "relatedProfileType" ],
        "type" : "object",
        "properties" : {
          "cardinality" : {
            "type" : "string",
            "description" : "The Relationship Cardinality.",
            "enum" : [ "OneToOne", "OneToMany", "ManyToMany" ]
          },
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized descriptions for the Relationship."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name for the Relationship."
          },
          "expiryDateTimeUtc" : {
            "type" : "string",
            "description" : "The expiry date time in UTC.",
            "format" : "date-time"
          },
          "fields" : {
            "type" : "array",
            "description" : "The properties of the Relationship.",
            "items" : {
              "$ref" : "#/components/schemas/PropertyDefinition"
            }
          },
          "lookupMappings" : {
            "type" : "array",
            "description" : "Optional property to be used to map fields in profile to their strong ids in related profile.",
            "items" : {
              "$ref" : "#/components/schemas/RelationshipTypeMapping"
            }
          },
          "profileType" : {
            "type" : "string",
            "description" : "Profile type."
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "relatedProfileType" : {
            "type" : "string",
            "description" : "Related profile being referenced."
          },
          "relationshipGuidId" : {
            "type" : "string",
            "description" : "The relationship guid id.",
            "readOnly" : true
          },
          "relationshipName" : {
            "type" : "string",
            "description" : "The Relationship name.",
            "readOnly" : true
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          }
        },
        "description" : "The definition of Relationship."
      },
      "RelationshipLinkDefinition" : {
        "required" : [ "interactionType", "profilePropertyReferences", "relatedProfilePropertyReferences", "relationshipName" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized descriptions for the Relationship Link."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name for the Relationship Link."
          },
          "interactionType" : {
            "type" : "string",
            "description" : "The InteractionType associated with the Relationship Link."
          },
          "linkName" : {
            "type" : "string",
            "description" : "The name of the Relationship Link.",
            "readOnly" : true
          },
          "mappings" : {
            "type" : "array",
            "description" : "The mappings between Interaction and Relationship fields.",
            "items" : {
              "$ref" : "#/components/schemas/RelationshipLinkFieldMapping"
            }
          },
          "profilePropertyReferences" : {
            "type" : "array",
            "description" : "The property references for the Profile of the Relationship.",
            "items" : {
              "$ref" : "#/components/schemas/ParticipantProfilePropertyReference"
            }
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "relatedProfilePropertyReferences" : {
            "type" : "array",
            "description" : "The property references for the Related Profile of the Relationship.",
            "items" : {
              "$ref" : "#/components/schemas/ParticipantProfilePropertyReference"
            }
          },
          "relationshipGuidId" : {
            "type" : "string",
            "description" : "The relationship guid id.",
            "readOnly" : true
          },
          "relationshipName" : {
            "type" : "string",
            "description" : "The Relationship associated with the Link."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          }
        },
        "description" : "The definition of relationship link."
      },
      "RelationshipLinkFieldMapping" : {
        "required" : [ "interactionFieldName", "relationshipFieldName" ],
        "type" : "object",
        "properties" : {
          "interactionFieldName" : {
            "type" : "string",
            "description" : "The field name on the Interaction Type."
          },
          "linkType" : {
            "type" : "string",
            "description" : "Link type.",
            "enum" : [ "UpdateAlways", "CopyIfNull" ]
          },
          "relationshipFieldName" : {
            "type" : "string",
            "description" : "The field name on the Relationship metadata."
          }
        },
        "description" : "The fields mapping for Relationships."
      },
      "RelationshipLinkListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/RelationshipLinkResourceFormat"
            }
          }
        },
        "description" : "The response of list relationship link operation."
      },
      "RelationshipLinkResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RelationshipLinkDefinition"
          }
        },
        "description" : "The relationship link resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "RelationshipListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/RelationshipResourceFormat"
            }
          }
        },
        "description" : "The response of list relationship operation."
      },
      "RelationshipResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RelationshipDefinition"
          }
        },
        "description" : "The relationship resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "RelationshipTypeFieldMapping" : {
        "required" : [ "profileFieldName", "relatedProfileKeyProperty" ],
        "type" : "object",
        "properties" : {
          "profileFieldName" : {
            "type" : "string",
            "description" : "Specifies the fieldName in profile."
          },
          "relatedProfileKeyProperty" : {
            "type" : "string",
            "description" : "Specifies the KeyProperty (from StrongId) of the related profile."
          }
        },
        "description" : "Map a field of profile to its corresponding StrongId in Related Profile."
      },
      "RelationshipTypeMapping" : {
        "required" : [ "fieldMappings" ],
        "type" : "object",
        "properties" : {
          "fieldMappings" : {
            "type" : "array",
            "description" : "Maps a profile property with the StrongId of related profile. This is an array to support StrongIds that are composite key as well.",
            "items" : {
              "$ref" : "#/components/schemas/RelationshipTypeFieldMapping"
            }
          }
        },
        "description" : "Maps fields in Profile to their corresponding StrongIds in Related Profile."
      },
      "RelationshipsLookup" : {
        "type" : "object",
        "properties" : {
          "existingRelationshipName" : {
            "type" : "string",
            "description" : "The name of existing Relationship.",
            "readOnly" : true
          },
          "profileName" : {
            "type" : "string",
            "description" : "The relationship profile.",
            "readOnly" : true
          },
          "profilePropertyReferences" : {
            "type" : "array",
            "description" : "The property references for the profile type.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ParticipantProfilePropertyReference"
            }
          },
          "relatedProfileName" : {
            "type" : "string",
            "description" : "The related profile.",
            "readOnly" : true
          },
          "relatedProfilePropertyReferences" : {
            "type" : "array",
            "description" : "The property references for the related profile type.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/ParticipantProfilePropertyReference"
            }
          }
        },
        "description" : "The definition of suggested relationship for the type."
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Resource ID.",
            "readOnly" : true
          },
          "location" : {
            "type" : "string",
            "description" : "Resource location."
          },
          "name" : {
            "type" : "string",
            "description" : "Resource name.",
            "readOnly" : true
          },
          "tags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Resource tags."
          },
          "type" : {
            "type" : "string",
            "description" : "Resource type.",
            "readOnly" : true
          }
        },
        "description" : "Common properties of Azure resource."
      },
      "ResourceSetDescription" : {
        "type" : "object",
        "properties" : {
          "elements" : {
            "type" : "array",
            "description" : "The elements included in the set.",
            "items" : {
              "type" : "string"
            }
          },
          "exceptions" : {
            "type" : "array",
            "description" : "The elements that are not included in the set, in case elements contains '*' indicating 'all'.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The resource set description."
      },
      "Role" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the role."
          },
          "roleName" : {
            "type" : "string",
            "description" : "The role name."
          }
        },
        "description" : "The Role definition."
      },
      "RoleAssignment" : {
        "required" : [ "principals", "role" ],
        "type" : "object",
        "properties" : {
          "assignmentName" : {
            "type" : "string",
            "description" : "The name of the metadata object.",
            "readOnly" : true
          },
          "conflationPolicies" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "connectors" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized description for the metadata."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display names for the metadata."
          },
          "interactions" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "kpis" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "principals" : {
            "type" : "array",
            "description" : "The principals being assigned to.",
            "items" : {
              "$ref" : "#/components/schemas/AssignmentPrincipal"
            }
          },
          "profiles" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "provisioningState" : {
            "$ref" : "#/components/schemas/ProvisioningState"
          },
          "relationshipLinks" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "relationships" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "role" : {
            "type" : "string",
            "description" : "Type of roles.",
            "enum" : [ "Admin", "Reader", "ManageAdmin", "ManageReader", "DataAdmin", "DataReader" ]
          },
          "roleAssignments" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "sasPolicies" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "segments" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          },
          "views" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          },
          "widgetTypes" : {
            "$ref" : "#/components/schemas/ResourceSetDescription"
          }
        },
        "description" : "The Role Assignment definition."
      },
      "RoleAssignmentListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/RoleAssignmentResourceFormat"
            }
          }
        },
        "description" : "The response of list role assignment operation."
      },
      "RoleAssignmentResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/RoleAssignment"
          }
        },
        "description" : "The Role Assignment resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "RoleListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/RoleResourceFormat"
            }
          }
        },
        "description" : "The response of list role assignment operation."
      },
      "RoleResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/Role"
          }
        },
        "description" : "The role resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "SalesforceConnectorProperties" : {
        "required" : [ "salesforcetables", "usersetting" ],
        "type" : "object",
        "properties" : {
          "salesforcetables" : {
            "type" : "array",
            "description" : "The Salesforce tables.",
            "items" : {
              "$ref" : "#/components/schemas/SalesforceTable"
            }
          },
          "usersetting" : {
            "$ref" : "#/components/schemas/SalesforceDiscoverSetting"
          }
        },
        "description" : "The Salesforce connector properties."
      },
      "SalesforceDiscoverSetting" : {
        "required" : [ "salesforceConnectionStringSecretUrl" ],
        "type" : "object",
        "properties" : {
          "salesforceConnectionStringSecretUrl" : {
            "type" : "string",
            "description" : "The salesforce connection string secret URL."
          }
        },
        "description" : "Salesforce discover setting."
      },
      "SalesforceTable" : {
        "required" : [ "tableCategory", "tableName", "tableSchema" ],
        "type" : "object",
        "properties" : {
          "isProfile" : {
            "type" : "string",
            "description" : "Indicating whether this instance is profile."
          },
          "tableCategory" : {
            "type" : "string",
            "description" : "The table category."
          },
          "tableName" : {
            "type" : "string",
            "description" : "The name of the table."
          },
          "tableRemarks" : {
            "type" : "string",
            "description" : "The table remarks."
          },
          "tableSchema" : {
            "type" : "string",
            "description" : "The table schema."
          }
        },
        "description" : "Salesforce table."
      },
      "StrongId" : {
        "required" : [ "keyPropertyNames", "strongIdName" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized descriptions."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name."
          },
          "keyPropertyNames" : {
            "type" : "array",
            "description" : "The properties which make up the unique ID.",
            "items" : {
              "type" : "string"
            }
          },
          "strongIdName" : {
            "type" : "string",
            "description" : "The Name identifying the strong ID."
          }
        },
        "description" : "Property/Properties which represent a unique ID."
      },
      "SuggestRelationshipLinksResponse" : {
        "type" : "object",
        "properties" : {
          "interactionName" : {
            "type" : "string",
            "description" : "The interaction name.",
            "readOnly" : true
          },
          "suggestedRelationships" : {
            "type" : "array",
            "description" : "Suggested relationships for the type.",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/RelationshipsLookup"
            }
          }
        },
        "description" : "The response of suggest relationship links operation."
      },
      "TypePropertiesMapping" : {
        "required" : [ "sourcePropertyName", "targetPropertyName" ],
        "type" : "object",
        "properties" : {
          "linkType" : {
            "type" : "string",
            "description" : "Link type.",
            "enum" : [ "UpdateAlways", "CopyIfNull" ]
          },
          "sourcePropertyName" : {
            "type" : "string",
            "description" : " Property name on the source Entity Type."
          },
          "targetPropertyName" : {
            "type" : "string",
            "description" : "Property name on the target Entity Type."
          }
        },
        "description" : "Metadata for a Link's property mapping."
      },
      "View" : {
        "required" : [ "definition" ],
        "type" : "object",
        "properties" : {
          "changed" : {
            "type" : "string",
            "description" : "Date time when view was last modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "created" : {
            "type" : "string",
            "description" : "Date time when view was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "definition" : {
            "type" : "string",
            "description" : "View definition."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name for the view."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "the hub name.",
            "readOnly" : true
          },
          "userId" : {
            "type" : "string",
            "description" : "the user ID."
          },
          "viewName" : {
            "type" : "string",
            "description" : "Name of the view.",
            "readOnly" : true
          }
        },
        "description" : "The view in Customer 360 web application."
      },
      "ViewListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/ViewResourceFormat"
            }
          }
        },
        "description" : "The response of list view operation."
      },
      "ViewResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/View"
          }
        },
        "description" : "The view resource format.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      },
      "WidgetType" : {
        "required" : [ "definition" ],
        "type" : "object",
        "properties" : {
          "changed" : {
            "type" : "string",
            "description" : "Date time when widget type was last modified.",
            "format" : "date-time",
            "readOnly" : true
          },
          "created" : {
            "type" : "string",
            "description" : "Date time when widget type was created.",
            "format" : "date-time",
            "readOnly" : true
          },
          "definition" : {
            "type" : "string",
            "description" : "Definition for widget type."
          },
          "description" : {
            "type" : "string",
            "description" : "Description for widget type."
          },
          "displayName" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Localized display name for the widget type."
          },
          "imageUrl" : {
            "type" : "string",
            "description" : "The image URL."
          },
          "tenantId" : {
            "type" : "string",
            "description" : "The hub name.",
            "readOnly" : true
          },
          "widgetTypeName" : {
            "type" : "string",
            "description" : "Name of the widget type.",
            "readOnly" : true
          },
          "widgetVersion" : {
            "type" : "string",
            "description" : "The widget version."
          }
        },
        "description" : "Definition of WidgetType."
      },
      "WidgetTypeListResult" : {
        "type" : "object",
        "properties" : {
          "nextLink" : {
            "type" : "string",
            "description" : "Link to the next set of results."
          },
          "value" : {
            "type" : "array",
            "description" : "Results of the list operation.",
            "items" : {
              "$ref" : "#/components/schemas/WidgetTypeResourceFormat"
            }
          }
        },
        "description" : "The response of list widget type operation."
      },
      "WidgetTypeResourceFormat" : {
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/WidgetType"
          }
        },
        "description" : "The WidgetTypeResourceFormat",
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProxyResource"
        } ]
      }
    },
    "parameters" : {
      "ApiVersionParameter" : {
        "name" : "api-version",
        "in" : "query",
        "description" : "Client Api Version.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "SubscriptionIdParameter" : {
        "name" : "subscriptionId",
        "in" : "path",
        "description" : "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}