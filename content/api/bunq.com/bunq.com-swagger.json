{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "Sandbox server",
    "url" : "https://public-api.sandbox.bunq.com/{basePath}",
    "variables" : {
      "basePath" : {
        "default" : "v1"
      }
    }
  }, {
    "description" : "Production server",
    "url" : "https://api.bunq.com/{basePath}",
    "variables" : {
      "basePath" : {
        "default" : "v1"
      }
    }
  } ],
  "info" : {
    "contact" : {
      "name" : "bunq Developer Support",
      "url" : "http://bunq.com/developer",
      "x-twitter" : "bunq"
    },
    "description" : "***UPDATE:*** *We have released a [beta version of the new bunq API documentation.](https://beta.doc.bunq.com)*\n\n***NOTICE:***  *We have updated the sandbox base url to `https://public-api.sandbox.bunq.com/v1/`. Please update your applications accordingly. Check here: <https://github.com/bunq/sdk_php/issues/149> for more info.*\n\n***PSD2 NOTICE:*** *The second Payment Services Directive (PSD2) may affect your current or planned usage of our public API, as some of the API services are now subject to a permit. Please be aware that using our public API without the required PSD2 permit is at your own risk and take notice of our updated API Terms and Conditions on <https://www.bunq.com> for more information.*\n\n# <span id=\"topic-introduction\">Introduction</span>\n\nWelcome to bunq!\n\n- The bunq API is organised around REST. JSON will be returned in almost all responses from the API, including errors but excluding binary (image) files.\n- Please configure your implementation to send its API requests to `https://public-api.sandbox.bunq.com/v1/`\n- There is a version of the [Android app](https://appstore.bunq.com/api/android/builds/bunq-android-sandbox-master.apk) that connects to the bunq Sandbox environment. To create accounts for the Sandbox app, please follow the steps in the [Android Emulator](#android-emulator) section.\n\n## <span id=\"topic-introduction-get-started\">Getting started</span>\n\nBefore you start sending API requests, you need to get an API key and activate it. API activation happens when you install the API key and link your IP address and device to it *(create an API context)*. The steps below will guide you through what you need to do to start sending custom API requests.\n\nHere is an overview of what you can use to get started with the bunq API: \n1. **Create an API key.** You can do it either in our [developer portal](https://developer.bunq.com) or in the bunq app *(Profile → Security & Settings → Developers → API keys)*. If you want to test our sandbox first, our [bunq Developer ](https://developer.bunq.com)is the best place to start.\n2. **Register a device.** A device can be a phone (private), computer or a server (public). You can register a new device by using the `POST /installation` and `POST /device-server` calls. This will activate your API key. You only need to do this once.\n3. **Open a session.** Sessions are temporary and expire after the auto-logout time set for the user account. It can be changed by the account owner in the bunq app.\n4. **Make your first call!**\n\n![bunq_API_context](https://www.bunq.com/assets/media/developer/API-context.jpg)\n\n## <span id=\"topic-introduction-versioning\">Versioning</span>\n\nDevelopments in the financial sector, changing regulatory regimes and new feature requests require us to be flexible. This means we can iterate quickly to improve the API and related tooling. Therefore, we have chosen not to attach any version numbers to the changes just yet. \n\nWe will inform you in a timely manner of any important changes we make before they are deployed on together.bunq.com. You can also [subscribe to our API newsletter](https://bunq.us8.list-manage.com/subscribe?u=c00d0d6daea4e1cf7c863d52e&id=b08680cdc7) to make sure you don't miss any important updates. \n\n# <span id=\"topic-oauth\">OAuth</span>\n\n## <span id=\"topic-oauth-what-is-oauth\">What is OAuth?</span>\n\n[OAuth 2.0](https://www.oauth.com/oauth2-servers/getting-ready/) is a protocol that will let your app connect to bunq users in a safe and easy way. Please be aware that if you will gain access to the account information of other bunq users or initiate a payment for them, [you may require a PSD2 permit](https://beta.doc.bunq.com/other/faq#can-we-use-the-bunq-api-to-offer-services-to-third-parties).\n\n## <span id=\"topic-oauth-get-started-with-oauth-for-bunq\">Get started with OAuth for bunq</span>\n\nTo initiate authorization into the bunq user accounts, you need to create an OAuth Client and register at least 1 redirect URL for it. \n\nYou can have 1 OAuth Client at a time. Reuse your OAuth credentials for every authorization request. \n\nThe list of steps below will help you to get started:\n\n1. Register an OAuth Client by creating an app in [bunq Developer](https://developer.bunq.com/portal)_._\n2. Add one or more Redirect URLs.\n3. Get your `client_id` and `secret` from your app information tab in [bunq Developer](https://developer.bunq.com/portal).\n4. Redirect your users to the [OAuth authorization request URL](#oauth-authorization-request).\n5. If the user accepts the authorization request, they will be redirected to the previously specified `redirect_uri` with an authorization `code` parameter.\n6. Use the [token endpoint](#oauth-token-exchange) to exchange the authorization `code` for an `access_token`.\n7. Use the `access_token` as a normal API Key. Open a session or use [our SDKs](https://github.com/bunq) to get started.\n\nYou can set up an OAuth Client and add redirect URLs to it using the dedicated endpoints too. Follow the flow below to do it programmatically.\n\nℹ️ As a PSD2 user, you cannot log in to the bunq app. You need to follow the flow below to register an OAuth Client for your application.\n\n![bunq_OAuth_credentials](https://www.bunq.com/assets/media/developer/create-oauth-credentials.jpg)\n\n## <span id=\"topic-oauth-what-can-my-apps-do-with-oauth\">What can my apps do with OAuth?</span>\n\nWe decided to launch OAuth with a default permission that allows you to perform the following actions:\n- read and create Monetary Accounts;\n- read Payments & Transactions;\n- create Payments between Monetary Accounts of the same user;\n- create Draft-Payments (the user will need to approve the payment using the bunq app);\n- assign a Monetary account to a Card;\n- read, create and manage Cards;\n- read and create Request-Inquiries\n- read Request-Responses.\n\nAs a PSD2-licensed developer, you are limited to the permission scopes of your role.\n\n## <span id=\"topic-oauth-authorization-request\">Authorization request</span>\n\nYour web or mobile app should redirect users to the following URL:\n\n`https://oauth.bunq.com/auth`\n\nThe following parameters should be passed:\n\n- `response_type` - bunq supports the authorization code grant, provide `code` as parameter (required)\n- `client_id` - your Client ID, get it from the bunq app (required)\n- `redirect_uri` - the URL you wish the user to be redirected after the authorization, make sure you register the Redirect URL in the bunq app (required)\n- `state` - a unique string to be passed back upon completion (optional)\n\nUse `https://oauth.sandbox.bunq.com/auth` in the sandbox environment.\n\n**Authorization request example:**\n\n```\nhttps://oauth.bunq.com/auth?response_type=code\n&client_id=1cc540b6e7a4fa3a862620d0751771500ed453b0bef89cd60e36b7db6260f813\n&redirect_uri=https://www.bunq.com\n&state=594f5548-6dfb-4b02-8620-08e03a9469e6\n```\n\n**Authorization request response:**\n\n```\nhttps://www.bunq.com/?code=7d272be434a75933f40c13d56aef6c31496005b653074f7d6ac57029d9995d30\n&state=594f5548-6dfb-4b02-8620-08e03a9469e6\n\n```\n\n![bunq_OAuth_authorization_token_exchange.jpg](https://www.bunq.com/assets/media/developer/Authorization-token-exchange.jpg)\n\n## <span id=\"topic-oauth-token-exchange\">Token exchange</span>\n\nIf the authorization request is accepted by the user, you get the authorization `code`_._ Exchange it for an `access_token`.\n\nMake a `POST` call to `https://api.oauth.bunq.com/v1/token` . Pass the following parameters as `GET` variables:\n\n- `grant_type` - the grant type used, `authorization_code` for now (required)\n- `code` -  the authorization code received from bunq (required)\n- `redirect_uri` - the same Redirect URL used in the authorisation request (required)\n- `client_id` - your Client ID (required)\n- `client_secret` - your Client Secret (required)\n\nUse `https://api-oauth.sandbox.bunq.com/v1/token` in the sandbox environment.\n\n**Token request example:**\n\n```\nhttps://api.oauth.bunq.com/v1/token?grant_type=authorization_code\n&code=7d272be434a75933f40c13d56aef6c31496005b653074f7d6ac57029d9995d30\n&redirect_uri=https://www.bunq.com/\n&client_id=1cc540b6e7a4fa3a862620d0751771500ed453b0bef89cd60e36b7db6260f813\n&client_secret=184f969765f6f74f53bf563ae3e9f891aec9179157601d25221d57f2f1151fd5\n```\n\nNote: The request should only contain URL parameters. No body is expected.\n\n**Example successful response:**\n\n```json\n{\n    \"access_token\": \"8baec0ac1aafca3345d5b811042feecfe0272514c5d09a69b5fbc84cb1c06029\",\n    \"token_type\": \"bearer\",\n    \"state\": \"594f5548-6dfb-4b02-8620-08e03a9469e6\"\n}\n```\n\n**Example error response:**\n\n```json\n{\n    \"error\": \"invalid_grant\",\n    \"error_description\": \"The authorization code is invalid or expired.\"\n}\n```\n\n## <span id=\"topic-oauth-whats-next\">What's next?</span>\n\nTo start sending calls to the account of the user who has accepted your authorization request, create an API context for the `access_token` you have received as the result of the token exchange. The `access_token` can be used as a normal API key. Please continue with [Authentication](#authentication).\n\n**NOTE:** When connecting to a bunq user's account using OAuth, you create a new user \\(`userApiKey`\\) that has its own `id` and `access_token` . When sending a request on behalf of a user connected to your app via OAuth,  use the `id` of `userApiKey`  as `userId` and the item `id`s of the bunq user \\(`grantedByUser`\\).\n\n**Example of a successful request URL:**\n\n```text\nhttps://api.bunq.com/user/{userApiKey's userId}/monetary-account/{grantedByUser's monetary-accountId}/payment\n```\n\nWhen calling `GET /user/{userID}`, you might expect to get `UserPerson` or `UserCompany`. Instead, you will get the `UserApiKey` object, which contains references to both the user that requested access *(you)* and the user that granted access *(the bunq user account that you connected to)*. \n\n![bunq_OAuth UserApiKey](https://blobscdn.gitbook.com/v0/b/gitbook-28427.appspot.com/o/assets%2F-LbhJLuxCAKl5yUuS74T%2F-LuhS4YOAX9bwW1eGYF8%2F-LuhnlwEcVXtLVk6846Z%2FUserApiKey%20creation%20(3).jpg?alt=media&token=d1f212a2-3105-4f0e-a980-34b04a12998a)\n\n## <span id=\"topic-oauth-using-the-connect-button\">Using the Connect button</span>\n\nAll good? Ready to connect to your bunq users? Refer to our style guide and use the following assets when implementing the **Connect to bunq** button.\n\n- [Style guide](https://bunq.com/info/oauth-styleguide)\n- [Connect button assets](https://bunq.com/info/oauth-connect-buttons)\n\nVisit us on together.bunq.com, share your creations, ask question and build your very own bunq app!\n\n# <span id=\"topic-authentication\">Authentication</span>\n\n- All requests must use HTTPS. HTTP calls will fail. \n- You should use SSL Certificate Pinning and Hostname Verification to ensure your connection with bunq is secure.\n- The auto logout time that you set in the app applies to all your sessions including the API ones. If a request is made 30 minutes before a session expires, the session will automatically be extended.\n- We use extra signing on top of HTTPS encryption that you must implement yourself if you are not using the SDKs.\n\nℹ️ *We use asymmetric cryptography for signing requests and encryption.*\n- The client (you) and the server (bunq) must have a pair of keys: a private key and a public key. You need to pre-generate your own pair of 2048-bit RSA keys in the PEM format aligned with the PKCS #8 standard.\n- The parties (you and bunq) exchange their public keys in the first step of the API context creation flow. All the following requests must be signed by both your application and the server. Pass your signature in the `X-Bunq-Client-Signature` header, and the server will return its signature in the `X-Bunq-Server-Signature` header.\n\n## <span id=\"topic-authentication-device-registration\">Device registration</span>\n\nBefore you can start calling the bunq API, you must activate your API key, which covers the following steps:\n* register your API key, device, and IP address\\(es\\) _\\(only once to activate your API key\\);_\n* create a session via `POST /session-server`. \n\nWe call this sequence of steps \"creating an API context.\" \n\nIf you are using OAuth to access a user account, you need to create an API context for the `access_token` you receive upon [authorization token exchange](https://doc.bunq.com/#/oauth) too. \n\n### <span id=\"topic-authentication-device-registration-using-our-sdks\">Using our SDKs</span>\n\n1. Go to our [GitHub](https://github.com/bunq) page.\n2. Choose the SDK in your language of choice.\n3. Find and use the part dedicated to creating an API context.\n\n[Run Tinker](https://developer.bunq.com/tinker-command-line-banking) to see a sample project using bunq SDKs in action.\n\n\n### <span id=\"topic-authentication-device-registration-using-our-api\">Using our API directly</span>\n\n1. Create an _Installation_ by calling `POST v1/installation` and passing your pre-generated public key. You will receive an installation _Token._ Use it when making the two following API calls.\n2. Create a _DeviceServer_ via `POST v1/device-server`. Provide a description and a secret \\(API key in this case\\).\n3. Create a _SessionServer_ by executing `POST v1/session-server`. You will receive an authentication _Token._ Use it in the API requests in this active session.​\n\n[Import our Postman collection](https://github.com/bunq/postman) to see our pre-setup API context creation calls. It will automatically generate and pre-fill everything in the API calls that create context so you can inspect the process.\n\n### <span id=\"topic-authentication-device-registration-ip-addresses\">IP addresses</span>\n\nWhen using a standard API Key the DeviceServer and Installation that are created in this process are bound to the IP address they are created from. Afterwards it is only possible to add IP addresses via the Permitted IP endpoint.\n\nUsing a Wildcard API Key gives you the freedom to make API calls from any IP address after the POST device-server. You can switch to a Wildcard API Key by tapping on “Allow All IP Addresses” in your API Key menu inside the bunq app. You can also programatically switch to a Wildcard API Key by passing your current ip and a `*` (asterisk) in the `permitted_ips` field of the device-server POST call. E.g: `[\"1.2.3.4\", \"*\"]`.\n\n# <span id=\"topic-psd2\">Connect as a PSD2 service provider</span>\n\nAs a service provider, either an Account Information Service Provider (AISP), Payment Initiation Service Provider (PISP), or Card Based Payment Instrument Issuer (CBPII), you have obtained or are planning to obtain a license from your local supervisor. You will need your unique eIDAS certificate number to start using the PSD2-compliant bunq API on production.\n\nWe accept pseudo certificates in the sandbox environment so you could test the flow. You can generate a test certificate using the command below.\n\n⚠️ Make sure to include AISP and/or PISP in the name to generate a certificate with the roles.\n\n```\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj '/CN=My App PISP AISP/C=NL'\n```\n\n## <span id=\"topic-psd2-register-as-a-service-provider\">Register as a service provider</span>\n\nBefore you can read the information on bunq users or initiate payments, you need to register a PSD2 account and receive credentials that will enable you to access the bunq user accounts.\n\n1. Execute `POST v1/installation` and get your installation *Token* with a unique random key pair.\n1. Use the installation *Token* and your unique PSD2 certificate to call `POST v1/payment-service-provider-credential`. This will register your software. \n1. Receive your API key in return. It will identify you as a PSD2 bunq API user. You will use it to start an OAuth flow. The session will last 90 days. After it closes, start a new session using the same API key.\n1. Register a device by using `POST v1/device-server` using the API key for the secret and passing the installation *Token* in the `X-Bunq-Client-Authentication` header. \n1. Create your first session by executing `POST v1/session-server`. Provide the installation *Token* in the `X-Bunq-Client-Authentication` header. You will receive a session *Token*. Use it in any following request in the `X-Bunq-Client-Authentication` header.\n\n**NOTE.** The first session will last 1 hour. Start a new session within 60 minutes.\n\n![bunq_PSD2_API_context](https://www.bunq.com/assets/media/developer/Creating-API-context-as-a-PSD2-user-REVISED.jpg)\n\n## <span id=\"topic-psd2-register-your-applicaton\">Register your OAuth application</span>\n\nBefore you can start authenticating on behalf of a bunq user, you need to get *Client ID* and *Client Secret*, which will identify you in authorization requests to the user accounts.\n\n1. Call `POST /v1/user/{userID}/oauth-client` to create an OAuth Client.\n2. Add a redirect URL to the OAuth Client via `POST /user/{userID}/oauth-client/{oauth-clientID}/callback-url`.\n3. Call `GET /v1/user/{userID}/oauth-client/{oauth-clientID}`. We will return your _Client ID_ and _Client Secret_.\n4. You are ready to [initiate authorization requests](#oauth-authorization-request).\n\nThe flow below will guide you through the full OAuth connection process. Note that you only need to create OAuth credentials once.\n\n![bunq_full_OAuth_flow](https://www.bunq.com/assets/media/developer/AuthorizationOAuth-Flow.jpg)\n\n## <span id=\"topic-psd2-access-user-accounts-as-an-aisp\">Access user accounts as an AISP</span>\n\nAs an AISP, you are allowed to authenticate in a user’s account and access \\(read\\) the following account information:\n\n1. legal name\n2. IBAN\n3. nationality\n4. card validity data\n5. transaction history\n6. account balance\n\nTo read the user's information, you need to establish a connection with their bunq account. You can do it using an [authorization request](#oauth-authorization-request). Once a bunq user has confirmed the authorization request and you have done the [token exchange](#oauth-token-exchange), you can activate the Access Token \\(use it as an API key\\).\n\nToken activation happens when you create an API context \\(install it and link your IP adrress and device to it\\). See the [OAuth](https://beta.doc.bunq.com/basics/oauth) page for the full flow illustration.\n\nAn active Access Token allows you to communicate with the bunq user’s account. You can use it to start a session to interact with the monetary accounts the user allows you to access.\n\n![bunq_AISP](https://www.bunq.com/assets/media/developer/AISP.jpg)\n\n## <span id=\"topic-psd2-initiate-payments-as-a-pisp\">Make payments as a PISP</span>\n\nAs a PISP, you are allowed to authenticate in a user’s account with the following permissions:\nread account information \\(via`GET /user`\\):\n   * legal name;\n   * IBAN;\n2. initiate payments \\(create draft payments via either  `POST /user/{userID}/monetary-account/{monetary-accountID}/draft-payment` or `POST /user/{userID}/payment-service-provider-draft-payment`\\) and read their statuses;\n3. confirm that the account balance is sufficient for covering the payment \\(via`POST /user/{userID}/confirmation-of-funds`\\).\n\nThe bunq API provides endpoints for different scenarios of the implementation of the payment initiation functionality. In particular, as a PISP user, you can build applications that initiate and authorize one-off or multiple incoming payments. Depending on the use case you are intending to deploy, you might need to initiate the OAuth authorization either before or after the payment initiation.  \n\n### <span id=\"topic-psd2-initiate-multiple-payments-as-a-pisp\">Authorization of multiple (scheduled) payments</span>\n\nIt is possible to initiate payments from a bunq user's account having previously established an OAuth connection between your application and the bunq user's account. The bunq user will receive push notifications for each initiated payment.\n\nOnce a bunq user has [confirmed they want to make payments via your application](https://beta.doc.bunq.com/psd2/connect-as-a-psd2-service-provider#register-your-application), you can initiate the payment confirmation flow.\n\n1. Create a draft payment via `POST /user/{userID}/monetary-account/{monetary-accountID}/draft-payment`passing the following parameters:\n   * `monetary-accountId and userId` (`userApiKey`'s `id`; see [OAuth](https://beta.doc.bunq.com/basics/oauth#user-id-vs-item-ids) for more information) in the endpoint URL;\n   * the customer’s email address, phone number, or IBAN in the `counterparty_alias` field of the request body.\n2. If the user confirms their intent to make the payment, bunq carries out the transaction.\n3. Check the status of the payment via `GET /user/{userID}/monetary-account/{monetary-accountID}/draft-payment` using the draft payment `id` parameter returned in the previous step. \n\n![bunq_PISP](https://www.bunq.com/assets/media/developer/Payment-initiation-1.1-universal.jpg)\n\n### <span id=\"topic-psd2-initiate-single-payments-as-a-pisp\">Single payment authorization</span>\n\nIt is possible to initiate payments having only the IBAN of the payer using `POST /user/{userID}/payment-service-provider-draft-payment`.  In this case, the bunq user will accept the payment along with the authorization request. No additional push notifications are sent to the user. \n\n1. Collect the bunq user's IBAN (and name) in the UI of your application.\n2. Create a draft payment via `POST /user/{userID}/payment-service-provider-draft-payment`. \n3. Initiate an [authorization request.](https://beta.doc.bunq.com/basics/oauth#authorization-request) Upon the QR-code scan, the bunq user will see and be able to either accept or reject the payment authorization request.\n4. Check the status of the payment.\n\n![bunq_PISP_single_payment](https://www.bunq.com/assets/media/developer/Payment-initiation-1.0.jpg)\n\n## <span id=\"topic-psd2-confirm-available-funds-as-a-cbpii\">Confirm available funds as a CBPII</span>\n\nAs a CBPII, you are allowed to authenticate in a user’s account to validate the availability of funds for the payment in question. \n\n1. Collect an alias for the bunq user's account (their name and IBAN, email address, or phone number).\n2. Check the availability of funds via `POST /user/{userID}/confirmation-of-funds` passing the following information:\n   * your `userId`;\n   * the amount of money needed for the payment;\n   * the name of the bunq user and the IBAN of the account (email address or phone number pointing at the user are also possible).\n\n# <span id=\"topic-signing\">Signing</span>\n⚠️ **NOTE:**  We deprecated the signing of the entire API request (the URL, headers and body). You only need to sign the request body. Requests with full request signatures are no longer validated.\n\nWe are legally required to protect our users and their data from malicious attacks and intrusions. That is why we beyond having a secure https connection, we use [asymmetric cryptography](https://en.wikipedia.org/wiki/Public-key_cryptography) for signing requests that create a session or payment. The use of signatures ensures the data is coming from the trusted party and was not modified after sending and before receiving.\n\nRequest body signing is only mandatory for the following operations: \n- open a session;\n- create a payment;\n- create a scheduled payment;\n- any other operation that executes a payment such as the following:\n\t- accept a draft payment;\n\t- accept a scheduled payment;\n\t- accept a draft scheduled payment;\n\t- accept a payment request.\n\nYou will know that the API call must be encrypted if you get the 466 error code. \n\nThe signing mechanism is implemented in our [SDKs](https://github.com/bunq) so if you are using them you don't have to worry about the details described below.\n\nThe signatures are created using the SHA256 cryptographic hash function and included (encoded in base 64) in the `X-Bunq-Client-Signature` request header and `X-Bunq-Server-Signature` response header. The data to sign is the following:\n\n- For requests: the body only.\n- For responses: the body only.\n\nFor signing requests, the client must use the private key corresponding to the public key that was sent to the server in the installation API call. That public key is what the server will use to verify the signature when it receives the request. In that same call the server will respond with a server side public key, which the client must use to verify the server's signatures. The generated RSA key pair must have key lengths of 2048 bits and adhere to the PKCS #8 standard.\n\n## <span id=\"topic-signing-request-signing-example\">Request signing example</span>\n\nConsider the following request, a `POST` to `/v1/user/126/monetary-account/222/payment` (the JSON is formatted with newlines and indentations to make it more readable):\n\n<table>\n    <thead>\n        <tr>\n            <th>Header</th>\n            <th>Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Cache-Control:</td>\n            <td>no-cache</td>\n        </tr>\n        <tr>\n            <td>User-Agent:</td>\n            <td>bunq-TestServer/1.00 sandbox/0.17b3</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Authentication:</td>\n\n<td>f15f1bbe1feba25efb00802fa127042b54101c8ec0a524c36464f5bb143d3b8b</td>\n        </tr>\n    </tbody>\n</table>\n\n```json\n{\n\t\"amount\": {\n\t\t\"value\": \"12.50\",\n\t\t\"currency\": \"EUR\"\n\t},\n\t\"counterparty_alias\": {\n\t\t\"type\": \"EMAIL\",\n\t\t\"value\": \"bravo@bunq.com\"\n\t},\n\t\"description\": \"Payment for drinks.\"\n}\n```\n\nLet's sign that request. First create a variable `$dataToSign` containing the body of the request:\n\n```json\n{\n    \"amount\": {\n        \"value\": \"12.50\",\n        \"currency\": \"EUR\"\n    },\n    \"counterparty_alias\": {\n        \"type\": \"EMAIL\",\n        \"value\": \"bravo@bunq.com\"\n    },\n    \"description\": \"Payment for drinks.\"\n}\n```\nNext, create the signature of `$dataToSign` using the SHA256 algorithm and the private key `$privateKey` of the Installation's key pair. In PHP, use the following to create a signature. The signature will be passed by reference into `$signature`.\n\n`openssl_sign($dataToSign, $signature, $privateKey, OPENSSL_ALGO_SHA256);`\n\nEncode the resulting `$signature` using base64, and add the resulting value to the request under the `X-Bunq-Client-Signature` header. You have just signed your request, and can send it!\n\n## <span id=\"topic-signing-response-verifying-example\">Response verifying example</span>\n\nThe response to the previous request is as follows (the JSON is formatted with newlines and indentations to make it more readable):\n\n<table>\n    <thead>\n        <tr>\n            <th>Header</th>\n            <th>Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Access-Control-Allow-Origin:</td>\n            <td>*</td>\n        </tr>\n        <tr>\n            <td>Content-Type:</td>\n            <td>application/json</td>\n        </tr>\n        <tr>\n            <td>Date:</td>\n            <td>Thu, 07 Apr 2016 08:32:04 GMT</td>\n        </tr>\n        <tr>\n            <td>Server:</td>\n            <td>APACHE</td>\n        </tr>\n        <tr>\n            <td>Strict-Transport-Security:</td>\n            <td>max-age=31536000</td>\n        </tr>\n        <tr>\n            <td>Transfer-Encoding:</td>\n            <td>chunked</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Response-Id:</td>\n            <td>89dcaa5c-fa55-4068-9822-3f87985d2268</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Client-Request-Id:</td>\n            <td>57061b04b67ef</td>\n        </tr>\n        <tr>\n            <td>X-Bunq-Server-Signature:</td>\n            <td>ee9sDfzEhQ2L6Rquyh2XmJyNWdSBOBo6Z2eUYuM4bAOBCn9N5vjs6k6RROpagxXFXdGI9sT15tYCaLe5FS9aciIuJmrVW/SZCDWq/nOvSThi7+BwD9JFdG7zfR4afC8qfVABmjuMrtjaUFSrthyHS/5wEuDuax9qUZn6sVXcgZEq49hy4yHrV8257I4sSQIHRmgds4BXcGhPp266Z6pxjzAJbfyzt5JgJ8/suxgKvm/nYhnOfsgIIYCgcyh4DRrQltohiSon6x1ZsRIfQnCDlDDghaIxbryLfinT5Y4eU1eiCkFB4D69S4HbFXYyAxlqtX2W6Tvax6rIM2MMPNOh4Q==</td>\n        </tr>\n        <tr>\n            <td>X-Frame-Options:</td>\n            <td>SAMEORIGIN</td>\n        </tr>\n    </tbody>\n</table>\n\n```json\n{\n\t\"Response\": [\n\t\t{\n\t\t\t\"Id\": {\n\t\t\t\t\"id\": 1561\n\t\t\t}\n\t\t}\n\t]\n}\n```\nWe need to verify that this response was sent by the bunq server and not from a man-in-the-middle:\n- Create a `$dataToSign` variable containing the body of the request.\n\n**NOTE:** We started to only sign the response body on April 28, 2020. Please make sure you validate our new response signature.\n\nSo for our example above the response to sign will look like this:\n\n```\n{\"Response\":[{\"Id\":{\"id\":1561}}]}\n```\nNow, verify the signature of `$dataToVerify` using the SHA256 algorithm and the public key `$publicKey` of the server. In PHP, use the following to verify the signature.\n\n`openssl_sign($dataToVerify, $signature, $publicKey, OPENSSL_ALGO_SHA256);`\n\n## <span id=\"topic-signing-troubleshooting\">Troubleshooting</span>\n\nIf you get an error telling you \"The request signature is invalid\", please check the following:\n\n- There are no redundant characters (extra spaces, trailing line breaks, etc.) in the data to sign.\n- Make sure the body is appended to the data to sign exactly as you're adding it to the request.\n- You have added the full body to the data to sign.\n- You use the data to sign to create a SHA256 hash signature.\n- You have base64 encoded the SHA256 hash signature before adding it to the request under `X-Bunq-Client-Signature`.\n\n# <span id=\"topic-headers\">Headers</span>\n\nHTTP headers allow your client and bunq to pass on additional information along with the request or response.\n\nWhile this is already implemented in our [SDKs](https://github.com/bunq), please follow these instructions to make sure you set appropriate headers for calls if using bunq API directly.\n\n## <span id=\"topic-headers-request-headers\">Request headers</span>\n\n### <span id=\"topic-headers-request-headers-mandatory-request-headers\">Mandatory request headers</span>\n\n#### Cache-Control\n\n`Cache-Control: no-cache`\n\nThe standard HTTP Cache-Control header is required for all requests.\n\n#### User-Agent\n\n`User-Agent: bunq-TestServer/1.00 sandbox/0.17b3`\n\nThe User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.\n\n#### X-Bunq-Client-Signature\n\n**⚠️ UPCOMING CHANGE:** Header and URL signature will stop being validated on April 28, 2020. Please [sign the request body](https://doc.bunq.com/#/signing) only.\n\n`X-Bunq-Client-Signature: XLOwEdyjF1d+tT2w7a7Epv4Yj7w74KncvVfq9mDJVvFRlsUaMLR2q4ISgT+5mkwQsSygRRbooxBqydw7IkqpuJay9g8eOngsFyIxSgf2vXGAQatLm47tLoUFGSQsRiYoKiTKkgBwA+/3dIpbDWd+Z7LEYVbHaHRKkEY9TJ22PpDlVgLLVaf2KGRiZ+9/+0OUsiiF1Fkd9aukv0iWT6N2n1P0qxpjW0aw8mC1nBSJuuk5yKtDCyQpqNyDQSOpQ8V56LNWM4Px5l6SQMzT8r6zk5DvrMAB9DlcRdUDcp/U9cg9kACXIgfquef3s7R8uyOWfKLSNBQpdVIpzljwNKI1Q`\n\n\n#### X-Bunq-Client-Authentication\n\n`X-Bunq-Client-Authentication: 622749ac8b00c81719ad0c7d822d3552e8ff153e3447eabed1a6713993749440`\n\nThe authentication *token* is used to authenticate the source of the API call. It is required by all API calls except for `POST /v1/installation`. \n\nIt is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call:\n- Pass the **installation *Token*** you get in the response to the `POST /installation` call in the `/device-server` and `/session-server` calls.\n- Pass the **session *Token*** you get in the response to the `POST /session-server` call in all the other calls.\n\n### <span id=\"topic-headers-request-headers-otpional-request-headers\">Optional request headers</span>\n\n#### X-Bunq-Language\n\n`X-Bunq-Language: en_US`\n\n`en_US` is the default language setting for responses and error descriptions.\n\nThe X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.\n\nCurrently only the languages en_US and nl_NL are supported. Anything else will default to en_US.\n\n#### X-Bunq-Region\n\n`X-Bunq-Region: en_US`\n\n`en_US` is the default region for localization formatting.\n\nThe X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.\n\n#### X-Bunq-Client-Request-Id\n\n`X-Bunq-Client-Request-Id: a4f0de`\n\nThis header has to specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.\n\n#### X-Bunq-Geolocation\n\n`X-Bunq-Geolocation: 4.89 53.2 12 100 NL`\n\n`X-Bunq-Geolocation: 0 0 0 0 000` *(if no geolocation is available or known)*\n\nThis header has to specify the geolocation of the device. It makes it possible for bunq to map the geolocation with the payment.\n‌\nThe format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.\n\n### <span id=\"topic-headers-request-headers-attachment-headers\">Attachment headers</span>\n\n#### Content-Type\n\n`Content-Type: image/jpeg`\n\nThis header should be used when uploading an attachment to pass its MIME type. Supported types are: image/png, image/jpeg and image/gif.\n\n#### X-Bunq-Attachment-Description\nX-Bunq-Attachment-Description: Check out these cookies.\nThis header should be used when uploading an Attachment's content to give it a description.\n\n## <span id=\"topic-response-headers\">Response headers</span>\n\n### <span id=\"topic-response-headers-all-responses\">All Responses</span>\n\n####  X-Bunq-Client-Request-Id\n\n`X-Bunq-Client-Request-Id: a4f0de`\n\nThe same ID that was provided in the request's X-Bunq-Client-Request-Id header. Is included in the response (and request) signature, so can be used to ensure this is the response for the sent request.\n\n#### X-Bunq-Client-Response-Id\n\n`X-Bunq-Client-Response-Id: 76cc7772-4b23-420a-9586-8721dcdde174`\n\nA unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.\n\n#### X-Bunq-Server-Signature\n\n`X-Bunq-Server-Signature: XBBwfDaOZJapvcBpAIBT1UOmczKqJXLSpX9ZWHsqXwrf1p+H+eON+TktYksAbmkSkI4gQghw1AUQSJh5i2c4+CTuKdZ4YuFT0suYG4sltiKnmtwODOFtu1IBGuE5XcfGEDDSFC+zqxypMi9gmTqjl1KI3WP2gnySRD6PBJCXfDxJnXwjRkk4kpG8Ng9nyxJiFG9vcHNrtRBj9ZXNdUAjxXZZFmtdhmJGDahGn2bIBWsCEudW3rBefycL1DlpJZw6yRLoDltxeBo7MjgROBpIeElh5qAz9vxUFLqIQC7EDONBGbSBjaXS0wWrq9s2MGuOi9kJxL2LQm/Olj2g==`\n\nThe server's signature for this response. See the signing page for details on how to verify this signature.\n\n### <span id=\"topic-response-headers-warning-header\">Warning header</span>\n\n#### X-Bunq-Warning\n\n`X-Bunq-Warning: \"You have a negative balance. Please check the app for more details.\"`\n\nUsed to inform you on situations that might impact your bunq account and API access.\n\n# <span id=\"topic-errors\">Errors</span>\n\nFamiliar HTTP response codes are used to indicate the success or failure of an API request.\n\nGenerally speaking, codes in the 2xx range indicate success, while codes in the 4xx range indicate an error having to do with provided information (e.g. a required parameter was missing, insufficient funds, etc.).\n\nFinally, codes in the 5xx range indicate an error with bunq servers. If this is the case, please stop by the support chat and report it to us.\n\n## <span id=\"topic-errors-response-codes\">Response codes</span>\n\n<table>\n    <thead>\n        <tr>\n            <th>Code</th>\n            <th>Error</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>200</td>\n            <td>OK</td>\n            <td>Successful HTTP request</td>\n        </tr>\n        <tr>\n            <td>399</td>\n            <td>NOT MODIFIED</td>\n            <td>Same as a 304, it implies you have a local cached copy of the data</td>\n        </tr>\n        <tr>\n            <td>400</td>\n            <td>BAD REQUEST</td>\n            <td>Most likely a parameter is missing or invalid</td>\n        </tr>\n        <tr>\n            <td>401</td>\n            <td>UNAUTHORISED</td>\n            <td>Token or signature provided is not valid</td>\n        </tr>\n        <tr>\n            <td>403</td>\n            <td>FORBIDDEN</td>\n            <td>You're not allowed to make this call</td>\n        </tr>\n        <tr>\n            <td>404</td>\n            <td>NOT FOUND</td>\n            <td>The object you're looking for cannot be found</td>\n        </tr>\n        <tr>\n            <td>405</td>\n            <td>METHOD NOT ALLOWED</td>\n            <td>The method you are using is not allowed for this endpoint</td>\n        </tr>\n        <tr>\n            <td>429</td>\n            <td>RATE LIMIT</td>\n            <td>Too many API calls have been made in a too short period</td>\n        </tr>\n        <tr>\n            <td>466</td>\n            <td>REQUEST SIGNATURE REQUIRED</td>\n            <td>Request signature is required for this operation.</td>\n        </tr>\n        <tr>\n            <td>490</td>\n            <td>USER ERROR</td>\n            <td>Most likely a parameter is missing or invalid</td>\n        </tr>\n        <tr>\n            <td>491</td>\n            <td>MAINTENANCE ERROR</td>\n            <td>bunq is in maintenance mode</td>\n        </tr>\n        <tr>\n            <td>500</td>\n            <td>INTERNAL SERVER ERROR</td>\n            <td>Something went wrong on bunq's end</td>\n        </tr>\n    </tbody>\n</table>\n\nAll errors 4xx code errors will include a JSON body explaining what went wrong.\n\n## <span id=\"topic-errors-rate-limits\">Rate limits</span>\n\nIf you are receiving the error 429, please make sure you are sending requests at rates that are below our rate limits.\n\nOur rate limits per IP address per endpoint:\n\n- GET requests: 3 within any 3 consecutive seconds\n- POST requests: 5 within any 3 consecutive seconds\n- PUT requests: 2 within any 3 consecutive seconds\n- Callbacks: 2 callback URLs per notification category\n\nWe have a lower rate limit for `/session-server`: 1 request within 30 consecutive seconds.\n\n# <span id=\"topic-api-conventions\">API conventions</span>\n\nMake sure to follow these indications when using the bunq API or get started with our SDKs.\n\n## <span id=\"topic-api-conventions-responses\">Responses</span>\n\nAll JSON responses have one top level object. In this object will be a Response field of which the value is always an array, even for responses that only contain one object.\n\nExample response body\n\n```json\n{\n\t\"Response\": [\n\t\t{\n\t\t\t\"DataObject\": {}\n\t\t}\n\t]\n}\n```\n\n## <span id=\"topic-api-conventions-errors\">Errors</span>\n\n- Error responses also have one top level Error object.\n- The contents of the array will be a JSON object with an error_description and error_description_translated field.\n- The error_description is an English text indicating the error and the error_description_translated field can be shown to end users and is translated into the language from the X-Bunq-Language header, defaulting to en_US.\n- When using bunq SDKs, error responses will be always raised in form of an exception.\n\nExample response body\n```json\n{\n\t\"Error\": [\n\t\t{\n\t\t\t\"error_description\": \"Error description\",\n\t\t\t\"error_description_translated\": \"User facing error description\"\n\t\t}\n\t]\n}\n```\n\n## <span id=\"topic-api-conventionsobject-type-indications\">Object Type indications</span>\n\nWhen the API returns different types of objects for the same field, they will be nested in another JSON object that includes a specific field for each one of them. Within bunq SDKs a BunqResponse object will be returned as the top level object.\n\nIn this example there is a field content, which can have multiple types of objects as value such as — in this case — ChatMessageContentText. Be sure to follow this convention or use bunq SDKs instead.\n\n```json\n{\n\t\"content\": {\n\t\t\"ChatMessageContentText\": {\n\t\t\t\"text\": \"Hi! This is an automated security message. We saw you just logged in on an My Device Description. If you believe someone else logged in with your account, please get in touch with Support.\"\n\t\t}\n\t}\n}\n```\n\n## <span id=\"topic-api-conventions-time-formats\">Time formats</span>\n\nTimes and dates being sent to and from the API are in UTC. The format that should be used is `YYYY-MM-DD hh:mm:ss.ssssss`, where the letters have the meaning as specified in ISO 8601. For example: `2017-01-13 13:19:16.215235`.\n\n# <span id=\"topic-callbacks\">Callbacks</span>\n\nCallbacks are used to send information about events on your bunq account to a URL of your choice, so that you can receive real-time updates.\n\n## <span id=\"topic-callbacks-notification-filters\">Notification Filters</span>\n\nTo receive notifications for certain activities on a bunq account, you have to create notification filters. It is possible to send the notifications to a provided URL and/or the user’s phone as push notifications.\n\nUse the `notification-filter-push` resource to create and manage push notification filters. Provide the type of events you want to receive notifications about in the `category` field. \n\n```json    \n{\n   \"notification_filters\":[\n      {\n         \"category\":\"SCHEDULE_RESULT\"\n      }\n   ]\n}\n```\n\nUse the `notification-filter-url` resource to create and manage URL notification filters. The callback URL you provide in the `notification_target` field must use HTTPS. \n\n```json\n{\n   \"notification_filters\":[\n      {\n         \"category\":\"PAYMENT\",\n         \"notification_target\":\"{YOUR_CALLBACK_URL}\"\n      }\n   ]\n}\n```\n\n### <span id=\"topic-callbacks-notification-filters-callback-categories\">Callback categories</span>\n\n<table>\n    <thead>\n        <tr>\n            <th>Category</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>BILLING</td>\n            <td>notifications for all bunq invoices</td>\n        </tr>\n        <tr>\n            <td>CARD_TRANSACTION_SUCCESSFUL</td>\n            <td>notifications for successful card transactions</td>\n        </tr>\n        <tr>\n            <td>CARD_TRANSACTION_FAILED</td>\n            <td>notifications for failed card transaction</td>\n        </tr>\n        <tr>\n            <td>CHAT</td>\n            <td>notifications for received chat messages</td>\n        </tr>\n        <tr>\n            <td>DRAFT_PAYMENT</td>\n            <td>notifications for creation and updates of draft payments</td>\n        </tr>\n        <tr>\n            <td>IDEAL</td>\n            <td>notifications for iDEAL-deposits towards a bunq account</td>\n        </tr>\n        <tr>\n            <td>SOFORT</td>\n            <td>notifications for SOFORT-deposits towards a bunq account</td>\n        </tr>\n        <tr>\n            <td>MUTATION</td>\n            <td>notifications for any action that affects a monetary account’s balance</td>\n        </tr>\n\t<tr>\n            <td>OAUTH</td>\n            <td>notifications for revoked OAuth connections</td>\n        </tr>\n        <tr>\n            <td>PAYMENT</td>\n            <td>notifications for payments created from, or received on a bunq account (doesn’t include payments that result out of paying a Request, iDEAL, Sofort or Invoice). Outgoing payments have a negative value while incoming payments have a positive value</td>\n        </tr>\n        <tr>\n            <td>REQUEST</td>\n            <td>notifications for incoming requests and updates on outgoing requests</td>\n        </tr>\n        <tr>\n            <td>SCHEDULE_RESULT</td>\n            <td>notifications for when a scheduled payment is executed</td>\n        </tr>\n        <tr>\n            <td>SCHEDULE_STATUS</td>\n            <td>notifications about the status of a scheduled payment, e.g. when the scheduled payment is updated or cancelled</td>\n        </tr>\n        <tr>\n            <td>SHARE</td>\n            <td>notifications for any updates or creation of Connects (ShareInviteBankInquiry)</td>\n        </tr>\n        <tr>\n            <td>TAB_RESULT</td>\n            <td>notifications for updates on Tab payments</td>\n        </tr>\n        <tr>\n            <td>BUNQME_TAB</td>\n            <td>notifications for updates on bunq.me Tab (open request) payments</td>\n        </tr>\n        <tr>\n            <td>SUPPORT</td>\n            <td>notifications for messages received from us through support chat</td>\n        </tr>\n    </tbody>\n</table>\n\n### <span id=\"topic-callbacks-notification-filters-mutation-category\">Mutation category</span>\n\nA Mutation is a change in the balance of a monetary account. So, for each payment-like object, such as a request, iDEAL-payment or a regular payment, a Mutation is created. Therefore, the `MUTATION` category can be used to keep track of a monetary account's balance.\n\n### <span id=\"topic-callbacks-notification-filters-receiving-callbacks\">Receiving callbacks</span>\n\nCallbacks for the sandbox environment will be made from different IP's at AWS.  \nCallbacks for the production environment will be made from `185.40.108.0/22`.\n\n*The IP addresses might change*. We will notify you in a timely fashion if such a change would take place.\n\n### <span id=\"topic-callbacks-notification-filters-retry-mechanism\">Retry mechanism</span>\n\nWhen the execution of a callback fails (e.g. if the callback server is down or the response contains an error) it is tried again for a maximum of 5 times, with an interval of one minute between each try. If your server is not reachable by the callback after the 6th total try, the callback is not sent anymore.\n\n### <span id=\"topic-callbacks-notification-filters-removing-callbacks\">Removing callbacks</span>\n\nTo remove callbacks for an object, send a PUT request to the *user-person*, *user-company*, *monetary-account* or *cash-register* resource with the `notification_filters` field of the JSON request body unset.\n```\n{\n    \"notification_filters\": []\n}\n```\n\n## <span id=\"topic-callbacks-certificate-pinning\">Certificate pinning</span>\n\nWe recommend you use certificate pinning as an extra security measure. With certificate pinning, we check the certificate of the server on which you want to receive callbacks against the pinned certificate that has been provided by you and cancel the callback if that check fails.\n\n### <span id=\"topic-callbacks-certificate-pinning-how-to-set-up-certificate-pinning\">How to set up certificate pinning</span>\n\nRetrieve the SSL certificate of your server using the following command:\n\n1. `openssl s_client -servername www.example.com -connect www.example.com:443 < /dev/null | sed -n \"/-----BEGIN/,/-----END/p\" > www.example.com.pem`\n2. `POST` the certificate to the certificate-pinned endpoint.\n\nNow every callback that is made will be checked against the pinned certificate that you provided. Note that if the SSL certificate on your server expires or is changed, our callbacks will fail.\n\n# <span id=\"topic-pagination\">Pagination</span>\n\nIn order to control the size of the response of a `LIST` request, items can be paginated. A `LIST` request is a request for every one of a certain resources, for instance all payments of a certain monetary account `GET /v1/user/1/monetary-account/1/payment`). You can decide on the maximum amount of items of a response by adding a `count` query parameter with the number of items you want per page to the URL. For instance:\n\n`GET /v1/user/1/monetary-account/1/payment?count=25`\n\nWhen no `count` is given, the default count is set to 10. The maximum `count` you can set is 200.\n\nWith every listing, a `Pagination` object will be added to the response, containing the URLs to be used to get the next or previous set of items. The URLs in the Pagination object can be used to navigate through the listed resources. The Pagination object looks like this given a count of 25:\n\n```json\n{\n    \"Pagination\": {\n        \"future_url\": null,\n        \"newer_url\": \"/v1/user/1/monetary-account/1/payment?count=25&newer_id=249\",\n        \"older_url\": \"/v1/user/1/monetary-account/1/payment?count=25&older_id=224\"\n    }\n}\n```\n\nThe `newer_url` value can be used to get the next page. The `newer_id` is always the ID of the last item in the current page. If `newer_url` is `null`, there are no more recent items before the current page.\n\nThe `older_url` value can be used to get the previous page. The `older_id` is always the ID of the first item in the current page. If `older_url` is `null`, there are no older items after the current page.\n\nThe `future_url` can be used to refresh and check for newer items that didn't exist when the listing was requested. The `newer_id` will always be the ID of the last item in the current page. `future_url` will be `null` if `newer_id` is not also the ID of the latest item.\n\n# <span id=\"topic-sandbox\">Sandbox</span>\n*The sandbox base URL is https://public-api.sandbox.bunq.com/v1/*\n\nWe do not use real money and do not allow external transactions in the sandbox environment. \n\n## Sandbox user accounts\nYou need to create a sandbox user to test the bunq API. The easiest way to do it is by using [our developer portal](https://developer.bunq.com/):\n1. Log in using your bunq account or [create a free developer account](https://developer.bunq.com/portal/signup) with sandbox-only access.\n1. Go to Sandbox Users.\n1. Generate up to 5 users.\n1. Use the sandbox API key to create an API context and/or use the user credentials to log in to the [sandbox bunq app](https://doc.bunq.com/#/android-emulator).\n\n### Alternative ways to generate sandbox API keys\nThere are 3 other ways you can generate a bunq sandbox API key:\n* connect to [Tinker](https://lexy.gitbook.io/bunq/quickstart/tinker) *(it will also return login credentials for the sandbox app)*;\n* create it in the [sandbox app](https://doc.bunq.com/#/android-emulator) *(you need to be logged in as a sandbox user)*;\n* call the sandbox user endpoints directly, using [our Postman collection](https://github.com/bunq/postman), or by running a cURL command (change `sandbox-user-person` to `sandbox-user-company` to generate a business user):\n\n```\ncurl https://public-api.sandbox.bunq.com/v1/sandbox-user-person -X POST --header \"Content-Type: application/json\" --header \"Cache-Control: none\" --header \"User-Agent: curl-request\" --header \"X-Bunq-Client-Request-Id: $(date)randomId\" --header \"X-Bunq-Language: nl_NL\" --header \"X-Bunq-Region: nl_NL\" --header \"X-Bunq-Geolocation: 0 0 0 0 000\"\n```\n\n⚠️ **NOTE:** An API key can only be assigned to an IP within 1 hour after its creation. After the 1 hour, it will become invalid if not assigned. API keys that are created via the sandbox app are wiped with each sandbox reset.\n\nOnce you have a sandbox API key, create more sandbox users to use as test customer accounts, and start playing with the API. \n\nThe sandbox base URL is https://public-api.sandbox.bunq.com/v1/.\n\n## Sandbox money\nWithout money, it's not always sunny in the sandbox world. Fortunately, getting money on the bunq sandbox is easy. All you need to do is ask Sugar Daddy for it.\n\nSend a `POST v1/request-inquiry` request passing sugardaddy@bunq.com  in the counterparty_alias field. Specify the type for the alias and set the `allow_bunqme` field. Request up to €500 at a time.\n```\n{\n    \"amount_inquired\": {\n        \"value\": \"100\",\n        \"currency\": \"EUR\"\n    },\n    \"counterparty_alias\": {\n        \"type\": \"EMAIL\",\n        \"value\": \"sugardaddy@bunq.com\",\n        \"name\": \"Sugar Daddy\"\n    },\n    \"description\": \"You're the best!\",\n    \"allow_bunqme\": false\n}\n```\n\n# <span id=\"topic-android-emulator\">Android Emulator</span>\n\nIn case you do not own an Android device on which you can run our Sandbox app for end-to-end testing, you can set up an emulator to run the bunq Sandbox app for Android.\n\n## Things you will need\n\n- The [bunq Sandbox App APK](https://appstore.bunq.com/api/android/builds/bunq-android-sandbox-master.apk) that's optimised for emulating;\n- [Android Studio](https://developer.android.com/studio/index.html).\n\n## Starting the Android Virtual Device (AVD) Manager\n\n1. Open Android Studio.\n2. From the top menu, select “Tools” > \"Android\" > \"AVD Manager\".\n\n## Setting up a new virtual device\n\n1. Start the wizard by clicking on \"+ Create Virtual Device\".\n2. Select a device (recommendation: \"Pixel 5.0\" or \"Nexus 6\") and press \"Next\".\n3. Select an x86 system image (recommendation: Nougat, API Level 25, Android 7.1.1 with Google APIs) and press \"Next\". The image needs to have Google Play Services 10.0.1 or higher.\n4. In the bottom left corner, select \"Show Advanced Settings\".\n5. Scroll to \"Memory and Storage\".\n6. Change \"Internal Storage\" to \"2048 MB\".\n7. Change \"SD card\" to \"200 MB\".\n8. Press \"Finish\".\n\n## Starting the virtual device\n\n1. On the right side under \"Actions\", select the green \"Play\" button.\n2. Wait for the device to boot, this may take a few minutes.\n\n## Installing the bunq Sandbox App APK\n\n1. Open the command line.\n2. Navigate to your Android SDK platform tools directory (e.g. `cd ~/Library/Android/sdk/platform-tools` on macOS).\n3. Make sure that the virtual device is started and has fully booted.\n4. Run `./adb install ~/Downloads/bunq-android-sandboxEmulator-public-api.apk`, this may take a few minutes, and should finish with \"Success\".\n\n## Creating an account or logging in\n\n1. Create a sandbox account in the [developer portal](https://developer.bunq.com/).\n1. Log in to the sandbox app using the sandbox user credentials.\n\nℹ️ *You will be asked to verify your phone number when you open the app for the first time. Sandbox does not send actual SMS messages. Enter any valid phone number and use the default verification code `992266`*. \n\nIf you couldn't generate a sandbox account in the developer portal, use Tinker:\n1. Install [Tinker](https://beta.doc.bunq.com/quickstart/tinker).\n1. Run `tinker/user-overview` to create a sandbox account. The output of the command will include the login credentials for the sandbox account.\n\n⚠️ **NOTE:** It is **not** possible to create accounts using the regular signup in the app, bunq is not reviewing Sandbox applications.\n\n# <span id=\"topic-moving-to-production\">Moving to Production</span>\n\nHave you tested your bunq integration to the fullest and are you now ready to introduce it to the world? Then the time has come to move it to a production environment!\n\nTo get started you'll need some fresh API keys for the production environment, which you can create via your bunq app. You can create these under \"Profile\" by tapping the \"Security\" menu. We do, however, highly recommend using a standard API Key instead of a Wildcard API Key. The former is significantly safer and it protects you from intrusions and possible attacks.\n\nThere's only a few things to do before your beautiful bunq creation can be moved to production. You're going to have to change your API Key and redo the sequence of calls to open a session.\n\nThe bunq Public API production environment is hosted at `https://api.bunq.com`.\n\nDo you have any questions or remarks about the process, or do you simply want to show off with your awesome creations? Don't hesitate to drop us a line on [together.bunq.com](https://together.bunq.com).\n\nPlease be aware that if you will gain access to account information of other bunq users or initiate a payment for them, you  maybrequire a PSD2 permit.\n\n# <span id=\"topic-quickstart-opening-a-session\">Quickstart: Opening a Session</span>\n\n## <span id=\"topic-quickstart-opening-a-session-goal\">Goal</span>\n\nSo, you want to start using the bunq API, awesome! To do this, you have to open a session in which you will be making those calls.\n\n## <span id=\"topic-quickstart-opening-a-session-getting-an-api-key\">Getting an API key</span>\n\nTo connect to the API, you have to make sure you have received an API key. \n\n**For production:**\n1. create an app in the [developer portal](http://developer.bunq.com/), or\n1. generate it in the bunq app *(Profile → Security & Settings → Developers → API keys)*.\n\n**For sandbox**\nYou can use one of the following ways:\n- create a sandbox user in the [developer portal](http://developer.bunq.com/);\n- generate an API key in the [sandbox app](#android-emulator) *(Profile → Security & Settings → Developers → API keys)*;\n- get an API key from [Tinker](https://beta.doc.bunq.com/quickstart/tinker);\n- run a cURL request: `curl https://public-api.sandbox.bunq.com/v1/sandbox-user-person -X POST --header \"Content-Type: application/json\" --header \"Cache-Control: none\" --header \"User-Agent: curl-request\" --header \"X-Bunq-Client-Request-Id: $(date)randomId\" --header \"X-Bunq-Language: nl_NL\" --header \"X-Bunq-Region: nl_NL\" --header \"X-Bunq-Geolocation: 0 0 0 0 000\"`. Use `sandbox-user-company` to generate a business user.\n\nNote that production API key is only usable on production and sandbox key is only usable on sandbox. Sandbox key has a `sandbox_` prefix while production key does not have any noticeable prefixes.\n\n## <span id=\"topic-quickstart-opening-a-session-call-sequence\">Call sequence</span>\n\nThe calls you need to perform to set up a session from scratch are the following:\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-installation\">1. POST installation</span>\n\nEach call needs to be signed with your own private key. An Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls.\n\nStart by generating a 2048-bit RSA key pair. You can find examples by looking at the source code of the sdk's located at github.\n\n#### Headers\n\nOn the headers page you can find out about the mandatory headers. Take care that if you are in the sandbox environment, you set an `Authorization` header. Specific to the `POST /installation` call, you shouldn't use the `X-Bunq-Client-Authentication` or the `X-Bunq-Client-Signature` headers.\n\n#### Body\n\nPost your public key to the Installation endpoint (use `\\n` for newlines in your public key).\n\n#### Response\n\nSave the Installation token and the bunq API's public key from the response. This token is used in the `Authentication` header to register a `DeviceServer` and to start a `SessionServer`. The bunq API's public key should be used to verify future responses received from the bunq API.\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-device-server\">2. POST device-server</span>\n\nFurther calls made to the server need to come from a registered device. `POST /device-server` registers your current device and the IP address(es) it uses to connect to the bunq API.\n\n#### Headers\n\nUse the token you received from `POST /installation` in the `X-Bunq-Client-Authentication` header. Make sure you sign your call, passing the call signature in `X-Bunq-Client-Signature` header.\n\n#### Body\n\nFor the secret, use the API key you received. If you want to create another API key, you can do so in the bunq sandbox app (or production app for the production environment). Login, go to Profile > Security and tap 'API keys'. The freshly created API key can be assigned to one or multiple IP addresses using `POST device-server` within 4 hours before becoming invalid. As soon as you start using your API key, it will remain valid until the next sandbox reset.  For the secret, use the API key you received.\n\n### <span id=\"topic-quickstart-opening-a-session-call-sequence-post-session-server\">3. POST session-server</span>\n\nTo make any calls besides `installation` and `device-server`, you need to open a session.\n\n#### Headers\n\nUse the token you received from `POST /installation` in the `X-Bunq-Client-Authentication` header. Make sure you sign your call, passing the call signature in `X-Bunq-Client-Signature` header.\n\n#### Body\n\nFor the secret, use the API key you received.\n\n#### Response\n\nThe token received in the response to `POST /session-server` should be used to authenticate your calls in this session. Pass this session's token in the `X-Bunq-Client-Authentication` header on every call you make in this session.\n\n# <span id=\"topic-quickstart-payment-request\">Quickstart: Payment Request</span>\n\n## <span id=\"topic-quickstart-payment-request-goal\">Goal</span>\n\nYou want to offer bunq payments on a website or in an application.\n\n## <span id=\"topic-quickstart-payment-request-scenario\">Scenario</span>\n\nIn this use case the consumer and the merchant both have a bunq account. The consumer wants to pay with bunq and enters their alias in the bunq payment field at checkout. The merchant sends the request for payment to the consumer when the consumer presses enter. The consumer agrees to the request in the bunq mobile app and the merchant has immediate confirmation of the payment. Please be aware that if you will gain access to account information of other bunq users or initiate a payment for them, you require a PSD2 permit.\n\n## <span id=\"topic-quickstart-payment-request-before-you-start\">Before you start</span>\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the X-Bunq-Client-Authentication header.\n\n## <span id=\"topic-quickstart-payment-request-call-sequence\">Call Sequence</span>\n\nThe consumer is at checkout and selects the bunq payment method. This would be a logical time to open a session on the bunq server.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-list-monetary-account\">1. LIST monetary-account</span>\n\nWhen a request for payment is accepted, the money will be deposited on the bank account the request for payment is connected to. Let’s start by finding all your available bank accounts. Pick one of them to make the request for payment with and save its `id`.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-post-monetary-account-attachment\">2. POST monetary-account attachment (optional)</span>\n\nOptionally, you can attach an image to the request for payment.\n\n#### Headers\nMake sure you set the `Content-Type` header to match the MIME type of the image. It’s also required you pass a description of the image via the `X-Bunq-Attachment-Description` header.\n\n#### Body\nThe payload of this request is the binary representation of the image file. Do not use any JSON formatting.\n\n#### Response\nSave the `id` of the posted attachment. You’ll need it to attach it to the request for payment.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-post-request-inquiry\">3. POST request-inquiry</span>\n\nNext, create a request inquiry. A request inquiry is the request for payment that your customer can respond to by accepting or rejecting it.\n\n#### Body\n\nPass the customer’s email address, phone number or IBAN in the `counterparty_alias`. Make sure you set the correct `type` for the alias, depending on what you pass. When providing an IBAN, a name of the `counterparty_alias` is required. You can provide the `id` of the created attachment.\n\n#### Response\n\nYou will receive the `id` of the created request inquiry in the response. Save this `id`. You will need it to check if the customer has responded to the request yet.\n\n### <span id=\"topic-quickstart-payment-request-call-sequence-get-request-inquiry\">4. GET request-inquiry</span>\n\nAfter you’ve sent the request for payment, its status can be checked.\n\n#### Response\n\nWhen the `status` is `ACCEPTED`, the customer has accepted and paid the request, and you will have received the money on the connected monetary account. If the `status` is `REJECTED`, the customer did not accept the request.\n\n# <span id=\"topic-quickstart-create-a-tab-payment\">Quickstart: Create a Tab payment</span>\n\n## <span id=\"topic-quickstart-create-a-tab-payment-goal\">Goal</span>\n\nYou will create a tab that can be paid once by a single user, a so called TagUsageSingle, and explore three different ways to make the Tab visible to your customers:\n\n- QR code from the CashRegister\n- QR code from the Tab.\n\n## <span id=\"topic-quickstart-create-a-tab-payment-before-you-start\">Before you start</span>\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the `X-Bunq-Client-Authentication` header.\n\n## <span id=\"topic-quickstart-create-a-tab-payment-call-sequence\">Call sequence</span>\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-attachment-public\">1. POST attachment-public</span>\n\nStart by creating an attachment that will be used for the avatar for the cash register.\n\n#### Header\n\nMake sure you set the `Content-Type` header to match the MIME type of the image. It is also required you pass a description of the image via the `X-Bunq-Attachment-Description` header.\n\n#### Body\n\nThe payload of this request is the binary representation of the image file. Do not use any JSON formatting.\n\n#### Response\n\nSave the `uuid` of the posted attachment. You'll need it to create the avatar in the next step.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-avatar\">2. POST avatar</span>\n\nMake an avatar using the public attachment you've just created.\n\n#### Body\n\nThe payload of this request is the `uuid` of the attachment public.\n\n#### Response\n\nIn response, you’ll receive the UUID of the avatar created using the attachment. Save this UUID. You’ll use it as the avatar for the cash register you're about to create.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-list-monetary-account\">3. LIST monetary-account</span>\n\nGet a listing of all available monetary accounts. Choose one, and save the id of the monetary account you want your cash register to be connected to. Each paid tab for the cash register will transfer the money to this account.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-cash-register\">4a. POST cash-register</span>\n\nCreate a cash register. Use the `id` of the monetary account you want to connect the cash register to in the URL of the request.\n\n#### Body\n\nIn the body provide the `uuid` of the avatar you created for this cash register. Also make sure to provide a unique name for your cash register. Set the status to `PENDING_APPROVAL`.\n\n#### Response\n\nThe response contains the `id` of the cash register you created. Save this `id`. You will need it to create subsequent tabs and tab items.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-wait-for-approval\">4b. Wait for approval</span>\n\nOn the production environment, a bunq admin will review and approve your cash register. In the sandbox environment, your cash register will be automatically approved.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-tab-usage-single\">5. POST tab-usage-single</span>\n\nCreate a new tab that is connected to your cash register. Use the id of the cash register you want to connect this tab to in the URL of your request.\n\n#### Body\n\nGive the tab a name in `merchant_reference`. Create the tab with status `OPEN`, and give the tab a starting amount. You can update this amount later.\n\n#### Response\n\nThe response contains the uuid of the tab you created.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-post-tab-item\">6. POST tab-item (optional)</span>\n\nYou can add items to a tab. For instance, if a customer will be paying for multiple products via this tab, you can decide to add an item for each of these. Adding items to a tab is optional, and adding them will not change the total amount of the tab itself. However, if you've added any tab items the sum of the amounts of these items must be equal to the `total_amount` of the tab when you change its status to `WAITING_FOR_PAYMENT`.\n\n### <span id=\"topic-quickstart-create-a-tab-payment-call-sequence-put-tab-usage-single\">7. PUT tab-usage-single</span>\n\nUpdate the status of the tab to `WAITING_FOR_PAYMENT` if you want the costumer to pay the tab, and you're done adding any tab items. You can use this request to make the tab visible for your costumers.\n\n#### Visibility\n\nTo decide how you are going to make your tab visible, pass a visibility object in the payload.\n\nSetting `cash_register_qr_code` to true will connect this tab to the QR code from the cash register. If this cash register does not have a QR code yet, one will be created. Only one Tab can be connected to the cash register’s QR code at any given time.\n\nSetting `tab_qr_code` to true will create a QR code specifically for this tab. This QR code can not be linked to anything else.\n\n# <span id=\"topic-quickstart-transwerwise-payment\">Quickstart: Create a TransferWise payment</span>\n\n## Goal\n\nYou want to send a payment in currency other than euro outside the SEPA zone.\n\n## Before you start\n\nMake sure that you have opened a session and that for any call you make after that, you pass the session’s token in the `X-Bunq-Client-Authentication` header.\n\nℹ️ *bunq relies on TransferWise for international, so you need to create a TransferWise account linked to a bunq account to be able to create international transfers. You can do it either from the bunq app or using our API as described below.*\n\n## Get the up-to-date exchange rate (optional)\n\nYou might want to check the latest currency exchange rate before making a transfer. Here’s how you can do it using the bunq API:\n1. Check the list of supported currencies via `GET /user/{userID}/transferwise-currency`. Copy the needed currency code.\n2. Create a temporary quote for the currency of your choice via `POST /user/{userID}/transferwise-quote-temporary`.\n\nℹ️ *A quote is the exchange rate at the exact timestamp. Temporary quotes carry solely informative value and cannot be used for creating a transfer.*\n\n3. Read the temporary quote via `GET /user/{userID}/transferwise-quote-temporary/{transferwise-quote-temporaryID}`.\n\n## Create a TransferWise account\n\nYou need a TransferWise account linked to your bunq account to make TransferWise payments via the bunq API. Create one via `POST /user/{userID}/transferwise-user`, and save its ID. \n\nℹ️ *You cannot use an existing TransferWise account.*\n\n## Create a quote\n\n1. Create a quote via POST /user/{userID}/transferwise-quote and save its ID. \n\nℹ️ *Use amount_target to indicate the sum the recipient must get. Amount_source, on the other hand, will indicate the sum you want to send, but it will not necessarily be the final sum the recipient gets.*\n\nℹ️ *Quotes are valid for 30 minutes so if you do not manage to create a transfer within this time, you will need to create another quote.*\n\n2. Get the exchange rate by reading the quote via GET /user/{userID}/transferwise-quote/(transferwise-quoteID).\n\n## Create a recipient\n\nIf you have sent money via the TransferWise account linked to your bunq account, you can reuse the recipients. You can list their IDs via `GET /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient`.\n\nTo create a new, previously unused recipient, follow these steps:\n1. Retrieve the fields required for creating the recipient as the requirements vary for the type of recipient in each country. Iterate sending the following request pair till there are no more required fields:\n- `GET /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n- `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n2. Create a recipient account using the final request body from the previous step with `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement`\n\n## Create a transfer\n\nFinally, having both the quote ID and the recipient ID, you can create a transfer. 🎉\n\n1. Check if there are any additional transfer requirements via `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer-requirement`.\n2. Create a transfer via `POST /user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer`. You need to specify the ID of the monetary account from which you want the payment to be made.\n\n# <span id=\"topic-quickstart-attachments\">Quickstart: Downloading attachments</span>\n\n## Goal\nExport receipts and invoices attached to payments to your application.\n\n## The scenario you want to achieve\n0. The bunq user has accepted the authorization request and your application can read the bunq user’s account information.\n1. Your application imports all the transactions and attachments.\n2. The bunq user sees the transactions matched with the receipts and invoices in your application.\n\n## Before you start\n* Make sure that you have opened a session\n* Make sure you pass the session Token in the X-Bunq-Client-Authentication header in all the following requests of the session.\n\n## Call sequence\n1. List the payments of the user via GET /user/{userID}/monetary-account/{monetary-accountID}/payment.\n2. Check if the payments have attachments via GET /user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment. Save the attachment IDs.\n3. Export the raw content of the attachments via GET /user/{userID}/attachment/{attachmentID}/content.\n\n***HINT:** You can use [callbacks](https://doc.bunq.com/#/callbacks) to make sure you don’t miss anything happening on the bunq account.*\n",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService" : "http://bunq.com/terms-api/",
    "title" : "bunq API",
    "version" : "1.0",
    "x-apisguru-categories" : [ "financial" ],
    "x-logo" : {
      "url" : "https://api.apis.guru/v2/cache/logo/https_twitter.com_bunq_profile_image.jpeg"
    },
    "x-origin" : [ {
      "converter" : {
        "url" : "https://github.com/mermade/oas-kit",
        "version" : "7.0.4"
      },
      "format" : "openapi",
      "url" : "https://raw.githubusercontent.com/bunq/doc/master/swagger.json",
      "version" : "3.0"
    } ],
    "x-providerName" : "bunq.com"
  },
  "tags" : [ {
    "description" : "",
    "name" : "attachment"
  }, {
    "description" : "",
    "name" : "attachment-public"
  }, {
    "description" : "",
    "name" : "avatar"
  }, {
    "description" : "",
    "name" : "billing-contract-subscription"
  }, {
    "description" : "",
    "name" : "bunqme-fundraiser-profile"
  }, {
    "description" : "",
    "name" : "bunqme-fundraiser-result"
  }, {
    "description" : "",
    "name" : "bunqme-tab"
  }, {
    "description" : "",
    "name" : "bunqme-tab-result-response"
  }, {
    "description" : "",
    "name" : "callback-url"
  }, {
    "description" : "",
    "name" : "card"
  }, {
    "description" : "",
    "name" : "card-batch"
  }, {
    "description" : "",
    "name" : "card-batch-replace"
  }, {
    "description" : "",
    "name" : "card-credit"
  }, {
    "description" : "",
    "name" : "card-debit"
  }, {
    "description" : "",
    "name" : "card-name"
  }, {
    "description" : "",
    "name" : "certificate-pinned"
  }, {
    "description" : "",
    "name" : "challenge-request"
  }, {
    "description" : "",
    "name" : "company"
  }, {
    "description" : "",
    "name" : "confirmation-of-funds"
  }, {
    "description" : "",
    "name" : "content"
  }, {
    "description" : "",
    "name" : "credential-password-ip"
  }, {
    "description" : "",
    "name" : "currency-cloud-beneficiary"
  }, {
    "description" : "",
    "name" : "currency-cloud-beneficiary-requirement"
  }, {
    "description" : "",
    "name" : "currency-cloud-payment-quote"
  }, {
    "description" : "",
    "name" : "currency-conversion"
  }, {
    "description" : "",
    "name" : "currency-conversion-quote"
  }, {
    "description" : "",
    "name" : "customer-statement"
  }, {
    "description" : "",
    "name" : "definition"
  }, {
    "description" : "",
    "name" : "device"
  }, {
    "description" : "",
    "name" : "device-server"
  }, {
    "description" : "",
    "name" : "draft-payment"
  }, {
    "description" : "",
    "name" : "event"
  }, {
    "description" : "",
    "name" : "export-annual-overview"
  }, {
    "description" : "",
    "name" : "export-rib"
  }, {
    "description" : "",
    "name" : "export-statement-card"
  }, {
    "description" : "",
    "name" : "export-statement-card-csv"
  }, {
    "description" : "",
    "name" : "export-statement-card-pdf"
  }, {
    "description" : "",
    "name" : "feature-announcement"
  }, {
    "description" : "",
    "name" : "generated-cvc2"
  }, {
    "description" : "",
    "name" : "ideal-merchant-transaction"
  }, {
    "description" : "",
    "name" : "insight-preference-date"
  }, {
    "description" : "",
    "name" : "insights"
  }, {
    "description" : "",
    "name" : "insights-search"
  }, {
    "description" : "",
    "name" : "installation"
  }, {
    "description" : "",
    "name" : "instance"
  }, {
    "description" : "",
    "name" : "invoice"
  }, {
    "description" : "",
    "name" : "ip"
  }, {
    "description" : "",
    "name" : "legal-name"
  }, {
    "description" : "",
    "name" : "limit"
  }, {
    "description" : "",
    "name" : "mastercard-action"
  }, {
    "description" : "",
    "name" : "monetary-account"
  }, {
    "description" : "",
    "name" : "monetary-account-bank"
  }, {
    "description" : "",
    "name" : "monetary-account-external"
  }, {
    "description" : "",
    "name" : "monetary-account-joint"
  }, {
    "description" : "",
    "name" : "monetary-account-savings"
  }, {
    "description" : "",
    "name" : "name"
  }, {
    "description" : "",
    "name" : "note-attachment"
  }, {
    "description" : "",
    "name" : "note-text"
  }, {
    "description" : "",
    "name" : "notification-filter-email"
  }, {
    "description" : "",
    "name" : "notification-filter-push"
  }, {
    "description" : "",
    "name" : "notification-filter-url"
  }, {
    "description" : "",
    "name" : "oauth-client"
  }, {
    "description" : "",
    "name" : "payment"
  }, {
    "description" : "",
    "name" : "payment-auto-allocate"
  }, {
    "description" : "",
    "name" : "payment-batch"
  }, {
    "description" : "",
    "name" : "payment-service-provider-credential"
  }, {
    "description" : "",
    "name" : "payment-service-provider-draft-payment"
  }, {
    "description" : "",
    "name" : "pdf-content"
  }, {
    "description" : "",
    "name" : "registry-settlement"
  }, {
    "description" : "",
    "name" : "replace"
  }, {
    "description" : "",
    "name" : "request-inquiry"
  }, {
    "description" : "",
    "name" : "request-inquiry-batch"
  }, {
    "description" : "",
    "name" : "request-response"
  }, {
    "description" : "",
    "name" : "reward"
  }, {
    "description" : "",
    "name" : "reward-recipient"
  }, {
    "description" : "",
    "name" : "reward-sender"
  }, {
    "description" : "",
    "name" : "sandbox-user-company"
  }, {
    "description" : "",
    "name" : "sandbox-user-person"
  }, {
    "description" : "",
    "name" : "schedule"
  }, {
    "description" : "",
    "name" : "schedule-instance"
  }, {
    "description" : "",
    "name" : "schedule-payment"
  }, {
    "description" : "",
    "name" : "schedule-payment-batch"
  }, {
    "description" : "",
    "name" : "server-error"
  }, {
    "description" : "",
    "name" : "server-public-key"
  }, {
    "description" : "",
    "name" : "session"
  }, {
    "description" : "",
    "name" : "session-server"
  }, {
    "description" : "",
    "name" : "share-invite-monetary-account-inquiry"
  }, {
    "description" : "",
    "name" : "share-invite-monetary-account-response"
  }, {
    "description" : "",
    "name" : "sofort-merchant-transaction"
  }, {
    "description" : "",
    "name" : "statement"
  }, {
    "description" : "",
    "name" : "switch-service-payment"
  }, {
    "description" : "",
    "name" : "token-qr-request-ideal"
  }, {
    "description" : "",
    "name" : "token-qr-request-sofort"
  }, {
    "description" : "",
    "name" : "transferwise-currency"
  }, {
    "description" : "",
    "name" : "transferwise-quote"
  }, {
    "description" : "",
    "name" : "transferwise-quote-temporary"
  }, {
    "description" : "",
    "name" : "transferwise-recipient"
  }, {
    "description" : "",
    "name" : "transferwise-recipient-requirement"
  }, {
    "description" : "",
    "name" : "transferwise-transfer"
  }, {
    "description" : "",
    "name" : "transferwise-transfer-requirement"
  }, {
    "description" : "",
    "name" : "transferwise-user"
  }, {
    "description" : "",
    "name" : "translink-transaction"
  }, {
    "description" : "",
    "name" : "tree-progress"
  }, {
    "description" : "",
    "name" : "user"
  }, {
    "description" : "",
    "name" : "user-company"
  }, {
    "description" : "",
    "name" : "user-payment-service-provider"
  }, {
    "description" : "",
    "name" : "user-person"
  }, {
    "description" : "",
    "name" : "whitelist-sdd"
  }, {
    "description" : "",
    "name" : "whitelist-sdd-one-off"
  }, {
    "description" : "",
    "name" : "whitelist-sdd-recurring"
  } ],
  "paths" : {
    "/attachment-public" : {
      "post" : {
        "description" : "Create a new public attachment. Create a POST request with a payload that contains a binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg, or image/png) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
        "operationId" : "CREATE_AttachmentPublic",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachmentPublic"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentPublicCreate"
                }
              }
            },
            "description" : "This call is used to upload an attachment that can be referenced to as an avatar (through the Avatar endpoint) or in a tab sent. Attachments supported are png, jpg and gif.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "attachment-public" ]
      }
    },
    "/attachment-public/{attachment-publicUUID}/content" : {
      "get" : {
        "description" : "Get the raw content of a specific attachment.",
        "operationId" : "List_all_Content_for_AttachmentPublic",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "attachment-publicUUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentPublicContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of a public attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/attachment-public/{itemId}" : {
      "get" : {
        "description" : "Get a specific attachment's metadata through its UUID. The Content-Type header of the response will describe the MIME type of the attachment file.",
        "operationId" : "READ_AttachmentPublic",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentPublicRead"
                }
              }
            },
            "description" : "This call is used to upload an attachment that can be referenced to as an avatar (through the Avatar endpoint) or in a tab sent. Attachments supported are png, jpg and gif.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "attachment-public" ]
      }
    },
    "/avatar" : {
      "post" : {
        "description" : "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
        "operationId" : "CREATE_Avatar",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Avatar"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvatarCreate"
                }
              }
            },
            "description" : "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "avatar" ]
      }
    },
    "/avatar/{itemId}" : {
      "get" : {
        "description" : "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
        "operationId" : "READ_Avatar",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvatarRead"
                }
              }
            },
            "description" : "Avatars are public images used to represent you or your company. Avatars are used to represent users, monetary accounts and cash registers. Avatars cannot be deleted, only replaced. Avatars can be updated after uploading the image you would like to use through AttachmentPublic. Using the attachment_public_uuid which is returned you can update your Avatar. Avatars used for cash registers and company accounts will be reviewed by bunq.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "avatar" ]
      }
    },
    "/device" : {
      "get" : {
        "description" : "Get a collection of Devices. A Device is either a DevicePhone or a DeviceServer.",
        "operationId" : "List_all_Device",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to get a Device or a listing of Devices. Creating a DeviceServer should happen via /device-server",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "device" ]
      }
    },
    "/device-server" : {
      "get" : {
        "description" : "Get a collection of all the DeviceServers you have created.",
        "operationId" : "List_all_DeviceServer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/DeviceServerListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "device-server" ]
      },
      "post" : {
        "description" : "Create a new DeviceServer providing the installation token in the header and signing the request with the private part of the key you used to create the installation. The API Key that you are using will be bound to the IP address of the DeviceServer which you have created.<br/><br/>Using a Wildcard API Key gives you the freedom to make API calls even if the IP address has changed after the POST device-server.<br/><br/>Find out more at this link <a href=\"https:/bunq.com/en/apikey-dynamic-ip\" target=\"_blank\">https:/bunq.com/en/apikey-dynamic-ip</a>.",
        "operationId" : "CREATE_DeviceServer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceServer"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceServerCreate"
                }
              }
            },
            "description" : "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "device-server" ]
      }
    },
    "/device-server/{itemId}" : {
      "get" : {
        "description" : "Get one of your DeviceServers.",
        "operationId" : "READ_DeviceServer",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceServerRead"
                }
              }
            },
            "description" : "After having created an Installation you can now create a DeviceServer. A DeviceServer is needed to do a login call with session-server.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "device-server" ]
      }
    },
    "/device/{itemId}" : {
      "get" : {
        "description" : "Get a single Device. A Device is either a DevicePhone or a DeviceServer.",
        "operationId" : "READ_Device",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceRead"
                }
              }
            },
            "description" : "Used to get a Device or a listing of Devices. Creating a DeviceServer should happen via /device-server",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "device" ]
      }
    },
    "/installation" : {
      "get" : {
        "description" : "You must have an active session to make this call. This call returns the Id of the the Installation you are using in your session.",
        "operationId" : "List_all_Installation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InstallationListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls, which need to be signed with your own private key. Additionally, you can use the token you get from an Installation to authenticate the registration of a new device.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "installation" ]
      },
      "post" : {
        "description" : "This is the only API call that does not require you to use the \"X-Bunq-Client-Authentication\" and \"X-Bunq-Client-Signature\" headers.\n You provide the server with the public part of the key pair that you are going to use to create the value of the signature header for all future API calls. The server creates an installation for you. Store the Installation Token and ServerPublicKey from the response. This token is used in the \"X-Bunq-Client-Authentication\" header for the creation of a DeviceServer and SessionServer.",
        "operationId" : "CREATE_Installation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Installation"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstallationCreate"
                }
              }
            },
            "description" : "Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls, which need to be signed with your own private key. Additionally, you can use the token you get from an Installation to authenticate the registration of a new device.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "installation" ]
      }
    },
    "/installation/{installationID}/server-public-key" : {
      "get" : {
        "description" : "Show the ServerPublicKey for this Installation.",
        "operationId" : "List_all_ServerPublicKey_for_Installation",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "installationID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InstallationServerPublicKeyListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Using /installation/_/server-public-key you can request the ServerPublicKey again. This is done by referring to the id of the Installation.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "server-public-key" ]
      }
    },
    "/installation/{itemId}" : {
      "get" : {
        "description" : "You must have an active session to make this call. This call is used to check whether the Id you provide is the Id of your current installation or not.",
        "operationId" : "READ_Installation",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstallationRead"
                }
              }
            },
            "description" : "Installation is used to tell the server about the public key of your key pair. The server uses this key to verify your subsequent calls, which need to be signed with your own private key. Additionally, you can use the token you get from an Installation to authenticate the registration of a new device.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "installation" ]
      }
    },
    "/payment-service-provider-credential" : {
      "post" : {
        "description" : "Register a Payment Service Provider and provide credentials",
        "operationId" : "CREATE_PaymentServiceProviderCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentServiceProviderCredential"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentServiceProviderCredentialCreate"
                }
              }
            },
            "description" : "Register a Payment Service Provider and provide credentials",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-service-provider-credential" ]
      }
    },
    "/payment-service-provider-credential/{itemId}" : {
      "get" : {
        "description" : "Register a Payment Service Provider and provide credentials",
        "operationId" : "READ_PaymentServiceProviderCredential",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentServiceProviderCredentialRead"
                }
              }
            },
            "description" : "Register a Payment Service Provider and provide credentials",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-service-provider-credential" ]
      }
    },
    "/place-lookup/{place-lookupID}/photo/{photoID}/content" : {
      "get" : {
        "description" : "View endpoint for place opening periods.",
        "operationId" : "List_all_Content_for_PlaceLookup_Photo",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "place-lookupID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "photoID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PlacePhotoLookupContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "View endpoint for place opening periods.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/sandbox-user-company" : {
      "post" : {
        "description" : "Used to create a sandbox userCompany.",
        "operationId" : "CREATE_SandboxUserCompany",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SandboxUserCompany"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SandboxUserCompanyCreate"
                }
              }
            },
            "description" : "Used to create a sandbox userCompany.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "sandbox-user-company" ]
      }
    },
    "/sandbox-user-person" : {
      "post" : {
        "description" : "Used to create a sandbox userPerson.",
        "operationId" : "CREATE_SandboxUserPerson",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SandboxUserPerson"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SandboxUserPersonCreate"
                }
              }
            },
            "description" : "Used to create a sandbox userPerson.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "sandbox-user-person" ]
      }
    },
    "/server-error" : {
      "post" : {
        "description" : "An endpoint that will always throw an error.",
        "operationId" : "CREATE_ServerError",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerError"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerErrorCreate"
                }
              }
            },
            "description" : "An endpoint that will always throw an error.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "server-error" ]
      }
    },
    "/session-server" : {
      "post" : {
        "description" : "Create a new session for a DeviceServer. Provide the Installation token in the \"X-Bunq-Client-Authentication\" header. And don't forget to create the \"X-Bunq-Client-Signature\" header. The response contains a Session token that should be used for as the \"X-Bunq-Client-Authentication\" header for all future API calls. The ip address making this call needs to match the ip address bound to your API key.",
        "operationId" : "CREATE_SessionServer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SessionServer"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionServerCreate"
                }
              }
            },
            "description" : "Once you have created an Installation and a DeviceServer with that Installation, then you are ready to start a session! A session expires after the same amount of time you have set for Auto Logout in your user account. By default this is 1 week. If a request is made 30 seconds before a session expires, it will be extended from that moment by your auto logout time, but never by more than 5 minutes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "session-server" ]
      }
    },
    "/session/{itemId}" : {
      "delete" : {
        "description" : "Deletes the current session.",
        "operationId" : "DELETE_Session",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionDelete"
                }
              }
            },
            "description" : "Endpoint for operations over the current session.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "session" ]
      }
    },
    "/user" : {
      "get" : {
        "description" : "Get a collection of all available users.",
        "operationId" : "List_all_User",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/UserListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Using this call you can retrieve information of the user you are logged in as. This includes your user id, which is referred to in endpoints.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "user" ]
      }
    },
    "/user-company/{itemId}" : {
      "get" : {
        "description" : "Get a specific company.",
        "operationId" : "READ_UserCompany",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCompanyRead"
                }
              }
            },
            "description" : "With UserCompany you can retrieve information regarding the authenticated UserCompany and update specific fields.<br/><br/>Notification filters can be set on a UserCompany level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "user-company" ]
      },
      "put" : {
        "description" : "Modify a specific company's data.",
        "operationId" : "UPDATE_UserCompany",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserCompany"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCompanyUpdate"
                }
              }
            },
            "description" : "With UserCompany you can retrieve information regarding the authenticated UserCompany and update specific fields.<br/><br/>Notification filters can be set on a UserCompany level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "user-company" ]
      }
    },
    "/user-company/{user-companyID}/name" : {
      "get" : {
        "description" : "Return all the known (trade) names for a specific user company.",
        "operationId" : "List_all_Name_for_UserCompany",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "user-companyID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/UserCompanyNameListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for getting all the known (trade) names for a user company. This is needed for updating the user name, as we only accept legal or trade names.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "name" ]
      }
    },
    "/user-payment-service-provider/{itemId}" : {
      "get" : {
        "description" : "Used to view UserPaymentServiceProvider for session creation.",
        "operationId" : "READ_UserPaymentServiceProvider",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPaymentServiceProviderRead"
                }
              }
            },
            "description" : "Used to view UserPaymentServiceProvider for session creation.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "user-payment-service-provider" ]
      }
    },
    "/user-person/{itemId}" : {
      "get" : {
        "description" : "Get a specific person.",
        "operationId" : "READ_UserPerson",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPersonRead"
                }
              }
            },
            "description" : "With UserPerson you can retrieve information regarding the authenticated UserPerson and update specific fields.<br/><br/>Notification filters can be set on a UserPerson level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "user-person" ]
      },
      "put" : {
        "description" : "Modify a specific person object's data.",
        "operationId" : "UPDATE_UserPerson",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPerson"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPersonUpdate"
                }
              }
            },
            "description" : "With UserPerson you can retrieve information regarding the authenticated UserPerson and update specific fields.<br/><br/>Notification filters can be set on a UserPerson level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "user-person" ]
      }
    },
    "/user/{itemId}" : {
      "get" : {
        "description" : "Get a specific user.",
        "operationId" : "READ_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserRead"
                }
              }
            },
            "description" : "Using this call you can retrieve information of the user you are logged in as. This includes your user id, which is referred to in endpoints.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "user" ]
      }
    },
    "/user/{userID}/attachment/{attachmentID}/content" : {
      "get" : {
        "description" : "Get the raw content of a specific attachment.",
        "operationId" : "List_all_Content_for_User_Attachment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "attachmentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentUserContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of a user attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/attachment/{itemId}" : {
      "get" : {
        "description" : "Get a specific attachment. The header of the response contains the content-type of the attachment.",
        "operationId" : "READ_Attachment_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentUserRead"
                }
              }
            },
            "description" : "This call is used to upload an attachment that is accessible only by a specific user. This can be used for example to upload passport scans or other documents. Attachments supported are png, jpg and gif.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "attachment" ]
      }
    },
    "/user/{userID}/billing-contract-subscription" : {
      "get" : {
        "description" : "Get all subscription billing contract for the authenticated user.",
        "operationId" : "List_all_BillingContractSubscription_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/BillingContractSubscriptionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Show the subscription billing contract for the authenticated user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "billing-contract-subscription" ]
      }
    },
    "/user/{userID}/bunqme-fundraiser-profile" : {
      "get" : {
        "description" : "bunq.me public profile of the user.",
        "operationId" : "List_all_BunqmeFundraiserProfile_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/BunqMeFundraiserProfileUserListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "bunq.me public profile of the user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-fundraiser-profile" ]
      }
    },
    "/user/{userID}/bunqme-fundraiser-profile/{itemId}" : {
      "get" : {
        "description" : "bunq.me public profile of the user.",
        "operationId" : "READ_BunqmeFundraiserProfile_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BunqMeFundraiserProfileUserRead"
                }
              }
            },
            "description" : "bunq.me public profile of the user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-fundraiser-profile" ]
      }
    },
    "/user/{userID}/card" : {
      "get" : {
        "description" : "Return all the cards available to the user.",
        "operationId" : "List_all_Card_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CardListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for retrieving details for the cards the user has access to.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card" ]
      }
    },
    "/user/{userID}/card-batch" : {
      "post" : {
        "description" : "Used to update multiple cards in a batch.",
        "operationId" : "CREATE_CardBatch_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CardBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardBatchCreate"
                }
              }
            },
            "description" : "Used to update multiple cards in a batch.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card-batch" ]
      }
    },
    "/user/{userID}/card-batch-replace" : {
      "post" : {
        "description" : "Used to replace multiple cards in a batch.",
        "operationId" : "CREATE_CardBatchReplace_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CardBatchReplace"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardBatchReplaceCreate"
                }
              }
            },
            "description" : "Used to replace multiple cards in a batch.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card-batch-replace" ]
      }
    },
    "/user/{userID}/card-credit" : {
      "post" : {
        "description" : "Create a new credit card request.",
        "operationId" : "CREATE_CardCredit_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CardCredit"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardCreditCreate"
                }
              }
            },
            "description" : "With bunq it is possible to order credit cards that can then be connected with each one of the monetary accounts the user has access to (including connected accounts).",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card-credit" ]
      }
    },
    "/user/{userID}/card-debit" : {
      "post" : {
        "description" : "Create a new debit card request.",
        "operationId" : "CREATE_CardDebit_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CardDebit"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardDebitCreate"
                }
              }
            },
            "description" : "With bunq it is possible to order debit cards that can then be connected with each one of the monetary accounts the user has access to (including connected accounts).",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card-debit" ]
      }
    },
    "/user/{userID}/card-name" : {
      "get" : {
        "description" : "Return all the accepted card names for a specific user.",
        "operationId" : "List_all_CardName_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CardNameListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for getting all the accepted card names for a user. As bunq do not allow total freedom in choosing the name that is going to be printed on the card, the following formats are accepted: Name Surname, N. Surname, N Surname or Surname.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card-name" ]
      }
    },
    "/user/{userID}/card/{cardID}/export-statement-card" : {
      "get" : {
        "description" : "Used to create new and read existing card statement exports. Statement exports can be created in either CSV or PDF file format.",
        "operationId" : "List_all_ExportStatementCard_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportStatementCardListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to create new and read existing card statement exports. Statement exports can be created in either CSV or PDF file format.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card" ]
      }
    },
    "/user/{userID}/card/{cardID}/export-statement-card-csv" : {
      "get" : {
        "description" : "Used to serialize ExportStatementCardCsv",
        "operationId" : "List_all_ExportStatementCardCsv_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportStatementCardCsvListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardCsv",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-csv" ]
      },
      "post" : {
        "description" : "Used to serialize ExportStatementCardCsv",
        "operationId" : "CREATE_ExportStatementCardCsv_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportStatementCardCsv"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCardCsvCreate"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardCsv",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-csv" ]
      }
    },
    "/user/{userID}/card/{cardID}/export-statement-card-csv/{itemId}" : {
      "delete" : {
        "description" : "Used to serialize ExportStatementCardCsv",
        "operationId" : "DELETE_ExportStatementCardCsv_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCardCsvDelete"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardCsv",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-csv" ]
      },
      "get" : {
        "description" : "Used to serialize ExportStatementCardCsv",
        "operationId" : "READ_ExportStatementCardCsv_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCardCsvRead"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardCsv",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-csv" ]
      }
    },
    "/user/{userID}/card/{cardID}/export-statement-card-pdf" : {
      "get" : {
        "description" : "Used to serialize ExportStatementCardPdf",
        "operationId" : "List_all_ExportStatementCardPdf_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportStatementCardPdfListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardPdf",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-pdf" ]
      },
      "post" : {
        "description" : "Used to serialize ExportStatementCardPdf",
        "operationId" : "CREATE_ExportStatementCardPdf_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportStatementCardPdf"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCardPdfCreate"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardPdf",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-pdf" ]
      }
    },
    "/user/{userID}/card/{cardID}/export-statement-card-pdf/{itemId}" : {
      "delete" : {
        "description" : "Used to serialize ExportStatementCardPdf",
        "operationId" : "DELETE_ExportStatementCardPdf_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCardPdfDelete"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardPdf",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-pdf" ]
      },
      "get" : {
        "description" : "Used to serialize ExportStatementCardPdf",
        "operationId" : "READ_ExportStatementCardPdf_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCardPdfRead"
                }
              }
            },
            "description" : "Used to serialize ExportStatementCardPdf",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card-pdf" ]
      }
    },
    "/user/{userID}/card/{cardID}/export-statement-card/{export-statement-cardID}/content" : {
      "get" : {
        "description" : "Fetch the raw content of a card statement export. The returned file format could be CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
        "operationId" : "List_all_Content_for_User_Card_ExportStatementCard",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "export-statement-cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportStatementCardContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of a card statement export. The returned file format could be CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/card/{cardID}/export-statement-card/{itemId}" : {
      "get" : {
        "description" : "Used to create new and read existing card statement exports. Statement exports can be created in either CSV or PDF file format.",
        "operationId" : "READ_ExportStatementCard_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCardRead"
                }
              }
            },
            "description" : "Used to create new and read existing card statement exports. Statement exports can be created in either CSV or PDF file format.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-statement-card" ]
      }
    },
    "/user/{userID}/card/{cardID}/generated-cvc2" : {
      "get" : {
        "description" : "Get all generated CVC2 codes for a card.",
        "operationId" : "List_all_GeneratedCvc2_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CardGeneratedCvc2Listing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for generating and retrieving a new CVC2 code.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "generated-cvc2" ]
      },
      "post" : {
        "description" : "Generate a new CVC2 code for a card.",
        "operationId" : "CREATE_GeneratedCvc2_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CardGeneratedCvc2"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardGeneratedCvc2Create"
                }
              }
            },
            "description" : "Endpoint for generating and retrieving a new CVC2 code.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "generated-cvc2" ]
      }
    },
    "/user/{userID}/card/{cardID}/generated-cvc2/{itemId}" : {
      "get" : {
        "description" : "Get the details for a specific generated CVC2 code.",
        "operationId" : "READ_GeneratedCvc2_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardGeneratedCvc2Read"
                }
              }
            },
            "description" : "Endpoint for generating and retrieving a new CVC2 code.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "generated-cvc2" ]
      },
      "put" : {
        "description" : "Endpoint for generating and retrieving a new CVC2 code.",
        "operationId" : "UPDATE_GeneratedCvc2_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CardGeneratedCvc2"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardGeneratedCvc2Update"
                }
              }
            },
            "description" : "Endpoint for generating and retrieving a new CVC2 code.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "generated-cvc2" ]
      }
    },
    "/user/{userID}/card/{cardID}/replace" : {
      "post" : {
        "description" : "Request a card replacement.",
        "operationId" : "CREATE_Replace_for_User_Card",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "cardID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CardReplace"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardReplaceCreate"
                }
              }
            },
            "description" : "It is possible to order a card replacement with the bunq API.<br/><br/>You can order up to one free card replacement per year. Additional replacement requests will be billed.<br/><br/>The card replacement will have the same expiry date and the same pricing as the old card, but it will have a new card number. You can change the description and optional the PIN through the card replacement endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "replace" ]
      }
    },
    "/user/{userID}/card/{itemId}" : {
      "get" : {
        "description" : "Return the details of a specific card.",
        "operationId" : "READ_Card_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardRead"
                }
              }
            },
            "description" : "Endpoint for retrieving details for the cards the user has access to.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card" ]
      },
      "put" : {
        "description" : "Update the card details. Allow to change pin code, status, limits, country permissions and the monetary account connected to the card. When the card has been received, it can be also activated through this endpoint.",
        "operationId" : "UPDATE_Card_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Card"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CardUpdate"
                }
              }
            },
            "description" : "Endpoint for retrieving details for the cards the user has access to.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "card" ]
      }
    },
    "/user/{userID}/certificate-pinned" : {
      "get" : {
        "description" : "List all the pinned certificate chain for the given user.",
        "operationId" : "List_all_CertificatePinned_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CertificatePinnedListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "certificate-pinned" ]
      },
      "post" : {
        "description" : "Pin the certificate chain.",
        "operationId" : "CREATE_CertificatePinned_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificatePinned"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatePinnedCreate"
                }
              }
            },
            "description" : "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "certificate-pinned" ]
      }
    },
    "/user/{userID}/certificate-pinned/{itemId}" : {
      "delete" : {
        "description" : "Remove the pinned certificate chain with the specific ID.",
        "operationId" : "DELETE_CertificatePinned_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatePinnedDelete"
                }
              }
            },
            "description" : "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "certificate-pinned" ]
      },
      "get" : {
        "description" : "Get the pinned certificate chain with the specified ID.",
        "operationId" : "READ_CertificatePinned_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatePinnedRead"
                }
              }
            },
            "description" : "This endpoint allow you to pin the certificate chains to your account. These certificate chains are used for SSL validation whenever a callback is initiated to one of your https callback urls.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "certificate-pinned" ]
      }
    },
    "/user/{userID}/challenge-request/{itemId}" : {
      "get" : {
        "description" : "Endpoint for apps to fetch a challenge request.",
        "operationId" : "READ_ChallengeRequest_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MasterCardIdentityCheckChallengeRequestUserRead"
                }
              }
            },
            "description" : "Endpoint for apps to fetch a challenge request.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "challenge-request" ]
      },
      "put" : {
        "description" : "Endpoint for apps to fetch a challenge request.",
        "operationId" : "UPDATE_ChallengeRequest_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MasterCardIdentityCheckChallengeRequestUser"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MasterCardIdentityCheckChallengeRequestUserUpdate"
                }
              }
            },
            "description" : "Endpoint for apps to fetch a challenge request.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "challenge-request" ]
      }
    },
    "/user/{userID}/chat-conversation/{chat-conversationID}/attachment/{attachmentID}/content" : {
      "get" : {
        "description" : "Get the raw content of a specific attachment.",
        "operationId" : "List_all_Content_for_User_ChatConversation_Attachment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "chat-conversationID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "attachmentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentConversationContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of an attachment with given ID. The raw content is the base64 of a file, without any JSON wrapping.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/company" : {
      "get" : {
        "description" : "Create and manage companies.",
        "operationId" : "List_all_Company_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CompanyListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Create and manage companies.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "company" ]
      },
      "post" : {
        "description" : "Create and manage companies.",
        "operationId" : "CREATE_Company_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Company"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyCreate"
                }
              }
            },
            "description" : "Create and manage companies.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "company" ]
      }
    },
    "/user/{userID}/company/{itemId}" : {
      "get" : {
        "description" : "Create and manage companies.",
        "operationId" : "READ_Company_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyRead"
                }
              }
            },
            "description" : "Create and manage companies.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "company" ]
      },
      "put" : {
        "description" : "Create and manage companies.",
        "operationId" : "UPDATE_Company_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Company"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompanyUpdate"
                }
              }
            },
            "description" : "Create and manage companies.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "company" ]
      }
    },
    "/user/{userID}/confirmation-of-funds" : {
      "post" : {
        "description" : "Used to confirm availability of funds on an account.",
        "operationId" : "CREATE_ConfirmationOfFunds_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfirmationOfFunds"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfirmationOfFundsCreate"
                }
              }
            },
            "description" : "Used to confirm availability of funds on an account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "confirmation-of-funds" ]
      }
    },
    "/user/{userID}/credential-password-ip" : {
      "get" : {
        "description" : "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
        "operationId" : "List_all_CredentialPasswordIp_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/UserCredentialPasswordIpListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "credential-password-ip" ]
      }
    },
    "/user/{userID}/credential-password-ip/{credential-password-ipID}/ip" : {
      "get" : {
        "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId" : "List_all_Ip_for_User_CredentialPasswordIp",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "credential-password-ipID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PermittedIpListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "ip" ]
      },
      "post" : {
        "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId" : "CREATE_Ip_for_User_CredentialPasswordIp",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "credential-password-ipID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermittedIp"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermittedIpCreate"
                }
              }
            },
            "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "ip" ]
      }
    },
    "/user/{userID}/credential-password-ip/{credential-password-ipID}/ip/{itemId}" : {
      "get" : {
        "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId" : "READ_Ip_for_User_CredentialPasswordIp",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "credential-password-ipID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermittedIpRead"
                }
              }
            },
            "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "ip" ]
      },
      "put" : {
        "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
        "operationId" : "UPDATE_Ip_for_User_CredentialPasswordIp",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "credential-password-ipID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PermittedIp"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PermittedIpUpdate"
                }
              }
            },
            "description" : "Manage the IPs which may be used for a credential of a user for server authentication.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "ip" ]
      }
    },
    "/user/{userID}/credential-password-ip/{itemId}" : {
      "get" : {
        "description" : "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
        "operationId" : "READ_CredentialPasswordIp_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserCredentialPasswordIpRead"
                }
              }
            },
            "description" : "Create a credential of a user for server authentication, or delete the credential of a user for server authentication.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "credential-password-ip" ]
      }
    },
    "/user/{userID}/currency-cloud-beneficiary" : {
      "get" : {
        "description" : "Endpoint to manage CurrencyCloud beneficiaries.",
        "operationId" : "List_all_CurrencyCloudBeneficiary_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CurrencyCloudBeneficiaryListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint to manage CurrencyCloud beneficiaries.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-cloud-beneficiary" ]
      },
      "post" : {
        "description" : "Endpoint to manage CurrencyCloud beneficiaries.",
        "operationId" : "CREATE_CurrencyCloudBeneficiary_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyCloudBeneficiary"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCloudBeneficiaryCreate"
                }
              }
            },
            "description" : "Endpoint to manage CurrencyCloud beneficiaries.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-cloud-beneficiary" ]
      }
    },
    "/user/{userID}/currency-cloud-beneficiary-requirement" : {
      "get" : {
        "description" : "Endpoint to list requirements for CurrencyCloud beneficiaries.",
        "operationId" : "List_all_CurrencyCloudBeneficiaryRequirement_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CurrencyCloudBeneficiaryRequirementListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint to list requirements for CurrencyCloud beneficiaries.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-cloud-beneficiary-requirement" ]
      }
    },
    "/user/{userID}/currency-cloud-beneficiary/{itemId}" : {
      "get" : {
        "description" : "Endpoint to manage CurrencyCloud beneficiaries.",
        "operationId" : "READ_CurrencyCloudBeneficiary_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCloudBeneficiaryRead"
                }
              }
            },
            "description" : "Endpoint to manage CurrencyCloud beneficiaries.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-cloud-beneficiary" ]
      }
    },
    "/user/{userID}/event" : {
      "get" : {
        "description" : "Get a collection of events for a given user. You can add query the parameters monetary_account_id, status and/or display_user_event to filter the response. When monetary_account_id={id,id} is provided only events that relate to these monetary account ids are returned. When status={AWAITING_REPLY/FINALIZED} is provided the response only contains events with the status AWAITING_REPLY or FINALIZED. When display_user_event={true/false} is set to false user events are excluded from the response, when not provided user events are displayed. User events are events that are not related to a monetary account (for example: connect invites).",
        "operationId" : "List_all_Event_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/EventListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to view events. Events are automatically created and contain information about everything that happens to your bunq account. In the bunq app events are shown in your 'overview'. Examples of when events are created or modified: payment sent, payment received, request for payment received or connect invite received.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "event" ]
      }
    },
    "/user/{userID}/event/{itemId}" : {
      "get" : {
        "description" : "Get a specific event for a given user.",
        "operationId" : "READ_Event_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventRead"
                }
              }
            },
            "description" : "Used to view events. Events are automatically created and contain information about everything that happens to your bunq account. In the bunq app events are shown in your 'overview'. Examples of when events are created or modified: payment sent, payment received, request for payment received or connect invite received.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "event" ]
      }
    },
    "/user/{userID}/export-annual-overview" : {
      "get" : {
        "description" : "List all the annual overviews for a user.",
        "operationId" : "List_all_ExportAnnualOverview_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportAnnualOverviewListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-annual-overview" ]
      },
      "post" : {
        "description" : "Create a new annual overview for a specific year. An overview can be generated only for a past year.",
        "operationId" : "CREATE_ExportAnnualOverview_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportAnnualOverview"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportAnnualOverviewCreate"
                }
              }
            },
            "description" : "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-annual-overview" ]
      }
    },
    "/user/{userID}/export-annual-overview/{export-annual-overviewID}/content" : {
      "get" : {
        "description" : "Used to retrieve the raw content of an annual overview.",
        "operationId" : "List_all_Content_for_User_ExportAnnualOverview",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "export-annual-overviewID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportAnnualOverviewContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of an annual overview. The annual overview is always in PDF format. Doc won't display the response of a request to get the content of an annual overview.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/export-annual-overview/{itemId}" : {
      "delete" : {
        "description" : "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
        "operationId" : "DELETE_ExportAnnualOverview_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportAnnualOverviewDelete"
                }
              }
            },
            "description" : "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-annual-overview" ]
      },
      "get" : {
        "description" : "Get an annual overview for a user by its id.",
        "operationId" : "READ_ExportAnnualOverview_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportAnnualOverviewRead"
                }
              }
            },
            "description" : "Used to create new and read existing annual overviews of all the user's monetary accounts. Once created, annual overviews can be downloaded in PDF format via the 'export-annual-overview/{id}/content' endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-annual-overview" ]
      }
    },
    "/user/{userID}/feature-announcement/{itemId}" : {
      "get" : {
        "description" : "view for updating the feature display.",
        "operationId" : "READ_FeatureAnnouncement_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeatureAnnouncementRead"
                }
              }
            },
            "description" : "view for updating the feature display.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "feature-announcement" ]
      }
    },
    "/user/{userID}/insight-preference-date" : {
      "get" : {
        "description" : "Used to allow users to set insight/budget preferences.",
        "operationId" : "List_all_InsightPreferenceDate_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InsightPreferenceDateListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to allow users to set insight/budget preferences.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "insight-preference-date" ]
      }
    },
    "/user/{userID}/insights" : {
      "get" : {
        "description" : "Used to get insights about transactions between given time range.",
        "operationId" : "List_all_Insights_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InsightListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to get insights about transactions between given time range.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "insights" ]
      }
    },
    "/user/{userID}/insights-search" : {
      "get" : {
        "description" : "Used to get events based on time and insight category.",
        "operationId" : "List_all_InsightsSearch_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InsightEventListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to get events based on time and insight category.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "insights-search" ]
      }
    },
    "/user/{userID}/invoice" : {
      "get" : {
        "description" : "Used to list bunq invoices by user.",
        "operationId" : "List_all_Invoice_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceByUserListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to list bunq invoices by user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "invoice" ]
      }
    },
    "/user/{userID}/invoice/{invoiceID}/pdf-content" : {
      "get" : {
        "description" : "Get a PDF export of an invoice.",
        "operationId" : "List_all_PdfContent_for_User_Invoice",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "invoiceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceExportPdfContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Get a PDF export of an invoice.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "pdf-content" ]
      }
    },
    "/user/{userID}/invoice/{itemId}" : {
      "get" : {
        "description" : "Used to list bunq invoices by user.",
        "operationId" : "READ_Invoice_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceByUserRead"
                }
              }
            },
            "description" : "Used to list bunq invoices by user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "invoice" ]
      }
    },
    "/user/{userID}/legal-name" : {
      "get" : {
        "description" : "Endpoint for getting available legal names that can be used by the user.",
        "operationId" : "List_all_LegalName_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/UserLegalNameListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for getting available legal names that can be used by the user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "legal-name" ]
      }
    },
    "/user/{userID}/limit" : {
      "get" : {
        "description" : "Get all limits for the authenticated user.",
        "operationId" : "List_all_Limit_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CustomerLimitListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Show the limits for the authenticated user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "limit" ]
      }
    },
    "/user/{userID}/monetary-account" : {
      "get" : {
        "description" : "Get a collection of all your MonetaryAccounts.",
        "operationId" : "List_all_MonetaryAccount_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MonetaryAccountListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to show the MonetaryAccounts that you can access. Currently the only MonetaryAccount type is MonetaryAccountBank. See also: monetary-account-bank.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/2/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account" ]
      }
    },
    "/user/{userID}/monetary-account-bank" : {
      "get" : {
        "description" : "Gets a listing of all MonetaryAccountBanks of a given user.",
        "operationId" : "List_all_MonetaryAccountBank_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MonetaryAccountBankListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-bank" ]
      },
      "post" : {
        "description" : "Create new MonetaryAccountBank.",
        "operationId" : "CREATE_MonetaryAccountBank_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonetaryAccountBank"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountBankCreate"
                }
              }
            },
            "description" : "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-bank" ]
      }
    },
    "/user/{userID}/monetary-account-bank/{itemId}" : {
      "get" : {
        "description" : "Get a specific MonetaryAccountBank.",
        "operationId" : "READ_MonetaryAccountBank_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountBankRead"
                }
              }
            },
            "description" : "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-bank" ]
      },
      "put" : {
        "description" : "Update a specific existing MonetaryAccountBank.",
        "operationId" : "UPDATE_MonetaryAccountBank_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonetaryAccountBank"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountBankUpdate"
                }
              }
            },
            "description" : "With MonetaryAccountBank you can create a new bank account, retrieve information regarding your existing MonetaryAccountBanks and update specific fields of an existing MonetaryAccountBank. Examples of fields that can be updated are the description, the daily limit and the avatar of the account.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/1/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-bank" ]
      }
    },
    "/user/{userID}/monetary-account-external" : {
      "get" : {
        "description" : "Endpoint for managing monetary accounts which are connected to external services.",
        "operationId" : "List_all_MonetaryAccountExternal_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MonetaryAccountExternalListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for managing monetary accounts which are connected to external services.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-external" ]
      }
    },
    "/user/{userID}/monetary-account-external/{itemId}" : {
      "get" : {
        "description" : "Endpoint for managing monetary accounts which are connected to external services.",
        "operationId" : "READ_MonetaryAccountExternal_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountExternalRead"
                }
              }
            },
            "description" : "Endpoint for managing monetary accounts which are connected to external services.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-external" ]
      }
    },
    "/user/{userID}/monetary-account-joint" : {
      "get" : {
        "description" : "The endpoint for joint monetary accounts.",
        "operationId" : "List_all_MonetaryAccountJoint_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MonetaryAccountJointListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "The endpoint for joint monetary accounts.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-joint" ]
      },
      "post" : {
        "description" : "The endpoint for joint monetary accounts.",
        "operationId" : "CREATE_MonetaryAccountJoint_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonetaryAccountJoint"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountJointCreate"
                }
              }
            },
            "description" : "The endpoint for joint monetary accounts.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-joint" ]
      }
    },
    "/user/{userID}/monetary-account-joint/{itemId}" : {
      "get" : {
        "description" : "The endpoint for joint monetary accounts.",
        "operationId" : "READ_MonetaryAccountJoint_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountJointRead"
                }
              }
            },
            "description" : "The endpoint for joint monetary accounts.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-joint" ]
      },
      "put" : {
        "description" : "The endpoint for joint monetary accounts.",
        "operationId" : "UPDATE_MonetaryAccountJoint_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonetaryAccountJoint"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountJointUpdate"
                }
              }
            },
            "description" : "The endpoint for joint monetary accounts.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-joint" ]
      }
    },
    "/user/{userID}/monetary-account-savings" : {
      "get" : {
        "description" : "Gets a listing of all MonetaryAccountSavingss of a given user.",
        "operationId" : "List_all_MonetaryAccountSavings_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MonetaryAccountSavingsListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "With MonetaryAccountSavings you can create a new savings account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-savings" ]
      },
      "post" : {
        "description" : "Create new MonetaryAccountSavings.",
        "operationId" : "CREATE_MonetaryAccountSavings_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonetaryAccountSavings"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountSavingsCreate"
                }
              }
            },
            "description" : "With MonetaryAccountSavings you can create a new savings account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-savings" ]
      }
    },
    "/user/{userID}/monetary-account-savings/{itemId}" : {
      "get" : {
        "description" : "Get a specific MonetaryAccountSavings.",
        "operationId" : "READ_MonetaryAccountSavings_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountSavingsRead"
                }
              }
            },
            "description" : "With MonetaryAccountSavings you can create a new savings account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-savings" ]
      },
      "put" : {
        "description" : "Update a specific existing MonetaryAccountSavings.",
        "operationId" : "UPDATE_MonetaryAccountSavings_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonetaryAccountSavings"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountSavingsUpdate"
                }
              }
            },
            "description" : "With MonetaryAccountSavings you can create a new savings account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account-savings" ]
      }
    },
    "/user/{userID}/monetary-account/{itemId}" : {
      "get" : {
        "description" : "Get a specific MonetaryAccount.",
        "operationId" : "READ_MonetaryAccount_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonetaryAccountRead"
                }
              }
            },
            "description" : "Used to show the MonetaryAccounts that you can access. Currently the only MonetaryAccount type is MonetaryAccountBank. See also: monetary-account-bank.<br/><br/>Notification filters can be set on a monetary account level to receive callbacks. For more information check the <a href=\"/api/2/page/callbacks\">dedicated callbacks page</a>.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "monetary-account" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/attachment" : {
      "post" : {
        "description" : "Create a new monetary account attachment. Create a POST request with a payload that contains the binary representation of the file, without any JSON wrapping. Make sure you define the MIME type (i.e. image/jpeg) in the Content-Type header. You are required to provide a description of the attachment using the X-Bunq-Attachment-Description header.",
        "operationId" : "CREATE_Attachment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachmentMonetaryAccount"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentMonetaryAccountCreate"
                }
              }
            },
            "description" : "This call is used to upload an attachment that can be referenced to in payment requests and payments sent from a specific monetary account. Attachments supported are png, jpg and gif.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/attachment/{attachmentID}/content" : {
      "get" : {
        "description" : "Get the raw content of a specific attachment.",
        "operationId" : "List_all_Content_for_User_MonetaryAccount_Attachment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "attachmentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentMonetaryAccountContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of a monetary account attachment with given ID. The raw content is the binary representation of a file, without any JSON wrapping.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentBunqMeFundraiserResultListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentBunqMeFundraiserResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBunqMeFundraiserResultCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBunqMeFundraiserResultDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBunqMeFundraiserResultRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentBunqMeFundraiserResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBunqMeFundraiserResultUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextBunqMeFundraiserResultListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextBunqMeFundraiserResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBunqMeFundraiserResultCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{bunqme-fundraiser-resultID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBunqMeFundraiserResultDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBunqMeFundraiserResultRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_BunqmeFundraiserResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "bunqme-fundraiser-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextBunqMeFundraiserResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBunqMeFundraiserResultUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-fundraiser-result/{itemId}" : {
      "get" : {
        "description" : "bunq.me fundraiser result containing all payments.",
        "operationId" : "READ_BunqmeFundraiserResult_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BunqMeFundraiserResultRead"
                }
              }
            },
            "description" : "bunq.me fundraiser result containing all payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-fundraiser-result" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab" : {
      "get" : {
        "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId" : "List_all_BunqmeTab_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/BunqMeTabListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-tab" ]
      },
      "post" : {
        "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId" : "CREATE_BunqmeTab_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BunqMeTab"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BunqMeTabCreate"
                }
              }
            },
            "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-tab" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab-result-response/{itemId}" : {
      "get" : {
        "description" : "Used to view bunq.me TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
        "operationId" : "READ_BunqmeTabResultResponse_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BunqMeTabResultResponseRead"
                }
              }
            },
            "description" : "Used to view bunq.me TabResultResponse objects belonging to a tab. A TabResultResponse is an object that holds details on a tab which has been paid from the provided monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-tab-result-response" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/bunqme-tab/{itemId}" : {
      "get" : {
        "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId" : "READ_BunqmeTab_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BunqMeTabRead"
                }
              }
            },
            "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-tab" ]
      },
      "put" : {
        "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
        "operationId" : "UPDATE_BunqmeTab_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BunqMeTab"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BunqMeTabUpdate"
                }
              }
            },
            "description" : "bunq.me tabs allows you to create a payment request and share the link through e-mail, chat, etc. Multiple persons are able to respond to the payment request and pay through bunq, iDeal or SOFORT.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "bunqme-tab" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/currency-cloud-payment-quote" : {
      "post" : {
        "description" : "Endpoint for managing currency conversions.",
        "operationId" : "CREATE_CurrencyCloudPaymentQuote_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyCloudPaymentQuote"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyCloudPaymentQuoteCreate"
                }
              }
            },
            "description" : "Endpoint for managing currency conversions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-cloud-payment-quote" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/currency-conversion" : {
      "get" : {
        "description" : "Endpoint for managing currency conversions.",
        "operationId" : "List_all_CurrencyConversion_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/CurrencyConversionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for managing currency conversions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-conversion" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/currency-conversion-quote" : {
      "post" : {
        "description" : "Endpoint to create a quote for currency conversions.",
        "operationId" : "CREATE_CurrencyConversionQuote_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyConversionQuote"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyConversionQuoteCreate"
                }
              }
            },
            "description" : "Endpoint to create a quote for currency conversions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-conversion-quote" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/currency-conversion-quote/{itemId}" : {
      "get" : {
        "description" : "Endpoint to create a quote for currency conversions.",
        "operationId" : "READ_CurrencyConversionQuote_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyConversionQuoteRead"
                }
              }
            },
            "description" : "Endpoint to create a quote for currency conversions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-conversion-quote" ]
      },
      "put" : {
        "description" : "Endpoint to create a quote for currency conversions.",
        "operationId" : "UPDATE_CurrencyConversionQuote_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrencyConversionQuote"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyConversionQuoteUpdate"
                }
              }
            },
            "description" : "Endpoint to create a quote for currency conversions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-conversion-quote" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/currency-conversion/{itemId}" : {
      "get" : {
        "description" : "Endpoint for managing currency conversions.",
        "operationId" : "READ_CurrencyConversion_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrencyConversionRead"
                }
              }
            },
            "description" : "Endpoint for managing currency conversions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "currency-conversion" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement" : {
      "get" : {
        "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId" : "List_all_CustomerStatement_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportStatementListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "customer-statement" ]
      },
      "post" : {
        "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId" : "CREATE_CustomerStatement_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportStatement"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementCreate"
                }
              }
            },
            "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "customer-statement" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement/{customer-statementID}/content" : {
      "get" : {
        "description" : "Fetch the raw content of a statement export. The returned file format could be MT940, CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
        "operationId" : "List_all_Content_for_User_MonetaryAccount_CustomerStatement",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "customer-statementID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportStatementContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of a statement export. The returned file format could be MT940, CSV or PDF depending on the statement format specified during the statement creation. The doc won't display the response of a request to get the content of a statement export.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/customer-statement/{itemId}" : {
      "delete" : {
        "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId" : "DELETE_CustomerStatement_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementDelete"
                }
              }
            },
            "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "customer-statement" ]
      },
      "get" : {
        "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
        "operationId" : "READ_CustomerStatement_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementRead"
                }
              }
            },
            "description" : "Used to create new and read existing statement exports. Statement exports can be created in either CSV, MT940 or PDF file format.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "customer-statement" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment" : {
      "get" : {
        "description" : "Get a listing of all DraftPayments from a given MonetaryAccount.",
        "operationId" : "List_all_DraftPayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/DraftPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "draft-payment" ]
      },
      "post" : {
        "description" : "Create a new DraftPayment.",
        "operationId" : "CREATE_DraftPayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftPaymentCreate"
                }
              }
            },
            "description" : "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "draft-payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentDraftPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentDraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentDraftPaymentCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentDraftPaymentDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentDraftPaymentRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentDraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentDraftPaymentUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextDraftPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextDraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextDraftPaymentCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{draft-paymentID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextDraftPaymentDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextDraftPaymentRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_DraftPayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "draft-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextDraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextDraftPaymentUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/draft-payment/{itemId}" : {
      "get" : {
        "description" : "Get a specific DraftPayment.",
        "operationId" : "READ_DraftPayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftPaymentRead"
                }
              }
            },
            "description" : "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "draft-payment" ]
      },
      "put" : {
        "description" : "Update a DraftPayment.",
        "operationId" : "UPDATE_DraftPayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DraftPaymentUpdate"
                }
              }
            },
            "description" : "A DraftPayment is like a regular Payment, but it needs to be accepted by the sending party before the actual Payment is done.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "draft-payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/event/{eventID}/statement" : {
      "post" : {
        "description" : "Used to create a statement export of a single payment.",
        "operationId" : "CREATE_Statement_for_User_MonetaryAccount_Event",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "eventID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportStatementPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementPaymentCreate"
                }
              }
            },
            "description" : "Used to create a statement export of a single payment.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "statement" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/event/{eventID}/statement/{itemId}" : {
      "get" : {
        "description" : "Used to create a statement export of a single payment.",
        "operationId" : "READ_Statement_for_User_MonetaryAccount_Event",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "eventID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportStatementPaymentRead"
                }
              }
            },
            "description" : "Used to create a statement export of a single payment.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "statement" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/event/{eventID}/statement/{statementID}/content" : {
      "get" : {
        "description" : "Fetch the raw content of a payment statement export.",
        "operationId" : "List_all_Content_for_User_MonetaryAccount_Event_Statement",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "eventID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "statementID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportStatementPaymentContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of a payment statement export.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/export-rib" : {
      "get" : {
        "description" : "List all the RIBs for a monetary account.",
        "operationId" : "List_all_ExportRib_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportRibListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to create new and read existing RIBs of a monetary account",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-rib" ]
      },
      "post" : {
        "description" : "Create a new RIB.",
        "operationId" : "CREATE_ExportRib_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportRib"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportRibCreate"
                }
              }
            },
            "description" : "Used to create new and read existing RIBs of a monetary account",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-rib" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/export-rib/{export-ribID}/content" : {
      "get" : {
        "description" : "Used to retrieve the raw content of an RIB.",
        "operationId" : "List_all_Content_for_User_MonetaryAccount_ExportRib",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "export-ribID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ExportRibContentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Fetch the raw content of an RIB. The RIB is always in PDF format.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "content" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/export-rib/{itemId}" : {
      "delete" : {
        "description" : "Used to create new and read existing RIBs of a monetary account",
        "operationId" : "DELETE_ExportRib_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportRibDelete"
                }
              }
            },
            "description" : "Used to create new and read existing RIBs of a monetary account",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-rib" ]
      },
      "get" : {
        "description" : "Get a RIB for a monetary account by its id.",
        "operationId" : "READ_ExportRib_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportRibRead"
                }
              }
            },
            "description" : "Used to create new and read existing RIBs of a monetary account",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "export-rib" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction" : {
      "get" : {
        "description" : "View for requesting iDEAL transactions and polling their status.",
        "operationId" : "List_all_IdealMerchantTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/IdealMerchantTransactionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "View for requesting iDEAL transactions and polling their status.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "ideal-merchant-transaction" ]
      },
      "post" : {
        "description" : "View for requesting iDEAL transactions and polling their status.",
        "operationId" : "CREATE_IdealMerchantTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IdealMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdealMerchantTransactionCreate"
                }
              }
            },
            "description" : "View for requesting iDEAL transactions and polling their status.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "ideal-merchant-transaction" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentIdealMerchantTransactionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentIdealMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentIdealMerchantTransactionCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentIdealMerchantTransactionDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentIdealMerchantTransactionRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentIdealMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentIdealMerchantTransactionUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextIdealMerchantTransactionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextIdealMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextIdealMerchantTransactionCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{ideal-merchant-transactionID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextIdealMerchantTransactionDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextIdealMerchantTransactionRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_IdealMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "ideal-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextIdealMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextIdealMerchantTransactionUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/ideal-merchant-transaction/{itemId}" : {
      "get" : {
        "description" : "View for requesting iDEAL transactions and polling their status.",
        "operationId" : "READ_IdealMerchantTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IdealMerchantTransactionRead"
                }
              }
            },
            "description" : "View for requesting iDEAL transactions and polling their status.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "ideal-merchant-transaction" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/invoice" : {
      "get" : {
        "description" : "Used to view a bunq invoice.",
        "operationId" : "List_all_Invoice_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to view a bunq invoice.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "invoice" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/invoice/{itemId}" : {
      "get" : {
        "description" : "Used to view a bunq invoice.",
        "operationId" : "READ_Invoice_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceRead"
                }
              }
            },
            "description" : "Used to view a bunq invoice.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "invoice" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action" : {
      "get" : {
        "description" : "MasterCard transaction view.",
        "operationId" : "List_all_MastercardAction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MasterCardActionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "MasterCard transaction view.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "mastercard-action" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{itemId}" : {
      "get" : {
        "description" : "MasterCard transaction view.",
        "operationId" : "READ_MastercardAction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MasterCardActionRead"
                }
              }
            },
            "description" : "MasterCard transaction view.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "mastercard-action" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentMasterCardActionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentMasterCardAction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentMasterCardActionCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentMasterCardActionDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentMasterCardActionRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentMasterCardAction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentMasterCardActionUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextMasterCardActionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextMasterCardAction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextMasterCardActionCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextMasterCardActionDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextMasterCardActionRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextMasterCardAction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextMasterCardActionUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/mastercard-action/{mastercard-actionID}/payment" : {
      "get" : {
        "description" : "MasterCard transaction view.",
        "operationId" : "List_all_Payment_for_User_MonetaryAccount_MastercardAction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "mastercard-actionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MasterCardPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "MasterCard transaction view.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/notification-filter-url" : {
      "get" : {
        "description" : "Manage the url notification filters for a user.",
        "operationId" : "List_all_NotificationFilterUrl_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationFilterUrlMonetaryAccountListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Manage the url notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-url" ]
      },
      "post" : {
        "description" : "Manage the url notification filters for a user.",
        "operationId" : "CREATE_NotificationFilterUrl_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationFilterUrlMonetaryAccount"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationFilterUrlMonetaryAccountCreate"
                }
              }
            },
            "description" : "Manage the url notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-url" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment" : {
      "get" : {
        "description" : "Get a listing of all Payments performed on a given MonetaryAccount (incoming and outgoing).",
        "operationId" : "List_all_Payment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment" ]
      },
      "post" : {
        "description" : "Create a new Payment.",
        "operationId" : "CREATE_Payment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Payment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentCreate"
                }
              }
            },
            "description" : "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate" : {
      "get" : {
        "description" : "Manage a users automatic payment auto allocated settings.",
        "operationId" : "List_all_PaymentAutoAllocate_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentAutoAllocateListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Manage a users automatic payment auto allocated settings.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-auto-allocate" ]
      },
      "post" : {
        "description" : "Manage a users automatic payment auto allocated settings.",
        "operationId" : "CREATE_PaymentAutoAllocate_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentAutoAllocate"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentAutoAllocateCreate"
                }
              }
            },
            "description" : "Manage a users automatic payment auto allocated settings.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-auto-allocate" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{itemId}" : {
      "delete" : {
        "description" : "Manage a users automatic payment auto allocated settings.",
        "operationId" : "DELETE_PaymentAutoAllocate_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentAutoAllocateDelete"
                }
              }
            },
            "description" : "Manage a users automatic payment auto allocated settings.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-auto-allocate" ]
      },
      "get" : {
        "description" : "Manage a users automatic payment auto allocated settings.",
        "operationId" : "READ_PaymentAutoAllocate_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentAutoAllocateRead"
                }
              }
            },
            "description" : "Manage a users automatic payment auto allocated settings.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-auto-allocate" ]
      },
      "put" : {
        "description" : "Manage a users automatic payment auto allocated settings.",
        "operationId" : "UPDATE_PaymentAutoAllocate_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentAutoAllocate"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentAutoAllocateUpdate"
                }
              }
            },
            "description" : "Manage a users automatic payment auto allocated settings.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-auto-allocate" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{payment-auto-allocateID}/definition" : {
      "get" : {
        "description" : "List all the definitions in a payment auto allocate.",
        "operationId" : "List_all_Definition_for_User_MonetaryAccount_PaymentAutoAllocate",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-auto-allocateID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentAutoAllocateDefinitionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "List all the definitions in a payment auto allocate.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "definition" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{payment-auto-allocateID}/instance" : {
      "get" : {
        "description" : "List all the times a users payment was automatically allocated.",
        "operationId" : "List_all_Instance_for_User_MonetaryAccount_PaymentAutoAllocate",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-auto-allocateID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentAutoAllocateInstanceListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "List all the times a users payment was automatically allocated.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "instance" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-auto-allocate/{payment-auto-allocateID}/instance/{itemId}" : {
      "get" : {
        "description" : "List all the times a users payment was automatically allocated.",
        "operationId" : "READ_Instance_for_User_MonetaryAccount_PaymentAutoAllocate",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-auto-allocateID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentAutoAllocateInstanceRead"
                }
              }
            },
            "description" : "List all the times a users payment was automatically allocated.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "instance" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch" : {
      "get" : {
        "description" : "Return all the payment batches for a monetary account.",
        "operationId" : "List_all_PaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Create a payment batch, or show the payment batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-batch" ]
      },
      "post" : {
        "description" : "Create a payment batch by sending an array of single payment objects, that will become part of the batch.",
        "operationId" : "CREATE_PaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentBatchCreate"
                }
              }
            },
            "description" : "Create a payment batch, or show the payment batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-batch" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{itemId}" : {
      "get" : {
        "description" : "Return the details of a specific payment batch.",
        "operationId" : "READ_PaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentBatchRead"
                }
              }
            },
            "description" : "Create a payment batch, or show the payment batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-batch" ]
      },
      "put" : {
        "description" : "Revoke a bunq.to payment batch. The status of all the payments will be set to REVOKED.",
        "operationId" : "UPDATE_PaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentBatchUpdate"
                }
              }
            },
            "description" : "Create a payment batch, or show the payment batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-batch" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentPaymentBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentPaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentBatchCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentBatchDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentBatchRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentPaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentBatchUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextPaymentBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextPaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentBatchCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment-batch/{payment-batchID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentBatchDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentBatchRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_PaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextPaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentBatchUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{itemId}" : {
      "get" : {
        "description" : "Get a specific previous Payment.",
        "operationId" : "READ_Payment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentRead"
                }
              }
            },
            "description" : "Using Payment, you can send payments to bunq and non-bunq users from your bunq MonetaryAccounts. This can be done using bunq Aliases or IBAN Aliases. When transferring money to other bunq MonetaryAccounts you can also refer to Attachments. These will be received by the counter-party as part of the Payment. You can also retrieve a single Payment or all executed Payments of a specific monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentPaymentUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/payment/{paymentID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_Payment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextPaymentUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry" : {
      "get" : {
        "description" : "Get all payment requests for a user's monetary account. bunqme_share_url is always null if the counterparty is a bunq user.",
        "operationId" : "List_all_RequestInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/RequestInquiryListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry" ]
      },
      "post" : {
        "description" : "Create a new payment request.",
        "operationId" : "CREATE_RequestInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestInquiryCreate"
                }
              }
            },
            "description" : "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch" : {
      "get" : {
        "description" : "Return all the request batches for a monetary account.",
        "operationId" : "List_all_RequestInquiryBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/RequestInquiryBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry-batch" ]
      },
      "post" : {
        "description" : "Create a request batch by sending an array of single request objects, that will become part of the batch.",
        "operationId" : "CREATE_RequestInquiryBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestInquiryBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestInquiryBatchCreate"
                }
              }
            },
            "description" : "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry-batch" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{itemId}" : {
      "get" : {
        "description" : "Return the details of a specific request batch.",
        "operationId" : "READ_RequestInquiryBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestInquiryBatchRead"
                }
              }
            },
            "description" : "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry-batch" ]
      },
      "put" : {
        "description" : "Revoke a request batch. The status of all the requests will be set to REVOKED.",
        "operationId" : "UPDATE_RequestInquiryBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestInquiryBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestInquiryBatchUpdate"
                }
              }
            },
            "description" : "Create a batch of requests for payment, or show the request batches of a monetary account.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry-batch" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryBatchCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryBatchDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryBatchRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryBatchUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextRequestInquiryBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextRequestInquiryBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryBatchCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry-batch/{request-inquiry-batchID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryBatchDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryBatchRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_RequestInquiryBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiry-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextRequestInquiryBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryBatchUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{itemId}" : {
      "get" : {
        "description" : "Get the details of a specific payment request, including its status. bunqme_share_url is always null if the counterparty is a bunq user.",
        "operationId" : "READ_RequestInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestInquiryRead"
                }
              }
            },
            "description" : "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry" ]
      },
      "put" : {
        "description" : "Revoke a request for payment, by updating the status to REVOKED.",
        "operationId" : "UPDATE_RequestInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestInquiryUpdate"
                }
              }
            },
            "description" : "RequestInquiry, aka 'RFP' (Request for Payment), is one of the innovative features that bunq offers. To request payment from another bunq account a new Request Inquiry is created. As with payments you can add attachments to a RFP. Requests for Payment are the foundation for a number of consumer features like 'Split the bill' and 'Request forwarding'. We invite you to invent your own based on the bunq api!",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-inquiry" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentRequestInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentRequestInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestInquiryUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextRequestInquiryListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextRequestInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-inquiry/{request-inquiryID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_RequestInquiry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-inquiryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextRequestInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestInquiryUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response" : {
      "get" : {
        "description" : "Get all RequestResponses for a MonetaryAccount.",
        "operationId" : "List_all_RequestResponse_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/RequestResponseListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-response" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{itemId}" : {
      "get" : {
        "description" : "Get the details for a specific existing RequestResponse.",
        "operationId" : "READ_RequestResponse_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestResponseRead"
                }
              }
            },
            "description" : "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-response" ]
      },
      "put" : {
        "description" : "Update the status to accept or reject the RequestResponse.",
        "operationId" : "UPDATE_RequestResponse_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestResponse"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestResponseUpdate"
                }
              }
            },
            "description" : "A RequestResponse is what a user on the other side of a RequestInquiry gets when he is sent one. So a RequestInquiry is the initiator and visible for the user that sent it and that wants to receive the money. A RequestResponse is what the other side sees, i.e. the user that pays the money to accept the request. The content is almost identical.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "request-response" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentRequestResponseListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentRequestResponse"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestResponseCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestResponseDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestResponseRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentRequestResponse"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentRequestResponseUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextRequestResponseListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextRequestResponse"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestResponseCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/request-response/{request-responseID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestResponseDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestResponseRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_RequestResponse",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "request-responseID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextRequestResponse"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextRequestResponseUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule" : {
      "get" : {
        "description" : "Get a collection of scheduled definition for a given monetary account. You can add the parameter type to filter the response. When type={SCHEDULE_DEFINITION_PAYMENT,SCHEDULE_DEFINITION_PAYMENT_BATCH} is provided only schedule definition object that relate to these definitions are returned.",
        "operationId" : "List_all_Schedule_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ScheduleListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "view for reading the scheduled definitions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment" : {
      "get" : {
        "description" : "Endpoint for schedule payments.",
        "operationId" : "List_all_SchedulePayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SchedulePaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Endpoint for schedule payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment" ]
      },
      "post" : {
        "description" : "Endpoint for schedule payments.",
        "operationId" : "CREATE_SchedulePayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulePayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentCreate"
                }
              }
            },
            "description" : "Endpoint for schedule payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch" : {
      "post" : {
        "description" : "Endpoint for schedule payment batches.",
        "operationId" : "CREATE_SchedulePaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulePaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentBatchCreate"
                }
              }
            },
            "description" : "Endpoint for schedule payment batches.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment-batch" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{itemId}" : {
      "delete" : {
        "description" : "Endpoint for schedule payment batches.",
        "operationId" : "DELETE_SchedulePaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentBatchDelete"
                }
              }
            },
            "description" : "Endpoint for schedule payment batches.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment-batch" ]
      },
      "get" : {
        "description" : "Endpoint for schedule payment batches.",
        "operationId" : "READ_SchedulePaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentBatchRead"
                }
              }
            },
            "description" : "Endpoint for schedule payment batches.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment-batch" ]
      },
      "put" : {
        "description" : "Endpoint for schedule payment batches.",
        "operationId" : "UPDATE_SchedulePaymentBatch_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulePaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentBatchUpdate"
                }
              }
            },
            "description" : "Endpoint for schedule payment batches.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment-batch" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentBatchCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentBatchDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentBatchRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentBatchUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextSchedulePaymentBatchListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextSchedulePaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentBatchCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment-batch/{schedule-payment-batchID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentBatchDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentBatchRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_SchedulePaymentBatch",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-payment-batchID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextSchedulePaymentBatch"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentBatchUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{itemId}" : {
      "delete" : {
        "description" : "Endpoint for schedule payments.",
        "operationId" : "DELETE_SchedulePayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentDelete"
                }
              }
            },
            "description" : "Endpoint for schedule payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment" ]
      },
      "get" : {
        "description" : "Endpoint for schedule payments.",
        "operationId" : "READ_SchedulePayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentRead"
                }
              }
            },
            "description" : "Endpoint for schedule payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment" ]
      },
      "put" : {
        "description" : "Endpoint for schedule payments.",
        "operationId" : "UPDATE_SchedulePayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulePayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchedulePaymentUpdate"
                }
              }
            },
            "description" : "Endpoint for schedule payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentSchedulePayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentSchedulePayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSchedulePaymentUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextSchedulePaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextSchedulePayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule-payment/{schedule-paymentID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_SchedulePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextSchedulePayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSchedulePaymentUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{itemId}" : {
      "get" : {
        "description" : "Get a specific schedule definition for a given monetary account.",
        "operationId" : "READ_Schedule_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleRead"
                }
              }
            },
            "description" : "view for reading the scheduled definitions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance" : {
      "get" : {
        "description" : "view for reading, updating and listing the scheduled instance.",
        "operationId" : "List_all_ScheduleInstance_for_User_MonetaryAccount_Schedule",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ScheduleInstanceListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "view for reading, updating and listing the scheduled instance.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-instance" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{itemId}" : {
      "get" : {
        "description" : "view for reading, updating and listing the scheduled instance.",
        "operationId" : "READ_ScheduleInstance_for_User_MonetaryAccount_Schedule",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleInstanceRead"
                }
              }
            },
            "description" : "view for reading, updating and listing the scheduled instance.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-instance" ]
      },
      "put" : {
        "description" : "view for reading, updating and listing the scheduled instance.",
        "operationId" : "UPDATE_ScheduleInstance_for_User_MonetaryAccount_Schedule",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ScheduleInstance"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleInstanceUpdate"
                }
              }
            },
            "description" : "view for reading, updating and listing the scheduled instance.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule-instance" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentScheduleInstanceListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentScheduleInstance"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentScheduleInstanceCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentScheduleInstanceDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentScheduleInstanceRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentScheduleInstance"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentScheduleInstanceUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextScheduleInstanceListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextScheduleInstance"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextScheduleInstanceCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/schedule/{scheduleID}/schedule-instance/{schedule-instanceID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextScheduleInstanceDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextScheduleInstanceRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_Schedule_ScheduleInstance",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "scheduleID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "schedule-instanceID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextScheduleInstance"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextScheduleInstanceUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-monetary-account-inquiry" : {
      "get" : {
        "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Get a list with all the share inquiries for a monetary account, only if the requesting user has permission to change the details of the various ones.",
        "operationId" : "List_all_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ShareInviteMonetaryAccountInquiryListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "share-invite-monetary-account-inquiry" ]
      },
      "post" : {
        "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Create a new share inquiry for a monetary account, specifying the permission the other bunq user will have on it.",
        "operationId" : "CREATE_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShareInviteMonetaryAccountInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareInviteMonetaryAccountInquiryCreate"
                }
              }
            },
            "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "share-invite-monetary-account-inquiry" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/share-invite-monetary-account-inquiry/{itemId}" : {
      "get" : {
        "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Get the details of a specific share inquiry.",
        "operationId" : "READ_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareInviteMonetaryAccountInquiryRead"
                }
              }
            },
            "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "share-invite-monetary-account-inquiry" ]
      },
      "put" : {
        "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Update the details of a share. This includes updating status (revoking or cancelling it), granted permission and validity period of this share.",
        "operationId" : "UPDATE_ShareInviteMonetaryAccountInquiry_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShareInviteMonetaryAccountInquiry"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareInviteMonetaryAccountInquiryUpdate"
                }
              }
            },
            "description" : "[DEPRECATED - use /share-invite-monetary-account-response] Used to share a monetary account with another bunq user, as in the 'Connect' feature in the bunq app. Allow the creation of share inquiries that, in the same way as request inquiries, can be revoked by the user creating them or accepted/rejected by the other party.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "share-invite-monetary-account-inquiry" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction" : {
      "get" : {
        "description" : "View for requesting Sofort transactions and polling their status.",
        "operationId" : "List_all_SofortMerchantTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SofortMerchantTransactionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "View for requesting Sofort transactions and polling their status.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "sofort-merchant-transaction" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{itemId}" : {
      "get" : {
        "description" : "View for requesting Sofort transactions and polling their status.",
        "operationId" : "READ_SofortMerchantTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SofortMerchantTransactionRead"
                }
              }
            },
            "description" : "View for requesting Sofort transactions and polling their status.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "sofort-merchant-transaction" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentSofortMerchantTransactionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentSofortMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSofortMerchantTransactionCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSofortMerchantTransactionDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSofortMerchantTransactionRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentSofortMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentSofortMerchantTransactionUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextSofortMerchantTransactionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextSofortMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSofortMerchantTransactionCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/sofort-merchant-transaction/{sofort-merchant-transactionID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSofortMerchantTransactionDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSofortMerchantTransactionRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_SofortMerchantTransaction",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "sofort-merchant-transactionID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextSofortMerchantTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextSofortMerchantTransactionUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{itemId}" : {
      "get" : {
        "description" : "An incoming payment made towards an account of an external bank and redirected to a bunq account via switch service.",
        "operationId" : "READ_SwitchServicePayment_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BankSwitchServiceNetherlandsIncomingPaymentRead"
                }
              }
            },
            "description" : "An incoming payment made towards an account of an external bank and redirected to a bunq account via switch service.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "switch-service-payment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentBankSwitchServiceNetherlandsIncomingPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentBankSwitchServiceNetherlandsIncomingPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextBankSwitchServiceNetherlandsIncomingPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextBankSwitchServiceNetherlandsIncomingPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBankSwitchServiceNetherlandsIncomingPaymentCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/switch-service-payment/{switch-service-paymentID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBankSwitchServiceNetherlandsIncomingPaymentDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBankSwitchServiceNetherlandsIncomingPaymentRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_SwitchServicePayment",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "switch-service-paymentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextBankSwitchServiceNetherlandsIncomingPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextBankSwitchServiceNetherlandsIncomingPaymentUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/translink-transaction" : {
      "get" : {
        "description" : "Used to create translink transactions.",
        "operationId" : "List_all_TranslinkTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TranslinkTransactionListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to create translink transactions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "translink-transaction" ]
      },
      "post" : {
        "description" : "Used to create translink transactions.",
        "operationId" : "CREATE_TranslinkTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TranslinkTransaction"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TranslinkTransactionCreate"
                }
              }
            },
            "description" : "Used to create translink transactions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "translink-transaction" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/translink-transaction/{itemId}" : {
      "get" : {
        "description" : "Used to create translink transactions.",
        "operationId" : "READ_TranslinkTransaction_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TranslinkTransactionRead"
                }
              }
            },
            "description" : "Used to create translink transactions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "translink-transaction" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist-sdd" : {
      "get" : {
        "description" : "Get a listing of all SDD whitelist entries for a target monetary account.",
        "operationId" : "List_all_WhitelistSdd_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/WhitelistSddMonetaryAccountPayingListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Whitelist an SDD so that when one comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist-sdd/{itemId}" : {
      "get" : {
        "description" : "Get a specific SDD whitelist entry.",
        "operationId" : "READ_WhitelistSdd_for_User_MonetaryAccount",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddMonetaryAccountPayingRead"
                }
              }
            },
            "description" : "Whitelist an SDD so that when one comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-attachment" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteAttachmentWhitelistResultListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "post" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "CREATE_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentWhitelistResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentWhitelistResultCreate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-attachment/{itemId}" : {
      "delete" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "DELETE_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentWhitelistResultDelete"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "get" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "READ_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentWhitelistResultRead"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      },
      "put" : {
        "description" : "Used to manage attachment notes.",
        "operationId" : "UPDATE_NoteAttachment_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteAttachmentWhitelistResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteAttachmentWhitelistResultUpdate"
                }
              }
            },
            "description" : "Used to manage attachment notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-attachment" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-text" : {
      "get" : {
        "description" : "Manage the notes for a given user.",
        "operationId" : "List_all_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NoteTextWhitelistResultListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "post" : {
        "description" : "Used to manage text notes.",
        "operationId" : "CREATE_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextWhitelistResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextWhitelistResultCreate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/monetary-account/{monetary-accountID}/whitelist/{whitelistID}/whitelist-result/{whitelist-resultID}/note-text/{itemId}" : {
      "delete" : {
        "description" : "Used to manage text notes.",
        "operationId" : "DELETE_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextWhitelistResultDelete"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "get" : {
        "description" : "Used to manage text notes.",
        "operationId" : "READ_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextWhitelistResultRead"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      },
      "put" : {
        "description" : "Used to manage text notes.",
        "operationId" : "UPDATE_NoteText_for_User_MonetaryAccount_Whitelist_WhitelistResult",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "monetary-accountID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelistID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "whitelist-resultID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoteTextWhitelistResult"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoteTextWhitelistResultUpdate"
                }
              }
            },
            "description" : "Used to manage text notes.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "note-text" ]
      }
    },
    "/user/{userID}/notification-filter-email" : {
      "get" : {
        "description" : "Manage the email notification filters for a user.",
        "operationId" : "List_all_NotificationFilterEmail_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationFilterEmailListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Manage the email notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-email" ]
      },
      "post" : {
        "description" : "Manage the email notification filters for a user.",
        "operationId" : "CREATE_NotificationFilterEmail_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationFilterEmail"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationFilterEmailCreate"
                }
              }
            },
            "description" : "Manage the email notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-email" ]
      }
    },
    "/user/{userID}/notification-filter-push" : {
      "get" : {
        "description" : "Manage the push notification filters for a user.",
        "operationId" : "List_all_NotificationFilterPush_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationFilterPushListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Manage the push notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-push" ]
      },
      "post" : {
        "description" : "Manage the push notification filters for a user.",
        "operationId" : "CREATE_NotificationFilterPush_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationFilterPush"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationFilterPushCreate"
                }
              }
            },
            "description" : "Manage the push notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-push" ]
      }
    },
    "/user/{userID}/notification-filter-url" : {
      "get" : {
        "description" : "Manage the url notification filters for a user.",
        "operationId" : "List_all_NotificationFilterUrl_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/NotificationFilterUrlListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Manage the url notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-url" ]
      },
      "post" : {
        "description" : "Manage the url notification filters for a user.",
        "operationId" : "CREATE_NotificationFilterUrl_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationFilterUrl"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NotificationFilterUrlCreate"
                }
              }
            },
            "description" : "Manage the url notification filters for a user.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "notification-filter-url" ]
      }
    },
    "/user/{userID}/oauth-client" : {
      "get" : {
        "description" : "Used for managing OAuth Clients.",
        "operationId" : "List_all_OauthClient_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/OauthClientListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used for managing OAuth Clients.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "oauth-client" ]
      },
      "post" : {
        "description" : "Used for managing OAuth Clients.",
        "operationId" : "CREATE_OauthClient_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OauthClient"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OauthClientCreate"
                }
              }
            },
            "description" : "Used for managing OAuth Clients.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "oauth-client" ]
      }
    },
    "/user/{userID}/oauth-client/{itemId}" : {
      "get" : {
        "description" : "Used for managing OAuth Clients.",
        "operationId" : "READ_OauthClient_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OauthClientRead"
                }
              }
            },
            "description" : "Used for managing OAuth Clients.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "oauth-client" ]
      },
      "put" : {
        "description" : "Used for managing OAuth Clients.",
        "operationId" : "UPDATE_OauthClient_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OauthClient"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OauthClientUpdate"
                }
              }
            },
            "description" : "Used for managing OAuth Clients.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "oauth-client" ]
      }
    },
    "/user/{userID}/oauth-client/{oauth-clientID}/callback-url" : {
      "get" : {
        "description" : "Used for managing OAuth Client Callback URLs.",
        "operationId" : "List_all_CallbackUrl_for_User_OauthClient",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "oauth-clientID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/OauthCallbackUrlListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used for managing OAuth Client Callback URLs.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "callback-url" ]
      },
      "post" : {
        "description" : "Used for managing OAuth Client Callback URLs.",
        "operationId" : "CREATE_CallbackUrl_for_User_OauthClient",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "oauth-clientID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OauthCallbackUrl"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OauthCallbackUrlCreate"
                }
              }
            },
            "description" : "Used for managing OAuth Client Callback URLs.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "callback-url" ]
      }
    },
    "/user/{userID}/oauth-client/{oauth-clientID}/callback-url/{itemId}" : {
      "delete" : {
        "description" : "Used for managing OAuth Client Callback URLs.",
        "operationId" : "DELETE_CallbackUrl_for_User_OauthClient",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "oauth-clientID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OauthCallbackUrlDelete"
                }
              }
            },
            "description" : "Used for managing OAuth Client Callback URLs.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "callback-url" ]
      },
      "get" : {
        "description" : "Used for managing OAuth Client Callback URLs.",
        "operationId" : "READ_CallbackUrl_for_User_OauthClient",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "oauth-clientID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OauthCallbackUrlRead"
                }
              }
            },
            "description" : "Used for managing OAuth Client Callback URLs.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "callback-url" ]
      },
      "put" : {
        "description" : "Used for managing OAuth Client Callback URLs.",
        "operationId" : "UPDATE_CallbackUrl_for_User_OauthClient",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "oauth-clientID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OauthCallbackUrl"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OauthCallbackUrlUpdate"
                }
              }
            },
            "description" : "Used for managing OAuth Client Callback URLs.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "callback-url" ]
      }
    },
    "/user/{userID}/payment-auto-allocate" : {
      "get" : {
        "description" : "List a users automatic payment auto allocated settings.",
        "operationId" : "List_all_PaymentAutoAllocate_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentAutoAllocateUserListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "List a users automatic payment auto allocated settings.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-auto-allocate" ]
      }
    },
    "/user/{userID}/payment-service-provider-draft-payment" : {
      "get" : {
        "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId" : "List_all_PaymentServiceProviderDraftPayment_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PaymentServiceProviderDraftPaymentListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-service-provider-draft-payment" ]
      },
      "post" : {
        "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId" : "CREATE_PaymentServiceProviderDraftPayment_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentServiceProviderDraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentServiceProviderDraftPaymentCreate"
                }
              }
            },
            "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-service-provider-draft-payment" ]
      }
    },
    "/user/{userID}/payment-service-provider-draft-payment/{itemId}" : {
      "get" : {
        "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId" : "READ_PaymentServiceProviderDraftPayment_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentServiceProviderDraftPaymentRead"
                }
              }
            },
            "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-service-provider-draft-payment" ]
      },
      "put" : {
        "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
        "operationId" : "UPDATE_PaymentServiceProviderDraftPayment_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentServiceProviderDraftPayment"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentServiceProviderDraftPaymentUpdate"
                }
              }
            },
            "description" : "Manage the PaymentServiceProviderDraftPayment's for a PISP.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "payment-service-provider-draft-payment" ]
      }
    },
    "/user/{userID}/registry/{registryID}/registry-settlement" : {
      "get" : {
        "description" : "Get a listing of all Slice group settlements.",
        "operationId" : "List_all_RegistrySettlement_for_User_Registry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "registryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/RegistrySettlementListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to settle a Slice group.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "registry-settlement" ]
      },
      "post" : {
        "description" : "Create a new Slice group settlement.",
        "operationId" : "CREATE_RegistrySettlement_for_User_Registry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "registryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegistrySettlement"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegistrySettlementCreate"
                }
              }
            },
            "description" : "Used to settle a Slice group.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "registry-settlement" ]
      }
    },
    "/user/{userID}/registry/{registryID}/registry-settlement/{itemId}" : {
      "get" : {
        "description" : "Get a specific Slice group settlement.",
        "operationId" : "READ_RegistrySettlement_for_User_Registry",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "registryID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegistrySettlementRead"
                }
              }
            },
            "description" : "Used to settle a Slice group.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "registry-settlement" ]
      }
    },
    "/user/{userID}/reward" : {
      "get" : {
        "description" : "Used to view Rewards.",
        "operationId" : "List_all_Reward_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/RewardListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to view Rewards.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "reward" ]
      }
    },
    "/user/{userID}/reward-recipient" : {
      "get" : {
        "description" : "Used to view Rewards.",
        "operationId" : "List_all_RewardRecipient_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/RewardRecipientListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to view Rewards.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "reward-recipient" ]
      }
    },
    "/user/{userID}/reward-recipient/{itemId}" : {
      "get" : {
        "description" : "Used to view Rewards.",
        "operationId" : "READ_RewardRecipient_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RewardRecipientRead"
                }
              }
            },
            "description" : "Used to view Rewards.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "reward-recipient" ]
      }
    },
    "/user/{userID}/reward-sender" : {
      "get" : {
        "description" : "Used to view Rewards.",
        "operationId" : "List_all_RewardSender_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/RewardSenderListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to view Rewards.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "reward-sender" ]
      }
    },
    "/user/{userID}/reward-sender/{itemId}" : {
      "get" : {
        "description" : "Used to view Rewards.",
        "operationId" : "READ_RewardSender_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RewardSenderRead"
                }
              }
            },
            "description" : "Used to view Rewards.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "reward-sender" ]
      }
    },
    "/user/{userID}/reward/{itemId}" : {
      "get" : {
        "description" : "Used to view Rewards.",
        "operationId" : "READ_Reward_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RewardRead"
                }
              }
            },
            "description" : "Used to view Rewards.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "reward" ]
      }
    },
    "/user/{userID}/schedule" : {
      "get" : {
        "description" : "Get a collection of scheduled definition for all accessible monetary accounts of the user. You can add the parameter type to filter the response. When type={SCHEDULE_DEFINITION_PAYMENT,SCHEDULE_DEFINITION_PAYMENT_BATCH} is provided only schedule definition object that relate to these definitions are returned.",
        "operationId" : "List_all_Schedule_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ScheduleUserListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "view for reading the scheduled definitions.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "schedule" ]
      }
    },
    "/user/{userID}/share-invite-monetary-account-response" : {
      "get" : {
        "description" : "Return all the shares a user was invited to.",
        "operationId" : "List_all_ShareInviteMonetaryAccountResponse_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ShareInviteMonetaryAccountResponseListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "share-invite-monetary-account-response" ]
      }
    },
    "/user/{userID}/share-invite-monetary-account-response/{itemId}" : {
      "get" : {
        "description" : "Return the details of a specific share a user was invited to.",
        "operationId" : "READ_ShareInviteMonetaryAccountResponse_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareInviteMonetaryAccountResponseRead"
                }
              }
            },
            "description" : "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "share-invite-monetary-account-response" ]
      },
      "put" : {
        "description" : "Accept or reject a share a user was invited to.",
        "operationId" : "UPDATE_ShareInviteMonetaryAccountResponse_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ShareInviteMonetaryAccountResponse"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ShareInviteMonetaryAccountResponseUpdate"
                }
              }
            },
            "description" : "Used to view or respond to shares a user was invited to. See 'share-invite-bank-inquiry' for more information about the inquiring endpoint.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "share-invite-monetary-account-response" ]
      }
    },
    "/user/{userID}/token-qr-request-ideal" : {
      "post" : {
        "description" : "Create a request from an ideal transaction.",
        "operationId" : "CREATE_TokenQrRequestIdeal_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TokenQrRequestIdeal"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenQrRequestIdealCreate"
                }
              }
            },
            "description" : "Using this call you create a request for payment from an external token provided with an ideal transaction. Make sure your iDEAL payments are compliant with the iDEAL standards, by following the following manual: https:/www.bunq.com/terms-idealstandards. It's very important to keep these points in mind when you are using the endpoint to make iDEAL payments from your application.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "token-qr-request-ideal" ]
      }
    },
    "/user/{userID}/token-qr-request-sofort" : {
      "post" : {
        "description" : "Create a request from an SOFORT transaction.",
        "operationId" : "CREATE_TokenQrRequestSofort_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TokenQrRequestSofort"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenQrRequestSofortCreate"
                }
              }
            },
            "description" : "Using this call you can create a SOFORT Request assigned to your User by providing the Token of the request.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "token-qr-request-sofort" ]
      }
    },
    "/user/{userID}/transferwise-currency" : {
      "get" : {
        "description" : "Used to get a list of supported currencies for Transferwise.",
        "operationId" : "List_all_TransferwiseCurrency_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TransferwiseCurrencyListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to get a list of supported currencies for Transferwise.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-currency" ]
      }
    },
    "/user/{userID}/transferwise-quote" : {
      "post" : {
        "description" : "Used to get quotes from Transferwise. These can be used to initiate payments.",
        "operationId" : "CREATE_TransferwiseQuote_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferwiseQuote"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseQuoteCreate"
                }
              }
            },
            "description" : "Used to get quotes from Transferwise. These can be used to initiate payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-quote" ]
      }
    },
    "/user/{userID}/transferwise-quote-temporary" : {
      "post" : {
        "description" : "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
        "operationId" : "CREATE_TransferwiseQuoteTemporary_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferwiseQuoteTemporary"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseQuoteTemporaryCreate"
                }
              }
            },
            "description" : "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-quote-temporary" ]
      }
    },
    "/user/{userID}/transferwise-quote-temporary/{itemId}" : {
      "get" : {
        "description" : "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
        "operationId" : "READ_TransferwiseQuoteTemporary_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseQuoteTemporaryRead"
                }
              }
            },
            "description" : "Used to get temporary quotes from Transferwise. These cannot be used to initiate payments",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-quote-temporary" ]
      }
    },
    "/user/{userID}/transferwise-quote/{itemId}" : {
      "get" : {
        "description" : "Used to get quotes from Transferwise. These can be used to initiate payments.",
        "operationId" : "READ_TransferwiseQuote_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseQuoteRead"
                }
              }
            },
            "description" : "Used to get quotes from Transferwise. These can be used to initiate payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-quote" ]
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient" : {
      "get" : {
        "description" : "Used to manage recipient accounts with Transferwise.",
        "operationId" : "List_all_TransferwiseRecipient_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TransferwiseAccountQuoteListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage recipient accounts with Transferwise.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-recipient" ]
      },
      "post" : {
        "description" : "Used to manage recipient accounts with Transferwise.",
        "operationId" : "CREATE_TransferwiseRecipient_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferwiseAccountQuote"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseAccountQuoteCreate"
                }
              }
            },
            "description" : "Used to manage recipient accounts with Transferwise.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-recipient" ]
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient-requirement" : {
      "get" : {
        "description" : "Used to determine the recipient account requirements for Transferwise transfers.",
        "operationId" : "List_all_TransferwiseRecipientRequirement_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TransferwiseAccountRequirementListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to determine the recipient account requirements for Transferwise transfers.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-recipient-requirement" ]
      },
      "post" : {
        "description" : "Used to determine the recipient account requirements for Transferwise transfers.",
        "operationId" : "CREATE_TransferwiseRecipientRequirement_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferwiseAccountRequirement"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseAccountRequirementCreate"
                }
              }
            },
            "description" : "Used to determine the recipient account requirements for Transferwise transfers.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-recipient-requirement" ]
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-recipient/{itemId}" : {
      "delete" : {
        "description" : "Used to manage recipient accounts with Transferwise.",
        "operationId" : "DELETE_TransferwiseRecipient_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseAccountQuoteDelete"
                }
              }
            },
            "description" : "Used to manage recipient accounts with Transferwise.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-recipient" ]
      },
      "get" : {
        "description" : "Used to manage recipient accounts with Transferwise.",
        "operationId" : "READ_TransferwiseRecipient_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseAccountQuoteRead"
                }
              }
            },
            "description" : "Used to manage recipient accounts with Transferwise.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-recipient" ]
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer" : {
      "get" : {
        "description" : "Used to create Transferwise payments.",
        "operationId" : "List_all_TransferwiseTransfer_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TransferwiseTransferListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to create Transferwise payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-transfer" ]
      },
      "post" : {
        "description" : "Used to create Transferwise payments.",
        "operationId" : "CREATE_TransferwiseTransfer_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferwiseTransfer"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseTransferCreate"
                }
              }
            },
            "description" : "Used to create Transferwise payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-transfer" ]
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer-requirement" : {
      "post" : {
        "description" : "Used to determine the account requirements for Transferwise transfers.",
        "operationId" : "CREATE_TransferwiseTransferRequirement_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferwiseTransferRequirement"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseTransferRequirementCreate"
                }
              }
            },
            "description" : "Used to determine the account requirements for Transferwise transfers.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-transfer-requirement" ]
      }
    },
    "/user/{userID}/transferwise-quote/{transferwise-quoteID}/transferwise-transfer/{itemId}" : {
      "get" : {
        "description" : "Used to create Transferwise payments.",
        "operationId" : "READ_TransferwiseTransfer_for_User_TransferwiseQuote",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "transferwise-quoteID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseTransferRead"
                }
              }
            },
            "description" : "Used to create Transferwise payments.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-transfer" ]
      }
    },
    "/user/{userID}/transferwise-user" : {
      "get" : {
        "description" : "Used to manage Transferwise users.",
        "operationId" : "List_all_TransferwiseUser_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TransferwiseUserListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Used to manage Transferwise users.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-user" ]
      },
      "post" : {
        "description" : "Used to manage Transferwise users.",
        "operationId" : "CREATE_TransferwiseUser_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TransferwiseUser"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TransferwiseUserCreate"
                }
              }
            },
            "description" : "Used to manage Transferwise users.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "transferwise-user" ]
      }
    },
    "/user/{userID}/tree-progress" : {
      "get" : {
        "description" : "See how many trees this user has planted.",
        "operationId" : "List_all_TreeProgress_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TreeProgressListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "See how many trees this user has planted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "tree-progress" ]
      }
    },
    "/user/{userID}/whitelist-sdd" : {
      "get" : {
        "description" : "Get a listing of all recurring SDD whitelist entries for a target monetary account.",
        "operationId" : "List_all_WhitelistSdd_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/WhitelistSddListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Depreciated route, replaced with whitelist-sdd-recurring",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd" ]
      }
    },
    "/user/{userID}/whitelist-sdd-one-off" : {
      "get" : {
        "description" : "Get a listing of all one off SDD whitelist entries for a target monetary account.",
        "operationId" : "List_all_WhitelistSddOneOff_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/WhitelistSddOneOffListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Whitelist an one off SDD so that when another one off SDD from the creditor comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-one-off" ]
      },
      "post" : {
        "description" : "Create a new one off SDD whitelist entry.",
        "operationId" : "CREATE_WhitelistSddOneOff_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WhitelistSddOneOff"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddOneOffCreate"
                }
              }
            },
            "description" : "Whitelist an one off SDD so that when another one off SDD from the creditor comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-one-off" ]
      }
    },
    "/user/{userID}/whitelist-sdd-one-off/{itemId}" : {
      "delete" : {
        "description" : "Whitelist an one off SDD so that when another one off SDD from the creditor comes in, it is automatically accepted.",
        "operationId" : "DELETE_WhitelistSddOneOff_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddOneOffDelete"
                }
              }
            },
            "description" : "Whitelist an one off SDD so that when another one off SDD from the creditor comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-one-off" ]
      },
      "get" : {
        "description" : "Get a specific one off SDD whitelist entry.",
        "operationId" : "READ_WhitelistSddOneOff_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddOneOffRead"
                }
              }
            },
            "description" : "Whitelist an one off SDD so that when another one off SDD from the creditor comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-one-off" ]
      },
      "put" : {
        "description" : "Whitelist an one off SDD so that when another one off SDD from the creditor comes in, it is automatically accepted.",
        "operationId" : "UPDATE_WhitelistSddOneOff_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WhitelistSddOneOff"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddOneOffUpdate"
                }
              }
            },
            "description" : "Whitelist an one off SDD so that when another one off SDD from the creditor comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-one-off" ]
      }
    },
    "/user/{userID}/whitelist-sdd-recurring" : {
      "get" : {
        "description" : "Get a listing of all recurring SDD whitelist entries for a target monetary account.",
        "operationId" : "List_all_WhitelistSddRecurring_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/WhitelistSddRecurringListing"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Whitelist a recurring SDD so that when another recurrence comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-recurring" ]
      },
      "post" : {
        "description" : "Create a new recurring SDD whitelist entry.",
        "operationId" : "CREATE_WhitelistSddRecurring_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WhitelistSddRecurring"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddRecurringCreate"
                }
              }
            },
            "description" : "Whitelist a recurring SDD so that when another recurrence comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-recurring" ]
      }
    },
    "/user/{userID}/whitelist-sdd-recurring/{itemId}" : {
      "delete" : {
        "description" : "Whitelist a recurring SDD so that when another recurrence comes in, it is automatically accepted.",
        "operationId" : "DELETE_WhitelistSddRecurring_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddRecurringDelete"
                }
              }
            },
            "description" : "Whitelist a recurring SDD so that when another recurrence comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-recurring" ]
      },
      "get" : {
        "description" : "Get a specific recurring SDD whitelist entry.",
        "operationId" : "READ_WhitelistSddRecurring_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddRecurringRead"
                }
              }
            },
            "description" : "Whitelist a recurring SDD so that when another recurrence comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-recurring" ]
      },
      "put" : {
        "description" : "Whitelist a recurring SDD so that when another recurrence comes in, it is automatically accepted.",
        "operationId" : "UPDATE_WhitelistSddRecurring_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WhitelistSddRecurring"
              }
            }
          },
          "description" : "",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddRecurringUpdate"
                }
              }
            },
            "description" : "Whitelist a recurring SDD so that when another recurrence comes in, it is automatically accepted.",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd-recurring" ]
      }
    },
    "/user/{userID}/whitelist-sdd/{itemId}" : {
      "get" : {
        "description" : "Get a specific recurring SDD whitelist entry.",
        "operationId" : "READ_WhitelistSdd_for_User",
        "parameters" : [ {
          "description" : "",
          "in" : "path",
          "name" : "userID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "description" : "",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "$ref" : "#/components/parameters/Cache-Control"
        }, {
          "$ref" : "#/components/parameters/User-Agent"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Language"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Region"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Request-Id"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Geolocation"
        }, {
          "$ref" : "#/components/parameters/X-Bunq-Client-Authentication"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WhitelistSddRead"
                }
              }
            },
            "description" : "Depreciated route, replaced with whitelist-sdd-recurring",
            "headers" : {
              "X-Bunq-Client-Request-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
              },
              "X-Bunq-Client-Response-Id" : {
                "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
              },
              "X-Bunq-Server-Signature" : {
                "$ref" : "#/components/headers/X-Bunq-Server-Signature"
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/GenericError"
          }
        },
        "summary" : "",
        "tags" : [ "whitelist-sdd" ]
      }
    }
  },
  "components" : {
    "headers" : {
      "X-Bunq-Client-Request-Id" : {
        "description" : "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Client-Response-Id" : {
        "description" : "A unique ID for the response formatted as a UUID. Clients can use it to add extra protection against replay attacks.",
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Server-Signature" : {
        "description" : "The server's signature for this response. See the signing page for details on how to verify this signature.",
        "schema" : {
          "type" : "string"
        }
      }
    },
    "parameters" : {
      "Cache-Control" : {
        "description" : "The standard HTTP Cache-Control header is required for all signed requests.",
        "in" : "header",
        "name" : "Cache-Control",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "User-Agent" : {
        "description" : "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header.",
        "in" : "header",
        "name" : "User-Agent",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Attachment-Description" : {
        "description" : "This header should be used when uploading an Attachment's content to give it a description.",
        "in" : "header",
        "name" : "X-Bunq-Attachment-Description",
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Client-Authentication" : {
        "description" : "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call",
        "in" : "header",
        "name" : "X-Bunq-Client-Authentication",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Client-Request-Id" : {
        "description" : "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer.",
        "in" : "header",
        "name" : "X-Bunq-Client-Request-Id",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Client-Signature" : {
        "description" : "The signature header is required for some API calls. See the signing page for details on how to create this signature.",
        "in" : "header",
        "name" : "X-Bunq-Client-Signature",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Geolocation" : {
        "description" : "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued.",
        "in" : "header",
        "name" : "X-Bunq-Geolocation",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Language" : {
        "description" : "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US.",
        "in" : "header",
        "name" : "X-Bunq-Language",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "X-Bunq-Region" : {
        "description" : "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
        "in" : "header",
        "name" : "X-Bunq-Region",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "responses" : {
      "GenericError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "properties" : {
                "Error" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "This is how the error response looks like for 4XX response codes",
        "headers" : {
          "X-Bunq-Client-Request-Id" : {
            "$ref" : "#/components/headers/X-Bunq-Client-Request-Id"
          },
          "X-Bunq-Client-Response-Id" : {
            "$ref" : "#/components/headers/X-Bunq-Client-Response-Id"
          },
          "X-Bunq-Server-Signature" : {
            "$ref" : "#/components/headers/X-Bunq-Server-Signature"
          }
        }
      }
    },
    "schemas" : {
      "AdditionalInformation" : {
        "properties" : {
          "attachment" : {
            "description" : "The Attachments to attach to the refund request.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMasterCardActionRefund"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "category" : {
            "description" : "The category of the refund, required for chargeback.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "comment" : {
            "description" : "Comment about the refund.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason to refund, required for chargeback.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "terms_and_conditions" : {
            "description" : "Proof that the user acknowledged the terms and conditions for chargebacks.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Address" : {
        "properties" : {
          "city" : {
            "description" : "The city.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "country" : {
            "description" : "The country as an ISO 3166-1 alpha-2 country code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "extra" : {
            "description" : "The apartment, building or other extra information for addresses.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "house_number" : {
            "description" : "The house number.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "is_user_address_updated" : {
            "description" : "To show whether user created or updated her address for app event listing.",
            "readOnly" : true,
            "type" : "boolean",
            "writeOnly" : false
          },
          "mailbox_name" : {
            "description" : "The name on the mailbox (only used for Postal addresses).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "po_box" : {
            "description" : "The PO box.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "postal_code" : {
            "description" : "The postal code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "province" : {
            "description" : "The province according to local standard.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "street" : {
            "description" : "The street.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Amount" : {
        "properties" : {
          "currency" : {
            "description" : "The currency of the amount. It is an ISO 4217 formatted currency code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "value" : {
            "description" : "The amount formatted to two decimal places.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Attachment" : {
        "properties" : {
          "content_type" : {
            "description" : "The content type of the attachment's file.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "urls" : {
            "description" : "The URLs where the file can be downloaded.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentUrl"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AttachmentConversationContentListing" : {
        "type" : "object"
      },
      "AttachmentMasterCardActionRefund" : {
        "properties" : {
          "id" : {
            "description" : "The id of the attached Attachment.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AttachmentMonetaryAccount" : {
        "type" : "object"
      },
      "AttachmentMonetaryAccountContentListing" : {
        "type" : "object"
      },
      "AttachmentMonetaryAccountCreate" : {
        "properties" : {
          "id" : {
            "description" : "The ID of the attachment created.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AttachmentMonetaryAccountPayment" : {
        "properties" : {
          "id" : {
            "description" : "The id of the attached Attachment.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount this Attachment is attached from.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AttachmentPublic" : {
        "type" : "object"
      },
      "AttachmentPublicContentListing" : {
        "type" : "object"
      },
      "AttachmentPublicCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "AttachmentPublicRead" : {
        "properties" : {
          "attachment" : {
            "$ref" : "#/components/schemas/Attachment"
          },
          "created" : {
            "description" : "The timestamp of the attachment's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the attachment's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "uuid" : {
            "description" : "The UUID of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AttachmentUrl" : {
        "properties" : {
          "type" : {
            "description" : "The file type of attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "url" : {
            "description" : "The URL where the attachment can be downloaded.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AttachmentUserContentListing" : {
        "type" : "object"
      },
      "AttachmentUserRead" : {
        "properties" : {
          "attachment" : {
            "$ref" : "#/components/schemas/Attachment"
          },
          "created" : {
            "description" : "The timestamp of the attachment's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the attachment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the attachment's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Avatar" : {
        "properties" : {
          "anchor_uuid" : {
            "description" : "The public UUID of object this avatar is anchored to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "image" : {
            "description" : "The actual image information of this avatar.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "style" : {
            "description" : "The style (if applicable) for this Avatar.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "uuid" : {
            "description" : "The public UUID of the avatar.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AvatarCreate" : {
        "properties" : {
          "uuid" : {
            "description" : "The UUID of the created avatar.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "AvatarRead" : {
        "properties" : {
          "image" : {
            "description" : "The content type of the image.",
            "items" : {
              "$ref" : "#/components/schemas/Image"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "uuid" : {
            "description" : "The UUID of the created avatar.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BankSwitchServiceNetherlandsIncoming" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "attachment" : {
            "$ref" : "#/components/schemas/Attachment"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "status" : {
            "description" : "The status of the switch service.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub status of the switch service.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_end" : {
            "description" : "The timestamp when the switch service ends.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start_actual" : {
            "description" : "The timestamp when the switch service actually starts.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start_desired" : {
            "description" : "The timestamp when the switch service desired to be start.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "BankSwitchServiceNetherlandsIncomingPayment" : {
        "properties" : {
          "bank_switch_service" : {
            "$ref" : "#/components/schemas/BankSwitchServiceNetherlandsIncoming"
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          }
        },
        "type" : "object"
      },
      "BankSwitchServiceNetherlandsIncomingPaymentRead" : {
        "properties" : {
          "bank_switch_service" : {
            "$ref" : "#/components/schemas/BankSwitchServiceNetherlandsIncoming"
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          }
        },
        "type" : "object"
      },
      "BillingContractSubscription" : {
        "properties" : {
          "contract_date_end" : {
            "description" : "The date until when the billing contract is valid.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "contract_date_start" : {
            "description" : "The date from when the billing contract is valid.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "contract_version" : {
            "description" : "The version of the billing contract.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp when the billing contract was made.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the billing contract.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The subscription status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subscription substatus.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "subscription_type" : {
            "description" : "The subscription type of the user. Can be one of PERSON_SUPER_LIGHT_V1, PERSON_LIGHT_V1, PERSON_MORE_V1, PERSON_FREE_V1, PERSON_PREMIUM_V1, COMPANY_V1, or COMPANY_V2.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "subscription_type_downgrade" : {
            "description" : "The subscription type the user will have after a subscription downgrade. Will be null if downgrading is not possible.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the billing contract was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BillingContractSubscriptionListing" : {
        "properties" : {
          "contract_date_end" : {
            "description" : "The date until when the billing contract is valid.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "contract_date_start" : {
            "description" : "The date from when the billing contract is valid.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "contract_version" : {
            "description" : "The version of the billing contract.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp when the billing contract was made.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the billing contract.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The subscription status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subscription substatus.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "subscription_type" : {
            "description" : "The subscription type of the user. Can be one of PERSON_SUPER_LIGHT_V1, PERSON_LIGHT_V1, PERSON_MORE_V1, PERSON_FREE_V1, PERSON_PREMIUM_V1, COMPANY_V1, or COMPANY_V2.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "subscription_type_downgrade" : {
            "description" : "The subscription type the user will have after a subscription downgrade. Will be null if downgrading is not possible.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the billing contract was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BirdeeInvestmentPortfolio" : {
        "properties" : {
          "allocations" : {
            "description" : "The allocations of the investment portfolio.",
            "items" : {
              "$ref" : "#/components/schemas/BirdeePortfolioAllocation"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "balance" : {
            "$ref" : "#/components/schemas/BirdeeInvestmentPortfolioBalance"
          },
          "goal" : {
            "$ref" : "#/components/schemas/BirdeeInvestmentPortfolioGoal"
          },
          "investment_theme" : {
            "description" : "The investment theme.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The name associated with the investment portfolio.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "number_of_strategy_change_annual_maximum" : {
            "description" : "Maximum number of strategy changes in a year.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "number_of_strategy_change_annual_used" : {
            "description" : "Maximum number of strategy changes used.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "risk_profile_type" : {
            "description" : "The type of risk profile associated with the portfolio.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "Status of the portfolio.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BirdeeInvestmentPortfolioBalance" : {
        "properties" : {
          "amount_available" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_deposit_pending" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_deposit_total" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_fee_total" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_profit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_withdrawal_pending" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_withdrawal_total" : {
            "$ref" : "#/components/schemas/Amount"
          }
        },
        "type" : "object"
      },
      "BirdeeInvestmentPortfolioGoal" : {
        "properties" : {
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "time_end" : {
            "description" : "The investment goal end time.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BirdeePortfolioAllocation" : {
        "properties" : {
          "amount" : {
            "description" : "Monetary amount of the financial instrument in the portfolio.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "instrument_asset_class" : {
            "description" : "Asset Class of the instrument.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "instrument_asset_class_name" : {
            "description" : "Name of the asset class.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "instrument_currency" : {
            "description" : "Currency of the instrument.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "instrument_isin" : {
            "description" : "ISIN code of the instrument.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "instrument_key_information_document_uri" : {
            "description" : "Key Information Document of the instrument.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "instrument_name" : {
            "description" : "Name of the instrument.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "instrument_region_name" : {
            "description" : "Name of the geographical region covered by the instrument",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "price" : {
            "description" : "Unit price of the financial instrument.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "quantity" : {
            "description" : "Quantity of the financial instrument in the portfolio.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "weight" : {
            "description" : "Weight of the financial instrument in the model portfolio.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqId" : {
        "properties" : {
          "id" : {
            "description" : "An integer ID of an object. Unique per object type.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeFundraiserProfile" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "attachment" : {
            "$ref" : "#/components/schemas/AttachmentPublic"
          },
          "color" : {
            "description" : "The color chosen for the bunq.me fundraiser profile in hexadecimal format.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccount that created the bunq.me fundraiser profile.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the bunq.me fundraiser profile.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "invite_profile_name" : {
            "description" : "Provided if the user has enabled their invite link.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pointer" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to when a payment is completed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the bunq.me fundraiser profile, can be ACTIVE or DEACTIVATED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeFundraiserProfileUserListing" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "attachment" : {
            "$ref" : "#/components/schemas/AttachmentPublic"
          },
          "color" : {
            "description" : "The color chosen for the bunq.me fundraiser profile in hexadecimal format.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccount that created the bunq.me fundraiser profile.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the bunq.me fundraiser profile.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "Id of the monetary account on which you want to receive bunq.me payments.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "owner_user_id" : {
            "description" : "Id of the user owning the profile.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "pointer" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to when a payment is completed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the bunq.me fundraiser profile, can be ACTIVE or DEACTIVATED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeFundraiserProfileUserRead" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "attachment" : {
            "$ref" : "#/components/schemas/AttachmentPublic"
          },
          "color" : {
            "description" : "The color chosen for the bunq.me fundraiser profile in hexadecimal format.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccount that created the bunq.me fundraiser profile.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the bunq.me fundraiser profile.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "Id of the monetary account on which you want to receive bunq.me payments.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "owner_user_id" : {
            "description" : "Id of the user owning the profile.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "pointer" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to when a payment is completed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the bunq.me fundraiser profile, can be ACTIVE or DEACTIVATED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeFundraiserResult" : {
        "properties" : {
          "bunqme_fundraiser_profile" : {
            "$ref" : "#/components/schemas/BunqMeFundraiserProfile"
          },
          "created" : {
            "description" : "The timestamp when the bunq.me was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the bunq.me.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payments" : {
            "description" : "The list of payments, paid to the bunq.me fundraiser profile.",
            "items" : {
              "$ref" : "#/components/schemas/Payment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the bunq.me was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeFundraiserResultRead" : {
        "properties" : {
          "bunqme_fundraiser_profile" : {
            "$ref" : "#/components/schemas/BunqMeFundraiserProfile"
          },
          "created" : {
            "description" : "The timestamp when the bunq.me was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the bunq.me.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payments" : {
            "description" : "The list of payments, paid to the bunq.me fundraiser profile.",
            "items" : {
              "$ref" : "#/components/schemas/Payment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the bunq.me was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeMerchantAvailable" : {
        "properties" : {
          "available" : {
            "description" : "Whether or not the merchant is available for the user.",
            "readOnly" : true,
            "type" : "boolean",
            "writeOnly" : false
          },
          "merchant_type" : {
            "description" : "A merchant type supported by bunq.me.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeTab" : {
        "properties" : {
          "bunqme_tab_entry" : {
            "$ref" : "#/components/schemas/BunqMeTabEntry"
          },
          "status" : {
            "description" : "The status of the bunq.me. Ignored in POST requests but can be used for cancelling the bunq.me by setting status as CANCELLED with a PUT request.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "bunqme_tab_entry" ],
        "type" : "object"
      },
      "BunqMeTabCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the created bunq.me.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeTabEntry" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description for the bunq.me. Maximum 9000 characters.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "invite_profile_name" : {
            "description" : "Provided if the user has enabled their invite link.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "merchant_available" : {
            "description" : "List of available merchants.",
            "items" : {
              "$ref" : "#/components/schemas/BunqMeMerchantAvailable"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to when a payment is completed.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "uuid" : {
            "description" : "The uuid of the bunq.me.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeTabListing" : {
        "properties" : {
          "alias_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "bunqme_tab_entries" : {
            "description" : "The bunq.me tab entries attached to this bunq.me Tab.",
            "items" : {
              "$ref" : "#/components/schemas/BunqMeTabEntry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "bunqme_tab_entry" : {
            "$ref" : "#/components/schemas/BunqMeTabEntry"
          },
          "bunqme_tab_share_url" : {
            "description" : "The url that points to the bunq.me page.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp when the bunq.me was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the created bunq.me.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the bunq.me was sent from.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "result_inquiries" : {
            "description" : "The list of bunq.me result Inquiries successfully made and paid.",
            "items" : {
              "$ref" : "#/components/schemas/BunqMeTabResultInquiry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the bunq.me expired or will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the bunq.me Tab. Should be BUNQ_ME",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the bunq.me was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeTabRead" : {
        "properties" : {
          "alias_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "bunqme_tab_entries" : {
            "description" : "The bunq.me tab entries attached to this bunq.me Tab.",
            "items" : {
              "$ref" : "#/components/schemas/BunqMeTabEntry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "bunqme_tab_entry" : {
            "$ref" : "#/components/schemas/BunqMeTabEntry"
          },
          "bunqme_tab_share_url" : {
            "description" : "The url that points to the bunq.me page.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp when the bunq.me was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the created bunq.me.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the bunq.me was sent from.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "result_inquiries" : {
            "description" : "The list of bunq.me result Inquiries successfully made and paid.",
            "items" : {
              "$ref" : "#/components/schemas/BunqMeTabResultInquiry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the bunq.me. Can be WAITING_FOR_PAYMENT, CANCELLED or EXPIRED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the bunq.me expired or will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the bunq.me Tab. Should be BUNQ_ME",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the bunq.me was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "BunqMeTabResultInquiry" : {
        "properties" : {
          "bunq_me_tab_id" : {
            "description" : "The Id of the bunq.me tab that this BunqMeTabResultInquiry belongs to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          }
        },
        "type" : "object"
      },
      "BunqMeTabResultResponse" : {
        "properties" : {
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          }
        },
        "type" : "object"
      },
      "BunqMeTabResultResponseRead" : {
        "properties" : {
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          }
        },
        "type" : "object"
      },
      "BunqMeTabUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "Card" : {
        "properties" : {
          "activation_code" : {
            "description" : "DEPRECATED: Activate a card by setting status to ACTIVE when the order_status is ACCEPTED_FOR_PRODUCTION.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "card_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "card_limit_atm" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "country_permission" : {
            "description" : "The countries for which to grant (temporary) permissions to use the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardCountryPermission"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "monetary_account_id_fallback" : {
            "description" : "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "order_status" : {
            "description" : "The order status to set for the card. Set to CARD_REQUEST_PENDING to get a virtual card produced.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "pin_code" : {
            "description" : "The plaintext pin code. Requests require encryption to be enabled.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "pin_code_assignment" : {
            "description" : "Array of Types, PINs, account IDs assigned to the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardPinAssignment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "primary_account_numbers" : {
            "description" : "Array of PANs and their attributes.",
            "items" : {
              "$ref" : "#/components/schemas/CardPrimaryAccountNumber"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN or CANCELLED, and can only be set to LOST/STOLEN/CANCELLED when order status is ACCEPTED_FOR_PRODUCTION/DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Can only be set to DEACTIVATED after initial activation, i.e. order_status is DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Mind that all the possible choices (apart from ACTIVE and DEACTIVATED) are permanent and cannot be changed after.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardBatch" : {
        "properties" : {
          "cards" : {
            "description" : "The cards that need to be updated.",
            "items" : {
              "$ref" : "#/components/schemas/CardBatchEntry"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          }
        },
        "required" : [ "cards" ],
        "type" : "object"
      },
      "CardBatchCreate" : {
        "properties" : {
          "updated_card_ids" : {
            "description" : "The ids of the cards that have been updated.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardBatchEntry" : {
        "properties" : {
          "card_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "card_limit_atm" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "country_permission" : {
            "description" : "The countries for which to grant (temporary) permissions to use the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardCountryPermission"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "id" : {
            "description" : "The ID of the card that needs to be updated.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "monetary_account_id_fallback" : {
            "description" : "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "status" : {
            "description" : "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN or CANCELLED, and can only be set to LOST/STOLEN/CANCELLED when order status is ACCEPTED_FOR_PRODUCTION/DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Can only be set to DEACTIVATED after initial activation, i.e. order_status is DELIVERED_TO_CUSTOMER/CARD_UPDATE_REQUESTED/CARD_UPDATE_SENT/CARD_UPDATE_ACCEPTED. Mind that all the possible choices (apart from ACTIVE and DEACTIVATED) are permanent and cannot be changed after.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "CardBatchReplace" : {
        "properties" : {
          "cards" : {
            "description" : "The cards that need to be replaced.",
            "items" : {
              "$ref" : "#/components/schemas/CardBatchReplaceEntry"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          }
        },
        "required" : [ "cards" ],
        "type" : "object"
      },
      "CardBatchReplaceCreate" : {
        "properties" : {
          "updated_card_ids" : {
            "description" : "The ids of the cards that have been replaced.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardBatchReplaceEntry" : {
        "properties" : {
          "id" : {
            "description" : "The ID of the card that needs to be replaced.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "name_on_card" : {
            "description" : "The user's name as it will be on the card. Check 'card-name' for the available card names for a user.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "pin_code_assignment" : {
            "description" : "Array of Types, PINs, account IDs assigned to the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardPinAssignment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "second_line" : {
            "description" : "The second line on the card.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "CardCountryPermission" : {
        "properties" : {
          "country" : {
            "description" : "The country to allow transactions in (e.g. NL, DE).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_time" : {
            "description" : "Expiry time of this rule.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "id" : {
            "description" : "The id of the card country permission entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardCredit" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "monetary_account_id_fallback" : {
            "description" : "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "name_on_card" : {
            "description" : "The user's name as it will be on the card. Check 'card-name' for the available card names for a user.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "order_status" : {
            "description" : "The order status of this card. Can be CARD_REQUEST_PENDING or VIRTUAL_DELIVERY.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "pin_code_assignment" : {
            "description" : "Array of Types, PINs, account IDs assigned to the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardPinAssignment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "preferred_name_on_card" : {
            "description" : "The user's preferred name that can be put on the card.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "product_type" : {
            "description" : "The product type of the card to order.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "second_line" : {
            "description" : "The second line of text on the card, used as name/description for it. It can contain at most 17 characters and it can be empty.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of card to order. Can be MASTERCARD.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "second_line", "name_on_card", "type", "product_type" ],
        "type" : "object"
      },
      "CardCreditCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CardDebit" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "monetary_account_id_fallback" : {
            "description" : "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "name_on_card" : {
            "description" : "The user's name as it will be on the card. Check 'card-name' for the available card names for a user.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "order_status" : {
            "description" : "The order status of this card. Can be CARD_REQUEST_PENDING or VIRTUAL_DELIVERY.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "pin_code_assignment" : {
            "description" : "Array of Types, PINs, account IDs assigned to the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardPinAssignment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "preferred_name_on_card" : {
            "description" : "The user's preferred name that can be put on the card.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "product_type" : {
            "description" : "The product type of the card to order.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "second_line" : {
            "description" : "The second line of text on the card, used as name/description for it. It can contain at most 17 characters and it can be empty.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of card to order. Can be MAESTRO or MASTERCARD.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "second_line", "name_on_card", "type", "product_type" ],
        "type" : "object"
      },
      "CardDebitCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CardGeneratedCvc2" : {
        "properties" : {
          "type" : {
            "description" : "The type of generated cvc2. Can be STATIC or GENERATED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardGeneratedCvc2Create" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CardGeneratedCvc2Listing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the cvc code's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "cvc2" : {
            "description" : "The cvc2 code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_time" : {
            "description" : "Expiry time of the cvc2.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the cvc code.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the cvc2. Can be AVAILABLE, USED, EXPIRED, BLOCKED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of generated cvc2. Can be STATIC or GENERATED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the cvc code's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardGeneratedCvc2Read" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the cvc code's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "cvc2" : {
            "description" : "The cvc2 code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_time" : {
            "description" : "Expiry time of the cvc2.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the cvc code.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the cvc2. Can be AVAILABLE, USED, EXPIRED, BLOCKED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of generated cvc2. Can be STATIC or GENERATED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the cvc code's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardGeneratedCvc2Update" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CardListing" : {
        "properties" : {
          "card_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "card_limit_atm" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "card_shipment_tracking_url" : {
            "description" : "A tracking link provided by our shipment provider.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country" : {
            "description" : "The country that is domestic to the card. Defaults to country of residence of user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country_permission" : {
            "description" : "The countries for which to grant (temporary) permissions to use the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardCountryPermission"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the card's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_date" : {
            "description" : "Expiry date of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the card.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_monetary_account_current" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "label_monetary_account_ordered" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "monetary_account_id_fallback" : {
            "description" : "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "name_on_card" : {
            "description" : "The user's name on the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "order_status" : {
            "description" : "The order status of the card. Can be NEW_CARD_REQUEST_RECEIVED, CARD_REQUEST_PENDING, SENT_FOR_PRODUCTION, ACCEPTED_FOR_PRODUCTION, DELIVERED_TO_CUSTOMER, CARD_UPDATE_REQUESTED, CARD_UPDATE_PENDING, CARD_UPDATE_SENT, CARD_UPDATE_ACCEPTED, VIRTUAL_DELIVERY, NEW_CARD_REQUEST_PENDING_USER_APPROVAL, SENT_FOR_DELIVERY or NEW_CARD_REQUEST_CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "payment_account_reference" : {
            "description" : "The payment account reference number associated with the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pin_code_assignment" : {
            "description" : "Array of Types, PINs, account IDs assigned to the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardPinAssignment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "primary_account_numbers" : {
            "description" : "Array of PANs and their attributes.",
            "items" : {
              "$ref" : "#/components/schemas/CardPrimaryAccountNumber"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The public UUID of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "second_line" : {
            "description" : "The second line of text on the card",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN, CANCELLED, EXPIRED or PIN_TRIES_EXCEEDED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the card. Can be NONE or REPLACED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The sub-type of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the card. Can be MAESTRO, MASTERCARD.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the card's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "ID of the user who is owner of the card.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardNameListing" : {
        "properties" : {
          "possible_card_name_array" : {
            "description" : "All possible variations (of suitable length) of user's legal name for the debit card.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardPinAssignment" : {
        "properties" : {
          "monetary_account_id" : {
            "description" : "The ID of the monetary account to assign to this pin for the card.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "pin_code" : {
            "description" : "The 4 digit PIN to be assigned to this account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "routing_type" : {
            "description" : "Routing type. Can be MANUAL or AUTOMATIC",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "type" : {
            "description" : "PIN type. Can be PRIMARY, SECONDARY or TERTIARY",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardPrimaryAccountNumber" : {
        "properties" : {
          "description" : {
            "description" : "The description for this PAN.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "four_digit" : {
            "description" : "The last four digits of the PAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID for this Virtual PAN.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The ID of the monetary account to assign to this PAN, only for Online Cards.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status for this PAN, only for Online Cards.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "uuid" : {
            "description" : "The UUID for this Virtual PAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardRead" : {
        "properties" : {
          "card_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "card_limit_atm" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "card_shipment_tracking_url" : {
            "description" : "A tracking link provided by our shipment provider.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country" : {
            "description" : "The country that is domestic to the card. Defaults to country of residence of user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country_permission" : {
            "description" : "The countries for which to grant (temporary) permissions to use the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardCountryPermission"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the card's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_date" : {
            "description" : "Expiry date of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the card.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_monetary_account_current" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "label_monetary_account_ordered" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "monetary_account_id_fallback" : {
            "description" : "ID of the MA to be used as fallback for this card if insufficient balance. Fallback account is removed if not supplied.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "name_on_card" : {
            "description" : "The user's name on the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "order_status" : {
            "description" : "The order status of the card. Can be NEW_CARD_REQUEST_RECEIVED, CARD_REQUEST_PENDING, SENT_FOR_PRODUCTION, ACCEPTED_FOR_PRODUCTION, DELIVERED_TO_CUSTOMER, CARD_UPDATE_REQUESTED, CARD_UPDATE_PENDING, CARD_UPDATE_SENT, CARD_UPDATE_ACCEPTED, VIRTUAL_DELIVERY, NEW_CARD_REQUEST_PENDING_USER_APPROVAL, SENT_FOR_DELIVERY or NEW_CARD_REQUEST_CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "payment_account_reference" : {
            "description" : "The payment account reference number associated with the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pin_code_assignment" : {
            "description" : "Array of Types, PINs, account IDs assigned to the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardPinAssignment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "primary_account_numbers" : {
            "description" : "Array of PANs and their attributes.",
            "items" : {
              "$ref" : "#/components/schemas/CardPrimaryAccountNumber"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The public UUID of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "second_line" : {
            "description" : "The second line of text on the card",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status to set for the card. Can be ACTIVE, DEACTIVATED, LOST, STOLEN, CANCELLED, EXPIRED or PIN_TRIES_EXCEEDED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the card. Can be NONE or REPLACED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The sub-type of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the card. Can be MAESTRO, MASTERCARD.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the card's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "ID of the user who is owner of the card.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CardReplace" : {
        "properties" : {
          "name_on_card" : {
            "description" : "The user's name as it will be on the card. Check 'card-name' for the available card names for a user.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "pin_code_assignment" : {
            "description" : "Array of Types, PINs, account IDs assigned to the card.",
            "items" : {
              "$ref" : "#/components/schemas/CardPinAssignment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "preferred_name_on_card" : {
            "description" : "The user's preferred name that can be put on the card.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "second_line" : {
            "description" : "The second line on the card.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "type" : "object"
      },
      "CardReplaceCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CardUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "Certificate" : {
        "properties" : {
          "certificate" : {
            "description" : "A single certificate in the chain in .PEM format.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CertificatePinned" : {
        "properties" : {
          "certificate_chain" : {
            "description" : "The certificate chain in .PEM format.",
            "items" : {
              "$ref" : "#/components/schemas/Certificate"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "required" : [ "certificate_chain" ],
        "type" : "object"
      },
      "CertificatePinnedCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id generated for the pinned certificate chain.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CertificatePinnedDelete" : {
        "type" : "object"
      },
      "CertificatePinnedListing" : {
        "properties" : {
          "certificate_chain" : {
            "description" : "The certificate chain in .PEM format. Certificates are glued with newline characters.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id generated for the pinned certificate chain.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CertificatePinnedRead" : {
        "properties" : {
          "certificate_chain" : {
            "description" : "The certificate chain in .PEM format. Certificates are glued with newline characters.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id generated for the pinned certificate chain.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CoOwner" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "status" : {
            "description" : "Can be: ACCEPTED, REJECTED, PENDING or REVOKED",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Company" : {
        "properties" : {
          "address_main" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_postal" : {
            "$ref" : "#/components/schemas/Address"
          },
          "avatar_uuid" : {
            "description" : "The public UUID of the company's avatar.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "country" : {
            "description" : "The country where the company is registered.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "legal_form" : {
            "description" : "The company's legal form.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "name" : {
            "description" : "The company name.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "signup_track_type" : {
            "description" : "The type of signup track the user is following.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "subscription_type" : {
            "description" : "The subscription type for the company.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "ubo" : {
            "description" : "The names and birth dates of the company's ultimate beneficiary owners. Minimum zero, maximum four.",
            "items" : {
              "$ref" : "#/components/schemas/Ubo"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "vat_number" : {
            "$ref" : "#/components/schemas/CompanyVatNumber"
          }
        },
        "required" : [ "name", "address_main", "address_postal", "country", "legal_form", "subscription_type" ],
        "type" : "object"
      },
      "CompanyCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CompanyListing" : {
        "properties" : {
          "UserCompany" : {
            "$ref" : "#/components/schemas/UserCompany"
          }
        },
        "type" : "object"
      },
      "CompanyRead" : {
        "properties" : {
          "UserCompany" : {
            "$ref" : "#/components/schemas/UserCompany"
          }
        },
        "type" : "object"
      },
      "CompanyUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CompanyVatNumber" : {
        "properties" : {
          "country" : {
            "description" : "The country of the VAT identification number.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "value" : {
            "description" : "The VAT identification number number.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ConfirmationOfFunds" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "pointer_iban" : {
            "$ref" : "#/components/schemas/Pointer"
          }
        },
        "required" : [ "pointer_iban", "amount" ],
        "type" : "object"
      },
      "ConfirmationOfFundsCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CurrencyCloudBeneficiary" : {
        "properties" : {
          "all_field" : {
            "description" : "All fields that were required by CurrencyCloud. Obtained through the CurrencyCloudBeneficiaryRequirement listing.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "country" : {
            "description" : "The country of the beneficiary.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "currency" : {
            "description" : "The currency of the beneficiary.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "legal_entity_type" : {
            "description" : "The legal entity type of the beneficiary.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "name" : {
            "description" : "The name of the beneficiary.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "payment_type" : {
            "description" : "The payment type this requirement is for.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "name", "country", "currency", "payment_type", "legal_entity_type", "all_field" ],
        "type" : "object"
      },
      "CurrencyCloudBeneficiaryCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CurrencyCloudBeneficiaryListing" : {
        "properties" : {
          "account_number" : {
            "description" : "The account number to display for the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the beneficiaries creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "external_identifier" : {
            "description" : "The external identifier of the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the profile.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The name of the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the beneficiaries last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CurrencyCloudBeneficiaryRead" : {
        "properties" : {
          "account_number" : {
            "description" : "The account number to display for the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the beneficiaries creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "external_identifier" : {
            "description" : "The external identifier of the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the profile.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The name of the beneficiary.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the beneficiaries last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CurrencyCloudBeneficiaryRequirementField" : {
        "properties" : {
          "input_type" : {
            "description" : "The type of data to input. Determines the keyboard to display.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "label" : {
            "description" : "The label to display for the field.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The name of the field.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "validation_expression" : {
            "description" : "The expression to validate field input.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CurrencyCloudBeneficiaryRequirementListing" : {
        "properties" : {
          "all_field" : {
            "description" : "The fields that are required.",
            "items" : {
              "$ref" : "#/components/schemas/CurrencyCloudBeneficiaryRequirementField"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "legal_entity_type" : {
            "description" : "The entity type this requirement is for.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "payment_type" : {
            "description" : "The payment type this requirement is for.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CurrencyCloudPaymentQuote" : {
        "properties" : {
          "pointers" : {
            "description" : "The points we want to know the fees for.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          }
        },
        "required" : [ "pointers" ],
        "type" : "object"
      },
      "CurrencyCloudPaymentQuoteCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CurrencyConversionListing" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counter_amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counter_label_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the conversion's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_delivery_expected" : {
            "description" : "The expected delivery date of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "group_uuid" : {
            "description" : "The group uuid of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the conversion.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "rate" : {
            "description" : "The rate of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of this conversion in the pair.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the conversion's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CurrencyConversionQuote" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "currency_source" : {
            "description" : "The currency we are converting.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "currency_target" : {
            "description" : "The currency we are converting towards.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "status" : {
            "description" : "The status of the quote.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "amount", "currency_source", "currency_target", "counterparty_alias" ],
        "type" : "object"
      },
      "CurrencyConversionQuoteCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CurrencyConversionQuoteRead" : {
        "properties" : {
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the quote's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the quote.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "rate" : {
            "description" : "The conversion rate.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the quote.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "Timestamp for when this quote expires and the user should request a new one.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the quote's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CurrencyConversionQuoteUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "CurrencyConversionRead" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counter_amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counter_label_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the conversion's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_delivery_expected" : {
            "description" : "The expected delivery date of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "group_uuid" : {
            "description" : "The group uuid of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the conversion.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "rate" : {
            "description" : "The rate of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the conversion.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of this conversion in the pair.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the conversion's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Customer" : {
        "properties" : {
          "billing_account_id" : {
            "description" : "The primary billing account account's id.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the customer object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "invoice_notification_preference" : {
            "description" : "The preferred notification type for invoices.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the customer object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "CustomerLimit" : {
        "properties" : {
          "limit_amount_monthly" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "limit_card_debit_maestro" : {
            "description" : "The limit of Maestro cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_debit_mastercard" : {
            "description" : "The limit of MasterCard cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_debit_wildcard" : {
            "description" : "DEPRECTATED: The limit of wildcards, e.g. Maestro or MasterCard cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_replacement" : {
            "description" : "The limit of free replacement cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_wildcard" : {
            "description" : "The limit of wildcards, e.g. Maestro or MasterCard cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_monetary_account" : {
            "description" : "The limit of monetary accounts.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_monetary_account_remaining" : {
            "description" : "The amount of additional monetary accounts you can create.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "spent_amount_monthly" : {
            "$ref" : "#/components/schemas/Amount"
          }
        },
        "type" : "object"
      },
      "CustomerLimitListing" : {
        "properties" : {
          "limit_amount_monthly" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "limit_card_debit_maestro" : {
            "description" : "The limit of Maestro cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_debit_mastercard" : {
            "description" : "The limit of MasterCard cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_debit_wildcard" : {
            "description" : "DEPRECTATED: The limit of wildcards, e.g. Maestro or MasterCard cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_replacement" : {
            "description" : "The limit of free replacement cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_card_wildcard" : {
            "description" : "The limit of wildcards, e.g. Maestro or MasterCard cards.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_monetary_account" : {
            "description" : "The limit of monetary accounts.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "limit_monetary_account_remaining" : {
            "description" : "The amount of additional monetary accounts you can create.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "spent_amount_monthly" : {
            "$ref" : "#/components/schemas/Amount"
          }
        },
        "type" : "object"
      },
      "DeviceListing" : {
        "properties" : {
          "DeviceServer" : {
            "$ref" : "#/components/schemas/DeviceServer"
          }
        },
        "type" : "object"
      },
      "DeviceRead" : {
        "properties" : {
          "DeviceServer" : {
            "$ref" : "#/components/schemas/DeviceServer"
          }
        },
        "type" : "object"
      },
      "DeviceServer" : {
        "properties" : {
          "description" : {
            "description" : "The description of the DeviceServer. This is only for your own reference when reading the DeviceServer again.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "permitted_ips" : {
            "description" : "An array of IPs (v4 or v6) this DeviceServer will be able to do calls from. These will be linked to the API key.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "secret" : {
            "description" : "The API key. You can request an API key in the bunq app.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "description", "secret" ],
        "type" : "object"
      },
      "DeviceServerCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the DeviceServer as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "DeviceServerListing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the DeviceServer's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the DeviceServer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the DeviceServer as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "ip" : {
            "description" : "The ip address which was used to create the DeviceServer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the DeviceServer. Can be ACTIVE, BLOCKED, NEEDS_CONFIRMATION or OBSOLETE.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the DeviceServer's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "DeviceServerRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the DeviceServer's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the DeviceServer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the DeviceServer as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "ip" : {
            "description" : "The ip address which was used to create the DeviceServer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the DeviceServer. Can be ACTIVE, BLOCKED, NEEDS_CONFIRMATION or OBSOLETE.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the DeviceServer's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "DraftPayment" : {
        "properties" : {
          "entries" : {
            "description" : "The list of entries in the DraftPayment. Each entry will result in a payment when the DraftPayment is accepted.",
            "items" : {
              "$ref" : "#/components/schemas/DraftPaymentEntry"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "number_of_required_accepts" : {
            "description" : "The number of accepts that are required for the draft payment to receive status ACCEPTED. Currently only 1 is valid.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "previous_updated_timestamp" : {
            "description" : "The last updated_timestamp that you received for this DraftPayment. This needs to be provided to prevent race conditions.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "status" : {
            "description" : "The status of the DraftPayment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "entries", "number_of_required_accepts" ],
        "type" : "object"
      },
      "DraftPaymentAnchorObject" : {
        "properties" : {
          "Payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "PaymentBatch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          }
        },
        "type" : "object"
      },
      "DraftPaymentCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the created DrafPayment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "DraftPaymentEntry" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the DraftPayment.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "description" : {
            "description" : "The description for the DraftPayment. Maximum 140 characters for DraftPayments to external IBANs, 9000 characters for DraftPayments to only other bunq MonetaryAccounts.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the draft payment entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "Optional data to be included with the Payment specific to the merchant.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the draft payment entry.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "DraftPaymentListing" : {
        "properties" : {
          "entries" : {
            "description" : "The entries in the DraftPayment.",
            "items" : {
              "$ref" : "#/components/schemas/DraftPaymentEntry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the created DrafPayment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the DraftPayment applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "object" : {
            "$ref" : "#/components/schemas/DraftPaymentAnchorObject"
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "responses" : {
            "description" : "All responses to this draft payment.",
            "items" : {
              "$ref" : "#/components/schemas/DraftPaymentResponse"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "status" : {
            "description" : "The status of the DraftPayment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the DraftPayment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "DraftPaymentRead" : {
        "properties" : {
          "entries" : {
            "description" : "The entries in the DraftPayment.",
            "items" : {
              "$ref" : "#/components/schemas/DraftPaymentEntry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the created DrafPayment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the DraftPayment applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "object" : {
            "$ref" : "#/components/schemas/DraftPaymentAnchorObject"
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "responses" : {
            "description" : "All responses to this draft payment.",
            "items" : {
              "$ref" : "#/components/schemas/DraftPaymentResponse"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "status" : {
            "description" : "The status of the DraftPayment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the DraftPayment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "DraftPaymentResponse" : {
        "properties" : {
          "status" : {
            "description" : "The status with which was responded.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "DraftPaymentUpdate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the created DrafPayment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Error" : {
        "items" : {
          "properties" : {
            "error_description" : {
              "description" : "The error description in English.",
              "type" : "string"
            },
            "error_description_translated" : {
              "description" : "The error description translated to the user's language.",
              "type" : "string"
            }
          },
          "type" : "object"
        },
        "type" : "array"
      },
      "EventListing" : {
        "properties" : {
          "action" : {
            "description" : "The performed action. Can be: CREATE or UPDATE.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the event's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the event.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the event applied to (if it was a monetary account event).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "object" : {
            "$ref" : "#/components/schemas/EventObject"
          },
          "status" : {
            "description" : "The event status. Can be: FINALIZED or AWAITING_REPLY. An example of FINALIZED event is a payment received event, while an AWAITING_REPLY event is a request received event.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the event's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the user the event applied to (if it was a user event).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "EventObject" : {
        "properties" : {
          "BankSwitchServiceNetherlandsIncomingPayment" : {
            "$ref" : "#/components/schemas/BankSwitchServiceNetherlandsIncomingPayment"
          },
          "BunqMeFundraiserResult" : {
            "$ref" : "#/components/schemas/BunqMeFundraiserResult"
          },
          "BunqMeTab" : {
            "$ref" : "#/components/schemas/BunqMeTab"
          },
          "BunqMeTabResultResponse" : {
            "$ref" : "#/components/schemas/BunqMeTabResultResponse"
          },
          "Card" : {
            "$ref" : "#/components/schemas/Card"
          },
          "CardDebit" : {
            "$ref" : "#/components/schemas/CardDebit"
          },
          "DraftPayment" : {
            "$ref" : "#/components/schemas/DraftPayment"
          },
          "FeatureAnnouncement" : {
            "$ref" : "#/components/schemas/FeatureAnnouncement"
          },
          "IdealMerchantTransaction" : {
            "$ref" : "#/components/schemas/IdealMerchantTransaction"
          },
          "Invoice" : {
            "$ref" : "#/components/schemas/Invoice"
          },
          "MasterCardAction" : {
            "$ref" : "#/components/schemas/MasterCardAction"
          },
          "Payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "PaymentBatch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          },
          "RequestInquiry" : {
            "$ref" : "#/components/schemas/RequestInquiry"
          },
          "RequestInquiryBatch" : {
            "$ref" : "#/components/schemas/RequestInquiryBatch"
          },
          "RequestResponse" : {
            "$ref" : "#/components/schemas/RequestResponse"
          },
          "RewardRecipient" : {
            "$ref" : "#/components/schemas/RewardRecipient"
          },
          "RewardSender" : {
            "$ref" : "#/components/schemas/RewardSender"
          },
          "ScheduledInstance" : {
            "$ref" : "#/components/schemas/ScheduleInstance"
          },
          "ScheduledPayment" : {
            "$ref" : "#/components/schemas/SchedulePayment"
          },
          "ScheduledPaymentBatch" : {
            "$ref" : "#/components/schemas/SchedulePaymentBatch"
          },
          "ShareInviteBankInquiry" : {
            "$ref" : "#/components/schemas/ShareInviteMonetaryAccountInquiry"
          },
          "ShareInviteBankResponse" : {
            "$ref" : "#/components/schemas/ShareInviteMonetaryAccountResponse"
          },
          "SofortMerchantTransaction" : {
            "$ref" : "#/components/schemas/SofortMerchantTransaction"
          },
          "TransferwisePayment" : {
            "$ref" : "#/components/schemas/TransferwiseTransfer"
          }
        },
        "type" : "object"
      },
      "EventRead" : {
        "properties" : {
          "action" : {
            "description" : "The performed action. Can be: CREATE or UPDATE.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the event's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the event.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the event applied to (if it was a monetary account event).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "object" : {
            "$ref" : "#/components/schemas/EventObject"
          },
          "status" : {
            "description" : "The event status. Can be: FINALIZED or AWAITING_REPLY. An example of FINALIZED event is a payment received event, while an AWAITING_REPLY event is a request received event.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the event's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the user the event applied to (if it was a user event).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportAnnualOverview" : {
        "properties" : {
          "year" : {
            "description" : "The year for which the overview is.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "required" : [ "year" ],
        "type" : "object"
      },
      "ExportAnnualOverviewContentListing" : {
        "type" : "object"
      },
      "ExportAnnualOverviewCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the annual overview as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportAnnualOverviewDelete" : {
        "type" : "object"
      },
      "ExportAnnualOverviewListing" : {
        "properties" : {
          "alias_user" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The timestamp of the annual overview 's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the annual overview as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the annual overview 's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "year" : {
            "description" : "The year for which the overview is.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportAnnualOverviewRead" : {
        "properties" : {
          "alias_user" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The timestamp of the annual overview 's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the annual overview as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the annual overview 's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "year" : {
            "description" : "The year for which the overview is.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportRib" : {
        "type" : "object"
      },
      "ExportRibContentListing" : {
        "type" : "object"
      },
      "ExportRibCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the rib as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportRibDelete" : {
        "type" : "object"
      },
      "ExportRibListing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the RIB's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the rib as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the RIB's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportRibRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the RIB's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the rib as created on the server.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the RIB's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatement" : {
        "properties" : {
          "date_end" : {
            "description" : "The end date for making statements.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The start date for making statements.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "include_attachment" : {
            "description" : "Only for PDF exports. Includes attachments to mutations in the export, such as scanned receipts.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : true
          },
          "regional_format" : {
            "description" : "Required for CSV exports. The regional format of the statement, can be UK_US (comma-separated) or EUROPEAN (semicolon-separated).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "statement_format" : {
            "description" : "The format type of statement. Allowed values: MT940, CSV, PDF.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "statement_format", "date_start", "date_end" ],
        "type" : "object"
      },
      "ExportStatementCardContentListing" : {
        "type" : "object"
      },
      "ExportStatementCardCsv" : {
        "properties" : {
          "date_end" : {
            "description" : "The end date for making statements.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The start date for making statements.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "regional_format" : {
            "description" : "Required for CSV exports. The regional format of the statement, can be UK_US (comma-separated) or EUROPEAN (semicolon-separated).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "date_start", "date_end", "regional_format" ],
        "type" : "object"
      },
      "ExportStatementCardCsvCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "ExportStatementCardCsvDelete" : {
        "type" : "object"
      },
      "ExportStatementCardCsvListing" : {
        "properties" : {
          "card_id" : {
            "description" : "The card for which this statement was created.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "regional_format" : {
            "description" : "The regional format of a CSV statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementCardCsvRead" : {
        "properties" : {
          "card_id" : {
            "description" : "The card for which this statement was created.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "regional_format" : {
            "description" : "The regional format of a CSV statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementCardListing" : {
        "properties" : {
          "card_id" : {
            "description" : "The card for which this statement was created.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "regional_format" : {
            "description" : "The regional format of a CSV statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementCardPdf" : {
        "properties" : {
          "date_end" : {
            "description" : "The end date for making statements.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The start date for making statements.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "date_start", "date_end" ],
        "type" : "object"
      },
      "ExportStatementCardPdfCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "ExportStatementCardPdfDelete" : {
        "type" : "object"
      },
      "ExportStatementCardPdfListing" : {
        "properties" : {
          "card_id" : {
            "description" : "The card for which this statement was created.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementCardPdfRead" : {
        "properties" : {
          "card_id" : {
            "description" : "The card for which this statement was created.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementCardRead" : {
        "properties" : {
          "card_id" : {
            "description" : "The card for which this statement was created.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "regional_format" : {
            "description" : "The regional format of a CSV statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementContentListing" : {
        "type" : "object"
      },
      "ExportStatementCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "ExportStatementDelete" : {
        "type" : "object"
      },
      "ExportStatementListing" : {
        "properties" : {
          "alias_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "regional_format" : {
            "description" : "The regional format of a CSV statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "statement_format" : {
            "description" : "The format of statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "statement_number" : {
            "description" : "MT940 Statement number. Unique per monetary account.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementPayment" : {
        "type" : "object"
      },
      "ExportStatementPaymentContentListing" : {
        "type" : "object"
      },
      "ExportStatementPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "ExportStatementPaymentRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the single payment statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ExportStatementRead" : {
        "properties" : {
          "alias_monetary_account" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the statement model's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_end" : {
            "description" : "The date until which statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "date_start" : {
            "description" : "The date from when this statement shows transactions.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the customer statement model.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "regional_format" : {
            "description" : "The regional format of a CSV statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "statement_format" : {
            "description" : "The format of statement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "statement_number" : {
            "description" : "MT940 Statement number. Unique per monetary account.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the export.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the statement model's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "FeatureAnnouncement" : {
        "properties" : {
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "sub_title" : {
            "description" : "The event overview subtitle of the feature display",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "title" : {
            "description" : "The event overview title of the feature display",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the feature announcement so apps can override with their own stuff if desired",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "FeatureAnnouncementRead" : {
        "properties" : {
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "sub_title" : {
            "description" : "The event overview subtitle of the feature display",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "title" : {
            "description" : "The event overview title of the feature display",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the feature announcement so apps can override with their own stuff if desired",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Geolocation" : {
        "properties" : {
          "altitude" : {
            "description" : "The altitude for a geolocation restriction.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "latitude" : {
            "description" : "The latitude for a geolocation restriction.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "longitude" : {
            "description" : "The longitude for a geolocation restriction.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "radius" : {
            "description" : "The radius for a geolocation restriction.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "IdealMerchantTransaction" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_guaranteed" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_requested" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "expiration" : {
            "description" : "When the transaction will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer" : {
            "description" : "The BIC of the issuer.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_authentication_url" : {
            "description" : "The URL to visit to ",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_name" : {
            "description" : "The Name of the issuer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this ideal merchant transaction links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "purchase_identifier" : {
            "description" : "The 'purchase ID' of the iDEAL transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_timestamp" : {
            "description" : "When the status was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transaction_identifier" : {
            "description" : "The 'transaction ID' of the iDEAL transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "IdealMerchantTransactionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "IdealMerchantTransactionListing" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_guaranteed" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_requested" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "expiration" : {
            "description" : "When the transaction will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer" : {
            "description" : "The BIC of the issuer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_authentication_url" : {
            "description" : "The URL to visit to ",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_name" : {
            "description" : "The Name of the issuer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this ideal merchant transaction links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "purchase_identifier" : {
            "description" : "The 'purchase ID' of the iDEAL transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_timestamp" : {
            "description" : "When the status was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transaction_identifier" : {
            "description" : "The 'transaction ID' of the iDEAL transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "IdealMerchantTransactionRead" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_guaranteed" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_requested" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "expiration" : {
            "description" : "When the transaction will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer" : {
            "description" : "The BIC of the issuer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_authentication_url" : {
            "description" : "The URL to visit to ",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_name" : {
            "description" : "The Name of the issuer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this ideal merchant transaction links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "purchase_identifier" : {
            "description" : "The 'purchase ID' of the iDEAL transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_timestamp" : {
            "description" : "When the status was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transaction_identifier" : {
            "description" : "The 'transaction ID' of the iDEAL transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Image" : {
        "properties" : {
          "attachment_public_uuid" : {
            "description" : "The public UUID of the public attachment containing the image.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "content_type" : {
            "description" : "The content-type as a MIME filetype.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "height" : {
            "description" : "The image height in pixels.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "width" : {
            "description" : "The image width in pixels.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InsightEventListing" : {
        "properties" : {
          "action" : {
            "description" : "The performed action. Can be: CREATE or UPDATE.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the event's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the event.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the event applied to (if it was a monetary account event).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "object" : {
            "$ref" : "#/components/schemas/EventObject"
          },
          "status" : {
            "description" : "The event status. Can be: FINALIZED or AWAITING_REPLY. An example of FINALIZED event is a payment received event, while an AWAITING_REPLY event is a request received event.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the event's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the user the event applied to (if it was a user event).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InsightListing" : {
        "properties" : {
          "amount_total" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "category" : {
            "description" : "The category.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "category_translated" : {
            "description" : "The translated category.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "number_of_transactions" : {
            "description" : "The number of the transactions in the category.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InsightPreferenceDateListing" : {
        "properties" : {
          "day_of_month" : {
            "description" : "The day of month at which budgeting/insights should start.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Installation" : {
        "properties" : {
          "client_public_key" : {
            "description" : "Your public key. This is the public part of the key pair that you are going to use to create value of the \"X-Bunq-Client-Signature\" header for all future API calls.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "client_public_key" ],
        "type" : "object"
      },
      "InstallationCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          },
          "ServerPublicKey" : {
            "$ref" : "#/components/schemas/InstallationServerPublicKey"
          },
          "Token" : {
            "$ref" : "#/components/schemas/InstallationToken"
          }
        },
        "type" : "object"
      },
      "InstallationListing" : {
        "properties" : {
          "id" : {
            "description" : "The id of the Installation as created on the server. You can use this id to request the server's public key again.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InstallationRead" : {
        "properties" : {
          "id" : {
            "description" : "The id of the Installation as created on the server. You can use this id to request the server's public key again.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InstallationServerPublicKey" : {
        "properties" : {
          "server_public_key" : {
            "description" : "The server's public key for this Installation. You should use this key to verify the \"X-Bunq-Server-Signature\" header for each response from the server.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InstallationServerPublicKeyListing" : {
        "properties" : {
          "server_public_key" : {
            "description" : "The server's public key for this Installation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InstallationToken" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the Token's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the Token.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "token" : {
            "description" : "The installation token is the token the client has to provide in the \"X-Bunq-Client-Authentication\" header for the creation of a DeviceServer and SessionServer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the Token's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Invoice" : {
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "category" : {
            "description" : "The category to display to the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the invoice object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description provided by the admin.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "external_url" : {
            "description" : "The external url provided by the admin.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "group" : {
            "description" : "The invoice item groups.",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemGroup"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the invoice object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "invoice_date" : {
            "description" : "The invoice date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "invoice_number" : {
            "description" : "The invoice number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The invoice status.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "total_vat" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "updated" : {
            "description" : "The timestamp of the invoice object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "vat_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "description", "external_url" ],
        "type" : "object"
      },
      "InvoiceByUserListing" : {
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the invoice object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "group" : {
            "description" : "The invoice item groups.",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemGroup"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the invoice object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "invoice_date" : {
            "description" : "The invoice date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "invoice_number" : {
            "description" : "The invoice number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The invoice status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "total_vat" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "updated" : {
            "description" : "The timestamp of the invoice object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "vat_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InvoiceByUserRead" : {
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the invoice object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "group" : {
            "description" : "The invoice item groups.",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemGroup"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the invoice object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "invoice_date" : {
            "description" : "The invoice date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "invoice_number" : {
            "description" : "The invoice number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The invoice status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "total_vat" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "updated" : {
            "description" : "The timestamp of the invoice object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "vat_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InvoiceExportPdfContentListing" : {
        "type" : "object"
      },
      "InvoiceItem" : {
        "properties" : {
          "billing_date" : {
            "description" : "The billing date of the item.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the invoice item.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "quantity" : {
            "description" : "The number of items priced.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "total_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "type_description" : {
            "description" : "The price description.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type_description_translated" : {
            "description" : "The translated price description.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "unit_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "unit_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "vat" : {
            "description" : "The VAT tax fraction.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InvoiceItemGroup" : {
        "properties" : {
          "instance_description" : {
            "description" : "The identifier of the invoice item group.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "item" : {
            "description" : "The invoice items in the group.",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItem"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "product_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "product_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "type" : {
            "description" : "The type of the invoice item group.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type_description" : {
            "description" : "The description of the type of the invoice item group.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type_description_translated" : {
            "description" : "The translated description of the type of the invoice item group.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InvoiceListing" : {
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "category" : {
            "description" : "The category to display to the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the invoice object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "group" : {
            "description" : "The invoice item groups.",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemGroup"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the invoice object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "invoice_date" : {
            "description" : "The invoice date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "invoice_number" : {
            "description" : "The invoice number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The invoice status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "total_vat" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "updated" : {
            "description" : "The timestamp of the invoice object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "vat_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "InvoiceRead" : {
        "properties" : {
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "category" : {
            "description" : "The category to display to the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the invoice object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "group" : {
            "description" : "The invoice item groups.",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemGroup"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the invoice object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "invoice_date" : {
            "description" : "The invoice date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "invoice_number" : {
            "description" : "The invoice number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The invoice status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "total_vat" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_exclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "total_vat_inclusive" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "updated" : {
            "description" : "The timestamp of the invoice object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "vat_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Issuer" : {
        "properties" : {
          "bic" : {
            "description" : "The BIC code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The name of the bank.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "LabelCard" : {
        "properties" : {
          "expiry_date" : {
            "description" : "The date this card will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "label_user" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "second_line" : {
            "description" : "The second line on the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "uuid" : {
            "description" : "The public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "LabelMonetaryAccount" : {
        "properties" : {
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "bunq_me" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "country" : {
            "description" : "The country of the user. Formatted as a ISO 3166-1 alpha-2 country code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The name to display with this monetary account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "iban" : {
            "description" : "The IBAN of the monetary account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "is_light" : {
            "description" : "Whether or not the monetary account is light.",
            "readOnly" : true,
            "type" : "boolean",
            "writeOnly" : false
          },
          "label_user" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "merchant_category_code" : {
            "description" : "The merchant category code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "swift_account_number" : {
            "description" : "The account number used for a SWIFT payment. May or may not be an IBAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "swift_bic" : {
            "description" : "The BIC used for a SWIFT payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transferwise_account_number" : {
            "description" : "The account number used for a Transferwise payment. May or may not be an IBAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transferwise_bank_code" : {
            "description" : "The bank code used for a Transferwise payment. May or may not be a BIC.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "LabelUser" : {
        "properties" : {
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "country" : {
            "description" : "The country of the user. 000 stands for \"unknown\"",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The name to be displayed for this user, as it was given on the request.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "public_nick_name" : {
            "description" : "The current nickname of the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "uuid" : {
            "description" : "The public UUID of the label-user.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MasterCardAction" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "all_mastercard_action_refund" : {
            "description" : "A reference to the Refunds if they exist.",
            "items" : {
              "$ref" : "#/components/schemas/MasterCardActionRefund"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "amount_billing" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_converted" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_fee" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_local" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_original_billing" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_original_local" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "applied_limit" : {
            "description" : "The type of the limit applied to validate if this MasterCardAction was within the spending limits. The returned string matches the limit types as defined in the card endpoint.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "authorisation_status" : {
            "description" : "The status in the authorisation process.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "authorisation_type" : {
            "description" : "The type of transaction that was delivered using the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "card_authorisation_id_response" : {
            "description" : "The response code by which authorised transaction can be identified as authorised by bunq.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "card_id" : {
            "description" : "The id of the card this action links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "city" : {
            "description" : "The city where the message originates from as announced by the terminal.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "clearing_expiry_time" : {
            "description" : "The time when the processing of the clearing is expired, refunding the authorisation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "clearing_status" : {
            "description" : "The clearing status of the authorisation. Can be 'PENDING', 'FIRST_PRESENTMENT_COMPLETE' or 'REFUND_LENIENCY'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "decision" : {
            "description" : "Why the transaction was denied, if it was denied, or just ALLOWED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_description" : {
            "description" : "Empty if allowed, otherwise a textual explanation of why it was denied.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_description_translated" : {
            "description" : "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_together_url" : {
            "description" : "Empty if allowed or if no relevant Together topic exists, otherwise contains the URL for a Together topic with more information about the decision.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for this transaction to display.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "eligible_whitelist_id" : {
            "description" : "The whitelist id for this action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MastercardAction.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_card" : {
            "$ref" : "#/components/schemas/LabelCard"
          },
          "maturity_date" : {
            "description" : "The maturity date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this action links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "pan_entry_mode_user" : {
            "description" : "The type of entry mode the user used. Can be 'ATM', 'ICC', 'MAGNETIC_STRIPE' or 'E_COMMERCE'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "payment_status" : {
            "description" : "The payment status of the transaction. For example PAYMENT_SUCCESSFUL, for a successful payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pos_card_holder_presence" : {
            "description" : "The Card Holder Presence type of the POS.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pos_card_presence" : {
            "description" : "The Card Presence type of the POS.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "reservation_expiry_time" : {
            "description" : "If this is a reservation, the moment the reservation will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "secure_code_id" : {
            "description" : "The secure code id for this mastercard action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "settlement_status" : {
            "description" : "The setlement status in the authorisation process.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "token_status" : {
            "description" : "If this is a tokenisation action, this shows the status of the token.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "wallet_provider_id" : {
            "description" : "The ID of the wallet provider as defined by MasterCard. 420 = bunq Android app with Tap&Pay; 103 = Apple Pay.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MasterCardActionListing" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "all_mastercard_action_refund" : {
            "description" : "A reference to the Refunds if they exist.",
            "items" : {
              "$ref" : "#/components/schemas/MasterCardActionRefund"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "amount_billing" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_converted" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_fee" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_local" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_original_billing" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_original_local" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "applied_limit" : {
            "description" : "The type of the limit applied to validate if this MasterCardAction was within the spending limits. The returned string matches the limit types as defined in the card endpoint.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "authorisation_status" : {
            "description" : "The status in the authorisation process.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "authorisation_type" : {
            "description" : "The type of transaction that was delivered using the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "card_authorisation_id_response" : {
            "description" : "The response code by which authorised transaction can be identified as authorised by bunq.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "card_id" : {
            "description" : "The id of the card this action links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "city" : {
            "description" : "The city where the message originates from as announced by the terminal.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "clearing_expiry_time" : {
            "description" : "The time when the processing of the clearing is expired, refunding the authorisation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "clearing_status" : {
            "description" : "The clearing status of the authorisation. Can be 'PENDING', 'FIRST_PRESENTMENT_COMPLETE' or 'REFUND_LENIENCY'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "decision" : {
            "description" : "Why the transaction was denied, if it was denied, or just ALLOWED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_description" : {
            "description" : "Empty if allowed, otherwise a textual explanation of why it was denied.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_description_translated" : {
            "description" : "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_together_url" : {
            "description" : "Empty if allowed or if no relevant Together topic exists, otherwise contains the URL for a Together topic with more information about the decision.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for this transaction to display.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "eligible_whitelist_id" : {
            "description" : "The whitelist id for this action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MastercardAction.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_card" : {
            "$ref" : "#/components/schemas/LabelCard"
          },
          "maturity_date" : {
            "description" : "The maturity date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this action links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "pan_entry_mode_user" : {
            "description" : "The type of entry mode the user used. Can be 'ATM', 'ICC', 'MAGNETIC_STRIPE' or 'E_COMMERCE'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "payment_status" : {
            "description" : "The payment status of the transaction. For example PAYMENT_SUCCESSFUL, for a successful payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pos_card_holder_presence" : {
            "description" : "The Card Holder Presence type of the POS.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pos_card_presence" : {
            "description" : "The Card Presence type of the POS.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "reservation_expiry_time" : {
            "description" : "If this is a reservation, the moment the reservation will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "secure_code_id" : {
            "description" : "The secure code id for this mastercard action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "settlement_status" : {
            "description" : "The setlement status in the authorisation process.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "token_status" : {
            "description" : "If this is a tokenisation action, this shows the status of the token.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "wallet_provider_id" : {
            "description" : "The ID of the wallet provider as defined by MasterCard. 420 = bunq Android app with Tap&Pay; 103 = Apple Pay.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MasterCardActionRead" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "all_mastercard_action_refund" : {
            "description" : "A reference to the Refunds if they exist.",
            "items" : {
              "$ref" : "#/components/schemas/MasterCardActionRefund"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "amount_billing" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_converted" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_fee" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_local" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_original_billing" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_original_local" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "applied_limit" : {
            "description" : "The type of the limit applied to validate if this MasterCardAction was within the spending limits. The returned string matches the limit types as defined in the card endpoint.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "authorisation_status" : {
            "description" : "The status in the authorisation process.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "authorisation_type" : {
            "description" : "The type of transaction that was delivered using the card.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "card_authorisation_id_response" : {
            "description" : "The response code by which authorised transaction can be identified as authorised by bunq.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "card_id" : {
            "description" : "The id of the card this action links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "city" : {
            "description" : "The city where the message originates from as announced by the terminal.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "clearing_expiry_time" : {
            "description" : "The time when the processing of the clearing is expired, refunding the authorisation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "clearing_status" : {
            "description" : "The clearing status of the authorisation. Can be 'PENDING', 'FIRST_PRESENTMENT_COMPLETE' or 'REFUND_LENIENCY'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "decision" : {
            "description" : "Why the transaction was denied, if it was denied, or just ALLOWED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_description" : {
            "description" : "Empty if allowed, otherwise a textual explanation of why it was denied.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_description_translated" : {
            "description" : "Empty if allowed, otherwise a textual explanation of why it was denied in user's language.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "decision_together_url" : {
            "description" : "Empty if allowed or if no relevant Together topic exists, otherwise contains the URL for a Together topic with more information about the decision.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for this transaction to display.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "eligible_whitelist_id" : {
            "description" : "The whitelist id for this action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MastercardAction.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_card" : {
            "$ref" : "#/components/schemas/LabelCard"
          },
          "maturity_date" : {
            "description" : "The maturity date.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this action links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "pan_entry_mode_user" : {
            "description" : "The type of entry mode the user used. Can be 'ATM', 'ICC', 'MAGNETIC_STRIPE' or 'E_COMMERCE'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "payment_status" : {
            "description" : "The payment status of the transaction. For example PAYMENT_SUCCESSFUL, for a successful payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pos_card_holder_presence" : {
            "description" : "The Card Holder Presence type of the POS.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "pos_card_presence" : {
            "description" : "The Card Presence type of the POS.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "reservation_expiry_time" : {
            "description" : "If this is a reservation, the moment the reservation will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "secure_code_id" : {
            "description" : "The secure code id for this mastercard action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "settlement_status" : {
            "description" : "The setlement status in the authorisation process.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "token_status" : {
            "description" : "If this is a tokenisation action, this shows the status of the token.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "wallet_provider_id" : {
            "description" : "The ID of the wallet provider as defined by MasterCard. 420 = bunq Android app with Tap&Pay; 103 = Apple Pay.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MasterCardActionReference" : {
        "properties" : {
          "event_id" : {
            "description" : "The id of the event.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MasterCardActionRefund" : {
        "properties" : {
          "additional_information" : {
            "$ref" : "#/components/schemas/AdditionalInformation"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments to attach to the refund request.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMasterCardActionRefund"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "category" : {
            "description" : "The category of the refund, required for chargeback.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "comment" : {
            "description" : "Comment about the refund.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the refund's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for this transaction to display.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the refund.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_card" : {
            "$ref" : "#/components/schemas/LabelCard"
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "mastercard_action_id" : {
            "description" : "The id of mastercard action being refunded.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason of the refund. Can be REFUND_EXPIRED_TRANSACTION, REFUND_REQUESTED, REFUND_MERCHANT, REFUND_CHARGEBACK.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reference_mastercard_action_event" : {
            "description" : "The reference to the object this refund applies to.",
            "items" : {
              "$ref" : "#/components/schemas/MasterCardActionReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the refunded mastercard action. Can be AUTO_APPROVED, AUTO_APPROVED_WAITING_FOR_EXPIRY, PENDING_APPROVAL, APPROVED, REFUNDED, DENIED or FAILED",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_description" : {
            "description" : "Description of the refund's current status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_description_translated" : {
            "description" : "Description of the refund's current status, translated in user's language.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_together_url" : {
            "description" : "Together topic concerning the refund's current status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The sub type of this refund indicating whether the chargeback will be FULL or PARTIAL.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "terms_and_conditions" : {
            "description" : "Proof that the user acknowledged the terms and conditions for chargebacks.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "time_refund" : {
            "description" : "The time the refund will take place.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "Type of this refund. Can de REFUND or CHARGEBACK",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the refund's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MasterCardIdentityCheckChallengeRequestUser" : {
        "properties" : {
          "status" : {
            "description" : "The status of the identity check. Can be ACCEPTED_PENDING_RESPONSE or REJECTED_PENDING_RESPONSE.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "status" ],
        "type" : "object"
      },
      "MasterCardIdentityCheckChallengeRequestUserRead" : {
        "properties" : {
          "amount" : {
            "description" : "The transaction amount.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "description" : {
            "description" : "The description of the purchase. NULL if no description is given.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "event_id" : {
            "description" : "The ID of the latest event for the identity check.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "expiry_time" : {
            "description" : "When the identity check expires.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the secure code. Can be PENDING, ACCEPTED, REJECTED, EXPIRED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MasterCardIdentityCheckChallengeRequestUserUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "MasterCardPaymentListing" : {
        "type" : "object"
      },
      "MonetaryAccountBank" : {
        "properties" : {
          "avatar_uuid" : {
            "description" : "The UUID of the Avatar of the MonetaryAccountBank.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "country_iban" : {
            "description" : "The country of the monetary account IBAN.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountBank as an ISO 4217 formatted currency code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountBank. Defaults to 'bunq account'.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The legal name of the user / company using this monetary account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER. Should only be specified if updating the status to CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message. Should only be specified if updating the status to CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountBank. Ignored in POST requests (always set to ACTIVE) can be CANCELLED or PENDING_REOPEN in PUT requests to cancel (close) or reopen the MonetaryAccountBank. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountBank providing extra information regarding the status. Should be ignored for POST requests. In case of PUT requests with status CANCELLED it can only be REDEMPTION_VOLUNTARY, while with status PENDING_REOPEN it can only be NONE. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "currency" ],
        "type" : "object"
      },
      "MonetaryAccountBankCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountBankListing" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountBank.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountBank's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountBank as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountBank. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The legal name of the user / company using this monetary account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountBank.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountBank's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountBank. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountBank providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountBank's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountBank.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountBankRead" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountBank.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountBank's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountBank as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountBank. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The legal name of the user / company using this monetary account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountBank.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountBank's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountBank. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountBank providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountBank's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountBank.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountBankUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountExternal" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountExternal.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "avatar_uuid" : {
            "description" : "The UUID of the Avatar of the MonetaryAccountExternal.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountExternal's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountExternal as an ISO 4217 formatted currency code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountExternal. Defaults to 'bunq account'.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The legal name of the user / company using this monetary account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountExternal.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountExternal's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountExternal, can only be OTHER.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountExternal. Can be any user provided message.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountExternal. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountExternal providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountExternal's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountExternal.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountExternalListing" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountExternal.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountExternal's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountExternal as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountExternal. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The legal name of the user / company using this monetary account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountExternal.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountExternal's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountExternal, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountExternal. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountExternal. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountExternal providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountExternal's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountExternal.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountExternalRead" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountExternal.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountExternal's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountExternal as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountExternal. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The legal name of the user / company using this monetary account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountExternal.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountExternal's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountExternal, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountExternal. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountExternal. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountExternal providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountExternal's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountExternal.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountInvestment" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountInvestment.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "avatar_uuid" : {
            "description" : "The UUID of the Avatar of the MonetaryAccountInvestment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "birdee_investment_portfolio" : {
            "$ref" : "#/components/schemas/BirdeeInvestmentPortfolio"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountInvestment's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountInvestment as an ISO 4217 formatted currency code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountInvestment. Defaults to 'bunq account'.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The legal name of the user / company using this monetary account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountInvestment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "provider" : {
            "description" : "The provider of the investment service.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountInvestment's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountInvestment, can only be OTHER.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountInvestment. Can be any user provided message.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountInvestment. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountInvestment providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountInvestment's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountInvestment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "required" : [ "provider" ],
        "type" : "object"
      },
      "MonetaryAccountJoint" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases to add to MonetaryAccountJoint. Must all be confirmed first. Can mostly be ignored.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "all_co_owner" : {
            "description" : "The users the account will be joint with.",
            "items" : {
              "$ref" : "#/components/schemas/CoOwner"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar_uuid" : {
            "description" : "The UUID of the Avatar of the MonetaryAccountJoint.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountJoint as an ISO 4217 formatted currency code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountJoint. Defaults to 'bunq account'.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountJoint, can only be OTHER. Should only be specified if updating the status to CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountJoint. Can be any user provided message. Should only be specified if updating the status to CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountJoint. Ignored in POST requests (always set to ACTIVE) can be CANCELLED or PENDING_REOPEN in PUT requests to cancel (close) or reopen the MonetaryAccountJoint. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountJoint providing extra information regarding the status. Should be ignored for POST requests. In case of PUT requests with status CANCELLED it can only be REDEMPTION_VOLUNTARY, while with status PENDING_REOPEN it can only be NONE. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "currency", "all_co_owner" ],
        "type" : "object"
      },
      "MonetaryAccountJointCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountJointListing" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountJoint.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_co_owner" : {
            "description" : "The users the account will be joint with.",
            "items" : {
              "$ref" : "#/components/schemas/CoOwner"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountJoint's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountJoint as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountJoint. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountJoint.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountJoint's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountJoint, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountJoint. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountJoint. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountJoint providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountJoint's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountJoint.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountJointRead" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountJoint.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_co_owner" : {
            "description" : "The users the account will be joint with.",
            "items" : {
              "$ref" : "#/components/schemas/CoOwner"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountJoint's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountJoint as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountJoint. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountJoint.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountJoint's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountJoint, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountJoint. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountJoint. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountJoint providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountJoint's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountJoint.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountJointUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountLight" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountLight.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "avatar_uuid" : {
            "description" : "The UUID of the Avatar of the MonetaryAccountLight.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "balance_maximum" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "budget_month_maximum" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "budget_month_used" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "budget_withdrawal_year_maximum" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "budget_withdrawal_year_used" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "budget_year_maximum" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "budget_year_used" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountLight's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountLight as an ISO 4217 formatted currency code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountLight. Defaults to 'bunq account'.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountLight.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountLight's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountBank, can only be OTHER.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountBank. Can be any user provided message.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountLight. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountLight providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountLight's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountLight.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountListing" : {
        "properties" : {
          "MonetaryAccountBank" : {
            "$ref" : "#/components/schemas/MonetaryAccountBank"
          },
          "MonetaryAccountExternal" : {
            "$ref" : "#/components/schemas/MonetaryAccountExternal"
          },
          "MonetaryAccountInvestment" : {
            "$ref" : "#/components/schemas/MonetaryAccountInvestment"
          },
          "MonetaryAccountJoint" : {
            "$ref" : "#/components/schemas/MonetaryAccountJoint"
          },
          "MonetaryAccountLight" : {
            "$ref" : "#/components/schemas/MonetaryAccountLight"
          },
          "MonetaryAccountSavings" : {
            "$ref" : "#/components/schemas/MonetaryAccountSavings"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountProfile" : {
        "properties" : {
          "profile_drain" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfileDrain"
          },
          "profile_fill" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfileFill"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountProfileDrain" : {
        "properties" : {
          "balance_preferred" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "balance_threshold_high" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "savings_account_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "status" : {
            "description" : "The status of the profile.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountProfileFill" : {
        "properties" : {
          "balance_preferred" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "balance_threshold_low" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "issuer" : {
            "$ref" : "#/components/schemas/Issuer"
          },
          "method_fill" : {
            "description" : "The method used to fill the monetary account. Currently only iDEAL is supported, and it is the default one.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the profile.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountRead" : {
        "properties" : {
          "MonetaryAccountBank" : {
            "$ref" : "#/components/schemas/MonetaryAccountBank"
          },
          "MonetaryAccountExternal" : {
            "$ref" : "#/components/schemas/MonetaryAccountExternal"
          },
          "MonetaryAccountInvestment" : {
            "$ref" : "#/components/schemas/MonetaryAccountInvestment"
          },
          "MonetaryAccountJoint" : {
            "$ref" : "#/components/schemas/MonetaryAccountJoint"
          },
          "MonetaryAccountLight" : {
            "$ref" : "#/components/schemas/MonetaryAccountLight"
          },
          "MonetaryAccountSavings" : {
            "$ref" : "#/components/schemas/MonetaryAccountSavings"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountSavings" : {
        "properties" : {
          "all_co_owner" : {
            "description" : "The users the account will be joint with.",
            "items" : {
              "$ref" : "#/components/schemas/CoOwner"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar_uuid" : {
            "description" : "The UUID of the Avatar of the MonetaryAccountSavings.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountSavings as an ISO 4217 formatted currency code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountSavings. Defaults to 'bunq account'.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountSavings, can only be OTHER. Should only be specified if updating the status to CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountSavings. Can be any user provided message. Should only be specified if updating the status to CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "savings_goal" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountSavings. Ignored in POST requests (always set to ACTIVE) can be CANCELLED or PENDING_REOPEN in PUT requests to cancel (close) or reopen the MonetaryAccountSavings. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountSavings providing extra information regarding the status. Should be ignored for POST requests. In case of PUT requests with status CANCELLED it can only be REDEMPTION_VOLUNTARY, while with status PENDING_REOPEN it can only be NONE. When updating the status and/or sub_status no other fields can be updated in the same request (and vice versa).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "currency" ],
        "type" : "object"
      },
      "MonetaryAccountSavingsCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountSavingsListing" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountSavings.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_co_owner" : {
            "description" : "The users the account will be joint with.",
            "items" : {
              "$ref" : "#/components/schemas/CoOwner"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountSavings's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountSavings as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountSavings. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountSavings.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountSavings's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountSavings, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountSavings. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "savings_goal" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "savings_goal_progress" : {
            "description" : "The progress in percentages for the Savings Goal set for this MonetaryAccountSavings.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountSavings. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountSavings providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountSavings's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountSavings.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountSavingsRead" : {
        "properties" : {
          "alias" : {
            "description" : "The Aliases for the MonetaryAccountSavings.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_auto_save_id" : {
            "description" : "The ids of the AutoSave.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "all_co_owner" : {
            "description" : "The users the account will be joint with.",
            "items" : {
              "$ref" : "#/components/schemas/CoOwner"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the MonetaryAccountSavings's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency of the MonetaryAccountSavings as an ISO 4217 formatted currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "The description of the MonetaryAccountSavings. Defaults to 'bunq account'.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the MonetaryAccountSavings.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_profile" : {
            "$ref" : "#/components/schemas/MonetaryAccountProfile"
          },
          "overdraft_limit" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "public_uuid" : {
            "description" : "The MonetaryAccountSavings's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason" : {
            "description" : "The reason for voluntarily cancelling (closing) the MonetaryAccountSavings, can only be OTHER.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reason_description" : {
            "description" : "The optional free-form reason for voluntarily cancelling (closing) the MonetaryAccountSavings. Can be any user provided message.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "savings_goal" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "savings_goal_progress" : {
            "description" : "The progress in percentages for the Savings Goal set for this MonetaryAccountSavings.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "setting" : {
            "$ref" : "#/components/schemas/MonetaryAccountSetting"
          },
          "status" : {
            "description" : "The status of the MonetaryAccountSavings. Can be: ACTIVE, BLOCKED, CANCELLED or PENDING_REOPEN",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The sub-status of the MonetaryAccountSavings providing extra information regarding the status. Will be NONE for ACTIVE or PENDING_REOPEN, COMPLETELY or ONLY_ACCEPTING_INCOMING for BLOCKED and REDEMPTION_INVOLUNTARY, REDEMPTION_VOLUNTARY or PERMANENT for CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the MonetaryAccountSavings's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The id of the User who owns the MonetaryAccountSavings.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "MonetaryAccountSavingsUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "MonetaryAccountSetting" : {
        "properties" : {
          "color" : {
            "description" : "The color chosen for the MonetaryAccount.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "default_avatar_status" : {
            "description" : "The status of the avatar. Can be either AVATAR_DEFAULT, AVATAR_CUSTOM or AVATAR_UNDETERMINED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "icon" : {
            "description" : "The icon chosen for the MonetaryAccount.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "restriction_chat" : {
            "description" : "The chat restriction. Possible values are ALLOW_INCOMING or BLOCK_INCOMING",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sdd_expiration_action" : {
            "description" : "The preference for this monetary account on whether to automatically accept or reject expiring SDDs.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBankSwitchServiceNetherlandsIncomingPayment" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentDelete" : {
        "type" : "object"
      },
      "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBankSwitchServiceNetherlandsIncomingPaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBunqMeFundraiserResult" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentBunqMeFundraiserResultCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBunqMeFundraiserResultDelete" : {
        "type" : "object"
      },
      "NoteAttachmentBunqMeFundraiserResultListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBunqMeFundraiserResultRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentBunqMeFundraiserResultUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentDraftPayment" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentDraftPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentDraftPaymentDelete" : {
        "type" : "object"
      },
      "NoteAttachmentDraftPaymentListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentDraftPaymentRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentDraftPaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentIdealMerchantTransaction" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentIdealMerchantTransactionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentIdealMerchantTransactionDelete" : {
        "type" : "object"
      },
      "NoteAttachmentIdealMerchantTransactionListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentIdealMerchantTransactionRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentIdealMerchantTransactionUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentMasterCardAction" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentMasterCardActionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentMasterCardActionDelete" : {
        "type" : "object"
      },
      "NoteAttachmentMasterCardActionListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentMasterCardActionRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentMasterCardActionUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPayment" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentPaymentBatch" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentPaymentBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPaymentBatchDelete" : {
        "type" : "object"
      },
      "NoteAttachmentPaymentBatchListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPaymentBatchRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPaymentBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPaymentDelete" : {
        "type" : "object"
      },
      "NoteAttachmentPaymentListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPaymentRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentPaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiry" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryBatch" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryBatchDelete" : {
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryBatchListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryBatchRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryDelete" : {
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestInquiryUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestResponse" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentRequestResponseCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestResponseDelete" : {
        "type" : "object"
      },
      "NoteAttachmentRequestResponseListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestResponseRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentRequestResponseUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentScheduleInstance" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentScheduleInstanceCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentScheduleInstanceDelete" : {
        "type" : "object"
      },
      "NoteAttachmentScheduleInstanceListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentScheduleInstanceRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentScheduleInstanceUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePayment" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentBatch" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentBatchDelete" : {
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentBatchListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentBatchRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentDelete" : {
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSchedulePaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSofortMerchantTransaction" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentSofortMerchantTransactionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSofortMerchantTransactionDelete" : {
        "type" : "object"
      },
      "NoteAttachmentSofortMerchantTransactionListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSofortMerchantTransactionRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentSofortMerchantTransactionUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentWhitelistResult" : {
        "properties" : {
          "attachment_id" : {
            "description" : "The reference to the uploaded file to attach to this note.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "attachment_id" ],
        "type" : "object"
      },
      "NoteAttachmentWhitelistResultCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteAttachmentWhitelistResultDelete" : {
        "type" : "object"
      },
      "NoteAttachmentWhitelistResultListing" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentWhitelistResultRead" : {
        "properties" : {
          "attachment" : {
            "description" : "The attachment attached to the note.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "Optional description of the attachment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteAttachmentWhitelistResultUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextBankSwitchServiceNetherlandsIncomingPayment" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextBankSwitchServiceNetherlandsIncomingPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextBankSwitchServiceNetherlandsIncomingPaymentDelete" : {
        "type" : "object"
      },
      "NoteTextBankSwitchServiceNetherlandsIncomingPaymentListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextBankSwitchServiceNetherlandsIncomingPaymentRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextBankSwitchServiceNetherlandsIncomingPaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextBunqMeFundraiserResult" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextBunqMeFundraiserResultCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextBunqMeFundraiserResultDelete" : {
        "type" : "object"
      },
      "NoteTextBunqMeFundraiserResultListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextBunqMeFundraiserResultRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextBunqMeFundraiserResultUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextDraftPayment" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextDraftPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextDraftPaymentDelete" : {
        "type" : "object"
      },
      "NoteTextDraftPaymentListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextDraftPaymentRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextDraftPaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextIdealMerchantTransaction" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextIdealMerchantTransactionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextIdealMerchantTransactionDelete" : {
        "type" : "object"
      },
      "NoteTextIdealMerchantTransactionListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextIdealMerchantTransactionRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextIdealMerchantTransactionUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextMasterCardAction" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextMasterCardActionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextMasterCardActionDelete" : {
        "type" : "object"
      },
      "NoteTextMasterCardActionListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextMasterCardActionRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextMasterCardActionUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextPayment" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentBatch" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentBatchDelete" : {
        "type" : "object"
      },
      "NoteTextPaymentBatchListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentBatchRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentDelete" : {
        "type" : "object"
      },
      "NoteTextPaymentListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextPaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiry" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryBatch" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryBatchDelete" : {
        "type" : "object"
      },
      "NoteTextRequestInquiryBatchListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryBatchRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryDelete" : {
        "type" : "object"
      },
      "NoteTextRequestInquiryListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestInquiryUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextRequestResponse" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestResponseCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextRequestResponseDelete" : {
        "type" : "object"
      },
      "NoteTextRequestResponseListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestResponseRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextRequestResponseUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextScheduleInstance" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextScheduleInstanceCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextScheduleInstanceDelete" : {
        "type" : "object"
      },
      "NoteTextScheduleInstanceListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextScheduleInstanceRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextScheduleInstanceUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePayment" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentBatch" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentBatchDelete" : {
        "type" : "object"
      },
      "NoteTextSchedulePaymentBatchListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentBatchRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentDelete" : {
        "type" : "object"
      },
      "NoteTextSchedulePaymentListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSchedulePaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextSofortMerchantTransaction" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSofortMerchantTransactionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextSofortMerchantTransactionDelete" : {
        "type" : "object"
      },
      "NoteTextSofortMerchantTransactionListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSofortMerchantTransactionRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextSofortMerchantTransactionUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextWhitelistResult" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextWhitelistResultCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NoteTextWhitelistResultDelete" : {
        "type" : "object"
      },
      "NoteTextWhitelistResultListing" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextWhitelistResultRead" : {
        "properties" : {
          "content" : {
            "description" : "The content of the note.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the note.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "label_user_creator" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NoteTextWhitelistResultUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NotificationFilter" : {
        "properties" : {
          "category" : {
            "description" : "The notification category that will match this notification filter. Possible choices are BILLING, CARD_TRANSACTION_FAILED, CARD_TRANSACTION_SUCCESSFUL, CHAT, DRAFT_PAYMENT, IDEAL, SOFORT, MONETARY_ACCOUNT_PROFILE, MUTATION, PAYMENT, PROMOTION, REQUEST, SCHEDULE_RESULT, SCHEDULE_STATUS, SHARE, SUPPORT, TAB_RESULT, USER_APPROVAL.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "notification_delivery_method" : {
            "description" : "The delivery method via which notifications that match this notification filter will be delivered. Possible choices are PUSH for delivery via push notification and URL for delivery via URL callback.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "notification_target" : {
            "description" : "The target of notifications that match this notification filter. For URL notification filters this is the URL to which the callback will be made. For PUSH notifications filters this should always be null.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterEmail" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a email notification for this user.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterEmail"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterEmailCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NotificationFilterEmailListing" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a email notification for this user.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterEmail"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterPush" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a push notification for this user.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterPush"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterPushCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NotificationFilterPushListing" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a push notification for this user.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterPush"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterUrl" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a url notification for this user.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterUrl"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterUrlCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NotificationFilterUrlListing" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a url notification for this user.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterUrl"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterUrlMonetaryAccount" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a url notification for this monetary account.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterUrl"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "NotificationFilterUrlMonetaryAccountCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "NotificationFilterUrlMonetaryAccountListing" : {
        "properties" : {
          "notification_filters" : {
            "description" : "The types of notifications that will result in a url notification for this monetary account.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilterUrl"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "OauthCallbackUrl" : {
        "properties" : {
          "url" : {
            "description" : "The URL for this callback.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "url" ],
        "type" : "object"
      },
      "OauthCallbackUrlCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "OauthCallbackUrlDelete" : {
        "type" : "object"
      },
      "OauthCallbackUrlListing" : {
        "properties" : {
          "url" : {
            "description" : "The URL for this callback.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "OauthCallbackUrlRead" : {
        "properties" : {
          "url" : {
            "description" : "The URL for this callback.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "OauthCallbackUrlUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "OauthClient" : {
        "properties" : {
          "status" : {
            "description" : "The status of the Oauth Client, can be ACTIVE or CANCELLED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "OauthClientCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "OauthClientListing" : {
        "properties" : {
          "callback_url" : {
            "description" : "The callback URLs which are bound to this Oauth Client",
            "items" : {
              "$ref" : "#/components/schemas/OauthCallbackUrl"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "client_id" : {
            "description" : "The Client ID associated with this Oauth Client",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The display name of this Oauth Client",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "Id of the client.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "secret" : {
            "description" : "Secret associated with this Oauth Client",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the pack group, can be ACTIVE, CANCELLED or CANCELLED_PENDING.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "OauthClientRead" : {
        "properties" : {
          "callback_url" : {
            "description" : "The callback URLs which are bound to this Oauth Client",
            "items" : {
              "$ref" : "#/components/schemas/OauthCallbackUrl"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "client_id" : {
            "description" : "The Client ID associated with this Oauth Client",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The display name of this Oauth Client",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "Id of the client.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "secret" : {
            "description" : "Secret associated with this Oauth Client",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the pack group, can be ACTIVE, CANCELLED or CANCELLED_PENDING.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "OauthClientUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "Payment" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "allow_bunqto" : {
            "description" : "Whether or not sending a bunq.to payment is allowed.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : true
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the Payment.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "balance_after_mutation" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "batch_id" : {
            "description" : "The id of the PaymentBatch if this Payment was part of one.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "bunqto_expiry" : {
            "description" : "When bunq.to payment is about to expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_share_url" : {
            "description" : "The status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_status" : {
            "description" : "The status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_sub_status" : {
            "description" : "The sub status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_time_responded" : {
            "description" : "The timestamp of when the bunq.to payment was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp when the Payment was done.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the created Payment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "Optional data included with the Payment specific to the merchant.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the Payment was made to or from (depending on whether this is an incoming or outgoing Payment).",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_auto_allocate_instance" : {
            "$ref" : "#/components/schemas/PaymentAutoAllocateInstance"
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "scheduled_id" : {
            "description" : "The id of the JobScheduled if the Payment was scheduled.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The sub-type of the Payment, can be PAYMENT, WITHDRAWAL, REVERSAL, REQUEST, BILLING, SCT, SDD or NLO.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of Payment, can be BUNQ, EBA_SCT, EBA_SDD, IDEAL, SWIFT or FIS (card).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the Payment was last updated (will be updated when chat messages are received).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocate" : {
        "properties" : {
          "definition" : {
            "description" : "The definition of how the money should be allocated.",
            "items" : {
              "$ref" : "#/components/schemas/PaymentAutoAllocateDefinition"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "payment_id" : {
            "description" : "The payment that should be used to define the triggers for the payment auto allocate.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "type" : {
            "description" : "Whether a payment should be sorted ONCE or RECURRING.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "payment_id", "type", "definition" ],
        "type" : "object"
      },
      "PaymentAutoAllocateCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateDefinition" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "created" : {
            "description" : "The timestamp when the PaymentAutoAllocateDefinition was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the payment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "fraction" : {
            "description" : "The percentage of the triggering payment's amount to allocate.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the PaymentAutoAllocateDefinition.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of definition.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "updated" : {
            "description" : "The timestamp when the PaymentAutoAllocateDefinition was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "PaymentAutoAllocateDefinitionListing" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "created" : {
            "description" : "The timestamp when the PaymentAutoAllocateDefinition was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "fraction" : {
            "description" : "The percentage of the triggering payment's amount to allocate.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the PaymentAutoAllocateDefinition.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the PaymentAutoAllocateDefinition was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateDelete" : {
        "type" : "object"
      },
      "PaymentAutoAllocateInstance" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp when the PaymentAutoAllocateInstance was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "error_message" : {
            "description" : "The error message, if the payment auto allocating failed.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the PaymentAutoAllocateInstance.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_auto_allocate_id" : {
            "description" : "The ID of the payment auto allocate this instance belongs to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_batch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          },
          "payment_id" : {
            "description" : "The ID of the payment that triggered the allocating of the payments.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the payment auto allocate instance. SUCCEEDED or FAILED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the PaymentAutoAllocateInstance was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateInstanceListing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp when the PaymentAutoAllocateInstance was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "error_message" : {
            "description" : "The error message, if the payment auto allocating failed.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the PaymentAutoAllocateInstance.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_auto_allocate_id" : {
            "description" : "The ID of the payment auto allocate this instance belongs to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_batch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          },
          "payment_id" : {
            "description" : "The ID of the payment that triggered the allocating of the payments.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the payment auto allocate instance. SUCCEEDED or FAILED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the PaymentAutoAllocateInstance was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateInstanceRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp when the PaymentAutoAllocateInstance was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "error_message" : {
            "description" : "The error message, if the payment auto allocating failed.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the PaymentAutoAllocateInstance.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_auto_allocate_id" : {
            "description" : "The ID of the payment auto allocate this instance belongs to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_batch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          },
          "payment_id" : {
            "description" : "The ID of the payment that triggered the allocating of the payments.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the payment auto allocate instance. SUCCEEDED or FAILED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the PaymentAutoAllocateInstance was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateListing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp when the PaymentAutoAllocate was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the PaymentAutoAllocate.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "status" : {
            "description" : "The status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "trigger_amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "type" : {
            "description" : "The type.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the PaymentAutoAllocate was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp when the PaymentAutoAllocate was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the PaymentAutoAllocate.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "status" : {
            "description" : "The status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "trigger_amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "type" : {
            "description" : "The type.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the PaymentAutoAllocate was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PaymentAutoAllocateUserListing" : {
        "properties" : {
          "PaymentAutoAllocate" : {
            "$ref" : "#/components/schemas/PaymentAutoAllocate"
          }
        },
        "type" : "object"
      },
      "PaymentBatch" : {
        "properties" : {
          "payments" : {
            "$ref" : "#/components/schemas/PaymentBatchAnchoredPayment"
          }
        },
        "type" : "object"
      },
      "PaymentBatchAnchoredPayment" : {
        "properties" : {
          "Payment" : {
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/Payment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PaymentBatchListing" : {
        "properties" : {
          "payments" : {
            "$ref" : "#/components/schemas/PaymentBatchAnchoredPayment"
          }
        },
        "type" : "object"
      },
      "PaymentBatchRead" : {
        "properties" : {
          "payments" : {
            "$ref" : "#/components/schemas/PaymentBatchAnchoredPayment"
          }
        },
        "type" : "object"
      },
      "PaymentBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PaymentCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the created Payment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentListing" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the Payment.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "balance_after_mutation" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "batch_id" : {
            "description" : "The id of the PaymentBatch if this Payment was part of one.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "bunqto_expiry" : {
            "description" : "When bunq.to payment is about to expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_share_url" : {
            "description" : "The status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_status" : {
            "description" : "The status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_sub_status" : {
            "description" : "The sub status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_time_responded" : {
            "description" : "The timestamp of when the bunq.to payment was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp when the Payment was done.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the created Payment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "Optional data included with the Payment specific to the merchant.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the Payment was made to or from (depending on whether this is an incoming or outgoing Payment).",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_auto_allocate_instance" : {
            "$ref" : "#/components/schemas/PaymentAutoAllocateInstance"
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "scheduled_id" : {
            "description" : "The id of the JobScheduled if the Payment was scheduled.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The sub-type of the Payment, can be PAYMENT, WITHDRAWAL, REVERSAL, REQUEST, BILLING, SCT, SDD or NLO.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of Payment, can be BUNQ, EBA_SCT, EBA_SDD, IDEAL, SWIFT or FIS (card).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the Payment was last updated (will be updated when chat messages are received).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentRead" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the Payment.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "balance_after_mutation" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "batch_id" : {
            "description" : "The id of the PaymentBatch if this Payment was part of one.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "bunqto_expiry" : {
            "description" : "When bunq.to payment is about to expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_share_url" : {
            "description" : "The status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_status" : {
            "description" : "The status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_sub_status" : {
            "description" : "The sub status of the bunq.to payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bunqto_time_responded" : {
            "description" : "The timestamp of when the bunq.to payment was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp when the Payment was done.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the created Payment.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "Optional data included with the Payment specific to the merchant.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the Payment was made to or from (depending on whether this is an incoming or outgoing Payment).",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "payment_auto_allocate_instance" : {
            "$ref" : "#/components/schemas/PaymentAutoAllocateInstance"
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "scheduled_id" : {
            "description" : "The id of the JobScheduled if the Payment was scheduled.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The sub-type of the Payment, can be PAYMENT, WITHDRAWAL, REVERSAL, REQUEST, BILLING, SCT, SDD or NLO.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of Payment, can be BUNQ, EBA_SCT, EBA_SDD, IDEAL, SWIFT or FIS (card).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the Payment was last updated (will be updated when chat messages are received).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentServiceProviderCredential" : {
        "properties" : {
          "client_payment_service_provider_certificate" : {
            "description" : "Payment Services Directive 2 compatible QSEAL certificate",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "client_payment_service_provider_certificate_chain" : {
            "description" : "Intermediate and root certificate belonging to the provided certificate.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "client_public_key_signature" : {
            "description" : "The Base64 encoded signature of the public key provided during installation and with the installation token appended as a nonce. Signed with the private key belonging to the QSEAL certificate.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "client_payment_service_provider_certificate", "client_payment_service_provider_certificate_chain", "client_public_key_signature" ],
        "type" : "object"
      },
      "PaymentServiceProviderCredentialCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PaymentServiceProviderCredentialRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the credential object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_time" : {
            "description" : "When the status is PENDING_FIRST_USE: when the credential expires.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the credential.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "permitted_device" : {
            "$ref" : "#/components/schemas/PermittedDevice"
          },
          "status" : {
            "description" : "The status of the credential.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "token_value" : {
            "description" : "When the status is PENDING_FIRST_USE: the value of the token.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the credential object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentServiceProviderDraftPayment" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_iban" : {
            "description" : "The IBAN of the counterparty.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "counterparty_name" : {
            "description" : "The name of the counterparty.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "description" : {
            "description" : "Description of the payment.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "sender_iban" : {
            "description" : "The IBAN of the sender.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sender_name" : {
            "description" : "The name of the sender.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "status" : {
            "description" : "The new status of the Draft Payment. Can only be set to REJECTED or CANCELLED by update.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "sender_iban", "counterparty_iban", "counterparty_name", "description", "amount" ],
        "type" : "object"
      },
      "PaymentServiceProviderDraftPaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PaymentServiceProviderDraftPaymentListing" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "receiver_iban" : {
            "description" : "The sender IBAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sender_iban" : {
            "description" : "The sender IBAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the draft payment",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentServiceProviderDraftPaymentRead" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "receiver_iban" : {
            "description" : "The sender IBAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sender_iban" : {
            "description" : "The sender IBAN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the draft payment",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PaymentServiceProviderDraftPaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PermittedDevice" : {
        "properties" : {
          "description" : {
            "description" : "The description of the device that may use the credential.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "ip" : {
            "description" : "The IP address of the device that may use the credential.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PermittedIp" : {
        "properties" : {
          "ip" : {
            "description" : "The IP address.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the IP. May be \"ACTIVE\" or \"INACTIVE\". It is only possible to make requests from \"ACTIVE\" IP addresses. Only \"ACTIVE\" IPs will be billed.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "ip" ],
        "type" : "object"
      },
      "PermittedIpCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PermittedIpListing" : {
        "properties" : {
          "ip" : {
            "description" : "The IP address.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the IP. May be \"ACTIVE\" or \"INACTIVE\". It is only possible to make requests from \"ACTIVE\" IP addresses. Only \"ACTIVE\" IPs will be billed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PermittedIpRead" : {
        "properties" : {
          "ip" : {
            "description" : "The IP address.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the IP. May be \"ACTIVE\" or \"INACTIVE\". It is only possible to make requests from \"ACTIVE\" IP addresses. Only \"ACTIVE\" IPs will be billed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "PermittedIpUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "PlacePhotoLookupContentListing" : {
        "type" : "object"
      },
      "Pointer" : {
        "properties" : {
          "name" : {
            "description" : "The alias name.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "service" : {
            "description" : "The pointer service. Only required for external counterparties.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "type" : {
            "description" : "The alias type, can be: EMAIL|PHONE_NUMBER|IBAN.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "value" : {
            "description" : "The alias value.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RegistryMembership" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "auto_add_card_transaction" : {
            "description" : "The setting for for adding automatically card transactions to the registry.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "balance" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "invitor" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "registry_id" : {
            "description" : "The registry id.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "registry_title" : {
            "description" : "The registry title.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the RegistryMembership.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "status_settlement" : {
            "description" : "The status of the settlement of the Registry. Can be PENDING or SETTLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "total_amount_spent" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "uuid" : {
            "description" : "The UUID of the membership.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RegistrySettlement" : {
        "type" : "object"
      },
      "RegistrySettlementCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "RegistrySettlementItem" : {
        "properties" : {
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "membership_paying" : {
            "$ref" : "#/components/schemas/RegistryMembership"
          },
          "membership_receiving" : {
            "$ref" : "#/components/schemas/RegistryMembership"
          },
          "paying_user_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "receiving_user_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          }
        },
        "type" : "object"
      },
      "RegistrySettlementListing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the RegistrySettlement's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the RegistrySettlement.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "items" : {
            "description" : "List of RegistrySettlementItems",
            "items" : {
              "$ref" : "#/components/schemas/RegistrySettlementItem"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "membership_settled" : {
            "$ref" : "#/components/schemas/RegistryMembership"
          },
          "number_of_entries" : {
            "description" : "The number of RegistryEntry's associated with this RegistrySettlement.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "settled_by_alias" : {
            "$ref" : "#/components/schemas/RegistryMembership"
          },
          "settlement_time" : {
            "description" : "The timestamp of the Registry's settlement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "total_amount_spent" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "updated" : {
            "description" : "The timestamp of the RegistrySettlement's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RegistrySettlementRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the RegistrySettlement's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the RegistrySettlement.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "items" : {
            "description" : "List of RegistrySettlementItems",
            "items" : {
              "$ref" : "#/components/schemas/RegistrySettlementItem"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "membership_settled" : {
            "$ref" : "#/components/schemas/RegistryMembership"
          },
          "number_of_entries" : {
            "description" : "The number of RegistryEntry's associated with this RegistrySettlement.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "settled_by_alias" : {
            "$ref" : "#/components/schemas/RegistryMembership"
          },
          "settlement_time" : {
            "description" : "The timestamp of the Registry's settlement.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "total_amount_spent" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "updated" : {
            "description" : "The timestamp of the RegistrySettlement's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RelationUser" : {
        "properties" : {
          "counter_label_user" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "counter_user_id" : {
            "description" : "The counter user's ID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counter_user_status" : {
            "description" : "The account status of a user",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "label_user" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "relationship" : {
            "description" : "The requested relation type.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The request's status, only for UPDATE.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_id" : {
            "description" : "The user's ID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_status" : {
            "description" : "The account status of a user",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RequestInquiry" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "allow_amount_higher" : {
            "description" : "[DEPRECATED] Whether or not the accepting user can choose to accept with a higher amount than requested. Defaults to false.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : true
          },
          "allow_amount_lower" : {
            "description" : "[DEPRECATED] Whether or not the accepting user can choose to accept with a lower amount than requested. Defaults to false.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : true
          },
          "allow_bunqme" : {
            "description" : "Whether or not sending a bunq.me request is allowed.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : true
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The attachments attached to the payment.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "batch_id" : {
            "description" : "The id of the batch if the request was part of a batch.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "bunqme_share_url" : {
            "description" : "The url that points to the bunq.me request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the payment request's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the inquiry.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "event_id" : {
            "description" : "The ID of the associated event if the request was made using 'split the bill'.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the created RequestInquiry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "The client's custom reference that was attached to the request and the mutation.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestInquiry must have.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the request response applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to after accepting or rejecting the Request.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "reference_split_the_bill" : {
            "$ref" : "#/components/schemas/RequestReferenceSplitTheBillAnchorObject"
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "scheduled_id" : {
            "description" : "The id of the scheduled job if the request was scheduled.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the request.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the payment request expired.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the payment request was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the payment request's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "user_alias_revoked" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "want_tip" : {
            "description" : "[DEPRECATED] Whether or not the accepting user can give an extra tip on top of the requested Amount. Defaults to false.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : true
          }
        },
        "required" : [ "allow_bunqme" ],
        "type" : "object"
      },
      "RequestInquiryBatch" : {
        "properties" : {
          "event_id" : {
            "description" : "The ID of the associated event if the request batch was made using 'split the bill'.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "reference_split_the_bill" : {
            "$ref" : "#/components/schemas/RequestReferenceSplitTheBillAnchorObject"
          },
          "request_inquiries" : {
            "description" : "The list of requests that were made.",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiry"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the request.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "total_amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          }
        },
        "type" : "object"
      },
      "RequestInquiryBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "RequestInquiryBatchListing" : {
        "properties" : {
          "reference_split_the_bill" : {
            "$ref" : "#/components/schemas/RequestReferenceSplitTheBillAnchorObject"
          },
          "request_inquiries" : {
            "description" : "The list of requests that were made.",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "total_amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          }
        },
        "type" : "object"
      },
      "RequestInquiryBatchRead" : {
        "properties" : {
          "reference_split_the_bill" : {
            "$ref" : "#/components/schemas/RequestReferenceSplitTheBillAnchorObject"
          },
          "request_inquiries" : {
            "description" : "The list of requests that were made.",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "total_amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          }
        },
        "type" : "object"
      },
      "RequestInquiryBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "RequestInquiryCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the created RequestInquiry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RequestInquiryListing" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The attachments attached to the payment.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "batch_id" : {
            "description" : "The id of the batch if the request was part of a batch.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "bunqme_share_url" : {
            "description" : "The url that points to the bunq.me request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the payment request's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the inquiry.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the created RequestInquiry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "The client's custom reference that was attached to the request and the mutation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestInquiry must have.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the request response applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to after accepting or rejecting the Request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reference_split_the_bill" : {
            "$ref" : "#/components/schemas/RequestReferenceSplitTheBillAnchorObject"
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "scheduled_id" : {
            "description" : "The id of the scheduled job if the request was scheduled.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the payment request expired.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the payment request was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the payment request's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "user_alias_revoked" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "RequestInquiryRead" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The attachments attached to the payment.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "batch_id" : {
            "description" : "The id of the batch if the request was part of a batch.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "bunqme_share_url" : {
            "description" : "The url that points to the bunq.me request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the payment request's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the inquiry.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the created RequestInquiry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "The client's custom reference that was attached to the request and the mutation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestInquiry must have.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the request response applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to after accepting or rejecting the Request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reference_split_the_bill" : {
            "$ref" : "#/components/schemas/RequestReferenceSplitTheBillAnchorObject"
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "scheduled_id" : {
            "description" : "The id of the scheduled job if the request was scheduled.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the payment request expired.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the payment request was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the payment request's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "user_alias_revoked" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "RequestInquiryReference" : {
        "properties" : {
          "id" : {
            "description" : "The id of the request inquiry (batch).",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of request inquiry. Can be RequestInquiry or RequestInquiryBatch.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RequestInquiryUpdate" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The attachments attached to the payment.",
            "items" : {
              "$ref" : "#/components/schemas/BunqId"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "batch_id" : {
            "description" : "The id of the batch if the request was part of a batch.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the payment request's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of the inquiry.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the payment request.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "The client's custom reference that was attached to the request and the mutation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestInquiry must have.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the request response applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "reference_split_the_bill" : {
            "$ref" : "#/components/schemas/RequestReferenceSplitTheBillAnchorObject"
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "scheduled_id" : {
            "description" : "The id of the scheduled job if the request was scheduled.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the payment request expired.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the payment request was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the payment request's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "user_alias_revoked" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "RequestReferenceSplitTheBillAnchorObject" : {
        "properties" : {
          "BillingInvoice" : {
            "$ref" : "#/components/schemas/Invoice"
          },
          "DraftPayment" : {
            "$ref" : "#/components/schemas/DraftPayment"
          },
          "MasterCardAction" : {
            "$ref" : "#/components/schemas/MasterCardAction"
          },
          "Payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "PaymentBatch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          },
          "RequestResponse" : {
            "$ref" : "#/components/schemas/RequestResponse"
          },
          "ScheduleInstance" : {
            "$ref" : "#/components/schemas/ScheduleInstance"
          },
          "TransferwisePayment" : {
            "$ref" : "#/components/schemas/TransferwiseTransfer"
          },
          "WhitelistResult" : {
            "$ref" : "#/components/schemas/WhitelistResult"
          }
        },
        "type" : "object"
      },
      "RequestResponse" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the RequestResponse.",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp when the Request Response was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme id provided by the counterparty for DIRECT_DEBIT inquiries.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "eligible_whitelist_id" : {
            "description" : "The whitelist id for this action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "event_id" : {
            "description" : "The ID of the latest event for the request.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the Request Response.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate id provided by the counterparty for DIRECT_DEBIT inquiries.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestResponse must have.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the RequestResponse was received on.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to after accepting or rejecting the Request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the RequestResponse. Can be ACCEPTED, PENDING, REJECTED, REFUND_REQUESTED, REFUNDED or REVOKED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The subtype of the RequestInquiry. Can be ONCE or RECURRING for DIRECT_DEBIT RequestInquiries and NONE for all other.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the RequestResponse expired or will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_refund_requested" : {
            "description" : "The timestamp of when a refund request for the RequestResponse was claimed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_refunded" : {
            "description" : "The timestamp of when the RequestResponse was refunded.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the RequestResponse was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the RequestInquiry. Can be DIRECT_DEBIT, DIRECT_DEBIT_B2B, IDEAL, SOFORT or INTERNAL.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the Request Response was last updated (will be updated when chat messages are received).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_refund_requested" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "RequestResponseListing" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the RequestResponse.",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp when the Request Response was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme id provided by the counterparty for DIRECT_DEBIT inquiries.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "eligible_whitelist_id" : {
            "description" : "The whitelist id for this action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "event_id" : {
            "description" : "The ID of the latest event for the request.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the Request Response.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate id provided by the counterparty for DIRECT_DEBIT inquiries.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestResponse must have.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the RequestResponse was received on.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to after accepting or rejecting the Request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the RequestResponse. Can be ACCEPTED, PENDING, REJECTED, REFUND_REQUESTED, REFUNDED or REVOKED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The subtype of the RequestInquiry. Can be ONCE or RECURRING for DIRECT_DEBIT RequestInquiries and NONE for all other.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the RequestResponse expired or will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_refund_requested" : {
            "description" : "The timestamp of when a refund request for the RequestResponse was claimed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_refunded" : {
            "description" : "The timestamp of when the RequestResponse was refunded.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the RequestResponse was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the RequestInquiry. Can be DIRECT_DEBIT, DIRECT_DEBIT_B2B, IDEAL, SOFORT or INTERNAL.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the Request Response was last updated (will be updated when chat messages are received).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_refund_requested" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "RequestResponseRead" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the RequestResponse.",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp when the Request Response was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme id provided by the counterparty for DIRECT_DEBIT inquiries.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "eligible_whitelist_id" : {
            "description" : "The whitelist id for this action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "event_id" : {
            "description" : "The ID of the latest event for the request.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the Request Response.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate id provided by the counterparty for DIRECT_DEBIT inquiries.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestResponse must have.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the RequestResponse was received on.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to after accepting or rejecting the Request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the RequestResponse. Can be ACCEPTED, PENDING, REJECTED, REFUND_REQUESTED, REFUNDED or REVOKED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The subtype of the RequestInquiry. Can be ONCE or RECURRING for DIRECT_DEBIT RequestInquiries and NONE for all other.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the RequestResponse expired or will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_refund_requested" : {
            "description" : "The timestamp of when a refund request for the RequestResponse was claimed.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_refunded" : {
            "description" : "The timestamp of when the RequestResponse was refunded.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the RequestResponse was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the RequestInquiry. Can be DIRECT_DEBIT, DIRECT_DEBIT_B2B, IDEAL, SOFORT or INTERNAL.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp when the Request Response was last updated (will be updated when chat messages are received).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_refund_requested" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "RequestResponseUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "RewardListing" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RewardRead" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RewardRecipient" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RewardRecipientListing" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RewardRecipientRead" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RewardSender" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RewardSenderListing" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "RewardSenderRead" : {
        "properties" : {
          "amount_reward" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "created" : {
            "description" : "The time the reward was created.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the reward.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the reward.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The time the reward was last updated.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SandboxUserCompany" : {
        "type" : "object"
      },
      "SandboxUserCompanyCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "SandboxUserPerson" : {
        "type" : "object"
      },
      "SandboxUserPersonCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "Schedule" : {
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/ScheduleAnchorObject"
          },
          "recurrence_size" : {
            "description" : "The schedule recurrence size. For example size 4 and unit WEEKLY means the recurrence is every 4 weeks.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "recurrence_unit" : {
            "description" : "The schedule recurrence unit, options: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_end" : {
            "description" : "The schedule end time (UTC).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start" : {
            "description" : "The schedule start time (UTC).",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ScheduleAnchorObject" : {
        "properties" : {
          "Payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "PaymentBatch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          }
        },
        "type" : "object"
      },
      "ScheduleInstance" : {
        "properties" : {
          "error_message" : {
            "description" : "The message when the scheduled instance has run and failed due to user error.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "result_object" : {
            "$ref" : "#/components/schemas/ScheduleInstanceAnchorObject"
          },
          "scheduled_object" : {
            "$ref" : "#/components/schemas/ScheduleAnchorObject"
          },
          "state" : {
            "description" : "The state of the scheduleInstance. (FINISHED_SUCCESSFULLY, RETRY, FAILED_USER_ERROR)",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "time_end" : {
            "description" : "The schedule end time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start" : {
            "description" : "The schedule start time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ScheduleInstanceAnchorObject" : {
        "properties" : {
          "Payment" : {
            "$ref" : "#/components/schemas/Payment"
          },
          "PaymentBatch" : {
            "$ref" : "#/components/schemas/PaymentBatch"
          }
        },
        "type" : "object"
      },
      "ScheduleInstanceListing" : {
        "properties" : {
          "error_message" : {
            "description" : "The message when the scheduled instance has run and failed due to user error.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "result_object" : {
            "$ref" : "#/components/schemas/ScheduleInstanceAnchorObject"
          },
          "scheduled_object" : {
            "$ref" : "#/components/schemas/ScheduleAnchorObject"
          },
          "state" : {
            "description" : "The state of the scheduleInstance. (FINISHED_SUCCESSFULLY, RETRY, FAILED_USER_ERROR)",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_end" : {
            "description" : "The schedule end time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start" : {
            "description" : "The schedule start time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ScheduleInstanceRead" : {
        "properties" : {
          "error_message" : {
            "description" : "The message when the scheduled instance has run and failed due to user error.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "result_object" : {
            "$ref" : "#/components/schemas/ScheduleInstanceAnchorObject"
          },
          "scheduled_object" : {
            "$ref" : "#/components/schemas/ScheduleAnchorObject"
          },
          "state" : {
            "description" : "The state of the scheduleInstance. (FINISHED_SUCCESSFULLY, RETRY, FAILED_USER_ERROR)",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_end" : {
            "description" : "The schedule end time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start" : {
            "description" : "The schedule start time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ScheduleInstanceUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "ScheduleListing" : {
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/ScheduleAnchorObject"
          },
          "recurrence_size" : {
            "description" : "The schedule recurrence size. For example size 4 and unit WEEKLY means the recurrence is every 4 weeks.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "recurrence_unit" : {
            "description" : "The schedule recurrence unit, options: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_end" : {
            "description" : "The schedule end time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start" : {
            "description" : "The schedule start time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SchedulePayment" : {
        "properties" : {
          "payment" : {
            "$ref" : "#/components/schemas/SchedulePaymentEntry"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "status" : {
            "description" : "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SchedulePaymentBatch" : {
        "properties" : {
          "payments" : {
            "description" : "The payment details.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulePaymentEntry"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          }
        },
        "type" : "object"
      },
      "SchedulePaymentBatchCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "SchedulePaymentBatchDelete" : {
        "type" : "object"
      },
      "SchedulePaymentBatchRead" : {
        "properties" : {
          "payments" : {
            "description" : "The payment details.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulePaymentEntry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          }
        },
        "type" : "object"
      },
      "SchedulePaymentBatchUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "SchedulePaymentCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "SchedulePaymentDelete" : {
        "type" : "object"
      },
      "SchedulePaymentEntry" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "allow_bunqto" : {
            "description" : "Whether or not sending a bunq.to payment is allowed.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : true
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the Payment.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "description" : {
            "description" : "The description for the Payment. Maximum 140 characters for Payments to external IBANs, 9000 characters for Payments to only other bunq MonetaryAccounts.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "Optional data included with the Payment specific to the merchant.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SchedulePaymentListing" : {
        "properties" : {
          "payment" : {
            "$ref" : "#/components/schemas/SchedulePaymentEntry"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "status" : {
            "description" : "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SchedulePaymentRead" : {
        "properties" : {
          "payment" : {
            "$ref" : "#/components/schemas/SchedulePaymentEntry"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/Schedule"
          },
          "status" : {
            "description" : "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SchedulePaymentUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "ScheduleRead" : {
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/ScheduleAnchorObject"
          },
          "recurrence_size" : {
            "description" : "The schedule recurrence size. For example size 4 and unit WEEKLY means the recurrence is every 4 weeks.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "recurrence_unit" : {
            "description" : "The schedule recurrence unit, options: ONCE, HOURLY, DAILY, WEEKLY, MONTHLY, YEARLY",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The schedule status, options: ACTIVE, FINISHED, CANCELLED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_end" : {
            "description" : "The schedule end time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_start" : {
            "description" : "The schedule start time (UTC).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ScheduleUserListing" : {
        "type" : "object"
      },
      "ServerError" : {
        "type" : "object"
      },
      "ServerErrorCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "SessionDelete" : {
        "type" : "object"
      },
      "SessionServer" : {
        "properties" : {
          "secret" : {
            "description" : "The API key of the user you want to login. If your API key has not been used before, it will be bound to the ip address of this DeviceServer.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "secret" ],
        "type" : "object"
      },
      "SessionServerCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          },
          "Token" : {
            "$ref" : "#/components/schemas/SessionServerToken"
          },
          "UserApiKey" : {
            "$ref" : "#/components/schemas/UserApiKey"
          },
          "UserCompany" : {
            "$ref" : "#/components/schemas/UserCompany"
          },
          "UserPaymentServiceProvider" : {
            "$ref" : "#/components/schemas/UserPaymentServiceProvider"
          },
          "UserPerson" : {
            "$ref" : "#/components/schemas/UserPerson"
          }
        },
        "type" : "object"
      },
      "SessionServerToken" : {
        "properties" : {
          "id" : {
            "description" : "The id of the Token.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "token" : {
            "description" : "The Session token is the token the client has to provide in the \"X-Bunq-Client-Authentication\" header for each API call that requires a Session (only the creation of a Installation and DeviceServer don't require a Session).",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ShareDetail" : {
        "properties" : {
          "draft_payment" : {
            "$ref" : "#/components/schemas/ShareDetailDraftPayment"
          },
          "payment" : {
            "$ref" : "#/components/schemas/ShareDetailPayment"
          },
          "read_only" : {
            "$ref" : "#/components/schemas/ShareDetailReadOnly"
          }
        },
        "type" : "object"
      },
      "ShareDetailDraftPayment" : {
        "properties" : {
          "make_draft_payments" : {
            "description" : "If set to true, the invited user will be able to make draft payments from the shared account.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_balance" : {
            "description" : "If set to true, the invited user will be able to view the account balance.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_new_events" : {
            "description" : "If set to true, the invited user will be able to view events starting from the time the share became active.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_old_events" : {
            "description" : "If set to true, the invited user will be able to view events from before the share was active.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ShareDetailPayment" : {
        "properties" : {
          "make_draft_payments" : {
            "description" : "If set to true, the invited user will be able to make draft payments from the shared account.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "make_payments" : {
            "description" : "If set to true, the invited user will be able to make payments from the shared account.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_balance" : {
            "description" : "If set to true, the invited user will be able to view the account balance.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_new_events" : {
            "description" : "If set to true, the invited user will be able to view events starting from the time the share became active.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_old_events" : {
            "description" : "If set to true, the invited user will be able to view events from before the share was active.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ShareDetailReadOnly" : {
        "properties" : {
          "view_balance" : {
            "description" : "If set to true, the invited user will be able to view the account balance.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_new_events" : {
            "description" : "If set to true, the invited user will be able to view events starting from the time the share became active.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          },
          "view_old_events" : {
            "description" : "If set to true, the invited user will be able to view events from before the share was active.",
            "readOnly" : false,
            "type" : "boolean",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountInquiry" : {
        "properties" : {
          "access_type" : {
            "description" : "Type of access that is in place.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "counter_user_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "draft_share_invite_bank_id" : {
            "description" : "DEPRECATED: USE `access_type` INSTEAD | The id of the draft share invite bank.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "end_date" : {
            "description" : "DEPRECATED: USE `access_type` INSTEAD | The expiration date of this share.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "id" : {
            "description" : "The id of the newly created share invite.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the share applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "relationship" : {
            "description" : "The relationship: COMPANY_DIRECTOR, COMPANY_EMPLOYEE, etc",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "share_detail" : {
            "$ref" : "#/components/schemas/ShareDetail"
          },
          "share_type" : {
            "description" : "DEPRECATED: USE `access_type` INSTEAD | The share type, either STANDARD or MUTUAL.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "start_date" : {
            "description" : "DEPRECATED: USE `access_type` INSTEAD | The start date of this share.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "status" : {
            "description" : "The status of the share. Can be ACTIVE, REVOKED, REJECTED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "user_alias_revoked" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountInquiryCreate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the newly created share invite.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountInquiryListing" : {
        "properties" : {
          "access_type" : {
            "description" : "Type of access that is in place.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "counter_user_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "id" : {
            "description" : "The id of the newly created share invite.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the share applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "relationship" : {
            "description" : "The relationship: COMPANY_DIRECTOR, COMPANY_EMPLOYEE, etc",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the share. Can be ACTIVE, REVOKED, REJECTED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "user_alias_revoked" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountInquiryRead" : {
        "properties" : {
          "access_type" : {
            "description" : "Type of access that is in place.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "counter_user_alias" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "id" : {
            "description" : "The id of the newly created share invite.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the share applies to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "relationship" : {
            "description" : "The relationship: COMPANY_DIRECTOR, COMPANY_EMPLOYEE, etc",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the share. Can be ACTIVE, REVOKED, REJECTED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "user_alias_revoked" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountInquiryUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountResponse" : {
        "properties" : {
          "access_type" : {
            "description" : "Type of access that is wanted, one of VIEW_BALANCE, VIEW_TRANSACTION, DRAFT_PAYMENT or FULL_TRANSIENT",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "card_id" : {
            "description" : "The card to link to the shared monetary account. Used only if share_detail is ShareDetailCardPayment.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "counter_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the ShareInviteBankResponse creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of this share. It is basically the monetary account description.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "draft_share_invite_bank_id" : {
            "description" : "The id of the draft share invite bank.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "end_date" : {
            "description" : "The expiration date of this share.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the ShareInviteBankResponse.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the ACCEPTED share applies to. null otherwise.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "relation_user" : {
            "$ref" : "#/components/schemas/RelationUser"
          },
          "share_detail" : {
            "$ref" : "#/components/schemas/ShareDetail"
          },
          "share_type" : {
            "description" : "The share type, either STANDARD or MUTUAL.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "start_date" : {
            "description" : "The start date of this share.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the share. Can be ACTIVE, REVOKED, REJECTED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the ShareInviteBankResponse last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_cancelled" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountResponseListing" : {
        "properties" : {
          "access_type" : {
            "description" : "Type of access that is wanted, one of VIEW_BALANCE, VIEW_TRANSACTION, DRAFT_PAYMENT or FULL_TRANSIENT",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counter_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the ShareInviteBankResponse creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of this share. It is basically the monetary account description.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "draft_share_invite_bank_id" : {
            "description" : "The id of the draft share invite bank.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "end_date" : {
            "description" : "The expiration date of this share.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the ShareInviteBankResponse.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the ACCEPTED share applies to. null otherwise.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "relation_user" : {
            "$ref" : "#/components/schemas/RelationUser"
          },
          "share_detail" : {
            "$ref" : "#/components/schemas/ShareDetail"
          },
          "share_type" : {
            "description" : "The share type, either STANDARD or MUTUAL.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "start_date" : {
            "description" : "The start date of this share.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the share. Can be ACTIVE, REVOKED, REJECTED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the ShareInviteBankResponse last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_cancelled" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountResponseRead" : {
        "properties" : {
          "access_type" : {
            "description" : "Type of access that is wanted, one of VIEW_BALANCE, VIEW_TRANSACTION, DRAFT_PAYMENT or FULL_TRANSIENT",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counter_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "created" : {
            "description" : "The timestamp of the ShareInviteBankResponse creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "description" : {
            "description" : "The description of this share. It is basically the monetary account description.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "draft_share_invite_bank_id" : {
            "description" : "The id of the draft share invite bank.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "end_date" : {
            "description" : "The expiration date of this share.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the ShareInviteBankResponse.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the ACCEPTED share applies to. null otherwise.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "relation_user" : {
            "$ref" : "#/components/schemas/RelationUser"
          },
          "share_detail" : {
            "$ref" : "#/components/schemas/ShareDetail"
          },
          "share_type" : {
            "description" : "The share type, either STANDARD or MUTUAL.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "start_date" : {
            "description" : "The start date of this share.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the share. Can be ACTIVE, REVOKED, REJECTED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the ShareInviteBankResponse last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_cancelled" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "ShareInviteMonetaryAccountResponseUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "SofortMerchantTransaction" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_guaranteed" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_requested" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "error_message" : {
            "description" : "The error message of the transaction.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "issuer" : {
            "description" : "The BIC of the issuer.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_authentication_url" : {
            "description" : "The URL to visit to ",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this sofort merchant transaction links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transaction_identifier" : {
            "description" : "The 'transaction ID' of the Sofort transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SofortMerchantTransactionListing" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_guaranteed" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_requested" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "error_message" : {
            "description" : "The error message of the transaction.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "issuer" : {
            "description" : "The BIC of the issuer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_authentication_url" : {
            "description" : "The URL to visit to ",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this sofort merchant transaction links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transaction_identifier" : {
            "description" : "The 'transaction ID' of the Sofort transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "SofortMerchantTransactionRead" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_guaranteed" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_requested" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "error_message" : {
            "description" : "The error message of the transaction.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "issuer" : {
            "description" : "The BIC of the issuer.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "issuer_authentication_url" : {
            "description" : "The URL to visit to ",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account this sofort merchant transaction links to.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "transaction_identifier" : {
            "description" : "The 'transaction ID' of the Sofort transaction.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TaxResident" : {
        "properties" : {
          "country" : {
            "description" : "The country of the tax number.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the tax number. Either CONFIRMED or UNCONFIRMED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "tax_number" : {
            "description" : "The tax number.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TokenQrRequestIdeal" : {
        "properties" : {
          "token" : {
            "description" : "The token passed from a site or read from a QR code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "token" ],
        "type" : "object"
      },
      "TokenQrRequestIdealCreate" : {
        "properties" : {
          "address_billing" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_shipping" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_inquired" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_responded" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the RequestResponse.",
            "items" : {
              "$ref" : "#/components/schemas/Attachment"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "description" : {
            "description" : "The description for the RequestResponse provided by the requesting party. Maximum 9000 characters.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "eligible_whitelist_id" : {
            "description" : "The whitelist id for this action or null.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "geolocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "id" : {
            "description" : "The id of the RequestResponse.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "minimum_age" : {
            "description" : "The minimum age the user accepting the RequestResponse must have.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_id" : {
            "description" : "The id of the MonetaryAccount the RequestResponse was received on.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "redirect_url" : {
            "description" : "The URL which the user is sent to after accepting or rejecting the Request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "require_address" : {
            "description" : "Whether or not an address must be provided on accept.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the created RequestResponse. Can only be PENDING.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_type" : {
            "description" : "The subtype of the RequestResponse. Can be only be NONE.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The timestamp of when the RequestResponse expired or will expire.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_responded" : {
            "description" : "The timestamp of when the RequestResponse was responded to.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the RequestResponse. Can be only be IDEAL.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TokenQrRequestSofort" : {
        "properties" : {
          "token" : {
            "description" : "The token passed from a site or read from a QR code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "token" ],
        "type" : "object"
      },
      "TokenQrRequestSofortCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseAccountQuote" : {
        "properties" : {
          "country" : {
            "description" : "The country of the receiving account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "detail" : {
            "description" : "The fields which were specified as \"required\" and have since been filled by the user. Always provide the full list.",
            "items" : {
              "$ref" : "#/components/schemas/TransferwiseRequirementField"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "name_account_holder" : {
            "description" : "The name of the account holder.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The chosen recipient account type. The possible options are provided dynamically in the response endpoint.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "name_account_holder", "type" ],
        "type" : "object"
      },
      "TransferwiseAccountQuoteCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseAccountQuoteDelete" : {
        "type" : "object"
      },
      "TransferwiseAccountQuoteListing" : {
        "properties" : {
          "account_id" : {
            "description" : "Transferwise's id of the account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "account_number" : {
            "description" : "The account number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bank_code" : {
            "description" : "The bank code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country" : {
            "description" : "The country of the account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency the account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "name_account_holder" : {
            "description" : "The name of the account holder.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseAccountQuoteRead" : {
        "properties" : {
          "account_id" : {
            "description" : "Transferwise's id of the account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "account_number" : {
            "description" : "The account number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "bank_code" : {
            "description" : "The bank code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country" : {
            "description" : "The country of the account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency the account.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "name_account_holder" : {
            "description" : "The name of the account holder.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseAccountRequirement" : {
        "properties" : {
          "country" : {
            "description" : "The country of the receiving account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "detail" : {
            "description" : "The fields which were specified as \"required\" and have since been filled by the user. Always provide the full list.",
            "items" : {
              "$ref" : "#/components/schemas/TransferwiseRequirementField"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "name_account_holder" : {
            "description" : "The name of the account holder.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "type" : {
            "description" : "The chosen recipient account type. The possible options are provided dynamically in the response endpoint.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "name_account_holder", "type" ],
        "type" : "object"
      },
      "TransferwiseAccountRequirementCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseAccountRequirementListing" : {
        "properties" : {
          "fields" : {
            "description" : "The fields which the user needs to fill.",
            "items" : {
              "$ref" : "#/components/schemas/TransferwiseRequirementField"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "label" : {
            "description" : "The label of the possible recipient account type to show to the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "A possible recipient account type.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseCurrencyListing" : {
        "properties" : {
          "country" : {
            "description" : "The country code associated with the currency.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency" : {
            "description" : "The currency code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The currency name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseQuote" : {
        "properties" : {
          "amount_fee" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the quote's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "currency_source" : {
            "description" : "The source currency.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "currency_target" : {
            "description" : "The target currency.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "id" : {
            "description" : "The id of the quote.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "quote_id" : {
            "description" : "The quote id Transferwise needs.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "rate" : {
            "description" : "The rate.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_delivery_estimate" : {
            "description" : "The estimated delivery time.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The expiration timestamp of the quote.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the quote's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "currency_source", "currency_target" ],
        "type" : "object"
      },
      "TransferwiseQuoteCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseQuoteRead" : {
        "properties" : {
          "amount_fee" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the quote's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the quote.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "quote_id" : {
            "description" : "The quote id Transferwise needs.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "rate" : {
            "description" : "The rate.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_delivery_estimate" : {
            "description" : "The estimated delivery time.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The expiration timestamp of the quote.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the quote's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseQuoteTemporary" : {
        "properties" : {
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "currency_source" : {
            "description" : "The source currency.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "currency_target" : {
            "description" : "The target currency.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "currency_source", "currency_target" ],
        "type" : "object"
      },
      "TransferwiseQuoteTemporaryCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseQuoteTemporaryRead" : {
        "properties" : {
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "created" : {
            "description" : "The timestamp of the note's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the quote.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "quote_id" : {
            "description" : "The quote id Transferwise needs. Will always be null for temporary quotes.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "rate" : {
            "description" : "The rate.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_expiry" : {
            "description" : "The expiration timestamp of the quote. Will always be null for temporary quotes.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the note's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseRequirementField" : {
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/TransferwiseRequirementFieldGroup"
          },
          "key" : {
            "description" : "The name of the required field.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "name" : {
            "description" : "The descriptive label of the field.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "value" : {
            "description" : "The value of the required field.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "key", "value" ],
        "type" : "object"
      },
      "TransferwiseRequirementFieldGroup" : {
        "properties" : {
          "display_format" : {
            "description" : "Formatting mask to guide user input.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "example" : {
            "description" : "An example value for this field.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "key" : {
            "description" : "The key of the field. This is the value to send as input.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "max_length" : {
            "description" : "The maximum length of the field's value.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "min_length" : {
            "description" : "The minimum length of the field's value.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The field name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "refresh_requirements_on_change" : {
            "description" : "Indicates that any changes in this field affect the requirements, if this field is changed, the requirements endpoint must be called again to recheck if there are any additional requirements.",
            "readOnly" : true,
            "type" : "boolean",
            "writeOnly" : false
          },
          "required" : {
            "description" : "Whether or not the field is required.",
            "readOnly" : true,
            "type" : "boolean",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The field's input type: \"text\", \"select\" or \"radio\".",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "validation_async" : {
            "$ref" : "#/components/schemas/TransferwiseRequirementFieldGroupValidationAsync"
          },
          "validation_regexp" : {
            "description" : "A regular expression which may be used to validate the user input.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "values_allowed" : {
            "$ref" : "#/components/schemas/TransferwiseRequirementFieldGroupValuesAllowed"
          }
        },
        "type" : "object"
      },
      "TransferwiseRequirementFieldGroupValidationAsync" : {
        "properties" : {
          "params" : {
            "$ref" : "#/components/schemas/TransferwiseRequirementFieldGroupValidationAsyncParams"
          },
          "url" : {
            "description" : "The url to be used to validate user input.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseRequirementFieldGroupValidationAsyncParams" : {
        "properties" : {
          "key" : {
            "description" : "The parameter key.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "parameter_name" : {
            "description" : "The parameter label.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "required" : {
            "description" : "Shows whether the parameter is required or not.",
            "readOnly" : true,
            "type" : "boolean",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseRequirementFieldGroupValuesAllowed" : {
        "properties" : {
          "key" : {
            "description" : "The key.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The label.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseTransfer" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "monetary_account_id" : {
            "description" : "The id of the monetary account the payment should be made from.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "pay_in_reference" : {
            "description" : "The Pay-In reference of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "quote" : {
            "$ref" : "#/components/schemas/TransferwiseQuote"
          },
          "rate" : {
            "description" : "The rate of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "recipient_id" : {
            "description" : "The id of the target account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "reference" : {
            "description" : "The reference of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_transferwise" : {
            "description" : "The status as Transferwise reports it.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_transferwise_issue" : {
            "description" : "A status to indicatie if Transferwise has an issue with this payment and requires more information.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_delivery_estimate" : {
            "description" : "The estimated delivery time.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "monetary_account_id", "recipient_id" ],
        "type" : "object"
      },
      "TransferwiseTransferCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseTransferListing" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "pay_in_reference" : {
            "description" : "The Pay-In reference of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "quote" : {
            "$ref" : "#/components/schemas/TransferwiseQuote"
          },
          "rate" : {
            "description" : "The rate of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reference" : {
            "description" : "The reference of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_transferwise" : {
            "description" : "The status as Transferwise reports it.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_transferwise_issue" : {
            "description" : "A status to indicatie if Transferwise has an issue with this payment and requires more information.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_delivery_estimate" : {
            "description" : "The estimated delivery time.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseTransferRead" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount_source" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "amount_target" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "pay_in_reference" : {
            "description" : "The Pay-In reference of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "quote" : {
            "$ref" : "#/components/schemas/TransferwiseQuote"
          },
          "rate" : {
            "description" : "The rate of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "reference" : {
            "description" : "The reference of the payment.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_transferwise" : {
            "description" : "The status as Transferwise reports it.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status_transferwise_issue" : {
            "description" : "A status to indicatie if Transferwise has an issue with this payment and requires more information.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "time_delivery_estimate" : {
            "description" : "The estimated delivery time.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TransferwiseTransferRequirement" : {
        "properties" : {
          "detail" : {
            "description" : "The fields which were specified as \"required\" and have since been filled by the user. Always provide the full list.",
            "items" : {
              "$ref" : "#/components/schemas/TransferwiseRequirementField"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : true
          },
          "recipient_id" : {
            "description" : "The id of the target account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "recipient_id" ],
        "type" : "object"
      },
      "TransferwiseTransferRequirementCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseUser" : {
        "properties" : {
          "oauth_code" : {
            "description" : "The OAuth code returned by Transferwise we should be using to gain access to the user's Transferwise account.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          }
        },
        "type" : "object"
      },
      "TransferwiseUserCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TransferwiseUserListing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the TransferwiseUser's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "email" : {
            "description" : "The email the user is registered with at TransferWise.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the TransferwiseUser.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The name the user is registered with at TransferWise.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "source" : {
            "description" : "The source of the user at TransferWise.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the TransferwiseUser's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TranslinkTransaction" : {
        "properties" : {
          "description" : {
            "description" : "Description of the payment request.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "payments" : {
            "description" : "The list of payments we want to send in a single transaction.",
            "items" : {
              "$ref" : "#/components/schemas/Payment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "reference" : {
            "description" : "The request reference.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "Type of transaction, can be TRIP, REFUND, WITHDRAWAL or TOP_UP.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "required" : [ "type", "reference", "description", "payments" ],
        "type" : "object"
      },
      "TranslinkTransactionCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "TranslinkTransactionEntry" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "attachment" : {
            "description" : "The Attachments attached to the payment.",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentMonetaryAccountPayment"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "description" : {
            "description" : "The description for the payment. Maximum 140 characters for payments to external IBANs, 9000 characters for payments to only other bunq MonetaryAccounts.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the payment entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "merchant_reference" : {
            "description" : "Optional data to be included with the Payment specific to the merchant.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the payment entry.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TranslinkTransactionListing" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "Description of the payment request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "entries" : {
            "description" : "The list of entries in the transaction.",
            "items" : {
              "$ref" : "#/components/schemas/TranslinkTransactionEntry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "failure_reason" : {
            "description" : "The reason why the transaction FAILED processing.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "payments" : {
            "$ref" : "#/components/schemas/PaymentBatchAnchoredPayment"
          },
          "reference" : {
            "description" : "The request reference.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction. Can be CREATED, SETTLED or FAILED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "Type of transaction, can be TRIP, REFUND, WITHDRAWAL or TOP_UP.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TranslinkTransactionRead" : {
        "properties" : {
          "alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "description" : {
            "description" : "Description of the payment request.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "entries" : {
            "description" : "The list of entries in the transaction.",
            "items" : {
              "$ref" : "#/components/schemas/TranslinkTransactionEntry"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "failure_reason" : {
            "description" : "The reason why the transaction FAILED processing.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "payments" : {
            "$ref" : "#/components/schemas/PaymentBatchAnchoredPayment"
          },
          "reference" : {
            "description" : "The request reference.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the transaction. Can be CREATED, SETTLED or FAILED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "Type of transaction, can be TRIP, REFUND, WITHDRAWAL or TOP_UP.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "TreeProgressListing" : {
        "properties" : {
          "label_user" : {
            "$ref" : "#/components/schemas/LabelUser"
          },
          "number_of_tree" : {
            "description" : "The number of trees this user and all users have planted.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "progress_tree_next" : {
            "description" : "The progress towards the next tree.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "url_invite_profile" : {
            "description" : "URL of the invite profile.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "Ubo" : {
        "properties" : {
          "date_of_birth" : {
            "description" : "The date of birth of the ultimate beneficiary owner.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The name of the ultimate beneficiary owner.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "nationality" : {
            "description" : "The nationality of the ultimate beneficiary owner.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserApiKey" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the user object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "granted_by_user" : {
            "$ref" : "#/components/schemas/UserApiKeyAnchoredUser"
          },
          "id" : {
            "description" : "The id of the user.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "requested_by_user" : {
            "$ref" : "#/components/schemas/UserApiKeyAnchoredUser"
          },
          "updated" : {
            "description" : "The timestamp of the user object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserApiKeyAnchoredUser" : {
        "properties" : {
          "UserCompany" : {
            "$ref" : "#/components/schemas/UserCompany"
          },
          "UserPaymentServiceProvider" : {
            "$ref" : "#/components/schemas/UserPaymentServiceProvider"
          },
          "UserPerson" : {
            "$ref" : "#/components/schemas/UserPerson"
          }
        },
        "type" : "object"
      },
      "UserCompany" : {
        "properties" : {
          "address_main" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_postal" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "description" : "The aliases of the account.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "avatar_uuid" : {
            "description" : "The public UUID of the company's avatar.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "billing_contract" : {
            "description" : "The subscription of the company.",
            "items" : {
              "$ref" : "#/components/schemas/BillingContractSubscription"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "counter_bank_iban" : {
            "description" : "The company's other bank account IBAN, through which we verify it.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country" : {
            "description" : "The country as an ISO 3166-1 alpha-2 country code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the company object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "customer_limit" : {
            "$ref" : "#/components/schemas/CustomerLimit"
          },
          "daily_limit_without_confirmation_login" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "deny_reason" : {
            "description" : "The user deny reason.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "directors" : {
            "description" : "The existing bunq aliases for the company's directors.",
            "items" : {
              "$ref" : "#/components/schemas/LabelUser"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The company's display name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the modified company.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "language" : {
            "description" : "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "legal_form" : {
            "description" : "The company's legal form.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The company name.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "notification_filters" : {
            "description" : "The types of notifications that will result in a push notification or URL callback for this UserCompany.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilter"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "public_nick_name" : {
            "description" : "The company's public nick name.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The company's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "region" : {
            "description" : "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "relations" : {
            "description" : "The relations for this user.",
            "items" : {
              "$ref" : "#/components/schemas/RelationUser"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "sector_of_industry" : {
            "description" : "The sector of industry.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "session_timeout" : {
            "description" : "The setting for the session timeout of the company in seconds.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The user status. Can be: ACTIVE, SIGNUP, RECOVERY.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "tax_resident" : {
            "description" : "The user's tax residence numbers for different countries.",
            "items" : {
              "$ref" : "#/components/schemas/TaxResident"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "type_of_business_entity" : {
            "description" : "The type of business entity.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "ubo" : {
            "description" : "The names of the company's ultimate beneficiary owners. Minimum zero, maximum four.",
            "items" : {
              "$ref" : "#/components/schemas/Ubo"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the company object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "version_terms_of_service" : {
            "description" : "The version of the terms of service accepted by the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserCompanyNameListing" : {
        "properties" : {
          "name_array" : {
            "description" : "All known (trade) names for a user company.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserCompanyRead" : {
        "properties" : {
          "address_main" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_postal" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "description" : "The aliases of the account.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "billing_contract" : {
            "description" : "The subscription of the company.",
            "items" : {
              "$ref" : "#/components/schemas/BillingContractSubscription"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "chamber_of_commerce_number" : {
            "description" : "The company's chamber of commerce number.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "counter_bank_iban" : {
            "description" : "The company's other bank account IBAN, through which we verify it.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "country" : {
            "description" : "The country as an ISO 3166-1 alpha-2 country code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the company object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "customer_limit" : {
            "$ref" : "#/components/schemas/CustomerLimit"
          },
          "daily_limit_without_confirmation_login" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "deny_reason" : {
            "description" : "The user deny reason.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "directors" : {
            "description" : "The existing bunq aliases for the company's directors.",
            "items" : {
              "$ref" : "#/components/schemas/LabelUser"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The company's display name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the modified company.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "language" : {
            "description" : "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "legal_form" : {
            "description" : "The company's legal form.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "name" : {
            "description" : "The company name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "notification_filters" : {
            "description" : "The types of notifications that will result in a push notification or URL callback for this UserCompany.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilter"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "public_nick_name" : {
            "description" : "The company's public nick name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The company's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "region" : {
            "description" : "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "relations" : {
            "description" : "The relations for this user.",
            "items" : {
              "$ref" : "#/components/schemas/RelationUser"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "sector_of_industry" : {
            "description" : "The sector of industry.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "session_timeout" : {
            "description" : "The setting for the session timeout of the company in seconds.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The user status. Can be: ACTIVE, SIGNUP, RECOVERY.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "tax_resident" : {
            "description" : "The user's tax residence numbers for different countries.",
            "items" : {
              "$ref" : "#/components/schemas/TaxResident"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "type_of_business_entity" : {
            "description" : "The type of business entity.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "ubo" : {
            "description" : "The names of the company's ultimate beneficiary owners. Minimum zero, maximum four.",
            "items" : {
              "$ref" : "#/components/schemas/Ubo"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the company object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "version_terms_of_service" : {
            "description" : "The version of the terms of service accepted by the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserCompanyUpdate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the modified company.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserCredentialPasswordIpListing" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the credential object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_time" : {
            "description" : "When the status is PENDING_FIRST_USE: when the credential expires.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the credential.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "permitted_device" : {
            "$ref" : "#/components/schemas/PermittedDevice"
          },
          "status" : {
            "description" : "The status of the credential.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "token_value" : {
            "description" : "When the status is PENDING_FIRST_USE: the value of the token.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the credential object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserCredentialPasswordIpRead" : {
        "properties" : {
          "created" : {
            "description" : "The timestamp of the credential object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "expiry_time" : {
            "description" : "When the status is PENDING_FIRST_USE: when the credential expires.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the credential.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "permitted_device" : {
            "$ref" : "#/components/schemas/PermittedDevice"
          },
          "status" : {
            "description" : "The status of the credential.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "token_value" : {
            "description" : "When the status is PENDING_FIRST_USE: the value of the token.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the credential object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserLegalNameListing" : {
        "properties" : {
          "legal_names" : {
            "description" : "All legal names that can be used by the user",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserListing" : {
        "properties" : {
          "UserApiKey" : {
            "$ref" : "#/components/schemas/UserApiKey"
          },
          "UserCompany" : {
            "$ref" : "#/components/schemas/UserCompany"
          },
          "UserPaymentServiceProvider" : {
            "$ref" : "#/components/schemas/UserPaymentServiceProvider"
          },
          "UserPerson" : {
            "$ref" : "#/components/schemas/UserPerson"
          }
        },
        "type" : "object"
      },
      "UserPaymentServiceProvider" : {
        "properties" : {
          "alias" : {
            "description" : "The aliases of the user.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "certificate_distinguished_name" : {
            "description" : "The distinguished name from the certificate used to identify this user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the user object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The display name for the provider.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the user.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "language" : {
            "description" : "The provider's language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_nick_name" : {
            "description" : "The public nick name for the provider.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The providers's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "region" : {
            "description" : "The provider's region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "session_timeout" : {
            "description" : "The setting for the session timeout of the user in seconds.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The user status. The user status. Can be: ACTIVE, BLOCKED or DENIED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The user sub-status. Can be: NONE",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the user object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserPaymentServiceProviderRead" : {
        "properties" : {
          "alias" : {
            "description" : "The aliases of the user.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "certificate_distinguished_name" : {
            "description" : "The distinguished name from the certificate used to identify this user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the user object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The display name for the provider.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the user.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "language" : {
            "description" : "The provider's language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_nick_name" : {
            "description" : "The public nick name for the provider.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The providers's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "region" : {
            "description" : "The provider's region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "session_timeout" : {
            "description" : "The setting for the session timeout of the user in seconds.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The user status. The user status. Can be: ACTIVE, BLOCKED or DENIED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The user sub-status. Can be: NONE",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the user object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserPerson" : {
        "properties" : {
          "address_main" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_postal" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "description" : "The aliases of the user.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "avatar_uuid" : {
            "description" : "The public UUID of the user's avatar.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "country_of_birth" : {
            "description" : "The person's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the person object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit_without_confirmation_login" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "date_of_birth" : {
            "description" : "The person's date of birth. Accepts ISO8601 date formats.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The display name for the person.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "document_back_attachment_id" : {
            "description" : "The reference to the uploaded picture/scan of the back side of the identification document.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "document_country_of_issuance" : {
            "description" : "The country which issued the identification document the person registered with.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "document_front_attachment_id" : {
            "description" : "The reference to the uploaded picture/scan of the front side of the identification document.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          },
          "document_number" : {
            "description" : "The identification document number the person registered with.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "document_type" : {
            "description" : "The type of identification document the person registered with.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "first_name" : {
            "description" : "The person's first name.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "gender" : {
            "description" : "The person's gender. Can be MALE, FEMALE or UNKNOWN.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the modified person object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "language" : {
            "description" : "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "last_name" : {
            "description" : "The person's last name.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "legal_guardian_alias" : {
            "$ref" : "#/components/schemas/Pointer"
          },
          "legal_name" : {
            "description" : "The person's legal name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "middle_name" : {
            "description" : "The person's middle name.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "nationality" : {
            "description" : "The person's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "notification_filters" : {
            "description" : "The types of notifications that will result in a push notification or URL callback for this UserPerson.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilter"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "place_of_birth" : {
            "description" : "The person's place of birth.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_nick_name" : {
            "description" : "The public nick name for the person.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The person's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "region" : {
            "description" : "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "relations" : {
            "description" : "The relations for this user.",
            "items" : {
              "$ref" : "#/components/schemas/RelationUser"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "session_timeout" : {
            "description" : "The setting for the session timeout of the user in seconds.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "signup_track_type" : {
            "description" : "The type of signup track the user is following.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "status" : {
            "description" : "The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, RECOVERY, DENIED or ABORTED.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : false
          },
          "subscription_type" : {
            "description" : "The subscription type the user should start on.",
            "readOnly" : false,
            "type" : "string",
            "writeOnly" : true
          },
          "tax_resident" : {
            "description" : "The user's tax residence numbers for different countries.",
            "items" : {
              "$ref" : "#/components/schemas/TaxResident"
            },
            "readOnly" : false,
            "type" : "array",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the person object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "version_terms_of_service" : {
            "description" : "The version of the terms of service accepted by the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserPersonRead" : {
        "properties" : {
          "address_main" : {
            "$ref" : "#/components/schemas/Address"
          },
          "address_postal" : {
            "$ref" : "#/components/schemas/Address"
          },
          "alias" : {
            "description" : "The aliases of the user.",
            "items" : {
              "$ref" : "#/components/schemas/Pointer"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "avatar" : {
            "$ref" : "#/components/schemas/Avatar"
          },
          "country_of_birth" : {
            "description" : "The person's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "created" : {
            "description" : "The timestamp of the person object's creation.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "daily_limit_without_confirmation_login" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "date_of_birth" : {
            "description" : "The person's date of birth. Accepts ISO8601 date formats.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "display_name" : {
            "description" : "The display name for the person.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "first_name" : {
            "description" : "The person's first name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "gender" : {
            "description" : "The person's gender. Can be MALE, FEMALE or UNKNOWN.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The id of the modified person object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "language" : {
            "description" : "The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "last_name" : {
            "description" : "The person's last name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "legal_name" : {
            "description" : "The person's legal name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "middle_name" : {
            "description" : "The person's middle name.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "nationality" : {
            "description" : "The person's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "notification_filters" : {
            "description" : "The types of notifications that will result in a push notification or URL callback for this UserPerson.",
            "items" : {
              "$ref" : "#/components/schemas/NotificationFilter"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "place_of_birth" : {
            "description" : "The person's place of birth.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_nick_name" : {
            "description" : "The public nick name for the person.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "public_uuid" : {
            "description" : "The person's public UUID.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "region" : {
            "description" : "The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "relations" : {
            "description" : "The relations for this user.",
            "items" : {
              "$ref" : "#/components/schemas/RelationUser"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "session_timeout" : {
            "description" : "The setting for the session timeout of the user in seconds.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, RECOVERY, DENIED or ABORTED.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "tax_resident" : {
            "description" : "The user's tax residence numbers for different countries.",
            "items" : {
              "$ref" : "#/components/schemas/TaxResident"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "updated" : {
            "description" : "The timestamp of the person object's last update.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "version_terms_of_service" : {
            "description" : "The version of the terms of service accepted by the user.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserPersonUpdate" : {
        "properties" : {
          "id" : {
            "description" : "The id of the modified person object.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          }
        },
        "type" : "object"
      },
      "UserRead" : {
        "properties" : {
          "UserApiKey" : {
            "$ref" : "#/components/schemas/UserApiKey"
          },
          "UserCompany" : {
            "$ref" : "#/components/schemas/UserCompany"
          },
          "UserPaymentServiceProvider" : {
            "$ref" : "#/components/schemas/UserPaymentServiceProvider"
          },
          "UserPerson" : {
            "$ref" : "#/components/schemas/UserPerson"
          }
        },
        "type" : "object"
      },
      "Whitelist" : {
        "type" : "object"
      },
      "WhitelistResult" : {
        "properties" : {
          "error_message" : {
            "description" : "The message when the whitelist result has failed due to user error.",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "object" : {
            "$ref" : "#/components/schemas/WhitelistResultViewAnchoredObject"
          },
          "request_reference_split_the_bill" : {
            "description" : "The reference to the object used for split the bill. Can be RequestInquiry or RequestInquiryBatch",
            "items" : {
              "$ref" : "#/components/schemas/RequestInquiryReference"
            },
            "readOnly" : true,
            "type" : "array",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the WhitelistResult.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "sub_status" : {
            "description" : "The subStatus of the WhitelistResult.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "whitelist" : {
            "$ref" : "#/components/schemas/Whitelist"
          }
        },
        "type" : "object"
      },
      "WhitelistResultViewAnchoredObject" : {
        "properties" : {
          "draftPayment" : {
            "$ref" : "#/components/schemas/DraftPayment"
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "requestResponse" : {
            "$ref" : "#/components/schemas/RequestResponse"
          }
        },
        "type" : "object"
      },
      "WhitelistSddListing" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddMonetaryAccountPayingListing" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddMonetaryAccountPayingRead" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddOneOff" : {
        "properties" : {
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_paying_id" : {
            "description" : "ID of the monetary account of which you want to pay from.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "request_id" : {
            "description" : "ID of the request for which you want to whitelist the originating SDD.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          }
        },
        "required" : [ "monetary_account_paying_id", "request_id" ],
        "type" : "object"
      },
      "WhitelistSddOneOffCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "WhitelistSddOneOffDelete" : {
        "type" : "object"
      },
      "WhitelistSddOneOffListing" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddOneOffRead" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddOneOffUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "WhitelistSddRead" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddRecurring" : {
        "properties" : {
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_paying_id" : {
            "description" : "ID of the monetary account of which you want to pay from.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : false
          },
          "request_id" : {
            "description" : "ID of the request for which you want to whitelist the originating SDD.",
            "readOnly" : false,
            "type" : "integer",
            "writeOnly" : true
          }
        },
        "required" : [ "monetary_account_paying_id", "request_id" ],
        "type" : "object"
      },
      "WhitelistSddRecurringCreate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      },
      "WhitelistSddRecurringDelete" : {
        "type" : "object"
      },
      "WhitelistSddRecurringListing" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddRecurringRead" : {
        "properties" : {
          "counterparty_alias" : {
            "$ref" : "#/components/schemas/LabelMonetaryAccount"
          },
          "credit_scheme_identifier" : {
            "description" : "The credit scheme ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "id" : {
            "description" : "The ID of the whitelist entry.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "mandate_identifier" : {
            "description" : "The mandate ID provided by the counterparty.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "maximum_amount_per_month" : {
            "$ref" : "#/components/schemas/Amount"
          },
          "monetary_account_incoming_id" : {
            "description" : "The account to which payments will come in before possibly being 'redirected' by the whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "monetary_account_paying_id" : {
            "description" : "The account from which payments will be deducted when a transaction is matched with this whitelist.",
            "readOnly" : true,
            "type" : "integer",
            "writeOnly" : false
          },
          "status" : {
            "description" : "The status of the whitelist.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "type" : {
            "description" : "The type of the SDD whitelist, can be CORE or B2B.",
            "readOnly" : true,
            "type" : "string",
            "writeOnly" : false
          },
          "user_alias_created" : {
            "$ref" : "#/components/schemas/LabelUser"
          }
        },
        "type" : "object"
      },
      "WhitelistSddRecurringUpdate" : {
        "properties" : {
          "Id" : {
            "$ref" : "#/components/schemas/BunqId"
          }
        },
        "type" : "object"
      }
    }
  }
}