{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "opendatasoft",
    "version" : "2.1.0"
  },
  "servers" : [ {
    "url" : "https://public.opendatasoft.com/api/v2"
  } ],
  "security" : [ {
    "api_key" : null
  }, {
    "basic" : null
  } ],
  "tags" : [ {
    "name" : "root"
  }, {
    "name" : "metadata"
  }, {
    "name" : "catalog"
  }, {
    "name" : "export catalog"
  }, {
    "name" : "dataset"
  }, {
    "name" : "export dataset"
  } ],
  "paths" : {
    "/" : {
      "get" : {
        "tags" : [ "root", "ods" ],
        "description" : "API entry point\n\nProvides links for:\n* catalog, your domain's list of datasets\n* opendatasoft, all datasets on the Opendatasoft network\n",
        "operationId" : "getRoot",
        "responses" : {
          "200" : {
            "description" : "Provide a set of links to the most basic entry points in the API (sources)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages" : {
      "get" : {
        "tags" : [ "page", "ods" ],
        "description" : "List of all pages from this portal.\n",
        "operationId" : "getPages",
        "responses" : {
          "200" : {
            "description" : "List of all pages, each with their endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "pages" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "links" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/components/schemas/link"
                            }
                          },
                          "page" : {
                            "$ref" : "#/components/schemas/page"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pages/{slug}" : {
      "get" : {
        "tags" : [ "page", "ods" ],
        "description" : "A single page's metadata from this portal\n",
        "operationId" : "getPage",
        "parameters" : [ {
          "name" : "slug",
          "in" : "path",
          "description" : "Page slug.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A single page's metadata.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "page" : {
                      "$ref" : "#/components/schemas/page"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}" : {
      "get" : {
        "tags" : [ "catalog", "ods" ],
        "description" : "Source entry points\n\nProvides links for the source's datasets and metadata.\n",
        "operationId" : "getSource",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Provide a set of links to the basic entry points for the given source.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/aggregates" : {
      "get" : {
        "tags" : [ "catalog", "aggregations", "ods" ],
        "description" : "**Deprecated, use `/datasets` instead.**\n",
        "operationId" : "aggregateDatasets",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Aggregation result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "aggregations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/aggregation"
                      }
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets" : {
      "get" : {
        "tags" : [ "catalog", "ods" ],
        "description" : "List of available datasets, each with their endpoints, paginated.\n\nLinks provided:\n* previous page\n* next page\n* last page\n* first page\n",
        "operationId" : "getDatasets",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "Activate pretty print",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of available datasets",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "datasets" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "dataset" : {
                            "$ref" : "#/components/schemas/dataset"
                          },
                          "links" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/components/schemas/link"
                            }
                          }
                        }
                      }
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "total_count" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "List of available endpoints for the specified dataset, with metadata and endpoints.\n\nWill provide links for:\n* the attachments endpoint\n* the files endpoint\n* the records endpoint\n* the catalog endpoint\n",
        "operationId" : "getDataset",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "Activate pretty print",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The dataset",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "dataset" : {
                      "$ref" : "#/components/schemas/dataset"
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/aggregates" : {
      "get" : {
        "tags" : [ "dataset", "aggregations", "ods" ],
        "description" : "**Deprecated, use `/records` instead.**\n",
        "operationId" : "aggregateRecords",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Aggregation result",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "aggregations" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/aggregation"
                      }
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/attachments" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Get list of all available attachments\n",
        "operationId" : "getDatasetAttachements",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all available attachments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "attachments" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/attachment"
                      }
                    },
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/attachments/{attachment_id}" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Download attachment\n",
        "operationId" : "downloadDatasetAttachement",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachment_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested attachment"
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/exports/csv" : {
      "get" : {
        "tags" : [ "export dataset", "ods" ],
        "description" : "Export dataset in CSV format\n",
        "operationId" : "exportRecordsCSV",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
          "schema" : {
            "minimum" : -1,
            "type" : "integer",
            "default" : -1
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "delimiter",
          "in" : "query",
          "description" : "Provide a different delimiter (default ',').",
          "schema" : {
            "type" : "string",
            "default" : ";",
            "enum" : [ ",", ";", "|" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a CSV file",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/exports/geojson" : {
      "get" : {
        "tags" : [ "export dataset", "ods" ],
        "description" : "Export dataset in GEOJSON format\n",
        "operationId" : "exportRecordsGEOJSON",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
          "schema" : {
            "minimum" : -1,
            "type" : "integer",
            "default" : -1
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "Activate pretty print",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a GEOJSON file",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/exports/ical" : {
      "get" : {
        "tags" : [ "export dataset", "ods" ],
        "description" : "Export dataset in ICAL format\n",
        "operationId" : "exportRecordsICAL",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
          "schema" : {
            "minimum" : -1,
            "type" : "integer",
            "default" : -1
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return an ICAL file",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/exports/json" : {
      "get" : {
        "tags" : [ "export dataset", "ods" ],
        "description" : "Export dataset in JSON format\n",
        "operationId" : "exportRecordsJSON",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
          "schema" : {
            "minimum" : -1,
            "type" : "integer",
            "default" : -1
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "Activate pretty print",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a JSON file",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/exports/ov2" : {
      "get" : {
        "tags" : [ "export dataset", "ods" ],
        "description" : "Export dataset in OV2 format\n",
        "operationId" : "exportRecordsOV2",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
          "schema" : {
            "minimum" : -1,
            "type" : "integer",
            "default" : -1
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return an ov2 file",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/exports/shp" : {
      "get" : {
        "tags" : [ "export dataset", "ods" ],
        "description" : "Export dataset in Esri shapefile (shp) format\n",
        "operationId" : "exportRecordsSHP",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
          "schema" : {
            "minimum" : -1,
            "type" : "integer",
            "default" : -1
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a Shapefile zip",
            "content" : {
              "application/zip" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/exports/xls" : {
      "get" : {
        "tags" : [ "export dataset", "ods" ],
        "description" : "Export dataset in XLS (Excel) format\n",
        "operationId" : "exportRecordsXLS",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
          "schema" : {
            "minimum" : -1,
            "type" : "integer",
            "default" : -1
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return an XLS file",
            "content" : {
              "xls" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/facets" : {
      "get" : {
        "tags" : [ "dataset", "facet", "ods" ],
        "description" : "Enumerate facets values for records and return a list of values for each facet.\nCan be used to implement guided navigation in large result sets.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#enumerating-facets-values) for more details.\n",
        "operationId" : "getRecordsFacets",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Facets enumeration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "facets" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/facet_enumeration"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/feedback" : {
      "put" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Create new feedback entry.\n",
        "operationId" : "sendDatasetFeedback",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Feedback entry",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "comment" : {
                    "type" : "string"
                  },
                  "newValues" : {
                    "type" : "object",
                    "description" : "New record value"
                  },
                  "recordid" : {
                    "type" : "string",
                    "description" : "Feedback entry's recordid"
                  },
                  "schema" : {
                    "type" : "object",
                    "description" : "Record schema"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success message: {status: 'ok'}\n"
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/files/{file_id}" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Download file\n",
        "operationId" : "getDatasetFile",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "file_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "thumbnail_size",
          "in" : "query",
          "description" : "Set the size of the thumbnail representing the resource (attachment, image or file)",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested file, or its thumbnail (if thumbnail_size is specified)"
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/records" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Search dataset's records.\n",
        "operationId" : "getRecords",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "group_by",
          "in" : "query",
          "description" : "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "Activate pretty print",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Records",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "records" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "links" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/components/schemas/link"
                            }
                          },
                          "record" : {
                            "$ref" : "#/components/schemas/record"
                          }
                        }
                      }
                    },
                    "total_count" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/records/{record_id}" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Retrieve a single record based on its ID.\n",
        "operationId" : "getRecord",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "record_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "select",
          "in" : "query",
          "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "Activate pretty print",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A single record",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "record" : {
                      "$ref" : "#/components/schemas/record"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/reuses" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Get list of reuses\n",
        "operationId" : "getDatasetReuses",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paginated list of reuses\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "reuses" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/reuse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/reuses/{reuse_id}" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "Retrieve a single reuse based on its ID.\n",
        "operationId" : "getDatasetReuse",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reuse_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A paginated list of reuses\n",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "reuse" : {
                      "$ref" : "#/components/schemas/reuse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/snapshots" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "List of all snapshots for this dataset.\n",
        "operationId" : "getDatasetSnapshots",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all snapshots, each with their endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "snapshots" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/snapshot"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/datasets/{dataset_id}/snapshots/{snapshot_id}" : {
      "get" : {
        "tags" : [ "dataset", "ods" ],
        "description" : "List of all snapshots for this dataset.\n",
        "operationId" : "downloadDatasetSnapshot",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "dataset_id",
          "in" : "path",
          "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "snapshot_id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The full dataset in the state it was in when the snapshot was created, in CSV"
          }
        }
      }
    },
    "/{source}/exports/csv" : {
      "get" : {
        "tags" : [ "export catalog", "ods" ],
        "description" : "Export catalog (source) in CSV format\n",
        "operationId" : "exportDatasetsCSV",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "delimiter",
          "in" : "query",
          "description" : "Provide a different delimiter (default ',').",
          "schema" : {
            "type" : "string",
            "default" : ";",
            "enum" : [ ",", ";", "|" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a CSV file",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/exports/json" : {
      "get" : {
        "tags" : [ "export catalog", "ods" ],
        "description" : "Export catalog (source) in JSON format\n",
        "operationId" : "exportDatasetsJson",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "pretty",
          "in" : "query",
          "description" : "Activate pretty print",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a JSON file",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/exports/rdf" : {
      "get" : {
        "tags" : [ "export catalog", "ods" ],
        "description" : "Export catalog (source) in RDF/XML format\n",
        "operationId" : "exportDatasetsRDF",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a RDF XML file",
            "content" : {
              "application/rdf+xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/exports/rss" : {
      "get" : {
        "tags" : [ "export catalog", "ods" ],
        "description" : "Export catalog (source) in RSS format\n",
        "operationId" : "exportDatasetsRSS",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a JSON file",
            "content" : {
              "text/xml" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/exports/ttl" : {
      "get" : {
        "tags" : [ "export catalog", "ods" ],
        "description" : "Export catalog (source) in TTL (turtle/rdf) format\n",
        "operationId" : "exportDatasetsTTL",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a TTL file",
            "content" : {
              "text/turtle" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/exports/xls" : {
      "get" : {
        "tags" : [ "export catalog", "ods" ],
        "description" : "Export catalog (source) in XLS (Excel) format\n",
        "operationId" : "exportDatasetsXLS",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
          "schema" : {
            "maximum" : 100,
            "minimum" : -1,
            "type" : "integer",
            "default" : 10
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "default" : 0
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        }, {
          "name" : "include_app_metas",
          "in" : "query",
          "description" : "Explicitely request application metas for each datasets.\n",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Return an XLS file",
            "content" : {
              "xls" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/{source}/facets" : {
      "get" : {
        "tags" : [ "catalog", "facet", "ods" ],
        "description" : "Enumerate facets values for datasets and return a list of values for each facet.\nCan be used to implement guided navigation in large result sets.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#enumerating-facets-values) for more details.\n",
        "operationId" : "getDatasetsFacets",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "facet",
          "in" : "query",
          "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "refine",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "where",
          "in" : "query",
          "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "timezone",
          "in" : "query",
          "description" : "Set timezone for datetime fields",
          "schema" : {
            "type" : "string",
            "default" : "UTC"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Facets enumeration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "facets" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/facet_enumeration"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/metadata_templates" : {
      "get" : {
        "tags" : [ "metadata", "ods" ],
        "description" : "List of available metadata templates types, each with their endpoints.\n",
        "operationId" : "getMetadataTemplatesTypes",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of available metadata templates types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/metadata_templates/{metadata_template_type}" : {
      "get" : {
        "tags" : [ "metadata", "ods" ],
        "description" : "List of metadata templates available for this type.\n",
        "operationId" : "getMetadataTemplatesType",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "metadata_template_type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "basic",
            "enum" : [ "basic", "interop", "extra" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of metadata templates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "metadata_templates" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "links" : {
                            "type" : "array",
                            "items" : {
                              "$ref" : "#/components/schemas/link"
                            }
                          },
                          "metadata_template" : {
                            "$ref" : "#/components/schemas/metadata_template"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{source}/metadata_templates/{metadata_template_type}/{metadata_template_name}" : {
      "get" : {
        "tags" : [ "metadata", "ods" ],
        "description" : "A single metadata_template\n",
        "operationId" : "getMetadataTemplate",
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "catalog",
            "enum" : [ "catalog", "opendatasoft", "monitoring" ]
          }
        }, {
          "name" : "metadata_template_type",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "default" : "basic",
            "enum" : [ "basic", "interop", "extra" ]
          }
        }, {
          "name" : "metadata_template_name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A metadata template selected by ID.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "links" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/link"
                      }
                    },
                    "metadata_template" : {
                      "$ref" : "#/components/schemas/metadata_template"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "aggregation" : {
        "type" : "object",
        "description" : "Result of an aggregation request.",
        "example" : {
          "count(*)" : 86
        }
      },
      "attachment" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "metas" : {
            "type" : "object"
          }
        }
      },
      "dataset" : {
        "type" : "object",
        "properties" : {
          "attachments" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "data_visible" : {
            "type" : "boolean"
          },
          "dataset_id" : {
            "type" : "string"
          },
          "features" : {
            "type" : "array",
            "description" : "A map of available features for a dataset, with the fields they apply to.\n",
            "items" : {
              "type" : "string"
            }
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "annotations" : {
                  "type" : "object"
                },
                "description" : {
                  "type" : "string"
                },
                "label" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "has_records" : {
            "type" : "boolean"
          },
          "metas" : {
            "type" : "object"
          }
        }
      },
      "datasets" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/dataset"
        }
      },
      "facet_enumeration" : {
        "type" : "object",
        "properties" : {
          "facets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/facet_value_enumeration"
            }
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "facet_value_enumeration" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer"
          },
          "facets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/facet_value_enumeration"
            }
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "link" : {
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string"
          },
          "rel" : {
            "type" : "string"
          }
        }
      },
      "links" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/link"
        }
      },
      "metadata_template" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "page" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "title" : {
            "type" : "object",
            "properties" : {
              "en" : {
                "type" : "string"
              },
              "fr" : {
                "type" : "string"
              }
            },
            "description" : "A localized string (that is an object where the keys are language codes and the values translations of a same\nstring).\n"
          }
        }
      },
      "query_string" : {
        "type" : "string",
        "description" : "Query string using the query language.\nExample: (field1=\"value1\" or field1=\"value2\") and field2=value2 and \"full text search\"\n\nSupports geo queries with the following functions:\n* distance(myfield, center, radius): restrict entries to those where {myfield} is less than {radius} from {center} (center being defined 'lat,lon')\n* bbox(myfield, topleft, bottomright): restrict entries to those where {myfield} is within the bounds defined by the two sets of coordinates {topleft} and {bottomright}\n* polygon(myfield, mypolygon): restrict entries to those where {myfield} is within the bounds of {mypolygon}; {mypolygon} being a list of 'lat,lon' vertices\n* wkt(myfield, mywkt): restrict entries to those where {myfield} is within the body of {mywkt}; {mywkt} being a Well Known Text (see 'http://en.wikipedia.org/wiki/Well-known_text' for reference)\n"
      },
      "record" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "object"
          },
          "id" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "dateTime"
          }
        }
      },
      "records" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/record"
        }
      },
      "reuse" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "description" : "Date when the reuse was submitted.",
            "format" : "dateTime"
          },
          "description" : {
            "type" : "object",
            "description" : "Slightly longer description of what was achieved using the dataset."
          },
          "id" : {
            "type" : "string",
            "description" : "reuse id"
          },
          "thumbnail" : {
            "type" : "string",
            "description" : "URL illustrating the work."
          },
          "title" : {
            "type" : "string",
            "description" : "Short description of the user's work."
          },
          "url" : {
            "type" : "string",
            "description" : "URL where the work can be accessed publicly."
          },
          "user" : {
            "type" : "object",
            "properties" : {
              "first_name" : {
                "type" : "string"
              },
              "last_name" : {
                "type" : "string"
              },
              "username" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "snapshot" : {
        "type" : "object",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "dateTime"
          },
          "description" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string"
          },
          "snapshot_id" : {
            "type" : "string"
          }
        }
      },
      "timezone" : {
        "type" : "string",
        "description" : "A timezone\n\nIf used as a parameter, defines the timezone the calculations will be performed in. If left empty, 'UTC' is\nassumed.\n",
        "example" : "Europe/Paris"
      }
    },
    "parameters" : {
      "attachment_id" : {
        "name" : "attachment_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "dataset_id" : {
        "name" : "dataset_id",
        "in" : "path",
        "description" : "Dataset identifier.\n\nCan be found in the \"information\" tab of the dataset page.\n",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "exclude" : {
        "name" : "exclude",
        "in" : "query",
        "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will exclude the defined facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Excluding a facet value is equivalent to removing an entry in the left navigation panel.*\n\n*exclude is not available for monitoring sources*\n",
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "facet" : {
        "name" : "facet",
        "in" : "query",
        "description" : "A facet is a field used for simple filtering (through the parameters refine and exclude) or exploration (with the endpoint `/facets`).\n\nFacets can be configured in the back-office or with this parameter.\n\nRead [the facets documentation](https://help.opendatasoft.com/apis/ods-search-v2/#facets) for more details.\n",
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "file_id" : {
        "name" : "file_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "group_by" : {
        "name" : "group_by",
        "in" : "query",
        "description" : "A group by expression defines a grouping function for an aggregation.\nIt can be:\n - a field name: group result by each value of this field\n - a range function: group result by range\n - a date function: group result by date\nIt is possible to specify a custom name with the 'as name' notation. For instance: group_by='city_field as city'.\n",
        "schema" : {
          "type" : "string"
        }
      },
      "include_app_metas" : {
        "name" : "include_app_metas",
        "in" : "query",
        "description" : "Explicitely request application metas for each datasets.\n",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "limit" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Number of items to return.\n\nTo use in conjonction with offset to implement pagination.\n\nLimit maximum value is 100. To retrive more data use export entry points.\nThe default value is 10.\n",
        "schema" : {
          "maximum" : 100,
          "minimum" : -1,
          "type" : "integer",
          "default" : 10
        }
      },
      "limit_export" : {
        "name" : "limit",
        "in" : "query",
        "description" : "Number of items to return in export.\n\nUse -1 (default) to retrieve all records\n",
        "schema" : {
          "minimum" : -1,
          "type" : "integer",
          "default" : -1
        }
      },
      "metadata_template_name" : {
        "name" : "metadata_template_name",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "metadata_template_type" : {
        "name" : "metadata_template_type",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string",
          "default" : "basic",
          "enum" : [ "basic", "interop", "extra" ]
        }
      },
      "mime_type" : {
        "name" : "mime_type",
        "in" : "query",
        "description" : "Specify one (or many) mime type(s) and return only the files matching said type(s).",
        "schema" : {
          "type" : "string"
        }
      },
      "offset" : {
        "name" : "offset",
        "in" : "query",
        "description" : "Index of the first item to return (starting at 0).\n\nTo use in conjonction with limit to implement pagination.\n",
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "default" : 0
        }
      },
      "order_by" : {
        "name" : "order_by",
        "in" : "query",
        "description" : "A comma-separated list of field names or aggregations to sort on, followed by an order (`asc` or `desc`).\n\nSorts results according to the specified fields' values in ascending order by default.\nTo sort results in descending order, use the `desc` keyword.\n\nExample: `sum(age) desc, name asc`\n",
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "pretty" : {
        "name" : "pretty",
        "in" : "query",
        "description" : "Activate pretty print",
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "record_id" : {
        "name" : "record_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "refine" : {
        "name" : "refine",
        "in" : "query",
        "description" : "An array of facet filters. For example **city:Paris** or **modified:2019/12**.\nThe request will only include the selected facet value.\n\nRead [filtering with facets value](https://help.opendatasoft.com/apis/ods-search-v2/#filtering-with-facets-values) for more details.\n\n*Not to be confused with a where filter. Refining with a facet is equivalent to selecting an entry in the left navigation panel.*\n\n*refine is not available for monitoring sources*\n",
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "reuse_id" : {
        "name" : "reuse_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "search" : {
        "name" : "search",
        "in" : "query",
        "description" : "An array of full text search.\n\nA full text search performs a prefixed text search for each provided terms in all visible fields of a catalog/dataset.\n",
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "select" : {
        "name" : "select",
        "in" : "query",
        "description" : "A select expression can be used to add, remove or change fields to return.\nAn expression can be:\n  - a wildcard ('*'): return all fields\n  - a field name: return only this field\n  - an include/exclude function. Include (resp exclude) all field matching include/exclude expression. This expression can contain wildcard. For example: include(spa*) will return all fields begining with 'spa'\n  - a complex expression: return the result of this expression. A label can be set for this expression, in that case, field will be named with this label. For instance: 'size * 2 as bigger_size' will return a new field named bigger_size and containing the double of size field value.\n",
        "schema" : {
          "type" : "string"
        }
      },
      "slug" : {
        "name" : "slug",
        "in" : "path",
        "description" : "Page slug.\n",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "snapshot_id" : {
        "name" : "snapshot_id",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "sort" : {
        "name" : "sort",
        "in" : "query",
        "description" : "**Deprecated, use `order_by` instead.**\n\nA list of field names, each possibly prefixed with a minus (-).\n\nSorts results according to the specified fields' values. By default, the sort is ascending (from the smallest\nvalue to the biggest value). A minus sign (‘-‘) may be used to perform a descending sort. Sorting is only\navailable on numeric fields (int, double, date and datetime) and on text fields which have the sortable\nannotation.\n",
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "source" : {
        "name" : "source",
        "in" : "path",
        "description" : "Each source represents a different catalog of datasets you'll be able to query.\n\nThere are 2 sources available:\n\n* catalog: the catalog of datasets on your portal\n* opendatasoft: Opendatasoft's repository of public datasets, also available at\n  [data.opendatasoft.com](https://data.opendatasoft.com/page/home/)\n",
        "required" : true,
        "schema" : {
          "type" : "string",
          "default" : "catalog",
          "enum" : [ "catalog", "opendatasoft", "monitoring" ]
        }
      },
      "thumbnail_size" : {
        "name" : "thumbnail_size",
        "in" : "query",
        "description" : "Set the size of the thumbnail representing the resource (attachment, image or file)",
        "schema" : {
          "type" : "string"
        }
      },
      "timezone" : {
        "name" : "timezone",
        "in" : "query",
        "description" : "Set timezone for datetime fields",
        "schema" : {
          "type" : "string",
          "default" : "UTC"
        }
      },
      "where" : {
        "name" : "where",
        "in" : "query",
        "description" : "An array of filters.\n\nA filter is a text expression performing a simple full-text search that can also include logical operations\n(NOT, AND, OR...) as well as lots of other functions, thus performing more complex and more precise searches.\n\nRead [the query language reference](https://docs.opendatasoft.com/api/explore/v2.html#where-clause) for more details.\n",
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "apikey",
        "in" : "query"
      },
      "basic" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}